\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Jul 10 14:54:53 CEST 2017
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=5000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , permissions-permissions\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Mon Jul 10 14:54:53 CEST 2017
name=verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer\\:\\:postProcess([[B)].JML behavior operation contract.0
contract=verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer\\:\\:postProcess([[B)].JML behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mihai" ) (keyVersion "0814267c8a184b1e7da1309b7a9875095ca72975"))

(autoModeTime "5280")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "entr_arr,self,result,exc,heapAtPre,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "3"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "10") (term "1,0,0,1,0,1"))
(rule "assignment" (formula "10") (term "1"))
(builtin "One Step Simplification" (formula "10"))
(rule "nonNull" (formula "7") (inst "i=i"))
(rule "sub_literals" (formula "7") (term "2,1,0,1,1"))
(builtin "One Step Simplification" (formula "7"))
(rule "greater_literals" (formula "7") (term "0,1"))
(builtin "One Step Simplification" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "notLeft" (formula "7"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "8"))
(builtin "One Step Simplification" (formula "4"))
(rule "narrowSelectArrayType" (formula "7") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "8"))
(rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
(rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
(rule "nnf_imp2or" (formula "7") (term "0"))
(rule "nnf_notAnd" (formula "7") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
(rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "7") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
(rule "mul_literals" (formula "7") (term "1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
(rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
(rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "6") (ifseqformula "3"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "7"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "7"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "8"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "8"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "6"))
(rule "notLeft" (formula "6"))
(rule "nonNull" (formula "8") (inst "i=i"))
(rule "greater_literals" (formula "8") (term "0,1"))
(builtin "One Step Simplification" (formula "8"))
(rule "sub_literals" (formula "8") (term "2,1,0,1"))
(builtin "One Step Simplification" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "8"))
(rule "narrowSelectArrayType" (formula "8") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "10"))
(rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
(rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
(rule "nonNull" (formula "7") (inst "i=i"))
(rule "sub_literals" (formula "7") (term "2,1,0,1,1"))
(builtin "One Step Simplification" (formula "7"))
(rule "greater_literals" (formula "7") (term "0,1"))
(builtin "One Step Simplification" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "notLeft" (formula "7"))
(rule "narrowSelectArrayType" (formula "7") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "10"))
(rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
(rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
(rule "nonNull" (formula "6") (inst "i=i"))
(rule "greater_literals" (formula "6") (term "0,1"))
(builtin "One Step Simplification" (formula "6"))
(rule "sub_literals" (formula "6") (term "2,1,0,1"))
(builtin "One Step Simplification" (formula "6"))
(rule "andLeft" (formula "6"))
(rule "notLeft" (formula "6"))
(rule "narrowSelectArrayType" (formula "6") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "10"))
(rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "6") (term "1,1,0,0"))
(rule "mul_literals" (formula "6") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0"))
(rule "nnf_imp2or" (formula "8") (term "0"))
(rule "nnf_imp2or" (formula "7") (term "0"))
(rule "nnf_imp2or" (formula "6") (term "0"))
(rule "nnf_notAnd" (formula "8") (term "0,0"))
(rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
(rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
(rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
(rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
(rule "mul_literals" (formula "8") (term "1,0,0,0"))
(rule "nnf_notAnd" (formula "7") (term "0,0"))
(rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
(rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
(rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
(rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "7") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
(rule "mul_literals" (formula "7") (term "1,0,0,0"))
(rule "nnf_notAnd" (formula "6") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "6") (term "0,0,0"))
(rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "6") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
(rule "mul_literals" (formula "6") (term "1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "6") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0"))
(rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "6") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "6") (term "1,1,0,0"))
(rule "commute_or_2" (formula "9") (term "0"))
(rule "commute_or_2" (formula "8") (term "0"))
(rule "methodBodyExpand" (formula "22") (term "1") (newnames "heapBefore_postProcess,savedHeapBefore_postProcess"))
(builtin "One Step Simplification" (formula "22"))
(rule "commute_or_2" (formula "7") (term "0"))
(rule "commute_or_2" (formula "6") (term "0"))
(rule "commute_or" (formula "9") (term "0,0"))
(rule "commute_or" (formula "8") (term "0,0"))
(rule "commute_or" (formula "7") (term "0,0"))
(rule "commute_or" (formula "6") (term "0,0"))
(rule "ifUnfold" (formula "22") (term "1") (inst "#boolv=x"))
(rule "variableDeclaration" (formula "22") (term "1") (newnames "x"))
(rule "equality_comparison_simple" (formula "22") (term "1"))
(builtin "One Step Simplification" (formula "22"))
(rule "replace_known_right" (formula "22") (term "0,0,1,0") (ifseqformula "19"))
(builtin "One Step Simplification" (formula "22"))
(rule "ifSplit" (formula "22"))
(branch "if x true"
   (builtin "One Step Simplification" (formula "23"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "closeFalse" (formula "1"))
)
(branch "if x false"
   (builtin "One Step Simplification" (formula "23"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "true_left" (formula "1"))
   (rule "variableDeclarationAssign" (formula "22") (term "1"))
   (rule "variableDeclaration" (formula "22") (term "1") (newnames "entriesAsAMessage"))
   (builtin "Use Operation Contract" (formula "22") (newnames "heapBefore_concatenateMessageArray,result_0,exc_0,heapAfter_concatenateMessageArray,anon_heap_concatenateMessageArray") (contract "verif.selectvoting.system.core.Utils[verif.selectvoting.system.core.Utils::concatenateMessageArray([[B)].JML normal_behavior operation contract.0"))
   (branch "Post (concatenateMessageArray)"
      (builtin "One Step Simplification" (formula "11"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "andLeft" (formula "11"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "1,1,0") (ifseqformula "11"))
      (rule "andLeft" (formula "12"))
      (rule "andLeft" (formula "12"))
      (rule "andLeft" (formula "14"))
      (rule "andLeft" (formula "14"))
      (rule "andLeft" (formula "15"))
      (rule "notLeft" (formula "16"))
      (rule "notLeft" (formula "15"))
      (rule "eqSymm" (formula "14"))
      (rule "replace_known_right" (formula "13") (term "0,1") (ifseqformula "15"))
      (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "16")))
      (rule "assignment" (formula "29") (term "1"))
      (builtin "One Step Simplification" (formula "29"))
      (rule "variableDeclarationAssign" (formula "29") (term "1"))
      (rule "variableDeclaration" (formula "29") (term "1") (newnames "elID_entriesAsAMessage"))
      (rule "array2seqDef" (formula "14") (term "1") (inst "u=u"))
      (rule "eqSymm" (formula "14"))
      (rule "eqSeqDef2" (formula "14") (inst "iv=iv") (ifseqformula "14"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "true_left" (formula "14"))
      (rule "methodCallWithAssignmentUnfoldArguments" (formula "28") (term "1"))
      (rule "variableDeclarationAssign" (formula "28") (term "1"))
      (rule "variableDeclaration" (formula "28") (term "1") (newnames "var"))
      (rule "assignment_read_attribute_this" (formula "28") (term "1"))
      (builtin "One Step Simplification" (formula "28"))
      (rule "pullOutSelect" (formula "28") (term "0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")) (ifInst ""  (formula "3")))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replaceKnownAuxiliaryConstant_taclet01_1" (formula "28") (term "0,1,0"))
      (rule "variableDeclarationAssign" (formula "28") (term "1"))
      (rule "variableDeclaration" (formula "28") (term "1") (newnames "var_1"))
      (rule "assignment" (formula "28") (term "1"))
      (builtin "One Step Simplification" (formula "28"))
      (builtin "Use Operation Contract" (formula "28") (newnames "heapBefore_concatenate,result_1,exc_1,heapAfter_concatenate,anon_heap_concatenate") (contract "verif.utils.MessageTools[verif.utils.MessageTools::concatenate([B,[B)].JML normal_behavior operation contract.0"))
      (branch "Post (concatenate)"
         (builtin "One Step Simplification" (formula "30"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "0,0,1,0,1,1") (ifseqformula "11"))
         (rule "andLeft" (formula "15"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "1,1,0") (ifseqformula "15"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "0,1,1,0") (ifseqformula "11"))
         (rule "andLeft" (formula "16"))
         (rule "andLeft" (formula "16"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "19"))
         (rule "notLeft" (formula "20"))
         (rule "notLeft" (formula "19"))
         (rule "orRight" (formula "19"))
         (rule "eqSymm" (formula "18"))
         (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "21"))
         (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "19")) (ifInst ""  (formula "20")))
         (rule "assignment" (formula "36") (term "1"))
         (builtin "One Step Simplification" (formula "36"))
         (rule "blockEmpty" (formula "36") (term "1"))
         (rule "variableDeclarationAssign" (formula "36") (term "1"))
         (rule "variableDeclaration" (formula "36") (term "1") (newnames "result_2"))
         (rule "array2seqDef" (formula "18") (term "1") (inst "u=u"))
         (rule "eqSymm" (formula "18"))
         (rule "array2seqDef" (formula "18") (term "1,1") (inst "u=u"))
         (rule "array2seqDef" (formula "18") (term "0,1") (inst "u=u"))
         (rule "eqSymm" (formula "18"))
         (rule "eqSeqDef" (formula "18") (inst "iv=iv"))
         (rule "andLeft" (formula "18"))
         (rule "lenOfSeqDef" (formula "18") (term "1"))
         (rule "polySimp_elimSub" (formula "18") (term "1,1"))
         (rule "times_zero_2" (formula "18") (term "1,1,1"))
         (rule "add_zero_right" (formula "18") (term "1,1"))
         (rule "getOfSeqDef" (formula "19") (term "1,1,0"))
         (rule "castDel" (formula "19") (term "1,1,1,0"))
         (rule "castDel" (formula "19") (term "2,1,1,0"))
         (rule "add_zero_right" (formula "19") (term "0,2,1,1,1,0"))
         (rule "polySimp_elimSub" (formula "19") (term "1,1,0,1,1,0"))
         (rule "times_zero_2" (formula "19") (term "1,1,1,0,1,1,0"))
         (rule "add_zero_right" (formula "19") (term "1,1,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
         (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1"))
         (rule "add_zero_right" (formula "18") (term "0,0,1"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,1,1,0"))
         (rule "apply_eq_monomials" (formula "19") (term "1,0,1,0,0") (ifseqformula "18"))
         (rule "polySimp_rightDist" (formula "19") (term "0,1,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "19") (term "1,0,1,0,1,0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "19") (term "1,0,1,0,0"))
         (rule "add_literals" (formula "19") (term "1,1,1,0,1,0,0"))
         (rule "times_zero_1" (formula "19") (term "1,1,0,1,0,0"))
         (rule "add_zero_right" (formula "19") (term "1,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0,0"))
         (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "18") (term "0,0,1"))
         (rule "polySimp_elimOne" (formula "18") (term "0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "19") (term "1,1,0,1,1,0"))
         (rule "mul_literals" (formula "19") (term "0,1,1,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,1,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0,1,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,1,0,0,1,0,0"))
         (rule "polySimp_elimOne" (formula "19") (term "0,0,0,1,0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
         (rule "nnf_imp2or" (formula "19") (term "0"))
         (rule "nnf_notAnd" (formula "19") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
         (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
         (rule "mul_literals" (formula "19") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
         (rule "commute_or_2" (formula "19") (term "0"))
         (rule "commute_or" (formula "19") (term "0,0"))
         (rule "ifthenelse_to_or_right" (formula "19") (term "0,0,0"))
         (rule "nnf_notAnd" (formula "19") (term "0,0,0,0,0"))
         (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0,0,0,0"))
         (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0,0,0,0"))
         (rule "add_zero_right" (formula "19") (term "0,0,0,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,0,0,0"))
         (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0,0,0,0"))
         (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0,0,0,0"))
         (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,0,0,0"))
         (rule "add_literals" (formula "19") (term "0,0,0,1,0,0,0,0,0"))
         (rule "add_zero_left" (formula "19") (term "0,0,1,0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0,0,0"))
         (rule "commute_or" (formula "19") (term "0,0"))
         (rule "commute_or_2" (formula "19") (term "0"))
         (rule "commute_or_2" (formula "19") (term "0,1,0"))
         (rule "commute_or" (formula "19") (term "1,1,0"))
         (rule "commute_or" (formula "19") (term "0,0,1,0"))
         (rule "cnf_rightDist" (formula "19") (term "1,1,0"))
         (rule "cnf_rightDist" (formula "19") (term "0"))
         (rule "distr_forallAnd" (formula "19"))
         (rule "andLeft" (formula "19"))
         (rule "commute_or_2" (formula "19") (term "0"))
         (rule "commute_or" (formula "20") (term "0"))
         (rule "shift_paren_or" (formula "19") (term "0,0"))
         (rule "commute_or" (formula "20") (term "1,1,0"))
         (rule "cnf_rightDist" (formula "20") (term "0"))
         (rule "distr_forallAnd" (formula "20"))
         (rule "andLeft" (formula "20"))
         (rule "commute_or_2" (formula "20") (term "0"))
         (rule "shift_paren_or" (formula "21") (term "0"))
         (rule "commute_or_2" (formula "21") (term "0,0"))
         (rule "shift_paren_or" (formula "20") (term "0,0"))
         (rule "commute_or" (formula "20") (term "0,0,0"))
         (rule "inEqSimp_or_tautInEq1" (formula "20") (term "0,0"))
         (rule "add_literals" (formula "20") (term "1,1,0,0"))
         (rule "qeq_literals" (formula "20") (term "1,0,0"))
         (builtin "One Step Simplification" (formula "20"))
         (rule "true_left" (formula "20"))
         (rule "shift_paren_or" (formula "19") (term "0,0,0"))
         (rule "commute_or" (formula "19") (term "0,0,0,0"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "methodCallWithAssignmentUnfoldArguments" (formula "38") (term "1"))
         (rule "variableDeclarationAssign" (formula "38") (term "1"))
         (rule "variableDeclaration" (formula "38") (term "1") (newnames "var_2"))
         (rule "activeUseStaticFieldReadAccess" (formula "38") (term "1"))
         (rule "assignment_read_static_attribute" (formula "38") (term "1"))
         (builtin "One Step Simplification" (formula "38"))
         (rule "pullOutSelect" (formula "38") (term "0,1,0") (inst "selectSK=verif_selectvoting_system_core_Tag_BALLOTS_0"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "replaceKnownAuxiliaryConstant_taclet001_4" (formula "38") (term "0,1,0"))
         (rule "variableDeclarationAssign" (formula "38") (term "1"))
         (rule "variableDeclaration" (formula "38") (term "1") (newnames "var_3"))
         (rule "assignment" (formula "38") (term "1"))
         (builtin "One Step Simplification" (formula "38"))
         (rule "arrayLengthIsAShort" (formula "9") (term "1,1,0"))
         (builtin "One Step Simplification" (formula "9"))
         (rule "true_left" (formula "9"))
         (rule "arrayLengthNotNegative" (formula "9") (term "1,1,0"))
         (rule "arrayLengthNotNegative" (formula "8") (term "1,1,0"))
         (rule "arrayLengthIsAShort" (formula "9") (term "1,1,0"))
         (builtin "One Step Simplification" (formula "9"))
         (rule "true_left" (formula "9"))
         (rule "arrayLengthIsAShort" (formula "7") (term "1,1,0"))
         (builtin "One Step Simplification" (formula "7"))
         (rule "true_left" (formula "7"))
         (rule "arrayLengthNotNegative" (formula "7") (term "1,1,0"))
         (rule "arrayLengthIsAShort" (formula "6") (term "1,1,0"))
         (builtin "One Step Simplification" (formula "6"))
         (rule "true_left" (formula "6"))
         (rule "arrayLengthNotNegative" (formula "6") (term "1,1,0"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "34") (term "0") (ifseqformula "1"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "35"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "37") (term "0") (ifseqformula "2"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "38"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "35") (term "0") (ifseqformula "3"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "36"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "38") (term "0") (ifseqformula "4"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "39"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "0") (ifseqformula "5"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "42"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "0") (ifseqformula "6"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "44"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "47") (term "0") (ifseqformula "7"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "48"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "37") (term "0") (ifseqformula "8"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "38"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "40") (term "0") (ifseqformula "9"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "41"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "40") (term "0") (ifseqformula "10"))
         (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "41"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "lenNonNegative" (formula "32") (term "0"))
         (rule "inEqSimp_commuteLeq" (formula "32"))
         (rule "arrayLengthNotNegative" (formula "33") (term "1,0,0,0"))
         (rule "arrayLengthIsAShort" (formula "34") (term "1,1,0,0"))
         (builtin "One Step Simplification" (formula "34"))
         (rule "true_left" (formula "34"))
         (rule "arrayLengthIsAShort" (formula "34") (term "1,0,0,0"))
         (builtin "One Step Simplification" (formula "34"))
         (rule "true_left" (formula "34"))
         (rule "arrayLengthNotNegative" (formula "34") (term "1,1,0,0"))
         (rule "arrayLengthNotNegative" (formula "35") (term "1,1"))
         (rule "arrayLengthIsAShort" (formula "36") (term "1,1"))
         (builtin "One Step Simplification" (formula "36"))
         (rule "true_left" (formula "36"))
         (builtin "Use Operation Contract" (formula "56") (newnames "heapBefore_concatenate_0,result_3,exc_2,heapAfter_concatenate_0,anon_heap_concatenate_0") (contract "verif.utils.MessageTools[verif.utils.MessageTools::concatenate([B,[B)].JML normal_behavior operation contract.0"))
         (branch "Post (concatenate)"
            (builtin "One Step Simplification" (formula "40"))
            (builtin "One Step Simplification" (formula "58"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,0,1,0,1,1") (ifseqformula "29"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,0,0,1,0,1,1") (ifseqformula "25"))
            (rule "andLeft" (formula "40"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "1,1,0") (ifseqformula "40"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "0,1,1,0") (ifseqformula "29"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "0,0,1,1,0") (ifseqformula "25"))
            (rule "andLeft" (formula "41"))
            (rule "andLeft" (formula "41"))
            (rule "andLeft" (formula "43"))
            (rule "andLeft" (formula "43"))
            (rule "andLeft" (formula "44"))
            (rule "notLeft" (formula "45"))
            (rule "notLeft" (formula "44"))
            (rule "orRight" (formula "44"))
            (rule "orRight" (formula "44"))
            (rule "eqSymm" (formula "43"))
            (rule "replace_known_right" (formula "42") (term "1,0,0,1") (ifseqformula "45"))
            (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "47")) (ifInst ""  (formula "44")) (ifInst ""  (formula "46")))
            (rule "assignment" (formula "65") (term "1"))
            (builtin "One Step Simplification" (formula "65"))
            (rule "blockEmpty" (formula "65") (term "1"))
            (rule "variableDeclarationAssign" (formula "65") (term "1"))
            (rule "variableDeclaration" (formula "65") (term "1") (newnames "signatureOnResult"))
            (rule "array2seqDef" (formula "43") (term "1,0") (inst "u=u"))
            (rule "array2seqDef" (formula "43") (term "0,0") (inst "u=u"))
            (rule "array2seqDef" (formula "43") (term "1") (inst "u=u"))
            (rule "eqSeqDef" (formula "43") (inst "iv=iv"))
            (rule "andLeft" (formula "43"))
            (rule "lenOfSeqDef" (formula "43") (term "1"))
            (rule "polySimp_elimSub" (formula "43") (term "1,1"))
            (rule "mul_literals" (formula "43") (term "1,1,1"))
            (rule "add_zero_right" (formula "43") (term "1,1"))
            (rule "getOfSeqDef" (formula "44") (term "1,1,0"))
            (rule "castDel" (formula "44") (term "2,1,1,0"))
            (rule "castDel" (formula "44") (term "1,1,1,0"))
            (rule "add_zero_right" (formula "44") (term "0,2,1,1,1,0"))
            (rule "polySimp_elimSub" (formula "44") (term "1,1,0,1,1,0"))
            (rule "times_zero_2" (formula "44") (term "1,1,1,0,1,1,0"))
            (rule "add_zero_right" (formula "44") (term "1,1,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0"))
            (rule "polySimp_addComm1" (formula "44") (term "0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "43") (term "0,1"))
            (rule "add_zero_right" (formula "43") (term "0,0,1"))
            (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,1,1,0"))
            (rule "apply_eq_monomials" (formula "44") (term "1,0,1,0,0") (ifseqformula "43"))
            (rule "polySimp_rightDist" (formula "44") (term "0,1,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,0,1,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "44") (term "1,0,1,0,0"))
            (rule "add_literals" (formula "44") (term "1,1,1,0,1,0,0"))
            (rule "times_zero_1" (formula "44") (term "1,1,0,1,0,0"))
            (rule "add_zero_right" (formula "44") (term "1,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "44") (term "1,0,1,0,0"))
            (rule "polySimp_addComm1" (formula "44") (term "0,1,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "43") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "43") (term "0,0,1"))
            (rule "polySimp_elimOne" (formula "43") (term "0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "44") (term "1,1,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,1,1,0"))
            (rule "mul_literals" (formula "44") (term "0,1,1,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0"))
            (rule "mul_literals" (formula "44") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "44") (term "0,1,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "44") (term "0,0,1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "44") (term "0,0,1,1,1,0,0"))
            (rule "nnf_imp2or" (formula "44") (term "0"))
            (rule "nnf_notAnd" (formula "44") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "44") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "44") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "44") (term "0,0,0"))
            (rule "mul_literals" (formula "44") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "44") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
            (rule "mul_literals" (formula "44") (term "1,0,0,0"))
            (rule "commute_or_2" (formula "44") (term "0"))
            (rule "commute_or" (formula "44") (term "0,0"))
            (rule "ifthenelse_to_or_right" (formula "44") (term "0,0,0"))
            (rule "nnf_notAnd" (formula "44") (term "0,0,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "44") (term "0,0,0,0,0,0"))
            (rule "mul_literals" (formula "44") (term "1,0,0,0,0,0,0,0,0"))
            (rule "add_zero_right" (formula "44") (term "0,0,0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0,0,0,0"))
            (rule "mul_literals" (formula "44") (term "1,0,0,0,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,0,0,0"))
            (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,0,0,0"))
            (rule "add_literals" (formula "44") (term "0,0,0,1,0,0,0,0,0"))
            (rule "add_zero_left" (formula "44") (term "0,0,1,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0,0,0"))
            (rule "commute_or" (formula "44") (term "0,0"))
            (rule "commute_or_2" (formula "44") (term "0"))
            (rule "commute_or" (formula "44") (term "1,1,0"))
            (rule "commute_or_2" (formula "44") (term "0,1,0"))
            (rule "commute_or" (formula "44") (term "0,0,1,0"))
            (rule "cnf_rightDist" (formula "44") (term "1,1,0"))
            (rule "cnf_rightDist" (formula "44") (term "0"))
            (rule "distr_forallAnd" (formula "44"))
            (rule "andLeft" (formula "44"))
            (rule "commute_or" (formula "45") (term "0"))
            (rule "commute_or_2" (formula "44") (term "0"))
            (rule "commute_or" (formula "45") (term "1,1,0"))
            (rule "shift_paren_or" (formula "44") (term "0,0"))
            (rule "cnf_rightDist" (formula "45") (term "0"))
            (rule "distr_forallAnd" (formula "45"))
            (rule "andLeft" (formula "45"))
            (rule "commute_or_2" (formula "45") (term "0"))
            (rule "shift_paren_or" (formula "46") (term "0"))
            (rule "commute_or_2" (formula "46") (term "0,0"))
            (rule "shift_paren_or" (formula "45") (term "0,0"))
            (rule "commute_or" (formula "45") (term "0,0,0"))
            (rule "inEqSimp_or_tautInEq1" (formula "45") (term "0,0"))
            (rule "add_literals" (formula "45") (term "1,1,0,0"))
            (rule "qeq_literals" (formula "45") (term "1,0,0"))
            (builtin "One Step Simplification" (formula "45"))
            (rule "true_left" (formula "45"))
            (rule "shift_paren_or" (formula "44") (term "0,0,0"))
            (rule "commute_or" (formula "44") (term "0,0,0,0"))
            (builtin "One Step Simplification" (formula "44"))
            (rule "methodCallWithAssignmentUnfoldTarget" (formula "67") (term "1") (inst "#v0=s"))
            (rule "variableDeclaration" (formula "67") (term "1") (newnames "s"))
            (rule "assignment_read_attribute_this" (formula "67") (term "1"))
            (builtin "One Step Simplification" (formula "67"))
            (rule "pullOutSelect" (formula "67") (term "0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "41"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "30"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "26"))
            (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "13"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "26"))
            (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "13"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")) (ifInst ""  (formula "13")))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replaceKnownAuxiliaryConstant_taclet0001_8" (formula "67") (term "0,1,0"))
            (rule "arrayLengthIsAShort" (formula "43") (term "1,0,0,0"))
            (builtin "One Step Simplification" (formula "43"))
            (rule "true_left" (formula "43"))
            (rule "arrayLengthNotNegative" (formula "43") (term "1,0,0,0"))
            (rule "lenNonNegative" (formula "44") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "44"))
            (rule "arrayLengthIsAShort" (formula "45") (term "1,1"))
            (builtin "One Step Simplification" (formula "45"))
            (rule "true_left" (formula "45"))
            (rule "arrayLengthNotNegative" (formula "45") (term "1,1"))
            (builtin "Use Operation Contract" (formula "70") (newnames "heapBefore_sign,result_4,exc_3,heapAfter_sign,anon_heap_sign") (contract "verif.functionalities.pkisig.Signer[verif.functionalities.pkisig.Signer::sign([B)].JML normal_behavior operation contract.0"))
            (branch "Post (sign)"
               (builtin "One Step Simplification" (formula "50"))
               (builtin "One Step Simplification" (formula "72"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "50") (term "0,0,1,0,1,1") (ifseqformula "40"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "50") (term "0,0,0,1,0,1,1") (ifseqformula "29"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "50") (term "0,0,0,0,1,0,1,1") (ifseqformula "25"))
               (rule "andLeft" (formula "50"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "1,1,0") (ifseqformula "50"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "0,1,1,0") (ifseqformula "40"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "0,0,1,1,0") (ifseqformula "29"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "0,0,0,1,1,0") (ifseqformula "25"))
               (rule "andLeft" (formula "51"))
               (rule "andLeft" (formula "52"))
               (rule "andLeft" (formula "51"))
               (rule "andLeft" (formula "52"))
               (rule "andLeft" (formula "53"))
               (rule "notLeft" (formula "53"))
               (rule "notLeft" (formula "53"))
               (rule "orRight" (formula "55"))
               (rule "orRight" (formula "55"))
               (rule "orRight" (formula "55"))
               (rule "replace_known_right" (formula "51") (term "0") (ifseqformula "54"))
               (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "55")) (ifInst ""  (formula "56")) (ifInst ""  (formula "57")) (ifInst ""  (formula "58")))
               (rule "assignment" (formula "80") (term "1"))
               (builtin "One Step Simplification" (formula "80"))
               (rule "variableDeclarationAssign" (formula "80") (term "1"))
               (rule "variableDeclaration" (formula "80") (term "1") (newnames "signedResult"))
               (rule "array2seqDef" (formula "52") (term "0") (inst "u=u"))
               (rule "array2seqDef" (formula "52") (term "0,1") (inst "u=u"))
               (rule "eqSeqDef2" (formula "52") (inst "iv=iv") (ifseqformula "52"))
               (builtin "One Step Simplification" (formula "52"))
               (rule "true_left" (formula "52"))
               (builtin "Use Operation Contract" (formula "79") (newnames "heapBefore_concatenate_1,result_5,exc_4,heapAfter_concatenate_1,anon_heap_concatenate_1") (contract "verif.utils.MessageTools[verif.utils.MessageTools::concatenate([B,[B)].JML normal_behavior operation contract.0"))
               (branch "Post (concatenate)"
                  (builtin "One Step Simplification" (formula "81"))
                  (builtin "One Step Simplification" (formula "54"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "0,0,1,0,1,1") (ifseqformula "50"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "0,0,0,1,0,1,1") (ifseqformula "40"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "0,0,0,0,1,0,1,1") (ifseqformula "29"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "0,0,0,0,0,1,0,1,1") (ifseqformula "25"))
                  (rule "andLeft" (formula "54"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "55") (term "1,1,0") (ifseqformula "54"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "55") (term "0,1,1,0") (ifseqformula "50"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "55") (term "0,0,1,1,0") (ifseqformula "40"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "55") (term "0,0,0,1,1,0") (ifseqformula "29"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "55") (term "0,0,0,0,1,1,0") (ifseqformula "25"))
                  (rule "andLeft" (formula "55"))
                  (rule "andLeft" (formula "55"))
                  (rule "andLeft" (formula "57"))
                  (rule "andLeft" (formula "57"))
                  (rule "andLeft" (formula "58"))
                  (rule "notLeft" (formula "58"))
                  (rule "notLeft" (formula "58"))
                  (rule "orRight" (formula "59"))
                  (rule "orRight" (formula "59"))
                  (rule "orRight" (formula "59"))
                  (rule "orRight" (formula "59"))
                  (rule "eqSymm" (formula "57"))
                  (rule "replace_known_right" (formula "56") (term "0,0,0,0,0,1") (ifseqformula "59"))
                  (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "58")) (ifInst ""  (formula "60")) (ifInst ""  (formula "61")) (ifInst ""  (formula "62")) (ifInst ""  (formula "63")))
                  (rule "assignment" (formula "90") (term "1"))
                  (builtin "One Step Simplification" (formula "90"))
                  (rule "array2seqDef" (formula "57") (term "1,0") (inst "u=u"))
                  (rule "array2seqDef" (formula "57") (term "0,0") (inst "u=u"))
                  (rule "array2seqDef" (formula "57") (term "1") (inst "u=u"))
                  (rule "eqSymm" (formula "57"))
                  (rule "eqSeqDef2" (formula "57") (inst "iv=iv") (ifseqformula "57"))
                  (builtin "One Step Simplification" (formula "57"))
                  (rule "true_left" (formula "57"))
                  (rule "methodCallReturn" (formula "89") (term "1"))
                  (rule "assignment" (formula "89") (term "1"))
                  (builtin "One Step Simplification" (formula "89"))
                  (rule "methodCallEmpty" (formula "89") (term "1"))
                  (rule "tryEmpty" (formula "89") (term "1"))
                  (rule "emptyModality" (formula "89") (term "1"))
                  (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "57")))
                  (rule "eqSymm" (formula "89") (term "1,0,0,1"))
                  (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "89") (term "0") (ifseqformula "13"))
                  (rule "nonNull" (formula "89") (term "1,0,0,0,0,0,0,0") (inst "i=i"))
                  (rule "sub_literals" (formula "89") (term "2,1,0,1,1,1,0,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "89"))
                  (rule "greater_literals" (formula "89") (term "0,1,1,0,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "89"))
                  (rule "inEqSimp_ltToLeq" (formula "89") (term "1,0,0,1,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "89") (term "0,0,0,1,1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "1,0,0,1,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "89") (term "1,1,0,0,1,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "89") (term "1,1,0,0,1,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "89") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "89") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "89") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0"))
                  (rule "nonNull" (formula "89") (term "1,0,0,0,0,0") (inst "i=i"))
                  (rule "greater_literals" (formula "89") (term "0,1,1,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "89"))
                  (rule "sub_literals" (formula "89") (term "2,1,0,1,1,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "89"))
                  (rule "inEqSimp_ltToLeq" (formula "89") (term "1,0,0,1,1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,1,0,0,1,1,0,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "89") (term "0,0,0,1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "1,0,0,1,1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "89") (term "1,1,0,0,1,1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "89") (term "1,1,0,0,1,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "89") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "89") (term "1,1,1,0,0,1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "89") (term "1,1,1,0,0,1,1,0,0,0,0,0"))
                  (rule "nonNull" (formula "89") (term "1,0,0,0,0,0,0") (inst "i=i"))
                  (rule "greater_literals" (formula "89") (term "0,1,1,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "89"))
                  (rule "sub_literals" (formula "89") (term "2,1,0,1,1,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "89"))
                  (rule "inEqSimp_ltToLeq" (formula "89") (term "1,0,0,1,1,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "89") (term "0,0,0,1,1,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "1,0,0,1,1,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "89") (term "1,1,0,0,1,1,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "89") (term "1,1,0,0,1,1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "89") (term "0,1,1,0,0,1,1,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "89") (term "1,1,1,0,0,1,1,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "89") (term "1,1,1,0,0,1,1,0,0,0,0,0,0"))
                  (rule "pullOutSelect" (formula "89") (term "0,0,1,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "55"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "51"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "41"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "30"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "26"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0,0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")))
                  (rule "replaceKnownSelect_taclet0001_5" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet0001_8" (formula "1") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "41"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "30"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "26"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "90") (term "0,0,1,0,0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "89") (term "0,1,0,0,0,0") (ifseqformula "82"))
                  (builtin "One Step Simplification" (formula "89"))
                  (rule "pullOutSelect" (formula "89") (term "0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "55"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "51"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "41"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "30"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "26"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0,0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "41"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "30"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "26"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "41"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "30"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "26"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")))
                  (rule "replaceKnownSelect_taclet01_0" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet01_1" (formula "1") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "26"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "90") (term "0,0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "89") (term "0,1,0") (ifseqformula "85"))
                  (builtin "One Step Simplification" (formula "89"))
                  (rule "pullOutSelect" (formula "89") (term "0,0,1,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "55"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "51"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "41"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "30"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "26"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0,0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "41"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "30"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "26"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "41"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "30"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "26"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "26"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")) (ifInst ""  (formula "13")))
                  (rule "applyEqReverse" (formula "90") (term "0,0,1,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "89") (term "0,1,0,0") (ifseqformula "83"))
                  (builtin "One Step Simplification" (formula "89"))
                  (rule "pullOutSelect" (formula "89") (term "0,1,1,1,0,0,1,1,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_0"))
                  (rule "applyEq" (formula "90") (term "0,0,0,1,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "90") (term "1,0,0,1,0,1,1,0,0,0,0") (ifseqformula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "55"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "51"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "41"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "30"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "26"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0,0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "41"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "30"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "26"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "41"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "30"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "26"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "26"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")) (ifInst ""  (formula "13")))
                  (rule "applyEqReverse" (formula "90") (term "0,0,0,1,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "90") (term "0,1,1,1,0,0,1,1,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "90") (term "1,0,0,1,0,1,1,0,0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "89") (term "0,0,1,0,0,0,0") (ifseqformula "77"))
                  (builtin "One Step Simplification" (formula "89"))
                  (rule "pullOutSelect" (formula "89") (term "0,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "55"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "51"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "41"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "30"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "26"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0,0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "41"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "30"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "26"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "41"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "30"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "26"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "26"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")) (ifInst ""  (formula "13")))
                  (rule "applyEqReverse" (formula "90") (term "0,0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "89") (term "0,0,0,0,0,0,0") (ifseqformula "81"))
                  (builtin "One Step Simplification" (formula "89"))
                  (rule "pullOutSelect" (formula "89") (term "0,0,0,1,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_0"))
                  (rule "applyEq" (formula "90") (term "0,1,1,1,0,0,1,1,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "90") (term "1,0,0,1,0,1,1,0,0") (ifseqformula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "55"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "51"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "41"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "30"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "26"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0,0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "41"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "30"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "26"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "41"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "30"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "26"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "26"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")) (ifInst ""  (formula "13")))
                  (rule "applyEqReverse" (formula "90") (term "0,0,0,1,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "90") (term "0,1,1,1,0,0,1,1,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "90") (term "1,0,0,1,0,1,1,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "89") (term "0,0,1,0,0") (ifseqformula "79"))
                  (builtin "One Step Simplification" (formula "89"))
                  (rule "pullOutSelect" (formula "89") (term "0,0,0,1,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_0"))
                  (rule "applyEq" (formula "90") (term "1,0,0,1,0,1,1,0,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "90") (term "0,1,1,1,0,0,1,1,0,0,0") (ifseqformula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "55"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "51"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "41"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "30"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "26"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0,0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "41"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "30"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "26"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "41"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "30"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "26"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "26"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")) (ifInst ""  (formula "13")))
                  (rule "applyEqReverse" (formula "90") (term "0,0,0,1,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "90") (term "1,0,0,1,0,1,1,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "90") (term "0,1,1,1,0,0,1,1,0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "89") (term "0,0,1,0,0,0") (ifseqformula "78"))
                  (builtin "One Step Simplification" (formula "89"))
                  (rule "pullOutSelect" (formula "89") (term "0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "55"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "51"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "41"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "30"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "26"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0,0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "41"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "30"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "26"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "41"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "30"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "26"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "26"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")) (ifInst ""  (formula "13")))
                  (rule "applyEqReverse" (formula "90") (term "0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "89") (term "0,0,0,0,0,0") (ifseqformula "80"))
                  (builtin "One Step Simplification" (formula "89"))
                  (rule "pullOutSelect" (formula "89") (term "0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "55"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "51"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "41"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "30"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "26"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0,0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "41"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "30"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "26"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "41"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "30"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "26"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "26"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")) (ifInst ""  (formula "13")))
                  (rule "applyEqReverse" (formula "90") (term "0,0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "89") (term "0,1,0") (ifseqformula "84"))
                  (builtin "One Step Simplification" (formula "89"))
                  (rule "nnf_imp2or" (formula "89") (term "0,1,0"))
                  (rule "nnf_imp2or" (formula "89") (term "0,1,0,0"))
                  (rule "nnf_imp2or" (formula "89") (term "0,0,0,0"))
                  (rule "nnf_notAnd" (formula "89") (term "0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "89") (term "0,0,0,1,0"))
                  (rule "mul_literals" (formula "89") (term "1,0,0,0,0,0,1,0"))
                  (rule "add_literals" (formula "89") (term "0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "0,0,0,1,0"))
                  (rule "mul_literals" (formula "89") (term "1,0,0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "89") (term "1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "89") (term "1,0,0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "89") (term "0,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "89") (term "0,0,1,0,0,1,0"))
                  (rule "add_literals" (formula "89") (term "0,0,0,1,0,0,1,0"))
                  (rule "add_zero_left" (formula "89") (term "0,0,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "89") (term "1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "89") (term "1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "89") (term "1,1,0,0,1,0"))
                  (rule "nnf_notAnd" (formula "89") (term "0,0,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "89") (term "1,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "89") (term "1,0,0,1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "89") (term "0,1,0,0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "89") (term "0,0,1,0,0,1,0,0"))
                  (rule "add_literals" (formula "89") (term "0,0,0,1,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "89") (term "0,0,1,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "89") (term "1,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "89") (term "1,1,0,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "89") (term "1,1,0,0,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "89") (term "0,0,0,1,0,0"))
                  (rule "times_zero_1" (formula "89") (term "1,0,0,0,0,0,1,0,0"))
                  (rule "add_literals" (formula "89") (term "0,0,0,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "0,0,0,1,0,0"))
                  (rule "mul_literals" (formula "89") (term "1,0,0,0,1,0,0"))
                  (rule "nnf_notAnd" (formula "89") (term "0,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "89") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "89") (term "1,0,0,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "89") (term "0,1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "89") (term "0,0,1,0,0,0,0,0"))
                  (rule "add_literals" (formula "89") (term "0,0,0,1,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "89") (term "0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "89") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "89") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "89") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "89") (term "0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "89") (term "1,0,0,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "89") (term "0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "89") (term "0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "89") (term "1,0,0,0,0,0,0"))
                  (rule "cut_direct" (formula "38") (term "0,1,1,0"))
                  (branch "CUT: result_1.length ≥ 1 TRUE"
                     (builtin "One Step Simplification" (formula "39"))
                     (rule "replace_known_left" (formula "36") (term "0,1") (ifseqformula "38"))
                     (builtin "One Step Simplification" (formula "36"))
                     (rule "replace_known_left" (formula "37") (term "0,1,1,0") (ifseqformula "38"))
                     (builtin "One Step Simplification" (formula "37"))
                     (rule "inEqSimp_subsumption1" (formula "35") (ifseqformula "38"))
                     (rule "leq_literals" (formula "35") (term "0"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "true_left" (formula "35"))
                     (rule "inEqSimp_or_tautInEq1" (formula "38") (term "0"))
                     (rule "inEqSimp_homoInEq1" (formula "38") (term "1,0"))
                     (rule "polySimp_pullOutFactor1" (formula "38") (term "0,1,0"))
                     (rule "add_literals" (formula "38") (term "1,0,1,0"))
                     (rule "times_zero_1" (formula "38") (term "0,1,0"))
                     (rule "leq_literals" (formula "38") (term "1,0"))
                     (builtin "One Step Simplification" (formula "38"))
                     (rule "true_left" (formula "38"))
                     (rule "cut_direct" (formula "46") (term "0,1,1,0"))
                     (branch "CUT: result_3.length ≥ 1 TRUE"
                        (builtin "One Step Simplification" (formula "47"))
                        (rule "replace_known_left" (formula "45") (term "0,1") (ifseqformula "46"))
                        (builtin "One Step Simplification" (formula "45"))
                        (rule "replace_known_left" (formula "48") (term "0,1,1,0") (ifseqformula "46"))
                        (builtin "One Step Simplification" (formula "48"))
                        (rule "inEqSimp_subsumption1" (formula "44") (ifseqformula "46"))
                        (rule "leq_literals" (formula "44") (term "0"))
                        (builtin "One Step Simplification" (formula "44"))
                        (rule "true_left" (formula "44"))
                        (rule "inEqSimp_or_tautInEq1" (formula "47") (term "0"))
                        (rule "inEqSimp_homoInEq1" (formula "47") (term "1,0"))
                        (rule "polySimp_pullOutFactor1" (formula "47") (term "0,1,0"))
                        (rule "add_literals" (formula "47") (term "1,0,1,0"))
                        (rule "times_zero_1" (formula "47") (term "0,1,0"))
                        (rule "leq_literals" (formula "47") (term "1,0"))
                        (builtin "One Step Simplification" (formula "47"))
                        (rule "true_left" (formula "47"))
                        (rule "andRight" (formula "87"))
                        (branch "Case 1"
                           (rule "andRight" (formula "87"))
                           (branch "Case 1"
                              (rule "andRight" (formula "87"))
                              (branch "Case 1"
                                 (rule "allRight" (formula "87") (inst "sk=i_11"))
                                 (rule "orRight" (formula "87"))
                                 (rule "notRight" (formula "88"))
                                 (rule "orRight" (formula "88"))
                                 (rule "inEqSimp_leqRight" (formula "88"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_geqRight" (formula "89"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_11"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "56"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "79")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "52"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "43"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0,0") (ifseqformula "33"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0,0,0") (ifseqformula "29"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,0,0,0,0,0") (ifseqformula "7"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "52"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "79")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "43"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "33"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0,0") (ifseqformula "29"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,0,0,0,0") (ifseqformula "7"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "43"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "79")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "33"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "29"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "7"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "33"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "79")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "29"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "7"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "29"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "79")) (ifInst ""  (formula "7")))
                                 (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "14") (ifseqformula "78"))
                                 (rule "allLeft" (formula "20") (inst "t=i_11"))
                                 (rule "replace_known_left" (formula "20") (term "0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "20") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "20"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0"))
                                 (rule "add_zero_right" (formula "1") (term "0"))
                                 (rule "leq_literals" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "Case 2"
                                 (rule "allRight" (formula "87") (inst "sk=i_10"))
                                 (rule "orRight" (formula "87"))
                                 (rule "notRight" (formula "88"))
                                 (rule "orRight" (formula "88"))
                                 (rule "inEqSimp_leqRight" (formula "88"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_geqRight" (formula "89"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_10"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "56"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "80")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "52"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "43"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0,0") (ifseqformula "33"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0,0,0") (ifseqformula "29"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,0,0,0,0,0") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "52"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "80")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "43"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "33"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0,0") (ifseqformula "29"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,0,0,0,0") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "43"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "80")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "33"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "29"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "33"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "80")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "29"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "29"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "80")) (ifInst ""  (formula "5")))
                                 (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "14") (ifseqformula "79"))
                                 (rule "allLeft" (formula "22") (inst "t=i_10"))
                                 (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "22") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "inEqSimp_contradInEq1" (formula "22") (ifseqformula "1"))
                                 (rule "andLeft" (formula "22"))
                                 (rule "inEqSimp_homoInEq1" (formula "22"))
                                 (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                 (rule "add_literals" (formula "22") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "22") (term "1,0"))
                                 (rule "add_zero_right" (formula "22") (term "0"))
                                 (rule "leq_literals" (formula "22"))
                                 (rule "closeFalse" (formula "22"))
                              )
                           )
                           (branch "Case 2"
                              (rule "allRight" (formula "87") (inst "sk=i_9"))
                              (rule "orRight" (formula "87"))
                              (rule "notRight" (formula "88"))
                              (rule "orRight" (formula "88"))
                              (rule "inEqSimp_leqRight" (formula "88"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_geqRight" (formula "89"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_9"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "56"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "81")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "52"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "43"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0,0") (ifseqformula "33"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0,0,0") (ifseqformula "29"))
                              (rule "replace_known_left" (formula "3") (term "0,0,0,0,0,0,0") (ifseqformula "6"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "52"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "81")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "43"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "33"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0,0") (ifseqformula "29"))
                              (rule "replace_known_left" (formula "3") (term "0,0,0,0,0,0") (ifseqformula "6"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "43"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "81")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "33"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "29"))
                              (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "6"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "33"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "81")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "29"))
                              (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "6"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "29"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "81")) (ifInst ""  (formula "6")))
                              (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "14") (ifseqformula "80"))
                              (rule "allLeft" (formula "24") (inst "t=i_9"))
                              (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                              (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                              (rule "add_literals" (formula "24") (term "0,0,1"))
                              (rule "leq_literals" (formula "24") (term "0,1"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "24"))
                              (rule "qeq_literals" (formula "2") (term "0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "closeFalse" (formula "2"))
                           )
                        )
                        (branch "Case 2"
                           (rule "allRight" (formula "87") (inst "sk=f_3"))
                           (rule "allRight" (formula "87") (inst "sk=o_3"))
                           (rule "orRight" (formula "87"))
                           (rule "pullOutSelect" (formula "88") (term "0") (inst "selectSK=f_3_0"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "53"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "49"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "40"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "30"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "26"))
                           (rule "eqSymm" (formula "89"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_3_1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "50"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "41"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "31"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "27"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_3_2"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "42"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "32"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "28"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_3_3"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "29"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_3_4"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "92")))
                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "commute_or_2" (formula "2") (term "0,1,0,0"))
                           (rule "commute_or_2" (formula "3") (term "0,0,1,0,0"))
                           (rule "commute_or_2" (formula "4") (term "0,0,0,1,0,0"))
                           (rule "ifthenelse_split" (formula "1") (term "0"))
                           (branch " ¬o_3 = null ∧ ¬( o_3.<created> = TRUE ∨ o_3.<created>@anon_heap_concatenateMessageArray«anonHeapFunction» = TRUE) TRUE"
                              (rule "andLeft" (formula "1"))
                              (rule "notLeft" (formula "2"))
                              (rule "notLeft" (formula "1"))
                              (rule "orRight" (formula "60"))
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_right" (formula "3") (term "1,0,0,0,1,0,0") (ifseqformula "60"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "58")) (ifInst ""  (formula "59")))
                              (rule "replace_known_right" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "59"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")) (ifInst ""  (formula "60")))
                              (rule "replace_known_right" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "60"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "58")) (ifInst ""  (formula "59")))
                              (rule "replace_known_right" (formula "93") (term "0,1") (ifseqformula "59"))
                              (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "58")))
                              (rule "closeTrue" (formula "93"))
                           )
                           (branch " ¬o_3 = null ∧ ¬( o_3.<created> = TRUE ∨ o_3.<created>@anon_heap_concatenateMessageArray«anonHeapFunction» = TRUE) FALSE"
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch " ¬o_3 = null ∧ ¬( o_3.<created> = TRUE ∨ o_3.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_3.<created>@anon_heap_concatenateMessageArray«anonHeapFunction» = TRUE) TRUE"
                                 (rule "andLeft" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "orRight" (formula "58"))
                                 (rule "orRight" (formula "58"))
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "replace_known_right" (formula "2") (term "1,0,0,0,0,1,0,0") (ifseqformula "58"))
                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "60")) (ifInst ""  (formula "57")) (ifInst ""  (formula "59")))
                                 (rule "replace_known_right" (formula "1") (term "1,0,0,0,1,0,0") (ifseqformula "58"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")) (ifInst ""  (formula "57")) (ifInst ""  (formula "59")))
                                 (rule "replace_known_right" (formula "94") (term "0,1") (ifseqformula "57"))
                                 (builtin "One Step Simplification" (formula "94") (ifInst ""  (formula "60")))
                                 (rule "closeTrue" (formula "94"))
                              )
                              (branch " ¬o_3 = null ∧ ¬( o_3.<created> = TRUE ∨ o_3.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_3.<created>@anon_heap_concatenateMessageArray«anonHeapFunction» = TRUE) FALSE"
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch " ¬o_3 = null ∧ ¬( o_3.<created> = TRUE ∨ o_3.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_3.<created>@anon_heap_concatenateMessageArray«anonHeapFunction» = TRUE ∨ o_3.<created>@anon_heap_concatenate_0«anonHeapFunction» = TRUE) TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "orRight" (formula "57"))
                                    (rule "orRight" (formula "57"))
                                    (rule "orRight" (formula "57"))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0,0,0,1,0,0") (ifseqformula "57"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")) (ifInst ""  (formula "56")) (ifInst ""  (formula "58")) (ifInst ""  (formula "59")))
                                    (rule "replace_known_right" (formula "95") (term "0,1") (ifseqformula "56"))
                                    (builtin "One Step Simplification" (formula "95") (ifInst ""  (formula "60")))
                                    (rule "closeTrue" (formula "95"))
                                 )
                                 (branch " ¬o_3 = null ∧ ¬( o_3.<created> = TRUE ∨ o_3.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_3.<created>@anon_heap_concatenateMessageArray«anonHeapFunction» = TRUE ∨ o_3.<created>@anon_heap_concatenate_0«anonHeapFunction» = TRUE) FALSE"
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch " ¬o_3 = null ∧ ¬( o_3.<created> = TRUE ∨ o_3.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_3.<created>@anon_heap_concatenateMessageArray«anonHeapFunction» = TRUE ∨ o_3.<created>@anon_heap_concatenate_0«anonHeapFunction» = TRUE ∨ o_3.<created>@anon_heap_sign«anonHeapFunction» = TRUE) TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "orRight" (formula "57"))
                                       (rule "orRight" (formula "57"))
                                       (rule "orRight" (formula "57"))
                                       (rule "orRight" (formula "57"))
                                       (rule "applyEqReverse" (formula "98") (term "1") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "eqSymm" (formula "97"))
                                       (rule "replace_known_right" (formula "96") (term "0,0") (ifseqformula "55"))
                                       (builtin "One Step Simplification" (formula "96") (ifInst ""  (formula "56")))
                                       (rule "closeTrue" (formula "96"))
                                    )
                                    (branch " ¬o_3 = null ∧ ¬( o_3.<created> = TRUE ∨ o_3.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_3.<created>@anon_heap_concatenateMessageArray«anonHeapFunction» = TRUE ∨ o_3.<created>@anon_heap_concatenate_0«anonHeapFunction» = TRUE ∨ o_3.<created>@anon_heap_sign«anonHeapFunction» = TRUE) FALSE"
                                       (rule "close" (formula "93") (ifseqformula "1"))
                                    )
                                 )
                              )
                           )
                        )
                     )
                     (branch "CUT: result_3.length ≥ 1 FALSE"
                        (builtin "One Step Simplification" (formula "46"))
                        (rule "replace_known_right" (formula "45") (term "0,1") (ifseqformula "56"))
                        (builtin "One Step Simplification" (formula "45"))
                        (rule "replace_known_right" (formula "47") (term "0,1,1,0") (ifseqformula "56"))
                        (builtin "One Step Simplification" (formula "47"))
                        (rule "inEqSimp_geqRight" (formula "56"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_antiSymm" (formula "45") (ifseqformula "1"))
                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "45"))
                        (rule "leq_literals" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "applyEq" (formula "48") (term "1,1,1,0,0") (ifseqformula "44"))
                        (rule "add_zero_right" (formula "48") (term "1,1,0,0"))
                        (builtin "One Step Simplification" (formula "48"))
                        (rule "applyEq" (formula "47") (term "1,1,0,0") (ifseqformula "44"))
                        (builtin "One Step Simplification" (formula "47"))
                        (rule "applyEq" (formula "45") (term "0") (ifseqformula "44"))
                        (rule "qeq_literals" (formula "45"))
                        (rule "true_left" (formula "45"))
                        (rule "inEqSimp_or_tautInEq1" (formula "47") (term "0"))
                        (rule "add_zero_right" (formula "47") (term "1,1,0"))
                        (rule "qeq_literals" (formula "47") (term "1,0"))
                        (builtin "One Step Simplification" (formula "47"))
                        (rule "true_left" (formula "47"))
                        (rule "inEqSimp_or_tautInEq1" (formula "46") (term "0"))
                        (rule "add_zero_right" (formula "46") (term "1,1,0"))
                        (rule "qeq_literals" (formula "46") (term "1,0"))
                        (builtin "One Step Simplification" (formula "46"))
                        (rule "true_left" (formula "46"))
                        (rule "andRight" (formula "86"))
                        (branch "Case 1"
                           (rule "andRight" (formula "86"))
                           (branch "Case 1"
                              (rule "andRight" (formula "86"))
                              (branch "Case 1"
                                 (rule "allRight" (formula "86") (inst "sk=i_8"))
                                 (rule "orRight" (formula "86"))
                                 (rule "notRight" (formula "87"))
                                 (rule "orRight" (formula "87"))
                                 (rule "inEqSimp_leqRight" (formula "87"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_geqRight" (formula "88"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_8"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "78")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "51"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "43"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0,0") (ifseqformula "33"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0,0,0") (ifseqformula "29"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,0,0,0,0,0") (ifseqformula "7"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "51"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "78")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "43"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "33"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0,0") (ifseqformula "29"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,0,0,0,0") (ifseqformula "7"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "43"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "78")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "33"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "29"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "7"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "33"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "78")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "29"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "7"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "29"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "78")) (ifInst ""  (formula "7")))
                                 (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "14") (ifseqformula "77"))
                                 (rule "allLeft" (formula "20") (inst "t=i_8"))
                                 (rule "replace_known_left" (formula "20") (term "0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "20") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "inEqSimp_contradInEq1" (formula "20") (ifseqformula "1"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "inEqSimp_homoInEq1" (formula "20"))
                                 (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                 (rule "add_literals" (formula "20") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "20") (term "1,0"))
                                 (rule "add_zero_right" (formula "20") (term "0"))
                                 (rule "leq_literals" (formula "20"))
                                 (rule "closeFalse" (formula "20"))
                              )
                              (branch "Case 2"
                                 (rule "allRight" (formula "86") (inst "sk=i_7"))
                                 (rule "orRight" (formula "86"))
                                 (rule "notRight" (formula "87"))
                                 (rule "orRight" (formula "87"))
                                 (rule "inEqSimp_leqRight" (formula "87"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_geqRight" (formula "88"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_7"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "79")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "51"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "43"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0,0") (ifseqformula "33"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0,0,0") (ifseqformula "29"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,0,0,0,0,0") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "51"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "79")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "43"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "33"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0,0") (ifseqformula "29"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,0,0,0,0") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "43"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "79")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "33"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "29"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "33"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "79")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "29"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "29"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "79")) (ifInst ""  (formula "5")))
                                 (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "14") (ifseqformula "78"))
                                 (rule "allLeft" (formula "22") (inst "t=i_7"))
                                 (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "22") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "22"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0"))
                                 (rule "add_zero_right" (formula "1") (term "0"))
                                 (rule "leq_literals" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                           (branch "Case 2"
                              (rule "allRight" (formula "86") (inst "sk=i_6"))
                              (rule "orRight" (formula "86"))
                              (rule "notRight" (formula "87"))
                              (rule "orRight" (formula "87"))
                              (rule "inEqSimp_geqRight" (formula "88"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_leqRight" (formula "88"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_6"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "80")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "51"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "43"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0,0") (ifseqformula "33"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0,0,0") (ifseqformula "29"))
                              (rule "replace_known_left" (formula "3") (term "0,0,0,0,0,0,0") (ifseqformula "6"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "51"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "80")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "43"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "33"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0,0") (ifseqformula "29"))
                              (rule "replace_known_left" (formula "3") (term "0,0,0,0,0,0") (ifseqformula "6"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "43"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "80")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "33"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "29"))
                              (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "6"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "33"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "80")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "29"))
                              (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "6"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "29"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "80")) (ifInst ""  (formula "6")))
                              (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "14") (ifseqformula "79"))
                              (rule "allLeft" (formula "24") (inst "t=i_6"))
                              (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "24") (term "0,0"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "24"))
                              (rule "andLeft" (formula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "2"))
                              (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "1,1,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0"))
                              (rule "add_zero_right" (formula "2") (term "0"))
                              (rule "leq_literals" (formula "2"))
                              (rule "closeFalse" (formula "2"))
                           )
                        )
                        (branch "Case 2"
                           (rule "allRight" (formula "86") (inst "sk=f_2"))
                           (rule "allRight" (formula "86") (inst "sk=o_2"))
                           (rule "orRight" (formula "86"))
                           (rule "pullOutSelect" (formula "87") (term "0") (inst "selectSK=f_2_0"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "52"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "48"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "40"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "30"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "26"))
                           (rule "eqSymm" (formula "88"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "49"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "41"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "31"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "27"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_2"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "42"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "32"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "28"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_3"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "29"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_4"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "91")))
                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "commute_or_2" (formula "2") (term "0,1,0,0"))
                           (rule "commute_or_2" (formula "3") (term "0,0,1,0,0"))
                           (rule "commute_or_2" (formula "4") (term "0,0,0,1,0,0"))
                           (rule "ifthenelse_split" (formula "1") (term "0"))
                           (branch " ¬o_2 = null ∧ ¬( o_2.<created> = TRUE ∨ o_2.<created>@anon_heap_concatenateMessageArray«anonHeapFunction» = TRUE) TRUE"
                              (rule "andLeft" (formula "1"))
                              (rule "notLeft" (formula "2"))
                              (rule "notLeft" (formula "1"))
                              (rule "orRight" (formula "59"))
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_right" (formula "1") (term "1,0,1,0,0") (ifseqformula "59"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")) (ifInst ""  (formula "58")))
                              (rule "replace_known_right" (formula "3") (term "1,0,0,0,1,0,0") (ifseqformula "59"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "57")) (ifInst ""  (formula "58")))
                              (rule "replace_known_right" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "59"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "57")) (ifInst ""  (formula "58")))
                              (rule "replace_known_right" (formula "92") (term "0,1") (ifseqformula "58"))
                              (builtin "One Step Simplification" (formula "92") (ifInst ""  (formula "57")))
                              (rule "closeTrue" (formula "92"))
                           )
                           (branch " ¬o_2 = null ∧ ¬( o_2.<created> = TRUE ∨ o_2.<created>@anon_heap_concatenateMessageArray«anonHeapFunction» = TRUE) FALSE"
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch " ¬o_2 = null ∧ ¬( o_2.<created> = TRUE ∨ o_2.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_2.<created>@anon_heap_concatenateMessageArray«anonHeapFunction» = TRUE) TRUE"
                                 (rule "andLeft" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "orRight" (formula "57"))
                                 (rule "orRight" (formula "57"))
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "59"))
                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "56")) (ifInst ""  (formula "57")) (ifInst ""  (formula "58")))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "59"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")) (ifInst ""  (formula "57")) (ifInst ""  (formula "58")))
                                 (rule "replace_known_right" (formula "93") (term "0,0") (ifseqformula "59"))
                                 (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "56")))
                                 (rule "closeTrue" (formula "93"))
                              )
                              (branch " ¬o_2 = null ∧ ¬( o_2.<created> = TRUE ∨ o_2.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_2.<created>@anon_heap_concatenateMessageArray«anonHeapFunction» = TRUE) FALSE"
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch " ¬o_2 = null ∧ ¬( o_2.<created> = TRUE ∨ o_2.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_2.<created>@anon_heap_concatenateMessageArray«anonHeapFunction» = TRUE ∨ o_2.<created>@anon_heap_concatenate_0«anonHeapFunction» = TRUE) TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "orRight" (formula "56"))
                                    (rule "orRight" (formula "56"))
                                    (rule "orRight" (formula "56"))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0,1,0,0") (ifseqformula "58"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")) (ifInst ""  (formula "55")) (ifInst ""  (formula "56")) (ifInst ""  (formula "57")))
                                    (rule "replace_known_right" (formula "94") (term "0,0") (ifseqformula "59"))
                                    (builtin "One Step Simplification" (formula "94") (ifInst ""  (formula "55")))
                                    (rule "closeTrue" (formula "94"))
                                 )
                                 (branch " ¬o_2 = null ∧ ¬( o_2.<created> = TRUE ∨ o_2.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_2.<created>@anon_heap_concatenateMessageArray«anonHeapFunction» = TRUE ∨ o_2.<created>@anon_heap_concatenate_0«anonHeapFunction» = TRUE) FALSE"
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch " ¬o_2 = null ∧ ¬( o_2.<created> = TRUE ∨ o_2.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_2.<created>@anon_heap_concatenateMessageArray«anonHeapFunction» = TRUE ∨ o_2.<created>@anon_heap_concatenate_0«anonHeapFunction» = TRUE ∨ o_2.<created>@anon_heap_sign«anonHeapFunction» = TRUE) TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "orRight" (formula "56"))
                                       (rule "orRight" (formula "56"))
                                       (rule "orRight" (formula "56"))
                                       (rule "orRight" (formula "56"))
                                       (rule "applyEqReverse" (formula "97") (term "1") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "eqSymm" (formula "96"))
                                       (rule "replace_known_right" (formula "95") (term "0,1") (ifseqformula "55"))
                                       (builtin "One Step Simplification" (formula "95") (ifInst ""  (formula "54")))
                                       (rule "closeTrue" (formula "95"))
                                    )
                                    (branch " ¬o_2 = null ∧ ¬( o_2.<created> = TRUE ∨ o_2.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_2.<created>@anon_heap_concatenateMessageArray«anonHeapFunction» = TRUE ∨ o_2.<created>@anon_heap_concatenate_0«anonHeapFunction» = TRUE ∨ o_2.<created>@anon_heap_sign«anonHeapFunction» = TRUE) FALSE"
                                       (rule "close" (formula "92") (ifseqformula "1"))
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
                  (branch "CUT: result_1.length ≥ 1 FALSE"
                     (builtin "One Step Simplification" (formula "38"))
                     (rule "replace_known_right" (formula "36") (term "0,1") (ifseqformula "57"))
                     (builtin "One Step Simplification" (formula "36"))
                     (rule "replace_known_right" (formula "37") (term "0,1,1,0") (ifseqformula "57"))
                     (builtin "One Step Simplification" (formula "37"))
                     (rule "inEqSimp_geqRight" (formula "57"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_antiSymm" (formula "36") (ifseqformula "1"))
                     (rule "applyEq" (formula "37") (term "0") (ifseqformula "36"))
                     (rule "qeq_literals" (formula "37"))
                     (rule "true_left" (formula "37"))
                     (rule "applyEq" (formula "38") (term "1,1,0,0") (ifseqformula "36"))
                     (builtin "One Step Simplification" (formula "38"))
                     (rule "applyEq" (formula "45") (term "1,1,0,0") (ifseqformula "36"))
                     (rule "seqDef_lower_equals_upper" (formula "45") (term "1,0,0"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "36"))
                     (rule "leq_literals" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "applyEq" (formula "48") (term "1,1,0,0,0,0,0,0") (ifseqformula "35"))
                     (rule "seqDef_lower_equals_upper" (formula "48") (term "1,0,0,0,0,0,0"))
                     (rule "applyEq" (formula "47") (term "1,1,0,0,0,0,0,0") (ifseqformula "35"))
                     (rule "seqDef_lower_equals_upper" (formula "47") (term "1,0,0,0,0,0,0"))
                     (rule "applyEq" (formula "46") (term "1,1,0,0") (ifseqformula "35"))
                     (rule "seqDef_lower_equals_upper" (formula "46") (term "1,0,0"))
                     (rule "applyEq" (formula "38") (term "1,1,1,0,0") (ifseqformula "35"))
                     (rule "add_zero_right" (formula "38") (term "1,1,0,0"))
                     (builtin "One Step Simplification" (formula "38"))
                     (rule "inEqSimp_or_tautInEq1" (formula "37") (term "0"))
                     (rule "add_literals" (formula "37") (term "1,1,0"))
                     (rule "qeq_literals" (formula "37") (term "1,0"))
                     (builtin "One Step Simplification" (formula "37"))
                     (rule "true_left" (formula "37"))
                     (rule "inEqSimp_or_tautInEq1" (formula "37") (term "0"))
                     (rule "add_zero_right" (formula "37") (term "1,1,0"))
                     (rule "qeq_literals" (formula "37") (term "1,0"))
                     (builtin "One Step Simplification" (formula "37"))
                     (rule "true_left" (formula "37"))
                     (rule "cut_direct" (formula "45") (term "0,1,1,0"))
                     (branch "CUT: result_3.length ≥ 1 TRUE"
                        (builtin "One Step Simplification" (formula "46"))
                        (rule "replace_known_left" (formula "44") (term "0,1") (ifseqformula "45"))
                        (builtin "One Step Simplification" (formula "44"))
                        (rule "replace_known_left" (formula "47") (term "0,1,1,0") (ifseqformula "45"))
                        (builtin "One Step Simplification" (formula "47"))
                        (rule "inEqSimp_subsumption1" (formula "43") (ifseqformula "45"))
                        (rule "leq_literals" (formula "43") (term "0"))
                        (builtin "One Step Simplification" (formula "43"))
                        (rule "true_left" (formula "43"))
                        (rule "inEqSimp_or_tautInEq1" (formula "46") (term "0"))
                        (rule "inEqSimp_homoInEq1" (formula "46") (term "1,0"))
                        (rule "polySimp_pullOutFactor1" (formula "46") (term "0,1,0"))
                        (rule "add_literals" (formula "46") (term "1,0,1,0"))
                        (rule "times_zero_1" (formula "46") (term "0,1,0"))
                        (rule "leq_literals" (formula "46") (term "1,0"))
                        (builtin "One Step Simplification" (formula "46"))
                        (rule "true_left" (formula "46"))
                        (rule "andRight" (formula "86"))
                        (branch "Case 1"
                           (rule "andRight" (formula "86"))
                           (branch "Case 1"
                              (rule "andRight" (formula "86"))
                              (branch "Case 1"
                                 (rule "allRight" (formula "86") (inst "sk=i_5"))
                                 (rule "orRight" (formula "86"))
                                 (rule "notRight" (formula "87"))
                                 (rule "orRight" (formula "87"))
                                 (rule "inEqSimp_geqRight" (formula "88"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "88"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_5"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "78")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "51"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "42"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0,0") (ifseqformula "33"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0,0,0") (ifseqformula "29"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,0,0,0,0,0") (ifseqformula "7"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "51"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "78")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "42"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "33"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0,0") (ifseqformula "29"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,0,0,0,0") (ifseqformula "7"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "42"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "78")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "33"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "29"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "7"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "33"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "78")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "29"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "7"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "29"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "78")) (ifInst ""  (formula "7")))
                                 (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "14") (ifseqformula "77"))
                                 (rule "allLeft" (formula "20") (inst "t=i_5"))
                                 (rule "replace_known_left" (formula "20") (term "0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                 (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "20") (term "0,0,1"))
                                 (rule "leq_literals" (formula "20") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "inEqSimp_contradInEq1" (formula "20") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "20") (term "0"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "closeFalse" (formula "20"))
                              )
                              (branch "Case 2"
                                 (rule "allRight" (formula "86") (inst "sk=i_4"))
                                 (rule "orRight" (formula "86"))
                                 (rule "notRight" (formula "87"))
                                 (rule "orRight" (formula "87"))
                                 (rule "inEqSimp_geqRight" (formula "88"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "88"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_4"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "79")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "51"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "42"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0,0") (ifseqformula "33"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0,0,0") (ifseqformula "29"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,0,0,0,0,0") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "51"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "79")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "42"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "33"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0,0") (ifseqformula "29"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,0,0,0,0") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "42"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "79")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "33"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "29"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "33"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "79")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "29"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "29"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "79")) (ifInst ""  (formula "5")))
                                 (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "14") (ifseqformula "78"))
                                 (rule "allLeft" (formula "22") (inst "t=i_4"))
                                 (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                 (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "22") (term "0,0,1"))
                                 (rule "leq_literals" (formula "22") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "22"))
                                 (rule "qeq_literals" (formula "1") (term "0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                           (branch "Case 2"
                              (rule "allRight" (formula "86") (inst "sk=i_3"))
                              (rule "orRight" (formula "86"))
                              (rule "notRight" (formula "87"))
                              (rule "orRight" (formula "87"))
                              (rule "inEqSimp_leqRight" (formula "87"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_geqRight" (formula "88"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_3"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "80")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "51"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "42"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0,0") (ifseqformula "33"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0,0,0") (ifseqformula "29"))
                              (rule "replace_known_left" (formula "3") (term "0,0,0,0,0,0,0") (ifseqformula "6"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "51"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "80")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "42"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "33"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0,0") (ifseqformula "29"))
                              (rule "replace_known_left" (formula "3") (term "0,0,0,0,0,0") (ifseqformula "6"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "42"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "80")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "33"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "29"))
                              (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "6"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "33"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "80")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "29"))
                              (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "6"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "29"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "80")) (ifInst ""  (formula "6")))
                              (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "14") (ifseqformula "79"))
                              (rule "allLeft" (formula "24") (inst "t=i_3"))
                              (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                              (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                              (rule "add_literals" (formula "24") (term "0,0,1"))
                              (rule "leq_literals" (formula "24") (term "0,1"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "24") (term "0"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "closeFalse" (formula "24"))
                           )
                        )
                        (branch "Case 2"
                           (rule "allRight" (formula "86") (inst "sk=f_1"))
                           (rule "allRight" (formula "86") (inst "sk=o_1"))
                           (rule "orRight" (formula "86"))
                           (rule "pullOutSelect" (formula "87") (term "0") (inst "selectSK=f_1_0"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "52"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "48"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "39"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "30"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "26"))
                           (rule "eqSymm" (formula "88"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "49"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "40"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "31"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "27"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_2"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "41"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "32"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "28"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_3"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "29"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_4"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "91")))
                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "commute_or_2" (formula "2") (term "0,1,0,0"))
                           (rule "commute_or_2" (formula "3") (term "0,0,1,0,0"))
                           (rule "commute_or_2" (formula "4") (term "0,0,0,1,0,0"))
                           (rule "ifthenelse_split" (formula "1") (term "0"))
                           (branch " ¬o_1 = null ∧ ¬( o_1.<created> = TRUE ∨ o_1.<created>@anon_heap_concatenateMessageArray«anonHeapFunction» = TRUE) TRUE"
                              (rule "andLeft" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "orRight" (formula "58"))
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "57"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")) (ifInst ""  (formula "58")))
                              (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "59"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "57")) (ifInst ""  (formula "58")))
                              (rule "replace_known_right" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "58"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "59")) (ifInst ""  (formula "57")))
                              (rule "replace_known_right" (formula "92") (term "0,0") (ifseqformula "59"))
                              (builtin "One Step Simplification" (formula "92") (ifInst ""  (formula "57")))
                              (rule "closeTrue" (formula "92"))
                           )
                           (branch " ¬o_1 = null ∧ ¬( o_1.<created> = TRUE ∨ o_1.<created>@anon_heap_concatenateMessageArray«anonHeapFunction» = TRUE) FALSE"
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "lenNonNegative" (formula "45") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "45"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch " ¬o_1 = null ∧ ¬( o_1.<created> = TRUE ∨ o_1.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_1.<created>@anon_heap_concatenateMessageArray«anonHeapFunction» = TRUE) TRUE"
                                 (rule "andLeft" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "orRight" (formula "57"))
                                 (rule "orRight" (formula "57"))
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "59"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")) (ifInst ""  (formula "57")) (ifInst ""  (formula "58")))
                                 (rule "replace_known_right" (formula "2") (term "1,0,0,0,1,0,0") (ifseqformula "58"))
                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "59")) (ifInst ""  (formula "56")) (ifInst ""  (formula "57")))
                                 (rule "replace_known_right" (formula "93") (term "0,1") (ifseqformula "56"))
                                 (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "59")))
                                 (rule "closeTrue" (formula "93"))
                              )
                              (branch " ¬o_1 = null ∧ ¬( o_1.<created> = TRUE ∨ o_1.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_1.<created>@anon_heap_concatenateMessageArray«anonHeapFunction» = TRUE) FALSE"
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch " ¬o_1 = null ∧ ¬( o_1.<created> = TRUE ∨ o_1.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_1.<created>@anon_heap_concatenateMessageArray«anonHeapFunction» = TRUE ∨ o_1.<created>@anon_heap_concatenate_0«anonHeapFunction» = TRUE) TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "orRight" (formula "56"))
                                    (rule "orRight" (formula "56"))
                                    (rule "orRight" (formula "56"))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0,0,1,0,0") (ifseqformula "55"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")) (ifInst ""  (formula "56")) (ifInst ""  (formula "57")) (ifInst ""  (formula "58")))
                                    (rule "replace_known_right" (formula "94") (term "0,1") (ifseqformula "55"))
                                    (builtin "One Step Simplification" (formula "94") (ifInst ""  (formula "59")))
                                    (rule "closeTrue" (formula "94"))
                                 )
                                 (branch " ¬o_1 = null ∧ ¬( o_1.<created> = TRUE ∨ o_1.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_1.<created>@anon_heap_concatenateMessageArray«anonHeapFunction» = TRUE ∨ o_1.<created>@anon_heap_concatenate_0«anonHeapFunction» = TRUE) FALSE"
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch " ¬o_1 = null ∧ ¬( o_1.<created> = TRUE ∨ o_1.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_1.<created>@anon_heap_concatenateMessageArray«anonHeapFunction» = TRUE ∨ o_1.<created>@anon_heap_concatenate_0«anonHeapFunction» = TRUE ∨ o_1.<created>@anon_heap_sign«anonHeapFunction» = TRUE) TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "orRight" (formula "56"))
                                       (rule "orRight" (formula "56"))
                                       (rule "orRight" (formula "56"))
                                       (rule "orRight" (formula "56"))
                                       (rule "applyEqReverse" (formula "97") (term "1") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "eqSymm" (formula "96"))
                                       (rule "replace_known_right" (formula "95") (term "0,0") (ifseqformula "54"))
                                       (builtin "One Step Simplification" (formula "95") (ifInst ""  (formula "55")))
                                       (rule "closeTrue" (formula "95"))
                                    )
                                    (branch " ¬o_1 = null ∧ ¬( o_1.<created> = TRUE ∨ o_1.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_1.<created>@anon_heap_concatenateMessageArray«anonHeapFunction» = TRUE ∨ o_1.<created>@anon_heap_concatenate_0«anonHeapFunction» = TRUE ∨ o_1.<created>@anon_heap_sign«anonHeapFunction» = TRUE) FALSE"
                                       (rule "close" (formula "92") (ifseqformula "1"))
                                    )
                                 )
                              )
                           )
                        )
                     )
                     (branch "CUT: result_3.length ≥ 1 FALSE"
                        (builtin "One Step Simplification" (formula "45"))
                        (rule "replace_known_right" (formula "46") (term "0,1,1,0") (ifseqformula "55"))
                        (builtin "One Step Simplification" (formula "46"))
                        (rule "replace_known_right" (formula "44") (term "0,1") (ifseqformula "55"))
                        (builtin "One Step Simplification" (formula "44"))
                        (rule "inEqSimp_geqRight" (formula "55"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_antiSymm" (formula "44") (ifseqformula "1"))
                        (rule "applyEq" (formula "47") (term "1,1,0,0") (ifseqformula "44"))
                        (builtin "One Step Simplification" (formula "47"))
                        (rule "applyEq" (formula "45") (term "0") (ifseqformula "44"))
                        (rule "qeq_literals" (formula "45"))
                        (rule "true_left" (formula "45"))
                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "44"))
                        (rule "leq_literals" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "applyEq" (formula "46") (term "1,1,1,0,0") (ifseqformula "43"))
                        (rule "add_literals" (formula "46") (term "1,1,0,0"))
                        (builtin "One Step Simplification" (formula "46"))
                        (rule "inEqSimp_or_tautInEq1" (formula "45") (term "0"))
                        (rule "add_zero_right" (formula "45") (term "1,1,0"))
                        (rule "qeq_literals" (formula "45") (term "1,0"))
                        (builtin "One Step Simplification" (formula "45"))
                        (rule "true_left" (formula "45"))
                        (rule "inEqSimp_or_tautInEq1" (formula "45") (term "0"))
                        (rule "add_zero_right" (formula "45") (term "1,1,0"))
                        (rule "qeq_literals" (formula "45") (term "1,0"))
                        (builtin "One Step Simplification" (formula "45"))
                        (rule "true_left" (formula "45"))
                        (rule "andRight" (formula "85"))
                        (branch "Case 1"
                           (rule "andRight" (formula "85"))
                           (branch "Case 1"
                              (rule "andRight" (formula "85"))
                              (branch "Case 1"
                                 (rule "allRight" (formula "85") (inst "sk=i_2"))
                                 (rule "orRight" (formula "85"))
                                 (rule "notRight" (formula "86"))
                                 (rule "orRight" (formula "86"))
                                 (rule "inEqSimp_leqRight" (formula "86"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_geqRight" (formula "87"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_2"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "77")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "50"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "42"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0,0") (ifseqformula "33"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0,0,0") (ifseqformula "29"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,0,0,0,0,0") (ifseqformula "7"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "50"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "77")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "42"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "33"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0,0") (ifseqformula "29"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,0,0,0,0") (ifseqformula "7"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "42"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "77")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "33"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "29"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "7"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "33"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "77")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "29"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "7"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "29"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "77")) (ifInst ""  (formula "7")))
                                 (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "14") (ifseqformula "76"))
                                 (rule "allLeft" (formula "20") (inst "t=i_2"))
                                 (rule "replace_known_left" (formula "20") (term "0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "20") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "inEqSimp_contradInEq1" (formula "20") (ifseqformula "1"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "inEqSimp_homoInEq1" (formula "20"))
                                 (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                 (rule "add_literals" (formula "20") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "20") (term "1,0"))
                                 (rule "add_zero_right" (formula "20") (term "0"))
                                 (rule "leq_literals" (formula "20"))
                                 (rule "closeFalse" (formula "20"))
                              )
                              (branch "Case 2"
                                 (rule "allRight" (formula "85") (inst "sk=i_1"))
                                 (rule "orRight" (formula "85"))
                                 (rule "notRight" (formula "86"))
                                 (rule "orRight" (formula "86"))
                                 (rule "inEqSimp_leqRight" (formula "86"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_geqRight" (formula "87"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "78")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "50"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "42"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0,0") (ifseqformula "33"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0,0,0") (ifseqformula "29"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,0,0,0,0,0") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "50"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "78")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "42"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "33"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0,0") (ifseqformula "29"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,0,0,0,0") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "42"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "78")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "33"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "29"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "33"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "78")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "29"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "29"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "78")) (ifInst ""  (formula "5")))
                                 (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "14") (ifseqformula "77"))
                                 (rule "allLeft" (formula "22") (inst "t=i_1"))
                                 (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "22") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "inEqSimp_contradInEq1" (formula "22") (ifseqformula "1"))
                                 (rule "andLeft" (formula "22"))
                                 (rule "inEqSimp_homoInEq1" (formula "22"))
                                 (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                 (rule "add_literals" (formula "22") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "22") (term "1,0"))
                                 (rule "add_zero_right" (formula "22") (term "0"))
                                 (rule "leq_literals" (formula "22"))
                                 (rule "closeFalse" (formula "22"))
                              )
                           )
                           (branch "Case 2"
                              (rule "allRight" (formula "85") (inst "sk=i_0"))
                              (rule "orRight" (formula "85"))
                              (rule "notRight" (formula "86"))
                              (rule "orRight" (formula "86"))
                              (rule "inEqSimp_geqRight" (formula "87"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_leqRight" (formula "87"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_0"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "79")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "50"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "42"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0,0") (ifseqformula "33"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0,0,0") (ifseqformula "29"))
                              (rule "replace_known_left" (formula "3") (term "0,0,0,0,0,0,0") (ifseqformula "6"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "50"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "79")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "42"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "33"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0,0") (ifseqformula "29"))
                              (rule "replace_known_left" (formula "3") (term "0,0,0,0,0,0") (ifseqformula "6"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "42"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "79")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "33"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "29"))
                              (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "6"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "33"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "79")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "29"))
                              (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "6"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "29"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "79")) (ifInst ""  (formula "6")))
                              (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "14") (ifseqformula "78"))
                              (rule "allLeft" (formula "24") (inst "t=i_0"))
                              (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "24") (term "0,0"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "2"))
                              (rule "andLeft" (formula "24"))
                              (rule "inEqSimp_homoInEq1" (formula "24"))
                              (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                              (rule "add_literals" (formula "24") (term "1,1,0"))
                              (rule "times_zero_1" (formula "24") (term "1,0"))
                              (rule "add_zero_right" (formula "24") (term "0"))
                              (rule "leq_literals" (formula "24"))
                              (rule "closeFalse" (formula "24"))
                           )
                        )
                        (branch "Case 2"
                           (rule "allRight" (formula "85") (inst "sk=f_0"))
                           (rule "allRight" (formula "85") (inst "sk=o_0"))
                           (rule "orRight" (formula "85"))
                           (rule "pullOutSelect" (formula "86") (term "0") (inst "selectSK=f_0_0"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "47"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "39"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "30"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0,1,0,0") (ifseqformula "26"))
                           (rule "eqSymm" (formula "87"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "48"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "40"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "31"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "27"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "41"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "32"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "28"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_3"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "29"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_4"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "90")))
                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "commute_or_2" (formula "2") (term "0,1,0,0"))
                           (rule "commute_or_2" (formula "3") (term "0,0,1,0,0"))
                           (rule "commute_or_2" (formula "4") (term "0,0,0,1,0,0"))
                           (rule "lenNonNegative" (formula "46") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "46"))
                           (rule "ifthenelse_split" (formula "1") (term "0"))
                           (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_concatenateMessageArray«anonHeapFunction» = TRUE) TRUE"
                              (rule "andLeft" (formula "1"))
                              (rule "notLeft" (formula "2"))
                              (rule "notLeft" (formula "1"))
                              (rule "orRight" (formula "58"))
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "56"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "57")) (ifInst ""  (formula "58")))
                              (rule "replace_known_right" (formula "2") (term "0,0,0,0,1,0,0") (ifseqformula "57"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "56")) (ifInst ""  (formula "58")))
                              (rule "replace_known_right" (formula "1") (term "1,0,1,0,0") (ifseqformula "58"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")) (ifInst ""  (formula "57")))
                              (rule "replace_known_right" (formula "91") (term "0,1") (ifseqformula "57"))
                              (builtin "One Step Simplification" (formula "91") (ifInst ""  (formula "56")))
                              (rule "closeTrue" (formula "91"))
                           )
                           (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_concatenateMessageArray«anonHeapFunction» = TRUE) FALSE"
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_0.<created>@anon_heap_concatenateMessageArray«anonHeapFunction» = TRUE) TRUE"
                                 (rule "andLeft" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "orRight" (formula "56"))
                                 (rule "orRight" (formula "56"))
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "replace_known_right" (formula "1") (term "1,0,0,1,0,0") (ifseqformula "57"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")) (ifInst ""  (formula "55")) (ifInst ""  (formula "56")))
                                 (rule "replace_known_right" (formula "2") (term "1,0,0,0,0,1,0,0") (ifseqformula "56"))
                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "58")) (ifInst ""  (formula "55")) (ifInst ""  (formula "57")))
                                 (rule "replace_known_right" (formula "92") (term "0,0") (ifseqformula "58"))
                                 (builtin "One Step Simplification" (formula "92") (ifInst ""  (formula "55")))
                                 (rule "closeTrue" (formula "92"))
                              )
                              (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_0.<created>@anon_heap_concatenateMessageArray«anonHeapFunction» = TRUE) FALSE"
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_0.<created>@anon_heap_concatenateMessageArray«anonHeapFunction» = TRUE ∨ o_0.<created>@anon_heap_concatenate_0«anonHeapFunction» = TRUE) TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "orRight" (formula "55"))
                                    (rule "orRight" (formula "55"))
                                    (rule "orRight" (formula "55"))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0,0,1,0,0") (ifseqformula "56"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")) (ifInst ""  (formula "54")) (ifInst ""  (formula "55")) (ifInst ""  (formula "57")))
                                    (rule "replace_known_right" (formula "93") (term "0,1") (ifseqformula "54"))
                                    (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "58")))
                                    (rule "closeTrue" (formula "93"))
                                 )
                                 (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_0.<created>@anon_heap_concatenateMessageArray«anonHeapFunction» = TRUE ∨ o_0.<created>@anon_heap_concatenate_0«anonHeapFunction» = TRUE) FALSE"
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_0.<created>@anon_heap_concatenateMessageArray«anonHeapFunction» = TRUE ∨ o_0.<created>@anon_heap_concatenate_0«anonHeapFunction» = TRUE ∨ o_0.<created>@anon_heap_sign«anonHeapFunction» = TRUE) TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "orRight" (formula "55"))
                                       (rule "orRight" (formula "55"))
                                       (rule "orRight" (formula "55"))
                                       (rule "orRight" (formula "55"))
                                       (rule "applyEqReverse" (formula "96") (term "1") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "eqSymm" (formula "95"))
                                       (rule "replace_known_right" (formula "94") (term "0,0") (ifseqformula "53"))
                                       (builtin "One Step Simplification" (formula "94") (ifInst ""  (formula "54")))
                                       (rule "closeTrue" (formula "94"))
                                    )
                                    (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_concatenate«anonHeapFunction» = TRUE ∨ o_0.<created>@anon_heap_concatenateMessageArray«anonHeapFunction» = TRUE ∨ o_0.<created>@anon_heap_concatenate_0«anonHeapFunction» = TRUE ∨ o_0.<created>@anon_heap_sign«anonHeapFunction» = TRUE) FALSE"
                                       (rule "close" (formula "91") (ifseqformula "1"))
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
               )
               (branch "Exceptional Post (concatenate)"
                  (builtin "One Step Simplification" (formula "81"))
                  (builtin "One Step Simplification" (formula "54"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "0,0,1,0,1,1") (ifseqformula "50"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "0,0,0,1,0,1,1") (ifseqformula "40"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "0,0,0,0,1,0,1,1") (ifseqformula "29"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "0,0,0,0,0,1,0,1,1") (ifseqformula "25"))
                  (rule "andLeft" (formula "54"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "55") (term "1,0") (ifseqformula "54"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "55") (term "0,1,0") (ifseqformula "50"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "55") (term "0,0,1,0") (ifseqformula "40"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "55") (term "0,0,0,1,0") (ifseqformula "29"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "55") (term "0,0,0,0,1,0") (ifseqformula "25"))
                  (rule "andLeft" (formula "55"))
                  (rule "andLeft" (formula "55"))
                  (rule "andLeft" (formula "57"))
                  (rule "notLeft" (formula "55"))
                  (rule "close" (formula "58") (ifseqformula "57"))
               )
               (branch "Pre (concatenate)"
                  (builtin "One Step Simplification" (formula "79") (ifInst ""  (formula "61")) (ifInst ""  (formula "53")) (ifInst ""  (formula "61")) (ifInst ""  (formula "53")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "79") (term "1") (ifseqformula "50"))
                  (rule "wellFormedAnonEQ" (formula "79") (term "0,0") (ifseqformula "50"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "79") (term "1,0") (ifseqformula "50"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "79") (term "0,1") (ifseqformula "40"))
                  (rule "wellFormedAnonEQ" (formula "79") (term "0,0,0") (ifseqformula "40"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "79") (term "0,1,0") (ifseqformula "40"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "79") (term "0,0,1") (ifseqformula "29"))
                  (rule "wellFormedAnonEQ" (formula "79") (term "0,0,0,0") (ifseqformula "29"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "79") (term "0,0,0,1") (ifseqformula "25"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "79") (term "0,0,1,0") (ifseqformula "29"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "79") (term "0,0,0,1,0") (ifseqformula "25"))
                  (rule "wellFormedAnonEQ" (formula "79") (term "0,0,0,0,0") (ifseqformula "25"))
                  (rule "replace_known_left" (formula "79") (term "1,1") (ifseqformula "51"))
                  (builtin "One Step Simplification" (formula "79") (ifInst ""  (formula "11")) (ifInst ""  (formula "24")) (ifInst ""  (formula "28")) (ifInst ""  (formula "39")) (ifInst ""  (formula "49")) (ifInst ""  (formula "58")) (ifInst ""  (formula "59")) (ifInst ""  (formula "60")) (ifInst ""  (formula "42")) (ifInst ""  (formula "54")) (ifInst ""  (formula "55")) (ifInst ""  (formula "56")) (ifInst ""  (formula "57")))
                  (rule "closeTrue" (formula "79"))
               )
            )
            (branch "Exceptional Post (sign)"
               (builtin "One Step Simplification" (formula "72"))
               (builtin "One Step Simplification" (formula "50"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "50") (term "0,0,1,0,1,1") (ifseqformula "40"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "50") (term "0,0,0,1,0,1,1") (ifseqformula "29"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "50") (term "0,0,0,0,1,0,1,1") (ifseqformula "25"))
               (rule "andLeft" (formula "50"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "1,0") (ifseqformula "50"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "0,1,0") (ifseqformula "40"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "0,0,1,0") (ifseqformula "29"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "51") (term "0,0,0,1,0") (ifseqformula "25"))
               (rule "andLeft" (formula "51"))
               (rule "andLeft" (formula "51"))
               (rule "andLeft" (formula "53"))
               (rule "notLeft" (formula "51"))
               (rule "close" (formula "54") (ifseqformula "53"))
            )
            (branch "Pre (sign)"
               (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "52")) (ifInst ""  (formula "52")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "70") (term "1") (ifseqformula "40"))
               (rule "wellFormedAnonEQ" (formula "70") (term "0") (ifseqformula "40"))
               (rule "wellFormedAnonEQ" (formula "70") (term "0,0") (ifseqformula "29"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "70") (term "0,1") (ifseqformula "29"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "70") (term "0,0,1") (ifseqformula "25"))
               (rule "wellFormedAnonEQ" (formula "70") (term "0,0,0") (ifseqformula "25"))
               (rule "replace_known_left" (formula "70") (term "1,1") (ifseqformula "42"))
               (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "11")) (ifInst ""  (formula "24")) (ifInst ""  (formula "28")) (ifInst ""  (formula "39")) (ifInst ""  (formula "49")) (ifInst ""  (formula "50")) (ifInst ""  (formula "51")))
               (rule "closeTrue" (formula "70"))
            )
            (branch "Null reference (s = null)"
               (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "63")))
               (rule "closeTrue" (formula "70"))
            )
         )
         (branch "Exceptional Post (concatenate)"
            (builtin "One Step Simplification" (formula "40"))
            (builtin "One Step Simplification" (formula "58"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,0,1,0,1,1") (ifseqformula "29"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,0,0,1,0,1,1") (ifseqformula "25"))
            (rule "andLeft" (formula "40"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "1,0") (ifseqformula "40"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "0,1,0") (ifseqformula "29"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "0,0,1,0") (ifseqformula "25"))
            (rule "andLeft" (formula "41"))
            (rule "andLeft" (formula "42"))
            (rule "andLeft" (formula "41"))
            (rule "andLeft" (formula "43"))
            (rule "notLeft" (formula "41"))
            (rule "close" (formula "45") (ifseqformula "44"))
         )
         (branch "Pre (concatenate)"
            (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "55")) (ifInst ""  (formula "41")) (ifInst ""  (formula "55")) (ifInst ""  (formula "41")))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "1") (ifseqformula "29"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "1,0") (ifseqformula "29"))
            (rule "wellFormedAnonEQ" (formula "56") (term "0,0") (ifseqformula "29"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "0,1") (ifseqformula "25"))
            (rule "wellFormedAnonEQ" (formula "56") (term "0,0,0") (ifseqformula "25"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "56") (term "0,1,0") (ifseqformula "25"))
            (rule "replace_known_right" (formula "56") (term "0,0,1") (ifseqformula "39"))
            (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "11")) (ifInst ""  (formula "24")) (ifInst ""  (formula "28")) (ifInst ""  (formula "4")) (ifInst ""  (formula "40")) (ifInst ""  (formula "31")))
            (rule "closeTrue" (formula "56"))
         )
      )
      (branch "Exceptional Post (concatenate)"
         (builtin "One Step Simplification" (formula "30"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "0,0,1,0,1,1") (ifseqformula "11"))
         (rule "andLeft" (formula "15"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "1,0") (ifseqformula "15"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "0,1,0") (ifseqformula "11"))
         (rule "andLeft" (formula "16"))
         (rule "andLeft" (formula "16"))
         (rule "andLeft" (formula "18"))
         (rule "notLeft" (formula "16"))
         (rule "close" (formula "19") (ifseqformula "18"))
      )
      (branch "Pre (concatenate)"
         (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "24")) (ifInst ""  (formula "15")) (ifInst ""  (formula "24")) (ifInst ""  (formula "15")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "1") (ifseqformula "11"))
         (rule "wellFormedAnonEQ" (formula "28") (term "0,0") (ifseqformula "11"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "1,0") (ifseqformula "11"))
         (rule "replace_known_left" (formula "28") (term "1,1") (ifseqformula "13"))
         (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "1")) (ifInst ""  (formula "10")) (ifInst ""  (formula "14")))
         (rule "orRight" (formula "28"))
         (rule "referencedObjectIsCreatedRight" (formula "28") (ifseqformula "24"))
         (rule "close" (formula "28") (ifseqformula "1"))
      )
   )
   (branch "Exceptional Post (concatenateMessageArray)"
      (builtin "One Step Simplification" (formula "11"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "andLeft" (formula "11"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "1,0") (ifseqformula "11"))
      (rule "andLeft" (formula "12"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "12"))
      (rule "andLeft" (formula "14"))
      (rule "notLeft" (formula "12"))
      (rule "close" (formula "16") (ifseqformula "15"))
   )
   (branch "Pre (concatenateMessageArray)"
      (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "1")) (ifInst ""  (formula "19")) (ifInst ""  (formula "4")))
      (rule "nonNull" (formula "22") (inst "i=i"))
      (rule "greater_literals" (formula "22") (term "0,1"))
      (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "19")))
      (rule "sub_literals" (formula "22") (term "2,1,0"))
      (builtin "One Step Simplification" (formula "22"))
      (rule "allRight" (formula "22") (inst "sk=i_12"))
      (rule "impRight" (formula "22"))
      (rule "notRight" (formula "23"))
      (rule "andLeft" (formula "2"))
      (rule "narrowSelectArrayType" (formula "1") (term "0") (ifseqformula "4") (ifseqformula "22"))
      (rule "inEqSimp_ltToLeq" (formula "3"))
      (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "3") (term "0"))
      (rule "inEqSimp_commuteLeq" (formula "2"))
      (rule "inEqSimp_sepNegMonomial0" (formula "3"))
      (rule "polySimp_mulLiterals" (formula "3") (term "0"))
      (rule "polySimp_elimOne" (formula "3") (term "0"))
      (rule "allLeft" (formula "12") (inst "t=i_12"))
      (rule "replace_known_left" (formula "12") (term "0,0,0") (ifseqformula "1"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
      (rule "inEqSimp_contradInEq1" (formula "12") (term "0") (ifseqformula "2"))
      (rule "qeq_literals" (formula "12") (term "0,0"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "12"))
      (rule "andLeft" (formula "3"))
      (rule "inEqSimp_homoInEq1" (formula "3"))
      (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
      (rule "add_literals" (formula "3") (term "1,1,0"))
      (rule "times_zero_1" (formula "3") (term "1,0"))
      (rule "add_literals" (formula "3") (term "0"))
      (rule "leq_literals" (formula "3"))
      (rule "closeFalse" (formula "3"))
   )
)
)

}
