\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Jun 07 09:53:31 CEST 2017
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=5000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , permissions-permissions\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Wed Jun 07 09:53:31 CEST 2017
name=verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer\\:\\:checkAndRemoveElectionId([B)].JML behavior operation contract.0
contract=verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer\\:\\:checkAndRemoveElectionId([B)].JML behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mihai" ) (keyVersion "777423351da3a616156ed00120c6f885d0eb8492"))
(keyLog "1" (keyUser "mihai" ) (keyVersion "777423351da3a616156ed00120c6f885d0eb8492"))
(keyLog "2" (keyUser "mihai" ) (keyVersion "777423351da3a616156ed00120c6f885d0eb8492"))

(autoModeTime "39916")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "payload,self,result,exc,heapAtPre,o,f") (userinteraction))
(rule "assignment" (formula "2") (term "1") (userinteraction))
(builtin "One Step Simplification" (formula "2"))
(rule "methodBodyExpand" (formula "2") (term "1") (newnames "heapBefore_checkAndRemoveElectionId,savedHeapBefore_checkAndRemoveElectionId") (userinteraction))
(builtin "One Step Simplification" (formula "2"))
(rule "ifUnfold" (formula "2") (term "1") (inst "#boolv=x") (userinteraction))
(rule "variableDeclaration" (formula "2") (term "1") (newnames "x") (userinteraction))
(rule "compound_less_than_comparison_1" (formula "2") (term "1") (inst "#v0=x_1") (userinteraction))
(rule "variableDeclarationAssign" (formula "2") (term "1") (userinteraction))
(rule "variableDeclaration" (formula "2") (term "1") (newnames "x_1") (userinteraction))
(rule "assignment_read_length" (formula "2") (term "1") (userinteraction))
(branch "Normal Execution (_payload != null)"
   (rule "less_than_comparison_simple" (formula "3") (term "1,1") (userinteraction))
   (builtin "One Step Simplification" (formula "3"))
   (rule "ifSplit" (formula "3") (userinteraction))
   (branch "if x true"
      (builtin "One Step Simplification" (formula "3"))
      (builtin "One Step Simplification" (formula "1"))
      (builtin "One Step Simplification" (formula "4"))
      (rule "andLeft" (formula "2"))
      (rule "andLeft" (formula "2"))
      (rule "andLeft" (formula "4"))
      (rule "andLeft" (formula "2"))
      (rule "notLeft" (formula "6"))
      (rule "andLeft" (formula "2"))
      (rule "andLeft" (formula "2"))
      (rule "andLeft" (formula "2"))
      (rule "notLeft" (formula "3"))
      (rule "eqSymm" (formula "10") (term "1,0,0,1,0,1"))
      (rule "eqSymm" (formula "10") (term "0,1,0,0,0,1"))
      (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "9"))
      (builtin "One Step Simplification" (formula "5"))
      (rule "inEqSimp_ltToLeq" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1,0,0"))
      (rule "add_literals" (formula "1") (term "0,0"))
      (rule "blockThrow" (formula "10") (term "1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1"))
      (rule "array2seqDef" (formula "10") (term "0,1,0,1,1,0,0,0,1") (inst "u=u"))
      (rule "eqSymm" (formula "10") (term "0,1,1,0,0,0,1"))
      (rule "array2seqDef" (formula "10") (term "0,0,1,0,0,0,1") (inst "u=u"))
      (rule "array2seqDef" (formula "10") (term "0,1,0,1,0,0,0,1") (inst "u=u"))
      (rule "array2seqDef" (formula "10") (term "1,0,1,1,0,0,0,1") (inst "u=u"))
      (rule "eqSymm" (formula "10") (term "0,1,1,0,0,0,1"))
      (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "7") (ifseqformula "4"))
      (rule "andLeft" (formula "7"))
      (rule "notLeft" (formula "8"))
      (rule "andLeft" (formula "7"))
      (rule "notLeft" (formula "8"))
      (rule "andLeft" (formula "7"))
      (rule "andLeft" (formula "7"))
      (rule "notLeft" (formula "9"))
      (rule "notLeft" (formula "8"))
      (rule "andLeft" (formula "7"))
      (rule "andLeft" (formula "7"))
      (rule "andLeft" (formula "7"))
      (rule "andLeft" (formula "7"))
      (rule "andLeft" (formula "7"))
      (rule "andLeft" (formula "7"))
      (rule "andLeft" (formula "7"))
      (rule "notLeft" (formula "8"))
      (rule "notLeft" (formula "7"))
      (rule "nonNull" (formula "12") (inst "i=i"))
      (rule "greater_literals" (formula "12") (term "0,1"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "sub_literals" (formula "12") (term "2,1,0,1"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "andLeft" (formula "12"))
      (rule "notLeft" (formula "12"))
      (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "13"))
      (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
      (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
      (rule "nonNull" (formula "11") (inst "i=i"))
      (rule "greater_literals" (formula "11") (term "0,1"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "sub_literals" (formula "11") (term "2,1,0,1"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "andLeft" (formula "11"))
      (rule "notLeft" (formula "11"))
      (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "13"))
      (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
      (rule "nonNull" (formula "10") (inst "i=i"))
      (rule "greater_literals" (formula "10") (term "0,1"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "sub_literals" (formula "10") (term "2,1,0,1"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "andLeft" (formula "10"))
      (rule "notLeft" (formula "10"))
      (rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "13"))
      (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
      (rule "nonNull" (formula "9") (inst "i=i"))
      (rule "greater_literals" (formula "9") (term "0,1"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "sub_literals" (formula "9") (term "2,1,0,1"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "andLeft" (formula "9"))
      (rule "notLeft" (formula "9"))
      (rule "narrowSelectArrayType" (formula "9") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "13"))
      (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
      (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
      (rule "nonNull" (formula "8") (inst "i=i"))
      (rule "greater_literals" (formula "8") (term "0,1"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "sub_literals" (formula "8") (term "2,1,0,1"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "andLeft" (formula "8"))
      (rule "notLeft" (formula "8"))
      (rule "narrowSelectArrayType" (formula "8") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "13"))
      (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
      (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
      (rule "nonNull" (formula "7") (inst "i=i"))
      (rule "sub_literals" (formula "7") (term "2,1,0,1,1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "greater_literals" (formula "7") (term "0,1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "andLeft" (formula "7"))
      (rule "notLeft" (formula "7"))
      (rule "narrowSelectArrayType" (formula "7") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "13"))
      (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
      (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
      (rule "nnf_imp2or" (formula "12") (term "0"))
      (rule "nnf_imp2or" (formula "11") (term "0"))
      (rule "nnf_imp2or" (formula "10") (term "0"))
      (rule "nnf_imp2or" (formula "9") (term "0"))
      (rule "nnf_imp2or" (formula "8") (term "0"))
      (rule "nnf_imp2or" (formula "7") (term "0"))
      (rule "nnf_notAnd" (formula "12") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
      (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
      (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
      (rule "mul_literals" (formula "12") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "11") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
      (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
      (rule "mul_literals" (formula "11") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "10") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
      (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
      (rule "add_literals" (formula "10") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
      (rule "mul_literals" (formula "10") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "9") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
      (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
      (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
      (rule "mul_literals" (formula "9") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "8") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
      (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
      (rule "mul_literals" (formula "8") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "7") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
      (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
      (rule "add_literals" (formula "7") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
      (rule "mul_literals" (formula "7") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
      (rule "throwUnfold" (formula "27") (term "1") (inst "#v0=m"))
      (rule "variableDeclarationAssign" (formula "27") (term "1"))
      (rule "variableDeclaration" (formula "27") (term "1") (newnames "m"))
      (rule "commute_or_2" (formula "12") (term "0"))
      (rule "commute_or_2" (formula "11") (term "0"))
      (rule "commute_or_2" (formula "10") (term "0"))
      (rule "commute_or_2" (formula "9") (term "0"))
      (rule "commute_or_2" (formula "8") (term "0"))
      (rule "commute_or_2" (formula "7") (term "0"))
      (rule "commute_or" (formula "12") (term "0,0"))
      (rule "commute_or" (formula "11") (term "0,0"))
      (rule "commute_or" (formula "10") (term "0,0"))
      (rule "commute_or" (formula "9") (term "0,0"))
      (rule "commute_or" (formula "8") (term "0,0"))
      (rule "commute_or" (formula "7") (term "0,0"))
      (rule "arrayLengthNotNegative" (formula "1") (term "0"))
      (rule "arrayLengthIsAShort" (formula "2") (term "0"))
      (builtin "One Step Simplification" (formula "2"))
      (rule "true_left" (formula "2"))
      (rule "instanceCreationAssignmentUnfoldArguments" (formula "28") (term "1"))
      (rule "variableDeclarationAssign" (formula "28") (term "1"))
      (rule "variableDeclaration" (formula "28") (term "1") (newnames "var"))
      (rule "assignment" (formula "28") (term "1"))
      (builtin "One Step Simplification" (formula "28"))
      (rule "variableDeclarationAssign" (formula "28") (term "1"))
      (rule "variableDeclaration" (formula "28") (term "1") (newnames "var_1"))
      (rule "stringAssignment" (formula "28") (term "1"))
      (builtin "One Step Simplification" (formula "29"))
      (builtin "One Step Simplification" (formula "28"))
      (rule "eqSymm" (formula "28"))
      (rule "arrayLengthIsAShort" (formula "13") (term "1,1,0"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "true_left" (formula "13"))
      (rule "arrayLengthNotNegative" (formula "13") (term "1,1,0"))
      (rule "arrayLengthIsAShort" (formula "12") (term "1,1,0"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "true_left" (formula "12"))
      (rule "arrayLengthNotNegative" (formula "12") (term "1,1,0"))
      (rule "arrayLengthNotNegative" (formula "11") (term "1,1,0"))
      (rule "arrayLengthIsAShort" (formula "12") (term "1,1,0"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "true_left" (formula "12"))
      (rule "arrayLengthNotNegative" (formula "10") (term "1,1,0"))
      (rule "arrayLengthIsAShort" (formula "11") (term "1,1,0"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "true_left" (formula "11"))
      (rule "arrayLengthIsAShort" (formula "9") (term "1,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "true_left" (formula "9"))
      (rule "arrayLengthNotNegative" (formula "9") (term "1,1,0"))
      (rule "arrayLengthIsAShort" (formula "8") (term "1,1,0"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "true_left" (formula "8"))
      (rule "arrayLengthNotNegative" (formula "8") (term "1,1,0"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "0") (ifseqformula "3"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "21"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "0") (ifseqformula "4"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "24"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "30") (term "0") (ifseqformula "5"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "31"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "26") (term "0") (ifseqformula "6"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "27"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "28") (term "0") (ifseqformula "7"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "29"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "34") (term "0") (ifseqformula "8"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "35"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "27") (term "0") (ifseqformula "9"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "28"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "32") (term "0") (ifseqformula "10"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "33"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "34") (term "0") (ifseqformula "11"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "35"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "36") (term "0") (ifseqformula "12"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "37"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "40") (term "0") (ifseqformula "13"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "41"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0") (ifseqformula "14"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "43"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "instanceCreationAssignment" (formula "47") (term "1") (inst "#v0=m_1"))
      (rule "variableDeclarationAssign" (formula "47") (term "1"))
      (rule "variableDeclaration" (formula "47") (term "1") (newnames "m_1"))
      (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "47") (term "1") (inst "#v0=m_2"))
      (rule "variableDeclaration" (formula "47") (term "1") (newnames "m_2"))
      (rule "methodBodyExpand" (formula "47") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
      (builtin "One Step Simplification" (formula "47"))
      (rule "variableDeclaration" (formula "47") (term "1") (newnames "__NEW__"))
      (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "47") (term "1") (inst "#v0=m_3"))
      (rule "variableDeclaration" (formula "47") (term "1") (newnames "m_3"))
      (rule "allocateInstance" (formula "47"))
      (builtin "One Step Simplification" (formula "48"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "wellFormedCreate" (formula "1") (term "0,1,0"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "17"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "blockEmpty" (formula "50") (term "1"))
      (rule "assignment" (formula "50") (term "1"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=java_lang_Object_created__0"))
      (rule "simplifySelectOfCreate" (formula "1"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "castDel" (formula "1") (term "1,0"))
      (rule "eqSymm" (formula "1") (term "0,0,0"))
      (rule "eqSymm" (formula "1") (term "0,1,0,0"))
      (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "50"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
      (rule "eqSymm" (formula "1") (term "1,0,0"))
      (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "50"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
      (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "methodBodyExpand" (formula "50") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "assignment_write_attribute_this" (formula "50") (term "1"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "methodCallWithinClass" (formula "50") (term "1"))
      (rule "methodBodyExpand" (formula "50") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "methodCallSuper" (formula "50") (term "1"))
      (rule "methodBodyExpand" (formula "50") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "methodCallSuper" (formula "50") (term "1"))
      (rule "methodBodyExpand" (formula "50") (term "1") (newnames "heapBefore_<prepare>_0,savedHeapBefore_<prepare>_0"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "methodCallSuper" (formula "50") (term "1"))
      (rule "methodBodyExpand" (formula "50") (term "1") (newnames "heapBefore_<prepare>_1,savedHeapBefore_<prepare>_1"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "methodCallEmpty" (formula "50") (term "1"))
      (rule "blockEmpty" (formula "50") (term "1"))
      (rule "assignment_write_attribute_this" (formula "50") (term "1"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "castDel" (formula "50") (term "1,0,1,0"))
      (rule "assignment_write_attribute_this" (formula "50") (term "1"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "castDel" (formula "50") (term "1,0,1,0"))
      (rule "methodCallEmpty" (formula "50") (term "1"))
      (rule "methodCallEmpty" (formula "50") (term "1"))
      (rule "blockEmpty" (formula "50") (term "1"))
      (rule "assignment_write_attribute_this" (formula "50") (term "1"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "assignment_write_attribute_this" (formula "50") (term "1"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "methodCallEmpty" (formula "50") (term "1"))
      (rule "blockEmpty" (formula "50") (term "1"))
      (rule "methodCallReturnIgnoreResult" (formula "50") (term "1"))
      (rule "methodCallReturn" (formula "50") (term "1"))
      (rule "assignment" (formula "50") (term "1"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "methodCallEmpty" (formula "50") (term "1"))
      (rule "blockEmpty" (formula "50") (term "1"))
      (rule "assignment" (formula "50") (term "1"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "variableDeclarationAssign" (formula "50") (term "1"))
      (rule "variableDeclaration" (formula "50") (term "1") (newnames "var_2"))
      (rule "assignment" (formula "50") (term "1"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "variableDeclarationAssign" (formula "50") (term "1"))
      (rule "variableDeclaration" (formula "50") (term "1") (newnames "var_3"))
      (rule "assignment" (formula "50") (term "1"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "methodBodyExpand" (formula "50") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "methodCallSuper" (formula "50") (term "1"))
      (rule "methodBodyExpand" (formula "50") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "methodCallSuper" (formula "50") (term "1"))
      (rule "methodBodyExpand" (formula "50") (term "1") (newnames "heapBefore_<init>_1,savedHeapBefore_<init>_1"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "methodCallSuper" (formula "50") (term "1"))
      (rule "methodBodyExpand" (formula "50") (term "1") (newnames "heapBefore_<init>_2,savedHeapBefore_<init>_2"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "methodCallEmpty" (formula "50") (term "1"))
      (rule "blockEmpty" (formula "50") (term "1"))
      (rule "assignment_write_attribute_this" (formula "50") (term "1"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "castDel" (formula "50") (term "1,0,1,0"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "assignment_write_attribute_this" (formula "50") (term "1"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "castDel" (formula "50") (term "1,0,1,0"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "methodCallEmpty" (formula "50") (term "1"))
      (rule "methodCallEmpty" (formula "50") (term "1"))
      (rule "blockEmpty" (formula "50") (term "1"))
      (rule "assignment_write_attribute_this" (formula "50") (term "1"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "assignment_write_attribute_this" (formula "50") (term "1"))
      (builtin "One Step Simplification" (formula "50"))
      (rule "methodCallEmpty" (formula "50") (term "1"))
      (rule "blockEmpty" (formula "50") (term "1"))
      (rule "assignment_write_attribute" (formula "50") (term "1"))
      (branch "Normal Execution (m_1 != null)"
         (builtin "One Step Simplification" (formula "51"))
         (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "34")))
         (rule "false_right" (formula "50"))
         (rule "assignment" (formula "50") (term "1"))
         (builtin "One Step Simplification" (formula "50"))
         (rule "blockEmpty" (formula "50") (term "1"))
         (rule "methodCallParamThrow" (formula "50") (term "1"))
         (builtin "One Step Simplification" (formula "50"))
         (rule "tryCatchThrow" (formula "50") (term "1"))
         (rule "ifElseUnfold" (formula "50") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "50") (term "1") (newnames "x_2"))
         (rule "equality_comparison_simple" (formula "50") (term "1"))
         (builtin "One Step Simplification" (formula "50"))
         (rule "replace_known_right" (formula "50") (term "0,0,1,0") (ifseqformula "34"))
         (builtin "One Step Simplification" (formula "50"))
         (rule "ifElseSplit" (formula "50"))
         (branch "if x_2 true"
            (builtin "One Step Simplification" (formula "51"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch "if x_2 false"
            (builtin "One Step Simplification" (formula "51"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "ifElseSplit" (formula "50"))
            (branch "if m instanceof java.lang.Throwable true"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
               (rule "true_left" (formula "1"))
               (rule "variableDeclaration" (formula "50") (term "1") (newnames "e"))
               (rule "reference_type_cast" (formula "50") (term "1"))
               (branch "Normal Execution (m instanceof java.lang.Throwable)"
                  (builtin "One Step Simplification" (formula "51"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "assignment" (formula "50") (term "1"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "emptyModality" (formula "50") (term "1"))
                  (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "34")) (ifInst ""  (formula "34")) (ifInst ""  (formula "34")) (ifInst ""  (formula "34")))
                  (rule "eqSymm" (formula "50") (term "1,0,0,1"))
                  (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "50") (term "0") (ifseqformula "18"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "1,1,0,0,0,0,0,0"))
                  (rule "nonNull" (formula "50") (term "1,0,0,0,0,0,0,0,0") (inst "i=i"))
                  (rule "sub_literals" (formula "50") (term "2,1,0,1,1,1,0,0,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "greater_literals" (formula "50") (term "0,1,1,0,0,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "50") (term "1,0,0,1,1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "50") (term "0,0,0,1,1,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,1,1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "50") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "50") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "50") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                  (rule "nonNull" (formula "50") (term "1,0,0,0,0,0,0,0,0,0,0") (inst "i=i"))
                  (rule "sub_literals" (formula "50") (term "2,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "greater_literals" (formula "50") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "50") (term "1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "50") (term "0,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "50") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "50") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "50") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "nonNull" (formula "50") (term "1,0,0,0,0,0,0,0") (inst "i=i"))
                  (rule "greater_literals" (formula "50") (term "0,1,1,0,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "sub_literals" (formula "50") (term "2,1,0,1,1,0,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "50") (term "1,0,0,1,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "50") (term "0,0,0,1,1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,1,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "50") (term "1,1,0,0,1,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "50") (term "1,1,0,0,1,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "50") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0"))
                  (rule "nonNull" (formula "50") (term "1,0,0,0,0,0,0,0,0,0") (inst "i=i"))
                  (rule "sub_literals" (formula "50") (term "2,1,0,1,1,1,0,0,0,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "greater_literals" (formula "50") (term "0,1,1,0,0,0,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "50") (term "1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "50") (term "0,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "50") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "50") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "50") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "nonNull" (formula "50") (term "1,0,0,0,0,0,0") (inst "i=i"))
                  (rule "greater_literals" (formula "50") (term "0,1,1,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "sub_literals" (formula "50") (term "2,1,0,1,1,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "50") (term "1,0,0,1,1,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "50") (term "0,0,0,1,1,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,1,1,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "50") (term "1,1,0,0,1,1,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "50") (term "1,1,0,0,1,1,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0,1,1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "50") (term "0,1,1,0,0,1,1,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0,1,1,0,0,0,0,0,0"))
                  (rule "nonNull" (formula "50") (term "1,0,0,0,0,0") (inst "i=i"))
                  (rule "greater_literals" (formula "50") (term "0,1,1,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "sub_literals" (formula "50") (term "2,1,0,1,1,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "50") (term "0,0,1,0,1,1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "50") (term "1,0,0,1,1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0,0,1,1,0,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "50") (term "0,0,0,1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,1,1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "50") (term "1,1,0,0,1,1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "50") (term "1,1,0,0,1,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "50") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0,1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0,1,1,0,0,0,0,0"))
                  (rule "pullOutSelect" (formula "50") (term "0,0,1,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_0"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "51") (term "0,0,1,0,0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "50") (term "0,1,0,0,0,0") (ifseqformula "43"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "pullOutSelect" (formula "50") (term "1,0,0,1,0,1,1,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_0"))
                  (rule "applyEq" (formula "51") (term "0,1,1,1,0,0,1,1,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "51") (term "0,0,0,1,0,0,0,0") (ifseqformula "1"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "51") (term "1,0,0,1,0,1,1,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "51") (term "0,1,1,1,0,0,1,1,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "51") (term "0,0,0,1,0,0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "50") (term "0,0,1,0,0,0,0") (ifseqformula "40"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "pullOutSelect" (formula "50") (term "0,0,0,1,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_0"))
                  (rule "applyEq" (formula "51") (term "1,0,0,1,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "51") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "51") (term "0,0,0,1,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "51") (term "1,0,0,1,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "51") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "50") (term "0,0,1,0,0,0,0,0,0") (ifseqformula "38"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "pullOutSelect" (formula "50") (term "0,0,0,1,0,0,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_0"))
                  (rule "applyEq" (formula "51") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "51") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "51") (term "0,0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "51") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "51") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "50") (term "0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "35"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "pullOutSelect" (formula "50") (term "0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_0"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "51") (term "0,0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "50") (term "0,1,0") (ifseqformula "46"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "pullOutSelect" (formula "50") (term "0,0,0,1,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_0"))
                  (rule "applyEq" (formula "51") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "51") (term "1,0,0,1,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "51") (term "0,0,0,1,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "51") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "51") (term "1,0,0,1,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "50") (term "0,0,1,0,0,0,0,0,0") (ifseqformula "37"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "pullOutSelect" (formula "50") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_0"))
                  (rule "applyEq" (formula "51") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "51") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "51") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "51") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "51") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "50") (term "0,0,1,0,0,0,0,0,0,0") (ifseqformula "36"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "pullOutSelect" (formula "50") (term "0,0,1,0,0,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_0"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "51") (term "0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "50") (term "0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "42"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "pullOutSelect" (formula "50") (term "0,0,0,0,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_0"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "51") (term "0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "50") (term "0,0,0,0,0,0,0,0,0,0") (ifseqformula "41"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "pullOutSelect" (formula "50") (term "0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_0"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "51") (term "0,0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "50") (term "0,1,0") (ifseqformula "45"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "pullOutSelect" (formula "50") (term "0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_0"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "51") (term "0,0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "50") (term "0,1,0") (ifseqformula "44"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "pullOutSelect" (formula "50") (term "0,1,1,1,0,0,1,1,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_0"))
                  (rule "applyEq" (formula "51") (term "0,0,0,1,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "51") (term "1,0,0,1,0,1,1,0,0") (ifseqformula "1"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "51") (term "0,1,1,1,0,0,1,1,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "51") (term "0,0,0,1,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "51") (term "1,0,0,1,0,1,1,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "50") (term "0,0,1,0,0") (ifseqformula "39"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "nnf_imp2or" (formula "50") (term "0,1,0"))
                  (rule "nnf_imp2or" (formula "50") (term "0,1,0,0"))
                  (rule "nnf_notAnd" (formula "50") (term "0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "50") (term "1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,1,0"))
                  (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,1,0"))
                  (rule "add_zero_left" (formula "50") (term "0,0,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "50") (term "0,0,0,1,0"))
                  (rule "times_zero_1" (formula "50") (term "1,0,0,0,0,0,1,0"))
                  (rule "add_zero_right" (formula "50") (term "0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,1,0"))
                  (rule "mul_literals" (formula "50") (term "1,0,0,0,1,0"))
                  (rule "nnf_imp2or" (formula "50") (term "0,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "50") (term "0,0,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "50") (term "1,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,1,0,0"))
                  (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "50") (term "0,0,1,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "50") (term "0,0,0,1,0,0"))
                  (rule "times_zero_1" (formula "50") (term "1,0,0,0,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "50") (term "0,0,0,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,1,0,0"))
                  (rule "mul_literals" (formula "50") (term "1,0,0,0,1,0,0"))
                  (rule "nnf_imp2or" (formula "50") (term "0,1,0,0,0,0"))
                  (rule "nnf_imp2or" (formula "50") (term "0,0,0,0,0,0,0"))
                  (rule "nnf_imp2or" (formula "50") (term "0,1,0,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "50") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "50") (term "0,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "50") (term "1,0,0,0,0,0,1,0,0,0"))
                  (rule "add_zero_right" (formula "50") (term "0,0,0,0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "50") (term "1,0,0,0,1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "50") (term "1,0,0,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,1,0,0,0"))
                  (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,1,0,0,0"))
                  (rule "add_zero_left" (formula "50") (term "0,0,1,0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,0,0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "50") (term "0,0,1,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "50") (term "0,0,0,1,0,0,0,0"))
                  (rule "mul_literals" (formula "50") (term "1,0,0,0,0,0,1,0,0,0,0"))
                  (rule "add_zero_right" (formula "50") (term "0,0,0,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,1,0,0,0,0"))
                  (rule "mul_literals" (formula "50") (term "1,0,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "50") (term "1,0,0,1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,1,0,0,0,0"))
                  (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,1,0,0,0,0"))
                  (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,1,0,0,0,0"))
                  (rule "add_zero_left" (formula "50") (term "0,0,1,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,0,0,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,1,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "50") (term "0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "50") (term "1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "50") (term "0,0,1,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "50") (term "0,0,0,0,0,0,0,0,0"))
                  (rule "times_zero_1" (formula "50") (term "1,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "50") (term "0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "50") (term "1,0,0,0,0,0,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "50") (term "0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "50") (term "1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0,1,0,0,0,0,0"))
                  (rule "add_literals" (formula "50") (term "0,0,0,1,0,0,1,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "50") (term "0,0,1,0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "50") (term "0,0,0,1,0,0,0,0,0"))
                  (rule "times_zero_1" (formula "50") (term "1,0,0,0,0,0,1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "50") (term "0,0,0,0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "50") (term "1,0,0,0,1,0,0,0,0,0"))
                  (rule "andRight" (formula "50"))
                  (branch "Case 1"
                     (rule "andRight" (formula "50"))
                     (branch "Case 1"
                        (rule "andRight" (formula "50"))
                        (branch "Case 1"
                           (rule "andRight" (formula "50"))
                           (branch "Case 1"
                              (rule "andRight" (formula "50"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "50"))
                                 (branch "Case 1"
                                    (rule "allRight" (formula "50") (inst "sk=i_5"))
                                    (rule "orRight" (formula "50"))
                                    (rule "orRight" (formula "50"))
                                    (rule "notRight" (formula "52"))
                                    (rule "inEqSimp_geqRight" (formula "52"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "52"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_5"))
                                    (rule "simplifySelectOfCreate" (formula "3"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "38")))
                                    (rule "simplifySelectOfCreate" (formula "3"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "19") (ifseqformula "38"))
                                    (rule "allLeft" (formula "25") (inst "t=i_5"))
                                    (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "25") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "inEqSimp_contradInEq1" (formula "25") (ifseqformula "2"))
                                    (rule "andLeft" (formula "25"))
                                    (rule "inEqSimp_homoInEq1" (formula "25"))
                                    (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                                    (rule "add_literals" (formula "25") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "25") (term "1,0"))
                                    (rule "add_literals" (formula "25") (term "0"))
                                    (rule "leq_literals" (formula "25"))
                                    (rule "closeFalse" (formula "25"))
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "50") (inst "sk=i_4"))
                                    (rule "orRight" (formula "50"))
                                    (rule "orRight" (formula "50"))
                                    (rule "notRight" (formula "52"))
                                    (rule "inEqSimp_geqRight" (formula "52"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "52"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_4"))
                                    (rule "simplifySelectOfCreate" (formula "3"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "38")))
                                    (rule "simplifySelectOfCreate" (formula "3"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "19") (ifseqformula "39"))
                                    (rule "allLeft" (formula "27") (inst "t=i_4"))
                                    (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "27") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "2"))
                                    (rule "andLeft" (formula "27"))
                                    (rule "inEqSimp_homoInEq1" (formula "27"))
                                    (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                    (rule "add_literals" (formula "27") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "27") (term "1,0"))
                                    (rule "add_literals" (formula "27") (term "0"))
                                    (rule "leq_literals" (formula "27"))
                                    (rule "closeFalse" (formula "27"))
                                 )
                              )
                              (branch "Case 2"
                                 (rule "allRight" (formula "50") (inst "sk=i_3"))
                                 (rule "orRight" (formula "50"))
                                 (rule "orRight" (formula "50"))
                                 (rule "notRight" (formula "52"))
                                 (rule "inEqSimp_leqRight" (formula "51"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_geqRight" (formula "52"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_3"))
                                 (rule "simplifySelectOfCreate" (formula "3"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "38")))
                                 (rule "simplifySelectOfCreate" (formula "3"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "19") (ifseqformula "40"))
                                 (rule "allLeft" (formula "29") (inst "t=i_3"))
                                 (rule "replace_known_left" (formula "29") (term "0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "29"))
                                 (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "29") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "29"))
                                 (rule "inEqSimp_contradInEq1" (formula "29") (ifseqformula "1"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "inEqSimp_homoInEq1" (formula "29"))
                                 (rule "polySimp_pullOutFactor1b" (formula "29") (term "0"))
                                 (rule "add_literals" (formula "29") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "29") (term "1,0"))
                                 (rule "add_literals" (formula "29") (term "0"))
                                 (rule "leq_literals" (formula "29"))
                                 (rule "closeFalse" (formula "29"))
                              )
                           )
                           (branch "Case 2"
                              (rule "allRight" (formula "50") (inst "sk=i_2"))
                              (rule "orRight" (formula "50"))
                              (rule "orRight" (formula "50"))
                              (rule "notRight" (formula "52"))
                              (rule "inEqSimp_leqRight" (formula "51"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_geqRight" (formula "52"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_2"))
                              (rule "simplifySelectOfCreate" (formula "3"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "38")))
                              (rule "simplifySelectOfCreate" (formula "3"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "19") (ifseqformula "41"))
                              (rule "allLeft" (formula "31") (inst "t=i_2"))
                              (rule "replace_known_left" (formula "31") (term "0,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "31") (term "0,0"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "31"))
                              (rule "andLeft" (formula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "1"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,1,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0"))
                              (rule "add_literals" (formula "1") (term "0"))
                              (rule "leq_literals" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "Case 2"
                           (rule "allRight" (formula "50") (inst "sk=i_1"))
                           (rule "orRight" (formula "50"))
                           (rule "orRight" (formula "50"))
                           (rule "notRight" (formula "52"))
                           (rule "inEqSimp_leqRight" (formula "51"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_geqRight" (formula "52"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_1"))
                           (rule "simplifySelectOfCreate" (formula "3"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "38")))
                           (rule "simplifySelectOfCreate" (formula "3"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "19") (ifseqformula "42"))
                           (rule "allLeft" (formula "33") (inst "t=i_1"))
                           (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                           (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "33") (term "0,0,1"))
                           (rule "leq_literals" (formula "33") (term "0,1"))
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "inEqSimp_contradInEq1" (formula "33") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "33") (term "0"))
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "closeFalse" (formula "33"))
                        )
                     )
                     (branch "Case 2"
                        (rule "allRight" (formula "50") (inst "sk=i_0"))
                        (rule "orRight" (formula "50"))
                        (rule "orRight" (formula "50"))
                        (rule "notRight" (formula "52"))
                        (rule "inEqSimp_leqRight" (formula "51"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "52"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_0"))
                        (rule "simplifySelectOfCreate" (formula "3"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "38")))
                        (rule "simplifySelectOfCreate" (formula "3"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "19") (ifseqformula "43"))
                        (rule "allLeft" (formula "35") (inst "t=i_0"))
                        (rule "replace_known_left" (formula "35") (term "0,0,0") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "35"))
                        (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "35") (term "0") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "35") (term "0,0"))
                        (builtin "One Step Simplification" (formula "35"))
                        (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "35"))
                        (rule "andLeft" (formula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "1"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,1,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0"))
                        (rule "add_literals" (formula "1") (term "0"))
                        (rule "leq_literals" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "Case 2"
                     (rule "allRight" (formula "50") (inst "sk=f_0"))
                     (rule "allRight" (formula "50") (inst "sk=o_0"))
                     (rule "orRight" (formula "50"))
                     (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=f_0_0"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "52"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_3"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_4"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_5"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "40"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_6"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "56"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "commute_and" (formula "7") (term "0,0"))
                     (rule "commute_and" (formula "6") (term "0,0"))
                     (rule "commute_and" (formula "5") (term "0,0"))
                     (rule "commute_and" (formula "4") (term "0,0"))
                     (rule "commute_and" (formula "3") (term "0,0"))
                     (rule "commute_and" (formula "2") (term "0,0"))
                     (rule "commute_and" (formula "1") (term "0,0"))
                     (rule "ifthenelse_split" (formula "1") (term "0"))
                     (branch " f_0 = java.lang.Object::<created> ∧ o_0 = strPool(\"Message too short\") TRUE"
                        (rule "andLeft" (formula "1"))
                        (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "1")))
                        (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "applyEqRigid" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "applyEqRigid" (formula "4") (term "0,1,0,0") (ifseqformula "2"))
                        (rule "eqSymm" (formula "4") (term "1,0,0"))
                        (rule "sortsDisjointModuloNull" (formula "4") (term "1,0,0"))
                        (rule "eqSymm" (formula "4") (term "1,1,0,0"))
                        (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "40"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "55")))
                        (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "applyEqRigid" (formula "5") (term "0,0,0,0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "applyEqReverse" (formula "56") (term "1") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "applyEqRigid" (formula "4") (term "0,1,0,0") (ifseqformula "2"))
                        (rule "eqSymm" (formula "4") (term "1,0,0"))
                        (rule "sortsDisjointModuloNull" (formula "4") (term "1,0,0"))
                        (rule "eqSymm" (formula "4") (term "1,1,0,0"))
                        (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "38"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "53")))
                        (rule "applyEqReverse" (formula "55") (term "1") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "applyEqRigid" (formula "53") (term "1,0,0,1") (ifseqformula "2"))
                        (rule "applyEqRigid" (formula "54") (term "1,0") (ifseqformula "2"))
                        (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "2"))
                        (rule "eqSymm" (formula "3") (term "1,0,0"))
                        (rule "sortsDisjointModuloNull" (formula "3") (term "1,0,0"))
                        (rule "eqSymm" (formula "3") (term "1,1,0,0"))
                        (rule "replace_known_right" (formula "3") (term "1,1,0,0") (ifseqformula "52"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "37")))
                        (rule "applyEqReverse" (formula "54") (term "1") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "applyEqRigid" (formula "53") (term "2,0") (ifseqformula "1"))
                        (rule "narrowSelectType" (formula "53") (term "0") (ifseqformula "18"))
                        (rule "replace_known_right" (formula "52") (term "0,1") (ifseqformula "53"))
                        (builtin "One Step Simplification" (formula "52"))
                        (rule "notRight" (formula "52"))
                        (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                        (rule "close" (formula "52") (ifseqformula "3"))
                     )
                     (branch " f_0 = java.lang.Object::<created> ∧ o_0 = strPool(\"Message too short\") FALSE"
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "ifthenelse_split" (formula "1") (term "0"))
                        (branch "f_0 = java.lang.Object::<created> ∧ o_0 = m_3 TRUE"
                           (rule "andLeft" (formula "1"))
                           (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "6"))
                           (rule "replace_known_left" (formula "40") (term "0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "40"))
                           (rule "applyEq" (formula "59") (term "2,0") (ifseqformula "1"))
                           (rule "narrowSelectType" (formula "59") (term "0") (ifseqformula "23"))
                           (rule "eqSymm" (formula "59"))
                           (rule "applyEq" (formula "58") (term "1,0,0,1") (ifseqformula "2"))
                           (rule "replace_known_right" (formula "58") (term "0,1") (ifseqformula "41"))
                           (builtin "One Step Simplification" (formula "58"))
                           (rule "notRight" (formula "58"))
                           (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "6"))
                           (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                           (rule "hideAuxiliaryEq" (formula "6"))
                           (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "7"))
                           (rule "hideAuxiliaryEq" (formula "7"))
                           (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "applyEq" (formula "37") (term "0") (ifseqformula "3"))
                           (rule "sortsDisjointModuloNull" (formula "37"))
                           (rule "eqSymm" (formula "37") (term "1"))
                           (rule "replace_known_right" (formula "37") (term "1") (ifseqformula "54"))
                           (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "39")))
                           (rule "false_right" (formula "37"))
                           (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "eqSymm" (formula "53"))
                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                           (rule "close" (formula "37") (ifseqformula "1"))
                        )
                        (branch "f_0 = java.lang.Object::<created> ∧ o_0 = m_3 FALSE"
                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "ifthenelse_split" (formula "1") (term "0"))
                           (branch "f_0 = Throwable::$cause ∧ o_0 = m_3 TRUE"
                              (rule "andLeft" (formula "1"))
                              (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "2")))
                              (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "38"))
                              (rule "replace_known_right" (formula "39") (term "0") (ifseqformula "38"))
                              (builtin "One Step Simplification" (formula "39"))
                              (rule "false_right" (formula "39"))
                              (rule "applyEq" (formula "56") (term "1,0,0,1") (ifseqformula "2"))
                              (rule "replace_known_right" (formula "56") (term "0,1") (ifseqformula "39"))
                              (builtin "One Step Simplification" (formula "56"))
                              (rule "notRight" (formula "56"))
                              (rule "applyEq" (formula "57") (term "2,0") (ifseqformula "2"))
                              (rule "narrowSelectType" (formula "57") (term "0") (ifseqformula "22"))
                              (rule "eqSymm" (formula "57"))
                              (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "6"))
                              (rule "hideAuxiliaryEq" (formula "6"))
                              (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "applyEqReverse" (formula "56") (term "0") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "applyEqReverse" (formula "55") (term "0") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "eqSymm" (formula "54"))
                              (rule "applyEqRigid" (formula "36") (term "0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "36"))
                              (rule "false_right" (formula "36"))
                              (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "3"))
                              (rule "close" (formula "37") (ifseqformula "3"))
                           )
                           (branch "f_0 = Throwable::$cause ∧ o_0 = m_3 FALSE"
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch "f_0 = Throwable::$message ∧ o_0 = m_3 TRUE"
                                 (rule "andLeft" (formula "1"))
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "39"))
                                 (rule "replace_known_right" (formula "40") (term "0") (ifseqformula "39"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "false_right" (formula "40"))
                                 (rule "applyEqRigid" (formula "38") (term "0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "false_right" (formula "38"))
                                 (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "applyEq" (formula "55") (term "0,0,0") (ifseqformula "2"))
                                 (rule "replace_known_right" (formula "55") (term "0,0") (ifseqformula "39"))
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "notRight" (formula "55"))
                                 (rule "applyEq" (formula "56") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEqReverse" (formula "55") (term "1") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "applyEqRigid" (formula "36") (term "0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "36"))
                                 (rule "false_right" (formula "36"))
                                 (rule "applyEq" (formula "53") (term "2,0") (ifseqformula "2"))
                                 (rule "narrowSelectType" (formula "53") (term "0") (ifseqformula "19"))
                                 (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                 (rule "close" (formula "36") (ifseqformula "1"))
                              )
                              (branch "f_0 = Throwable::$message ∧ o_0 = m_3 FALSE"
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "f_0 = MalformedData::$errCode ∧ o_0 = m_3 TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "replace_known_right" (formula "40") (term "0") (ifseqformula "39"))
                                    (builtin "One Step Simplification" (formula "40"))
                                    (rule "false_right" (formula "40"))
                                    (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "applyEq" (formula "37") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "false_right" (formula "37"))
                                    (rule "applyEq" (formula "37") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "false_right" (formula "37"))
                                    (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEqReverse" (formula "55") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "applyEq" (formula "35") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "false_right" (formula "35"))
                                    (rule "applyEq" (formula "53") (term "2,0") (ifseqformula "1"))
                                    (rule "narrowSelectType" (formula "53") (term "0") (ifseqformula "18"))
                                    (rule "applyEq" (formula "52") (term "1,0,0,1") (ifseqformula "2"))
                                    (rule "replace_known_right" (formula "52") (term "0,1") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "52"))
                                    (rule "notRight" (formula "52"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                    (rule "close" (formula "37") (ifseqformula "1"))
                                 )
                                 (branch "f_0 = MalformedData::$errCode ∧ o_0 = m_3 FALSE"
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch "f_0 = MalformedData::$description ∧ o_0 = m_3 TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "replace_known_right" (formula "40") (term "0") (ifseqformula "39"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "false_right" (formula "40"))
                                       (rule "applyEqRigid" (formula "39") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "false_right" (formula "39"))
                                       (rule "applyEqRigid" (formula "36") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "false_right" (formula "36"))
                                       (rule "applyEqRigid" (formula "36") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "false_right" (formula "36"))
                                       (rule "applyEq" (formula "54") (term "1,0,0,1") (ifseqformula "2"))
                                       (rule "replace_known_right" (formula "54") (term "0,1") (ifseqformula "37"))
                                       (builtin "One Step Simplification" (formula "54"))
                                       (rule "notRight" (formula "54"))
                                       (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "55") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "applyEqRigid" (formula "54") (term "2,0") (ifseqformula "2"))
                                       (rule "narrowSelectType" (formula "54") (term "0") (ifseqformula "19"))
                                       (rule "applyEqRigid" (formula "36") (term "0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "false_right" (formula "36"))
                                       (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "1"))
                                       (rule "eqSymm" (formula "3"))
                                       (rule "close" (formula "37") (ifseqformula "3"))
                                    )
                                    (branch "f_0 = MalformedData::$description ∧ o_0 = m_3 FALSE"
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch "f_0 = java.lang.Object::<initialized> ∧ o_0 = m_3 TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "replace_known_left" (formula "35") (term "1") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "replace_known_right" (formula "40") (term "0") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "false_right" (formula "40"))
                                          (rule "applyEq" (formula "39") (term "0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "false_right" (formula "39"))
                                          (rule "applyEqRigid" (formula "38") (term "0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "false_right" (formula "38"))
                                          (rule "applyEqRigid" (formula "56") (term "2,0") (ifseqformula "1"))
                                          (rule "narrowSelectType" (formula "56") (term "0") (ifseqformula "18"))
                                          (rule "applyEqRigid" (formula "37") (term "0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "false_right" (formula "37"))
                                          (rule "applyEq" (formula "36") (term "0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "false_right" (formula "36"))
                                          (rule "applyEq" (formula "53") (term "0,0,0") (ifseqformula "2"))
                                          (rule "replace_known_right" (formula "53") (term "0,0") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "53"))
                                          (rule "notRight" (formula "53"))
                                          (rule "applyEq" (formula "36") (term "0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "false_right" (formula "36"))
                                          (rule "applyEq" (formula "53") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                          (rule "close" (formula "36") (ifseqformula "1"))
                                       )
                                       (branch "f_0 = java.lang.Object::<initialized> ∧ o_0 = m_3 FALSE"
                                          (rule "close" (formula "59") (ifseqformula "1"))
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
               )
               (branch "ClassCastException (!(m instanceof java.lang.Throwable))"
                  (builtin "One Step Simplification" (formula "51"))
                  (builtin "One Step Simplification" (formula "50"))
                  (rule "closeTrue" (formula "50"))
               )
            )
            (branch "if m instanceof java.lang.Throwable false"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
      (branch "Null Reference (m_1 = null)"
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "if x false"
      (builtin "One Step Simplification" (formula "4"))
      (rule "variableDeclarationAssign" (formula "4") (term "1") (userinteraction))
      (rule "variableDeclaration" (formula "4") (term "1") (newnames "el_id") (userinteraction))
      (builtin "Use Operation Contract" (formula "4") (newnames "heapBefore_getPayLoad,result_0,exc_0,heapAfter_getPayLoad,anon_heap_getPayLoad") (contract "verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer::getPayLoad([B)].JML behavior operation contract.0"))
      (branch "Post (getPayLoad)"
         (builtin "One Step Simplification" (formula "1"))
         (builtin "One Step Simplification" (formula "5"))
         (builtin "One Step Simplification" (formula "6"))
         (rule "assignment" (formula "6") (term "1") (userinteraction))
         (builtin "One Step Simplification" (formula "6"))
         (rule "ifUnfold" (formula "6") (term "1") (inst "#boolv=x") (userinteraction))
         (rule "variableDeclaration" (formula "6") (term "1") (newnames "x_4") (userinteraction))
         (rule "compound_assignment_2" (formula "6") (term "1") (inst "#v=x_5") (userinteraction))
         (rule "variableDeclarationAssign" (formula "6") (term "1") (userinteraction))
         (rule "variableDeclaration" (formula "6") (term "1") (newnames "x_5") (userinteraction))
         (rule "methodCallWithAssignmentUnfoldArguments" (formula "6") (term "1") (userinteraction))
         (rule "variableDeclarationAssign" (formula "6") (term "1") (userinteraction))
         (rule "variableDeclaration" (formula "6") (term "1") (newnames "var_4") (userinteraction))
         (rule "assignment" (formula "6") (term "1") (userinteraction))
         (rule "variableDeclarationAssign" (formula "6") (term "1,1") (userinteraction))
         (rule "variableDeclaration" (formula "6") (term "1,1") (newnames "var_5") (userinteraction))
         (rule "assignment_read_attribute_this" (formula "6") (term "1,1") (userinteraction))
         (builtin "One Step Simplification" (formula "6"))
         (builtin "Use Operation Contract" (formula "6") (newnames "heapBefore_equal,result_1,exc_1") (contract "verif.utils.MessageTools[verif.utils.MessageTools::equal([B,[B)].JML normal_behavior operation contract.0#verif.utils.MessageTools[verif.utils.MessageTools::equal([B,[B)].JML normal_behavior operation contract.1"))
         (branch "Post (equal)"
            (rule "assignment" (formula "8") (term "1") (userinteraction))
            (rule "blockEmpty" (formula "8") (term "1,1") (userinteraction))
            (rule "compound_assignment_1_new" (formula "8") (term "1,1") (userinteraction))
            (builtin "One Step Simplification" (formula "8"))
            (rule "ifSplit" (formula "8") (userinteraction))
            (branch "if x_4 true"
               (builtin "One Step Simplification" (formula "7"))
               (builtin "One Step Simplification" (formula "5"))
               (builtin "One Step Simplification" (formula "1"))
               (builtin "One Step Simplification" (formula "9"))
               (rule "notLeft" (formula "2"))
               (rule "andLeft" (formula "2"))
               (rule "andLeft" (formula "7"))
               (rule "andLeft" (formula "5"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "6") (term "1,1,0") (ifseqformula "5"))
               (rule "notLeft" (formula "1"))
               (rule "andLeft" (formula "2"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "10"))
               (rule "andLeft" (formula "7"))
               (rule "notLeft" (formula "4"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "7"))
               (rule "typeEqDerived" (formula "9") (term "0,1,1,1,1") (ifseqformula "7"))
               (rule "typeEqDerived" (formula "9") (term "0,1,0,1,1,1") (ifseqformula "7"))
               (rule "typeEqDerived" (formula "9") (term "0,0,0,1,1,1") (ifseqformula "7"))
               (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "7")) (ifInst ""  (formula "7")))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "10"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "12"))
               (rule "andLeft" (formula "1"))
               (rule "notLeft" (formula "13"))
               (rule "notLeft" (formula "1"))
               (rule "eqSymm" (formula "21") (term "0,1,0,0,0,1"))
               (rule "eqSymm" (formula "21") (term "1,0,0,1,0,1"))
               (rule "eqSymm" (formula "14") (term "0,1"))
               (rule "eqSymm" (formula "14") (term "0,0,0,1"))
               (rule "replace_known_left" (formula "15") (term "1,1") (ifseqformula "13"))
               (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "17")) (ifInst ""  (formula "18")))
               (rule "true_left" (formula "15"))
               (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "19"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "replace_known_left" (formula "14") (term "1,1") (ifseqformula "13"))
               (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "16")))
               (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "16"))
               (builtin "One Step Simplification" (formula "9"))
               (rule "inEqSimp_ltRight" (formula "18"))
               (rule "mul_literals" (formula "1") (term "0,0"))
               (rule "apply_eq_boolean" (formula "15") (term "1,1") (ifseqformula "18"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "applyEq" (formula "15") (term "1,0,1") (ifseqformula "11"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "array2seqDef" (formula "20") (term "0,0,1,1,0,0,0,1") (inst "u=u"))
               (rule "array2seqDef" (formula "20") (term "0,1,0,1,1,0,0,0,1") (inst "u=u"))
               (rule "array2seqDef" (formula "11") (term "0") (inst "u=u"))
               (rule "array2seqDef" (formula "11") (term "0,1") (inst "u=u"))
               (rule "array2seqDef" (formula "20") (term "0,1,0,1,0,0,0,1") (inst "u=u"))
               (rule "eqSymm" (formula "20") (term "0,1,0,0,0,1"))
               (rule "array2seqDef" (formula "15") (term "0,0,1") (inst "u=u"))
               (rule "array2seqDef" (formula "15") (term "0,1,0,1") (inst "u=u"))
               (rule "array2seqDef" (formula "20") (term "1,0,1,0,0,0,1") (inst "u=u"))
               (rule "eqSymm" (formula "20") (term "0,1,0,0,0,1"))
               (rule "eqSeqDef2" (formula "11") (inst "iv=iv") (ifseqformula "11"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "true_left" (formula "11"))
               (rule "pullOutSelect" (formula "14") (term "0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_3"))
               (rule "applyEq" (formula "15") (term "1,2,0,0,1") (ifseqformula "14"))
               (rule "applyEq" (formula "15") (term "0,1,0,0,1") (ifseqformula "14"))
               (rule "simplifySelectOfAnonEQ" (formula "14") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "16")) (ifInst ""  (formula "2")))
               (rule "applyEqReverse" (formula "15") (term "0,0,0") (ifseqformula "14"))
               (rule "applyEqReverse" (formula "15") (term "1,2,0,0,1") (ifseqformula "14"))
               (rule "applyEqReverse" (formula "15") (term "0,1,0,0,1") (ifseqformula "14"))
               (rule "hideAuxiliaryEq" (formula "14"))
               (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "11") (ifseqformula "3"))
               (rule "replaceKnownSelect_taclet00010_0" (formula "11") (term "0,0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet00010_1" (formula "11") (term "0,0,1"))
               (rule "andLeft" (formula "11"))
               (rule "notLeft" (formula "12"))
               (rule "andLeft" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "notLeft" (formula "13"))
               (rule "notLeft" (formula "12"))
               (rule "andLeft" (formula "11"))
               (rule "notLeft" (formula "12"))
               (rule "andLeft" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "notLeft" (formula "12"))
               (rule "notLeft" (formula "11"))
               (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "25"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "notLeft" (formula "19"))
               (rule "nonNull" (formula "16") (inst "i=i"))
               (rule "greater_literals" (formula "16") (term "0,1"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "sub_literals" (formula "16") (term "2,1,0,1"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "andLeft" (formula "16"))
               (rule "notLeft" (formula "16"))
               (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "15") (inst "i=i"))
               (rule "sub_literals" (formula "15") (term "2,1,0,1,1"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "greater_literals" (formula "15") (term "0,1"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "andLeft" (formula "15"))
               (rule "notLeft" (formula "15"))
               (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "14") (inst "i=i"))
               (rule "sub_literals" (formula "14") (term "2,1,0,1,1"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "greater_literals" (formula "14") (term "0,1"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "andLeft" (formula "14"))
               (rule "notLeft" (formula "14"))
               (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "13") (inst "i=i"))
               (rule "greater_literals" (formula "13") (term "0,1"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "sub_literals" (formula "13") (term "2,1,0,1"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "andLeft" (formula "13"))
               (rule "notLeft" (formula "13"))
               (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
               (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "12") (inst "i=i"))
               (rule "greater_literals" (formula "12") (term "0,1"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "sub_literals" (formula "12") (term "2,1,0,1"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "andLeft" (formula "12"))
               (rule "notLeft" (formula "12"))
               (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
               (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "11") (inst "i=i"))
               (rule "greater_literals" (formula "11") (term "0,1"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "sub_literals" (formula "11") (term "2,1,0,1"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "notLeft" (formula "11"))
               (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
               (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
               (rule "equalityToSeqGetAndSeqLenRight" (formula "25") (inst "iv=iv"))
               (rule "lenOfSeqDef" (formula "25") (term "0,0"))
               (rule "eqSymm" (formula "25") (term "0"))
               (rule "polySimp_elimSub" (formula "25") (term "1,1,0"))
               (rule "times_zero_2" (formula "25") (term "1,1,1,0"))
               (rule "add_zero_right" (formula "25") (term "1,1,0"))
               (rule "lenOfSeqDef" (formula "25") (term "1,1,0,0,1"))
               (rule "polySimp_elimSub" (formula "25") (term "1,1,1,0,0,1"))
               (rule "times_zero_2" (formula "25") (term "1,1,1,1,0,0,1"))
               (rule "add_zero_right" (formula "25") (term "1,1,1,0,0,1"))
               (rule "getOfSeqDef" (formula "25") (term "0,1,0,1"))
               (rule "castDel" (formula "25") (term "1,0,1,0,1"))
               (rule "castDel" (formula "25") (term "2,0,1,0,1"))
               (rule "add_zero_right" (formula "25") (term "0,2,1,0,1,0,1"))
               (rule "eqSymm" (formula "25") (term "1,0,1"))
               (rule "polySimp_elimSub" (formula "25") (term "1,1,0,1,1,0,1"))
               (rule "mul_literals" (formula "25") (term "1,1,1,0,1,1,0,1"))
               (rule "add_zero_right" (formula "25") (term "1,1,0,1,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1,0"))
               (rule "add_zero_right" (formula "25") (term "0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1,1,0,0,1"))
               (rule "add_zero_right" (formula "25") (term "0,0,1,1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,1,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,1,1,0,1"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,1,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,1,1,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,1,0"))
               (rule "polySimp_mulLiterals" (formula "25") (term "0,0,1,0"))
               (rule "polySimp_elimOne" (formula "25") (term "0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,1,1,0,1"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,1,1,0,1"))
               (rule "polySimp_rightDist" (formula "25") (term "1,1,0,1,1,0,1"))
               (rule "mul_literals" (formula "25") (term "0,1,1,0,1,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,1,1,0,1"))
               (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,1,1,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,0,1,0,0,1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0,1,0,0,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "25") (term "0,0,0,1,0,0,1,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1"))
               (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1"))
               (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1"))
               (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_2"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "9"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")) (ifInst ""  (formula "3")))
               (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_2"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "9"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")) (ifInst ""  (formula "3")))
               (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_2"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "9"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")) (ifInst ""  (formula "3")))
               (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_2"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "9"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")) (ifInst ""  (formula "3")))
               (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "26") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_2"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "9"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")) (ifInst ""  (formula "3")))
               (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "16") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_2"))
               (rule "applyEq" (formula "25") (term "0") (ifseqformula "16"))
               (rule "applyEq" (formula "17") (term "0,1,1,1,0,0") (ifseqformula "16"))
               (rule "simplifySelectOfAnonEQ" (formula "16") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "33")) (ifInst ""  (formula "2")))
               (rule "applyEqReverse" (formula "17") (term "1,0,0,1,0") (ifseqformula "16"))
               (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "16"))
               (rule "applyEqReverse" (formula "17") (term "0,1,1,1,0,0") (ifseqformula "16"))
               (rule "hideAuxiliaryEq" (formula "16"))
               (rule "pullOutSelect" (formula "15") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_2"))
               (rule "applyEq" (formula "24") (term "0") (ifseqformula "15"))
               (rule "applyEq" (formula "16") (term "0,1,1,1,0,0") (ifseqformula "15"))
               (rule "simplifySelectOfAnonEQ" (formula "15") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "33")) (ifInst ""  (formula "2")))
               (rule "applyEqReverse" (formula "16") (term "1,0,0,1,0") (ifseqformula "15"))
               (rule "applyEqReverse" (formula "24") (term "0") (ifseqformula "15"))
               (rule "applyEqReverse" (formula "16") (term "0,1,1,1,0,0") (ifseqformula "15"))
               (rule "hideAuxiliaryEq" (formula "15"))
               (rule "pullOutSelect" (formula "14") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_2"))
               (rule "applyEq" (formula "15") (term "0,1,1,1,0,0") (ifseqformula "14"))
               (rule "applyEq" (formula "23") (term "0") (ifseqformula "14"))
               (rule "simplifySelectOfAnonEQ" (formula "14") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "33")) (ifInst ""  (formula "2")))
               (rule "applyEqReverse" (formula "15") (term "1,0,0,1,0") (ifseqformula "14"))
               (rule "applyEqReverse" (formula "15") (term "0,1,1,1,0,0") (ifseqformula "14"))
               (rule "applyEqReverse" (formula "23") (term "0") (ifseqformula "14"))
               (rule "hideAuxiliaryEq" (formula "14"))
               (rule "pullOutSelect" (formula "13") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_2"))
               (rule "applyEq" (formula "14") (term "0,1,1,1,0,0") (ifseqformula "13"))
               (rule "applyEq" (formula "22") (term "0") (ifseqformula "13"))
               (rule "simplifySelectOfAnonEQ" (formula "13") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "33")) (ifInst ""  (formula "2")))
               (rule "applyEqReverse" (formula "14") (term "1,0,0,1,0") (ifseqformula "13"))
               (rule "applyEqReverse" (formula "14") (term "0,1,1,1,0,0") (ifseqformula "13"))
               (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "13"))
               (rule "hideAuxiliaryEq" (formula "13"))
               (rule "pullOutSelect" (formula "12") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_2"))
               (rule "applyEq" (formula "13") (term "0,1,1,1,0,0") (ifseqformula "12"))
               (rule "applyEq" (formula "21") (term "0") (ifseqformula "12"))
               (rule "simplifySelectOfAnonEQ" (formula "12") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "33")) (ifInst ""  (formula "2")))
               (rule "applyEqReverse" (formula "13") (term "1,0,0,1,0") (ifseqformula "12"))
               (rule "applyEqReverse" (formula "13") (term "0,1,1,1,0,0") (ifseqformula "12"))
               (rule "applyEqReverse" (formula "21") (term "0") (ifseqformula "12"))
               (rule "hideAuxiliaryEq" (formula "12"))
               (rule "pullOutSelect" (formula "11") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_2"))
               (rule "applyEq" (formula "12") (term "0,1,1,1,0,0") (ifseqformula "11"))
               (rule "applyEq" (formula "20") (term "0") (ifseqformula "11"))
               (rule "simplifySelectOfAnonEQ" (formula "11") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "33")) (ifInst ""  (formula "2")))
               (rule "applyEqReverse" (formula "12") (term "1,0,0,1,0") (ifseqformula "11"))
               (rule "applyEqReverse" (formula "12") (term "0,1,1,1,0,0") (ifseqformula "11"))
               (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "11"))
               (rule "hideAuxiliaryEq" (formula "11"))
               (rule "nnf_imp2or" (formula "25") (term "0,1"))
               (rule "nnf_imp2or" (formula "16") (term "0"))
               (rule "nnf_imp2or" (formula "15") (term "0"))
               (rule "nnf_imp2or" (formula "14") (term "0"))
               (rule "nnf_imp2or" (formula "13") (term "0"))
               (rule "nnf_imp2or" (formula "12") (term "0"))
               (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "6") (ifseqformula "3"))
               (rule "andLeft" (formula "6"))
               (rule "andLeft" (formula "6"))
               (rule "notLeft" (formula "8"))
               (rule "notLeft" (formula "7"))
               (rule "andLeft" (formula "6"))
               (rule "notLeft" (formula "7"))
               (rule "andLeft" (formula "6"))
               (rule "notLeft" (formula "7"))
               (rule "andLeft" (formula "6"))
               (rule "andLeft" (formula "6"))
               (rule "andLeft" (formula "6"))
               (rule "andLeft" (formula "6"))
               (rule "andLeft" (formula "6"))
               (rule "andLeft" (formula "6"))
               (rule "andLeft" (formula "6"))
               (rule "notLeft" (formula "6"))
               (rule "notLeft" (formula "6"))
               (rule "nonNull" (formula "11") (inst "i=i"))
               (rule "greater_literals" (formula "11") (term "0,1"))
               (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "29")))
               (rule "sub_literals" (formula "11") (term "2,1,0"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "22") (ifseqformula "29"))
               (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "10") (inst "i=i"))
               (rule "greater_literals" (formula "10") (term "0,1"))
               (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "28")))
               (rule "sub_literals" (formula "10") (term "2,1,0"))
               (builtin "One Step Simplification" (formula "10"))
               (rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "22") (ifseqformula "28"))
               (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "9") (inst "i=i"))
               (rule "greater_literals" (formula "9") (term "0,1"))
               (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "27")))
               (rule "sub_literals" (formula "9") (term "2,1,0"))
               (builtin "One Step Simplification" (formula "9"))
               (rule "narrowSelectArrayType" (formula "9") (term "0,0,1,0") (ifseqformula "22") (ifseqformula "27"))
               (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "8") (inst "i=i"))
               (rule "greater_literals" (formula "8") (term "0,1"))
               (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "26")))
               (rule "sub_literals" (formula "8") (term "2,1,0"))
               (builtin "One Step Simplification" (formula "8"))
               (rule "narrowSelectArrayType" (formula "8") (term "0,0,1,0") (ifseqformula "22") (ifseqformula "26"))
               (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "7") (inst "i=i"))
               (rule "greater_literals" (formula "7") (term "0,1"))
               (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "25")))
               (rule "sub_literals" (formula "7") (term "2,1,0"))
               (builtin "One Step Simplification" (formula "7"))
               (rule "narrowSelectArrayType" (formula "7") (term "0,0,1,0") (ifseqformula "22") (ifseqformula "25"))
               (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "6") (inst "i=i"))
               (rule "greater_literals" (formula "6") (term "0,1"))
               (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "24")))
               (rule "sub_literals" (formula "6") (term "2,1,0"))
               (builtin "One Step Simplification" (formula "6"))
               (rule "narrowSelectArrayType" (formula "6") (term "0,0,1,0") (ifseqformula "22") (ifseqformula "24"))
               (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "6") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0"))
               (rule "nnf_imp2or" (formula "16") (term "0"))
               (rule "nnf_notAnd" (formula "21") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "21") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
               (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "21") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
               (rule "mul_literals" (formula "21") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "20") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
               (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
               (rule "mul_literals" (formula "20") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "19") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
               (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
               (rule "mul_literals" (formula "19") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "18") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
               (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
               (rule "mul_literals" (formula "18") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "17") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
               (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
               (rule "mul_literals" (formula "17") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "30") (term "0,0,1"))
               (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,1"))
               (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,1"))
               (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,1"))
               (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,1"))
               (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,1"))
               (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0,1"))
               (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0,1"))
               (rule "add_zero_right" (formula "30") (term "0,0,0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,1"))
               (rule "mul_literals" (formula "30") (term "1,0,0,0,1"))
               (rule "nnf_imp2or" (formula "11") (term "0"))
               (rule "nnf_imp2or" (formula "10") (term "0"))
               (rule "nnf_imp2or" (formula "9") (term "0"))
               (rule "nnf_imp2or" (formula "8") (term "0"))
               (rule "nnf_imp2or" (formula "7") (term "0"))
               (rule "nnf_imp2or" (formula "6") (term "0"))
               (rule "nnf_notAnd" (formula "16") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
               (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
               (rule "mul_literals" (formula "16") (term "1,0,0,0"))
               (rule "throwUnfold" (formula "41") (term "1") (inst "#v0=m"))
               (rule "variableDeclarationAssign" (formula "41") (term "1"))
               (rule "variableDeclaration" (formula "41") (term "1") (newnames "m_4"))
               (rule "nnf_notAnd" (formula "11") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
               (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
               (rule "mul_literals" (formula "11") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "10") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
               (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
               (rule "mul_literals" (formula "10") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "9") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
               (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "9") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
               (rule "mul_literals" (formula "9") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "8") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
               (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
               (rule "mul_literals" (formula "8") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "7") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
               (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "7") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
               (rule "mul_literals" (formula "7") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "6") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "6") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "6") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "6") (term "0,0,0"))
               (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "6") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
               (rule "mul_literals" (formula "6") (term "1,0,0,0"))
               (rule "arrayLengthIsAShort" (formula "1") (term "0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "arrayLengthNotNegative" (formula "1") (term "0"))
               (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "2"))
               (rule "leq_literals" (formula "1") (term "0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "commute_or_2" (formula "21") (term "0"))
               (rule "commute_or_2" (formula "20") (term "0"))
               (rule "commute_or_2" (formula "19") (term "0"))
               (rule "commute_or_2" (formula "18") (term "0"))
               (rule "commute_or_2" (formula "17") (term "0"))
               (rule "lenNonNegative" (formula "30") (term "0,0"))
               (rule "inEqSimp_commuteLeq" (formula "1"))
               (rule "arrayLengthIsAShort" (formula "31") (term "1,1,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "arrayLengthNotNegative" (formula "31") (term "1,1,0"))
               (rule "commute_or_2" (formula "18") (term "0"))
               (rule "commute_or_2" (formula "13") (term "0"))
               (rule "commute_or_2" (formula "12") (term "0"))
               (rule "commute_or_2" (formula "11") (term "0"))
               (rule "commute_or_2" (formula "10") (term "0"))
               (rule "commute_or_2" (formula "9") (term "0"))
               (rule "commute_or_2" (formula "8") (term "0"))
               (rule "commute_or" (formula "23") (term "0,0"))
               (rule "commute_or" (formula "22") (term "0,0"))
               (rule "commute_or" (formula "21") (term "0,0"))
               (rule "commute_or" (formula "20") (term "0,0"))
               (rule "commute_or" (formula "19") (term "0,0"))
               (rule "commute_or" (formula "18") (term "0,0"))
               (rule "commute_or" (formula "13") (term "0,0"))
               (rule "commute_or" (formula "12") (term "0,0"))
               (rule "commute_or" (formula "11") (term "0,0"))
               (rule "commute_or" (formula "10") (term "0,0"))
               (rule "commute_or" (formula "9") (term "0,0"))
               (rule "commute_or" (formula "8") (term "0,0"))
               (rule "instanceCreationAssignmentUnfoldArguments" (formula "43") (term "1"))
               (rule "variableDeclarationAssign" (formula "43") (term "1"))
               (rule "variableDeclaration" (formula "43") (term "1") (newnames "var_6"))
               (rule "assignment" (formula "43") (term "1"))
               (builtin "One Step Simplification" (formula "43"))
               (rule "variableDeclarationAssign" (formula "43") (term "1"))
               (rule "variableDeclaration" (formula "43") (term "1") (newnames "var_7"))
               (rule "stringAssignment" (formula "43") (term "1"))
               (builtin "One Step Simplification" (formula "44"))
               (builtin "One Step Simplification" (formula "43"))
               (rule "eqSymm" (formula "43"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "38") (term "0") (ifseqformula "24"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "39"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "arrayLengthNotNegative" (formula "24") (term "1,1,0"))
               (rule "arrayLengthIsAShort" (formula "25") (term "1,1,0"))
               (builtin "One Step Simplification" (formula "25"))
               (rule "true_left" (formula "25"))
               (rule "arrayLengthNotNegative" (formula "23") (term "1,1,0"))
               (rule "arrayLengthIsAShort" (formula "24") (term "1,1,0"))
               (builtin "One Step Simplification" (formula "24"))
               (rule "true_left" (formula "24"))
               (rule "arrayLengthNotNegative" (formula "22") (term "1,1,0"))
               (rule "arrayLengthIsAShort" (formula "23") (term "1,1,0"))
               (builtin "One Step Simplification" (formula "23"))
               (rule "true_left" (formula "23"))
               (rule "arrayLengthNotNegative" (formula "21") (term "1,1,0"))
               (rule "arrayLengthIsAShort" (formula "22") (term "1,1,0"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "true_left" (formula "22"))
               (rule "arrayLengthIsAShort" (formula "20") (term "1,1,0"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "true_left" (formula "20"))
               (rule "arrayLengthNotNegative" (formula "20") (term "1,1,0"))
               (rule "arrayLengthIsAShort" (formula "19") (term "1,1,0"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "true_left" (formula "19"))
               (rule "arrayLengthNotNegative" (formula "19") (term "1,1,0"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "44") (term "0") (ifseqformula "31"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "45"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "0") (ifseqformula "32"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "44"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "0") (ifseqformula "33"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "44"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "46") (term "0") (ifseqformula "34"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "47"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0") (ifseqformula "35"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "43"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "45") (term "0") (ifseqformula "36"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "46"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0") (ifseqformula "37"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "43"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "44") (term "0") (ifseqformula "38"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "45"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "0") (ifseqformula "39"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "44"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "0") (ifseqformula "40"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "44"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "0") (ifseqformula "41"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "44"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "instanceCreationAssignment" (formula "62") (term "1") (inst "#v0=m_5"))
               (rule "variableDeclarationAssign" (formula "62") (term "1"))
               (rule "variableDeclaration" (formula "62") (term "1") (newnames "m_5"))
               (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "62") (term "1") (inst "#v0=m_6"))
               (rule "variableDeclaration" (formula "62") (term "1") (newnames "m_6"))
               (rule "methodBodyExpand" (formula "62") (term "1") (newnames "heapBefore_<createObject>_0,savedHeapBefore_<createObject>_0"))
               (builtin "One Step Simplification" (formula "62"))
               (rule "variableDeclaration" (formula "62") (term "1") (newnames "__NEW___1"))
               (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "62") (term "1") (inst "#v0=m_7"))
               (rule "variableDeclaration" (formula "62") (term "1") (newnames "m_7"))
               (rule "allocateInstance" (formula "62"))
               (builtin "One Step Simplification" (formula "63"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "wellFormedCreate" (formula "1") (term "0,1,0"))
               (rule "wellFormedAnonEQ" (formula "1") (term "0,1,0") (ifseqformula "28"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "replace_known_left" (formula "1") (term "1,0") (ifseqformula "28"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
               (rule "notLeft" (formula "1"))
               (rule "blockEmpty" (formula "65") (term "1"))
               (rule "assignment" (formula "65") (term "1"))
               (builtin "One Step Simplification" (formula "65"))
               (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=java_lang_Object_created__1"))
               (rule "simplifySelectOfCreate" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "castDel" (formula "1") (term "1,0"))
               (rule "eqSymm" (formula "1") (term "0,0,0"))
               (rule "eqSymm" (formula "1") (term "0,1,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "65"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
               (rule "eqSymm" (formula "1") (term "1,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "47"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
               (rule "ifthenelse_negated" (formula "1") (term "0"))
               (rule "apply_eq_boolean" (formula "1") (term "1") (ifseqformula "46"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "ifEqualsTRUE" (formula "45"))
               (builtin "One Step Simplification" (formula "45"))
               (rule "orRight" (formula "45"))
               (rule "replace_known_right" (formula "46") (term "0,0") (ifseqformula "45"))
               (builtin "One Step Simplification" (formula "46"))
               (rule "hideAuxiliaryEqConcrete2" (formula "47"))
               (rule "methodBodyExpand" (formula "66") (term "1") (newnames "heapBefore_<create>_0,savedHeapBefore_<create>_0"))
               (builtin "One Step Simplification" (formula "66"))
               (rule "assignment_write_attribute_this" (formula "66") (term "1"))
               (builtin "One Step Simplification" (formula "66"))
               (rule "methodCallWithinClass" (formula "66") (term "1"))
               (rule "methodBodyExpand" (formula "66") (term "1") (newnames "heapBefore_<prepareEnter>_0,savedHeapBefore_<prepareEnter>_0"))
               (builtin "One Step Simplification" (formula "66"))
               (rule "methodCallSuper" (formula "66") (term "1"))
               (rule "methodBodyExpand" (formula "66") (term "1") (newnames "heapBefore_<prepare>_2,savedHeapBefore_<prepare>_2"))
               (builtin "One Step Simplification" (formula "66"))
               (rule "methodCallSuper" (formula "66") (term "1"))
               (rule "methodBodyExpand" (formula "66") (term "1") (newnames "heapBefore_<prepare>_3,savedHeapBefore_<prepare>_3"))
               (builtin "One Step Simplification" (formula "66"))
               (rule "methodCallSuper" (formula "66") (term "1"))
               (rule "methodBodyExpand" (formula "66") (term "1") (newnames "heapBefore_<prepare>_4,savedHeapBefore_<prepare>_4"))
               (builtin "One Step Simplification" (formula "66"))
               (rule "methodCallEmpty" (formula "66") (term "1"))
               (rule "blockEmpty" (formula "66") (term "1"))
               (rule "assignment_write_attribute_this" (formula "66") (term "1"))
               (builtin "One Step Simplification" (formula "66"))
               (rule "castDel" (formula "66") (term "1,0,1,0"))
               (rule "assignment_write_attribute_this" (formula "66") (term "1"))
               (builtin "One Step Simplification" (formula "66"))
               (rule "castDel" (formula "66") (term "1,0,1,0"))
               (rule "methodCallEmpty" (formula "66") (term "1"))
               (rule "methodCallEmpty" (formula "66") (term "1"))
               (rule "blockEmpty" (formula "66") (term "1"))
               (rule "assignment_write_attribute_this" (formula "66") (term "1"))
               (builtin "One Step Simplification" (formula "66"))
               (rule "assignment_write_attribute_this" (formula "66") (term "1"))
               (builtin "One Step Simplification" (formula "66"))
               (rule "methodCallEmpty" (formula "66") (term "1"))
               (rule "blockEmpty" (formula "66") (term "1"))
               (rule "methodCallReturnIgnoreResult" (formula "66") (term "1"))
               (rule "methodCallReturn" (formula "66") (term "1"))
               (rule "assignment" (formula "66") (term "1"))
               (builtin "One Step Simplification" (formula "66"))
               (rule "methodCallEmpty" (formula "66") (term "1"))
               (rule "blockEmpty" (formula "66") (term "1"))
               (rule "assignment" (formula "66") (term "1"))
               (builtin "One Step Simplification" (formula "66"))
               (rule "variableDeclarationAssign" (formula "66") (term "1"))
               (rule "variableDeclaration" (formula "66") (term "1") (newnames "var_8"))
               (rule "assignment" (formula "66") (term "1"))
               (builtin "One Step Simplification" (formula "66"))
               (rule "variableDeclarationAssign" (formula "66") (term "1"))
               (rule "variableDeclaration" (formula "66") (term "1") (newnames "var_9"))
               (rule "assignment" (formula "66") (term "1"))
               (builtin "One Step Simplification" (formula "66"))
               (rule "methodBodyExpand" (formula "66") (term "1") (newnames "heapBefore_<init>_3,savedHeapBefore_<init>_3"))
               (builtin "One Step Simplification" (formula "66"))
               (rule "methodCallSuper" (formula "66") (term "1"))
               (rule "methodBodyExpand" (formula "66") (term "1") (newnames "heapBefore_<init>_4,savedHeapBefore_<init>_4"))
               (builtin "One Step Simplification" (formula "66"))
               (rule "methodCallSuper" (formula "66") (term "1"))
               (rule "methodBodyExpand" (formula "66") (term "1") (newnames "heapBefore_<init>_5,savedHeapBefore_<init>_5"))
               (builtin "One Step Simplification" (formula "66"))
               (rule "methodCallSuper" (formula "66") (term "1"))
               (rule "methodBodyExpand" (formula "66") (term "1") (newnames "heapBefore_<init>_6,savedHeapBefore_<init>_6"))
               (builtin "One Step Simplification" (formula "66"))
               (rule "methodCallEmpty" (formula "66") (term "1"))
               (rule "blockEmpty" (formula "66") (term "1"))
               (rule "assignment_write_attribute_this" (formula "66") (term "1"))
               (builtin "One Step Simplification" (formula "66"))
               (rule "castDel" (formula "66") (term "1,0,1,0"))
               (builtin "One Step Simplification" (formula "66"))
               (rule "assignment_write_attribute_this" (formula "66") (term "1"))
               (builtin "One Step Simplification" (formula "66"))
               (rule "castDel" (formula "66") (term "1,0,1,0"))
               (builtin "One Step Simplification" (formula "66"))
               (rule "methodCallEmpty" (formula "66") (term "1"))
               (rule "methodCallEmpty" (formula "66") (term "1"))
               (rule "blockEmpty" (formula "66") (term "1"))
               (rule "assignment_write_attribute_this" (formula "66") (term "1"))
               (builtin "One Step Simplification" (formula "66"))
               (rule "assignment_write_attribute_this" (formula "66") (term "1"))
               (builtin "One Step Simplification" (formula "66"))
               (rule "methodCallEmpty" (formula "66") (term "1"))
               (rule "blockEmpty" (formula "66") (term "1"))
               (rule "assignment_write_attribute" (formula "66") (term "1"))
               (branch "Normal Execution (m_5 != null)"
                  (builtin "One Step Simplification" (formula "67"))
                  (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "47")))
                  (rule "false_right" (formula "66"))
                  (rule "assignment" (formula "66") (term "1"))
                  (builtin "One Step Simplification" (formula "66"))
                  (rule "blockEmpty" (formula "66") (term "1"))
                  (rule "methodCallParamThrow" (formula "66") (term "1"))
                  (builtin "One Step Simplification" (formula "66"))
                  (rule "tryCatchThrow" (formula "66") (term "1"))
                  (rule "ifElseUnfold" (formula "66") (term "1") (inst "#boolv=x"))
                  (rule "variableDeclaration" (formula "66") (term "1") (newnames "x_6"))
                  (rule "equality_comparison_simple" (formula "66") (term "1"))
                  (builtin "One Step Simplification" (formula "66"))
                  (rule "replace_known_right" (formula "66") (term "0,0,1,0") (ifseqformula "47"))
                  (builtin "One Step Simplification" (formula "66"))
                  (rule "ifElseSplit" (formula "66"))
                  (branch "if x_6 true"
                     (builtin "One Step Simplification" (formula "67"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "if x_6 false"
                     (builtin "One Step Simplification" (formula "67"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "ifElseSplit" (formula "66"))
                     (branch "if m_4 instanceof java.lang.Throwable true"
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                        (rule "true_left" (formula "1"))
                        (rule "variableDeclaration" (formula "66") (term "1") (newnames "e_2"))
                        (rule "reference_type_cast" (formula "66") (term "1"))
                        (branch "Normal Execution (m_4 instanceof java.lang.Throwable)"
                           (builtin "One Step Simplification" (formula "67"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "assignment" (formula "66") (term "1"))
                           (builtin "One Step Simplification" (formula "66"))
                           (rule "emptyModality" (formula "66") (term "1"))
                           (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "47")) (ifInst ""  (formula "47")) (ifInst ""  (formula "47")) (ifInst ""  (formula "47")))
                           (rule "eqSymm" (formula "66") (term "1,0,0,1"))
                           (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "66") (term "0") (ifseqformula "18"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "1,1,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "1,1,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "1,1,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "1,1,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "1,1,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "1,1,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "1,1,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "1,1,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "1,1,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "1,1,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "1,1,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "1,1,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "1,1,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "1,1,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "1,1,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "1,1,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "1,1,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "1,1,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "1,1,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "1,1,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0,0"))
                           (rule "nonNull" (formula "66") (term "1,0,0,0,0,0,0,0,0") (inst "i=i"))
                           (rule "greater_literals" (formula "66") (term "0,1,1,0,0,0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "66"))
                           (rule "sub_literals" (formula "66") (term "2,1,0,1,1,0,0,0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "66"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "66") (term "1,0,0,1,1,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "66") (term "0,0,0,1,1,0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0,1,1,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "66") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "66") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "66") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "66") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "66") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                           (rule "nonNull" (formula "66") (term "1,0,0,0,0,0,0,0,0,0") (inst "i=i"))
                           (rule "greater_literals" (formula "66") (term "0,1,1,0,0,0,0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "66"))
                           (rule "sub_literals" (formula "66") (term "2,1,0,1,1,0,0,0,0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "66"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "66") (term "1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "66") (term "0,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "66") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "66") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "66") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "66") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "66") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "nonNull" (formula "66") (term "1,0,0,0,0,0,0,0") (inst "i=i"))
                           (rule "greater_literals" (formula "66") (term "0,1,1,0,0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "66"))
                           (rule "sub_literals" (formula "66") (term "2,1,0,1,1,0,0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "66"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0,1,1,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0,1,1,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0,1,1,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0,1,1,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0,1,1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "66") (term "1,0,0,1,1,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "66") (term "0,0,0,1,1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0,1,1,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "66") (term "1,1,0,0,1,1,0,0,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "66") (term "1,1,0,0,1,1,0,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "66") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "66") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "66") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0"))
                           (rule "nonNull" (formula "66") (term "1,0,0,0,0,0") (inst "i=i"))
                           (rule "greater_literals" (formula "66") (term "0,1,1,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "66"))
                           (rule "sub_literals" (formula "66") (term "2,1,0,1,1,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "66"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0,1,1,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0,1,1,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0,1,1,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0,1,1,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0,1,1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "66") (term "1,0,0,1,1,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,1,0,0,1,1,0,0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "66") (term "0,0,0,1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0,1,1,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "66") (term "1,1,0,0,1,1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "66") (term "1,1,0,0,1,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "66") (term "1,1,1,0,0,1,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "66") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "66") (term "1,1,1,0,0,1,1,0,0,0,0,0"))
                           (rule "nonNull" (formula "66") (term "1,0,0,0,0,0,0,0,0,0,0") (inst "i=i"))
                           (rule "greater_literals" (formula "66") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "66"))
                           (rule "sub_literals" (formula "66") (term "2,1,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "66"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "66") (term "1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "66") (term "0,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "66") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "66") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "66") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "66") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "66") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "nonNull" (formula "66") (term "1,0,0,0,0,0,0") (inst "i=i"))
                           (rule "sub_literals" (formula "66") (term "2,1,0,1,1,1,0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "66"))
                           (rule "greater_literals" (formula "66") (term "0,1,1,0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "66"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0,1,1,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0,1,1,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0,1,1,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0,1,1,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "66") (term "0,0,1,0,1,1,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "66") (term "1,0,0,1,1,0,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "66") (term "0,0,0,1,1,0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "1,0,0,1,1,0,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "66") (term "1,1,0,0,1,1,0,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "66") (term "1,1,0,0,1,1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "66") (term "0,1,1,0,0,1,1,0,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "66") (term "1,1,1,0,0,1,1,0,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "66") (term "1,1,1,0,0,1,1,0,0,0,0,0,0"))
                           (rule "pullOutSelect" (formula "66") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_3"))
                           (rule "applyEq" (formula "67") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "67") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "replaceKnownSelect_taclet00010_22" (formula "1") (term "0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet00010_23" (formula "1") (term "0"))
                           (rule "applyEqReverse" (formula "67") (term "0,0,0,1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "67") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "67") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "66") (term "0,0,1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "48"))
                           (builtin "One Step Simplification" (formula "66"))
                           (rule "pullOutSelect" (formula "66") (term "1,0,0,1,0,1,1,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_3"))
                           (rule "applyEq" (formula "67") (term "0,1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "67") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "replaceKnownSelect_taclet00010_12" (formula "1") (term "0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet00010_13" (formula "1") (term "0"))
                           (rule "applyEqReverse" (formula "67") (term "1,0,0,1,0,1,1,0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "67") (term "0,1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "67") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "66") (term "0,0,1,0,0,0,0,0") (ifseqformula "53"))
                           (builtin "One Step Simplification" (formula "66"))
                           (rule "pullOutSelect" (formula "66") (term "0,0,1,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_3"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "replaceKnownSelect_taclet00010_4" (formula "1") (term "0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet00010_5" (formula "1") (term "0"))
                           (rule "applyEqReverse" (formula "67") (term "0,0,1,0,0,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "66") (term "0,1,0,0,0") (ifseqformula "58"))
                           (builtin "One Step Simplification" (formula "66"))
                           (rule "pullOutSelect" (formula "66") (term "0,0,1,0,0,0,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_3"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "replaceKnownSelect_taclet00010_8" (formula "1") (term "0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet00010_9" (formula "1") (term "0"))
                           (rule "applyEqReverse" (formula "67") (term "0,0,1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "66") (term "0,1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "56"))
                           (builtin "One Step Simplification" (formula "66"))
                           (rule "pullOutSelect" (formula "66") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_3"))
                           (rule "applyEq" (formula "67") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "67") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "replaceKnownSelect_taclet00010_18" (formula "1") (term "0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet00010_19" (formula "1") (term "0"))
                           (rule "applyEqReverse" (formula "67") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "67") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "67") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "66") (term "0,0,1,0,0,0,0,0,0,0") (ifseqformula "50"))
                           (builtin "One Step Simplification" (formula "66"))
                           (rule "pullOutSelect" (formula "66") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_3"))
                           (rule "applyEq" (formula "67") (term "0,0,0,1,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "67") (term "1,0,0,1,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "replaceKnownSelect_taclet00010_16" (formula "1") (term "0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet00010_17" (formula "1") (term "0"))
                           (rule "applyEqReverse" (formula "67") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "67") (term "0,0,0,1,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "67") (term "1,0,0,1,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "66") (term "0,0,1,0,0,0,0,0,0") (ifseqformula "51"))
                           (builtin "One Step Simplification" (formula "66"))
                           (rule "pullOutSelect" (formula "66") (term "0,0,0,1,0,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_3"))
                           (rule "applyEq" (formula "67") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "67") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "replaceKnownSelect_taclet00010_20" (formula "1") (term "0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet00010_21" (formula "1") (term "0"))
                           (rule "applyEqReverse" (formula "67") (term "0,0,0,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "67") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "67") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "66") (term "0,0,1,0,0,0,0,0,0,0,0") (ifseqformula "49"))
                           (builtin "One Step Simplification" (formula "66"))
                           (rule "pullOutSelect" (formula "66") (term "0,0,0,1,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_3"))
                           (rule "applyEq" (formula "67") (term "0,1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "67") (term "1,0,0,1,0,1,1,0,0,0,0,0") (ifseqformula "1"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "replaceKnownSelect_taclet00010_14" (formula "1") (term "0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet00010_15" (formula "1") (term "0"))
                           (rule "applyEqReverse" (formula "67") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "67") (term "0,1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "67") (term "1,0,0,1,0,1,1,0,0,0,0,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "66") (term "0,0,1,0,0,0,0,0") (ifseqformula "52"))
                           (builtin "One Step Simplification" (formula "66"))
                           (rule "pullOutSelect" (formula "66") (term "0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_4"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "replaceKnownSelect_taclet00010_0" (formula "1") (term "0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet00010_1" (formula "1") (term "0"))
                           (rule "applyEqReverse" (formula "67") (term "0,0,1,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "66") (term "0,1,0") (ifseqformula "60"))
                           (builtin "One Step Simplification" (formula "66"))
                           (rule "pullOutSelect" (formula "66") (term "0,0,1,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_3"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "replaceKnownSelect_taclet00010_6" (formula "1") (term "0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet00010_7" (formula "1") (term "0"))
                           (rule "applyEqReverse" (formula "67") (term "0,0,1,0,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "66") (term "0,1,0,0") (ifseqformula "57"))
                           (builtin "One Step Simplification" (formula "66"))
                           (rule "pullOutSelect" (formula "66") (term "0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_3"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "replaceKnownSelect_taclet00010_2" (formula "1") (term "0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet00010_3" (formula "1") (term "0"))
                           (rule "applyEqReverse" (formula "67") (term "0,0,1,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "66") (term "0,1,0") (ifseqformula "59"))
                           (builtin "One Step Simplification" (formula "66"))
                           (rule "pullOutSelect" (formula "66") (term "0,0,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_3"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "replaceKnownSelect_taclet00010_10" (formula "1") (term "0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet00010_11" (formula "1") (term "0"))
                           (rule "applyEqReverse" (formula "67") (term "0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "66") (term "0,0,0,0,0,0,0,0") (ifseqformula "55"))
                           (builtin "One Step Simplification" (formula "66"))
                           (rule "nnf_imp2or" (formula "66") (term "0,1,0"))
                           (rule "nnf_imp2or" (formula "66") (term "0,1,0,0"))
                           (rule "nnf_notAnd" (formula "66") (term "0,0,1,0"))
                           (rule "inEqSimp_notLeq" (formula "66") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "66") (term "1,0,0,1,0,0,1,0"))
                           (rule "mul_literals" (formula "66") (term "0,1,0,0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "66") (term "0,0,1,0,0,1,0"))
                           (rule "add_literals" (formula "66") (term "0,0,0,1,0,0,1,0"))
                           (rule "add_zero_left" (formula "66") (term "0,0,1,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,1,0"))
                           (rule "inEqSimp_notGeq" (formula "66") (term "0,0,0,1,0"))
                           (rule "times_zero_1" (formula "66") (term "1,0,0,0,0,0,1,0"))
                           (rule "add_literals" (formula "66") (term "0,0,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0,1,0"))
                           (rule "mul_literals" (formula "66") (term "1,0,0,0,1,0"))
                           (rule "nnf_imp2or" (formula "66") (term "0,1,0,0,0"))
                           (rule "nnf_notAnd" (formula "66") (term "0,0,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "66") (term "0,0,0,1,0,0"))
                           (rule "mul_literals" (formula "66") (term "1,0,0,0,0,0,1,0,0"))
                           (rule "add_literals" (formula "66") (term "0,0,0,0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0,1,0,0"))
                           (rule "mul_literals" (formula "66") (term "1,0,0,0,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "66") (term "1,0,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "66") (term "1,0,0,1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "66") (term "0,1,0,0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "66") (term "0,0,1,0,0,1,0,0"))
                           (rule "add_literals" (formula "66") (term "0,0,0,1,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "66") (term "0,0,1,0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "1,0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,1,0,0"))
                           (rule "nnf_imp2or" (formula "66") (term "0,1,0,0,0,0"))
                           (rule "nnf_imp2or" (formula "66") (term "0,1,0,0,0,0,0"))
                           (rule "nnf_imp2or" (formula "66") (term "0,0,0,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "66") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "66") (term "1,0,0,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "66") (term "1,0,0,1,0,0,1,0,0,0"))
                           (rule "mul_literals" (formula "66") (term "0,1,0,0,1,0,0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "66") (term "0,0,1,0,0,1,0,0,0"))
                           (rule "add_literals" (formula "66") (term "0,0,0,1,0,0,1,0,0,0"))
                           (rule "add_zero_left" (formula "66") (term "0,0,1,0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "1,0,0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "66") (term "0,0,0,1,0,0,0"))
                           (rule "mul_literals" (formula "66") (term "1,0,0,0,0,0,1,0,0,0"))
                           (rule "add_literals" (formula "66") (term "0,0,0,0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0,1,0,0,0"))
                           (rule "mul_literals" (formula "66") (term "1,0,0,0,1,0,0,0"))
                           (rule "nnf_notAnd" (formula "66") (term "0,0,1,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "66") (term "0,0,0,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "66") (term "1,0,0,0,0,0,1,0,0,0,0"))
                           (rule "add_literals" (formula "66") (term "0,0,0,0,0,1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0,1,0,0,0,0"))
                           (rule "mul_literals" (formula "66") (term "1,0,0,0,1,0,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "66") (term "1,0,0,1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "66") (term "1,0,0,1,0,0,1,0,0,0,0"))
                           (rule "mul_literals" (formula "66") (term "0,1,0,0,1,0,0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "66") (term "0,0,1,0,0,1,0,0,0,0"))
                           (rule "add_literals" (formula "66") (term "0,0,0,1,0,0,1,0,0,0,0"))
                           (rule "add_zero_left" (formula "66") (term "0,0,1,0,0,1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "1,0,0,1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,1,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "66") (term "0,0,1,0,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "66") (term "0,0,0,1,0,0,0,0,0"))
                           (rule "times_zero_1" (formula "66") (term "1,0,0,0,0,0,1,0,0,0,0,0"))
                           (rule "add_literals" (formula "66") (term "0,0,0,0,0,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "66") (term "1,0,0,0,1,0,0,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "66") (term "1,0,0,1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "66") (term "1,0,0,1,0,0,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "66") (term "0,1,0,0,1,0,0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "66") (term "0,0,1,0,0,1,0,0,0,0,0"))
                           (rule "add_literals" (formula "66") (term "0,0,0,1,0,0,1,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "66") (term "0,0,1,0,0,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "1,0,0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,1,0,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "66") (term "0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "66") (term "0,0,0,0,0,0,0,0,0"))
                           (rule "times_zero_1" (formula "66") (term "1,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "add_literals" (formula "66") (term "0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "66") (term "1,0,0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "66") (term "1,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "66") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "66") (term "0,1,0,0,1,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "66") (term "0,0,1,0,0,0,0,0,0,0,0"))
                           (rule "add_literals" (formula "66") (term "0,0,0,1,0,0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "66") (term "0,0,1,0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "66") (term "1,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,0,0,0,0,0,0"))
                           (rule "ifthenelse_split" (formula "54") (term "1,0"))
                           (branch "self.electionID.length ≥ 1 TRUE"
                              (rule "replace_known_left" (formula "55") (term "0,1,1,0,0,1") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "55"))
                              (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "1"))
                              (rule "leq_literals" (formula "15") (term "0"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "cut_direct" (formula "30") (term "0"))
                              (branch "CUT: result_0.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "true_left" (formula "31"))
                                 (rule "andRight" (formula "66"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "66"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "66"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "66"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "66"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "66"))
                                                (branch "Case 1"
                                                   (rule "allRight" (formula "66") (inst "sk=i_53"))
                                                   (rule "orRight" (formula "66"))
                                                   (rule "notRight" (formula "67"))
                                                   (rule "orRight" (formula "67"))
                                                   (rule "inEqSimp_leqRight" (formula "67"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_geqRight" (formula "68"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_55"))
                                                   (rule "simplifySelectOfCreate" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "51")))
                                                   (rule "simplifySelectOfCreate" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "52")) (ifInst ""  (formula "7")))
                                                   (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "46") (ifseqformula "51"))
                                                   (rule "allLeft" (formula "24") (inst "t=i_53"))
                                                   (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                                   (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "24") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "24"))
                                                   (rule "qeq_literals" (formula "2") (term "0"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                                (branch "Case 2"
                                                   (rule "allRight" (formula "66") (inst "sk=i_52"))
                                                   (rule "orRight" (formula "66"))
                                                   (rule "notRight" (formula "67"))
                                                   (rule "orRight" (formula "67"))
                                                   (rule "inEqSimp_leqRight" (formula "67"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_geqRight" (formula "68"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_54"))
                                                   (rule "simplifySelectOfCreate" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "51")))
                                                   (rule "simplifySelectOfCreate" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "53")) (ifInst ""  (formula "8")))
                                                   (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "46") (ifseqformula "52"))
                                                   (rule "allLeft" (formula "25") (inst "t=i_52"))
                                                   (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "25"))
                                                   (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                                   (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "25") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "25"))
                                                   (rule "inEqSimp_contradInEq1" (formula "25") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "25") (term "0"))
                                                   (builtin "One Step Simplification" (formula "25"))
                                                   (rule "closeFalse" (formula "25"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "66") (inst "sk=i_51"))
                                                (rule "orRight" (formula "66"))
                                                (rule "notRight" (formula "67"))
                                                (rule "orRight" (formula "67"))
                                                (rule "inEqSimp_geqRight" (formula "68"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_leqRight" (formula "68"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_53"))
                                                (rule "simplifySelectOfCreate" (formula "3"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "51")))
                                                (rule "simplifySelectOfCreate" (formula "3"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "54")) (ifInst ""  (formula "9")))
                                                (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "46") (ifseqformula "53"))
                                                (rule "allLeft" (formula "26") (inst "t=i_51"))
                                                (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                                (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "26") (term "0,0,1"))
                                                (rule "leq_literals" (formula "26") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "inEqSimp_contradInEq1" (formula "26") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "26") (term "0"))
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "closeFalse" (formula "26"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "allRight" (formula "66") (inst "sk=i_50"))
                                             (rule "orRight" (formula "66"))
                                             (rule "notRight" (formula "67"))
                                             (rule "orRight" (formula "67"))
                                             (rule "inEqSimp_geqRight" (formula "68"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_leqRight" (formula "68"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_52"))
                                             (rule "simplifySelectOfCreate" (formula "3"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "51")))
                                             (rule "simplifySelectOfCreate" (formula "3"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "55")) (ifInst ""  (formula "11")))
                                             (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "46") (ifseqformula "54"))
                                             (rule "allLeft" (formula "27") (inst "t=i_50"))
                                             (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "27") (term "0,0,1"))
                                             (rule "leq_literals" (formula "27") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "27") (term "0"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "closeFalse" (formula "27"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "allRight" (formula "66") (inst "sk=i_49"))
                                          (rule "orRight" (formula "66"))
                                          (rule "notRight" (formula "67"))
                                          (rule "orRight" (formula "67"))
                                          (rule "inEqSimp_leqRight" (formula "67"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_geqRight" (formula "68"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_51"))
                                          (rule "simplifySelectOfCreate" (formula "3"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "51")))
                                          (rule "simplifySelectOfCreate" (formula "3"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "56")) (ifInst ""  (formula "10")))
                                          (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "46") (ifseqformula "55"))
                                          (rule "allLeft" (formula "28") (inst "t=i_49"))
                                          (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                                          (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "28") (term "0,0,1"))
                                          (rule "leq_literals" (formula "28") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "28"))
                                          (rule "qeq_literals" (formula "2") (term "0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "66") (inst "sk=i_48"))
                                       (rule "orRight" (formula "66"))
                                       (rule "notRight" (formula "67"))
                                       (rule "orRight" (formula "67"))
                                       (rule "inEqSimp_leqRight" (formula "67"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_geqRight" (formula "68"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_50"))
                                       (rule "simplifySelectOfCreate" (formula "3"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "51")))
                                       (rule "simplifySelectOfCreate" (formula "3"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "57")) (ifInst ""  (formula "13")))
                                       (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "46") (ifseqformula "56"))
                                       (rule "allLeft" (formula "29") (inst "t=i_48"))
                                       (rule "replace_known_left" (formula "29") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                                       (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "29") (term "0,0,1"))
                                       (rule "leq_literals" (formula "29") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "29"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "66") (inst "sk=f_8"))
                                    (rule "allRight" (formula "66") (inst "sk=o_8"))
                                    (rule "orRight" (formula "66"))
                                    (rule "pullOutSelect" (formula "67") (term "0") (inst "selectSK=f_8_0"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "68"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_8_1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_8_2"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_8_3"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_8_4"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_8_5"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "53"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_8_6"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "72"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_8_7"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "commute_and" (formula "7") (term "0,0"))
                                    (rule "commute_and" (formula "6") (term "0,0"))
                                    (rule "commute_and" (formula "5") (term "0,0"))
                                    (rule "commute_and" (formula "4") (term "0,0"))
                                    (rule "commute_and" (formula "3") (term "0,0"))
                                    (rule "commute_and" (formula "2") (term "0,0"))
                                    (rule "commute_and" (formula "1") (term "0,0"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch " f_8 = java.lang.Object::<created> ∧ o_8 = strPool(\"Wrong election ID\") TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "1")))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "applyEqRigid" (formula "73") (term "1,0,0,1") (ifseqformula "2"))
                                       (rule "applyEq" (formula "7") (term "0,1,0,0") (ifseqformula "2"))
                                       (rule "eqSymm" (formula "7") (term "1,0,0"))
                                       (rule "sortsDisjointModuloNull" (formula "7") (term "1,0,0"))
                                       (rule "eqSymm" (formula "7") (term "1,1,0,0"))
                                       (rule "replace_known_right" (formula "7") (term "1,1,0,0") (ifseqformula "72"))
                                       (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "54")))
                                       (rule "applyEqReverse" (formula "74") (term "1") (ifseqformula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "applyEq" (formula "72") (term "0,0,0") (ifseqformula "2"))
                                       (rule "eqSymm" (formula "72") (term "0,0"))
                                       (rule "replace_known_right" (formula "72") (term "0,0") (ifseqformula "71"))
                                       (builtin "One Step Simplification" (formula "72"))
                                       (rule "notRight" (formula "72"))
                                       (rule "applyEqRigid" (formula "73") (term "1,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "7") (term "0,0,0,0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "7"))
                                       (rule "applyEqReverse" (formula "73") (term "1") (ifseqformula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "applyEq" (formula "72") (term "2,0") (ifseqformula "2"))
                                       (rule "narrowSelectType" (formula "72") (term "0") (ifseqformula "49"))
                                       (rule "eqSymm" (formula "72"))
                                       (rule "applyEq" (formula "6") (term "0,0,0,0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "72") (term "0") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEqRigid" (formula "5") (term "0,1,0,0") (ifseqformula "3"))
                                       (rule "eqSymm" (formula "5") (term "1,0,0"))
                                       (rule "sortsDisjointModuloNull" (formula "5") (term "1,0,0"))
                                       (rule "eqSymm" (formula "5") (term "1,1,0,0"))
                                       (rule "replace_known_right" (formula "5") (term "1,1,0,0") (ifseqformula "70"))
                                       (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "52")))
                                       (rule "applyEqReverse" (formula "71") (term "0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "3"))
                                       (rule "eqSymm" (formula "4") (term "1,0,0"))
                                       (rule "sortsDisjointModuloNull" (formula "4") (term "1,0,0"))
                                       (rule "eqSymm" (formula "4") (term "1,1,0,0"))
                                       (rule "replace_known_right" (formula "4") (term "1,1,0,0") (ifseqformula "69"))
                                       (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "51")))
                                       (rule "applyEqReverse" (formula "70") (term "0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "eqSymm" (formula "69"))
                                       (rule "close" (formula "69") (ifseqformula "1"))
                                    )
                                    (branch " f_8 = java.lang.Object::<created> ∧ o_8 = strPool(\"Wrong election ID\") FALSE"
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch "f_8 = java.lang.Object::<created> ∧ o_8 = m_7 TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_left" (formula "52") (term "0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "52"))
                                          (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "applyEqReverse" (formula "75") (term "1") (ifseqformula "7"))
                                          (rule "hideAuxiliaryEq" (formula "7"))
                                          (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "73") (term "1") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "applyEq" (formula "71") (term "1,0,0,1") (ifseqformula "2"))
                                          (rule "replace_known_right" (formula "71") (term "0,1") (ifseqformula "50"))
                                          (builtin "One Step Simplification" (formula "71"))
                                          (rule "notRight" (formula "71"))
                                          (rule "applyEq" (formula "72") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "72") (term "2,0") (ifseqformula "2"))
                                          (rule "narrowSelectType" (formula "72") (term "0") (ifseqformula "48"))
                                          (rule "eqSymm" (formula "72"))
                                          (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "72") (term "0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "applyEq" (formula "49") (term "0") (ifseqformula "3"))
                                          (rule "sortsDisjointModuloNull" (formula "49"))
                                          (rule "eqSymm" (formula "49") (term "1"))
                                          (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "70"))
                                          (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "52")))
                                          (rule "false_right" (formula "49"))
                                          (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "70") (term "0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "eqSymm" (formula "69"))
                                          (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "3"))
                                          (rule "close" (formula "50") (ifseqformula "3"))
                                       )
                                       (branch "f_8 = java.lang.Object::<created> ∧ o_8 = m_7 FALSE"
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch "f_8 = Throwable::$cause ∧ o_8 = m_7 TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "2")))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "50"))
                                             (rule "replace_known_right" (formula "51") (term "0") (ifseqformula "50"))
                                             (builtin "One Step Simplification" (formula "51"))
                                             (rule "false_right" (formula "51"))
                                             (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "73") (term "1") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "72") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "71") (term "1") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "applyEq" (formula "69") (term "0,0,0") (ifseqformula "2"))
                                             (rule "replace_known_right" (formula "69") (term "0,0") (ifseqformula "50"))
                                             (builtin "One Step Simplification" (formula "69"))
                                             (rule "notRight" (formula "69"))
                                             (rule "applyEqRigid" (formula "70") (term "2,0") (ifseqformula "2"))
                                             (rule "narrowSelectType" (formula "70") (term "0") (ifseqformula "46"))
                                             (rule "applyEq" (formula "48") (term "0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "48"))
                                             (rule "false_right" (formula "48"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "close" (formula "48") (ifseqformula "1"))
                                          )
                                          (branch "f_8 = Throwable::$cause ∧ o_8 = m_7 FALSE"
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "cut_direct" (formula "61") (term "0"))
                                             (branch "CUT: mFirst(seqDef{int u;}(0, payload.length, payload.arr(u)@heapAfter_getPayLoad)).length = self.electionID.length TRUE"
                                                (builtin "One Step Simplification" (formula "62"))
                                                (rule "allRight" (formula "62") (inst "sk=iv_1"))
                                                (rule "orRight" (formula "62"))
                                                (rule "orRight" (formula "62"))
                                                (rule "inEqSimp_geqRight" (formula "63"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_leqRight" (formula "63"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "replace_known_left" (formula "64") (term "0,0,1") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "64"))
                                                (rule "inEqSimp_homoInEq0" (formula "64") (term "0,1"))
                                                (rule "polySimp_addComm1" (formula "64") (term "0,0,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "64") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "64") (term "1,0,1"))
                                                (rule "polySimp_rightDist" (formula "64") (term "1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,1"))
                                                (rule "mul_literals" (formula "64") (term "0,1,0,1"))
                                                (rule "polySimp_elimOne" (formula "64") (term "1,1,0,1"))
                                                (rule "replace_known_left" (formula "64") (term "0,1") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "64"))
                                                (rule "pullOutSelect" (formula "64") (term "1") (inst "selectSK=arr_49"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "71")) (ifInst ""  (formula "22")))
                                                (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "narrowSelectArrayType" (formula "64") (term "1") (ifseqformula "50") (ifseqformula "70"))
                                                (rule "ifthenelse_split" (formula "4") (term "0"))
                                                (branch "f_8 = Throwable::$message ∧ o_8 = m_7 TRUE"
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "54"))
                                                   (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "53"))
                                                   (rule "replace_known_right" (formula "55") (term "0") (ifseqformula "54"))
                                                   (builtin "One Step Simplification" (formula "55"))
                                                   (rule "false_right" (formula "55"))
                                                   (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEq" (formula "76") (term "2,0") (ifseqformula "4"))
                                                   (rule "narrowSelectType" (formula "76") (term "0") (ifseqformula "50"))
                                                   (rule "eqSymm" (formula "76"))
                                                   (rule "applyEq" (formula "75") (term "1,0,0,1") (ifseqformula "5"))
                                                   (rule "replace_known_right" (formula "75") (term "0,1") (ifseqformula "54"))
                                                   (builtin "One Step Simplification" (formula "75"))
                                                   (rule "notRight" (formula "75"))
                                                   (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "applyEq" (formula "53") (term "0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "53"))
                                                   (rule "false_right" (formula "53"))
                                                   (rule "applyEq" (formula "52") (term "0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "52"))
                                                   (rule "false_right" (formula "52"))
                                                   (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "applyEqReverse" (formula "73") (term "0") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "eqSymm" (formula "72"))
                                                   (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "1"))
                                                   (rule "eqSymm" (formula "6"))
                                                   (rule "close" (formula "53") (ifseqformula "6"))
                                                )
                                                (branch "f_8 = Throwable::$message ∧ o_8 = m_7 FALSE"
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "cut_direct" (formula "76") (term "0,0"))
                                                   (branch "CUT: o_8 = null TRUE"
                                                      (builtin "One Step Simplification" (formula "77"))
                                                      (rule "false_right" (formula "77"))
                                                      (rule "applyEqRigid" (formula "53") (term "0,1") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "53") (term "1"))
                                                      (rule "replace_known_right" (formula "53") (term "1") (ifseqformula "58"))
                                                      (builtin "One Step Simplification" (formula "53"))
                                                      (rule "false_right" (formula "53"))
                                                      (rule "applyEq" (formula "54") (term "0,1") (ifseqformula "1"))
                                                      (rule "replace_known_right" (formula "54") (term "1") (ifseqformula "75"))
                                                      (builtin "One Step Simplification" (formula "54"))
                                                      (rule "false_right" (formula "54"))
                                                      (rule "applyEq" (formula "7") (term "0,1,0,0") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "7") (term "1,0,0"))
                                                      (rule "replace_known_right" (formula "7") (term "1,0,0") (ifseqformula "56"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "applyEqReverse" (formula "75") (term "1") (ifseqformula "7"))
                                                      (rule "hideAuxiliaryEq" (formula "7"))
                                                      (rule "applyEqRigid" (formula "51") (term "0,1") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "51") (term "1"))
                                                      (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "55"))
                                                      (builtin "One Step Simplification" (formula "51"))
                                                      (rule "false_right" (formula "51"))
                                                      (rule "applyEqRigid" (formula "5") (term "1,2,0") (ifseqformula "1"))
                                                      (rule "applyEqRigid" (formula "73") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "5") (term "0,1,0,0") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "5") (term "1,0,0"))
                                                      (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "54"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "applyEqRigid" (formula "50") (term "0,1") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "50") (term "1"))
                                                      (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "53"))
                                                      (builtin "One Step Simplification" (formula "50"))
                                                      (rule "false_right" (formula "50"))
                                                      (rule "applyEq" (formula "5") (term "0,1,0,0") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "5") (term "1,0,0"))
                                                      (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "52"))
                                                      (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "71")))
                                                      (rule "closeFalse" (formula "5"))
                                                   )
                                                   (branch "CUT: o_8 = null FALSE"
                                                      (builtin "One Step Simplification" (formula "77"))
                                                      (rule "notRight" (formula "77"))
                                                      (rule "cut_direct" (formula "54") (term "1"))
                                                      (branch "CUT: o_8 = m_7 TRUE"
                                                         (builtin "One Step Simplification" (formula "55"))
                                                         (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "8"))
                                                         (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "54"))
                                                         (rule "replace_known_right" (formula "56") (term "0") (ifseqformula "55"))
                                                         (builtin "One Step Simplification" (formula "56"))
                                                         (rule "false_right" (formula "56"))
                                                         (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "53"))
                                                         (rule "applyEq" (formula "6") (term "1,2,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                         (rule "close" (formula "56") (ifseqformula "2"))
                                                      )
                                                      (branch "CUT: o_8 = m_7 FALSE"
                                                         (builtin "One Step Simplification" (formula "55"))
                                                         (rule "false_right" (formula "55"))
                                                         (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "54"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "53"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "52"))
                                                         (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "76")))
                                                         (rule "closeFalse" (formula "5"))
                                                      )
                                                   )
                                                )
                                             )
                                             (branch "CUT: mFirst(seqDef{int u;}(0, payload.length, payload.arr(u)@heapAfter_getPayLoad)).length = self.electionID.length FALSE"
                                                (builtin "One Step Simplification" (formula "62"))
                                                (rule "false_right" (formula "62"))
                                                (rule "ifthenelse_split" (formula "1") (term "0"))
                                                (branch "f_8 = Throwable::$message ∧ o_8 = m_7 TRUE"
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "51"))
                                                   (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "50"))
                                                   (rule "replace_known_right" (formula "52") (term "0") (ifseqformula "51"))
                                                   (builtin "One Step Simplification" (formula "52"))
                                                   (rule "false_right" (formula "52"))
                                                   (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "51"))
                                                   (rule "false_right" (formula "51"))
                                                   (rule "applyEqRigid" (formula "50") (term "0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "50"))
                                                   (rule "false_right" (formula "50"))
                                                   (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "applyEq" (formula "70") (term "2,0") (ifseqformula "1"))
                                                   (rule "narrowSelectType" (formula "70") (term "0") (ifseqformula "46"))
                                                   (rule "eqSymm" (formula "70"))
                                                   (rule "applyEq" (formula "69") (term "0,0,0") (ifseqformula "2"))
                                                   (rule "replace_known_right" (formula "69") (term "0,0") (ifseqformula "50"))
                                                   (builtin "One Step Simplification" (formula "69"))
                                                   (rule "notRight" (formula "69"))
                                                   (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "70") (term "0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "eqSymm" (formula "69"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                   (rule "close" (formula "48") (ifseqformula "1"))
                                                )
                                                (branch "f_8 = Throwable::$message ∧ o_8 = m_7 FALSE"
                                                   (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "cut_direct" (formula "73") (term "0,0"))
                                                   (branch "CUT: o_8 = null TRUE"
                                                      (builtin "One Step Simplification" (formula "74"))
                                                      (rule "false_right" (formula "74"))
                                                      (rule "applyEqRigid" (formula "50") (term "0,1") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "50") (term "1"))
                                                      (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "55"))
                                                      (builtin "One Step Simplification" (formula "50"))
                                                      (rule "false_right" (formula "50"))
                                                      (rule "applyEqRigid" (formula "51") (term "0,1") (ifseqformula "1"))
                                                      (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "72"))
                                                      (builtin "One Step Simplification" (formula "51"))
                                                      (rule "false_right" (formula "51"))
                                                      (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "2") (term "1,0,0"))
                                                      (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "53"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "applyEq" (formula "49") (term "0,1") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "49") (term "1"))
                                                      (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "52"))
                                                      (builtin "One Step Simplification" (formula "49"))
                                                      (rule "false_right" (formula "49"))
                                                      (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "2") (term "1,0,0"))
                                                      (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "51"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "applyEq" (formula "47") (term "0,1") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "47") (term "1"))
                                                      (rule "replace_known_right" (formula "47") (term "1") (ifseqformula "50"))
                                                      (builtin "One Step Simplification" (formula "47"))
                                                      (rule "false_right" (formula "47"))
                                                      (rule "applyEq" (formula "68") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "2") (term "1,0,0"))
                                                      (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "49"))
                                                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "68")))
                                                      (rule "closeFalse" (formula "2"))
                                                   )
                                                   (branch "CUT: o_8 = null FALSE"
                                                      (builtin "One Step Simplification" (formula "74"))
                                                      (rule "notRight" (formula "74"))
                                                      (rule "ifthenelse_split" (formula "2") (term "0"))
                                                      (branch "f_8 = MalformedData::$errCode ∧ o_8 = m_7 TRUE"
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "51"))
                                                         (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "50"))
                                                         (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "52"))
                                                         (rule "replace_known_right" (formula "53") (term "0") (ifseqformula "52"))
                                                         (builtin "One Step Simplification" (formula "53"))
                                                         (rule "false_right" (formula "53"))
                                                         (rule "applyEqRigid" (formula "52") (term "0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "52"))
                                                         (rule "false_right" (formula "52"))
                                                         (rule "applyEq" (formula "51") (term "0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "51"))
                                                         (rule "false_right" (formula "51"))
                                                         (rule "applyEqRigid" (formula "50") (term "0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "50"))
                                                         (rule "false_right" (formula "50"))
                                                         (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "applyEq" (formula "71") (term "1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "70") (term "0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "applyEqReverse" (formula "70") (term "1") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "applyEq" (formula "69") (term "2,0") (ifseqformula "2"))
                                                         (rule "narrowSelectType" (formula "69") (term "0") (ifseqformula "46"))
                                                         (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                         (rule "close" (formula "48") (ifseqformula "1"))
                                                      )
                                                      (branch "f_8 = MalformedData::$errCode ∧ o_8 = m_7 FALSE"
                                                         (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                         (rule "hideAuxiliaryEq" (formula "2"))
                                                         (rule "ifthenelse_split" (formula "2") (term "0"))
                                                         (branch "f_8 = MalformedData::$description ∧ o_8 = m_7 TRUE"
                                                            (rule "andLeft" (formula "2"))
                                                            (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "51"))
                                                            (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "50"))
                                                            (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "49"))
                                                            (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "52"))
                                                            (rule "replace_known_right" (formula "53") (term "0") (ifseqformula "52"))
                                                            (builtin "One Step Simplification" (formula "53"))
                                                            (rule "false_right" (formula "53"))
                                                            (rule "applyEqRigid" (formula "50") (term "0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "50"))
                                                            (rule "false_right" (formula "50"))
                                                            (rule "applyEq" (formula "51") (term "0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "51"))
                                                            (rule "false_right" (formula "51"))
                                                            (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "49"))
                                                            (rule "false_right" (formula "49"))
                                                            (rule "applyEq" (formula "49") (term "0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "49"))
                                                            (rule "false_right" (formula "49"))
                                                            (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "applyEqReverse" (formula "71") (term "1") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                            (rule "close" (formula "48") (ifseqformula "1"))
                                                         )
                                                         (branch "f_8 = MalformedData::$description ∧ o_8 = m_7 FALSE"
                                                            (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                            (rule "hideAuxiliaryEq" (formula "2"))
                                                            (rule "ifthenelse_split" (formula "2") (term "0"))
                                                            (branch "f_8 = java.lang.Object::<initialized> ∧ o_8 = m_7 TRUE"
                                                               (rule "andLeft" (formula "2"))
                                                               (rule "applyEqReverse" (formula "77") (term "1") (ifseqformula "4"))
                                                               (rule "hideAuxiliaryEq" (formula "4"))
                                                               (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "48"))
                                                               (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "51"))
                                                               (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "50"))
                                                               (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "52"))
                                                               (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "49"))
                                                               (rule "replace_known_right" (formula "53") (term "0") (ifseqformula "52"))
                                                               (builtin "One Step Simplification" (formula "53"))
                                                               (rule "false_right" (formula "53"))
                                                               (rule "applyEqRigid" (formula "50") (term "0") (ifseqformula "2"))
                                                               (builtin "One Step Simplification" (formula "50"))
                                                               (rule "false_right" (formula "50"))
                                                               (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "2"))
                                                               (builtin "One Step Simplification" (formula "51"))
                                                               (rule "false_right" (formula "51"))
                                                               (rule "applyEqRigid" (formula "73") (term "2,0") (ifseqformula "2"))
                                                               (rule "narrowSelectType" (formula "73") (term "0") (ifseqformula "46"))
                                                               (rule "applyEq" (formula "72") (term "0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "49") (term "0") (ifseqformula "2"))
                                                               (builtin "One Step Simplification" (formula "49"))
                                                               (rule "false_right" (formula "49"))
                                                               (rule "applyEq" (formula "48") (term "0") (ifseqformula "2"))
                                                               (builtin "One Step Simplification" (formula "48"))
                                                               (rule "false_right" (formula "48"))
                                                               (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                               (rule "close" (formula "49") (ifseqformula "1"))
                                                            )
                                                            (branch "f_8 = java.lang.Object::<initialized> ∧ o_8 = m_7 FALSE"
                                                               (rule "close" (formula "76") (ifseqformula "2"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "CUT: result_0.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "andRight" (formula "67"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "67"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "67"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "67"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "67"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "67"))
                                                (branch "Case 1"
                                                   (rule "allRight" (formula "67") (inst "sk=i_47"))
                                                   (rule "orRight" (formula "67"))
                                                   (rule "orRight" (formula "67"))
                                                   (rule "notRight" (formula "69"))
                                                   (rule "inEqSimp_leqRight" (formula "68"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_geqRight" (formula "69"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_48"))
                                                   (rule "simplifySelectOfCreate" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "52")))
                                                   (rule "simplifySelectOfCreate" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "53")) (ifInst ""  (formula "7")))
                                                   (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "46") (ifseqformula "52"))
                                                   (rule "allLeft" (formula "24") (inst "t=i_47"))
                                                   (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "24") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "1"))
                                                   (rule "andLeft" (formula "24"))
                                                   (rule "inEqSimp_homoInEq1" (formula "24"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                                   (rule "add_literals" (formula "24") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "24") (term "1,0"))
                                                   (rule "add_zero_right" (formula "24") (term "0"))
                                                   (rule "leq_literals" (formula "24"))
                                                   (rule "closeFalse" (formula "24"))
                                                )
                                                (branch "Case 2"
                                                   (rule "allRight" (formula "67") (inst "sk=i_46"))
                                                   (rule "orRight" (formula "67"))
                                                   (rule "orRight" (formula "67"))
                                                   (rule "notRight" (formula "69"))
                                                   (rule "inEqSimp_leqRight" (formula "68"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_geqRight" (formula "69"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_47"))
                                                   (rule "simplifySelectOfCreate" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "52")))
                                                   (rule "simplifySelectOfCreate" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "54")) (ifInst ""  (formula "8")))
                                                   (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "46") (ifseqformula "53"))
                                                   (rule "allLeft" (formula "25") (inst "t=i_46"))
                                                   (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "25"))
                                                   (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "25") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "25"))
                                                   (rule "inEqSimp_contradInEq1" (formula "25") (ifseqformula "1"))
                                                   (rule "andLeft" (formula "25"))
                                                   (rule "inEqSimp_homoInEq1" (formula "25"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                                                   (rule "add_literals" (formula "25") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "25") (term "1,0"))
                                                   (rule "add_zero_right" (formula "25") (term "0"))
                                                   (rule "leq_literals" (formula "25"))
                                                   (rule "closeFalse" (formula "25"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "67") (inst "sk=i_45"))
                                                (rule "orRight" (formula "67"))
                                                (rule "orRight" (formula "67"))
                                                (rule "notRight" (formula "69"))
                                                (rule "inEqSimp_geqRight" (formula "69"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_leqRight" (formula "69"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_46"))
                                                (rule "simplifySelectOfCreate" (formula "3"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "52")))
                                                (rule "simplifySelectOfCreate" (formula "3"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "55")) (ifInst ""  (formula "9")))
                                                (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "46") (ifseqformula "54"))
                                                (rule "allLeft" (formula "26") (inst "t=i_45"))
                                                (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "26") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "26"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "2"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0"))
                                                (rule "add_zero_right" (formula "2") (term "0"))
                                                (rule "leq_literals" (formula "2"))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "allRight" (formula "67") (inst "sk=i_44"))
                                             (rule "orRight" (formula "67"))
                                             (rule "orRight" (formula "67"))
                                             (rule "notRight" (formula "69"))
                                             (rule "inEqSimp_geqRight" (formula "69"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_leqRight" (formula "69"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_45"))
                                             (rule "simplifySelectOfCreate" (formula "3"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "52")))
                                             (rule "simplifySelectOfCreate" (formula "3"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "56")) (ifInst ""  (formula "11")))
                                             (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "46") (ifseqformula "55"))
                                             (rule "allLeft" (formula "27") (inst "t=i_44"))
                                             (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "27") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "27"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "2"))
                                             (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0"))
                                             (rule "add_zero_right" (formula "2") (term "0"))
                                             (rule "leq_literals" (formula "2"))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "allRight" (formula "67") (inst "sk=i_43"))
                                          (rule "orRight" (formula "67"))
                                          (rule "orRight" (formula "67"))
                                          (rule "notRight" (formula "69"))
                                          (rule "inEqSimp_leqRight" (formula "68"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_geqRight" (formula "69"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_44"))
                                          (rule "simplifySelectOfCreate" (formula "3"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "52")))
                                          (rule "simplifySelectOfCreate" (formula "3"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "57")) (ifInst ""  (formula "10")))
                                          (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "46") (ifseqformula "56"))
                                          (rule "allLeft" (formula "28") (inst "t=i_43"))
                                          (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "28") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "28"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0"))
                                          (rule "add_zero_right" (formula "1") (term "0"))
                                          (rule "leq_literals" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "67") (inst "sk=i_42"))
                                       (rule "orRight" (formula "67"))
                                       (rule "orRight" (formula "67"))
                                       (rule "notRight" (formula "69"))
                                       (rule "inEqSimp_geqRight" (formula "69"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_leqRight" (formula "69"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_43"))
                                       (rule "simplifySelectOfCreate" (formula "3"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "52")))
                                       (rule "simplifySelectOfCreate" (formula "3"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "58")) (ifInst ""  (formula "13")))
                                       (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "46") (ifseqformula "57"))
                                       (rule "allLeft" (formula "29") (inst "t=i_42"))
                                       (rule "replace_known_left" (formula "29") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "29") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "inEqSimp_contradInEq1" (formula "29") (ifseqformula "2"))
                                       (rule "andLeft" (formula "29"))
                                       (rule "inEqSimp_homoInEq1" (formula "29"))
                                       (rule "polySimp_pullOutFactor1b" (formula "29") (term "0"))
                                       (rule "add_literals" (formula "29") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "29") (term "1,0"))
                                       (rule "add_zero_right" (formula "29") (term "0"))
                                       (rule "leq_literals" (formula "29"))
                                       (rule "closeFalse" (formula "29"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "67") (inst "sk=f_7"))
                                    (rule "allRight" (formula "67") (inst "sk=o_7"))
                                    (rule "orRight" (formula "67"))
                                    (rule "pullOutSelect" (formula "68") (term "0") (inst "selectSK=f_7_0"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "69"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_7_1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_7_2"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_7_3"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_7_4"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_7_5"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "54"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_7_6"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "73"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_7_7"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "75")))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "commute_and" (formula "7") (term "0,0"))
                                    (rule "commute_and" (formula "6") (term "0,0"))
                                    (rule "commute_and" (formula "5") (term "0,0"))
                                    (rule "commute_and" (formula "4") (term "0,0"))
                                    (rule "commute_and" (formula "3") (term "0,0"))
                                    (rule "commute_and" (formula "2") (term "0,0"))
                                    (rule "commute_and" (formula "1") (term "0,0"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch " f_7 = java.lang.Object::<created> ∧ o_7 = strPool(\"Wrong election ID\") TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "1")))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "applyEq" (formula "7") (term "0,0,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "7"))
                                       (rule "applyEqReverse" (formula "75") (term "1") (ifseqformula "7"))
                                       (rule "hideAuxiliaryEq" (formula "7"))
                                       (rule "applyEq" (formula "4") (term "0,0,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "applyEq" (formula "73") (term "2,0") (ifseqformula "1"))
                                       (rule "narrowSelectType" (formula "73") (term "0") (ifseqformula "48"))
                                       (rule "eqSymm" (formula "73"))
                                       (rule "applyEq" (formula "5") (term "0,1,0,0") (ifseqformula "2"))
                                       (rule "eqSymm" (formula "5") (term "1,0,0"))
                                       (rule "sortsDisjointModuloNull" (formula "5") (term "1,0,0"))
                                       (rule "eqSymm" (formula "5") (term "1,1,0,0"))
                                       (rule "replace_known_right" (formula "5") (term "0,1,0,0") (ifseqformula "53"))
                                       (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "71")))
                                       (rule "applyEqReverse" (formula "73") (term "0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "applyEq" (formula "4") (term "0,0,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "72") (term "0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "2"))
                                       (rule "eqSymm" (formula "3") (term "1,0,0"))
                                       (rule "sortsDisjointModuloNull" (formula "3") (term "1,0,0"))
                                       (rule "eqSymm" (formula "3") (term "1,1,0,0"))
                                       (rule "replace_known_right" (formula "3") (term "0,1,0,0") (ifseqformula "51"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")))
                                       (rule "applyEqReverse" (formula "71") (term "0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "eqSymm" (formula "70"))
                                       (rule "replace_known_right" (formula "69") (term "0,1") (ifseqformula "70"))
                                       (builtin "One Step Simplification" (formula "69"))
                                       (rule "notRight" (formula "69"))
                                       (rule "applyEq" (formula "70") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                       (rule "eqSymm" (formula "1"))
                                       (rule "close" (formula "69") (ifseqformula "1"))
                                    )
                                    (branch " f_7 = java.lang.Object::<created> ∧ o_7 = strPool(\"Wrong election ID\") FALSE"
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch "f_7 = java.lang.Object::<created> ∧ o_7 = m_7 TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "replace_known_left" (formula "52") (term "0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "52"))
                                          (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "applyEqReverse" (formula "76") (term "1") (ifseqformula "7"))
                                          (rule "hideAuxiliaryEq" (formula "7"))
                                          (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "75") (term "1") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "applyEq" (formula "74") (term "1,0") (ifseqformula "2"))
                                          (rule "applyEqRigid" (formula "74") (term "2,0") (ifseqformula "1"))
                                          (rule "narrowSelectType" (formula "74") (term "0") (ifseqformula "48"))
                                          (rule "eqSymm" (formula "74"))
                                          (rule "applyEq" (formula "73") (term "1,0,0,1") (ifseqformula "2"))
                                          (rule "replace_known_right" (formula "73") (term "0,1") (ifseqformula "52"))
                                          (builtin "One Step Simplification" (formula "73"))
                                          (rule "notRight" (formula "73"))
                                          (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEq" (formula "50") (term "0") (ifseqformula "3"))
                                          (rule "sortsDisjointModuloNull" (formula "50"))
                                          (rule "eqSymm" (formula "50") (term "1"))
                                          (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "72"))
                                          (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "54")))
                                          (rule "false_right" (formula "50"))
                                          (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "72") (term "0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "71") (term "0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "eqSymm" (formula "70"))
                                          (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "3"))
                                          (rule "close" (formula "51") (ifseqformula "3"))
                                       )
                                       (branch "f_7 = java.lang.Object::<created> ∧ o_7 = m_7 FALSE"
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch "f_7 = Throwable::$cause ∧ o_7 = m_7 TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "2")))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "50"))
                                             (rule "replace_known_right" (formula "51") (term "0") (ifseqformula "50"))
                                             (builtin "One Step Simplification" (formula "51"))
                                             (rule "false_right" (formula "51"))
                                             (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "73") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "72") (term "1") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "applyEqRigid" (formula "71") (term "2,0") (ifseqformula "1"))
                                             (rule "narrowSelectType" (formula "71") (term "0") (ifseqformula "45"))
                                             (rule "applyEq" (formula "70") (term "0,0,0") (ifseqformula "2"))
                                             (rule "replace_known_right" (formula "70") (term "0,0") (ifseqformula "51"))
                                             (builtin "One Step Simplification" (formula "70"))
                                             (rule "notRight" (formula "70"))
                                             (rule "applyEq" (formula "48") (term "0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "48"))
                                             (rule "false_right" (formula "48"))
                                             (rule "applyEq" (formula "70") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "close" (formula "49") (ifseqformula "1"))
                                          )
                                          (branch "f_7 = Throwable::$cause ∧ o_7 = m_7 FALSE"
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "cut_direct" (formula "62") (term "0"))
                                             (branch "CUT: mFirst(seqDef{int u;}(0, payload.length, payload.arr(u)@heapAfter_getPayLoad)).length = self.electionID.length TRUE"
                                                (builtin "One Step Simplification" (formula "63"))
                                                (rule "allRight" (formula "63") (inst "sk=iv_0"))
                                                (rule "orRight" (formula "63"))
                                                (rule "orRight" (formula "63"))
                                                (rule "inEqSimp_leqRight" (formula "63"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "replace_known_left" (formula "65") (term "0,0,1") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "65"))
                                                (rule "inEqSimp_geqRight" (formula "64"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_homoInEq0" (formula "65") (term "0,1"))
                                                (rule "polySimp_addComm1" (formula "65") (term "0,0,1"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "65") (term "1,0,1"))
                                                (rule "polySimp_rightDist" (formula "65") (term "1,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,1"))
                                                (rule "mul_literals" (formula "65") (term "0,1,0,1"))
                                                (rule "polySimp_elimOne" (formula "65") (term "1,1,0,1"))
                                                (rule "replace_known_left" (formula "65") (term "0,1") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "65"))
                                                (rule "pullOutSelect" (formula "65") (term "1") (inst "selectSK=arr_42"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")) (ifInst ""  (formula "22")))
                                                (rule "applyEqReverse" (formula "66") (term "1") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "narrowSelectArrayType" (formula "65") (term "1") (ifseqformula "50") (ifseqformula "71"))
                                                (rule "ifthenelse_split" (formula "4") (term "0"))
                                                (branch "f_7 = Throwable::$message ∧ o_7 = m_7 TRUE"
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "54"))
                                                   (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "53"))
                                                   (rule "replace_known_right" (formula "55") (term "0") (ifseqformula "54"))
                                                   (builtin "One Step Simplification" (formula "55"))
                                                   (rule "false_right" (formula "55"))
                                                   (rule "applyEq" (formula "8") (term "0,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "applyEqReverse" (formula "78") (term "1") (ifseqformula "8"))
                                                   (rule "hideAuxiliaryEq" (formula "8"))
                                                   (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "76") (term "1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEq" (formula "75") (term "1,0") (ifseqformula "5"))
                                                   (rule "applyEq" (formula "74") (term "1,0,0,1") (ifseqformula "5"))
                                                   (rule "replace_known_right" (formula "74") (term "0,1") (ifseqformula "53"))
                                                   (builtin "One Step Simplification" (formula "74"))
                                                   (rule "notRight" (formula "74"))
                                                   (rule "applyEq" (formula "52") (term "0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "52"))
                                                   (rule "false_right" (formula "52"))
                                                   (rule "applyEq" (formula "74") (term "2,0") (ifseqformula "5"))
                                                   (rule "narrowSelectType" (formula "74") (term "0") (ifseqformula "49"))
                                                   (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "51"))
                                                   (rule "false_right" (formula "51"))
                                                   (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "1"))
                                                   (rule "eqSymm" (formula "6"))
                                                   (rule "close" (formula "54") (ifseqformula "6"))
                                                )
                                                (branch "f_7 = Throwable::$message ∧ o_7 = m_7 FALSE"
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "cut_direct" (formula "77") (term "0,0"))
                                                   (branch "CUT: o_7 = null TRUE"
                                                      (builtin "One Step Simplification" (formula "78"))
                                                      (rule "false_right" (formula "78"))
                                                      (rule "applyEqRigid" (formula "55") (term "0,1") (ifseqformula "1"))
                                                      (rule "replace_known_right" (formula "55") (term "1") (ifseqformula "77"))
                                                      (builtin "One Step Simplification" (formula "55"))
                                                      (rule "false_right" (formula "55"))
                                                      (rule "applyEq" (formula "77") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEqRigid" (formula "6") (term "0,1,0,0") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "6") (term "1,0,0"))
                                                      (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "58"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "applyEq" (formula "51") (term "0,1") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "51") (term "1"))
                                                      (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "57"))
                                                      (builtin "One Step Simplification" (formula "51"))
                                                      (rule "false_right" (formula "51"))
                                                      (rule "applyEq" (formula "5") (term "1,2,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "51") (term "0,1") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "51") (term "1"))
                                                      (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "56"))
                                                      (builtin "One Step Simplification" (formula "51"))
                                                      (rule "false_right" (formula "51"))
                                                      (rule "applyEq" (formula "5") (term "0,1,0,0") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "5") (term "1,0,0"))
                                                      (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "55"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "applyEqRigid" (formula "5") (term "0,1,0,0") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "5") (term "1,0,0"))
                                                      (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "54"))
                                                      (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "73")))
                                                      (rule "closeFalse" (formula "5"))
                                                   )
                                                   (branch "CUT: o_7 = null FALSE"
                                                      (builtin "One Step Simplification" (formula "78"))
                                                      (rule "notRight" (formula "78"))
                                                      (rule "cut_direct" (formula "54") (term "1"))
                                                      (branch "CUT: o_7 = m_7 TRUE"
                                                         (builtin "One Step Simplification" (formula "55"))
                                                         (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "7"))
                                                         (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "8"))
                                                         (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "replace_known_right" (formula "56") (term "0") (ifseqformula "55"))
                                                         (builtin "One Step Simplification" (formula "56"))
                                                         (rule "false_right" (formula "56"))
                                                         (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "53"))
                                                         (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "54"))
                                                         (rule "applyEq" (formula "6") (term "1,2,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "78") (term "0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                         (rule "close" (formula "57") (ifseqformula "2"))
                                                      )
                                                      (branch "CUT: o_7 = m_7 FALSE"
                                                         (builtin "One Step Simplification" (formula "55"))
                                                         (rule "false_right" (formula "55"))
                                                         (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "54"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "53"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "52"))
                                                         (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "77")))
                                                         (rule "closeFalse" (formula "5"))
                                                      )
                                                   )
                                                )
                                             )
                                             (branch "CUT: mFirst(seqDef{int u;}(0, payload.length, payload.arr(u)@heapAfter_getPayLoad)).length = self.electionID.length FALSE"
                                                (builtin "One Step Simplification" (formula "63"))
                                                (rule "false_right" (formula "63"))
                                                (rule "ifthenelse_split" (formula "1") (term "0"))
                                                (branch "f_7 = Throwable::$message ∧ o_7 = m_7 TRUE"
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "50"))
                                                   (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "51"))
                                                   (rule "replace_known_right" (formula "52") (term "0") (ifseqformula "51"))
                                                   (builtin "One Step Simplification" (formula "52"))
                                                   (rule "false_right" (formula "52"))
                                                   (rule "applyEqRigid" (formula "50") (term "0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "50"))
                                                   (rule "false_right" (formula "50"))
                                                   (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "74") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "applyEqRigid" (formula "72") (term "2,0") (ifseqformula "1"))
                                                   (rule "narrowSelectType" (formula "72") (term "0") (ifseqformula "46"))
                                                   (rule "eqSymm" (formula "72"))
                                                   (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "48"))
                                                   (rule "false_right" (formula "48"))
                                                   (rule "applyEq" (formula "70") (term "0,0,0") (ifseqformula "2"))
                                                   (rule "replace_known_right" (formula "70") (term "0,0") (ifseqformula "51"))
                                                   (builtin "One Step Simplification" (formula "70"))
                                                   (rule "notRight" (formula "70"))
                                                   (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "71") (term "0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "eqSymm" (formula "70"))
                                                   (rule "applyEq" (formula "70") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                   (rule "close" (formula "49") (ifseqformula "1"))
                                                )
                                                (branch "f_7 = Throwable::$message ∧ o_7 = m_7 FALSE"
                                                   (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "cut_direct" (formula "74") (term "0,0"))
                                                   (branch "CUT: o_7 = null TRUE"
                                                      (builtin "One Step Simplification" (formula "75"))
                                                      (rule "false_right" (formula "75"))
                                                      (rule "applyEqRigid" (formula "50") (term "0,1") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "50") (term "1"))
                                                      (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "56"))
                                                      (builtin "One Step Simplification" (formula "50"))
                                                      (rule "false_right" (formula "50"))
                                                      (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "2") (term "1,0,0"))
                                                      (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "55"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "2") (term "1,0,0"))
                                                      (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "54"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "applyEqRigid" (formula "49") (term "0,1") (ifseqformula "1"))
                                                      (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "71"))
                                                      (builtin "One Step Simplification" (formula "49"))
                                                      (rule "false_right" (formula "49"))
                                                      (rule "applyEqRigid" (formula "48") (term "0,1") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "48") (term "1"))
                                                      (rule "replace_known_right" (formula "48") (term "1") (ifseqformula "52"))
                                                      (builtin "One Step Simplification" (formula "48"))
                                                      (rule "false_right" (formula "48"))
                                                      (rule "applyEqRigid" (formula "47") (term "0,1") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "47") (term "1"))
                                                      (rule "replace_known_right" (formula "47") (term "1") (ifseqformula "51"))
                                                      (builtin "One Step Simplification" (formula "47"))
                                                      (rule "false_right" (formula "47"))
                                                      (rule "applyEq" (formula "69") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "2") (term "1,0,0"))
                                                      (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "50"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "eqSymm" (formula "68"))
                                                      (rule "applyEqRigid" (formula "68") (term "1,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "68"))
                                                      (rule "closeTrue" (formula "68"))
                                                   )
                                                   (branch "CUT: o_7 = null FALSE"
                                                      (builtin "One Step Simplification" (formula "75"))
                                                      (rule "notRight" (formula "75"))
                                                      (rule "ifthenelse_split" (formula "2") (term "0"))
                                                      (branch "f_7 = MalformedData::$errCode ∧ o_7 = m_7 TRUE"
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "52"))
                                                         (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "50"))
                                                         (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "51"))
                                                         (rule "replace_known_right" (formula "53") (term "0") (ifseqformula "52"))
                                                         (builtin "One Step Simplification" (formula "53"))
                                                         (rule "false_right" (formula "53"))
                                                         (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "49"))
                                                         (rule "false_right" (formula "49"))
                                                         (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "applyEqReverse" (formula "74") (term "1") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                         (rule "close" (formula "51") (ifseqformula "1"))
                                                      )
                                                      (branch "f_7 = MalformedData::$errCode ∧ o_7 = m_7 FALSE"
                                                         (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                         (rule "hideAuxiliaryEq" (formula "2"))
                                                         (rule "ifthenelse_split" (formula "2") (term "0"))
                                                         (branch "f_7 = MalformedData::$description ∧ o_7 = m_7 TRUE"
                                                            (rule "andLeft" (formula "2"))
                                                            (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "52"))
                                                            (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "49"))
                                                            (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "50"))
                                                            (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "51"))
                                                            (rule "replace_known_right" (formula "53") (term "0") (ifseqformula "52"))
                                                            (builtin "One Step Simplification" (formula "53"))
                                                            (rule "false_right" (formula "53"))
                                                            (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "applyEqReverse" (formula "76") (term "1") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "51"))
                                                            (rule "false_right" (formula "51"))
                                                            (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "49"))
                                                            (rule "false_right" (formula "49"))
                                                            (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "49"))
                                                            (rule "false_right" (formula "49"))
                                                            (rule "applyEq" (formula "48") (term "0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "48"))
                                                            (rule "false_right" (formula "48"))
                                                            (rule "applyEqRigid" (formula "71") (term "2,0") (ifseqformula "2"))
                                                            (rule "narrowSelectType" (formula "71") (term "0") (ifseqformula "46"))
                                                            (rule "applyEq" (formula "70") (term "0") (ifseqformula "3"))
                                                            (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                            (rule "close" (formula "49") (ifseqformula "1"))
                                                         )
                                                         (branch "f_7 = MalformedData::$description ∧ o_7 = m_7 FALSE"
                                                            (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                            (rule "hideAuxiliaryEq" (formula "2"))
                                                            (rule "ifthenelse_split" (formula "2") (term "0"))
                                                            (branch "f_7 = java.lang.Object::<initialized> ∧ o_7 = m_7 TRUE"
                                                               (rule "andLeft" (formula "2"))
                                                               (rule "applyEqReverse" (formula "78") (term "1") (ifseqformula "4"))
                                                               (rule "hideAuxiliaryEq" (formula "4"))
                                                               (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "52"))
                                                               (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "50"))
                                                               (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "48"))
                                                               (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "51"))
                                                               (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "49"))
                                                               (rule "replace_known_right" (formula "53") (term "0") (ifseqformula "52"))
                                                               (builtin "One Step Simplification" (formula "53"))
                                                               (rule "false_right" (formula "53"))
                                                               (rule "applyEq" (formula "50") (term "0") (ifseqformula "2"))
                                                               (builtin "One Step Simplification" (formula "50"))
                                                               (rule "false_right" (formula "50"))
                                                               (rule "applyEq" (formula "48") (term "0") (ifseqformula "2"))
                                                               (builtin "One Step Simplification" (formula "48"))
                                                               (rule "false_right" (formula "48"))
                                                               (rule "applyEq" (formula "49") (term "0") (ifseqformula "2"))
                                                               (builtin "One Step Simplification" (formula "49"))
                                                               (rule "false_right" (formula "49"))
                                                               (rule "applyEq" (formula "73") (term "1,0") (ifseqformula "3"))
                                                               (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "2"))
                                                               (builtin "One Step Simplification" (formula "48"))
                                                               (rule "false_right" (formula "48"))
                                                               (rule "applyEq" (formula "71") (term "0") (ifseqformula "3"))
                                                               (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "2"))
                                                               (builtin "One Step Simplification" (formula "48"))
                                                               (rule "false_right" (formula "48"))
                                                               (rule "applyEqRigid" (formula "70") (term "2,0") (ifseqformula "2"))
                                                               (rule "narrowSelectType" (formula "70") (term "0") (ifseqformula "46"))
                                                               (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                               (rule "close" (formula "49") (ifseqformula "1"))
                                                            )
                                                            (branch "f_7 = java.lang.Object::<initialized> ∧ o_7 = m_7 FALSE"
                                                               (rule "close" (formula "77") (ifseqformula "2"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                           (branch "self.electionID.length ≥ 1 FALSE"
                              (rule "replace_known_right" (formula "55") (term "0,1,1,0,0,1") (ifseqformula "54"))
                              (builtin "One Step Simplification" (formula "55"))
                              (rule "inEqSimp_geqRight" (formula "54"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_antiSymm" (formula "15") (ifseqformula "1"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "15"))
                              (rule "leq_literals" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "applyEq" (formula "15") (term "0") (ifseqformula "14"))
                              (rule "qeq_literals" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "applyEq" (formula "54") (term "1,1,1,0,1,1,0,1") (ifseqformula "14"))
                              (rule "add_literals" (formula "54") (term "1,1,0,1,1,0,1"))
                              (rule "inEqSimp_or_tautInEq0" (formula "54") (term "0,0,1"))
                              (rule "add_zero_right" (formula "54") (term "1,1,0,0,1"))
                              (rule "qeq_literals" (formula "54") (term "1,0,0,1"))
                              (builtin "One Step Simplification" (formula "54"))
                              (rule "inEqSimp_strengthen1" (formula "15") (ifseqformula "54"))
                              (rule "add_literals" (formula "15") (term "1"))
                              (rule "inEqSimp_contradEq7" (formula "54") (ifseqformula "15"))
                              (rule "times_zero_1" (formula "54") (term "1,0,0"))
                              (rule "add_literals" (formula "54") (term "0,0"))
                              (rule "leq_literals" (formula "54") (term "0"))
                              (builtin "One Step Simplification" (formula "54"))
                              (rule "false_right" (formula "54"))
                              (rule "cut_direct" (formula "30") (term "0"))
                              (branch "CUT: result_0.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "true_left" (formula "31"))
                                 (rule "andRight" (formula "65"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "65"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "65"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "65"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "65"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "65"))
                                                (branch "Case 1"
                                                   (rule "allRight" (formula "65") (inst "sk=i_41"))
                                                   (rule "orRight" (formula "65"))
                                                   (rule "orRight" (formula "65"))
                                                   (rule "notRight" (formula "67"))
                                                   (rule "inEqSimp_geqRight" (formula "67"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_leqRight" (formula "67"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_41"))
                                                   (rule "simplifySelectOfCreate" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "51")))
                                                   (rule "simplifySelectOfCreate" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "52")) (ifInst ""  (formula "6")))
                                                   (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "46") (ifseqformula "51"))
                                                   (rule "allLeft" (formula "24") (inst "t=i_41"))
                                                   (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                                   (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "24") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "24"))
                                                   (rule "qeq_literals" (formula "1") (term "0"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                                (branch "Case 2"
                                                   (rule "allRight" (formula "65") (inst "sk=i_40"))
                                                   (rule "orRight" (formula "65"))
                                                   (rule "orRight" (formula "65"))
                                                   (rule "notRight" (formula "67"))
                                                   (rule "inEqSimp_geqRight" (formula "67"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_leqRight" (formula "67"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_40"))
                                                   (rule "simplifySelectOfCreate" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "51")))
                                                   (rule "simplifySelectOfCreate" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "53")) (ifInst ""  (formula "7")))
                                                   (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "46") (ifseqformula "52"))
                                                   (rule "allLeft" (formula "25") (inst "t=i_40"))
                                                   (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "25"))
                                                   (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "1"))
                                                   (rule "qeq_literals" (formula "25") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "25"))
                                                   (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "25"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0"))
                                                   (rule "add_zero_right" (formula "2") (term "0"))
                                                   (rule "leq_literals" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "65") (inst "sk=i_39"))
                                                (rule "orRight" (formula "65"))
                                                (rule "orRight" (formula "65"))
                                                (rule "notRight" (formula "67"))
                                                (rule "inEqSimp_leqRight" (formula "66"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_geqRight" (formula "67"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_39"))
                                                (rule "simplifySelectOfCreate" (formula "3"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "51")))
                                                (rule "simplifySelectOfCreate" (formula "3"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "54")) (ifInst ""  (formula "8")))
                                                (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "46") (ifseqformula "53"))
                                                (rule "allLeft" (formula "26") (inst "t=i_39"))
                                                (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "26") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "inEqSimp_contradInEq1" (formula "26") (ifseqformula "1"))
                                                (rule "andLeft" (formula "26"))
                                                (rule "inEqSimp_homoInEq1" (formula "26"))
                                                (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                                (rule "add_literals" (formula "26") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "26") (term "1,0"))
                                                (rule "add_zero_right" (formula "26") (term "0"))
                                                (rule "leq_literals" (formula "26"))
                                                (rule "closeFalse" (formula "26"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "allRight" (formula "65") (inst "sk=i_38"))
                                             (rule "orRight" (formula "65"))
                                             (rule "orRight" (formula "65"))
                                             (rule "notRight" (formula "67"))
                                             (rule "inEqSimp_geqRight" (formula "67"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_leqRight" (formula "67"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_38"))
                                             (rule "simplifySelectOfCreate" (formula "3"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "51")))
                                             (rule "simplifySelectOfCreate" (formula "3"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "55")) (ifInst ""  (formula "10")))
                                             (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "46") (ifseqformula "54"))
                                             (rule "allLeft" (formula "27") (inst "t=i_38"))
                                             (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "27") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "27"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "2"))
                                             (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0"))
                                             (rule "add_zero_right" (formula "2") (term "0"))
                                             (rule "leq_literals" (formula "2"))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "allRight" (formula "65") (inst "sk=i_37"))
                                          (rule "orRight" (formula "65"))
                                          (rule "notRight" (formula "66"))
                                          (rule "orRight" (formula "66"))
                                          (rule "inEqSimp_leqRight" (formula "66"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_geqRight" (formula "67"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_37"))
                                          (rule "simplifySelectOfCreate" (formula "3"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "51")))
                                          (rule "simplifySelectOfCreate" (formula "3"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "56")) (ifInst ""  (formula "9")))
                                          (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "46") (ifseqformula "55"))
                                          (rule "allLeft" (formula "28") (inst "t=i_37"))
                                          (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                                          (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "28") (term "0,0,1"))
                                          (rule "leq_literals" (formula "28") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "28"))
                                          (rule "qeq_literals" (formula "2") (term "0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "65") (inst "sk=i_36"))
                                       (rule "orRight" (formula "65"))
                                       (rule "orRight" (formula "65"))
                                       (rule "notRight" (formula "67"))
                                       (rule "inEqSimp_leqRight" (formula "66"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_geqRight" (formula "67"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_36"))
                                       (rule "simplifySelectOfCreate" (formula "3"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "51")))
                                       (rule "simplifySelectOfCreate" (formula "3"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "57")) (ifInst ""  (formula "12")))
                                       (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "46") (ifseqformula "56"))
                                       (rule "allLeft" (formula "29") (inst "t=i_36"))
                                       (rule "replace_known_left" (formula "29") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "29") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "29"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0"))
                                       (rule "add_zero_right" (formula "1") (term "0"))
                                       (rule "leq_literals" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "65") (inst "sk=f_6"))
                                    (rule "allRight" (formula "65") (inst "sk=o_6"))
                                    (rule "orRight" (formula "65"))
                                    (rule "pullOutSelect" (formula "66") (term "0") (inst "selectSK=f_6_0"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "67"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_6_1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_6_2"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_6_3"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_6_4"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_6_5"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "53"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_6_6"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "71"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_6_7"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "73")))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "commute_and" (formula "7") (term "0,0"))
                                    (rule "commute_and" (formula "6") (term "0,0"))
                                    (rule "commute_and" (formula "5") (term "0,0"))
                                    (rule "commute_and" (formula "4") (term "0,0"))
                                    (rule "commute_and" (formula "3") (term "0,0"))
                                    (rule "commute_and" (formula "2") (term "0,0"))
                                    (rule "commute_and" (formula "1") (term "0,0"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch " f_6 = java.lang.Object::<created> ∧ o_6 = strPool(\"Wrong election ID\") TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "1")))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "applyEqRigid" (formula "5") (term "0,0,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "applyEqRigid" (formula "5") (term "0,1,0,0") (ifseqformula "2"))
                                       (rule "eqSymm" (formula "5") (term "1,0,0"))
                                       (rule "sortsDisjointModuloNull" (formula "5") (term "1,0,0"))
                                       (rule "eqSymm" (formula "5") (term "1,1,0,0"))
                                       (rule "replace_known_right" (formula "5") (term "1,1,0,0") (ifseqformula "70"))
                                       (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "53")))
                                       (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "applyEqRigid" (formula "71") (term "1,0") (ifseqformula "2"))
                                       (rule "applyEqRigid" (formula "71") (term "2,0") (ifseqformula "1"))
                                       (rule "narrowSelectType" (formula "71") (term "0") (ifseqformula "48"))
                                       (rule "eqSymm" (formula "71"))
                                       (rule "applyEq" (formula "5") (term "0,0,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqReverse" (formula "71") (term "0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "2"))
                                       (rule "eqSymm" (formula "3") (term "1,0,0"))
                                       (rule "sortsDisjointModuloNull" (formula "3") (term "1,0,0"))
                                       (rule "eqSymm" (formula "3") (term "1,1,0,0"))
                                       (rule "replace_known_right" (formula "3") (term "1,1,0,0") (ifseqformula "68"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "51")))
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "applyEq" (formula "68") (term "0,0,0") (ifseqformula "2"))
                                       (rule "eqSymm" (formula "68") (term "0,0"))
                                       (rule "replace_known_right" (formula "68") (term "0,0") (ifseqformula "67"))
                                       (builtin "One Step Simplification" (formula "68"))
                                       (rule "notRight" (formula "68"))
                                       (rule "applyEq" (formula "4") (term "0,0,0,0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "69") (term "0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "eqSymm" (formula "68"))
                                       (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                       (rule "close" (formula "68") (ifseqformula "1"))
                                    )
                                    (branch " f_6 = java.lang.Object::<created> ∧ o_6 = strPool(\"Wrong election ID\") FALSE"
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch "f_6 = java.lang.Object::<created> ∧ o_6 = m_7 TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "replace_known_left" (formula "52") (term "0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "52"))
                                          (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "applyEq" (formula "73") (term "1,0") (ifseqformula "2"))
                                          (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "73") (term "1") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "71") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEq" (formula "48") (term "0") (ifseqformula "2"))
                                          (rule "sortsDisjointModuloNull" (formula "48"))
                                          (rule "eqSymm" (formula "48") (term "1"))
                                          (rule "replace_known_right" (formula "48") (term "1") (ifseqformula "68"))
                                          (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "51")))
                                          (rule "false_right" (formula "48"))
                                          (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "applyEq" (formula "67") (term "0,0,0") (ifseqformula "2"))
                                          (rule "replace_known_right" (formula "67") (term "0,0") (ifseqformula "49"))
                                          (builtin "One Step Simplification" (formula "67"))
                                          (rule "notRight" (formula "67"))
                                          (rule "applyEq" (formula "68") (term "2,0") (ifseqformula "2"))
                                          (rule "narrowSelectType" (formula "68") (term "0") (ifseqformula "46"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                          (rule "close" (formula "48") (ifseqformula "1"))
                                       )
                                       (branch "f_6 = java.lang.Object::<created> ∧ o_6 = m_7 FALSE"
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch "f_6 = Throwable::$cause ∧ o_6 = m_7 TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "2")))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "50"))
                                             (rule "replace_known_right" (formula "51") (term "0") (ifseqformula "50"))
                                             (builtin "One Step Simplification" (formula "51"))
                                             (rule "false_right" (formula "51"))
                                             (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "71") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "70") (term "1") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "applyEqRigid" (formula "47") (term "0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "false_right" (formula "47"))
                                             (rule "applyEq" (formula "67") (term "0,0,0") (ifseqformula "2"))
                                             (rule "replace_known_right" (formula "67") (term "0,0") (ifseqformula "49"))
                                             (builtin "One Step Simplification" (formula "67"))
                                             (rule "notRight" (formula "67"))
                                             (rule "applyEq" (formula "68") (term "2,0") (ifseqformula "2"))
                                             (rule "narrowSelectType" (formula "68") (term "0") (ifseqformula "46"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "close" (formula "48") (ifseqformula "1"))
                                          )
                                          (branch "f_6 = Throwable::$cause ∧ o_6 = m_7 FALSE"
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_6 = Throwable::$message ∧ o_6 = m_7 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "51"))
                                                (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "50"))
                                                (rule "replace_known_right" (formula "52") (term "0") (ifseqformula "51"))
                                                (builtin "One Step Simplification" (formula "52"))
                                                (rule "false_right" (formula "52"))
                                                (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "71") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "applyEq" (formula "70") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "70") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "70") (term "0") (ifseqformula "45"))
                                                (rule "applyEq" (formula "69") (term "1,0,0,1") (ifseqformula "2"))
                                                (rule "replace_known_right" (formula "69") (term "0,1") (ifseqformula "49"))
                                                (builtin "One Step Simplification" (formula "69"))
                                                (rule "notRight" (formula "69"))
                                                (rule "applyEq" (formula "48") (term "0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "3"))
                                                (rule "close" (formula "50") (ifseqformula "3"))
                                             )
                                             (branch "f_6 = Throwable::$message ∧ o_6 = m_7 FALSE"
                                                (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "ifthenelse_split" (formula "1") (term "0"))
                                                (branch "f_6 = MalformedData::$errCode ∧ o_6 = m_7 TRUE"
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "49"))
                                                   (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "51"))
                                                   (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "50"))
                                                   (rule "replace_known_right" (formula "52") (term "0") (ifseqformula "51"))
                                                   (builtin "One Step Simplification" (formula "52"))
                                                   (rule "false_right" (formula "52"))
                                                   (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "73") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEq" (formula "48") (term "0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "48"))
                                                   (rule "false_right" (formula "48"))
                                                   (rule "applyEq" (formula "49") (term "0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "49"))
                                                   (rule "false_right" (formula "49"))
                                                   (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "applyEqReverse" (formula "70") (term "1") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "applyEq" (formula "68") (term "1,0,0,1") (ifseqformula "2"))
                                                   (rule "replace_known_right" (formula "68") (term "0,1") (ifseqformula "48"))
                                                   (builtin "One Step Simplification" (formula "68"))
                                                   (rule "notRight" (formula "68"))
                                                   (rule "applyEq" (formula "69") (term "2,0") (ifseqformula "2"))
                                                   (rule "narrowSelectType" (formula "69") (term "0") (ifseqformula "46"))
                                                   (rule "applyEq" (formula "48") (term "0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "48"))
                                                   (rule "false_right" (formula "48"))
                                                   (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                                   (rule "eqSymm" (formula "3"))
                                                   (rule "close" (formula "50") (ifseqformula "3"))
                                                )
                                                (branch "f_6 = MalformedData::$errCode ∧ o_6 = m_7 FALSE"
                                                   (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "cut_direct" (formula "72") (term "0,0"))
                                                   (branch "CUT: o_6 = null TRUE"
                                                      (builtin "One Step Simplification" (formula "73"))
                                                      (rule "false_right" (formula "73"))
                                                      (rule "applyEqRigid" (formula "50") (term "0,1") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "50") (term "1"))
                                                      (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "55"))
                                                      (builtin "One Step Simplification" (formula "50"))
                                                      (rule "false_right" (formula "50"))
                                                      (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "48") (term "0,1") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "48") (term "1"))
                                                      (rule "replace_known_right" (formula "48") (term "1") (ifseqformula "54"))
                                                      (builtin "One Step Simplification" (formula "48"))
                                                      (rule "false_right" (formula "48"))
                                                      (rule "applyEqRigid" (formula "71") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "49") (term "0,1") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "49") (term "1"))
                                                      (rule "replace_known_right" (formula "49") (term "1") (ifseqformula "53"))
                                                      (builtin "One Step Simplification" (formula "49"))
                                                      (rule "false_right" (formula "49"))
                                                      (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "2") (term "1,0,0"))
                                                      (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "52"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "applyEqRigid" (formula "48") (term "0,1") (ifseqformula "1"))
                                                      (rule "replace_known_right" (formula "48") (term "1") (ifseqformula "68"))
                                                      (builtin "One Step Simplification" (formula "48"))
                                                      (rule "false_right" (formula "48"))
                                                      (rule "applyEq" (formula "47") (term "0,1") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "47") (term "1"))
                                                      (rule "replace_known_right" (formula "47") (term "1") (ifseqformula "50"))
                                                      (builtin "One Step Simplification" (formula "47"))
                                                      (rule "false_right" (formula "47"))
                                                      (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "2") (term "1,0,0"))
                                                      (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "49"))
                                                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "67")))
                                                      (rule "closeFalse" (formula "2"))
                                                   )
                                                   (branch "CUT: o_6 = null FALSE"
                                                      (builtin "One Step Simplification" (formula "73"))
                                                      (rule "notRight" (formula "73"))
                                                      (rule "ifthenelse_split" (formula "2") (term "0"))
                                                      (branch "f_6 = MalformedData::$description ∧ o_6 = m_7 TRUE"
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "50"))
                                                         (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "51"))
                                                         (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "52"))
                                                         (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "49"))
                                                         (rule "replace_known_right" (formula "53") (term "0") (ifseqformula "52"))
                                                         (builtin "One Step Simplification" (formula "53"))
                                                         (rule "false_right" (formula "53"))
                                                         (rule "applyEq" (formula "51") (term "0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "51"))
                                                         (rule "false_right" (formula "51"))
                                                         (rule "applyEq" (formula "51") (term "0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "51"))
                                                         (rule "false_right" (formula "51"))
                                                         (rule "applyEqRigid" (formula "50") (term "0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "50"))
                                                         (rule "false_right" (formula "50"))
                                                         (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "applyEqReverse" (formula "71") (term "1") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "applyEq" (formula "48") (term "0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "48"))
                                                         (rule "false_right" (formula "48"))
                                                         (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                         (rule "close" (formula "48") (ifseqformula "1"))
                                                      )
                                                      (branch "f_6 = MalformedData::$description ∧ o_6 = m_7 FALSE"
                                                         (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                         (rule "hideAuxiliaryEq" (formula "2"))
                                                         (rule "ifthenelse_split" (formula "2") (term "0"))
                                                         (branch "f_6 = java.lang.Object::<initialized> ∧ o_6 = m_7 TRUE"
                                                            (rule "andLeft" (formula "2"))
                                                            (rule "applyEqReverse" (formula "76") (term "1") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "51"))
                                                            (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "49"))
                                                            (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "52"))
                                                            (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "50"))
                                                            (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "48"))
                                                            (rule "replace_known_right" (formula "53") (term "0") (ifseqformula "52"))
                                                            (builtin "One Step Simplification" (formula "53"))
                                                            (rule "false_right" (formula "53"))
                                                            (rule "applyEq" (formula "73") (term "0") (ifseqformula "3"))
                                                            (rule "applyEq" (formula "73") (term "2,0") (ifseqformula "2"))
                                                            (rule "narrowSelectType" (formula "73") (term "0") (ifseqformula "46"))
                                                            (rule "applyEq" (formula "51") (term "0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "51"))
                                                            (rule "false_right" (formula "51"))
                                                            (rule "applyEq" (formula "49") (term "0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "49"))
                                                            (rule "false_right" (formula "49"))
                                                            (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "49"))
                                                            (rule "false_right" (formula "49"))
                                                            (rule "applyEq" (formula "48") (term "0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "48"))
                                                            (rule "false_right" (formula "48"))
                                                            (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "48"))
                                                            (rule "false_right" (formula "48"))
                                                            (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                            (rule "close" (formula "48") (ifseqformula "1"))
                                                         )
                                                         (branch "f_6 = java.lang.Object::<initialized> ∧ o_6 = m_7 FALSE"
                                                            (rule "close" (formula "75") (ifseqformula "2"))
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "CUT: result_0.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "andRight" (formula "66"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "66"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "66"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "66"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "66"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "66"))
                                                (branch "Case 1"
                                                   (rule "allRight" (formula "66") (inst "sk=i_35"))
                                                   (rule "orRight" (formula "66"))
                                                   (rule "notRight" (formula "67"))
                                                   (rule "orRight" (formula "67"))
                                                   (rule "inEqSimp_geqRight" (formula "68"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_leqRight" (formula "68"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_35"))
                                                   (rule "simplifySelectOfCreate" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "52")))
                                                   (rule "simplifySelectOfCreate" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "53")) (ifInst ""  (formula "6")))
                                                   (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "46") (ifseqformula "52"))
                                                   (rule "allLeft" (formula "24") (inst "t=i_35"))
                                                   (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "1"))
                                                   (rule "qeq_literals" (formula "24") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "2"))
                                                   (rule "andLeft" (formula "24"))
                                                   (rule "inEqSimp_homoInEq1" (formula "24"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                                   (rule "add_literals" (formula "24") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "24") (term "1,0"))
                                                   (rule "add_zero_right" (formula "24") (term "0"))
                                                   (rule "leq_literals" (formula "24"))
                                                   (rule "closeFalse" (formula "24"))
                                                )
                                                (branch "Case 2"
                                                   (rule "allRight" (formula "66") (inst "sk=i_34"))
                                                   (rule "orRight" (formula "66"))
                                                   (rule "notRight" (formula "67"))
                                                   (rule "orRight" (formula "67"))
                                                   (rule "inEqSimp_geqRight" (formula "68"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_leqRight" (formula "68"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_34"))
                                                   (rule "simplifySelectOfCreate" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "52")))
                                                   (rule "simplifySelectOfCreate" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "54")) (ifInst ""  (formula "7")))
                                                   (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "46") (ifseqformula "53"))
                                                   (rule "allLeft" (formula "25") (inst "t=i_34"))
                                                   (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "25"))
                                                   (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                                   (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "25") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "25"))
                                                   (rule "inEqSimp_contradInEq1" (formula "25") (ifseqformula "1"))
                                                   (rule "qeq_literals" (formula "25") (term "0"))
                                                   (builtin "One Step Simplification" (formula "25"))
                                                   (rule "closeFalse" (formula "25"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "66") (inst "sk=i_33"))
                                                (rule "orRight" (formula "66"))
                                                (rule "notRight" (formula "67"))
                                                (rule "orRight" (formula "67"))
                                                (rule "inEqSimp_leqRight" (formula "67"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_geqRight" (formula "68"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_33"))
                                                (rule "simplifySelectOfCreate" (formula "3"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "52")))
                                                (rule "simplifySelectOfCreate" (formula "3"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "55")) (ifInst ""  (formula "8")))
                                                (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "46") (ifseqformula "54"))
                                                (rule "allLeft" (formula "26") (inst "t=i_33"))
                                                (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "26") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "inEqSimp_contradInEq1" (formula "26") (ifseqformula "1"))
                                                (rule "andLeft" (formula "26"))
                                                (rule "inEqSimp_homoInEq1" (formula "26"))
                                                (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                                (rule "add_literals" (formula "26") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "26") (term "1,0"))
                                                (rule "add_zero_right" (formula "26") (term "0"))
                                                (rule "leq_literals" (formula "26"))
                                                (rule "closeFalse" (formula "26"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "allRight" (formula "66") (inst "sk=i_32"))
                                             (rule "orRight" (formula "66"))
                                             (rule "notRight" (formula "67"))
                                             (rule "orRight" (formula "67"))
                                             (rule "inEqSimp_geqRight" (formula "68"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_leqRight" (formula "68"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_32"))
                                             (rule "simplifySelectOfCreate" (formula "3"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "52")))
                                             (rule "simplifySelectOfCreate" (formula "3"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "56")) (ifInst ""  (formula "10")))
                                             (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "46") (ifseqformula "55"))
                                             (rule "allLeft" (formula "27") (inst "t=i_32"))
                                             (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "27") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "2"))
                                             (rule "andLeft" (formula "27"))
                                             (rule "inEqSimp_homoInEq1" (formula "27"))
                                             (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                             (rule "add_literals" (formula "27") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0"))
                                             (rule "add_zero_right" (formula "27") (term "0"))
                                             (rule "leq_literals" (formula "27"))
                                             (rule "closeFalse" (formula "27"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "allRight" (formula "66") (inst "sk=i_31"))
                                          (rule "orRight" (formula "66"))
                                          (rule "notRight" (formula "67"))
                                          (rule "orRight" (formula "67"))
                                          (rule "inEqSimp_leqRight" (formula "67"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_geqRight" (formula "68"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_31"))
                                          (rule "simplifySelectOfCreate" (formula "3"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "52")))
                                          (rule "simplifySelectOfCreate" (formula "3"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "57")) (ifInst ""  (formula "9")))
                                          (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "46") (ifseqformula "56"))
                                          (rule "allLeft" (formula "28") (inst "t=i_31"))
                                          (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "28") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "28"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0"))
                                          (rule "add_zero_right" (formula "1") (term "0"))
                                          (rule "leq_literals" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "66") (inst "sk=i_30"))
                                       (rule "orRight" (formula "66"))
                                       (rule "notRight" (formula "67"))
                                       (rule "orRight" (formula "67"))
                                       (rule "inEqSimp_geqRight" (formula "68"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_leqRight" (formula "68"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_30"))
                                       (rule "simplifySelectOfCreate" (formula "3"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "52")))
                                       (rule "simplifySelectOfCreate" (formula "3"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "58")) (ifInst ""  (formula "12")))
                                       (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "46") (ifseqformula "57"))
                                       (rule "allLeft" (formula "29") (inst "t=i_30"))
                                       (rule "replace_known_left" (formula "29") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                                       (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "29") (term "0,0,1"))
                                       (rule "leq_literals" (formula "29") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "inEqSimp_contradInEq1" (formula "29") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "29") (term "0"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "closeFalse" (formula "29"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "66") (inst "sk=f_5"))
                                    (rule "allRight" (formula "66") (inst "sk=o_5"))
                                    (rule "orRight" (formula "66"))
                                    (rule "pullOutSelect" (formula "67") (term "0") (inst "selectSK=f_5_0"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "68"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_5_1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_5_2"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_5_3"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_5_4"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_5_5"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "54"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_5_6"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "72"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_5_7"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "commute_and" (formula "7") (term "0,0"))
                                    (rule "commute_and" (formula "6") (term "0,0"))
                                    (rule "commute_and" (formula "5") (term "0,0"))
                                    (rule "commute_and" (formula "4") (term "0,0"))
                                    (rule "commute_and" (formula "3") (term "0,0"))
                                    (rule "commute_and" (formula "2") (term "0,0"))
                                    (rule "commute_and" (formula "1") (term "0,0"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch " f_5 = java.lang.Object::<created> ∧ o_5 = strPool(\"Wrong election ID\") TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "1")))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "applyEq" (formula "5") (term "0,1,0,0") (ifseqformula "2"))
                                       (rule "eqSymm" (formula "5") (term "1,0,0"))
                                       (rule "sortsDisjointModuloNull" (formula "5") (term "1,0,0"))
                                       (rule "eqSymm" (formula "5") (term "1,1,0,0"))
                                       (rule "replace_known_right" (formula "5") (term "1,1,0,0") (ifseqformula "72"))
                                       (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "55")))
                                       (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "applyEqRigid" (formula "73") (term "1,0") (ifseqformula "2"))
                                       (rule "applyEqRigid" (formula "73") (term "2,0") (ifseqformula "1"))
                                       (rule "narrowSelectType" (formula "73") (term "0") (ifseqformula "49"))
                                       (rule "eqSymm" (formula "73"))
                                       (rule "applyEqRigid" (formula "6") (term "0,0,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "applyEqReverse" (formula "73") (term "0") (ifseqformula "6"))
                                       (rule "hideAuxiliaryEq" (formula "6"))
                                       (rule "applyEqRigid" (formula "5") (term "0,1,0,0") (ifseqformula "2"))
                                       (rule "eqSymm" (formula "5") (term "1,0,0"))
                                       (rule "sortsDisjointModuloNull" (formula "5") (term "1,0,0"))
                                       (rule "eqSymm" (formula "5") (term "1,1,0,0"))
                                       (rule "replace_known_right" (formula "5") (term "0,1,0,0") (ifseqformula "53"))
                                       (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "70")))
                                       (rule "applyEqReverse" (formula "72") (term "0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "applyEqRigid" (formula "70") (term "0,0,0") (ifseqformula "2"))
                                       (rule "eqSymm" (formula "70") (term "0,0"))
                                       (rule "replace_known_right" (formula "70") (term "0,0") (ifseqformula "69"))
                                       (builtin "One Step Simplification" (formula "70"))
                                       (rule "notRight" (formula "70"))
                                       (rule "applyEqRigid" (formula "5") (term "0,0,0,0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "applyEqReverse" (formula "71") (term "0") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "3"))
                                       (rule "eqSymm" (formula "4") (term "1,0,0"))
                                       (rule "sortsDisjointModuloNull" (formula "4") (term "1,0,0"))
                                       (rule "eqSymm" (formula "4") (term "1,1,0,0"))
                                       (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "52"))
                                       (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "69")))
                                       (rule "applyEqReverse" (formula "70") (term "0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "eqSymm" (formula "69"))
                                       (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                       (rule "close" (formula "69") (ifseqformula "1"))
                                    )
                                    (branch " f_5 = java.lang.Object::<created> ∧ o_5 = strPool(\"Wrong election ID\") FALSE"
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch "f_5 = java.lang.Object::<created> ∧ o_5 = m_7 TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "replace_known_left" (formula "52") (term "0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "52"))
                                          (rule "applyEq" (formula "74") (term "1,0,0,1") (ifseqformula "2"))
                                          (rule "replace_known_right" (formula "74") (term "0,1") (ifseqformula "54"))
                                          (builtin "One Step Simplification" (formula "74"))
                                          (rule "notRight" (formula "74"))
                                          (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "73") (term "1") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "applyEq" (formula "50") (term "0") (ifseqformula "3"))
                                          (rule "sortsDisjointModuloNull" (formula "50"))
                                          (rule "eqSymm" (formula "50") (term "1"))
                                          (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "71"))
                                          (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "54")))
                                          (rule "false_right" (formula "50"))
                                          (rule "applyEq" (formula "71") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEqRigid" (formula "70") (term "2,0") (ifseqformula "2"))
                                          (rule "narrowSelectType" (formula "70") (term "0") (ifseqformula "47"))
                                          (rule "eqSymm" (formula "70"))
                                          (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "70") (term "0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "eqSymm" (formula "69"))
                                          (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "3"))
                                          (rule "close" (formula "51") (ifseqformula "3"))
                                       )
                                       (branch "f_5 = java.lang.Object::<created> ∧ o_5 = m_7 FALSE"
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch "f_5 = Throwable::$cause ∧ o_5 = m_7 TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "2")))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "50"))
                                             (rule "replace_known_right" (formula "51") (term "0") (ifseqformula "50"))
                                             (builtin "One Step Simplification" (formula "51"))
                                             (rule "false_right" (formula "51"))
                                             (rule "applyEq" (formula "50") (term "0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "50"))
                                             (rule "false_right" (formula "50"))
                                             (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEqRigid" (formula "71") (term "2,0") (ifseqformula "1"))
                                             (rule "narrowSelectType" (formula "71") (term "0") (ifseqformula "47"))
                                             (rule "eqSymm" (formula "71"))
                                             (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "applyEq" (formula "69") (term "1,0,0,1") (ifseqformula "2"))
                                             (rule "replace_known_right" (formula "69") (term "0,1") (ifseqformula "49"))
                                             (builtin "One Step Simplification" (formula "69"))
                                             (rule "notRight" (formula "69"))
                                             (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "70") (term "0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "eqSymm" (formula "69"))
                                             (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "3"))
                                             (rule "close" (formula "51") (ifseqformula "3"))
                                          )
                                          (branch "f_5 = Throwable::$cause ∧ o_5 = m_7 FALSE"
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "f_5 = Throwable::$message ∧ o_5 = m_7 TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "50"))
                                                (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "51"))
                                                (rule "replace_known_right" (formula "52") (term "0") (ifseqformula "51"))
                                                (builtin "One Step Simplification" (formula "52"))
                                                (rule "false_right" (formula "52"))
                                                (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "73") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEq" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "48") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "48"))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "70") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "applyEqRigid" (formula "69") (term "2,0") (ifseqformula "1"))
                                                (rule "narrowSelectType" (formula "69") (term "0") (ifseqformula "45"))
                                                (rule "applyEq" (formula "68") (term "0,0,0") (ifseqformula "2"))
                                                (rule "replace_known_right" (formula "68") (term "0,0") (ifseqformula "50"))
                                                (builtin "One Step Simplification" (formula "68"))
                                                (rule "notRight" (formula "68"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "close" (formula "49") (ifseqformula "1"))
                                             )
                                             (branch "f_5 = Throwable::$message ∧ o_5 = m_7 FALSE"
                                                (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "ifthenelse_split" (formula "1") (term "0"))
                                                (branch "f_5 = MalformedData::$errCode ∧ o_5 = m_7 TRUE"
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "49"))
                                                   (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "50"))
                                                   (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "51"))
                                                   (rule "replace_known_right" (formula "52") (term "0") (ifseqformula "51"))
                                                   (builtin "One Step Simplification" (formula "52"))
                                                   (rule "false_right" (formula "52"))
                                                   (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "74") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEqRigid" (formula "48") (term "0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "48"))
                                                   (rule "false_right" (formula "48"))
                                                   (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "49"))
                                                   (rule "false_right" (formula "49"))
                                                   (rule "applyEq" (formula "48") (term "0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "48"))
                                                   (rule "false_right" (formula "48"))
                                                   (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "applyEqReverse" (formula "70") (term "1") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "applyEq" (formula "69") (term "2,0") (ifseqformula "1"))
                                                   (rule "narrowSelectType" (formula "69") (term "0") (ifseqformula "45"))
                                                   (rule "applyEq" (formula "68") (term "0,0,0") (ifseqformula "2"))
                                                   (rule "replace_known_right" (formula "68") (term "0,0") (ifseqformula "50"))
                                                   (builtin "One Step Simplification" (formula "68"))
                                                   (rule "notRight" (formula "68"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                   (rule "close" (formula "49") (ifseqformula "1"))
                                                )
                                                (branch "f_5 = MalformedData::$errCode ∧ o_5 = m_7 FALSE"
                                                   (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "cut_direct" (formula "73") (term "0,0"))
                                                   (branch "CUT: o_5 = null TRUE"
                                                      (builtin "One Step Simplification" (formula "74"))
                                                      (rule "false_right" (formula "74"))
                                                      (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "2") (term "1,0,0"))
                                                      (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "56"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "applyEq" (formula "51") (term "0,1") (ifseqformula "1"))
                                                      (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "72"))
                                                      (builtin "One Step Simplification" (formula "51"))
                                                      (rule "false_right" (formula "51"))
                                                      (rule "applyEq" (formula "50") (term "0,1") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "50") (term "1"))
                                                      (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "54"))
                                                      (builtin "One Step Simplification" (formula "50"))
                                                      (rule "false_right" (formula "50"))
                                                      (rule "applyEqRigid" (formula "47") (term "0,1") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "47") (term "1"))
                                                      (rule "replace_known_right" (formula "47") (term "1") (ifseqformula "53"))
                                                      (builtin "One Step Simplification" (formula "47"))
                                                      (rule "false_right" (formula "47"))
                                                      (rule "applyEq" (formula "47") (term "0,1") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "47") (term "1"))
                                                      (rule "replace_known_right" (formula "47") (term "1") (ifseqformula "52"))
                                                      (builtin "One Step Simplification" (formula "47"))
                                                      (rule "false_right" (formula "47"))
                                                      (rule "applyEqRigid" (formula "69") (term "1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "2") (term "1,0,0"))
                                                      (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "51"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "applyEqReverse" (formula "69") (term "1") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "eqSymm" (formula "68"))
                                                      (rule "applyEq" (formula "46") (term "0,1") (ifseqformula "1"))
                                                      (rule "eqSymm" (formula "46") (term "1"))
                                                      (rule "replace_known_right" (formula "46") (term "1") (ifseqformula "50"))
                                                      (builtin "One Step Simplification" (formula "46"))
                                                      (rule "false_right" (formula "46"))
                                                      (rule "applyEqRigid" (formula "67") (term "1,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "67"))
                                                      (rule "closeTrue" (formula "67"))
                                                   )
                                                   (branch "CUT: o_5 = null FALSE"
                                                      (builtin "One Step Simplification" (formula "74"))
                                                      (rule "notRight" (formula "74"))
                                                      (rule "ifthenelse_split" (formula "2") (term "0"))
                                                      (branch "f_5 = MalformedData::$description ∧ o_5 = m_7 TRUE"
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "52"))
                                                         (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "51"))
                                                         (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "50"))
                                                         (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "49"))
                                                         (rule "replace_known_right" (formula "53") (term "0") (ifseqformula "52"))
                                                         (builtin "One Step Simplification" (formula "53"))
                                                         (rule "false_right" (formula "53"))
                                                         (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "51"))
                                                         (rule "false_right" (formula "51"))
                                                         (rule "applyEqRigid" (formula "50") (term "0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "50"))
                                                         (rule "false_right" (formula "50"))
                                                         (rule "applyEq" (formula "49") (term "0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "49"))
                                                         (rule "false_right" (formula "49"))
                                                         (rule "applyEq" (formula "72") (term "2,0") (ifseqformula "2"))
                                                         (rule "narrowSelectType" (formula "72") (term "0") (ifseqformula "47"))
                                                         (rule "eqSymm" (formula "72"))
                                                         (rule "applyEq" (formula "71") (term "0") (ifseqformula "3"))
                                                         (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "applyEqReverse" (formula "71") (term "0") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "eqSymm" (formula "70"))
                                                         (rule "applyEq" (formula "48") (term "0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "48"))
                                                         (rule "false_right" (formula "48"))
                                                         (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                         (rule "close" (formula "49") (ifseqformula "1"))
                                                      )
                                                      (branch "f_5 = MalformedData::$description ∧ o_5 = m_7 FALSE"
                                                         (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                         (rule "hideAuxiliaryEq" (formula "2"))
                                                         (rule "ifthenelse_split" (formula "2") (term "0"))
                                                         (branch "f_5 = java.lang.Object::<initialized> ∧ o_5 = m_7 TRUE"
                                                            (rule "andLeft" (formula "2"))
                                                            (rule "applyEqReverse" (formula "77") (term "1") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "49"))
                                                            (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "52"))
                                                            (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "51"))
                                                            (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "50"))
                                                            (rule "replace_known_left" (formula "48") (term "1") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "48"))
                                                            (rule "replace_known_right" (formula "53") (term "0") (ifseqformula "52"))
                                                            (builtin "One Step Simplification" (formula "53"))
                                                            (rule "false_right" (formula "53"))
                                                            (rule "applyEq" (formula "51") (term "0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "51"))
                                                            (rule "false_right" (formula "51"))
                                                            (rule "applyEq" (formula "50") (term "0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "50"))
                                                            (rule "false_right" (formula "50"))
                                                            (rule "applyEqRigid" (formula "50") (term "0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "50"))
                                                            (rule "false_right" (formula "50"))
                                                            (rule "applyEq" (formula "72") (term "1,0") (ifseqformula "3"))
                                                            (rule "applyEq" (formula "72") (term "2,0") (ifseqformula "2"))
                                                            (rule "narrowSelectType" (formula "72") (term "0") (ifseqformula "46"))
                                                            (rule "applyEqRigid" (formula "49") (term "0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "49"))
                                                            (rule "false_right" (formula "49"))
                                                            (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                            (rule "close" (formula "50") (ifseqformula "1"))
                                                         )
                                                         (branch "f_5 = java.lang.Object::<initialized> ∧ o_5 = m_7 FALSE"
                                                            (rule "close" (formula "76") (ifseqformula "2"))
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                        (branch "ClassCastException (!(m_4 instanceof java.lang.Throwable))"
                           (builtin "One Step Simplification" (formula "67"))
                           (builtin "One Step Simplification" (formula "66"))
                           (rule "closeTrue" (formula "66"))
                        )
                     )
                     (branch "if m_4 instanceof java.lang.Throwable false"
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
               )
               (branch "Null Reference (m_5 = null)"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "if x_4 false"
               (rule "variableDeclarationAssign" (formula "9") (term "1") (userinteraction))
               (rule "variableDeclaration" (formula "9") (term "1") (newnames "ballotsAsAMessage") (userinteraction))
               (builtin "One Step Simplification" (formula "9"))
               (builtin "Use Operation Contract" (formula "9") (newnames "heapBefore_getSignature,result_2,exc_2,heapAfter_getSignature,anon_heap_getSignature") (contract "verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer::getSignature([B)].JML behavior operation contract.0"))
               (branch "Post (getSignature)"
                  (builtin "One Step Simplification" (formula "1"))
                  (builtin "One Step Simplification" (formula "5"))
                  (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "1")))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "assignment" (formula "11") (term "1,1") (userinteraction))
                  (rule "methodCallReturn" (formula "11") (term "1,1,1") (userinteraction))
                  (rule "assignment" (formula "11") (term "1,1,1") (userinteraction))
                  (rule "methodCallEmpty" (formula "11") (term "1,1,1,1") (userinteraction))
                  (rule "tryEmpty" (formula "11") (term "1,1,1,1") (userinteraction))
                  (rule "emptyModality" (formula "11") (term "1,1,1,1") (userinteraction))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "andLeft" (formula "3"))
                  (rule "andLeft" (formula "8"))
                  (rule "notLeft" (formula "2"))
                  (rule "andLeft" (formula "5"))
                  (rule "andLeft" (formula "11"))
                  (rule "andLeft" (formula "2"))
                  (rule "andLeft" (formula "4"))
                  (rule "andLeft" (formula "11"))
                  (rule "andLeft" (formula "8"))
                  (rule "andLeft" (formula "16"))
                  (rule "andLeft" (formula "2"))
                  (rule "notLeft" (formula "6"))
                  (rule "notLeft" (formula "13"))
                  (rule "andLeft" (formula "9"))
                  (rule "andLeft" (formula "8"))
                  (rule "andLeft" (formula "17"))
                  (rule "andLeft" (formula "19"))
                  (rule "andLeft" (formula "2"))
                  (rule "orRight" (formula "22"))
                  (rule "andLeft" (formula "2"))
                  (rule "andLeft" (formula "2"))
                  (rule "notLeft" (formula "2"))
                  (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "9") (userinteraction))
                  (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "9") (userinteraction))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "replace_known_right" (formula "15") (term "0,0,0") (ifseqformula "23") (userinteraction))
                  (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "24")) (ifInst ""  (formula "14")))
                  (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "18") (userinteraction))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "replace_known_left" (formula "21") (term "0,0") (ifseqformula "18") (userinteraction))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "true_left" (formula "12") (userinteraction))
                  (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "21")))
                  (rule "andLeft" (formula "19"))
                  (rule "andLeft" (formula "11"))
                  (rule "andLeft" (formula "21"))
                  (rule "notLeft" (formula "22"))
                  (rule "applyEq" (formula "15") (term "0") (ifseqformula "1") (userinteraction))
                  (rule "ifthenelse_split" (formula "15") (term "1") (userinteraction))
                  (branch " array2seq(heapAfter_getPayLoad, result_0) = array2seq(heapAfter_getPayLoad, self.electionID@heapAfter_getPayLoad) TRUE"
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "true_left" (formula "16") (userinteraction))
                     (rule "andRight" (formula "28") (userinteraction))
                     (branch "Case 1"
                        (rule "andRight" (formula "28") (userinteraction))
                        (branch "Case 1"
                           (rule "eqSymm" (formula "11") (userinteraction))
                           (rule "applyEq" (formula "11") (term "1") (ifseqformula "15") (userinteraction))
                           (rule "pullOut" (formula "11") (term "0,0") (inst "sk=array2seq_0") (userinteraction))
                           (rule "pullOut" (formula "29") (term "0,0") (inst "sk=array2seq_1") (userinteraction))
                           (rule "cut" (inst "cutFormula=array2seq_1 = array2seq_0") (userinteraction))
                           (branch "CUT: array2seq_1 = array2seq_0 TRUE"
                              (rule "applyEqRigid" (formula "31") (term "0,0") (ifseqformula "1") (userinteraction))
                              (rule "applyEq" (formula "31") (term "0") (ifseqformula "14") (userinteraction))
                              (rule "array2seqDef" (formula "31") (term "0") (inst "u=u") (userinteraction))
                              (rule "array2seqDef" (formula "31") (term "1") (inst "u=u") (userinteraction))
                              (rule "equalityToSeqGetAndSeqLenRight" (formula "31") (inst "iv=iv") (userinteraction))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "1") (ifseqformula "10"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "1") (ifseqformula "20"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "0,1") (ifseqformula "10"))
                              (rule "eqSymm" (formula "31") (term "0"))
                              (rule "eqSymm" (formula "31") (term "1,0,1"))
                              (rule "eqSymm" (formula "18"))
                              (rule "eqSymm" (formula "14"))
                              (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "30"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "27"))
                              (builtin "One Step Simplification" (formula "12"))
                              (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "25"))
                              (builtin "One Step Simplification" (formula "22"))
                              (rule "lenOfSeqDef" (formula "31") (term "1,1,0,0,1"))
                              (rule "polySimp_elimSub" (formula "31") (term "1,1,1,0,0,1"))
                              (rule "times_zero_2" (formula "31") (term "1,1,1,1,0,0,1"))
                              (rule "add_zero_right" (formula "31") (term "1,1,1,0,0,1"))
                              (rule "lenOfSeqDef" (formula "31") (term "1,0"))
                              (rule "polySimp_elimSub" (formula "31") (term "1,1,0"))
                              (rule "times_zero_2" (formula "31") (term "1,1,1,0"))
                              (rule "add_zero_right" (formula "31") (term "1,1,0"))
                              (rule "lenOfSeqDef" (formula "31") (term "0,0"))
                              (rule "polySimp_elimSub" (formula "31") (term "1,0,0"))
                              (rule "times_zero_2" (formula "31") (term "1,1,0,0"))
                              (rule "add_zero_right" (formula "31") (term "1,0,0"))
                              (rule "getOfSeqDef" (formula "31") (term "0,1,0,1"))
                              (rule "castDel" (formula "31") (term "1,0,1,0,1"))
                              (rule "castDel" (formula "31") (term "2,0,1,0,1"))
                              (rule "add_zero_right" (formula "31") (term "0,2,1,0,1,0,1"))
                              (rule "eqSymm" (formula "31") (term "1,0,1"))
                              (rule "polySimp_elimSub" (formula "31") (term "1,1,0,1,1,0,1"))
                              (rule "times_zero_2" (formula "31") (term "1,1,1,0,1,1,0,1"))
                              (rule "add_zero_right" (formula "31") (term "1,1,0,1,1,0,1"))
                              (rule "inEqSimp_ltRight" (formula "29"))
                              (rule "mul_literals" (formula "1") (term "0,0"))
                              (rule "getOfSeqDef" (formula "31") (term "0,1,0,1"))
                              (rule "castDel" (formula "31") (term "1,0,1,0,1"))
                              (rule "castDel" (formula "31") (term "2,0,1,0,1"))
                              (rule "add_zero_right" (formula "31") (term "0,2,1,0,1,0,1"))
                              (rule "eqSymm" (formula "31") (term "1,0,1"))
                              (rule "polySimp_elimSub" (formula "31") (term "1,1,0,1,1,0,1"))
                              (rule "times_zero_2" (formula "31") (term "1,1,1,0,1,1,0,1"))
                              (rule "add_zero_right" (formula "31") (term "1,1,0,1,1,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "31") (term "0,1,1,0,0,1"))
                              (rule "add_zero_right" (formula "31") (term "0,0,1,1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,1,0,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "31") (term "0,1,0"))
                              (rule "add_zero_right" (formula "31") (term "0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0"))
                              (rule "add_zero_right" (formula "31") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1,0,1"))
                              (rule "eqSymm" (formula "31") (term "1,0,1"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,1,1,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1,0,1"))
                              (rule "eqSymm" (formula "31") (term "1,0,1"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,1,1,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0,1,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,1,1,0,1"))
                              (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "2"))
                              (rule "applyEq" (formula "24") (term "0,1") (ifseqformula "3"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "31") (term "0,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "31") (term "0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,1"))
                              (rule "mul_literals" (formula "31") (term "0,1,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,1,0,1"))
                              (rule "eqSymm" (formula "31") (term "1,0,1"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,1,1,0,1"))
                              (rule "polySimp_rightDist" (formula "31") (term "1,1,0,1,1,0,1"))
                              (rule "mul_literals" (formula "31") (term "0,1,1,0,1,1,0,1"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,1,1,0,1"))
                              (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,1,1,0,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,1,1,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "0,0,1,1,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "31") (term "0,0,1,1,1,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,1,0,1"))
                              (rule "eqSymm" (formula "31") (term "1,0,1"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,1,1,0,1"))
                              (rule "polySimp_rightDist" (formula "31") (term "1,1,0,1,1,0,1"))
                              (rule "mul_literals" (formula "31") (term "0,1,1,0,1,1,0,1"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,1,1,0,1"))
                              (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,1,1,0,1"))
                              (rule "array2seqDef" (formula "14") (term "0") (inst "u=u"))
                              (rule "array2seqDef" (formula "3") (term "0") (inst "u=u"))
                              (rule "array2seqDef" (formula "24") (term "0") (inst "u=u"))
                              (rule "array2seqDef" (formula "19") (term "1") (inst "u=u"))
                              (rule "eqSymm" (formula "19"))
                              (rule "array2seqDef" (formula "15") (term "0") (inst "u=u"))
                              (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_12"))
                              (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "32") (term "0,0,0,1,1,1,0,0,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "16") (term "1,2,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "32") (term "0,0,0,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "32") (term "0,1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "32") (term "1,1,1,1,0,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "16") (term "0,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "32") (term "0,1,1,1,1,0,0,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "32") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")) (ifInst ""  (formula "6")))
                              (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "20") (term "1,1") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "32") (term "0,0,0,1,1,1,0,0,1") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "16") (term "1,2,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "32") (term "0,0,0,1,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "32") (term "0,1,1,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "32") (term "1,1,1,1,0,1") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "16") (term "0,1,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "32") (term "0,1,1,1,1,0,0,1") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "32") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "eqSeqDef2" (formula "14") (inst "iv=iv") (ifseqformula "3"))
                              (rule "andLeft" (formula "14"))
                              (rule "eqSymm" (formula "15") (term "1,0"))
                              (rule "eqSymm" (formula "14"))
                              (rule "lenOfSeqDef" (formula "15") (term "1,1,0,0"))
                              (rule "polySimp_elimSub" (formula "15") (term "1,1,1,0,0"))
                              (rule "times_zero_2" (formula "15") (term "1,1,1,1,0,0"))
                              (rule "add_zero_right" (formula "15") (term "1,1,1,0,0"))
                              (rule "getOfSeqDef" (formula "15") (term "0,1,0"))
                              (rule "castDel" (formula "15") (term "1,0,1,0"))
                              (rule "castDel" (formula "15") (term "2,0,1,0"))
                              (rule "add_zero_right" (formula "15") (term "0,2,1,0,1,0"))
                              (rule "eqSymm" (formula "15") (term "1,0"))
                              (rule "polySimp_elimSub" (formula "15") (term "1,1,0,1,1,0"))
                              (rule "mul_literals" (formula "15") (term "1,1,1,0,1,1,0"))
                              (rule "add_zero_right" (formula "15") (term "1,1,0,1,1,0"))
                              (rule "lenOfSeqDef" (formula "14") (term "1"))
                              (rule "polySimp_elimSub" (formula "14") (term "1,1"))
                              (rule "times_zero_2" (formula "14") (term "1,1,1"))
                              (rule "add_zero_right" (formula "14") (term "1,1"))
                              (rule "lenOfSeqDef" (formula "14") (term "0"))
                              (rule "polySimp_elimSub" (formula "14") (term "1,0"))
                              (rule "mul_literals" (formula "14") (term "1,1,0"))
                              (rule "add_zero_right" (formula "14") (term "1,0"))
                              (builtin "One Step Simplification" (formula "14"))
                              (rule "true_left" (formula "14"))
                              (rule "getOfSeqDef" (formula "14") (term "0,1,0"))
                              (rule "castDel" (formula "14") (term "1,0,1,0"))
                              (rule "castDel" (formula "14") (term "2,0,1,0"))
                              (rule "add_zero_right" (formula "14") (term "0,2,1,0,1,0"))
                              (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0,1,0"))
                              (rule "times_zero_2" (formula "14") (term "1,1,1,0,0,1,0"))
                              (rule "add_zero_right" (formula "14") (term "1,1,0,0,1,0"))
                              (rule "eqSymm" (formula "14") (term "1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "14") (term "0,1,1,0,0"))
                              (rule "add_zero_right" (formula "14") (term "0,0,1,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0"))
                              (rule "eqSymm" (formula "14") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0"))
                              (rule "eqSymm" (formula "14") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,1,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0"))
                              (rule "eqSymm" (formula "14") (term "1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0"))
                              (rule "eqSymm" (formula "14") (term "1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,1,0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,1,0,0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "14") (term "0,0,0,1,0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "1,1,0,1,1,0"))
                              (rule "mul_literals" (formula "14") (term "0,1,1,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0"))
                              (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                              (rule "inEqSimp_subsumption1" (formula "14") (term "0,1,1,1,0,0") (ifseqformula "1"))
                              (rule "leq_literals" (formula "14") (term "0,0,1,1,1,0,0"))
                              (builtin "One Step Simplification" (formula "14"))
                              (rule "eqSeqDef2" (formula "24") (inst "iv=iv") (ifseqformula "24"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "true_left" (formula "24"))
                              (rule "eqSeqDef2" (formula "3") (inst "iv=iv") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "array2seqDef" (formula "18") (term "1") (inst "u=u"))
                              (rule "eqSymm" (formula "18"))
                              (rule "pullOutSelect" (formula "29") (term "0,1,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_13"))
                              (rule "applyEq" (formula "30") (term "1,1,0,1,0,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "30") (term "0,1,1,1,0,0,1,0,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "30") (term "0,0,0,0,0") (ifseqformula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                              (rule "replaceKnownSelect_taclet0000010010_0" (formula "1") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000010010_1" (formula "1") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "11"))
                              (rule "eqSymm" (formula "30") (term "1,0,1"))
                              (rule "eqSymm" (formula "30") (term "0"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "30") (term "0,1,1,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "30") (term "0,0,0,1,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "allRight" (formula "30") (inst "sk=iv_4"))
                              (rule "impRight" (formula "30"))
                              (rule "andLeft" (formula "1"))
                              (rule "applyEqReverse" (formula "32") (term "0,1,1,1,0,1") (ifseqformula "3"))
                              (rule "applyEqReverse" (formula "32") (term "1,1,1") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "eqSymm" (formula "31"))
                              (rule "replace_known_left" (formula "31") (term "0,0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "1")))
                              (rule "inEqSimp_homoInEq0" (formula "2"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "inEqSimp_homoInEq0" (formula "31") (term "0,1"))
                              (rule "polySimp_addComm1" (formula "31") (term "0,0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "31") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "mul_literals" (formula "2") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "31") (term "1,0,1"))
                              (rule "mul_literals" (formula "31") (term "0,1,0,1"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,1"))
                              (rule "polySimp_elimOne" (formula "31") (term "1,1,0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
                              (rule "mul_literals" (formula "31") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                              (rule "eqSeqDef" (formula "20") (inst "iv=iv"))
                              (rule "andLeft" (formula "20"))
                              (rule "getOfSeqDef" (formula "21") (term "1,1,0"))
                              (rule "castDel" (formula "21") (term "1,1,1,0"))
                              (rule "castDel" (formula "21") (term "2,1,1,0"))
                              (rule "add_zero_right" (formula "21") (term "0,2,1,1,1,0"))
                              (rule "polySimp_elimSub" (formula "21") (term "1,1,0,1,1,0"))
                              (rule "mul_literals" (formula "21") (term "1,1,1,0,1,1,0"))
                              (rule "add_zero_right" (formula "21") (term "1,1,0,1,1,0"))
                              (rule "lenOfSeqDef" (formula "20") (term "1"))
                              (rule "polySimp_elimSub" (formula "20") (term "1,1"))
                              (rule "mul_literals" (formula "20") (term "1,1,1"))
                              (rule "add_zero_right" (formula "20") (term "1,1"))
                              (rule "lenOfSeqDef" (formula "20") (term "0"))
                              (rule "polySimp_elimSub" (formula "20") (term "1,0"))
                              (rule "mul_literals" (formula "20") (term "1,1,0"))
                              (rule "add_zero_right" (formula "20") (term "1,0"))
                              (rule "lenOfSeqDef" (formula "21") (term "1,1,0,0"))
                              (rule "polySimp_elimSub" (formula "21") (term "1,1,1,0,0"))
                              (rule "times_zero_2" (formula "21") (term "1,1,1,1,0,0"))
                              (rule "add_zero_right" (formula "21") (term "1,1,1,0,0"))
                              (rule "getOfSeqDef" (formula "21") (term "0,1,0"))
                              (rule "castDel" (formula "21") (term "1,0,1,0"))
                              (rule "castDel" (formula "21") (term "2,0,1,0"))
                              (rule "add_zero_right" (formula "21") (term "0,2,1,0,1,0"))
                              (rule "polySimp_elimSub" (formula "21") (term "1,1,0,0,1,0"))
                              (rule "mul_literals" (formula "21") (term "1,1,1,0,0,1,0"))
                              (rule "add_zero_right" (formula "21") (term "1,1,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "20") (term "0,1"))
                              (rule "add_zero_right" (formula "20") (term "0,0,1"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0"))
                              (rule "add_zero_right" (formula "20") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1,1,0,0"))
                              (rule "add_zero_right" (formula "21") (term "0,0,1,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,1,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,1,0"))
                              (rule "applyEq" (formula "21") (term "0,1,0,0,1,0,0") (ifseqformula "20"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,1,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,1,1,0"))
                              (rule "mul_literals" (formula "21") (term "0,1,1,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,1,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "0,0,1"))
                              (rule "polySimp_elimOne" (formula "20") (term "0,0,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0"))
                              (rule "polySimp_elimOne" (formula "20") (term "0,0,0"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "20"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,1,0"))
                              (rule "mul_literals" (formula "21") (term "0,1,1,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0,1,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "0,0,1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "21") (term "0,0,1,1,1,0,0"))
                              (rule "eqSeqDef2" (formula "16") (inst "iv=iv") (ifseqformula "16"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "true_left" (formula "16"))
                              (rule "pullOutSelect" (formula "31") (term "1,1") (inst "selectSK=arr_165"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                              (rule "ifthenelse_negated" (formula "1") (term "0"))
                              (rule "narrowSelectArrayType" (formula "1") (term "2,0") (ifseqformula "12") (ifseqformula "30"))
                              (rule "narrowSelectArrayType" (formula "1") (term "1,0") (ifseqformula "18") (ifseqformula "30"))
                              (rule "pullOutSelect" (formula "32") (term "1,0") (inst "selectSK=arr_166"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                              (rule "replaceKnownSelect_taclet0000010010_4" (formula "1") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "14"))
                              (rule "ifthenelse_negated" (formula "1") (term "0"))
                              (rule "narrowSelectArrayType" (formula "1") (term "2,0") (ifseqformula "23") (ifseqformula "31"))
                              (rule "nnf_imp2or" (formula "17") (term "0"))
                              (rule "nnf_imp2or" (formula "22") (term "0"))
                              (rule "nnf_notAnd" (formula "17") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                              (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                              (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                              (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "22") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
                              (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0"))
                              (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                              (rule "mul_literals" (formula "22") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                              (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "18") (ifseqformula "9"))
                              (rule "replaceKnownSelect_taclet0000010010_0" (formula "18") (term "0,0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000010010_1" (formula "18") (term "0,0,1"))
                              (rule "andLeft" (formula "18"))
                              (rule "notLeft" (formula "19"))
                              (rule "andLeft" (formula "18"))
                              (rule "andLeft" (formula "18"))
                              (rule "notLeft" (formula "20"))
                              (rule "andLeft" (formula "18"))
                              (rule "notLeft" (formula "20"))
                              (rule "andLeft" (formula "18"))
                              (rule "notLeft" (formula "20"))
                              (rule "andLeft" (formula "18"))
                              (rule "andLeft" (formula "18"))
                              (rule "andLeft" (formula "18"))
                              (rule "andLeft" (formula "18"))
                              (rule "andLeft" (formula "18"))
                              (rule "andLeft" (formula "18"))
                              (rule "notLeft" (formula "19"))
                              (rule "notLeft" (formula "18"))
                              (rule "nonNull" (formula "23") (inst "i=i"))
                              (rule "greater_literals" (formula "23") (term "0,1"))
                              (builtin "One Step Simplification" (formula "23"))
                              (rule "sub_literals" (formula "23") (term "2,1,0,1"))
                              (builtin "One Step Simplification" (formula "23"))
                              (rule "andLeft" (formula "23"))
                              (rule "notLeft" (formula "23"))
                              (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "22") (inst "i=i"))
                              (rule "greater_literals" (formula "22") (term "0,1"))
                              (builtin "One Step Simplification" (formula "22"))
                              (rule "sub_literals" (formula "22") (term "2,1,0,1"))
                              (builtin "One Step Simplification" (formula "22"))
                              (rule "andLeft" (formula "22"))
                              (rule "notLeft" (formula "22"))
                              (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "21") (inst "i=i"))
                              (rule "sub_literals" (formula "21") (term "2,1,0,1,1"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "greater_literals" (formula "21") (term "0,1"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "andLeft" (formula "21"))
                              (rule "notLeft" (formula "21"))
                              (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "20") (inst "i=i"))
                              (rule "greater_literals" (formula "20") (term "0,1"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "sub_literals" (formula "20") (term "2,1,0,1"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "andLeft" (formula "20"))
                              (rule "notLeft" (formula "20"))
                              (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "19") (inst "i=i"))
                              (rule "greater_literals" (formula "19") (term "0,1"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "sub_literals" (formula "19") (term "2,1,0,1"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "andLeft" (formula "19"))
                              (rule "notLeft" (formula "19"))
                              (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "18") (inst "i=i"))
                              (rule "sub_literals" (formula "18") (term "2,1,0,1,1"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "greater_literals" (formula "18") (term "0,1"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "andLeft" (formula "18"))
                              (rule "notLeft" (formula "18"))
                              (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                              (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_9"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")) (ifInst ""  (formula "9")))
                              (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_9"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")) (ifInst ""  (formula "9")))
                              (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_9"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")) (ifInst ""  (formula "9")))
                              (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_9"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")) (ifInst ""  (formula "9")))
                              (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_9"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")) (ifInst ""  (formula "9")))
                              (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "23") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_9"))
                              (rule "applyEq" (formula "39") (term "0") (ifseqformula "23"))
                              (rule "applyEq" (formula "24") (term "0,1,1,1,0,0") (ifseqformula "23"))
                              (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "14"))
                              (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "46")) (ifInst ""  (formula "8")))
                              (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "23"))
                              (rule "applyEqReverse" (formula "24") (term "0,1,1,1,0,0") (ifseqformula "23"))
                              (rule "applyEqReverse" (formula "24") (term "1,0,0,1,0") (ifseqformula "23"))
                              (rule "hideAuxiliaryEq" (formula "23"))
                              (rule "pullOutSelect" (formula "22") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_9"))
                              (rule "applyEq" (formula "38") (term "0") (ifseqformula "22"))
                              (rule "applyEq" (formula "23") (term "0,1,1,1,0,0") (ifseqformula "22"))
                              (rule "simplifySelectOfAnonEQ" (formula "22") (ifseqformula "14"))
                              (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "46")) (ifInst ""  (formula "8")))
                              (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "22"))
                              (rule "applyEqReverse" (formula "23") (term "0,1,1,1,0,0") (ifseqformula "22"))
                              (rule "applyEqReverse" (formula "23") (term "1,0,0,1,0") (ifseqformula "22"))
                              (rule "hideAuxiliaryEq" (formula "22"))
                              (rule "pullOutSelect" (formula "21") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_9"))
                              (rule "applyEq" (formula "37") (term "0") (ifseqformula "21"))
                              (rule "applyEq" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "21"))
                              (rule "simplifySelectOfAnonEQ" (formula "21") (ifseqformula "14"))
                              (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "46")) (ifInst ""  (formula "8")))
                              (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "21"))
                              (rule "applyEqReverse" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "21"))
                              (rule "applyEqReverse" (formula "22") (term "1,0,0,1,0") (ifseqformula "21"))
                              (rule "hideAuxiliaryEq" (formula "21"))
                              (rule "pullOutSelect" (formula "20") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_9"))
                              (rule "applyEq" (formula "36") (term "0") (ifseqformula "20"))
                              (rule "applyEq" (formula "21") (term "0,1,1,1,0,0") (ifseqformula "20"))
                              (rule "simplifySelectOfAnonEQ" (formula "20") (ifseqformula "14"))
                              (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "46")) (ifInst ""  (formula "8")))
                              (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "20"))
                              (rule "applyEqReverse" (formula "21") (term "0,1,1,1,0,0") (ifseqformula "20"))
                              (rule "applyEqReverse" (formula "21") (term "1,0,0,1,0") (ifseqformula "20"))
                              (rule "hideAuxiliaryEq" (formula "20"))
                              (rule "pullOutSelect" (formula "19") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_9"))
                              (rule "applyEq" (formula "35") (term "0") (ifseqformula "19"))
                              (rule "applyEq" (formula "20") (term "0,1,1,1,0,0") (ifseqformula "19"))
                              (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "14"))
                              (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "46")) (ifInst ""  (formula "8")))
                              (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "19"))
                              (rule "applyEqReverse" (formula "20") (term "0,1,1,1,0,0") (ifseqformula "19"))
                              (rule "applyEqReverse" (formula "20") (term "1,0,0,1,0") (ifseqformula "19"))
                              (rule "hideAuxiliaryEq" (formula "19"))
                              (rule "pullOutSelect" (formula "18") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_9"))
                              (rule "applyEq" (formula "19") (term "0,1,1,1,0,0") (ifseqformula "18"))
                              (rule "applyEq" (formula "34") (term "0") (ifseqformula "18"))
                              (rule "simplifySelectOfAnonEQ" (formula "18") (ifseqformula "14"))
                              (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "46")) (ifInst ""  (formula "8")))
                              (rule "applyEqReverse" (formula "19") (term "0,1,1,1,0,0") (ifseqformula "18"))
                              (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "18"))
                              (rule "applyEqReverse" (formula "19") (term "1,0,0,1,0") (ifseqformula "18"))
                              (rule "hideAuxiliaryEq" (formula "18"))
                              (rule "nnf_imp2or" (formula "23") (term "0"))
                              (rule "nnf_imp2or" (formula "22") (term "0"))
                              (rule "nnf_imp2or" (formula "21") (term "0"))
                              (rule "nnf_imp2or" (formula "20") (term "0"))
                              (rule "nnf_imp2or" (formula "19") (term "0"))
                              (rule "nnf_imp2or" (formula "18") (term "0"))
                              (rule "nnf_notAnd" (formula "23") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
                              (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "23") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                              (rule "mul_literals" (formula "23") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "22") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
                              (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "22") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                              (rule "mul_literals" (formula "22") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "21") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "21") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
                              (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "21") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                              (rule "mul_literals" (formula "21") (term "1,0,0,0"))
                              (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "12") (ifseqformula "9"))
                              (rule "andLeft" (formula "12"))
                              (rule "notLeft" (formula "13"))
                              (rule "andLeft" (formula "12"))
                              (rule "andLeft" (formula "12"))
                              (rule "notLeft" (formula "14"))
                              (rule "andLeft" (formula "12"))
                              (rule "notLeft" (formula "14"))
                              (rule "notLeft" (formula "13"))
                              (rule "andLeft" (formula "12"))
                              (rule "andLeft" (formula "12"))
                              (rule "andLeft" (formula "12"))
                              (rule "andLeft" (formula "12"))
                              (rule "andLeft" (formula "12"))
                              (rule "andLeft" (formula "12"))
                              (rule "andLeft" (formula "12"))
                              (rule "notLeft" (formula "13"))
                              (rule "notLeft" (formula "12"))
                              (rule "nonNull" (formula "17") (inst "i=i"))
                              (rule "greater_literals" (formula "17") (term "0,1"))
                              (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "43")))
                              (rule "sub_literals" (formula "17") (term "2,1,0"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "narrowSelectArrayType" (formula "17") (term "0,0,1,0") (ifseqformula "29") (ifseqformula "43"))
                              (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "16") (inst "i=i"))
                              (rule "greater_literals" (formula "16") (term "0,1"))
                              (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "42")))
                              (rule "sub_literals" (formula "16") (term "2,1,0"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "narrowSelectArrayType" (formula "16") (term "0,0,1,0") (ifseqformula "29") (ifseqformula "42"))
                              (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "15") (inst "i=i"))
                              (rule "greater_literals" (formula "15") (term "0,1"))
                              (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "41")))
                              (rule "sub_literals" (formula "15") (term "2,1,0"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "narrowSelectArrayType" (formula "15") (term "0,0,1,0") (ifseqformula "29") (ifseqformula "41"))
                              (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "14") (inst "i=i"))
                              (rule "greater_literals" (formula "14") (term "0,1"))
                              (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "40")))
                              (rule "sub_literals" (formula "14") (term "2,1,0"))
                              (builtin "One Step Simplification" (formula "14"))
                              (rule "narrowSelectArrayType" (formula "14") (term "0,0,1,0") (ifseqformula "29") (ifseqformula "40"))
                              (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "13") (inst "i=i"))
                              (rule "greater_literals" (formula "13") (term "0,1"))
                              (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "39")))
                              (rule "sub_literals" (formula "13") (term "2,1,0"))
                              (builtin "One Step Simplification" (formula "13"))
                              (rule "narrowSelectArrayType" (formula "13") (term "0,0,1,0") (ifseqformula "29") (ifseqformula "39"))
                              (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "12") (inst "i=i"))
                              (rule "greater_literals" (formula "12") (term "0,1"))
                              (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "38")))
                              (rule "sub_literals" (formula "12") (term "2,1,0"))
                              (builtin "One Step Simplification" (formula "12"))
                              (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "29") (ifseqformula "38"))
                              (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                              (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "37") (ifseqformula "9"))
                              (rule "replaceKnownSelect_taclet0000010010_2" (formula "37") (term "0,0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000010010_3" (formula "37") (term "0,0,1"))
                              (rule "andLeft" (formula "37"))
                              (rule "notLeft" (formula "38"))
                              (rule "andLeft" (formula "37"))
                              (rule "andLeft" (formula "37"))
                              (rule "notLeft" (formula "39"))
                              (rule "notLeft" (formula "38"))
                              (rule "andLeft" (formula "37"))
                              (rule "andLeft" (formula "37"))
                              (rule "notLeft" (formula "39"))
                              (rule "andLeft" (formula "37"))
                              (rule "andLeft" (formula "37"))
                              (rule "andLeft" (formula "37"))
                              (rule "andLeft" (formula "37"))
                              (rule "andLeft" (formula "37"))
                              (rule "andLeft" (formula "37"))
                              (rule "notLeft" (formula "38"))
                              (rule "notLeft" (formula "37"))
                              (rule "nonNull" (formula "42") (inst "i=i"))
                              (rule "sub_literals" (formula "42") (term "2,1,0,1,1"))
                              (builtin "One Step Simplification" (formula "42"))
                              (rule "greater_literals" (formula "42") (term "0,1"))
                              (builtin "One Step Simplification" (formula "42"))
                              (rule "andLeft" (formula "42"))
                              (rule "notLeft" (formula "42"))
                              (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "42") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "41") (inst "i=i"))
                              (rule "greater_literals" (formula "41") (term "0,1"))
                              (builtin "One Step Simplification" (formula "41"))
                              (rule "sub_literals" (formula "41") (term "2,1,0,1"))
                              (builtin "One Step Simplification" (formula "41"))
                              (rule "andLeft" (formula "41"))
                              (rule "notLeft" (formula "41"))
                              (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "41") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "40") (inst "i=i"))
                              (rule "sub_literals" (formula "40") (term "2,1,0,1,1"))
                              (builtin "One Step Simplification" (formula "40"))
                              (rule "greater_literals" (formula "40") (term "0,1"))
                              (builtin "One Step Simplification" (formula "40"))
                              (rule "andLeft" (formula "40"))
                              (rule "notLeft" (formula "40"))
                              (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "40") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "39") (inst "i=i"))
                              (rule "greater_literals" (formula "39") (term "0,1"))
                              (builtin "One Step Simplification" (formula "39"))
                              (rule "sub_literals" (formula "39") (term "2,1,0,1"))
                              (builtin "One Step Simplification" (formula "39"))
                              (rule "andLeft" (formula "39"))
                              (rule "notLeft" (formula "39"))
                              (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "39") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "38") (inst "i=i"))
                              (rule "greater_literals" (formula "38") (term "0,1"))
                              (builtin "One Step Simplification" (formula "38"))
                              (rule "sub_literals" (formula "38") (term "2,1,0,1"))
                              (builtin "One Step Simplification" (formula "38"))
                              (rule "andLeft" (formula "38"))
                              (rule "notLeft" (formula "38"))
                              (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "38") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "37") (inst "i=i"))
                              (rule "sub_literals" (formula "37") (term "2,1,0,1,1"))
                              (builtin "One Step Simplification" (formula "37"))
                              (rule "greater_literals" (formula "37") (term "0,1"))
                              (builtin "One Step Simplification" (formula "37"))
                              (rule "andLeft" (formula "37"))
                              (rule "notLeft" (formula "37"))
                              (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "37") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0"))
                              (rule "pullOutSelect" (formula "53") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_10"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")))
                              (rule "replaceKnownSelect_taclet0000010010_6" (formula "1") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000010010_7" (formula "1") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "20"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "9"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "52") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_10"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")))
                              (rule "replaceKnownSelect_taclet0000010010_8" (formula "1") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000010010_9" (formula "1") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "20"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "9"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "53") (term "0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_10"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")))
                              (rule "replaceKnownSelect_taclet0000010010_10" (formula "1") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000010010_11" (formula "1") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "20"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "9"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "52") (term "0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "50") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_10"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")))
                              (rule "replaceKnownSelect_taclet0000010010_12" (formula "1") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000010010_13" (formula "1") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "20"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "9"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "51") (term "0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "49") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_10"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "63")))
                              (rule "replaceKnownSelect_taclet0000010010_14" (formula "1") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000010010_15" (formula "1") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "20"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "9"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "50") (term "0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "42") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_10"))
                              (rule "applyEq" (formula "43") (term "0,1,1,1,0,0") (ifseqformula "42"))
                              (rule "applyEq" (formula "49") (term "0") (ifseqformula "42"))
                              (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "34"))
                              (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "62")))
                              (rule "replaceKnownSelect_taclet0000010010_16" (formula "42") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000010010_17" (formula "42") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,0,0") (ifseqformula "19"))
                              (rule "replace_known_left" (formula "42") (term "0,0,0,0") (ifseqformula "8"))
                              (builtin "One Step Simplification" (formula "42"))
                              (rule "applyEqReverse" (formula "49") (term "0") (ifseqformula "42"))
                              (rule "applyEqReverse" (formula "43") (term "0,1,1,1,0,0") (ifseqformula "42"))
                              (rule "applyEqReverse" (formula "43") (term "1,0,0,1,0") (ifseqformula "42"))
                              (rule "hideAuxiliaryEq" (formula "42"))
                              (rule "pullOutSelect" (formula "41") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_10"))
                              (rule "applyEq" (formula "48") (term "0") (ifseqformula "41"))
                              (rule "applyEq" (formula "42") (term "0,1,1,1,0,0") (ifseqformula "41"))
                              (rule "simplifySelectOfAnonEQ" (formula "41") (ifseqformula "34"))
                              (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "61")))
                              (rule "replaceKnownSelect_taclet0000010010_18" (formula "41") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000010010_19" (formula "41") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "0,0,0") (ifseqformula "19"))
                              (rule "replace_known_left" (formula "41") (term "0,0,0,0") (ifseqformula "8"))
                              (builtin "One Step Simplification" (formula "41"))
                              (rule "applyEqReverse" (formula "42") (term "0,1,1,1,0,0") (ifseqformula "41"))
                              (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "41"))
                              (rule "applyEqReverse" (formula "42") (term "1,0,0,1,0") (ifseqformula "41"))
                              (rule "hideAuxiliaryEq" (formula "41"))
                              (rule "pullOutSelect" (formula "40") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_10"))
                              (rule "applyEq" (formula "47") (term "0") (ifseqformula "40"))
                              (rule "applyEq" (formula "41") (term "0,1,1,1,0,0") (ifseqformula "40"))
                              (rule "simplifySelectOfAnonEQ" (formula "40") (ifseqformula "34"))
                              (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "60")))
                              (rule "replaceKnownSelect_taclet0000010010_20" (formula "40") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000010010_21" (formula "40") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,0,0") (ifseqformula "19"))
                              (rule "replace_known_left" (formula "40") (term "0,0,0,0") (ifseqformula "8"))
                              (builtin "One Step Simplification" (formula "40"))
                              (rule "applyEqReverse" (formula "41") (term "1,0,0,1,0") (ifseqformula "40"))
                              (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "40"))
                              (rule "applyEqReverse" (formula "41") (term "0,1,1,1,0,0") (ifseqformula "40"))
                              (rule "hideAuxiliaryEq" (formula "40"))
                              (rule "pullOutSelect" (formula "39") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_10"))
                              (rule "applyEq" (formula "46") (term "0") (ifseqformula "39"))
                              (rule "applyEq" (formula "40") (term "0,1,1,1,0,0") (ifseqformula "39"))
                              (rule "simplifySelectOfAnonEQ" (formula "39") (ifseqformula "34"))
                              (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "59")))
                              (rule "replaceKnownSelect_taclet0000010010_22" (formula "39") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000010010_23" (formula "39") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "0,0,0") (ifseqformula "19"))
                              (rule "replace_known_left" (formula "39") (term "0,0,0,0") (ifseqformula "8"))
                              (builtin "One Step Simplification" (formula "39"))
                              (rule "applyEqReverse" (formula "40") (term "0,1,1,1,0,0") (ifseqformula "39"))
                              (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "39"))
                              (rule "applyEqReverse" (formula "40") (term "1,0,0,1,0") (ifseqformula "39"))
                              (rule "hideAuxiliaryEq" (formula "39"))
                              (rule "pullOutSelect" (formula "38") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_10"))
                              (rule "applyEq" (formula "45") (term "0") (ifseqformula "38"))
                              (rule "applyEq" (formula "39") (term "0,1,1,1,0,0") (ifseqformula "38"))
                              (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "34"))
                              (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "58")))
                              (rule "replaceKnownSelect_taclet0000010010_24" (formula "38") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000010010_25" (formula "38") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "0,0,0") (ifseqformula "19"))
                              (rule "replace_known_left" (formula "38") (term "0,0,0,0") (ifseqformula "8"))
                              (builtin "One Step Simplification" (formula "38"))
                              (rule "applyEqReverse" (formula "39") (term "1,0,0,1,0") (ifseqformula "38"))
                              (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "38"))
                              (rule "applyEqReverse" (formula "39") (term "0,1,1,1,0,0") (ifseqformula "38"))
                              (rule "hideAuxiliaryEq" (formula "38"))
                              (rule "pullOutSelect" (formula "37") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_10"))
                              (rule "applyEq" (formula "44") (term "0") (ifseqformula "37"))
                              (rule "applyEq" (formula "38") (term "0,1,1,1,0,0") (ifseqformula "37"))
                              (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "34"))
                              (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "57")))
                              (rule "replaceKnownSelect_taclet0000010010_26" (formula "37") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0000010010_27" (formula "37") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,0,0") (ifseqformula "19"))
                              (rule "replace_known_left" (formula "37") (term "0,0,0,0") (ifseqformula "8"))
                              (builtin "One Step Simplification" (formula "37"))
                              (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "37"))
                              (rule "applyEqReverse" (formula "38") (term "1,0,0,1,0") (ifseqformula "37"))
                              (rule "applyEqReverse" (formula "38") (term "0,1,1,1,0,0") (ifseqformula "37"))
                              (rule "hideAuxiliaryEq" (formula "37"))
                              (rule "nnf_notAnd" (formula "25") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                              (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "25") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                              (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "24") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                              (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "24") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                              (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                              (rule "equalityToSeqGetAndSeqLenLeft" (formula "6") (inst "iv=iv"))
                              (rule "andLeft" (formula "6"))
                              (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                              (rule "applyEq" (formula "7") (term "0,0,1,0") (ifseqformula "8"))
                              (builtin "One Step Simplification" (formula "7"))
                              (rule "true_left" (formula "7"))
                              (rule "applyEqRigid" (formula "6") (term "0,0") (ifseqformula "7"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "nnf_notAnd" (formula "23") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
                              (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "23") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                              (rule "mul_literals" (formula "23") (term "1,0,0,0"))
                              (rule "cut_direct" (formula "21") (term "0"))
                              (branch "CUT: result_0.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "true_left" (formula "22"))
                                 (rule "cut_direct" (formula "36") (term "0,0"))
                                 (branch "CUT: result_2.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "true_left" (formula "37"))
                                    (rule "commute_or_2" (formula "22") (term "0"))
                                    (rule "commute_or_2" (formula "32") (term "0"))
                                    (rule "arrayLengthIsAShort" (formula "5") (term "0"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "arrayLengthNotNegative" (formula "5") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "6"))
                                    (rule "leq_literals" (formula "5") (term "0"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "nnf_imp2or" (formula "17") (term "0"))
                                    (rule "nnf_imp2or" (formula "16") (term "0"))
                                    (rule "nnf_imp2or" (formula "15") (term "0"))
                                    (rule "nnf_imp2or" (formula "14") (term "0"))
                                    (rule "nnf_imp2or" (formula "13") (term "0"))
                                    (rule "nnf_imp2or" (formula "12") (term "0"))
                                    (rule "ifthenelse_split" (formula "31") (term "0"))
                                    (branch "self.electionID.length ≥ 1 TRUE"
                                       (rule "eqSymm" (formula "32"))
                                       (rule "applyEq" (formula "4") (term "0") (ifseqformula "32"))
                                       (rule "replace_known_left" (formula "60") (term "0,1") (ifseqformula "4"))
                                       (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "4")))
                                       (rule "applyEq" (formula "33") (term "1,1,0") (ifseqformula "32"))
                                       (rule "commute_or_2" (formula "28") (term "0"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "self.electionID.<created> = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "61") (term "1") (ifseqformula "3"))
                                          (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "60") (term "0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "60"))
                                          (rule "closeTrue" (formula "60"))
                                       )
                                       (branch "self.electionID.<created> = TRUE FALSE"
                                          (rule "referencedObjectIsCreatedRight" (formula "44") (ifseqformula "59"))
                                          (rule "close" (formula "44") (ifseqformula "29"))
                                       )
                                    )
                                    (branch "self.electionID.length ≥ 1 FALSE"
                                       (rule "eqSymm" (formula "31"))
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "inEqSimp_geqRight" (formula "43"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_notGeq" (formula "32") (term "0"))
                                       (rule "mul_literals" (formula "32") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "32") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "32") (term "0,0"))
                                       (rule "ifthenelse_split" (formula "5") (term "0"))
                                       (branch "result_0.length ≥ 1 TRUE"
                                          (rule "replace_known_left" (formula "34") (term "0,1,1,0") (ifseqformula "5"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "inEqSimp_contradEq7" (formula "33") (term "1") (ifseqformula "5"))
                                          (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "33") (term "0,0,1"))
                                          (rule "leq_literals" (formula "33") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "inEqSimp_contradInEq1" (formula "33") (ifseqformula "5"))
                                          (rule "qeq_literals" (formula "33") (term "0"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "closeFalse" (formula "33"))
                                       )
                                       (branch "result_0.length ≥ 1 FALSE"
                                          (rule "replace_known_right" (formula "33") (term "0,1,1,0") (ifseqformula "44"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "inEqSimp_geqRight" (formula "44"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "true_left" (formula "33"))
                                          (rule "inEqSimp_homoInEq1" (formula "6"))
                                          (rule "times_zero_2" (formula "6") (term "1,0"))
                                          (rule "add_zero_right" (formula "6") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                          (rule "mul_literals" (formula "6") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "5"))
                                          (rule "qeq_literals" (formula "6") (term "0"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "closeFalse" (formula "6"))
                                       )
                                    )
                                 )
                                 (branch "CUT: result_2.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "commute_or_2" (formula "22") (term "0"))
                                    (rule "commute_or_2" (formula "32") (term "0"))
                                    (rule "arrayLengthNotNegative" (formula "5") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "6"))
                                    (rule "leq_literals" (formula "5") (term "0"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "arrayLengthIsAShort" (formula "5") (term "0"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "nnf_imp2or" (formula "17") (term "0"))
                                    (rule "nnf_imp2or" (formula "16") (term "0"))
                                    (rule "nnf_imp2or" (formula "15") (term "0"))
                                    (rule "nnf_imp2or" (formula "14") (term "0"))
                                    (rule "nnf_imp2or" (formula "13") (term "0"))
                                    (rule "nnf_imp2or" (formula "12") (term "0"))
                                    (rule "ifthenelse_split" (formula "31") (term "0"))
                                    (branch "self.electionID.length ≥ 1 TRUE"
                                       (rule "eqSymm" (formula "32"))
                                       (rule "applyEq" (formula "33") (term "1,1,0") (ifseqformula "32"))
                                       (rule "applyEq" (formula "4") (term "0") (ifseqformula "32"))
                                       (rule "replace_known_left" (formula "61") (term "0,0") (ifseqformula "4"))
                                       (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "4")))
                                       (rule "commute_or_2" (formula "28") (term "0"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "self.electionID.<created> = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "3"))
                                          (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "61") (term "0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "61"))
                                          (rule "closeTrue" (formula "61"))
                                       )
                                       (branch "self.electionID.<created> = TRUE FALSE"
                                          (rule "referencedObjectIsCreatedRight" (formula "44") (ifseqformula "60"))
                                          (rule "close" (formula "44") (ifseqformula "29"))
                                       )
                                    )
                                    (branch "self.electionID.length ≥ 1 FALSE"
                                       (rule "eqSymm" (formula "31"))
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "inEqSimp_geqRight" (formula "43"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_notGeq" (formula "32") (term "0"))
                                       (rule "mul_literals" (formula "32") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "32") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "32") (term "0,0"))
                                       (rule "ifthenelse_split" (formula "5") (term "0"))
                                       (branch "result_0.length ≥ 1 TRUE"
                                          (rule "replace_known_left" (formula "34") (term "0,1,1,0") (ifseqformula "5"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "inEqSimp_contradEq7" (formula "33") (term "1") (ifseqformula "5"))
                                          (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "33") (term "0,0,1"))
                                          (rule "leq_literals" (formula "33") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "33"))
                                          (rule "qeq_literals" (formula "5") (term "0"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "closeFalse" (formula "5"))
                                       )
                                       (branch "result_0.length ≥ 1 FALSE"
                                          (rule "replace_known_right" (formula "33") (term "0,1,1,0") (ifseqformula "44"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "inEqSimp_geqRight" (formula "44"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "true_left" (formula "33"))
                                          (rule "inEqSimp_homoInEq1" (formula "6"))
                                          (rule "mul_literals" (formula "6") (term "1,0"))
                                          (rule "add_zero_right" (formula "6") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                          (rule "mul_literals" (formula "6") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "5"))
                                          (rule "qeq_literals" (formula "6") (term "0"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "closeFalse" (formula "6"))
                                       )
                                    )
                                 )
                              )
                              (branch "CUT: result_0.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "cut_direct" (formula "36") (term "0,0"))
                                 (branch "CUT: result_2.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "true_left" (formula "37"))
                                    (rule "commute_or_2" (formula "22") (term "0"))
                                    (rule "commute_or_2" (formula "32") (term "0"))
                                    (rule "arrayLengthNotNegative" (formula "5") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "6"))
                                    (rule "leq_literals" (formula "5") (term "0"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "arrayLengthIsAShort" (formula "5") (term "0"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "nnf_imp2or" (formula "17") (term "0"))
                                    (rule "nnf_imp2or" (formula "16") (term "0"))
                                    (rule "nnf_imp2or" (formula "15") (term "0"))
                                    (rule "nnf_imp2or" (formula "14") (term "0"))
                                    (rule "nnf_imp2or" (formula "13") (term "0"))
                                    (rule "nnf_imp2or" (formula "12") (term "0"))
                                    (rule "ifthenelse_split" (formula "31") (term "0"))
                                    (branch "self.electionID.length ≥ 1 TRUE"
                                       (rule "eqSymm" (formula "32"))
                                       (rule "applyEq" (formula "33") (term "1,1,0") (ifseqformula "32"))
                                       (rule "applyEq" (formula "4") (term "0") (ifseqformula "32"))
                                       (rule "replace_known_left" (formula "61") (term "0,1") (ifseqformula "4"))
                                       (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "4")))
                                       (rule "commute_or_2" (formula "28") (term "0"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "self.electionID.<created> = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "61") (term "0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "61"))
                                          (rule "closeTrue" (formula "61"))
                                       )
                                       (branch "self.electionID.<created> = TRUE FALSE"
                                          (rule "referencedObjectIsCreatedRight" (formula "44") (ifseqformula "60"))
                                          (rule "close" (formula "44") (ifseqformula "29"))
                                       )
                                    )
                                    (branch "self.electionID.length ≥ 1 FALSE"
                                       (rule "eqSymm" (formula "31"))
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "inEqSimp_geqRight" (formula "43"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_notGeq" (formula "32") (term "0"))
                                       (rule "mul_literals" (formula "32") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "32") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "32") (term "0,0"))
                                       (rule "ifthenelse_split" (formula "5") (term "0"))
                                       (branch "result_0.length ≥ 1 TRUE"
                                          (rule "replace_known_left" (formula "34") (term "0,1,1,0") (ifseqformula "5"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "inEqSimp_contradEq7" (formula "33") (term "1") (ifseqformula "5"))
                                          (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "33") (term "0,0,1"))
                                          (rule "leq_literals" (formula "33") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "inEqSimp_contradInEq1" (formula "33") (ifseqformula "5"))
                                          (rule "qeq_literals" (formula "33") (term "0"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "closeFalse" (formula "33"))
                                       )
                                       (branch "result_0.length ≥ 1 FALSE"
                                          (rule "replace_known_right" (formula "33") (term "0,1,1,0") (ifseqformula "44"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "inEqSimp_geqRight" (formula "44"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "true_left" (formula "33"))
                                          (rule "inEqSimp_homoInEq1" (formula "6"))
                                          (rule "times_zero_2" (formula "6") (term "1,0"))
                                          (rule "add_zero_right" (formula "6") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                          (rule "mul_literals" (formula "6") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "5"))
                                          (rule "qeq_literals" (formula "6") (term "0"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "closeFalse" (formula "6"))
                                       )
                                    )
                                 )
                                 (branch "CUT: result_2.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "commute_or_2" (formula "22") (term "0"))
                                    (rule "commute_or_2" (formula "32") (term "0"))
                                    (rule "arrayLengthIsAShort" (formula "5") (term "0"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "arrayLengthNotNegative" (formula "5") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "6"))
                                    (rule "leq_literals" (formula "5") (term "0"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "nnf_imp2or" (formula "17") (term "0"))
                                    (rule "nnf_imp2or" (formula "16") (term "0"))
                                    (rule "nnf_imp2or" (formula "15") (term "0"))
                                    (rule "nnf_imp2or" (formula "14") (term "0"))
                                    (rule "nnf_imp2or" (formula "13") (term "0"))
                                    (rule "nnf_imp2or" (formula "12") (term "0"))
                                    (rule "ifthenelse_split" (formula "31") (term "0"))
                                    (branch "self.electionID.length ≥ 1 TRUE"
                                       (rule "eqSymm" (formula "32"))
                                       (rule "applyEq" (formula "4") (term "0") (ifseqformula "32"))
                                       (rule "replace_known_left" (formula "62") (term "0,1") (ifseqformula "4"))
                                       (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "4")))
                                       (rule "applyEq" (formula "33") (term "1,1,0") (ifseqformula "32"))
                                       (rule "commute_or_2" (formula "28") (term "0"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch "self.electionID.<created> = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEqReverse" (formula "63") (term "1") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "62") (term "0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "62"))
                                          (rule "closeTrue" (formula "62"))
                                       )
                                       (branch "self.electionID.<created> = TRUE FALSE"
                                          (rule "referencedObjectIsCreatedRight" (formula "44") (ifseqformula "61"))
                                          (rule "close" (formula "44") (ifseqformula "29"))
                                       )
                                    )
                                    (branch "self.electionID.length ≥ 1 FALSE"
                                       (rule "eqSymm" (formula "31"))
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "inEqSimp_geqRight" (formula "43"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_notGeq" (formula "32") (term "0"))
                                       (rule "mul_literals" (formula "32") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "32") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "32") (term "0,0"))
                                       (rule "ifthenelse_split" (formula "5") (term "0"))
                                       (branch "result_0.length ≥ 1 TRUE"
                                          (rule "replace_known_left" (formula "34") (term "0,1,1,0") (ifseqformula "5"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "inEqSimp_contradEq7" (formula "33") (term "1") (ifseqformula "5"))
                                          (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "33") (term "0,0,1"))
                                          (rule "leq_literals" (formula "33") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "33"))
                                          (rule "qeq_literals" (formula "5") (term "0"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "closeFalse" (formula "5"))
                                       )
                                       (branch "result_0.length ≥ 1 FALSE"
                                          (rule "replace_known_right" (formula "33") (term "0,1,1,0") (ifseqformula "44"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "inEqSimp_geqRight" (formula "44"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "true_left" (formula "33"))
                                          (rule "inEqSimp_homoInEq1" (formula "6"))
                                          (rule "times_zero_2" (formula "6") (term "1,0"))
                                          (rule "add_zero_right" (formula "6") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                          (rule "mul_literals" (formula "6") (term "1"))
                                          (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "5") (term "0"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "closeFalse" (formula "5"))
                                       )
                                    )
                                 )
                              )
                           )
                           (branch "CUT: array2seq_1 = array2seq_0 FALSE"
                              (rule "applyEqReverse" (formula "24") (term "0") (ifseqformula "1") (userinteraction))
                              (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "12") (userinteraction))
                              (rule "array2seqDef" (formula "24") (term "0") (inst "u=u") (userinteraction))
                              (rule "array2seqDef" (formula "24") (term "1") (inst "u=u") (userinteraction))
                              (rule "equalityToSeqGetAndSeqLenRight" (formula "24") (inst "iv=iv") (userinteraction))
                              (rule "andRight" (formula "24") (userinteraction))
                              (branch "Case 1"
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "1") (ifseqformula "19"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "1") (ifseqformula "9"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,1") (ifseqformula "9"))
                                 (rule "eqSymm" (formula "13"))
                                 (rule "eqSymm" (formula "31"))
                                 (rule "eqSymm" (formula "17"))
                                 (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "30"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "27"))
                                 (builtin "One Step Simplification" (formula "11"))
                                 (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "25"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "lenOfSeqDef" (formula "24") (term "0"))
                                 (rule "eqSymm" (formula "24"))
                                 (rule "polySimp_elimSub" (formula "24") (term "1,1"))
                                 (rule "mul_literals" (formula "24") (term "1,1,1"))
                                 (rule "add_zero_right" (formula "24") (term "1,1"))
                                 (rule "inEqSimp_ltRight" (formula "29"))
                                 (rule "mul_literals" (formula "1") (term "0,0"))
                                 (rule "lenOfSeqDef" (formula "25") (term "0"))
                                 (rule "polySimp_elimSub" (formula "25") (term "1,0"))
                                 (rule "times_zero_2" (formula "25") (term "1,1,0"))
                                 (rule "add_zero_right" (formula "25") (term "1,0"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "closeTrue" (formula "25"))
                              )
                              (branch "Case 2"
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "1") (ifseqformula "19"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "1") (ifseqformula "9"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,1") (ifseqformula "9"))
                                 (rule "allRight" (formula "24") (inst "sk=iv_3"))
                                 (rule "impRight" (formula "24"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "eqSymm" (formula "19"))
                                 (rule "eqSymm" (formula "33"))
                                 (rule "eqSymm" (formula "15"))
                                 (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "32"))
                                 (builtin "One Step Simplification" (formula "7"))
                                 (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "29"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "27"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "getOfSeqDef" (formula "26") (term "1"))
                                 (rule "castDel" (formula "26") (term "1,1"))
                                 (rule "castDel" (formula "26") (term "2,1"))
                                 (rule "add_zero_right" (formula "26") (term "0,2,1,1"))
                                 (rule "replace_known_left" (formula "26") (term "0,0,1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "polySimp_elimSub" (formula "26") (term "1,0,1"))
                                 (rule "times_zero_2" (formula "26") (term "1,1,0,1"))
                                 (rule "add_zero_right" (formula "26") (term "1,0,1"))
                                 (rule "lenOfSeqDef" (formula "2") (term "1"))
                                 (rule "polySimp_elimSub" (formula "2") (term "1,1"))
                                 (rule "times_zero_2" (formula "2") (term "1,1,1"))
                                 (rule "add_zero_right" (formula "2") (term "1,1"))
                                 (rule "inEqSimp_ltRight" (formula "31"))
                                 (rule "mul_literals" (formula "1") (term "0,0"))
                                 (rule "getOfSeqDef" (formula "27") (term "0"))
                                 (rule "castDel" (formula "27") (term "1,0"))
                                 (rule "castDel" (formula "27") (term "2,0"))
                                 (rule "add_zero_right" (formula "27") (term "0,2,1,0"))
                                 (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "polySimp_elimSub" (formula "27") (term "1,0,0"))
                                 (rule "times_zero_2" (formula "27") (term "1,1,0,0"))
                                 (rule "add_zero_right" (formula "27") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3") (term "0,1"))
                                 (rule "add_zero_right" (formula "3") (term "0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "27") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0"))
                                 (rule "eqSymm" (formula "27"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,1"))
                                 (rule "eqSymm" (formula "27"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "2"))
                                 (rule "applyEq" (formula "25") (term "0,1") (ifseqformula "4"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "0,0,1"))
                                 (rule "polySimp_elimOne" (formula "27") (term "0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "27") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0,0,0"))
                                 (rule "inEqSimp_subsumption1" (formula "3") (term "0,0") (ifseqformula "1"))
                                 (rule "leq_literals" (formula "3") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "replace_known_left" (formula "27") (term "0,1") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "3")))
                                 (rule "array2seqDef" (formula "15") (term "0") (inst "u=u"))
                                 (rule "array2seqDef" (formula "25") (term "0") (inst "u=u"))
                                 (rule "array2seqDef" (formula "4") (term "0") (inst "u=u"))
                                 (rule "array2seqDef" (formula "20") (term "1") (inst "u=u"))
                                 (rule "eqSymm" (formula "20"))
                                 (rule "array2seqDef" (formula "33") (term "0") (inst "u=u"))
                                 (rule "array2seqDef" (formula "16") (term "0") (inst "u=u"))
                                 (rule "array2seqDef" (formula "20") (term "1") (inst "u=u"))
                                 (rule "eqSymm" (formula "20"))
                                 (rule "equalityToSeqGetAndSeqLenRight" (formula "33") (inst "iv=iv"))
                                 (rule "getOfSeqDef" (formula "33") (term "0,1,0,1"))
                                 (rule "castDel" (formula "33") (term "2,0,1,0,1"))
                                 (rule "castDel" (formula "33") (term "1,0,1,0,1"))
                                 (rule "add_zero_right" (formula "33") (term "0,2,1,0,1,0,1"))
                                 (rule "polySimp_elimSub" (formula "33") (term "1,1,0,0,1,0,1"))
                                 (rule "mul_literals" (formula "33") (term "1,1,1,0,0,1,0,1"))
                                 (rule "add_zero_right" (formula "33") (term "1,1,0,0,1,0,1"))
                                 (rule "lenOfSeqDef" (formula "33") (term "0,0"))
                                 (rule "polySimp_elimSub" (formula "33") (term "1,0,0"))
                                 (rule "mul_literals" (formula "33") (term "1,1,0,0"))
                                 (rule "add_zero_right" (formula "33") (term "1,0,0"))
                                 (rule "lenOfSeqDef" (formula "33") (term "1,1,0,0,1"))
                                 (rule "polySimp_elimSub" (formula "33") (term "1,1,1,0,0,1"))
                                 (rule "times_zero_2" (formula "33") (term "1,1,1,1,0,0,1"))
                                 (rule "add_zero_right" (formula "33") (term "1,1,1,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,1,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0,0"))
                                 (rule "add_zero_right" (formula "33") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "33") (term "0,1,1,0,0,1"))
                                 (rule "add_zero_right" (formula "33") (term "0,0,1,1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,1,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,1,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,1,0,1"))
                                 (rule "mul_literals" (formula "33") (term "0,1,1,0,0,1,0,1"))
                                 (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,1,0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "33") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,1"))
                                 (rule "mul_literals" (formula "33") (term "0,1,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "0,1,1,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "0,0,1,1,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "33") (term "0,0,1,1,1,0,0,1"))
                                 (rule "eqSeqDef2" (formula "4") (inst "iv=iv") (ifseqformula "4"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "eqSeqDef2" (formula "14") (inst "iv=iv") (ifseqformula "14"))
                                 (builtin "One Step Simplification" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "eqSeqDef2" (formula "23") (inst "iv=iv") (ifseqformula "23"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "true_left" (formula "23"))
                                 (rule "eqSeqDef" (formula "18") (inst "iv=iv"))
                                 (rule "andLeft" (formula "18"))
                                 (rule "lenOfSeqDef" (formula "18") (term "1"))
                                 (rule "polySimp_elimSub" (formula "18") (term "1,1"))
                                 (rule "times_zero_2" (formula "18") (term "1,1,1"))
                                 (rule "add_zero_right" (formula "18") (term "1,1"))
                                 (rule "lenOfSeqDef" (formula "18") (term "0"))
                                 (rule "polySimp_elimSub" (formula "18") (term "1,0"))
                                 (rule "mul_literals" (formula "18") (term "1,1,0"))
                                 (rule "add_zero_right" (formula "18") (term "1,0"))
                                 (rule "getOfSeqDef" (formula "19") (term "0,1,0"))
                                 (rule "castDel" (formula "19") (term "2,0,1,0"))
                                 (rule "castDel" (formula "19") (term "1,0,1,0"))
                                 (rule "add_zero_right" (formula "19") (term "0,2,1,0,1,0"))
                                 (rule "eqSymm" (formula "19") (term "1,0"))
                                 (rule "polySimp_elimSub" (formula "19") (term "1,1,0,1,1,0"))
                                 (rule "times_zero_2" (formula "19") (term "1,1,1,0,1,1,0"))
                                 (rule "add_zero_right" (formula "19") (term "1,1,0,1,1,0"))
                                 (rule "lenOfSeqDef" (formula "19") (term "1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "19") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "19") (term "1,1,1,1,0,0"))
                                 (rule "add_zero_right" (formula "19") (term "1,1,1,0,0"))
                                 (rule "getOfSeqDef" (formula "19") (term "0,1,0"))
                                 (rule "castDel" (formula "19") (term "1,0,1,0"))
                                 (rule "castDel" (formula "19") (term "2,0,1,0"))
                                 (rule "add_zero_right" (formula "19") (term "0,2,1,0,1,0"))
                                 (rule "eqSymm" (formula "19") (term "1,0"))
                                 (rule "polySimp_elimSub" (formula "19") (term "1,1,0,1,1,0"))
                                 (rule "times_zero_2" (formula "19") (term "1,1,1,0,1,1,0"))
                                 (rule "add_zero_right" (formula "19") (term "1,1,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1"))
                                 (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0"))
                                 (rule "add_zero_right" (formula "18") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1,1,0,0"))
                                 (rule "add_zero_right" (formula "19") (term "0,0,1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,1,0"))
                                 (rule "eqSymm" (formula "19") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,1,0"))
                                 (rule "eqSymm" (formula "19") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,1,1,0"))
                                 (rule "apply_eq_monomials" (formula "19") (term "1,0,0,1,0,0") (ifseqformula "18"))
                                 (rule "polySimp_rightDist" (formula "19") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,0,1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "19") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "19") (term "1,1,1,0,0,1,0,0"))
                                 (rule "times_zero_1" (formula "19") (term "1,1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "19") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "0,0,1"))
                                 (rule "polySimp_elimOne" (formula "18") (term "0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,1,0"))
                                 (rule "eqSymm" (formula "19") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,1,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,1,1,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,1,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,1,0"))
                                 (rule "eqSymm" (formula "19") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,1,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,1,1,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,1,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,1,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "0,0,1,1,1,0,0"))
                                 (rule "eqSeqDef2" (formula "14") (inst "iv=iv") (ifseqformula "14"))
                                 (builtin "One Step Simplification" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_11"))
                                 (rule "applyEq" (formula "19") (term "0,1,1,1,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "18") (term "0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "19") (term "1,1,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "18") (term "0,1,0") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")) (ifInst ""  (formula "6")))
                                 (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "19") (term "0,1,1,1,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "18") (term "0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "19") (term "1,1,0,1,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "18") (term "0,1,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "24") (term "1") (inst "selectSK=arr_163"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")) (ifInst ""  (formula "8")))
                                 (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "narrowSelectArrayType" (formula "24") (term "1") (ifseqformula "15") (ifseqformula "29"))
                                 (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=arr_164"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                                 (rule "replaceKnownSelect_taclet11000010010_2" (formula "1") (term "2,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet11000010010_3" (formula "1") (term "2,0"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "12"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "8"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "narrowSelectArrayType" (formula "24") (term "0") (ifseqformula "15") (ifseqformula "29"))
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "closeTrue" (formula "24"))
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "andRight" (formula "28") (userinteraction))
                           (branch "Case 1"
                              (rule "applyEq" (formula "28") (term "0") (ifseqformula "20") (userinteraction))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "closeTrue" (formula "28") (userinteraction))
                           )
                           (branch "Case 2"
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "10") (term "1") (ifseqformula "8"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "1") (ifseqformula "17"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "0,1") (ifseqformula "8"))
                              (rule "eqSymm" (formula "15"))
                              (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "21"))
                              (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "22")))
                              (rule "closeTrue" (formula "28"))
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "10") (term "1") (ifseqformula "8"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "1") (ifseqformula "17"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "0,1") (ifseqformula "8"))
                        (rule "allRight" (formula "28") (inst "sk=f_17"))
                        (rule "allRight" (formula "28") (inst "sk=o_17"))
                        (rule "orRight" (formula "28"))
                        (rule "eqSymm" (formula "15"))
                        (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "27"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "24"))
                        (builtin "One Step Simplification" (formula "10"))
                        (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "22"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "inEqSimp_ltRight" (formula "26"))
                        (rule "mul_literals" (formula "1") (term "0,0"))
                        (rule "applyEq" (formula "16") (term "1") (ifseqformula "12"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "array2seqDef" (formula "21") (term "0") (inst "u=u"))
                        (rule "array2seqDef" (formula "12") (term "0,1") (inst "u=u"))
                        (rule "eqSymm" (formula "12"))
                        (rule "array2seqDef" (formula "21") (term "0,1") (inst "u=u"))
                        (rule "array2seqDef" (formula "16") (term "0") (inst "u=u"))
                        (rule "array2seqDef" (formula "16") (term "0,1") (inst "u=u"))
                        (rule "array2seqDef" (formula "12") (term "1") (inst "u=u"))
                        (rule "eqSymm" (formula "12"))
                        (rule "eqSeqDef2" (formula "21") (inst "iv=iv") (ifseqformula "21"))
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "true_left" (formula "21"))
                        (rule "eqSeqDef2" (formula "16") (inst "iv=iv") (ifseqformula "12"))
                        (rule "andLeft" (formula "16"))
                        (rule "getOfSeqDef" (formula "17") (term "0,1,0"))
                        (rule "castDel" (formula "17") (term "2,0,1,0"))
                        (rule "castDel" (formula "17") (term "1,0,1,0"))
                        (rule "add_zero_right" (formula "17") (term "0,2,1,0,1,0"))
                        (rule "eqSymm" (formula "17") (term "1,0"))
                        (rule "polySimp_elimSub" (formula "17") (term "1,1,0,1,1,0"))
                        (rule "times_zero_2" (formula "17") (term "1,1,1,0,1,1,0"))
                        (rule "add_zero_right" (formula "17") (term "1,1,0,1,1,0"))
                        (rule "lenOfSeqDef" (formula "16") (term "0"))
                        (rule "eqSymm" (formula "16"))
                        (rule "polySimp_elimSub" (formula "16") (term "1,1"))
                        (rule "times_zero_2" (formula "16") (term "1,1,1"))
                        (rule "add_zero_right" (formula "16") (term "1,1"))
                        (rule "lenOfSeqDef" (formula "17") (term "1,1,0,0"))
                        (rule "polySimp_elimSub" (formula "17") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "17") (term "1,1,1,1,0,0"))
                        (rule "add_zero_right" (formula "17") (term "1,1,1,0,0"))
                        (rule "getOfSeqDef" (formula "17") (term "0,1,0"))
                        (rule "castDel" (formula "17") (term "2,0,1,0"))
                        (rule "castDel" (formula "17") (term "1,0,1,0"))
                        (rule "add_zero_right" (formula "17") (term "0,2,1,0,1,0"))
                        (rule "eqSymm" (formula "17") (term "1,0"))
                        (rule "polySimp_elimSub" (formula "17") (term "1,1,0,1,1,0"))
                        (rule "times_zero_2" (formula "17") (term "1,1,1,0,1,1,0"))
                        (rule "add_zero_right" (formula "17") (term "1,1,0,1,1,0"))
                        (rule "lenOfSeqDef" (formula "16") (term "0"))
                        (rule "eqSymm" (formula "16"))
                        (rule "polySimp_elimSub" (formula "16") (term "1,1"))
                        (rule "times_zero_2" (formula "16") (term "1,1,1"))
                        (rule "add_zero_right" (formula "16") (term "1,1"))
                        (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1,1,0,0"))
                        (rule "add_zero_right" (formula "17") (term "0,0,1,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0"))
                        (rule "eqSymm" (formula "17") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0"))
                        (rule "add_zero_right" (formula "16") (term "0,0,0"))
                        (rule "eqSymm" (formula "16"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0"))
                        (rule "eqSymm" (formula "17") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0"))
                        (rule "add_zero_right" (formula "16") (term "0,0,0"))
                        (rule "eqSymm" (formula "16"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,0"))
                        (rule "apply_eq_monomials" (formula "17") (term "1,0,0,1,0,0") (ifseqformula "16"))
                        (rule "polySimp_rightDist" (formula "17") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0,0,1,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "17") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "17") (term "1,1,1,0,0,1,0,0"))
                        (rule "times_zero_1" (formula "17") (term "1,1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "17") (term "1,0,0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1,0"))
                        (rule "eqSymm" (formula "17") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,1,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,1,1,0"))
                        (rule "mul_literals" (formula "17") (term "0,1,1,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,1,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0"))
                        (rule "eqSymm" (formula "16"))
                        (rule "polySimp_elimOne" (formula "16") (term "0,0,1"))
                        (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0") (ifseqformula "16"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1,0"))
                        (rule "eqSymm" (formula "17") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,1,0,1,1,0"))
                        (rule "mul_literals" (formula "17") (term "0,1,1,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,1,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0"))
                        (rule "eqSymm" (formula "16"))
                        (rule "polySimp_elimOne" (formula "16") (term "0,0,1"))
                        (rule "apply_eq_monomials" (formula "17") (term "1,0,0,1,0,0") (ifseqformula "16"))
                        (rule "polySimp_rightDist" (formula "17") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0,0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "17") (term "1,0,1,0,0,1,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "17") (term "1,0,0,1,0,0"))
                        (rule "add_literals" (formula "17") (term "1,1,1,0,0,1,0,0"))
                        (rule "times_zero_1" (formula "17") (term "1,1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "17") (term "1,0,0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                        (rule "eqSeqDef2" (formula "12") (inst "iv=iv") (ifseqformula "12"))
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "true_left" (formula "12"))
                        (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_7"))
                        (rule "applyEq" (formula "16") (term "0,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "17") (term "1,1,0,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "17") (term "0,1,1,1,0,0,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "16") (term "0,0,0,0") (ifseqformula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")) (ifInst ""  (formula "4")))
                        (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "16") (term "0,1,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "17") (term "1,1,0,1,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "17") (term "0,1,1,1,0,0,1,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "16") (term "0,0,0,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=f_17_0"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "10"))
                        (rule "eqSymm" (formula "29"))
                        (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_17_1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "nnf_imp2or" (formula "17") (term "0"))
                        (rule "nnf_notAnd" (formula "17") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                        (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                        (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                        (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "22") (ifseqformula "5"))
                        (rule "andLeft" (formula "22"))
                        (rule "notLeft" (formula "23"))
                        (rule "andLeft" (formula "22"))
                        (rule "notLeft" (formula "23"))
                        (rule "andLeft" (formula "22"))
                        (rule "andLeft" (formula "22"))
                        (rule "notLeft" (formula "24"))
                        (rule "andLeft" (formula "22"))
                        (rule "notLeft" (formula "24"))
                        (rule "andLeft" (formula "22"))
                        (rule "andLeft" (formula "22"))
                        (rule "andLeft" (formula "22"))
                        (rule "andLeft" (formula "22"))
                        (rule "andLeft" (formula "22"))
                        (rule "andLeft" (formula "22"))
                        (rule "notLeft" (formula "22"))
                        (rule "notLeft" (formula "22"))
                        (rule "nonNull" (formula "27") (inst "i=i"))
                        (rule "sub_literals" (formula "27") (term "2,1,0,1,1"))
                        (builtin "One Step Simplification" (formula "27"))
                        (rule "greater_literals" (formula "27") (term "0,1"))
                        (builtin "One Step Simplification" (formula "27"))
                        (rule "andLeft" (formula "27"))
                        (rule "notLeft" (formula "27"))
                        (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                        (rule "nonNull" (formula "26") (inst "i=i"))
                        (rule "greater_literals" (formula "26") (term "0,1"))
                        (builtin "One Step Simplification" (formula "26"))
                        (rule "sub_literals" (formula "26") (term "2,1,0,1"))
                        (builtin "One Step Simplification" (formula "26"))
                        (rule "andLeft" (formula "26"))
                        (rule "notLeft" (formula "26"))
                        (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                        (rule "nonNull" (formula "25") (inst "i=i"))
                        (rule "greater_literals" (formula "25") (term "0,1"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "sub_literals" (formula "25") (term "2,1,0,1"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "andLeft" (formula "25"))
                        (rule "notLeft" (formula "25"))
                        (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                        (rule "nonNull" (formula "24") (inst "i=i"))
                        (rule "greater_literals" (formula "24") (term "0,1"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "sub_literals" (formula "24") (term "2,1,0,1"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "andLeft" (formula "24"))
                        (rule "notLeft" (formula "24"))
                        (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                        (rule "nonNull" (formula "23") (inst "i=i"))
                        (rule "greater_literals" (formula "23") (term "0,1"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "sub_literals" (formula "23") (term "2,1,0,1"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "andLeft" (formula "23"))
                        (rule "notLeft" (formula "23"))
                        (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                        (rule "nonNull" (formula "22") (inst "i=i"))
                        (rule "sub_literals" (formula "22") (term "2,1,0,1,1"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "greater_literals" (formula "22") (term "0,1"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "andLeft" (formula "22"))
                        (rule "notLeft" (formula "22"))
                        (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                        (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_8"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                        (rule "replaceKnownSelect_taclet10010010_0" (formula "1") (term "2,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10010010_1" (formula "1") (term "2,0"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "11"))
                        (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_6"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "11"))
                        (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")) (ifInst ""  (formula "5")))
                        (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_6"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "11"))
                        (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")) (ifInst ""  (formula "5")))
                        (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_6"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "11"))
                        (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")) (ifInst ""  (formula "5")))
                        (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_6"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "11"))
                        (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")) (ifInst ""  (formula "5")))
                        (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_6"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "11"))
                        (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")) (ifInst ""  (formula "5")))
                        (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "27") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_6"))
                        (rule "applyEq" (formula "34") (term "0") (ifseqformula "27"))
                        (rule "applyEq" (formula "28") (term "0,1,1,1,0,0") (ifseqformula "27"))
                        (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "19"))
                        (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "41")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,0,0") (ifseqformula "10"))
                        (rule "replace_known_left" (formula "27") (term "0,0,0,0") (ifseqformula "4"))
                        (builtin "One Step Simplification" (formula "27"))
                        (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "10"))
                        (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "41")) (ifInst ""  (formula "4")))
                        (rule "applyEqReverse" (formula "28") (term "1,0,0,1,0") (ifseqformula "27"))
                        (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "27"))
                        (rule "applyEqReverse" (formula "28") (term "0,1,1,1,0,0") (ifseqformula "27"))
                        (rule "hideAuxiliaryEq" (formula "27"))
                        (rule "pullOutSelect" (formula "26") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_6"))
                        (rule "applyEq" (formula "33") (term "0") (ifseqformula "26"))
                        (rule "applyEq" (formula "27") (term "0,1,1,1,0,0") (ifseqformula "26"))
                        (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "19"))
                        (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "41")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,0,0") (ifseqformula "10"))
                        (rule "replace_known_left" (formula "26") (term "0,0,0,0") (ifseqformula "4"))
                        (builtin "One Step Simplification" (formula "26"))
                        (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "10"))
                        (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "41")) (ifInst ""  (formula "4")))
                        (rule "applyEqReverse" (formula "27") (term "1,0,0,1,0") (ifseqformula "26"))
                        (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "26"))
                        (rule "applyEqReverse" (formula "27") (term "0,1,1,1,0,0") (ifseqformula "26"))
                        (rule "hideAuxiliaryEq" (formula "26"))
                        (rule "pullOutSelect" (formula "25") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_6"))
                        (rule "applyEq" (formula "32") (term "0") (ifseqformula "25"))
                        (rule "applyEq" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "25"))
                        (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "19"))
                        (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "41")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,0,0") (ifseqformula "10"))
                        (rule "replace_known_left" (formula "25") (term "0,0,0,0") (ifseqformula "4"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "10"))
                        (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "41")) (ifInst ""  (formula "4")))
                        (rule "applyEqReverse" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "25"))
                        (rule "applyEqReverse" (formula "26") (term "1,0,0,1,0") (ifseqformula "25"))
                        (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "25"))
                        (rule "hideAuxiliaryEq" (formula "25"))
                        (rule "pullOutSelect" (formula "24") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_6"))
                        (rule "applyEq" (formula "31") (term "0") (ifseqformula "24"))
                        (rule "applyEq" (formula "25") (term "0,1,1,1,0,0") (ifseqformula "24"))
                        (rule "simplifySelectOfAnonEQ" (formula "24") (ifseqformula "19"))
                        (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "41")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,0,0") (ifseqformula "10"))
                        (rule "replace_known_left" (formula "24") (term "0,0,0,0") (ifseqformula "4"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "simplifySelectOfAnonEQ" (formula "24") (ifseqformula "10"))
                        (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "41")) (ifInst ""  (formula "4")))
                        (rule "applyEqReverse" (formula "25") (term "1,0,0,1,0") (ifseqformula "24"))
                        (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "24"))
                        (rule "applyEqReverse" (formula "25") (term "0,1,1,1,0,0") (ifseqformula "24"))
                        (rule "hideAuxiliaryEq" (formula "24"))
                        (rule "pullOutSelect" (formula "23") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_6"))
                        (rule "applyEq" (formula "24") (term "0,1,1,1,0,0") (ifseqformula "23"))
                        (rule "applyEq" (formula "30") (term "0") (ifseqformula "23"))
                        (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "19"))
                        (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "41")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "0,0,0") (ifseqformula "10"))
                        (rule "replace_known_left" (formula "23") (term "0,0,0,0") (ifseqformula "4"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "10"))
                        (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "41")) (ifInst ""  (formula "4")))
                        (rule "applyEqReverse" (formula "24") (term "1,0,0,1,0") (ifseqformula "23"))
                        (rule "applyEqReverse" (formula "24") (term "0,1,1,1,0,0") (ifseqformula "23"))
                        (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "23"))
                        (rule "hideAuxiliaryEq" (formula "23"))
                        (rule "pullOutSelect" (formula "22") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_6"))
                        (rule "applyEq" (formula "23") (term "0,1,1,1,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "29") (term "0") (ifseqformula "22"))
                        (rule "simplifySelectOfAnonEQ" (formula "22") (ifseqformula "19"))
                        (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "41")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "0,0,0") (ifseqformula "10"))
                        (rule "replace_known_left" (formula "22") (term "0,0,0,0") (ifseqformula "4"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "simplifySelectOfAnonEQ" (formula "22") (ifseqformula "10"))
                        (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "41")) (ifInst ""  (formula "4")))
                        (rule "applyEqReverse" (formula "23") (term "1,0,0,1,0") (ifseqformula "22"))
                        (rule "applyEqReverse" (formula "23") (term "0,1,1,1,0,0") (ifseqformula "22"))
                        (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "22"))
                        (rule "hideAuxiliaryEq" (formula "22"))
                        (rule "nnf_imp2or" (formula "27") (term "0"))
                        (rule "nnf_imp2or" (formula "26") (term "0"))
                        (rule "nnf_imp2or" (formula "25") (term "0"))
                        (rule "nnf_imp2or" (formula "24") (term "0"))
                        (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "13") (ifseqformula "5"))
                        (rule "replaceKnownSelect_taclet10010010_0" (formula "13") (term "0,0,1"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10010010_1" (formula "13") (term "0,0,1"))
                        (rule "replaceKnownSelect_taclet10010010_8" (formula "13") (term "0,0,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10010010_9" (formula "13") (term "0,0,1,0"))
                        (rule "replaceKnownSelect_taclet10010010_11" (formula "13") (term "0,0,1,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10010010_12" (formula "13") (term "0,0,1,0,0"))
                        (rule "replaceKnownSelect_taclet10010010_23" (formula "13") (term "1,1,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet10010010_14" (formula "13") (term "0,0,1,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10010010_24" (formula "13") (term "1,1,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10010010_15" (formula "13") (term "0,0,1,0,0,0"))
                        (rule "replaceKnownSelect_taclet10010010_26" (formula "13") (term "1,1,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet10010010_29" (formula "13") (term "1,1,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10010010_27" (formula "13") (term "1,1,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet10010010_32" (formula "13") (term "1,1,0,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10010010_30" (formula "13") (term "1,1,0,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet10010010_35" (formula "13") (term "1,1,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10010010_33" (formula "13") (term "1,1,0,0,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet10010010_38" (formula "13") (term "1,1,0,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10010010_36" (formula "13") (term "1,1,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10010010_39" (formula "13") (term "1,1,0,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet10010010_17" (formula "13") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownSelect_taclet10010010_20" (formula "13") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10010010_18" (formula "13") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet10010010_21" (formula "13") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                        (rule "andLeft" (formula "13"))
                        (rule "andLeft" (formula "13"))
                        (rule "notLeft" (formula "15"))
                        (rule "notLeft" (formula "14"))
                        (rule "andLeft" (formula "13"))
                        (rule "notLeft" (formula "14"))
                        (rule "andLeft" (formula "13"))
                        (rule "notLeft" (formula "14"))
                        (rule "andLeft" (formula "13"))
                        (rule "andLeft" (formula "13"))
                        (rule "andLeft" (formula "13"))
                        (rule "andLeft" (formula "13"))
                        (rule "andLeft" (formula "13"))
                        (rule "andLeft" (formula "13"))
                        (rule "andLeft" (formula "13"))
                        (rule "notLeft" (formula "14"))
                        (rule "notLeft" (formula "13"))
                        (rule "nonNull" (formula "18") (inst "i=i"))
                        (rule "sub_literals" (formula "18") (term "2,1,0,1,1"))
                        (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "38")))
                        (rule "greater_literals" (formula "18") (term "0"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                        (rule "nonNull" (formula "17") (inst "i=i"))
                        (rule "sub_literals" (formula "17") (term "2,1,0,1,1"))
                        (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "37")))
                        (rule "greater_literals" (formula "17") (term "0"))
                        (builtin "One Step Simplification" (formula "17"))
                        (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                        (rule "nonNull" (formula "16") (inst "i=i"))
                        (rule "greater_literals" (formula "16") (term "0,1"))
                        (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "36")))
                        (rule "sub_literals" (formula "16") (term "2,1,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                        (rule "nonNull" (formula "15") (inst "i=i"))
                        (rule "greater_literals" (formula "15") (term "0,1"))
                        (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "35")))
                        (rule "sub_literals" (formula "15") (term "2,1,0"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                        (rule "nonNull" (formula "14") (inst "i=i"))
                        (rule "greater_literals" (formula "14") (term "0,1"))
                        (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "34")))
                        (rule "sub_literals" (formula "14") (term "2,1,0"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                        (rule "nonNull" (formula "13") (inst "i=i"))
                        (rule "sub_literals" (formula "13") (term "2,1,0,1,1"))
                        (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "33")))
                        (rule "greater_literals" (formula "13") (term "0"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                        (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "8") (ifseqformula "5"))
                        (rule "andLeft" (formula "8"))
                        (rule "notLeft" (formula "9"))
                        (rule "andLeft" (formula "8"))
                        (rule "notLeft" (formula "9"))
                        (rule "andLeft" (formula "8"))
                        (rule "notLeft" (formula "9"))
                        (rule "andLeft" (formula "8"))
                        (rule "notLeft" (formula "9"))
                        (rule "andLeft" (formula "8"))
                        (rule "andLeft" (formula "8"))
                        (rule "andLeft" (formula "8"))
                        (rule "andLeft" (formula "8"))
                        (rule "andLeft" (formula "8"))
                        (rule "andLeft" (formula "8"))
                        (rule "andLeft" (formula "8"))
                        (rule "notLeft" (formula "9"))
                        (rule "notLeft" (formula "8"))
                        (rule "nonNull" (formula "13") (inst "i=i"))
                        (rule "sub_literals" (formula "13") (term "2,1,0,1,1"))
                        (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "43")))
                        (rule "greater_literals" (formula "13") (term "0"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "narrowSelectArrayType" (formula "13") (term "0,0,1,0") (ifseqformula "24") (ifseqformula "43"))
                        (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                        (rule "nonNull" (formula "12") (inst "i=i"))
                        (rule "greater_literals" (formula "12") (term "0,1"))
                        (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "42")))
                        (rule "sub_literals" (formula "12") (term "2,1,0"))
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "24") (ifseqformula "42"))
                        (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                        (rule "nonNull" (formula "11") (inst "i=i"))
                        (rule "greater_literals" (formula "11") (term "0,1"))
                        (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "41")))
                        (rule "sub_literals" (formula "11") (term "2,1,0"))
                        (builtin "One Step Simplification" (formula "11"))
                        (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "24") (ifseqformula "41"))
                        (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                        (rule "nonNull" (formula "10") (inst "i=i"))
                        (rule "greater_literals" (formula "10") (term "0,1"))
                        (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "40")))
                        (rule "sub_literals" (formula "10") (term "2,1,0"))
                        (builtin "One Step Simplification" (formula "10"))
                        (rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "24") (ifseqformula "40"))
                        (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                        (rule "nonNull" (formula "9") (inst "i=i"))
                        (rule "greater_literals" (formula "9") (term "0,1"))
                        (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "39")))
                        (rule "sub_literals" (formula "9") (term "2,1,0"))
                        (builtin "One Step Simplification" (formula "9"))
                        (rule "narrowSelectArrayType" (formula "9") (term "0,0,1,0") (ifseqformula "24") (ifseqformula "39"))
                        (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                        (rule "nonNull" (formula "8") (inst "i=i"))
                        (rule "greater_literals" (formula "8") (term "0,1"))
                        (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "38")))
                        (rule "sub_literals" (formula "8") (term "2,1,0"))
                        (builtin "One Step Simplification" (formula "8"))
                        (rule "narrowSelectArrayType" (formula "8") (term "0,0,1,0") (ifseqformula "24") (ifseqformula "38"))
                        (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
                        (rule "nnf_imp2or" (formula "33") (term "0"))
                        (rule "nnf_imp2or" (formula "32") (term "0"))
                        (rule "commute_or_2" (formula "27") (term "0"))
                        (rule "nnf_notAnd" (formula "37") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0"))
                        (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "37") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0"))
                        (rule "mul_literals" (formula "37") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "37") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "37") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "36") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0"))
                        (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "36") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0"))
                        (rule "mul_literals" (formula "36") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "36") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "36") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "35") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0"))
                        (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "35") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
                        (rule "mul_literals" (formula "35") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "35") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "34") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "34") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0"))
                        (rule "mul_literals" (formula "34") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "34") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
                        (rule "mul_literals" (formula "34") (term "1,0,0,0"))
                        (rule "nnf_imp2or" (formula "23") (term "0"))
                        (rule "nnf_imp2or" (formula "22") (term "0"))
                        (rule "nnf_imp2or" (formula "21") (term "0"))
                        (rule "nnf_imp2or" (formula "20") (term "0"))
                        (rule "nnf_imp2or" (formula "19") (term "0"))
                        (rule "nnf_imp2or" (formula "18") (term "0"))
                        (rule "cut_direct" (formula "54") (term "0,0"))
                        (branch "CUT: o_17 = null TRUE"
                           (builtin "One Step Simplification" (formula "55"))
                           (rule "false_right" (formula "55"))
                           (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "55")))
                           (rule "closeFalse" (formula "2"))
                        )
                        (branch "CUT: o_17 = null FALSE"
                           (builtin "One Step Simplification" (formula "55"))
                           (rule "notRight" (formula "55"))
                           (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "55")) (ifInst ""  (formula "56")))
                           (rule "closeFalse" (formula "2"))
                        )
                     )
                  )
                  (branch " array2seq(heapAfter_getPayLoad, result_0) = array2seq(heapAfter_getPayLoad, self.electionID@heapAfter_getPayLoad) FALSE"
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "closeFalse" (formula "15") (userinteraction))
                  )
               )
               (branch "Exceptional Post (getSignature)"
                  (builtin "One Step Simplification" (formula "9"))
                  (builtin "One Step Simplification" (formula "7"))
                  (builtin "One Step Simplification" (formula "5"))
                  (builtin "One Step Simplification" (formula "1"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "notLeft" (formula "2"))
                  (rule "andLeft" (formula "2"))
                  (rule "andLeft" (formula "9"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "10") (term "1,0") (ifseqformula "9"))
                  (rule "andLeft" (formula "7"))
                  (rule "andLeft" (formula "5"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "0,1,0") (ifseqformula "5"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "6") (term "1,1,0") (ifseqformula "5"))
                  (rule "andLeft" (formula "3"))
                  (rule "andLeft" (formula "2"))
                  (rule "andLeft" (formula "11"))
                  (rule "andLeft" (formula "15"))
                  (rule "andLeft" (formula "8"))
                  (rule "notLeft" (formula "5"))
                  (rule "andLeft" (formula "2"))
                  (rule "andLeft" (formula "16"))
                  (rule "andLeft" (formula "18"))
                  (rule "andLeft" (formula "9"))
                  (rule "andLeft" (formula "8"))
                  (rule "typeEqDerived" (formula "11") (term "0,1,1,1") (ifseqformula "8"))
                  (rule "typeEqDerived" (formula "11") (term "0,1,0,1,1") (ifseqformula "8"))
                  (rule "typeEqDerived" (formula "11") (term "0,0,0,1,1") (ifseqformula "8"))
                  (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "8")))
                  (rule "true_left" (formula "11"))
                  (rule "andLeft" (formula "2"))
                  (rule "notLeft" (formula "18"))
                  (rule "andLeft" (formula "2"))
                  (rule "andLeft" (formula "2"))
                  (rule "notLeft" (formula "2"))
                  (rule "eqSymm" (formula "25") (term "1,0,0,1,0,1"))
                  (rule "eqSymm" (formula "25") (term "0,1,0,0,0,1"))
                  (rule "eqSymm" (formula "14") (term "0,1"))
                  (rule "eqSymm" (formula "14") (term "0,0,0,1"))
                  (rule "replace_known_left" (formula "15") (term "0,0,1") (ifseqformula "1"))
                  (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "13")))
                  (rule "notLeft" (formula "15"))
                  (rule "orRight" (formula "20"))
                  (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "23"))
                  (builtin "One Step Simplification" (formula "18"))
                  (rule "true_left" (formula "18"))
                  (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "9"))
                  (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "19")))
                  (rule "andLeft" (formula "11"))
                  (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "25"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "replace_known_left" (formula "15") (term "1,1") (ifseqformula "14"))
                  (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "20")) (ifInst ""  (formula "21")))
                  (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "20"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "23"))
                  (builtin "One Step Simplification" (formula "19"))
                  (rule "andLeft" (formula "19"))
                  (rule "inEqSimp_ltRight" (formula "25"))
                  (rule "mul_literals" (formula "1") (term "0,0"))
                  (rule "applyEq" (formula "16") (term "1") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "applyEq" (formula "16") (term "1") (ifseqformula "12"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "array2seqDef" (formula "27") (term "0,0,1,1,0,0,0,1") (inst "u=u"))
                  (rule "array2seqDef" (formula "27") (term "0,1,0,1,1,0,0,0,1") (inst "u=u"))
                  (rule "array2seqDef" (formula "27") (term "0,1,0,1,0,0,0,1") (inst "u=u"))
                  (rule "eqSymm" (formula "27") (term "0,1,0,0,0,1"))
                  (rule "array2seqDef" (formula "12") (term "0") (inst "u=u"))
                  (rule "array2seqDef" (formula "12") (term "0,1") (inst "u=u"))
                  (rule "array2seqDef" (formula "16") (term "0") (inst "u=u"))
                  (rule "array2seqDef" (formula "16") (term "0,1") (inst "u=u"))
                  (rule "array2seqDef" (formula "27") (term "1,0,1,0,0,0,1") (inst "u=u"))
                  (rule "eqSymm" (formula "27") (term "0,1,0,0,0,1"))
                  (rule "eqSeqDef2" (formula "12") (inst "iv=iv") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "eqSeqDef2" (formula "15") (inst "iv=iv") (ifseqformula "15"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "true_left" (formula "15"))
                  (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_5"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")) (ifInst ""  (formula "4")))
                  (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "7") (ifseqformula "4"))
                  (rule "andLeft" (formula "7"))
                  (rule "notLeft" (formula "8"))
                  (rule "andLeft" (formula "7"))
                  (rule "notLeft" (formula "8"))
                  (rule "andLeft" (formula "7"))
                  (rule "notLeft" (formula "8"))
                  (rule "andLeft" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "notLeft" (formula "9"))
                  (rule "andLeft" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "notLeft" (formula "8"))
                  (rule "notLeft" (formula "7"))
                  (rule "nonNull" (formula "12") (inst "i=i"))
                  (rule "greater_literals" (formula "12") (term "0,1"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "sub_literals" (formula "12") (term "2,1,0,1"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "andLeft" (formula "12"))
                  (rule "notLeft" (formula "12"))
                  (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "18") (ifseqformula "25"))
                  (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "11") (inst "i=i"))
                  (rule "sub_literals" (formula "11") (term "2,1,0,1,1"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "greater_literals" (formula "11") (term "0,1"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "andLeft" (formula "11"))
                  (rule "notLeft" (formula "11"))
                  (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "18") (ifseqformula "25"))
                  (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "10") (inst "i=i"))
                  (rule "greater_literals" (formula "10") (term "0,1"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "sub_literals" (formula "10") (term "2,1,0,1"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "andLeft" (formula "10"))
                  (rule "notLeft" (formula "10"))
                  (rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "18") (ifseqformula "25"))
                  (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "9") (inst "i=i"))
                  (rule "greater_literals" (formula "9") (term "0,1"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "sub_literals" (formula "9") (term "2,1,0,1"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "andLeft" (formula "9"))
                  (rule "notLeft" (formula "9"))
                  (rule "narrowSelectArrayType" (formula "9") (term "0,0,1,0") (ifseqformula "18") (ifseqformula "25"))
                  (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "8") (inst "i=i"))
                  (rule "sub_literals" (formula "8") (term "2,1,0,1,1"))
                  (builtin "One Step Simplification" (formula "8"))
                  (rule "greater_literals" (formula "8") (term "0,1"))
                  (builtin "One Step Simplification" (formula "8"))
                  (rule "andLeft" (formula "8"))
                  (rule "notLeft" (formula "8"))
                  (rule "narrowSelectArrayType" (formula "8") (term "0,0,1,0") (ifseqformula "18") (ifseqformula "25"))
                  (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "7") (inst "i=i"))
                  (rule "sub_literals" (formula "7") (term "2,1,0,1,1"))
                  (builtin "One Step Simplification" (formula "7"))
                  (rule "greater_literals" (formula "7") (term "0,1"))
                  (builtin "One Step Simplification" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "notLeft" (formula "7"))
                  (rule "narrowSelectArrayType" (formula "7") (term "0,0,1,0") (ifseqformula "18") (ifseqformula "25"))
                  (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
                  (rule "nnf_imp2or" (formula "12") (term "0"))
                  (rule "nnf_imp2or" (formula "11") (term "0"))
                  (rule "nnf_imp2or" (formula "10") (term "0"))
                  (rule "nnf_imp2or" (formula "9") (term "0"))
                  (rule "nnf_imp2or" (formula "8") (term "0"))
                  (rule "nnf_imp2or" (formula "7") (term "0"))
                  (rule "nnf_notAnd" (formula "12") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                  (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                  (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "11") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
                  (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                  (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "10") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
                  (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                  (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "9") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
                  (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "9") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                  (rule "mul_literals" (formula "9") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "8") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
                  (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                  (rule "mul_literals" (formula "8") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "7") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
                  (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "7") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
                  (rule "mul_literals" (formula "7") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
                  (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "17") (ifseqformula "4"))
                  (rule "replaceKnownSelect_taclet110010_0" (formula "17") (term "0,0,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110010_1" (formula "17") (term "0,0,1"))
                  (rule "andLeft" (formula "17"))
                  (rule "notLeft" (formula "18"))
                  (rule "andLeft" (formula "17"))
                  (rule "notLeft" (formula "18"))
                  (rule "andLeft" (formula "17"))
                  (rule "notLeft" (formula "18"))
                  (rule "andLeft" (formula "17"))
                  (rule "notLeft" (formula "18"))
                  (rule "andLeft" (formula "17"))
                  (rule "andLeft" (formula "17"))
                  (rule "andLeft" (formula "17"))
                  (rule "andLeft" (formula "17"))
                  (rule "andLeft" (formula "17"))
                  (rule "andLeft" (formula "17"))
                  (rule "andLeft" (formula "17"))
                  (rule "notLeft" (formula "18"))
                  (rule "notLeft" (formula "17"))
                  (rule "nonNull" (formula "22") (inst "i=i"))
                  (rule "greater_literals" (formula "22") (term "0,1"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "sub_literals" (formula "22") (term "2,1,0,1"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "andLeft" (formula "22"))
                  (rule "notLeft" (formula "22"))
                  (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "21") (inst "i=i"))
                  (rule "greater_literals" (formula "21") (term "0,1"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "sub_literals" (formula "21") (term "2,1,0,1"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "andLeft" (formula "21"))
                  (rule "notLeft" (formula "21"))
                  (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "20") (inst "i=i"))
                  (rule "greater_literals" (formula "20") (term "0,1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "sub_literals" (formula "20") (term "2,1,0,1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "andLeft" (formula "20"))
                  (rule "notLeft" (formula "20"))
                  (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "19") (inst "i=i"))
                  (rule "sub_literals" (formula "19") (term "2,1,0,1,1"))
                  (builtin "One Step Simplification" (formula "19"))
                  (rule "greater_literals" (formula "19") (term "0,1"))
                  (builtin "One Step Simplification" (formula "19"))
                  (rule "andLeft" (formula "19"))
                  (rule "notLeft" (formula "19"))
                  (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "18") (inst "i=i"))
                  (rule "sub_literals" (formula "18") (term "2,1,0,1,1"))
                  (builtin "One Step Simplification" (formula "18"))
                  (rule "greater_literals" (formula "18") (term "0,1"))
                  (builtin "One Step Simplification" (formula "18"))
                  (rule "andLeft" (formula "18"))
                  (rule "notLeft" (formula "18"))
                  (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "17") (inst "i=i"))
                  (rule "greater_literals" (formula "17") (term "0,1"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "sub_literals" (formula "17") (term "2,1,0,1"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "andLeft" (formula "17"))
                  (rule "notLeft" (formula "17"))
                  (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                  (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_4"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")) (ifInst ""  (formula "4")))
                  (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_4"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")) (ifInst ""  (formula "4")))
                  (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_4"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")) (ifInst ""  (formula "4")))
                  (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_4"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")) (ifInst ""  (formula "4")))
                  (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_4"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")) (ifInst ""  (formula "4")))
                  (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "22") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_4"))
                  (rule "applyEq" (formula "23") (term "0,1,1,1,0,0") (ifseqformula "22"))
                  (rule "applyEq" (formula "36") (term "0") (ifseqformula "22"))
                  (rule "simplifySelectOfAnonEQ" (formula "22") (ifseqformula "14"))
                  (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "50")) (ifInst ""  (formula "3")))
                  (rule "applyEqReverse" (formula "23") (term "1,0,0,1,0") (ifseqformula "22"))
                  (rule "applyEqReverse" (formula "23") (term "0,1,1,1,0,0") (ifseqformula "22"))
                  (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "22"))
                  (rule "hideAuxiliaryEq" (formula "22"))
                  (rule "pullOutSelect" (formula "21") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_4"))
                  (rule "applyEq" (formula "35") (term "0") (ifseqformula "21"))
                  (rule "applyEq" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "21"))
                  (rule "simplifySelectOfAnonEQ" (formula "21") (ifseqformula "14"))
                  (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "49")) (ifInst ""  (formula "3")))
                  (rule "applyEqReverse" (formula "22") (term "1,0,0,1,0") (ifseqformula "21"))
                  (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "21"))
                  (rule "applyEqReverse" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "21"))
                  (rule "hideAuxiliaryEq" (formula "21"))
                  (rule "pullOutSelect" (formula "20") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_4"))
                  (rule "applyEq" (formula "34") (term "0") (ifseqformula "20"))
                  (rule "applyEq" (formula "21") (term "0,1,1,1,0,0") (ifseqformula "20"))
                  (rule "simplifySelectOfAnonEQ" (formula "20") (ifseqformula "14"))
                  (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "48")) (ifInst ""  (formula "3")))
                  (rule "applyEqReverse" (formula "21") (term "1,0,0,1,0") (ifseqformula "20"))
                  (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "20"))
                  (rule "applyEqReverse" (formula "21") (term "0,1,1,1,0,0") (ifseqformula "20"))
                  (rule "hideAuxiliaryEq" (formula "20"))
                  (rule "pullOutSelect" (formula "19") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_4"))
                  (rule "applyEq" (formula "33") (term "0") (ifseqformula "19"))
                  (rule "applyEq" (formula "20") (term "0,1,1,1,0,0") (ifseqformula "19"))
                  (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "14"))
                  (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "47")) (ifInst ""  (formula "3")))
                  (rule "applyEqReverse" (formula "20") (term "1,0,0,1,0") (ifseqformula "19"))
                  (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "19"))
                  (rule "applyEqReverse" (formula "20") (term "0,1,1,1,0,0") (ifseqformula "19"))
                  (rule "hideAuxiliaryEq" (formula "19"))
                  (rule "pullOutSelect" (formula "18") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_4"))
                  (rule "applyEq" (formula "32") (term "0") (ifseqformula "18"))
                  (rule "applyEq" (formula "19") (term "0,1,1,1,0,0") (ifseqformula "18"))
                  (rule "simplifySelectOfAnonEQ" (formula "18") (ifseqformula "14"))
                  (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "46")) (ifInst ""  (formula "3")))
                  (rule "applyEqReverse" (formula "19") (term "1,0,0,1,0") (ifseqformula "18"))
                  (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "18"))
                  (rule "applyEqReverse" (formula "19") (term "0,1,1,1,0,0") (ifseqformula "18"))
                  (rule "hideAuxiliaryEq" (formula "18"))
                  (rule "pullOutSelect" (formula "17") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_4"))
                  (rule "applyEq" (formula "31") (term "0") (ifseqformula "17"))
                  (rule "applyEq" (formula "18") (term "0,1,1,1,0,0") (ifseqformula "17"))
                  (rule "simplifySelectOfAnonEQ" (formula "17") (ifseqformula "14"))
                  (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "45")) (ifInst ""  (formula "3")))
                  (rule "applyEqReverse" (formula "18") (term "1,0,0,1,0") (ifseqformula "17"))
                  (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "17"))
                  (rule "applyEqReverse" (formula "18") (term "0,1,1,1,0,0") (ifseqformula "17"))
                  (rule "hideAuxiliaryEq" (formula "17"))
                  (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "28") (ifseqformula "4"))
                  (rule "andLeft" (formula "28"))
                  (rule "notLeft" (formula "29"))
                  (rule "andLeft" (formula "28"))
                  (rule "notLeft" (formula "29"))
                  (rule "andLeft" (formula "28"))
                  (rule "andLeft" (formula "28"))
                  (rule "notLeft" (formula "30"))
                  (rule "notLeft" (formula "29"))
                  (rule "andLeft" (formula "28"))
                  (rule "andLeft" (formula "28"))
                  (rule "andLeft" (formula "28"))
                  (rule "andLeft" (formula "28"))
                  (rule "andLeft" (formula "28"))
                  (rule "andLeft" (formula "28"))
                  (rule "andLeft" (formula "28"))
                  (rule "notLeft" (formula "28"))
                  (rule "notLeft" (formula "28"))
                  (rule "nonNull" (formula "33") (inst "i=i"))
                  (rule "greater_literals" (formula "33") (term "0,1"))
                  (builtin "One Step Simplification" (formula "33"))
                  (rule "sub_literals" (formula "33") (term "2,1,0,1"))
                  (builtin "One Step Simplification" (formula "33"))
                  (rule "andLeft" (formula "33"))
                  (rule "notLeft" (formula "33"))
                  (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "32") (inst "i=i"))
                  (rule "sub_literals" (formula "32") (term "2,1,0,1,1"))
                  (builtin "One Step Simplification" (formula "32"))
                  (rule "greater_literals" (formula "32") (term "0,1"))
                  (builtin "One Step Simplification" (formula "32"))
                  (rule "andLeft" (formula "32"))
                  (rule "notLeft" (formula "32"))
                  (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "32") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "31") (inst "i=i"))
                  (rule "sub_literals" (formula "31") (term "2,1,0,1,1"))
                  (builtin "One Step Simplification" (formula "31"))
                  (rule "greater_literals" (formula "31") (term "0,1"))
                  (builtin "One Step Simplification" (formula "31"))
                  (rule "andLeft" (formula "31"))
                  (rule "notLeft" (formula "31"))
                  (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "30") (inst "i=i"))
                  (rule "sub_literals" (formula "30") (term "2,1,0,1,1"))
                  (builtin "One Step Simplification" (formula "30"))
                  (rule "greater_literals" (formula "30") (term "0,1"))
                  (builtin "One Step Simplification" (formula "30"))
                  (rule "andLeft" (formula "30"))
                  (rule "notLeft" (formula "30"))
                  (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "29") (inst "i=i"))
                  (rule "sub_literals" (formula "29") (term "2,1,0,1,1"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "greater_literals" (formula "29") (term "0,1"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "andLeft" (formula "29"))
                  (rule "notLeft" (formula "29"))
                  (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "28") (inst "i=i"))
                  (rule "sub_literals" (formula "28") (term "2,1,0,1,1"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "greater_literals" (formula "28") (term "0,1"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "andLeft" (formula "28"))
                  (rule "notLeft" (formula "28"))
                  (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                  (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_6"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "61")))
                  (rule "replaceKnownSelect_taclet110010_0" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110010_1" (formula "1") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "15"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "4"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_5"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
                  (rule "replaceKnownSelect_taclet110010_2" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110010_3" (formula "1") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "15"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "4"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_5"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")))
                  (rule "replaceKnownSelect_taclet110010_4" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110010_5" (formula "1") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "15"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "4"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_5"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                  (rule "replaceKnownSelect_taclet110010_6" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110010_7" (formula "1") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "15"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "4"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_5"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                  (rule "replaceKnownSelect_taclet110010_10" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110010_11" (formula "1") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "15"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "4"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_5"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                  (rule "replaceKnownSelect_taclet110010_8" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110010_9" (formula "1") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "15"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "4"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "33") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_5"))
                  (rule "applyEq" (formula "41") (term "0") (ifseqformula "33"))
                  (rule "applyEq" (formula "34") (term "0,1,1,1,0,0") (ifseqformula "33"))
                  (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "26"))
                  (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "55")))
                  (rule "replaceKnownSelect_taclet110010_12" (formula "33") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110010_13" (formula "33") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "0,0,0") (ifseqformula "14"))
                  (rule "replace_known_left" (formula "33") (term "0,0,0,0") (ifseqformula "3"))
                  (builtin "One Step Simplification" (formula "33"))
                  (rule "applyEqReverse" (formula "34") (term "0,1,1,1,0,0") (ifseqformula "33"))
                  (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "33"))
                  (rule "applyEqReverse" (formula "34") (term "1,0,0,1,0") (ifseqformula "33"))
                  (rule "hideAuxiliaryEq" (formula "33"))
                  (rule "pullOutSelect" (formula "32") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_5"))
                  (rule "applyEq" (formula "33") (term "0,1,1,1,0,0") (ifseqformula "32"))
                  (rule "applyEq" (formula "40") (term "0") (ifseqformula "32"))
                  (rule "simplifySelectOfAnonEQ" (formula "32") (ifseqformula "26"))
                  (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "54")))
                  (rule "replaceKnownSelect_taclet110010_14" (formula "32") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110010_15" (formula "32") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "0,0,0") (ifseqformula "14"))
                  (rule "replace_known_left" (formula "32") (term "0,0,0,0") (ifseqformula "3"))
                  (builtin "One Step Simplification" (formula "32"))
                  (rule "applyEqReverse" (formula "33") (term "1,0,0,1,0") (ifseqformula "32"))
                  (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "32"))
                  (rule "applyEqReverse" (formula "33") (term "0,1,1,1,0,0") (ifseqformula "32"))
                  (rule "hideAuxiliaryEq" (formula "32"))
                  (rule "pullOutSelect" (formula "31") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_5"))
                  (rule "applyEq" (formula "39") (term "0") (ifseqformula "31"))
                  (rule "applyEq" (formula "32") (term "0,1,1,1,0,0") (ifseqformula "31"))
                  (rule "simplifySelectOfAnonEQ" (formula "31") (ifseqformula "26"))
                  (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "53")))
                  (rule "replaceKnownSelect_taclet110010_16" (formula "31") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110010_17" (formula "31") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0,0,0") (ifseqformula "14"))
                  (rule "replace_known_left" (formula "31") (term "0,0,0,0") (ifseqformula "3"))
                  (builtin "One Step Simplification" (formula "31"))
                  (rule "applyEqReverse" (formula "32") (term "0,1,1,1,0,0") (ifseqformula "31"))
                  (rule "applyEqReverse" (formula "32") (term "1,0,0,1,0") (ifseqformula "31"))
                  (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "31"))
                  (rule "hideAuxiliaryEq" (formula "31"))
                  (rule "pullOutSelect" (formula "30") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_5"))
                  (rule "applyEq" (formula "38") (term "0") (ifseqformula "30"))
                  (rule "applyEq" (formula "31") (term "0,1,1,1,0,0") (ifseqformula "30"))
                  (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "26"))
                  (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "52")))
                  (rule "replaceKnownSelect_taclet110010_18" (formula "30") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110010_19" (formula "30") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,0,0") (ifseqformula "14"))
                  (rule "replace_known_left" (formula "30") (term "0,0,0,0") (ifseqformula "3"))
                  (builtin "One Step Simplification" (formula "30"))
                  (rule "applyEqReverse" (formula "31") (term "1,0,0,1,0") (ifseqformula "30"))
                  (rule "applyEqReverse" (formula "31") (term "0,1,1,1,0,0") (ifseqformula "30"))
                  (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "30"))
                  (rule "hideAuxiliaryEq" (formula "30"))
                  (rule "pullOutSelect" (formula "29") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_5"))
                  (rule "applyEq" (formula "37") (term "0") (ifseqformula "29"))
                  (rule "applyEq" (formula "30") (term "0,1,1,1,0,0") (ifseqformula "29"))
                  (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "26"))
                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "51")))
                  (rule "replaceKnownSelect_taclet110010_20" (formula "29") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110010_21" (formula "29") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,0,0") (ifseqformula "14"))
                  (rule "replace_known_left" (formula "29") (term "0,0,0,0") (ifseqformula "3"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "applyEqReverse" (formula "30") (term "0,1,1,1,0,0") (ifseqformula "29"))
                  (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "29"))
                  (rule "applyEqReverse" (formula "30") (term "1,0,0,1,0") (ifseqformula "29"))
                  (rule "hideAuxiliaryEq" (formula "29"))
                  (rule "pullOutSelect" (formula "28") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_5"))
                  (rule "applyEq" (formula "29") (term "0,1,1,1,0,0") (ifseqformula "28"))
                  (rule "applyEq" (formula "36") (term "0") (ifseqformula "28"))
                  (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "26"))
                  (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "50")))
                  (rule "replaceKnownSelect_taclet110010_22" (formula "28") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110010_23" (formula "28") (term "2,0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,0,0") (ifseqformula "14"))
                  (rule "replace_known_left" (formula "28") (term "0,0,0,0") (ifseqformula "3"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "28"))
                  (rule "applyEqReverse" (formula "29") (term "0,1,1,1,0,0") (ifseqformula "28"))
                  (rule "applyEqReverse" (formula "29") (term "1,0,0,1,0") (ifseqformula "28"))
                  (rule "hideAuxiliaryEq" (formula "28"))
                  (rule "nnf_imp2or" (formula "22") (term "0"))
                  (rule "nnf_imp2or" (formula "21") (term "0"))
                  (rule "methodCallParamThrow" (formula "51") (term "1"))
                  (rule "nnf_imp2or" (formula "20") (term "0"))
                  (rule "nnf_imp2or" (formula "19") (term "0"))
                  (rule "nnf_imp2or" (formula "18") (term "0"))
                  (rule "commute_or_2" (formula "12") (term "0"))
                  (rule "nnf_imp2or" (formula "17") (term "0"))
                  (rule "commute_or_2" (formula "11") (term "0"))
                  (rule "commute_or_2" (formula "10") (term "0"))
                  (rule "commute_or_2" (formula "9") (term "0"))
                  (rule "commute_or_2" (formula "8") (term "0"))
                  (rule "commute_or_2" (formula "7") (term "0"))
                  (rule "arrayLengthNotNegative" (formula "1") (term "0"))
                  (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "2"))
                  (rule "leq_literals" (formula "1") (term "0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "arrayLengthIsAShort" (formula "1") (term "0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "nnf_imp2or" (formula "33") (term "0"))
                  (rule "nnf_imp2or" (formula "32") (term "0"))
                  (rule "nnf_imp2or" (formula "31") (term "0"))
                  (rule "nnf_imp2or" (formula "30") (term "0"))
                  (rule "nnf_imp2or" (formula "29") (term "0"))
                  (rule "nnf_imp2or" (formula "28") (term "0"))
                  (rule "nnf_notAnd" (formula "22") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
                  (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "22") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                  (rule "mul_literals" (formula "22") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "21") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "21") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
                  (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "21") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                  (rule "mul_literals" (formula "21") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "20") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
                  (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                  (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "19") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                  (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                  (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "18") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                  (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                  (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "17") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                  (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                  (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "33") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0"))
                  (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "33") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                  (rule "mul_literals" (formula "33") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "32") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "32") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0"))
                  (rule "mul_literals" (formula "32") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "32") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0"))
                  (rule "mul_literals" (formula "32") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "31") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
                  (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "31") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                  (rule "mul_literals" (formula "31") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "30") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
                  (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "30") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                  (rule "mul_literals" (formula "30") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "29") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0"))
                  (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "29") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                  (rule "mul_literals" (formula "29") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "28") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                  (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "28") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                  (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                  (rule "commute_or" (formula "12") (term "0,0"))
                  (rule "commute_or" (formula "11") (term "0,0"))
                  (rule "commute_or" (formula "10") (term "0,0"))
                  (rule "commute_or" (formula "9") (term "0,0"))
                  (rule "commute_or" (formula "8") (term "0,0"))
                  (rule "commute_or" (formula "7") (term "0,0"))
                  (rule "commute_or_2" (formula "22") (term "0"))
                  (rule "commute_or_2" (formula "21") (term "0"))
                  (rule "commute_or_2" (formula "20") (term "0"))
                  (rule "commute_or_2" (formula "19") (term "0"))
                  (rule "commute_or_2" (formula "18") (term "0"))
                  (rule "commute_or_2" (formula "17") (term "0"))
                  (rule "commute_or_2" (formula "33") (term "0"))
                  (rule "tryCatchThrow" (formula "51") (term "1"))
                  (rule "commute_or_2" (formula "32") (term "0"))
                  (rule "commute_or_2" (formula "31") (term "0"))
                  (rule "commute_or_2" (formula "30") (term "0"))
                  (rule "commute_or_2" (formula "29") (term "0"))
                  (rule "commute_or_2" (formula "28") (term "0"))
                  (rule "commute_or" (formula "22") (term "0,0"))
                  (rule "commute_or" (formula "21") (term "0,0"))
                  (rule "commute_or" (formula "20") (term "0,0"))
                  (rule "commute_or" (formula "19") (term "0,0"))
                  (rule "commute_or" (formula "18") (term "0,0"))
                  (rule "commute_or" (formula "17") (term "0,0"))
                  (rule "commute_or" (formula "33") (term "0,0"))
                  (rule "commute_or" (formula "32") (term "0,0"))
                  (rule "commute_or" (formula "31") (term "0,0"))
                  (rule "commute_or" (formula "30") (term "0,0"))
                  (rule "commute_or" (formula "29") (term "0,0"))
                  (rule "commute_or" (formula "28") (term "0,0"))
                  (rule "arrayLengthIsAShort" (formula "12") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "arrayLengthNotNegative" (formula "12") (term "1,1,0"))
                  (rule "arrayLengthIsAShort" (formula "11") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "true_left" (formula "11"))
                  (rule "arrayLengthNotNegative" (formula "11") (term "1,1,0"))
                  (rule "arrayLengthIsAShort" (formula "10") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "true_left" (formula "10"))
                  (rule "arrayLengthNotNegative" (formula "10") (term "1,1,0"))
                  (rule "arrayLengthIsAShort" (formula "9") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "true_left" (formula "9"))
                  (rule "arrayLengthNotNegative" (formula "9") (term "1,1,0"))
                  (rule "arrayLengthIsAShort" (formula "8") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "arrayLengthNotNegative" (formula "8") (term "1,1,0"))
                  (rule "arrayLengthIsAShort" (formula "7") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "7"))
                  (rule "true_left" (formula "7"))
                  (rule "arrayLengthNotNegative" (formula "7") (term "1,1,0"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "29"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "30"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "31"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "0") (ifseqformula "32"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "52"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "33"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "34"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "35"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "36"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "37"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "38"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "39"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "40"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "ifElseUnfold" (formula "69") (term "1") (inst "#boolv=x"))
                  (rule "variableDeclaration" (formula "69") (term "1") (newnames "x_7"))
                  (rule "equality_comparison_simple" (formula "69") (term "1"))
                  (builtin "One Step Simplification" (formula "69"))
                  (rule "replace_known_right" (formula "69") (term "0,0,1,0") (ifseqformula "67"))
                  (builtin "One Step Simplification" (formula "69"))
                  (rule "ifElseSplit" (formula "69"))
                  (branch "if x_7 true"
                     (builtin "One Step Simplification" (formula "70"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "if x_7 false"
                     (builtin "One Step Simplification" (formula "70"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "ifElseSplit" (formula "69"))
                     (branch "if exc_2 instanceof java.lang.Throwable true"
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")))
                        (rule "true_left" (formula "1"))
                        (rule "variableDeclaration" (formula "69") (term "1") (newnames "e_3"))
                        (rule "reference_type_cast" (formula "69") (term "1"))
                        (branch "Normal Execution (exc_2 instanceof java.lang.Throwable)"
                           (builtin "One Step Simplification" (formula "70"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "assignment" (formula "69") (term "1"))
                           (builtin "One Step Simplification" (formula "69"))
                           (rule "emptyModality" (formula "69") (term "1"))
                           (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "67")) (ifInst ""  (formula "67")) (ifInst ""  (formula "52")))
                           (rule "eqSymm" (formula "69") (term "1,0,0,1"))
                           (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "69") (term "0") (ifseqformula "16"))
                           (rule "replaceKnownSelect_taclet110010_24" (formula "69") (term "0,0,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110010_25" (formula "69") (term "0,0,1,0"))
                           (rule "replaceKnownSelect_taclet110010_26" (formula "69") (term "0,0,1,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110010_27" (formula "69") (term "0,0,1,0,0"))
                           (rule "replaceKnownSelect_taclet110010_28" (formula "69") (term "0,0,1,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110010_29" (formula "69") (term "0,0,1,0,0,0"))
                           (rule "replaceKnownSelect_taclet110010_36" (formula "69") (term "1,1,0,0,0,0,0"))
                           (rule "replaceKnownSelect_taclet110010_30" (formula "69") (term "0,0,1,0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110010_37" (formula "69") (term "1,1,0,0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110010_31" (formula "69") (term "0,0,1,0,0,0,0"))
                           (rule "replaceKnownSelect_taclet110010_38" (formula "69") (term "1,1,0,0,0,0,0,0"))
                           (rule "replaceKnownSelect_taclet110010_40" (formula "69") (term "1,1,0,0,0,0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110010_39" (formula "69") (term "1,1,0,0,0,0,0,0"))
                           (rule "replaceKnownSelect_taclet110010_42" (formula "69") (term "1,1,0,0,0,0,0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110010_41" (formula "69") (term "1,1,0,0,0,0,0,0,0"))
                           (rule "replaceKnownSelect_taclet110010_44" (formula "69") (term "1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110010_43" (formula "69") (term "1,1,0,0,0,0,0,0,0,0"))
                           (rule "replaceKnownSelect_taclet110010_46" (formula "69") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110010_45" (formula "69") (term "1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110010_47" (formula "69") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "replaceKnownSelect_taclet110010_32" (formula "69") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "replaceKnownSelect_taclet110010_34" (formula "69") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110010_33" (formula "69") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet110010_35" (formula "69") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "replace_known_right" (formula "69") (term "0,1,0,0,0") (ifseqformula "62"))
                           (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "59")) (ifInst ""  (formula "60")) (ifInst ""  (formula "61")) (ifInst ""  (formula "63")) (ifInst ""  (formula "65")))
                           (rule "nonNull" (formula "69") (term "1,0,0,0,0") (inst "i=i"))
                           (rule "greater_literals" (formula "69") (term "0,1,1,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "55")))
                           (rule "sub_literals" (formula "69") (term "2,1,0,1,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "69"))
                           (rule "inEqSimp_ltToLeq" (formula "69") (term "1,0,0,1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,1,0,0,1,0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "69") (term "0,0,0,1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0,1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "69") (term "1,1,0,0,1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "69") (term "1,1,0,0,1,0,0,0,0"))
                           (rule "mul_literals" (formula "69") (term "0,1,1,0,0,1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "69") (term "1,1,1,0,0,1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "69") (term "1,1,1,0,0,1,0,0,0,0"))
                           (rule "nonNull" (formula "69") (term "1,0,0,0") (inst "i=i"))
                           (rule "greater_literals" (formula "69") (term "0,1,1,0,0,0"))
                           (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "56")))
                           (rule "sub_literals" (formula "69") (term "2,1,0,1,0,0,0"))
                           (builtin "One Step Simplification" (formula "69"))
                           (rule "inEqSimp_ltToLeq" (formula "69") (term "1,0,0,1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,1,0,0,1,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "69") (term "0,0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0,1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "69") (term "1,1,0,0,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "69") (term "1,1,0,0,1,0,0,0"))
                           (rule "mul_literals" (formula "69") (term "0,1,1,0,0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "69") (term "1,1,1,0,0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "69") (term "1,1,1,0,0,1,0,0,0"))
                           (rule "nonNull" (formula "69") (term "1,0,0") (inst "i=i"))
                           (rule "sub_literals" (formula "69") (term "2,1,0,1,1,1,0,0"))
                           (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "57")))
                           (rule "greater_literals" (formula "69") (term "0,1,0,0"))
                           (builtin "One Step Simplification" (formula "69"))
                           (rule "inEqSimp_ltToLeq" (formula "69") (term "1,0,0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "69") (term "0,0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "69") (term "1,1,0,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "69") (term "1,1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "69") (term "0,1,1,0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "69") (term "1,1,1,0,0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "69") (term "1,1,1,0,0,1,0,0"))
                           (rule "nonNull" (formula "69") (term "1,0,0,0,0,0") (inst "i=i"))
                           (rule "sub_literals" (formula "69") (term "2,1,0,1,1,1,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "54")))
                           (rule "greater_literals" (formula "69") (term "0,1,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "69"))
                           (rule "inEqSimp_ltToLeq" (formula "69") (term "1,0,0,1,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,1,0,0,1,0,0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "69") (term "0,0,0,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0,1,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "69") (term "1,1,0,0,1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "69") (term "1,1,0,0,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "69") (term "0,1,1,0,0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "69") (term "1,1,1,0,0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "69") (term "1,1,1,0,0,1,0,0,0,0,0"))
                           (rule "nonNull" (formula "69") (term "1,0") (inst "i=i"))
                           (rule "greater_literals" (formula "69") (term "0,1,1,0"))
                           (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "58")))
                           (rule "sub_literals" (formula "69") (term "2,1,0,1,0"))
                           (builtin "One Step Simplification" (formula "69"))
                           (rule "inEqSimp_ltToLeq" (formula "69") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,1,0,0,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "69") (term "0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "69") (term "1,1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "69") (term "1,1,0,0,1,0"))
                           (rule "mul_literals" (formula "69") (term "0,1,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "69") (term "1,1,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "69") (term "1,1,1,0,0,1,0"))
                           (rule "nonNull" (formula "69") (term "0,0,0,0,0,0") (inst "i=i"))
                           (rule "greater_literals" (formula "69") (term "0,1,0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "53")))
                           (rule "sub_literals" (formula "69") (term "2,1,0,0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "69"))
                           (rule "inEqSimp_ltToLeq" (formula "69") (term "1,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "69") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "69") (term "0,0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "69") (term "1,1,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "69") (term "1,1,0,0,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "69") (term "0,1,1,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "69") (term "1,1,1,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "69") (term "1,1,1,0,0,0,0,0,0,0,0"))
                           (rule "nnf_imp2or" (formula "69") (term "0,1,0"))
                           (rule "nnf_imp2or" (formula "69") (term "0,1,0,0"))
                           (rule "nnf_imp2or" (formula "69") (term "0,1,0,0,0"))
                           (rule "nnf_notAnd" (formula "69") (term "0,0,1,0"))
                           (rule "inEqSimp_notLeq" (formula "69") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "69") (term "1,0,0,1,0,0,1,0"))
                           (rule "mul_literals" (formula "69") (term "0,1,0,0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "69") (term "0,0,1,0,0,1,0"))
                           (rule "add_literals" (formula "69") (term "0,0,0,1,0,0,1,0"))
                           (rule "add_zero_left" (formula "69") (term "0,0,1,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "69") (term "1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,1,0"))
                           (rule "inEqSimp_notGeq" (formula "69") (term "0,0,0,1,0"))
                           (rule "times_zero_1" (formula "69") (term "1,0,0,0,0,0,1,0"))
                           (rule "add_zero_right" (formula "69") (term "0,0,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "0,0,0,1,0"))
                           (rule "mul_literals" (formula "69") (term "1,0,0,0,1,0"))
                           (rule "nnf_imp2or" (formula "69") (term "0,1,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "69") (term "0,0,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "69") (term "1,0,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "69") (term "1,0,0,1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "69") (term "0,1,0,0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "69") (term "0,0,1,0,0,1,0,0"))
                           (rule "add_literals" (formula "69") (term "0,0,0,1,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "69") (term "0,0,1,0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "69") (term "1,0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "69") (term "0,0,0,1,0,0"))
                           (rule "times_zero_1" (formula "69") (term "1,0,0,0,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "69") (term "0,0,0,0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "0,0,0,1,0,0"))
                           (rule "mul_literals" (formula "69") (term "1,0,0,0,1,0,0"))
                           (rule "nnf_imp2or" (formula "69") (term "0,1,0,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "69") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "69") (term "0,0,0,1,0,0,0"))
                           (rule "mul_literals" (formula "69") (term "1,0,0,0,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "69") (term "0,0,0,0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "0,0,0,1,0,0,0"))
                           (rule "mul_literals" (formula "69") (term "1,0,0,0,1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "69") (term "1,0,0,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "69") (term "1,0,0,1,0,0,1,0,0,0"))
                           (rule "mul_literals" (formula "69") (term "0,1,0,0,1,0,0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "69") (term "0,0,1,0,0,1,0,0,0"))
                           (rule "add_literals" (formula "69") (term "0,0,0,1,0,0,1,0,0,0"))
                           (rule "add_zero_left" (formula "69") (term "0,0,1,0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "69") (term "1,0,0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,1,0,0,0"))
                           (rule "nnf_imp2or" (formula "69") (term "0,0,0,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "69") (term "0,0,1,0,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "69") (term "1,0,0,1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "69") (term "1,0,0,1,0,0,1,0,0,0,0"))
                           (rule "mul_literals" (formula "69") (term "0,1,0,0,1,0,0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "69") (term "0,0,1,0,0,1,0,0,0,0"))
                           (rule "add_literals" (formula "69") (term "0,0,0,1,0,0,1,0,0,0,0"))
                           (rule "add_zero_left" (formula "69") (term "0,0,1,0,0,1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "69") (term "1,0,0,1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,1,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "69") (term "0,0,0,1,0,0,0,0"))
                           (rule "mul_literals" (formula "69") (term "1,0,0,0,0,0,1,0,0,0,0"))
                           (rule "add_zero_right" (formula "69") (term "0,0,0,0,0,1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "0,0,0,1,0,0,0,0"))
                           (rule "mul_literals" (formula "69") (term "1,0,0,0,1,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "69") (term "0,0,1,0,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "69") (term "0,0,0,1,0,0,0,0,0"))
                           (rule "times_zero_1" (formula "69") (term "1,0,0,0,0,0,1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "69") (term "0,0,0,0,0,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "0,0,0,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "69") (term "1,0,0,0,1,0,0,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "69") (term "1,0,0,1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "69") (term "1,0,0,1,0,0,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "69") (term "0,1,0,0,1,0,0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "69") (term "0,0,1,0,0,1,0,0,0,0,0"))
                           (rule "add_literals" (formula "69") (term "0,0,0,1,0,0,1,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "69") (term "0,0,1,0,0,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "69") (term "1,0,0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,1,0,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "69") (term "0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "69") (term "0,0,0,0,0,0,0,0,0"))
                           (rule "times_zero_1" (formula "69") (term "1,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "69") (term "0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "0,0,0,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "69") (term "1,0,0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "69") (term "1,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "69") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "69") (term "0,1,0,0,1,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "69") (term "0,0,1,0,0,0,0,0,0,0,0"))
                           (rule "add_literals" (formula "69") (term "0,0,0,1,0,0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "69") (term "0,0,1,0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "69") (term "1,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "69") (term "1,1,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "69") (term "1,1,0,0,0,0,0,0,0,0"))
                           (rule "cut_direct" (formula "45") (term "0,0"))
                           (branch "CUT: exc_2.<created> = TRUE TRUE"
                              (builtin "One Step Simplification" (formula "46"))
                              (rule "true_left" (formula "46"))
                              (rule "cut_direct" (formula "34") (term "0"))
                              (branch "CUT: result_0.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "true_left" (formula "35"))
                                 (rule "cut_direct" (formula "52") (term "1"))
                                 (branch "CUT: verif.selectvoting.system.core.MixServer.MalformedData::instance(exc_2) = TRUE TRUE"
                                    (rule "instanceof_not_compatible_5" (formula "53") (term "1,0") (ifseqformula "52"))
                                    (rule "instanceof_not_compatible_5" (formula "53") (term "0,0") (ifseqformula "52"))
                                    (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "68")) (ifInst ""  (formula "68")))
                                    (rule "true_left" (formula "53"))
                                    (rule "andRight" (formula "69"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "69"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "69"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "69"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "69"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "69"))
                                                   (branch "Case 1"
                                                      (rule "allRight" (formula "69") (inst "sk=i_101"))
                                                      (rule "orRight" (formula "69"))
                                                      (rule "notRight" (formula "70"))
                                                      (rule "orRight" (formula "70"))
                                                      (rule "inEqSimp_geqRight" (formula "71"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_leqRight" (formula "71"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_103"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "57")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "5"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "57")) (ifInst ""  (formula "5")))
                                                      (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "44") (ifseqformula "56"))
                                                      (rule "allLeft" (formula "23") (inst "t=i_101"))
                                                      (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "23"))
                                                      (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "23") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "23"))
                                                      (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "23"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0"))
                                                      (rule "add_literals" (formula "2") (term "0"))
                                                      (rule "leq_literals" (formula "2"))
                                                      (rule "closeFalse" (formula "2"))
                                                   )
                                                   (branch "Case 2"
                                                      (rule "allRight" (formula "69") (inst "sk=i_100"))
                                                      (rule "orRight" (formula "69"))
                                                      (rule "notRight" (formula "70"))
                                                      (rule "orRight" (formula "70"))
                                                      (rule "inEqSimp_geqRight" (formula "71"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_leqRight" (formula "71"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_102"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "58")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "6"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "58")) (ifInst ""  (formula "6")))
                                                      (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "44") (ifseqformula "57"))
                                                      (rule "allLeft" (formula "25") (inst "t=i_100"))
                                                      (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "25") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "25"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0"))
                                                      (rule "add_literals" (formula "2") (term "0"))
                                                      (rule "leq_literals" (formula "2"))
                                                      (rule "closeFalse" (formula "2"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "allRight" (formula "69") (inst "sk=i_99"))
                                                   (rule "orRight" (formula "69"))
                                                   (rule "notRight" (formula "70"))
                                                   (rule "orRight" (formula "70"))
                                                   (rule "inEqSimp_geqRight" (formula "71"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_leqRight" (formula "71"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_101"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "59")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                                   (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "7"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "59")) (ifInst ""  (formula "7")))
                                                   (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "44") (ifseqformula "58"))
                                                   (rule "allLeft" (formula "27") (inst "t=i_99"))
                                                   (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "27"))
                                                   (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "1"))
                                                   (rule "qeq_literals" (formula "27") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "27"))
                                                   (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "27"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0"))
                                                   (rule "add_literals" (formula "2") (term "0"))
                                                   (rule "leq_literals" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "69") (inst "sk=i_98"))
                                                (rule "orRight" (formula "69"))
                                                (rule "notRight" (formula "70"))
                                                (rule "orRight" (formula "70"))
                                                (rule "inEqSimp_geqRight" (formula "71"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_leqRight" (formula "71"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_100"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "60")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "8"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "60")) (ifInst ""  (formula "8")))
                                                (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "44") (ifseqformula "59"))
                                                (rule "allLeft" (formula "29") (inst "t=i_98"))
                                                (rule "replace_known_left" (formula "29") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                                                (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "29") (term "0,0,1"))
                                                (rule "leq_literals" (formula "29") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "29"))
                                                (rule "qeq_literals" (formula "1") (term "0"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "allRight" (formula "69") (inst "sk=i_97"))
                                             (rule "orRight" (formula "69"))
                                             (rule "notRight" (formula "70"))
                                             (rule "orRight" (formula "70"))
                                             (rule "inEqSimp_geqRight" (formula "71"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_leqRight" (formula "71"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_99"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "61")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "9"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "61")) (ifInst ""  (formula "9")))
                                             (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "44") (ifseqformula "60"))
                                             (rule "allLeft" (formula "31") (inst "t=i_97"))
                                             (rule "replace_known_left" (formula "31") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "31") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "inEqSimp_contradInEq1" (formula "31") (ifseqformula "2"))
                                             (rule "andLeft" (formula "31"))
                                             (rule "inEqSimp_homoInEq1" (formula "31"))
                                             (rule "polySimp_pullOutFactor1b" (formula "31") (term "0"))
                                             (rule "add_literals" (formula "31") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "31") (term "1,0"))
                                             (rule "add_literals" (formula "31") (term "0"))
                                             (rule "leq_literals" (formula "31"))
                                             (rule "closeFalse" (formula "31"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "allRight" (formula "69") (inst "sk=i_96"))
                                          (rule "orRight" (formula "69"))
                                          (rule "notRight" (formula "70"))
                                          (rule "orRight" (formula "70"))
                                          (rule "inEqSimp_geqRight" (formula "71"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "71"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_98"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "62")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                          (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "10"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "62")) (ifInst ""  (formula "10")))
                                          (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "44") (ifseqformula "61"))
                                          (rule "allLeft" (formula "33") (inst "t=i_96"))
                                          (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                          (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "33") (term "0,0,1"))
                                          (rule "leq_literals" (formula "33") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "inEqSimp_contradInEq1" (formula "33") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "33") (term "0"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "closeFalse" (formula "33"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "69") (inst "sk=f_16"))
                                       (rule "allRight" (formula "69") (inst "sk=o_16"))
                                       (rule "orRight" (formula "69"))
                                       (rule "pullOutSelect" (formula "70") (term "0") (inst "selectSK=f_16_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "45"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "33"))
                                       (rule "eqSymm" (formula "71"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_16_1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "71")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch " ¬o_16 = null ∧ ¬( o_16.<created> = TRUE ∨ o_16.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "orRight" (formula "54"))
                                          (rule "applyEqReverse" (formula "74") (term "1") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "eqSymm" (formula "73"))
                                          (rule "replace_known_right" (formula "72") (term "0,0") (ifseqformula "55"))
                                          (builtin "One Step Simplification" (formula "72") (ifInst ""  (formula "53")))
                                          (rule "closeTrue" (formula "72"))
                                       )
                                       (branch " ¬o_16 = null ∧ ¬( o_16.<created> = TRUE ∨ o_16.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) FALSE"
                                          (rule "close" (formula "72") (ifseqformula "1"))
                                       )
                                    )
                                 )
                                 (branch "CUT: verif.selectvoting.system.core.MixServer.MalformedData::instance(exc_2) = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "52"))
                                    (rule "andRight" (formula "70"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "70"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "70"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "70"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "70"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "70"))
                                                   (branch "Case 1"
                                                      (rule "allRight" (formula "70") (inst "sk=i_95"))
                                                      (rule "orRight" (formula "70"))
                                                      (rule "orRight" (formula "70"))
                                                      (rule "notRight" (formula "72"))
                                                      (rule "inEqSimp_geqRight" (formula "72"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_leqRight" (formula "72"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_97"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "58")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "5"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "58")) (ifInst ""  (formula "5")))
                                                      (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "44") (ifseqformula "57"))
                                                      (rule "allLeft" (formula "23") (inst "t=i_95"))
                                                      (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "23"))
                                                      (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                                      (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "23") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "23") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "23"))
                                                      (rule "inEqSimp_contradInEq1" (formula "23") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "23") (term "0"))
                                                      (builtin "One Step Simplification" (formula "23"))
                                                      (rule "closeFalse" (formula "23"))
                                                   )
                                                   (branch "Case 2"
                                                      (rule "allRight" (formula "70") (inst "sk=i_94"))
                                                      (rule "orRight" (formula "70"))
                                                      (rule "orRight" (formula "70"))
                                                      (rule "notRight" (formula "72"))
                                                      (rule "inEqSimp_geqRight" (formula "72"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_leqRight" (formula "72"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_96"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "59")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "6"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "59")) (ifInst ""  (formula "6")))
                                                      (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "44") (ifseqformula "58"))
                                                      (rule "allLeft" (formula "25") (inst "t=i_94"))
                                                      (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                                      (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "25") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "25"))
                                                      (rule "qeq_literals" (formula "1") (term "0"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "allRight" (formula "70") (inst "sk=i_93"))
                                                   (rule "orRight" (formula "70"))
                                                   (rule "orRight" (formula "70"))
                                                   (rule "notRight" (formula "72"))
                                                   (rule "inEqSimp_leqRight" (formula "71"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_geqRight" (formula "72"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_95"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "60")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                                   (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "7"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "60")) (ifInst ""  (formula "7")))
                                                   (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "44") (ifseqformula "59"))
                                                   (rule "allLeft" (formula "27") (inst "t=i_93"))
                                                   (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "27"))
                                                   (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                                   (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "27") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "27") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "27"))
                                                   (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "27") (term "0"))
                                                   (builtin "One Step Simplification" (formula "27"))
                                                   (rule "closeFalse" (formula "27"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "70") (inst "sk=i_92"))
                                                (rule "orRight" (formula "70"))
                                                (rule "orRight" (formula "70"))
                                                (rule "notRight" (formula "72"))
                                                (rule "inEqSimp_leqRight" (formula "71"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_geqRight" (formula "72"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_94"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "61")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "8"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "61")) (ifInst ""  (formula "8")))
                                                (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "44") (ifseqformula "60"))
                                                (rule "allLeft" (formula "29") (inst "t=i_92"))
                                                (rule "replace_known_left" (formula "29") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                                                (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "29") (term "0,0,1"))
                                                (rule "leq_literals" (formula "29") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "29"))
                                                (rule "qeq_literals" (formula "2") (term "0"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "allRight" (formula "70") (inst "sk=i_91"))
                                             (rule "orRight" (formula "70"))
                                             (rule "orRight" (formula "70"))
                                             (rule "notRight" (formula "72"))
                                             (rule "inEqSimp_leqRight" (formula "71"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_geqRight" (formula "72"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_93"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "62")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "9"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "62")) (ifInst ""  (formula "9")))
                                             (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "44") (ifseqformula "61"))
                                             (rule "allLeft" (formula "31") (inst "t=i_91"))
                                             (rule "replace_known_left" (formula "31") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                                             (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "31") (term "0,0,1"))
                                             (rule "leq_literals" (formula "31") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "inEqSimp_contradInEq1" (formula "31") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "31") (term "0"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "closeFalse" (formula "31"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "allRight" (formula "70") (inst "sk=i_90"))
                                          (rule "orRight" (formula "70"))
                                          (rule "orRight" (formula "70"))
                                          (rule "notRight" (formula "72"))
                                          (rule "inEqSimp_geqRight" (formula "72"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "72"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_92"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "63")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                          (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "10"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "63")) (ifInst ""  (formula "10")))
                                          (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "44") (ifseqformula "62"))
                                          (rule "allLeft" (formula "33") (inst "t=i_90"))
                                          (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                          (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "33") (term "0,0,1"))
                                          (rule "leq_literals" (formula "33") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "inEqSimp_contradInEq1" (formula "33") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "33") (term "0"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "closeFalse" (formula "33"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "70") (inst "sk=f_15"))
                                       (rule "allRight" (formula "70") (inst "sk=o_15"))
                                       (rule "orRight" (formula "70"))
                                       (rule "pullOutSelect" (formula "71") (term "0") (inst "selectSK=f_15_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "45"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "33"))
                                       (rule "eqSymm" (formula "72"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_15_1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch " ¬o_15 = null ∧ ¬( o_15.<created> = TRUE ∨ o_15.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "orRight" (formula "54"))
                                          (rule "applyEqReverse" (formula "75") (term "1") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "eqSymm" (formula "74"))
                                          (rule "replace_known_right" (formula "73") (term "0,1") (ifseqformula "53"))
                                          (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "55")))
                                          (rule "closeTrue" (formula "73"))
                                       )
                                       (branch " ¬o_15 = null ∧ ¬( o_15.<created> = TRUE ∨ o_15.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) FALSE"
                                          (rule "close" (formula "73") (ifseqformula "1"))
                                       )
                                    )
                                 )
                              )
                              (branch "CUT: result_0.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "cut_direct" (formula "52") (term "1"))
                                 (branch "CUT: verif.selectvoting.system.core.MixServer.MalformedData::instance(exc_2) = TRUE TRUE"
                                    (rule "instanceof_not_compatible_5" (formula "53") (term "1,0") (ifseqformula "52"))
                                    (rule "instanceof_not_compatible_5" (formula "53") (term "0,0") (ifseqformula "52"))
                                    (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "69")) (ifInst ""  (formula "69")))
                                    (rule "true_left" (formula "53"))
                                    (rule "andRight" (formula "70"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "70"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "70"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "70"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "70"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "70"))
                                                   (branch "Case 1"
                                                      (rule "allRight" (formula "70") (inst "sk=i_89"))
                                                      (rule "orRight" (formula "70"))
                                                      (rule "orRight" (formula "70"))
                                                      (rule "notRight" (formula "72"))
                                                      (rule "inEqSimp_leqRight" (formula "71"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_geqRight" (formula "72"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_91"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "58")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "5"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "58")) (ifInst ""  (formula "5")))
                                                      (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "44") (ifseqformula "57"))
                                                      (rule "allLeft" (formula "23") (inst "t=i_89"))
                                                      (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "23"))
                                                      (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "2"))
                                                      (rule "qeq_literals" (formula "23") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "23"))
                                                      (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "23"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0"))
                                                      (rule "leq_literals" (formula "1"))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                   (branch "Case 2"
                                                      (rule "allRight" (formula "70") (inst "sk=i_88"))
                                                      (rule "orRight" (formula "70"))
                                                      (rule "orRight" (formula "70"))
                                                      (rule "notRight" (formula "72"))
                                                      (rule "inEqSimp_leqRight" (formula "71"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_geqRight" (formula "72"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_90"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "59")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "6"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "59")) (ifInst ""  (formula "6")))
                                                      (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "44") (ifseqformula "58"))
                                                      (rule "allLeft" (formula "25") (inst "t=i_88"))
                                                      (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "2"))
                                                      (rule "qeq_literals" (formula "25") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "25"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0"))
                                                      (rule "leq_literals" (formula "1"))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "allRight" (formula "70") (inst "sk=i_87"))
                                                   (rule "orRight" (formula "70"))
                                                   (rule "orRight" (formula "70"))
                                                   (rule "notRight" (formula "72"))
                                                   (rule "inEqSimp_leqRight" (formula "71"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_geqRight" (formula "72"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_89"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "60")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                                   (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "7"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "60")) (ifInst ""  (formula "7")))
                                                   (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "44") (ifseqformula "59"))
                                                   (rule "allLeft" (formula "27") (inst "t=i_87"))
                                                   (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "27"))
                                                   (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                                   (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "27") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "27") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "27"))
                                                   (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "27"))
                                                   (rule "qeq_literals" (formula "2") (term "0"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "70") (inst "sk=i_86"))
                                                (rule "orRight" (formula "70"))
                                                (rule "orRight" (formula "70"))
                                                (rule "notRight" (formula "72"))
                                                (rule "inEqSimp_leqRight" (formula "71"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_geqRight" (formula "72"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_88"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "61")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "8"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "61")) (ifInst ""  (formula "8")))
                                                (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "44") (ifseqformula "60"))
                                                (rule "allLeft" (formula "29") (inst "t=i_86"))
                                                (rule "replace_known_left" (formula "29") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "29") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "inEqSimp_contradInEq1" (formula "29") (ifseqformula "1"))
                                                (rule "andLeft" (formula "29"))
                                                (rule "inEqSimp_homoInEq1" (formula "29"))
                                                (rule "polySimp_pullOutFactor1b" (formula "29") (term "0"))
                                                (rule "add_literals" (formula "29") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "29") (term "1,0"))
                                                (rule "add_zero_right" (formula "29") (term "0"))
                                                (rule "leq_literals" (formula "29"))
                                                (rule "closeFalse" (formula "29"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "allRight" (formula "70") (inst "sk=i_85"))
                                             (rule "orRight" (formula "70"))
                                             (rule "notRight" (formula "71"))
                                             (rule "orRight" (formula "71"))
                                             (rule "inEqSimp_geqRight" (formula "72"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_leqRight" (formula "72"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_87"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "62")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "9"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "62")) (ifInst ""  (formula "9")))
                                             (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "44") (ifseqformula "61"))
                                             (rule "allLeft" (formula "31") (inst "t=i_85"))
                                             (rule "replace_known_left" (formula "31") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "31") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "31"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "2"))
                                             (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0"))
                                             (rule "add_zero_right" (formula "2") (term "0"))
                                             (rule "leq_literals" (formula "2"))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "allRight" (formula "70") (inst "sk=i_84"))
                                          (rule "orRight" (formula "70"))
                                          (rule "notRight" (formula "71"))
                                          (rule "orRight" (formula "71"))
                                          (rule "inEqSimp_geqRight" (formula "72"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "72"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_86"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "63")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                          (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "10"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "63")) (ifInst ""  (formula "10")))
                                          (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "44") (ifseqformula "62"))
                                          (rule "allLeft" (formula "33") (inst "t=i_84"))
                                          (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                          (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "33") (term "0,0,1"))
                                          (rule "leq_literals" (formula "33") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "33"))
                                          (rule "qeq_literals" (formula "1") (term "0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "70") (inst "sk=f_14"))
                                       (rule "allRight" (formula "70") (inst "sk=o_14"))
                                       (rule "orRight" (formula "70"))
                                       (rule "pullOutSelect" (formula "71") (term "0") (inst "selectSK=f_14_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "45"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "33"))
                                       (rule "eqSymm" (formula "72"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_14_1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch " ¬o_14 = null ∧ ¬( o_14.<created> = TRUE ∨ o_14.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "orRight" (formula "55"))
                                          (rule "applyEqReverse" (formula "75") (term "1") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "eqSymm" (formula "74"))
                                          (rule "replace_known_right" (formula "73") (term "0,1") (ifseqformula "54"))
                                          (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "53")))
                                          (rule "closeTrue" (formula "73"))
                                       )
                                       (branch " ¬o_14 = null ∧ ¬( o_14.<created> = TRUE ∨ o_14.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) FALSE"
                                          (rule "close" (formula "73") (ifseqformula "1"))
                                       )
                                    )
                                 )
                                 (branch "CUT: verif.selectvoting.system.core.MixServer.MalformedData::instance(exc_2) = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "52"))
                                    (rule "andRight" (formula "71"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "71"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "71"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "71"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "71"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "71"))
                                                   (branch "Case 1"
                                                      (rule "allRight" (formula "71") (inst "sk=i_83"))
                                                      (rule "orRight" (formula "71"))
                                                      (rule "orRight" (formula "71"))
                                                      (rule "notRight" (formula "73"))
                                                      (rule "inEqSimp_geqRight" (formula "73"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_leqRight" (formula "73"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_85"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "59")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "5"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "59")) (ifInst ""  (formula "5")))
                                                      (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "44") (ifseqformula "58"))
                                                      (rule "allLeft" (formula "23") (inst "t=i_83"))
                                                      (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "23"))
                                                      (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                                      (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "23") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "23") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "23"))
                                                      (rule "inEqSimp_contradInEq1" (formula "23") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "23") (term "0"))
                                                      (builtin "One Step Simplification" (formula "23"))
                                                      (rule "closeFalse" (formula "23"))
                                                   )
                                                   (branch "Case 2"
                                                      (rule "allRight" (formula "71") (inst "sk=i_82"))
                                                      (rule "orRight" (formula "71"))
                                                      (rule "orRight" (formula "71"))
                                                      (rule "notRight" (formula "73"))
                                                      (rule "inEqSimp_geqRight" (formula "73"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_leqRight" (formula "73"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_84"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "60")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "6"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "60")) (ifInst ""  (formula "6")))
                                                      (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "44") (ifseqformula "59"))
                                                      (rule "allLeft" (formula "25") (inst "t=i_82"))
                                                      (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                                      (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "25") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "inEqSimp_contradInEq1" (formula "25") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "25") (term "0"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "closeFalse" (formula "25"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "allRight" (formula "71") (inst "sk=i_81"))
                                                   (rule "orRight" (formula "71"))
                                                   (rule "orRight" (formula "71"))
                                                   (rule "notRight" (formula "73"))
                                                   (rule "inEqSimp_leqRight" (formula "72"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_geqRight" (formula "73"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_83"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "61")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                                   (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "7"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "61")) (ifInst ""  (formula "7")))
                                                   (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "44") (ifseqformula "60"))
                                                   (rule "allLeft" (formula "27") (inst "t=i_81"))
                                                   (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "27"))
                                                   (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                                   (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "27") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "27") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "27"))
                                                   (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "27"))
                                                   (rule "qeq_literals" (formula "2") (term "0"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "71") (inst "sk=i_80"))
                                                (rule "orRight" (formula "71"))
                                                (rule "notRight" (formula "72"))
                                                (rule "orRight" (formula "72"))
                                                (rule "inEqSimp_geqRight" (formula "73"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_leqRight" (formula "73"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_82"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "62")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "8"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "62")) (ifInst ""  (formula "8")))
                                                (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "44") (ifseqformula "61"))
                                                (rule "allLeft" (formula "29") (inst "t=i_80"))
                                                (rule "replace_known_left" (formula "29") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                                                (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "29") (term "0,0,1"))
                                                (rule "leq_literals" (formula "29") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "29"))
                                                (rule "qeq_literals" (formula "1") (term "0"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "allRight" (formula "71") (inst "sk=i_79"))
                                             (rule "orRight" (formula "71"))
                                             (rule "notRight" (formula "72"))
                                             (rule "orRight" (formula "72"))
                                             (rule "inEqSimp_geqRight" (formula "73"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_leqRight" (formula "73"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_81"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "63")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "9"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "63")) (ifInst ""  (formula "9")))
                                             (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "44") (ifseqformula "62"))
                                             (rule "allLeft" (formula "31") (inst "t=i_79"))
                                             (rule "replace_known_left" (formula "31") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                                             (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "31") (term "0,0,1"))
                                             (rule "leq_literals" (formula "31") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "inEqSimp_contradInEq1" (formula "31") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "31") (term "0"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "closeFalse" (formula "31"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "allRight" (formula "71") (inst "sk=i_78"))
                                          (rule "orRight" (formula "71"))
                                          (rule "notRight" (formula "72"))
                                          (rule "orRight" (formula "72"))
                                          (rule "inEqSimp_leqRight" (formula "72"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_geqRight" (formula "73"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_80"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "64")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                          (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "10"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "64")) (ifInst ""  (formula "10")))
                                          (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "44") (ifseqformula "63"))
                                          (rule "allLeft" (formula "33") (inst "t=i_78"))
                                          (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                          (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "33") (term "0,0,1"))
                                          (rule "leq_literals" (formula "33") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "inEqSimp_contradInEq1" (formula "33") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "33") (term "0"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "closeFalse" (formula "33"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "71") (inst "sk=f_13"))
                                       (rule "allRight" (formula "71") (inst "sk=o_13"))
                                       (rule "orRight" (formula "71"))
                                       (rule "pullOutSelect" (formula "72") (term "0") (inst "selectSK=f_13_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "45"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "33"))
                                       (rule "eqSymm" (formula "73"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_13_1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "73")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch " ¬o_13 = null ∧ ¬( o_13.<created> = TRUE ∨ o_13.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "orRight" (formula "55"))
                                          (rule "applyEqReverse" (formula "76") (term "1") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "eqSymm" (formula "75"))
                                          (rule "replace_known_right" (formula "74") (term "0,1") (ifseqformula "54"))
                                          (builtin "One Step Simplification" (formula "74") (ifInst ""  (formula "53")))
                                          (rule "closeTrue" (formula "74"))
                                       )
                                       (branch " ¬o_13 = null ∧ ¬( o_13.<created> = TRUE ∨ o_13.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) FALSE"
                                          (rule "close" (formula "74") (ifseqformula "1"))
                                       )
                                    )
                                 )
                              )
                           )
                           (branch "CUT: exc_2.<created> = TRUE FALSE"
                              (builtin "One Step Simplification" (formula "45"))
                              (rule "cut_direct" (formula "34") (term "0"))
                              (branch "CUT: result_0.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "true_left" (formula "35"))
                                 (rule "cut_direct" (formula "52") (term "1"))
                                 (branch "CUT: verif.selectvoting.system.core.MixServer.MalformedData::instance(exc_2) = TRUE TRUE"
                                    (rule "instanceof_not_compatible_5" (formula "53") (term "1,0") (ifseqformula "52"))
                                    (rule "instanceof_not_compatible_5" (formula "53") (term "0,0") (ifseqformula "52"))
                                    (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "69")) (ifInst ""  (formula "69")))
                                    (rule "true_left" (formula "53"))
                                    (rule "andRight" (formula "70"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "70"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "70"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "70"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "70"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "70"))
                                                   (branch "Case 1"
                                                      (rule "allRight" (formula "70") (inst "sk=i_77"))
                                                      (rule "orRight" (formula "70"))
                                                      (rule "notRight" (formula "71"))
                                                      (rule "orRight" (formula "71"))
                                                      (rule "inEqSimp_geqRight" (formula "72"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_leqRight" (formula "72"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_79"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "58")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "5"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "58")) (ifInst ""  (formula "5")))
                                                      (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "44") (ifseqformula "57"))
                                                      (rule "allLeft" (formula "23") (inst "t=i_77"))
                                                      (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "23"))
                                                      (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                                      (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "23") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "23") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "23"))
                                                      (rule "inEqSimp_contradInEq1" (formula "23") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "23") (term "0"))
                                                      (builtin "One Step Simplification" (formula "23"))
                                                      (rule "closeFalse" (formula "23"))
                                                   )
                                                   (branch "Case 2"
                                                      (rule "allRight" (formula "70") (inst "sk=i_76"))
                                                      (rule "orRight" (formula "70"))
                                                      (rule "notRight" (formula "71"))
                                                      (rule "orRight" (formula "71"))
                                                      (rule "inEqSimp_geqRight" (formula "72"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_leqRight" (formula "72"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_78"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "59")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "6"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "59")) (ifInst ""  (formula "6")))
                                                      (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "44") (ifseqformula "58"))
                                                      (rule "allLeft" (formula "25") (inst "t=i_76"))
                                                      (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                                      (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "25") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "inEqSimp_contradInEq1" (formula "25") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "25") (term "0"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "closeFalse" (formula "25"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "allRight" (formula "70") (inst "sk=i_75"))
                                                   (rule "orRight" (formula "70"))
                                                   (rule "notRight" (formula "71"))
                                                   (rule "orRight" (formula "71"))
                                                   (rule "inEqSimp_leqRight" (formula "71"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_geqRight" (formula "72"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_77"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "60")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                                   (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "7"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "60")) (ifInst ""  (formula "7")))
                                                   (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "44") (ifseqformula "59"))
                                                   (rule "allLeft" (formula "27") (inst "t=i_75"))
                                                   (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "27"))
                                                   (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                                   (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "27") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "27") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "27"))
                                                   (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "27") (term "0"))
                                                   (builtin "One Step Simplification" (formula "27"))
                                                   (rule "closeFalse" (formula "27"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "70") (inst "sk=i_74"))
                                                (rule "orRight" (formula "70"))
                                                (rule "notRight" (formula "71"))
                                                (rule "orRight" (formula "71"))
                                                (rule "inEqSimp_leqRight" (formula "71"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_geqRight" (formula "72"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_76"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "61")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "8"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "61")) (ifInst ""  (formula "8")))
                                                (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "44") (ifseqformula "60"))
                                                (rule "allLeft" (formula "29") (inst "t=i_74"))
                                                (rule "replace_known_left" (formula "29") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                                                (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "29") (term "0,0,1"))
                                                (rule "leq_literals" (formula "29") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "inEqSimp_contradInEq1" (formula "29") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "29") (term "0"))
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "closeFalse" (formula "29"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "allRight" (formula "70") (inst "sk=i_73"))
                                             (rule "orRight" (formula "70"))
                                             (rule "notRight" (formula "71"))
                                             (rule "orRight" (formula "71"))
                                             (rule "inEqSimp_leqRight" (formula "71"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_geqRight" (formula "72"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_75"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "62")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "9"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "62")) (ifInst ""  (formula "9")))
                                             (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "44") (ifseqformula "61"))
                                             (rule "allLeft" (formula "31") (inst "t=i_73"))
                                             (rule "replace_known_left" (formula "31") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                                             (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "31") (term "0,0,1"))
                                             (rule "leq_literals" (formula "31") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "inEqSimp_contradInEq1" (formula "31") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "31") (term "0"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "closeFalse" (formula "31"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "allRight" (formula "70") (inst "sk=i_72"))
                                          (rule "orRight" (formula "70"))
                                          (rule "notRight" (formula "71"))
                                          (rule "orRight" (formula "71"))
                                          (rule "inEqSimp_leqRight" (formula "71"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_geqRight" (formula "72"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_74"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "63")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                          (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "10"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "63")) (ifInst ""  (formula "10")))
                                          (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "44") (ifseqformula "62"))
                                          (rule "allLeft" (formula "33") (inst "t=i_72"))
                                          (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                          (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "33") (term "0,0,1"))
                                          (rule "leq_literals" (formula "33") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "inEqSimp_contradInEq1" (formula "33") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "33") (term "0"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "closeFalse" (formula "33"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "70") (inst "sk=f_12"))
                                       (rule "allRight" (formula "70") (inst "sk=o_12"))
                                       (rule "orRight" (formula "70"))
                                       (rule "pullOutSelect" (formula "71") (term "0") (inst "selectSK=f_12_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "45"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "33"))
                                       (rule "eqSymm" (formula "72"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_12_1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch " ¬o_12 = null ∧ ¬( o_12.<created> = TRUE ∨ o_12.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "orRight" (formula "55"))
                                          (rule "applyEqReverse" (formula "75") (term "1") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "eqSymm" (formula "74"))
                                          (rule "replace_known_right" (formula "73") (term "0,1") (ifseqformula "54"))
                                          (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "53")))
                                          (rule "closeTrue" (formula "73"))
                                       )
                                       (branch " ¬o_12 = null ∧ ¬( o_12.<created> = TRUE ∨ o_12.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) FALSE"
                                          (rule "close" (formula "73") (ifseqformula "1"))
                                       )
                                    )
                                 )
                                 (branch "CUT: verif.selectvoting.system.core.MixServer.MalformedData::instance(exc_2) = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "52"))
                                    (rule "andRight" (formula "71"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "71"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "71"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "71"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "71"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "71"))
                                                   (branch "Case 1"
                                                      (rule "allRight" (formula "71") (inst "sk=i_71"))
                                                      (rule "orRight" (formula "71"))
                                                      (rule "notRight" (formula "72"))
                                                      (rule "orRight" (formula "72"))
                                                      (rule "inEqSimp_leqRight" (formula "72"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_geqRight" (formula "73"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_73"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "59")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "5"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "59")) (ifInst ""  (formula "5")))
                                                      (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "44") (ifseqformula "58"))
                                                      (rule "allLeft" (formula "23") (inst "t=i_71"))
                                                      (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "23"))
                                                      (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                                      (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "23") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "23") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "23"))
                                                      (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "23"))
                                                      (rule "qeq_literals" (formula "2") (term "0"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "closeFalse" (formula "2"))
                                                   )
                                                   (branch "Case 2"
                                                      (rule "allRight" (formula "71") (inst "sk=i_70"))
                                                      (rule "orRight" (formula "71"))
                                                      (rule "notRight" (formula "72"))
                                                      (rule "orRight" (formula "72"))
                                                      (rule "inEqSimp_leqRight" (formula "72"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_geqRight" (formula "73"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_72"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "60")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "6"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "60")) (ifInst ""  (formula "6")))
                                                      (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "44") (ifseqformula "59"))
                                                      (rule "allLeft" (formula "25") (inst "t=i_70"))
                                                      (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                                      (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "25") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "25") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "25"))
                                                      (rule "qeq_literals" (formula "2") (term "0"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "closeFalse" (formula "2"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "allRight" (formula "71") (inst "sk=i_69"))
                                                   (rule "orRight" (formula "71"))
                                                   (rule "orRight" (formula "71"))
                                                   (rule "notRight" (formula "73"))
                                                   (rule "inEqSimp_leqRight" (formula "72"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_geqRight" (formula "73"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_71"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "61")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                                   (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "7"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "61")) (ifInst ""  (formula "7")))
                                                   (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "44") (ifseqformula "60"))
                                                   (rule "allLeft" (formula "27") (inst "t=i_69"))
                                                   (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "27"))
                                                   (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                                   (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "27") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "27") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "27"))
                                                   (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "27") (term "0"))
                                                   (builtin "One Step Simplification" (formula "27"))
                                                   (rule "closeFalse" (formula "27"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "71") (inst "sk=i_68"))
                                                (rule "orRight" (formula "71"))
                                                (rule "orRight" (formula "71"))
                                                (rule "notRight" (formula "73"))
                                                (rule "inEqSimp_leqRight" (formula "72"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_geqRight" (formula "73"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_70"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "62")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "8"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "62")) (ifInst ""  (formula "8")))
                                                (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "44") (ifseqformula "61"))
                                                (rule "allLeft" (formula "29") (inst "t=i_68"))
                                                (rule "replace_known_left" (formula "29") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "29") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "inEqSimp_contradInEq1" (formula "29") (ifseqformula "1"))
                                                (rule "andLeft" (formula "29"))
                                                (rule "inEqSimp_homoInEq1" (formula "29"))
                                                (rule "polySimp_pullOutFactor1b" (formula "29") (term "0"))
                                                (rule "add_literals" (formula "29") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "29") (term "1,0"))
                                                (rule "add_literals" (formula "29") (term "0"))
                                                (rule "leq_literals" (formula "29"))
                                                (rule "closeFalse" (formula "29"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "allRight" (formula "71") (inst "sk=i_67"))
                                             (rule "orRight" (formula "71"))
                                             (rule "notRight" (formula "72"))
                                             (rule "orRight" (formula "72"))
                                             (rule "inEqSimp_geqRight" (formula "73"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_leqRight" (formula "73"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_69"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "63")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "9"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "63")) (ifInst ""  (formula "9")))
                                             (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "44") (ifseqformula "62"))
                                             (rule "allLeft" (formula "31") (inst "t=i_67"))
                                             (rule "replace_known_left" (formula "31") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "31") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "inEqSimp_contradInEq1" (formula "31") (ifseqformula "2"))
                                             (rule "andLeft" (formula "31"))
                                             (rule "inEqSimp_homoInEq1" (formula "31"))
                                             (rule "polySimp_pullOutFactor1b" (formula "31") (term "0"))
                                             (rule "add_literals" (formula "31") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "31") (term "1,0"))
                                             (rule "add_literals" (formula "31") (term "0"))
                                             (rule "leq_literals" (formula "31"))
                                             (rule "closeFalse" (formula "31"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "allRight" (formula "71") (inst "sk=i_66"))
                                          (rule "orRight" (formula "71"))
                                          (rule "orRight" (formula "71"))
                                          (rule "notRight" (formula "73"))
                                          (rule "inEqSimp_geqRight" (formula "73"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "73"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_68"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "64")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                          (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "10"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "64")) (ifInst ""  (formula "10")))
                                          (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "44") (ifseqformula "63"))
                                          (rule "allLeft" (formula "33") (inst "t=i_66"))
                                          (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                          (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "33") (term "0,0,1"))
                                          (rule "leq_literals" (formula "33") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "inEqSimp_contradInEq1" (formula "33") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "33") (term "0"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "closeFalse" (formula "33"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "71") (inst "sk=f_11"))
                                       (rule "allRight" (formula "71") (inst "sk=o_11"))
                                       (rule "orRight" (formula "71"))
                                       (rule "pullOutSelect" (formula "72") (term "0") (inst "selectSK=f_11_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "45"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "33"))
                                       (rule "eqSymm" (formula "73"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_11_1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "73")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch " ¬o_11 = null ∧ ¬( o_11.<created> = TRUE ∨ o_11.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "orRight" (formula "55"))
                                          (rule "applyEqReverse" (formula "76") (term "1") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "eqSymm" (formula "75"))
                                          (rule "replace_known_right" (formula "74") (term "0,0") (ifseqformula "53"))
                                          (builtin "One Step Simplification" (formula "74") (ifInst ""  (formula "54")))
                                          (rule "closeTrue" (formula "74"))
                                       )
                                       (branch " ¬o_11 = null ∧ ¬( o_11.<created> = TRUE ∨ o_11.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) FALSE"
                                          (rule "close" (formula "74") (ifseqformula "1"))
                                       )
                                    )
                                 )
                              )
                              (branch "CUT: result_0.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "cut_direct" (formula "52") (term "1"))
                                 (branch "CUT: verif.selectvoting.system.core.MixServer.MalformedData::instance(exc_2) = TRUE TRUE"
                                    (rule "instanceof_not_compatible_5" (formula "53") (term "0,0") (ifseqformula "52"))
                                    (rule "instanceof_not_compatible_5" (formula "53") (term "1,0") (ifseqformula "52"))
                                    (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "70")) (ifInst ""  (formula "70")))
                                    (rule "true_left" (formula "53"))
                                    (rule "andRight" (formula "71"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "71"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "71"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "71"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "71"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "71"))
                                                   (branch "Case 1"
                                                      (rule "allRight" (formula "71") (inst "sk=i_65"))
                                                      (rule "orRight" (formula "71"))
                                                      (rule "orRight" (formula "71"))
                                                      (rule "notRight" (formula "73"))
                                                      (rule "inEqSimp_geqRight" (formula "73"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_leqRight" (formula "73"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_67"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "59")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "5"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "59")) (ifInst ""  (formula "5")))
                                                      (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "44") (ifseqformula "58"))
                                                      (rule "allLeft" (formula "23") (inst "t=i_65"))
                                                      (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "23"))
                                                      (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                                      (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "23") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "23") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "23"))
                                                      (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "23"))
                                                      (rule "qeq_literals" (formula "1") (term "0"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                   (branch "Case 2"
                                                      (rule "allRight" (formula "71") (inst "sk=i_64"))
                                                      (rule "orRight" (formula "71"))
                                                      (rule "orRight" (formula "71"))
                                                      (rule "notRight" (formula "73"))
                                                      (rule "inEqSimp_geqRight" (formula "73"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_leqRight" (formula "73"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_66"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "60")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "6"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "60")) (ifInst ""  (formula "6")))
                                                      (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "44") (ifseqformula "59"))
                                                      (rule "allLeft" (formula "25") (inst "t=i_64"))
                                                      (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                                      (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "25") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "25") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "25"))
                                                      (rule "qeq_literals" (formula "1") (term "0"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "allRight" (formula "71") (inst "sk=i_63"))
                                                   (rule "orRight" (formula "71"))
                                                   (rule "orRight" (formula "71"))
                                                   (rule "notRight" (formula "73"))
                                                   (rule "inEqSimp_leqRight" (formula "72"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_geqRight" (formula "73"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_65"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "61")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                                   (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "7"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "61")) (ifInst ""  (formula "7")))
                                                   (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "44") (ifseqformula "60"))
                                                   (rule "allLeft" (formula "27") (inst "t=i_63"))
                                                   (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "27"))
                                                   (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                                   (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "27") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "27") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "27"))
                                                   (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "27") (term "0"))
                                                   (builtin "One Step Simplification" (formula "27"))
                                                   (rule "closeFalse" (formula "27"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "71") (inst "sk=i_62"))
                                                (rule "orRight" (formula "71"))
                                                (rule "orRight" (formula "71"))
                                                (rule "notRight" (formula "73"))
                                                (rule "inEqSimp_leqRight" (formula "72"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_geqRight" (formula "73"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_64"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "62")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "8"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "62")) (ifInst ""  (formula "8")))
                                                (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "44") (ifseqformula "61"))
                                                (rule "allLeft" (formula "29") (inst "t=i_62"))
                                                (rule "replace_known_left" (formula "29") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                                                (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "29") (term "0,0,1"))
                                                (rule "leq_literals" (formula "29") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "29"))
                                                (rule "qeq_literals" (formula "2") (term "0"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "allRight" (formula "71") (inst "sk=i_61"))
                                             (rule "orRight" (formula "71"))
                                             (rule "orRight" (formula "71"))
                                             (rule "notRight" (formula "73"))
                                             (rule "inEqSimp_geqRight" (formula "73"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_leqRight" (formula "73"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_63"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "63")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "9"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "63")) (ifInst ""  (formula "9")))
                                             (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "44") (ifseqformula "62"))
                                             (rule "allLeft" (formula "31") (inst "t=i_61"))
                                             (rule "replace_known_left" (formula "31") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                                             (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "31") (term "0,0,1"))
                                             (rule "leq_literals" (formula "31") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "31"))
                                             (rule "qeq_literals" (formula "1") (term "0"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "allRight" (formula "71") (inst "sk=i_60"))
                                          (rule "orRight" (formula "71"))
                                          (rule "orRight" (formula "71"))
                                          (rule "notRight" (formula "73"))
                                          (rule "inEqSimp_geqRight" (formula "73"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "73"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_62"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "64")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                          (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "10"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "64")) (ifInst ""  (formula "10")))
                                          (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "44") (ifseqformula "63"))
                                          (rule "allLeft" (formula "33") (inst "t=i_60"))
                                          (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                          (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "33") (term "0,0,1"))
                                          (rule "leq_literals" (formula "33") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "inEqSimp_contradInEq1" (formula "33") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "33") (term "0"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "closeFalse" (formula "33"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "71") (inst "sk=f_10"))
                                       (rule "allRight" (formula "71") (inst "sk=o_10"))
                                       (rule "orRight" (formula "71"))
                                       (rule "pullOutSelect" (formula "72") (term "0") (inst "selectSK=f_10_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "45"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "33"))
                                       (rule "eqSymm" (formula "73"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_10_1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "73")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch " ¬o_10 = null ∧ ¬( o_10.<created> = TRUE ∨ o_10.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "orRight" (formula "54"))
                                          (rule "applyEqReverse" (formula "76") (term "1") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "eqSymm" (formula "75"))
                                          (rule "replace_known_right" (formula "74") (term "0,1") (ifseqformula "53"))
                                          (builtin "One Step Simplification" (formula "74") (ifInst ""  (formula "55")))
                                          (rule "closeTrue" (formula "74"))
                                       )
                                       (branch " ¬o_10 = null ∧ ¬( o_10.<created> = TRUE ∨ o_10.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) FALSE"
                                          (rule "close" (formula "74") (ifseqformula "1"))
                                       )
                                    )
                                 )
                                 (branch "CUT: verif.selectvoting.system.core.MixServer.MalformedData::instance(exc_2) = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "52"))
                                    (rule "andRight" (formula "72"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "72"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "72"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "72"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "72"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "72"))
                                                   (branch "Case 1"
                                                      (rule "allRight" (formula "72") (inst "sk=i_59"))
                                                      (rule "orRight" (formula "72"))
                                                      (rule "orRight" (formula "72"))
                                                      (rule "notRight" (formula "74"))
                                                      (rule "inEqSimp_leqRight" (formula "73"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_geqRight" (formula "74"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_61"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "60")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "5"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "60")) (ifInst ""  (formula "5")))
                                                      (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "44") (ifseqformula "59"))
                                                      (rule "allLeft" (formula "23") (inst "t=i_59"))
                                                      (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "23"))
                                                      (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                                      (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "23") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "23") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "23"))
                                                      (rule "inEqSimp_contradInEq1" (formula "23") (ifseqformula "2"))
                                                      (rule "qeq_literals" (formula "23") (term "0"))
                                                      (builtin "One Step Simplification" (formula "23"))
                                                      (rule "closeFalse" (formula "23"))
                                                   )
                                                   (branch "Case 2"
                                                      (rule "allRight" (formula "72") (inst "sk=i_58"))
                                                      (rule "orRight" (formula "72"))
                                                      (rule "orRight" (formula "72"))
                                                      (rule "notRight" (formula "74"))
                                                      (rule "inEqSimp_leqRight" (formula "73"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_geqRight" (formula "74"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_60"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "61")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "6"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "61")) (ifInst ""  (formula "6")))
                                                      (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "44") (ifseqformula "60"))
                                                      (rule "allLeft" (formula "25") (inst "t=i_58"))
                                                      (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                                      (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "25") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "inEqSimp_contradInEq1" (formula "25") (ifseqformula "2"))
                                                      (rule "qeq_literals" (formula "25") (term "0"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "closeFalse" (formula "25"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "allRight" (formula "72") (inst "sk=i_57"))
                                                   (rule "orRight" (formula "72"))
                                                   (rule "orRight" (formula "72"))
                                                   (rule "notRight" (formula "74"))
                                                   (rule "inEqSimp_geqRight" (formula "74"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_leqRight" (formula "74"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_59"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "62")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                                   (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "7"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "62")) (ifInst ""  (formula "7")))
                                                   (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "44") (ifseqformula "61"))
                                                   (rule "allLeft" (formula "27") (inst "t=i_57"))
                                                   (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "27"))
                                                   (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                                   (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "27") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "27") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "27"))
                                                   (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "1"))
                                                   (rule "qeq_literals" (formula "27") (term "0"))
                                                   (builtin "One Step Simplification" (formula "27"))
                                                   (rule "closeFalse" (formula "27"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "72") (inst "sk=i_56"))
                                                (rule "orRight" (formula "72"))
                                                (rule "orRight" (formula "72"))
                                                (rule "notRight" (formula "74"))
                                                (rule "inEqSimp_leqRight" (formula "73"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_geqRight" (formula "74"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_58"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "63")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "8"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "63")) (ifInst ""  (formula "8")))
                                                (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "44") (ifseqformula "62"))
                                                (rule "allLeft" (formula "29") (inst "t=i_56"))
                                                (rule "replace_known_left" (formula "29") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                                                (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "29") (term "0,0,1"))
                                                (rule "leq_literals" (formula "29") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "inEqSimp_contradInEq1" (formula "29") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "29") (term "0"))
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "closeFalse" (formula "29"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "allRight" (formula "72") (inst "sk=i_55"))
                                             (rule "orRight" (formula "72"))
                                             (rule "orRight" (formula "72"))
                                             (rule "notRight" (formula "74"))
                                             (rule "inEqSimp_geqRight" (formula "74"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_leqRight" (formula "74"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_57"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "64")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "9"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "64")) (ifInst ""  (formula "9")))
                                             (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "44") (ifseqformula "63"))
                                             (rule "allLeft" (formula "31") (inst "t=i_55"))
                                             (rule "replace_known_left" (formula "31") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                                             (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "31") (term "0,0,1"))
                                             (rule "leq_literals" (formula "31") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "inEqSimp_contradInEq1" (formula "31") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "31") (term "0"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "closeFalse" (formula "31"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "allRight" (formula "72") (inst "sk=i_54"))
                                          (rule "orRight" (formula "72"))
                                          (rule "orRight" (formula "72"))
                                          (rule "notRight" (formula "74"))
                                          (rule "inEqSimp_geqRight" (formula "74"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "74"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_56"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "48"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "65")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "36"))
                                          (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "10"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "65")) (ifInst ""  (formula "10")))
                                          (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "44") (ifseqformula "64"))
                                          (rule "allLeft" (formula "33") (inst "t=i_54"))
                                          (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                          (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "33") (term "0,0,1"))
                                          (rule "leq_literals" (formula "33") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "inEqSimp_contradInEq1" (formula "33") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "33") (term "0"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "closeFalse" (formula "33"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "72") (inst "sk=f_9"))
                                       (rule "allRight" (formula "72") (inst "sk=o_9"))
                                       (rule "orRight" (formula "72"))
                                       (rule "pullOutSelect" (formula "73") (term "0") (inst "selectSK=f_9_0"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "45"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "33"))
                                       (rule "eqSymm" (formula "74"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_9_1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch " ¬o_9 = null ∧ ¬( o_9.<created> = TRUE ∨ o_9.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "orRight" (formula "55"))
                                          (rule "applyEqReverse" (formula "77") (term "1") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "eqSymm" (formula "76"))
                                          (rule "replace_known_right" (formula "75") (term "0,0") (ifseqformula "53"))
                                          (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "54")))
                                          (rule "closeTrue" (formula "75"))
                                       )
                                       (branch " ¬o_9 = null ∧ ¬( o_9.<created> = TRUE ∨ o_9.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) FALSE"
                                          (rule "close" (formula "75") (ifseqformula "1"))
                                       )
                                    )
                                 )
                              )
                           )
                        )
                        (branch "ClassCastException (!(exc_2 instanceof java.lang.Throwable))"
                           (builtin "One Step Simplification" (formula "69"))
                           (rule "closeTrue" (formula "69"))
                        )
                     )
                     (branch "if exc_2 instanceof java.lang.Throwable false"
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
               )
               (branch "Pre (getSignature)"
                  (builtin "One Step Simplification" (formula "7"))
                  (builtin "One Step Simplification" (formula "5"))
                  (builtin "One Step Simplification" (formula "1"))
                  (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "8")) (ifInst ""  (formula "8")))
                  (rule "andLeft" (formula "3"))
                  (rule "notLeft" (formula "2"))
                  (rule "andLeft" (formula "7"))
                  (rule "andLeft" (formula "5"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "1,1") (ifseqformula "5"))
                  (rule "wellFormedAnonEQ" (formula "12") (term "0,1") (ifseqformula "5"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "6") (term "1,1,0") (ifseqformula "5"))
                  (rule "andLeft" (formula "3"))
                  (rule "andLeft" (formula "2"))
                  (rule "andLeft" (formula "11"))
                  (rule "andLeft" (formula "8"))
                  (rule "notLeft" (formula "5"))
                  (rule "andLeft" (formula "2"))
                  (rule "andLeft" (formula "9"))
                  (rule "andLeft" (formula "8"))
                  (rule "typeEqDerived" (formula "11") (term "0,1,1,1") (ifseqformula "8"))
                  (rule "typeEqDerived" (formula "11") (term "0,1,0,1,1") (ifseqformula "8"))
                  (rule "typeEqDerived" (formula "11") (term "0,0,0,1,1") (ifseqformula "8"))
                  (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "8")))
                  (rule "true_left" (formula "11"))
                  (rule "andLeft" (formula "2"))
                  (rule "andLeft" (formula "2"))
                  (rule "andLeft" (formula "2"))
                  (rule "notLeft" (formula "2"))
                  (rule "eqSymm" (formula "14") (term "0,1"))
                  (rule "eqSymm" (formula "14") (term "0,0,0,1"))
                  (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "18"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "replace_known_left" (formula "15") (term "1,1") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "1")))
                  (rule "notLeft" (formula "15"))
                  (rule "orRight" (formula "15"))
                  (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "9"))
                  (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "15")))
                  (rule "andLeft" (formula "11"))
                  (rule "replace_known_left" (formula "15") (term "1,1") (ifseqformula "14"))
                  (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "16")) (ifInst ""  (formula "17")))
                  (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "16"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "replace_known_left" (formula "21") (term "0,0,1") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "12")) (ifInst ""  (formula "7")) (ifInst ""  (formula "4")))
                  (rule "inEqSimp_ltRight" (formula "19"))
                  (rule "mul_literals" (formula "1") (term "0,0"))
                  (rule "inEqSimp_geqRight" (formula "21"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "applyEq" (formula "17") (term "1") (ifseqformula "3"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "applyEq" (formula "17") (term "1") (ifseqformula "13"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "mul_literals" (formula "2") (term "1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                  (rule "qeq_literals" (formula "1") (term "0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
         (branch "Exceptional Post (equal)"
            (builtin "One Step Simplification" (formula "6"))
            (builtin "One Step Simplification" (formula "4"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "notLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "4"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "7") (term "1") (ifseqformula "4"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "5") (term "1,1,0") (ifseqformula "4"))
            (rule "andLeft" (formula "2"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "10"))
            (rule "andLeft" (formula "9"))
            (rule "andLeft" (formula "7"))
            (rule "notLeft" (formula "4"))
            (rule "andLeft" (formula "1"))
            (rule "notLeft" (formula "10"))
            (rule "andLeft" (formula "8"))
            (rule "andLeft" (formula "7"))
            (rule "typeEqDerived" (formula "10") (term "0,1,1,1") (ifseqformula "7"))
            (rule "typeEqDerived" (formula "10") (term "0,0,0,1,1") (ifseqformula "7"))
            (rule "typeEqDerived" (formula "10") (term "0,1,0,1,1") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "7")))
            (rule "true_left" (formula "10"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "eqSymm" (formula "19") (term "0,1,0,0,0,1"))
            (rule "eqSymm" (formula "19") (term "1,0,0,1,0,1"))
            (rule "eqSymm" (formula "13") (term "0,1"))
            (rule "eqSymm" (formula "13") (term "0,0,0,1"))
            (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "18"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "8"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "andLeft" (formula "10"))
            (rule "andLeft" (formula "11"))
            (rule "notLeft" (formula "12"))
            (rule "replace_known_right" (formula "15") (term "1,1") (ifseqformula "18"))
            (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "16")))
            (rule "notLeft" (formula "15"))
            (rule "replace_known_right" (formula "14") (term "1,1") (ifseqformula "18"))
            (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "16")) (ifInst ""  (formula "15")))
            (rule "closeFalse" (formula "14"))
         )
         (branch "Pre (equal)"
            (builtin "One Step Simplification" (formula "4"))
            (builtin "One Step Simplification" (formula "6"))
            (rule "notLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "4"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "8") (term "1,1,1") (ifseqformula "4"))
            (rule "wellFormedAnonEQ" (formula "8") (term "0,0,1") (ifseqformula "4"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "5") (term "1,1,0") (ifseqformula "4"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "8") (term "1,1,0,1") (ifseqformula "4"))
            (rule "andLeft" (formula "2"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "7"))
            (rule "notLeft" (formula "4"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "8"))
            (rule "andLeft" (formula "7"))
            (rule "typeEqDerived" (formula "10") (term "0,1,1,1") (ifseqformula "7"))
            (rule "typeEqDerived" (formula "10") (term "0,0,0,1,1") (ifseqformula "7"))
            (rule "typeEqDerived" (formula "10") (term "0,1,0,1,1") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "7")))
            (rule "true_left" (formula "10"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "notLeft" (formula "2"))
            (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "4"))
            (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "9"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "andLeft" (formula "11"))
            (rule "andLeft" (formula "12"))
            (rule "notLeft" (formula "13"))
            (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "13"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "replace_known_right" (formula "17") (term "0,1,0") (ifseqformula "13"))
            (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "13")) (ifInst ""  (formula "1")) (ifInst ""  (formula "7")) (ifInst ""  (formula "13")) (ifInst ""  (formula "10")))
            (rule "orRight" (formula "17"))
            (rule "orRight" (formula "18"))
            (rule "inEqSimp_ltRight" (formula "15"))
            (rule "mul_literals" (formula "1") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
            (rule "mul_literals" (formula "1") (term "1"))
            (rule "array2seqDef" (formula "12") (term "0") (inst "u=u"))
            (rule "array2seqDef" (formula "12") (term "0,1") (inst "u=u"))
            (rule "eqSeqDef2" (formula "12") (inst "iv=iv") (ifseqformula "12"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "true_left" (formula "12"))
            (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_2"))
            (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")) (ifInst ""  (formula "4")))
            (rule "referencedObjectIsCreatedRightEQ" (formula "18") (ifseqformula "1") (ifseqformula "17"))
            (rule "close" (formula "18") (ifseqformula "3"))
         )
      )
      (branch "Exceptional Post (getPayLoad)"
         (builtin "One Step Simplification" (formula "5"))
         (builtin "One Step Simplification" (formula "4"))
         (builtin "One Step Simplification" (formula "1"))
         (builtin "One Step Simplification" (formula "6"))
         (rule "andLeft" (formula "2"))
         (rule "andLeft" (formula "5"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "6") (term "1,0") (ifseqformula "5"))
         (rule "notLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "3"))
         (rule "andLeft" (formula "7"))
         (rule "andLeft" (formula "1"))
         (rule "notLeft" (formula "5"))
         (rule "andLeft" (formula "7"))
         (rule "andLeft" (formula "9"))
         (rule "andLeft" (formula "1"))
         (rule "notLeft" (formula "8"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "notLeft" (formula "2"))
         (rule "eqSymm" (formula "16") (term "1,0,0,1,0,1"))
         (rule "eqSymm" (formula "16") (term "0,1,0,0,0,1"))
         (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "15"))
         (builtin "One Step Simplification" (formula "4"))
         (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "13"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "true_left" (formula "10"))
         (rule "replace_known_right" (formula "10") (term "0,0") (ifseqformula "12"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "andLeft" (formula "10"))
         (rule "inEqSimp_ltRight" (formula "14"))
         (rule "mul_literals" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
         (rule "mul_literals" (formula "1") (term "1"))
         (rule "array2seqDef" (formula "16") (term "0,1,0,1,1,0,0,0,1") (inst "u=u"))
         (rule "eqSymm" (formula "16") (term "0,1,1,0,0,0,1"))
         (rule "array2seqDef" (formula "16") (term "0,0,1,0,0,0,1") (inst "u=u"))
         (rule "array2seqDef" (formula "16") (term "0,1,0,1,0,0,0,1") (inst "u=u"))
         (rule "array2seqDef" (formula "16") (term "1,0,1,1,0,0,0,1") (inst "u=u"))
         (rule "eqSymm" (formula "16") (term "0,1,1,0,0,0,1"))
         (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "11") (ifseqformula "4"))
         (rule "andLeft" (formula "11"))
         (rule "andLeft" (formula "11"))
         (rule "notLeft" (formula "13"))
         (rule "andLeft" (formula "11"))
         (rule "notLeft" (formula "13"))
         (rule "andLeft" (formula "11"))
         (rule "notLeft" (formula "13"))
         (rule "andLeft" (formula "11"))
         (rule "notLeft" (formula "13"))
         (rule "andLeft" (formula "11"))
         (rule "andLeft" (formula "11"))
         (rule "andLeft" (formula "11"))
         (rule "andLeft" (formula "11"))
         (rule "andLeft" (formula "11"))
         (rule "andLeft" (formula "11"))
         (rule "notLeft" (formula "12"))
         (rule "notLeft" (formula "11"))
         (rule "nonNull" (formula "16") (inst "i=i"))
         (rule "greater_literals" (formula "16") (term "0,1"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "sub_literals" (formula "16") (term "2,1,0,1"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "andLeft" (formula "16"))
         (rule "notLeft" (formula "16"))
         (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "15") (inst "i=i"))
         (rule "sub_literals" (formula "15") (term "2,1,0,1,1"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "greater_literals" (formula "15") (term "0,1"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "andLeft" (formula "15"))
         (rule "notLeft" (formula "15"))
         (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "14") (inst "i=i"))
         (rule "sub_literals" (formula "14") (term "2,1,0,1,1"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "greater_literals" (formula "14") (term "0,1"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "andLeft" (formula "14"))
         (rule "notLeft" (formula "14"))
         (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "13") (inst "i=i"))
         (rule "greater_literals" (formula "13") (term "0,1"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "sub_literals" (formula "13") (term "2,1,0,1"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "andLeft" (formula "13"))
         (rule "notLeft" (formula "13"))
         (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
         (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "12") (inst "i=i"))
         (rule "sub_literals" (formula "12") (term "2,1,0,1,1"))
         (builtin "One Step Simplification" (formula "12"))
         (rule "greater_literals" (formula "12") (term "0,1"))
         (builtin "One Step Simplification" (formula "12"))
         (rule "andLeft" (formula "12"))
         (rule "notLeft" (formula "12"))
         (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "11") (inst "i=i"))
         (rule "greater_literals" (formula "11") (term "0,1"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "sub_literals" (formula "11") (term "2,1,0,1"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "andLeft" (formula "11"))
         (rule "notLeft" (formula "11"))
         (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
         (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")) (ifInst ""  (formula "4")))
         (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")) (ifInst ""  (formula "4")))
         (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")) (ifInst ""  (formula "4")))
         (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "pullOutSelect" (formula "26") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")) (ifInst ""  (formula "4")))
         (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")) (ifInst ""  (formula "4")))
         (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")) (ifInst ""  (formula "4")))
         (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "pullOutSelect" (formula "16") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_1"))
         (rule "applyEq" (formula "17") (term "0,1,1,1,0,0") (ifseqformula "16"))
         (rule "applyEq" (formula "24") (term "0") (ifseqformula "16"))
         (rule "simplifySelectOfAnonEQ" (formula "16") (ifseqformula "9"))
         (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "31")) (ifInst ""  (formula "3")))
         (rule "applyEqReverse" (formula "17") (term "1,0,0,1,0") (ifseqformula "16"))
         (rule "applyEqReverse" (formula "17") (term "0,1,1,1,0,0") (ifseqformula "16"))
         (rule "applyEqReverse" (formula "24") (term "0") (ifseqformula "16"))
         (rule "hideAuxiliaryEq" (formula "16"))
         (rule "pullOutSelect" (formula "15") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_1"))
         (rule "applyEq" (formula "23") (term "0") (ifseqformula "15"))
         (rule "applyEq" (formula "16") (term "0,1,1,1,0,0") (ifseqformula "15"))
         (rule "simplifySelectOfAnonEQ" (formula "15") (ifseqformula "9"))
         (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "31")) (ifInst ""  (formula "3")))
         (rule "applyEqReverse" (formula "16") (term "1,0,0,1,0") (ifseqformula "15"))
         (rule "applyEqReverse" (formula "23") (term "0") (ifseqformula "15"))
         (rule "applyEqReverse" (formula "16") (term "0,1,1,1,0,0") (ifseqformula "15"))
         (rule "hideAuxiliaryEq" (formula "15"))
         (rule "pullOutSelect" (formula "14") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_1"))
         (rule "applyEq" (formula "15") (term "0,1,1,1,0,0") (ifseqformula "14"))
         (rule "applyEq" (formula "22") (term "0") (ifseqformula "14"))
         (rule "simplifySelectOfAnonEQ" (formula "14") (ifseqformula "9"))
         (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "31")) (ifInst ""  (formula "3")))
         (rule "applyEqReverse" (formula "15") (term "1,0,0,1,0") (ifseqformula "14"))
         (rule "applyEqReverse" (formula "15") (term "0,1,1,1,0,0") (ifseqformula "14"))
         (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "14"))
         (rule "hideAuxiliaryEq" (formula "14"))
         (rule "pullOutSelect" (formula "13") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_1"))
         (rule "applyEq" (formula "14") (term "0,1,1,1,0,0") (ifseqformula "13"))
         (rule "applyEq" (formula "21") (term "0") (ifseqformula "13"))
         (rule "simplifySelectOfAnonEQ" (formula "13") (ifseqformula "9"))
         (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "31")) (ifInst ""  (formula "3")))
         (rule "applyEqReverse" (formula "14") (term "1,0,0,1,0") (ifseqformula "13"))
         (rule "applyEqReverse" (formula "14") (term "0,1,1,1,0,0") (ifseqformula "13"))
         (rule "applyEqReverse" (formula "21") (term "0") (ifseqformula "13"))
         (rule "hideAuxiliaryEq" (formula "13"))
         (rule "pullOutSelect" (formula "12") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_1"))
         (rule "applyEq" (formula "20") (term "0") (ifseqformula "12"))
         (rule "applyEq" (formula "13") (term "0,1,1,1,0,0") (ifseqformula "12"))
         (rule "simplifySelectOfAnonEQ" (formula "12") (ifseqformula "9"))
         (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "31")) (ifInst ""  (formula "3")))
         (rule "applyEqReverse" (formula "13") (term "1,0,0,1,0") (ifseqformula "12"))
         (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "12"))
         (rule "applyEqReverse" (formula "13") (term "0,1,1,1,0,0") (ifseqformula "12"))
         (rule "hideAuxiliaryEq" (formula "12"))
         (rule "pullOutSelect" (formula "11") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_1"))
         (rule "applyEq" (formula "12") (term "0,1,1,1,0,0") (ifseqformula "11"))
         (rule "applyEq" (formula "19") (term "0") (ifseqformula "11"))
         (rule "simplifySelectOfAnonEQ" (formula "11") (ifseqformula "9"))
         (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "31")) (ifInst ""  (formula "3")))
         (rule "applyEqReverse" (formula "12") (term "1,0,0,1,0") (ifseqformula "11"))
         (rule "applyEqReverse" (formula "12") (term "0,1,1,1,0,0") (ifseqformula "11"))
         (rule "applyEqReverse" (formula "19") (term "0") (ifseqformula "11"))
         (rule "hideAuxiliaryEq" (formula "11"))
         (rule "nnf_imp2or" (formula "16") (term "0"))
         (rule "nnf_imp2or" (formula "15") (term "0"))
         (rule "nnf_imp2or" (formula "14") (term "0"))
         (rule "nnf_imp2or" (formula "13") (term "0"))
         (rule "nnf_imp2or" (formula "12") (term "0"))
         (rule "nnf_imp2or" (formula "11") (term "0"))
         (rule "nnf_notAnd" (formula "16") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
         (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
         (rule "mul_literals" (formula "16") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "15") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
         (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
         (rule "mul_literals" (formula "15") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "14") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
         (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
         (rule "mul_literals" (formula "14") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "13") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
         (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
         (rule "mul_literals" (formula "13") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "12") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
         (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
         (rule "mul_literals" (formula "12") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "11") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
         (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
         (rule "mul_literals" (formula "11") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
         (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "7") (ifseqformula "4"))
         (rule "andLeft" (formula "7"))
         (rule "notLeft" (formula "8"))
         (rule "andLeft" (formula "7"))
         (rule "notLeft" (formula "8"))
         (rule "andLeft" (formula "7"))
         (rule "notLeft" (formula "8"))
         (rule "andLeft" (formula "7"))
         (rule "notLeft" (formula "8"))
         (rule "andLeft" (formula "7"))
         (rule "andLeft" (formula "7"))
         (rule "andLeft" (formula "7"))
         (rule "andLeft" (formula "7"))
         (rule "andLeft" (formula "7"))
         (rule "andLeft" (formula "7"))
         (rule "andLeft" (formula "7"))
         (rule "notLeft" (formula "7"))
         (rule "notLeft" (formula "7"))
         (rule "nonNull" (formula "12") (inst "i=i"))
         (rule "sub_literals" (formula "12") (term "2,1,0,1,1"))
         (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "28")))
         (rule "greater_literals" (formula "12") (term "0"))
         (builtin "One Step Simplification" (formula "12"))
         (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "28"))
         (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "11") (inst "i=i"))
         (rule "greater_literals" (formula "11") (term "0,1"))
         (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "27")))
         (rule "sub_literals" (formula "11") (term "2,1,0"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "27"))
         (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "10") (inst "i=i"))
         (rule "sub_literals" (formula "10") (term "2,1,0,1,1"))
         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "26")))
         (rule "greater_literals" (formula "10") (term "0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "26"))
         (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "9") (inst "i=i"))
         (rule "greater_literals" (formula "9") (term "0,1"))
         (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "25")))
         (rule "sub_literals" (formula "9") (term "2,1,0"))
         (builtin "One Step Simplification" (formula "9"))
         (rule "narrowSelectArrayType" (formula "9") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "25"))
         (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "8") (inst "i=i"))
         (rule "greater_literals" (formula "8") (term "0,1"))
         (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "24")))
         (rule "sub_literals" (formula "8") (term "2,1,0"))
         (builtin "One Step Simplification" (formula "8"))
         (rule "narrowSelectArrayType" (formula "8") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "24"))
         (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "7") (inst "i=i"))
         (rule "greater_literals" (formula "7") (term "0,1"))
         (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "23")))
         (rule "sub_literals" (formula "7") (term "2,1,0"))
         (builtin "One Step Simplification" (formula "7"))
         (rule "narrowSelectArrayType" (formula "7") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "23"))
         (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
         (rule "nnf_imp2or" (formula "12") (term "0"))
         (rule "nnf_imp2or" (formula "11") (term "0"))
         (rule "nnf_imp2or" (formula "10") (term "0"))
         (rule "nnf_imp2or" (formula "9") (term "0"))
         (rule "nnf_imp2or" (formula "8") (term "0"))
         (rule "methodCallParamThrow" (formula "38") (term "1"))
         (builtin "One Step Simplification" (formula "38"))
         (rule "nnf_imp2or" (formula "7") (term "0"))
         (rule "nnf_notAnd" (formula "12") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
         (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
         (rule "mul_literals" (formula "12") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "11") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
         (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
         (rule "mul_literals" (formula "11") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "10") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
         (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
         (rule "mul_literals" (formula "10") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "9") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
         (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "9") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
         (rule "mul_literals" (formula "9") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "8") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
         (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
         (rule "mul_literals" (formula "8") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "7") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
         (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "7") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
         (rule "mul_literals" (formula "7") (term "1,0,0,0"))
         (rule "commute_or_2" (formula "21") (term "0"))
         (rule "commute_or_2" (formula "20") (term "0"))
         (rule "commute_or_2" (formula "19") (term "0"))
         (rule "commute_or_2" (formula "18") (term "0"))
         (rule "commute_or_2" (formula "17") (term "0"))
         (rule "commute_or_2" (formula "16") (term "0"))
         (rule "arrayLengthIsAShort" (formula "1") (term "0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "arrayLengthNotNegative" (formula "1") (term "0"))
         (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "2"))
         (rule "leq_literals" (formula "1") (term "0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "commute_or_2" (formula "12") (term "0"))
         (rule "commute_or_2" (formula "11") (term "0"))
         (rule "commute_or_2" (formula "10") (term "0"))
         (rule "commute_or_2" (formula "9") (term "0"))
         (rule "commute_or_2" (formula "8") (term "0"))
         (rule "commute_or_2" (formula "7") (term "0"))
         (rule "commute_or" (formula "21") (term "0,0"))
         (rule "commute_or" (formula "20") (term "0,0"))
         (rule "commute_or" (formula "19") (term "0,0"))
         (rule "commute_or" (formula "18") (term "0,0"))
         (rule "commute_or" (formula "17") (term "0,0"))
         (rule "commute_or" (formula "16") (term "0,0"))
         (rule "commute_or" (formula "12") (term "0,0"))
         (rule "commute_or" (formula "11") (term "0,0"))
         (rule "commute_or" (formula "10") (term "0,0"))
         (rule "commute_or" (formula "9") (term "0,0"))
         (rule "tryCatchThrow" (formula "38") (term "1"))
         (rule "commute_or" (formula "8") (term "0,0"))
         (rule "commute_or" (formula "7") (term "0,0"))
         (rule "ifElseUnfold" (formula "38") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "38") (term "1") (newnames "x_3"))
         (rule "equality_comparison_simple" (formula "38") (term "1"))
         (builtin "One Step Simplification" (formula "38"))
         (rule "replace_known_right" (formula "38") (term "0,0,1,0") (ifseqformula "36"))
         (builtin "One Step Simplification" (formula "38"))
         (rule "ifElseSplit" (formula "38"))
         (branch "if x_3 true"
            (builtin "One Step Simplification" (formula "39"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch "if x_3 false"
            (builtin "One Step Simplification" (formula "39"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "ifElseSplit" (formula "38"))
            (branch "if exc_0 instanceof java.lang.Throwable true"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
               (rule "true_left" (formula "1"))
               (rule "variableDeclaration" (formula "38") (term "1") (newnames "e_1"))
               (rule "reference_type_cast" (formula "38") (term "1"))
               (branch "Normal Execution (exc_0 instanceof java.lang.Throwable)"
                  (builtin "One Step Simplification" (formula "39"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "assignment" (formula "38") (term "1"))
                  (builtin "One Step Simplification" (formula "38"))
                  (rule "emptyModality" (formula "38") (term "1"))
                  (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "22")))
                  (rule "eqSymm" (formula "38") (term "1,0,0,1"))
                  (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "38") (term "0") (ifseqformula "4"))
                  (rule "replaceKnownSelect_taclet110_0" (formula "38") (term "0,0,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110_1" (formula "38") (term "0,0,1,0"))
                  (rule "replaceKnownSelect_taclet110_2" (formula "38") (term "0,0,1,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110_3" (formula "38") (term "0,0,1,0,0"))
                  (rule "replaceKnownSelect_taclet110_4" (formula "38") (term "0,0,1,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110_5" (formula "38") (term "0,0,1,0,0,0"))
                  (rule "replaceKnownSelect_taclet110_12" (formula "38") (term "1,1,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet110_6" (formula "38") (term "0,0,1,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110_13" (formula "38") (term "1,1,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110_7" (formula "38") (term "0,0,1,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet110_14" (formula "38") (term "1,1,0,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet110_16" (formula "38") (term "1,1,0,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110_15" (formula "38") (term "1,1,0,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet110_18" (formula "38") (term "1,1,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110_17" (formula "38") (term "1,1,0,0,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet110_20" (formula "38") (term "1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110_19" (formula "38") (term "1,1,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet110_22" (formula "38") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110_21" (formula "38") (term "1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110_23" (formula "38") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet110_10" (formula "38") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet110_8" (formula "38") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110_11" (formula "38") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110_9" (formula "38") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "replace_known_right" (formula "38") (term "0,1,0,0") (ifseqformula "33"))
                  (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "29")) (ifInst ""  (formula "30")) (ifInst ""  (formula "31")) (ifInst ""  (formula "32")) (ifInst ""  (formula "34")))
                  (rule "nonNull" (formula "38") (term "1,0,0,0,0") (inst "i=i"))
                  (rule "sub_literals" (formula "38") (term "2,1,0,1,1,1,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "25")))
                  (rule "greater_literals" (formula "38") (term "0,1,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "38"))
                  (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,1,0,0,0,0"))
                  (rule "mul_literals" (formula "38") (term "0,1,1,0,0,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,1,0,0,0,0"))
                  (rule "nonNull" (formula "38") (term "0,0,0,0,0,0") (inst "i=i"))
                  (rule "sub_literals" (formula "38") (term "2,1,0,1,1,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "23")))
                  (rule "greater_literals" (formula "38") (term "0,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "38"))
                  (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "38") (term "0,1,1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,0,0,0,0,0,0"))
                  (rule "nonNull" (formula "38") (term "1,0,0,0,0,0") (inst "i=i"))
                  (rule "sub_literals" (formula "38") (term "2,1,0,1,1,1,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "24")))
                  (rule "greater_literals" (formula "38") (term "0,1,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "38"))
                  (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "38") (term "0,1,1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,1,0,0,0,0,0"))
                  (rule "nonNull" (formula "38") (term "1,0,0,0") (inst "i=i"))
                  (rule "sub_literals" (formula "38") (term "2,1,0,1,1,1,0,0,0"))
                  (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "26")))
                  (rule "greater_literals" (formula "38") (term "0,1,0,0,0"))
                  (builtin "One Step Simplification" (formula "38"))
                  (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,1,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "38") (term "0,1,1,0,0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,1,0,0,0"))
                  (rule "nonNull" (formula "38") (term "1,0") (inst "i=i"))
                  (rule "sub_literals" (formula "38") (term "2,1,0,1,1,1,0"))
                  (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "28")))
                  (rule "greater_literals" (formula "38") (term "0,1,0"))
                  (builtin "One Step Simplification" (formula "38"))
                  (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "38") (term "0,1,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,1,0"))
                  (rule "nonNull" (formula "38") (term "1,0,0") (inst "i=i"))
                  (rule "greater_literals" (formula "38") (term "0,1,1,0,0"))
                  (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "27")))
                  (rule "sub_literals" (formula "38") (term "2,1,0,1,0,0"))
                  (builtin "One Step Simplification" (formula "38"))
                  (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "38") (term "0,1,1,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,1,0,0"))
                  (rule "nnf_imp2or" (formula "38") (term "0,1,0"))
                  (rule "nnf_imp2or" (formula "38") (term "0,1,0,0"))
                  (rule "nnf_notAnd" (formula "38") (term "0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0,1,0"))
                  (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0,1,0"))
                  (rule "add_literals" (formula "38") (term "0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,1,0"))
                  (rule "mul_literals" (formula "38") (term "1,0,0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0,1,0"))
                  (rule "add_literals" (formula "38") (term "0,0,0,1,0,0,1,0"))
                  (rule "add_zero_left" (formula "38") (term "0,0,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,1,0"))
                  (rule "nnf_imp2or" (formula "38") (term "0,1,0,0,0"))
                  (rule "nnf_imp2or" (formula "38") (term "0,1,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "38") (term "0,0,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0,1,0,0"))
                  (rule "add_literals" (formula "38") (term "0,0,0,1,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "38") (term "0,0,1,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0,1,0,0"))
                  (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "38") (term "0,0,0,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,1,0,0"))
                  (rule "mul_literals" (formula "38") (term "1,0,0,0,1,0,0"))
                  (rule "nnf_imp2or" (formula "38") (term "0,1,0,0,0,0,0"))
                  (rule "nnf_imp2or" (formula "38") (term "0,0,0,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "38") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0,1,0,0,0"))
                  (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0,1,0,0,0"))
                  (rule "add_zero_right" (formula "38") (term "0,0,0,0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "38") (term "1,0,0,0,1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0,1,0,0,0"))
                  (rule "add_literals" (formula "38") (term "0,0,0,1,0,0,1,0,0,0"))
                  (rule "add_zero_left" (formula "38") (term "0,0,1,0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "38") (term "0,0,1,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0,1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0,1,0,0,0,0"))
                  (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0,1,0,0,0,0"))
                  (rule "add_literals" (formula "38") (term "0,0,0,1,0,0,1,0,0,0,0"))
                  (rule "add_zero_left" (formula "38") (term "0,0,1,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0,1,0,0,0,0"))
                  (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0,1,0,0,0,0"))
                  (rule "add_zero_right" (formula "38") (term "0,0,0,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,1,0,0,0,0"))
                  (rule "mul_literals" (formula "38") (term "1,0,0,0,1,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "38") (term "0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0,1,0,0,0,0,0"))
                  (rule "add_literals" (formula "38") (term "0,0,0,1,0,0,1,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "38") (term "0,0,1,0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0,1,0,0,0,0,0"))
                  (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0,1,0,0,0,0,0"))
                  (rule "add_literals" (formula "38") (term "0,0,0,0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "38") (term "1,0,0,0,1,0,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "38") (term "0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "38") (term "0,0,0,1,0,0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "38") (term "0,0,1,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0,0,0,0,0,0,0"))
                  (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "38") (term "0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "38") (term "1,0,0,0,0,0,0,0,0,0"))
                  (rule "arrayLengthIsAShort" (formula "21") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "true_left" (formula "21"))
                  (rule "arrayLengthNotNegative" (formula "21") (term "1,1,0"))
                  (rule "arrayLengthNotNegative" (formula "20") (term "1,1,0"))
                  (rule "arrayLengthIsAShort" (formula "21") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "true_left" (formula "21"))
                  (rule "arrayLengthNotNegative" (formula "19") (term "1,1,0"))
                  (rule "arrayLengthIsAShort" (formula "20") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "true_left" (formula "20"))
                  (rule "arrayLengthIsAShort" (formula "18") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "18"))
                  (rule "true_left" (formula "18"))
                  (rule "arrayLengthNotNegative" (formula "18") (term "1,1,0"))
                  (rule "arrayLengthNotNegative" (formula "17") (term "1,1,0"))
                  (rule "arrayLengthIsAShort" (formula "18") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "18"))
                  (rule "true_left" (formula "18"))
                  (rule "arrayLengthNotNegative" (formula "16") (term "1,1,0"))
                  (rule "cut_direct" (formula "28") (term "1,0"))
                  (branch "CUT: java.lang.RuntimeException::instance(exc_0) = TRUE TRUE"
                     (rule "instanceof_not_compatible_5" (formula "29") (term "1") (ifseqformula "28"))
                     (rule "instanceof_not_compatible_5" (formula "29") (term "0,0") (ifseqformula "28"))
                     (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "43")) (ifInst ""  (formula "43")))
                     (rule "true_left" (formula "29"))
                     (rule "arrayLengthIsAShort" (formula "17") (term "1,1,0"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "true_left" (formula "17"))
                     (rule "cut_direct" (formula "15") (term "0"))
                     (branch "CUT: exc_0.<created> = TRUE TRUE"
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "true_left" (formula "16"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "39") (term "0") (ifseqformula "2"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "40"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "0") (ifseqformula "3"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "42"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "39") (term "0") (ifseqformula "4"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "40"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "39") (term "0") (ifseqformula "5"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "40"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0") (ifseqformula "6"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "43"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "40") (term "0") (ifseqformula "7"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "41"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "40") (term "0") (ifseqformula "8"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "41"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "39") (term "0") (ifseqformula "9"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "40"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "0") (ifseqformula "10"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "42"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "40") (term "0") (ifseqformula "11"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "41"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "40") (term "0") (ifseqformula "12"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "41"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "40") (term "0") (ifseqformula "13"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "41"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "andRight" (formula "56"))
                        (branch "Case 1"
                           (rule "andRight" (formula "56"))
                           (branch "Case 1"
                              (rule "andRight" (formula "56"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "56"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "56"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "56"))
                                       (branch "Case 1"
                                          (rule "allRight" (formula "56") (inst "sk=i_29"))
                                          (rule "orRight" (formula "56"))
                                          (rule "orRight" (formula "56"))
                                          (rule "notRight" (formula "58"))
                                          (rule "inEqSimp_geqRight" (formula "58"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "58"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_29"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "30"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "45")) (ifInst ""  (formula "5")))
                                          (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "17") (ifseqformula "44"))
                                          (rule "allLeft" (formula "22") (inst "t=i_29"))
                                          (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                          (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "22") (term "0,0,1"))
                                          (rule "leq_literals" (formula "22") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "22"))
                                          (rule "qeq_literals" (formula "1") (term "0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "Case 2"
                                          (rule "allRight" (formula "56") (inst "sk=i_28"))
                                          (rule "orRight" (formula "56"))
                                          (rule "orRight" (formula "56"))
                                          (rule "notRight" (formula "58"))
                                          (rule "inEqSimp_geqRight" (formula "58"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "58"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_28"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "30"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "46")) (ifInst ""  (formula "6")))
                                          (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "17") (ifseqformula "45"))
                                          (rule "allLeft" (formula "23") (inst "t=i_28"))
                                          (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "23") (term "0,0,1"))
                                          (rule "leq_literals" (formula "23") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "23"))
                                          (rule "qeq_literals" (formula "1") (term "0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "56") (inst "sk=i_27"))
                                       (rule "orRight" (formula "56"))
                                       (rule "orRight" (formula "56"))
                                       (rule "notRight" (formula "58"))
                                       (rule "inEqSimp_geqRight" (formula "58"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_leqRight" (formula "58"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_27"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "30"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "47")) (ifInst ""  (formula "7")))
                                       (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "17") (ifseqformula "46"))
                                       (rule "allLeft" (formula "24") (inst "t=i_27"))
                                       (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                       (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                       (rule "leq_literals" (formula "24") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "24") (term "0"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "closeFalse" (formula "24"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "56") (inst "sk=i_26"))
                                    (rule "orRight" (formula "56"))
                                    (rule "orRight" (formula "56"))
                                    (rule "notRight" (formula "58"))
                                    (rule "inEqSimp_leqRight" (formula "57"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_geqRight" (formula "58"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_26"))
                                    (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "48")) (ifInst ""  (formula "9")))
                                    (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "17") (ifseqformula "47"))
                                    (rule "allLeft" (formula "25") (inst "t=i_26"))
                                    (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                    (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                    (rule "leq_literals" (formula "25") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "inEqSimp_contradInEq1" (formula "25") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "25") (term "0"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "closeFalse" (formula "25"))
                                 )
                              )
                              (branch "Case 2"
                                 (rule "allRight" (formula "56") (inst "sk=i_25"))
                                 (rule "orRight" (formula "56"))
                                 (rule "orRight" (formula "56"))
                                 (rule "notRight" (formula "58"))
                                 (rule "inEqSimp_leqRight" (formula "57"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_geqRight" (formula "58"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_25"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "30"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "49")) (ifInst ""  (formula "8")))
                                 (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "17") (ifseqformula "48"))
                                 (rule "allLeft" (formula "26") (inst "t=i_25"))
                                 (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                 (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "26") (term "0,0,1"))
                                 (rule "leq_literals" (formula "26") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "26"))
                                 (rule "qeq_literals" (formula "2") (term "0"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "closeFalse" (formula "2"))
                              )
                           )
                           (branch "Case 2"
                              (rule "allRight" (formula "56") (inst "sk=i_24"))
                              (rule "orRight" (formula "56"))
                              (rule "notRight" (formula "57"))
                              (rule "orRight" (formula "57"))
                              (rule "inEqSimp_geqRight" (formula "58"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_leqRight" (formula "58"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_24"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "30"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "50")) (ifInst ""  (formula "10")))
                              (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "17") (ifseqformula "49"))
                              (rule "allLeft" (formula "27") (inst "t=i_24"))
                              (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                              (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "27") (term "0,0,1"))
                              (rule "leq_literals" (formula "27") (term "0,1"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "27") (term "0"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "closeFalse" (formula "27"))
                           )
                        )
                        (branch "Case 2"
                           (rule "allRight" (formula "56") (inst "sk=f_4"))
                           (rule "allRight" (formula "56") (inst "sk=o_4"))
                           (rule "orRight" (formula "56"))
                           (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=f_4_0"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                           (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "58"))
                           (rule "closeTrue" (formula "58"))
                        )
                     )
                     (branch "CUT: exc_0.<created> = TRUE FALSE"
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "40") (term "0") (ifseqformula "2"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "41"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0") (ifseqformula "3"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "43"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "40") (term "0") (ifseqformula "4"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "41"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0") (ifseqformula "5"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "43"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "0") (ifseqformula "6"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "42"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "0") (ifseqformula "7"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "42"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "0") (ifseqformula "8"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "42"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "0") (ifseqformula "9"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "42"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "0") (ifseqformula "10"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "42"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "0") (ifseqformula "11"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "42"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "0") (ifseqformula "12"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "42"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "0") (ifseqformula "13"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "42"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "andRight" (formula "57"))
                        (branch "Case 1"
                           (rule "andRight" (formula "57"))
                           (branch "Case 1"
                              (rule "andRight" (formula "57"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "57"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "57"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "57"))
                                       (branch "Case 1"
                                          (rule "allRight" (formula "57") (inst "sk=i_23"))
                                          (rule "orRight" (formula "57"))
                                          (rule "notRight" (formula "58"))
                                          (rule "orRight" (formula "58"))
                                          (rule "inEqSimp_leqRight" (formula "58"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_geqRight" (formula "59"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_23"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "30"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "46")) (ifInst ""  (formula "5")))
                                          (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "17") (ifseqformula "45"))
                                          (rule "allLeft" (formula "22") (inst "t=i_23"))
                                          (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                          (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "22") (term "0,0,1"))
                                          (rule "leq_literals" (formula "22") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "22"))
                                          (rule "qeq_literals" (formula "2") (term "0"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                       (branch "Case 2"
                                          (rule "allRight" (formula "57") (inst "sk=i_22"))
                                          (rule "orRight" (formula "57"))
                                          (rule "notRight" (formula "58"))
                                          (rule "orRight" (formula "58"))
                                          (rule "inEqSimp_leqRight" (formula "58"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_geqRight" (formula "59"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_22"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "30"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "47")) (ifInst ""  (formula "6")))
                                          (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "17") (ifseqformula "46"))
                                          (rule "allLeft" (formula "23") (inst "t=i_22"))
                                          (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "23") (term "0,0,1"))
                                          (rule "leq_literals" (formula "23") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "23") (term "0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "closeFalse" (formula "23"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "57") (inst "sk=i_21"))
                                       (rule "orRight" (formula "57"))
                                       (rule "notRight" (formula "58"))
                                       (rule "orRight" (formula "58"))
                                       (rule "inEqSimp_leqRight" (formula "58"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_geqRight" (formula "59"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_21"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "30"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "48")) (ifInst ""  (formula "7")))
                                       (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "17") (ifseqformula "47"))
                                       (rule "allLeft" (formula "24") (inst "t=i_21"))
                                       (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                       (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                       (rule "leq_literals" (formula "24") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "24") (term "0"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "closeFalse" (formula "24"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "57") (inst "sk=i_20"))
                                    (rule "orRight" (formula "57"))
                                    (rule "notRight" (formula "58"))
                                    (rule "orRight" (formula "58"))
                                    (rule "inEqSimp_geqRight" (formula "59"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "59"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_20"))
                                    (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "49")) (ifInst ""  (formula "8")))
                                    (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "17") (ifseqformula "48"))
                                    (rule "allLeft" (formula "25") (inst "t=i_20"))
                                    (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                    (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                    (rule "leq_literals" (formula "25") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "inEqSimp_contradInEq1" (formula "25") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "25") (term "0"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "closeFalse" (formula "25"))
                                 )
                              )
                              (branch "Case 2"
                                 (rule "allRight" (formula "57") (inst "sk=i_19"))
                                 (rule "orRight" (formula "57"))
                                 (rule "notRight" (formula "58"))
                                 (rule "orRight" (formula "58"))
                                 (rule "inEqSimp_leqRight" (formula "58"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_geqRight" (formula "59"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_19"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "30"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "50")) (ifInst ""  (formula "9")))
                                 (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "17") (ifseqformula "49"))
                                 (rule "allLeft" (formula "26") (inst "t=i_19"))
                                 (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                 (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "26") (term "0,0,1"))
                                 (rule "leq_literals" (formula "26") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "inEqSimp_contradInEq1" (formula "26") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "26") (term "0"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "closeFalse" (formula "26"))
                              )
                           )
                           (branch "Case 2"
                              (rule "allRight" (formula "57") (inst "sk=i_18"))
                              (rule "orRight" (formula "57"))
                              (rule "orRight" (formula "57"))
                              (rule "notRight" (formula "59"))
                              (rule "inEqSimp_leqRight" (formula "58"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_geqRight" (formula "59"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_18"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "30"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "51")) (ifInst ""  (formula "10")))
                              (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "17") (ifseqformula "50"))
                              (rule "allLeft" (formula "27") (inst "t=i_18"))
                              (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "27") (term "0,0"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "27"))
                              (rule "andLeft" (formula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "1"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,1,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0"))
                              (rule "add_literals" (formula "1") (term "0"))
                              (rule "leq_literals" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "Case 2"
                           (rule "allRight" (formula "57") (inst "sk=f_3"))
                           (rule "allRight" (formula "57") (inst "sk=o_3"))
                           (rule "orRight" (formula "57"))
                           (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=f_3_0"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                           (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "59"))
                           (rule "closeTrue" (formula "59"))
                        )
                     )
                  )
                  (branch "CUT: java.lang.RuntimeException::instance(exc_0) = TRUE FALSE"
                     (builtin "One Step Simplification" (formula "28"))
                     (rule "arrayLengthIsAShort" (formula "17") (term "1,1,0"))
                     (builtin "One Step Simplification" (formula "17"))
                     (rule "true_left" (formula "17"))
                     (rule "cut_direct" (formula "15") (term "0"))
                     (branch "CUT: exc_0.<created> = TRUE TRUE"
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "true_left" (formula "16"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "40") (term "0") (ifseqformula "2"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "41"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0") (ifseqformula "3"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "43"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "0") (ifseqformula "4"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "42"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "40") (term "0") (ifseqformula "5"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "41"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0") (ifseqformula "6"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "43"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "0") (ifseqformula "7"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "42"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "0") (ifseqformula "8"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "42"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "40") (term "0") (ifseqformula "9"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "41"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0") (ifseqformula "10"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "43"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "40") (term "0") (ifseqformula "11"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "41"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0") (ifseqformula "12"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "43"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "0") (ifseqformula "13"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "42"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "andRight" (formula "57"))
                        (branch "Case 1"
                           (rule "andRight" (formula "57"))
                           (branch "Case 1"
                              (rule "andRight" (formula "57"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "57"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "57"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "57"))
                                       (branch "Case 1"
                                          (rule "allRight" (formula "57") (inst "sk=i_17"))
                                          (rule "orRight" (formula "57"))
                                          (rule "notRight" (formula "58"))
                                          (rule "orRight" (formula "58"))
                                          (rule "inEqSimp_geqRight" (formula "59"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "59"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_17"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "30"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "46")) (ifInst ""  (formula "5")))
                                          (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "17") (ifseqformula "45"))
                                          (rule "allLeft" (formula "22") (inst "t=i_17"))
                                          (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "22") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "inEqSimp_contradInEq1" (formula "22") (ifseqformula "2"))
                                          (rule "andLeft" (formula "22"))
                                          (rule "inEqSimp_homoInEq1" (formula "22"))
                                          (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                          (rule "add_literals" (formula "22") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "22") (term "1,0"))
                                          (rule "add_zero_right" (formula "22") (term "0"))
                                          (rule "leq_literals" (formula "22"))
                                          (rule "closeFalse" (formula "22"))
                                       )
                                       (branch "Case 2"
                                          (rule "allRight" (formula "57") (inst "sk=i_16"))
                                          (rule "orRight" (formula "57"))
                                          (rule "notRight" (formula "58"))
                                          (rule "orRight" (formula "58"))
                                          (rule "inEqSimp_geqRight" (formula "59"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "59"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_16"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "30"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "47")) (ifInst ""  (formula "7")))
                                          (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "17") (ifseqformula "46"))
                                          (rule "allLeft" (formula "23") (inst "t=i_16"))
                                          (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "23") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "23"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "2"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0"))
                                          (rule "add_zero_right" (formula "2") (term "0"))
                                          (rule "leq_literals" (formula "2"))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "57") (inst "sk=i_15"))
                                       (rule "orRight" (formula "57"))
                                       (rule "notRight" (formula "58"))
                                       (rule "orRight" (formula "58"))
                                       (rule "inEqSimp_leqRight" (formula "58"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_geqRight" (formula "59"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_15"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "30"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "48")) (ifInst ""  (formula "6")))
                                       (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "17") (ifseqformula "47"))
                                       (rule "allLeft" (formula "24") (inst "t=i_15"))
                                       (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                       (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "24") (term "0,0,1"))
                                       (rule "leq_literals" (formula "24") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "24"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "57") (inst "sk=i_14"))
                                    (rule "orRight" (formula "57"))
                                    (rule "notRight" (formula "58"))
                                    (rule "orRight" (formula "58"))
                                    (rule "inEqSimp_geqRight" (formula "59"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "59"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_14"))
                                    (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "49")) (ifInst ""  (formula "9")))
                                    (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "17") (ifseqformula "48"))
                                    (rule "allLeft" (formula "25") (inst "t=i_14"))
                                    (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                    (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "25") (term "0,0,1"))
                                    (rule "leq_literals" (formula "25") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "inEqSimp_contradInEq1" (formula "25") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "25") (term "0"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "closeFalse" (formula "25"))
                                 )
                              )
                              (branch "Case 2"
                                 (rule "allRight" (formula "57") (inst "sk=i_13"))
                                 (rule "orRight" (formula "57"))
                                 (rule "notRight" (formula "58"))
                                 (rule "orRight" (formula "58"))
                                 (rule "inEqSimp_leqRight" (formula "58"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_geqRight" (formula "59"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_13"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "30"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "50")) (ifInst ""  (formula "8")))
                                 (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "17") (ifseqformula "49"))
                                 (rule "allLeft" (formula "26") (inst "t=i_13"))
                                 (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "26") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "26"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0"))
                                 (rule "add_zero_right" (formula "1") (term "0"))
                                 (rule "leq_literals" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                           (branch "Case 2"
                              (rule "allRight" (formula "57") (inst "sk=i_12"))
                              (rule "orRight" (formula "57"))
                              (rule "notRight" (formula "58"))
                              (rule "orRight" (formula "58"))
                              (rule "inEqSimp_geqRight" (formula "59"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_leqRight" (formula "59"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_12"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "30"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "51")) (ifInst ""  (formula "10")))
                              (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "17") (ifseqformula "50"))
                              (rule "allLeft" (formula "27") (inst "t=i_12"))
                              (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                              (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                              (rule "add_literals" (formula "27") (term "0,0,1"))
                              (rule "leq_literals" (formula "27") (term "0,1"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "27"))
                              (rule "qeq_literals" (formula "1") (term "0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "Case 2"
                           (rule "allRight" (formula "57") (inst "sk=f_2"))
                           (rule "allRight" (formula "57") (inst "sk=o_2"))
                           (rule "orRight" (formula "57"))
                           (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=f_2_0"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                           (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "59"))
                           (rule "closeTrue" (formula "59"))
                        )
                     )
                     (branch "CUT: exc_0.<created> = TRUE FALSE"
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "0") (ifseqformula "2"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "42"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "0") (ifseqformula "3"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "44"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0") (ifseqformula "4"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "43"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0") (ifseqformula "5"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "43"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0") (ifseqformula "6"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "43"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "0") (ifseqformula "7"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "42"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "0") (ifseqformula "8"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "44"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "0") (ifseqformula "9"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "42"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "0") (ifseqformula "10"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "44"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0") (ifseqformula "11"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "43"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0") (ifseqformula "12"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "43"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0") (ifseqformula "13"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "43"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "andRight" (formula "58"))
                        (branch "Case 1"
                           (rule "andRight" (formula "58"))
                           (branch "Case 1"
                              (rule "andRight" (formula "58"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "58"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "58"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "58"))
                                       (branch "Case 1"
                                          (rule "allRight" (formula "58") (inst "sk=i_11"))
                                          (rule "orRight" (formula "58"))
                                          (rule "orRight" (formula "58"))
                                          (rule "notRight" (formula "60"))
                                          (rule "inEqSimp_geqRight" (formula "60"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "60"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_11"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "30"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "47")) (ifInst ""  (formula "5")))
                                          (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "17") (ifseqformula "46"))
                                          (rule "allLeft" (formula "22") (inst "t=i_11"))
                                          (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "22") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "22"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "2"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0"))
                                          (rule "add_zero_right" (formula "2") (term "0"))
                                          (rule "leq_literals" (formula "2"))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                       (branch "Case 2"
                                          (rule "allRight" (formula "58") (inst "sk=i_10"))
                                          (rule "orRight" (formula "58"))
                                          (rule "orRight" (formula "58"))
                                          (rule "notRight" (formula "60"))
                                          (rule "inEqSimp_geqRight" (formula "60"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "60"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_10"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "30"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "48")) (ifInst ""  (formula "6")))
                                          (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "17") (ifseqformula "47"))
                                          (rule "allLeft" (formula "23") (inst "t=i_10"))
                                          (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "23") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "23"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "2"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0"))
                                          (rule "add_zero_right" (formula "2") (term "0"))
                                          (rule "leq_literals" (formula "2"))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "58") (inst "sk=i_9"))
                                       (rule "orRight" (formula "58"))
                                       (rule "orRight" (formula "58"))
                                       (rule "notRight" (formula "60"))
                                       (rule "inEqSimp_geqRight" (formula "60"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_leqRight" (formula "60"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_9"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "30"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "49")) (ifInst ""  (formula "7")))
                                       (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "17") (ifseqformula "48"))
                                       (rule "allLeft" (formula "24") (inst "t=i_9"))
                                       (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "24") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "2"))
                                       (rule "andLeft" (formula "24"))
                                       (rule "inEqSimp_homoInEq1" (formula "24"))
                                       (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                       (rule "add_literals" (formula "24") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "24") (term "1,0"))
                                       (rule "add_zero_right" (formula "24") (term "0"))
                                       (rule "leq_literals" (formula "24"))
                                       (rule "closeFalse" (formula "24"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "58") (inst "sk=i_8"))
                                    (rule "orRight" (formula "58"))
                                    (rule "orRight" (formula "58"))
                                    (rule "notRight" (formula "60"))
                                    (rule "inEqSimp_geqRight" (formula "60"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "60"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_8"))
                                    (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "50")) (ifInst ""  (formula "9")))
                                    (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "17") (ifseqformula "49"))
                                    (rule "allLeft" (formula "25") (inst "t=i_8"))
                                    (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "25") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "25"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "2"))
                                    (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0"))
                                    (rule "add_zero_right" (formula "2") (term "0"))
                                    (rule "leq_literals" (formula "2"))
                                    (rule "closeFalse" (formula "2"))
                                 )
                              )
                              (branch "Case 2"
                                 (rule "allRight" (formula "58") (inst "sk=i_7"))
                                 (rule "orRight" (formula "58"))
                                 (rule "orRight" (formula "58"))
                                 (rule "notRight" (formula "60"))
                                 (rule "inEqSimp_geqRight" (formula "60"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "60"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_7"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "30"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "51")) (ifInst ""  (formula "8")))
                                 (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "17") (ifseqformula "50"))
                                 (rule "allLeft" (formula "26") (inst "t=i_7"))
                                 (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "26") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "26"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "2"))
                                 (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0"))
                                 (rule "add_zero_right" (formula "2") (term "0"))
                                 (rule "leq_literals" (formula "2"))
                                 (rule "closeFalse" (formula "2"))
                              )
                           )
                           (branch "Case 2"
                              (rule "allRight" (formula "58") (inst "sk=i_6"))
                              (rule "orRight" (formula "58"))
                              (rule "orRight" (formula "58"))
                              (rule "notRight" (formula "60"))
                              (rule "inEqSimp_leqRight" (formula "59"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_geqRight" (formula "60"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_6"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "30"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "52")) (ifInst ""  (formula "11")))
                              (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "17") (ifseqformula "51"))
                              (rule "allLeft" (formula "27") (inst "t=i_6"))
                              (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                              (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                              (rule "add_literals" (formula "27") (term "0,0,1"))
                              (rule "leq_literals" (formula "27") (term "0,1"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "27") (term "0"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "closeFalse" (formula "27"))
                           )
                        )
                        (branch "Case 2"
                           (rule "allRight" (formula "58") (inst "sk=f_1"))
                           (rule "allRight" (formula "58") (inst "sk=o_1"))
                           (rule "orRight" (formula "58"))
                           (rule "pullOutSelect" (formula "59") (term "0") (inst "selectSK=f_1_0"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")))
                           (rule "applyEqReverse" (formula "60") (term "0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "60"))
                           (rule "closeTrue" (formula "60"))
                        )
                     )
                  )
               )
               (branch "ClassCastException (!(exc_0 instanceof java.lang.Throwable))"
                  (builtin "One Step Simplification" (formula "38"))
                  (rule "closeTrue" (formula "38"))
               )
            )
            (branch "if exc_0 instanceof java.lang.Throwable false"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
      (branch "Pre (getPayLoad)"
         (builtin "One Step Simplification" (formula "3"))
         (builtin "One Step Simplification" (formula "1"))
         (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "3")) (ifInst ""  (formula "3")))
         (rule "andLeft" (formula "2"))
         (rule "notLeft" (formula "1"))
         (rule "andLeft" (formula "2"))
         (rule "andLeft" (formula "1"))
         (rule "notLeft" (formula "4"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "notLeft" (formula "2"))
         (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "9"))
         (builtin "One Step Simplification" (formula "4"))
         (rule "replace_known_left" (formula "10") (term "1,1") (ifseqformula "4"))
         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "6")) (ifInst ""  (formula "1")))
         (rule "inEqSimp_ltRight" (formula "8"))
         (rule "mul_literals" (formula "1") (term "0,0"))
         (rule "inEqSimp_geqRight" (formula "10"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "2"))
         (rule "mul_literals" (formula "2") (term "1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
         (rule "mul_literals" (formula "1") (term "1"))
         (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
         (rule "qeq_literals" (formula "1") (term "0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
   )
)
(branch "Null Reference (_payload = null)"
   (builtin "One Step Simplification" (formula "1"))
   (rule "andLeft" (formula "2"))
   (rule "andLeft" (formula "2"))
   (rule "andLeft" (formula "4"))
   (rule "andLeft" (formula "2"))
   (rule "notLeft" (formula "6"))
   (rule "close" (formula "6") (ifseqformula "1"))
)
)

}
