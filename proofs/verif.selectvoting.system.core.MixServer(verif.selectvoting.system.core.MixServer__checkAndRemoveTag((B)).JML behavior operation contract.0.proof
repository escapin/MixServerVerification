\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Tue Jun 06 17:15:33 CEST 2017
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_COMPLETION
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=7000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , permissions-permissions\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Tue Jun 06 17:15:33 CEST 2017
name=verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer\\:\\:checkAndRemoveTag([B)].JML behavior operation contract.0
contract=verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer\\:\\:checkAndRemoveTag([B)].JML behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mihai" ) (keyVersion "777423351da3a616156ed00120c6f885d0eb8492"))
(keyLog "1" (keyUser "mihai" ) (keyVersion "777423351da3a616156ed00120c6f885d0eb8492"))

(autoModeTime "149824")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "tagged_payload,self,result,exc,heapAtPre,o,f") (userinteraction))
(builtin "One Step Simplification" (formula "2"))
(rule "eqSymm" (formula "2") (term "0,1,1,0,0,0,1"))
(rule "eqSymm" (formula "2") (term "1,0,0,1,0,1"))
(rule "eqSymm" (formula "2") (term "0,1,0,0,0,1"))
(rule "assignment" (formula "2") (term "1"))
(builtin "One Step Simplification" (formula "2"))
(rule "array2seqDef" (formula "2") (term "0,0,1,0,0,0,1") (inst "u=u"))
(rule "array2seqDef" (formula "2") (term "0,0,0,1,1,0,0,0,1") (inst "u=u"))
(rule "array2seqDef" (formula "2") (term "1,0,1,1,0,0,0,1") (inst "u=u"))
(rule "array2seqDef" (formula "2") (term "0,1,0,1,0,0,0,1") (inst "u=u"))
(rule "eqSeqDef" (formula "2") (term "0,1,1,0,0,0,1") (inst "iv=iv"))
(rule "getOfSeqDef" (formula "2") (term "1,1,0,1,0,1,1,0,0,0,1"))
(rule "castDel" (formula "2") (term "2,1,1,0,1,0,1,1,0,0,0,1"))
(rule "castDel" (formula "2") (term "1,1,1,0,1,0,1,1,0,0,0,1"))
(rule "add_zero_right" (formula "2") (term "0,2,1,1,1,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_elimSub" (formula "2") (term "1,1,0,1,1,0,1,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "2") (term "1,1,1,0,1,1,0,1,0,1,1,0,0,0,1"))
(rule "add_zero_right" (formula "2") (term "1,1,0,1,1,0,1,0,1,1,0,0,0,1"))
(rule "lenOfSeqDef" (formula "2") (term "1,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "2") (term "1,0,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_addComm1" (formula "2") (term "0,1,0,0,1,0,1,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "2") (term "1,0,1,1,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,1,1,0,1,0,1,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "2") (term "0,1,0,0,1,1,0,0,0,1"))
(rule "add_zero_right" (formula "2") (term "0,0,1,0,0,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "2") (term "0,0,0,1,0,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "2") (term "0,0,1,1,0,1,0,1,1,0,0,0,1"))
(rule "inEqSimp_sepNegMonomial0" (formula "2") (term "1,0,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "2") (term "0,1,0,0,1,0,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,0,1,1,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "2") (term "1,1,0,1,1,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "2") (term "1,1,0,1,1,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,1,1,0,1,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "2") (term "0,1,1,0,1,1,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,1,1,0,1,0,1,1,0,0,0,1"))
(rule "nnf_imp2or" (formula "2") (term "0,1,0,1,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "2") (term "0,0,1,0,1,1,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "2") (term "1,0,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "2") (term "0,1,0,0,1,0,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,1,0,1,1,0,0,0,1"))
(rule "add_literals" (formula "2") (term "0,0,0,1,0,0,1,0,1,1,0,0,0,1"))
(rule "add_zero_left" (formula "2") (term "0,0,1,0,0,1,0,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,0,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,1,0,1,1,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "2") (term "0,0,0,1,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "2") (term "1,0,0,0,0,0,1,0,1,1,0,0,0,1"))
(rule "add_literals" (formula "2") (term "0,0,0,0,0,1,0,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0,0,1,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "2") (term "1,0,0,0,1,0,1,1,0,0,0,1"))
(rule "methodBodyExpand" (formula "2") (term "1") (newnames "heapBefore_checkAndRemoveTag,savedHeapBefore_checkAndRemoveTag"))
(builtin "One Step Simplification" (formula "2"))
(rule "ifUnfold" (formula "2") (term "1") (inst "#boolv=x"))
(rule "variableDeclaration" (formula "2") (term "1") (newnames "x"))
(rule "compound_less_than_comparison_1" (formula "2") (term "1") (inst "#v0=x_1"))
(rule "variableDeclarationAssign" (formula "2") (term "1"))
(rule "variableDeclaration" (formula "2") (term "1") (newnames "x_1"))
(rule "assignment_read_length" (formula "2") (term "1"))
(branch "Normal Execution (_tagged_payload != null)"
   (builtin "One Step Simplification" (formula "2"))
   (builtin "One Step Simplification" (formula "3"))
   (rule "less_than_comparison_simple" (formula "3") (term "1"))
   (builtin "One Step Simplification" (formula "3"))
   (rule "inEqSimp_ltToLeq" (formula "3") (term "0,0,1,0"))
   (rule "mul_literals" (formula "3") (term "1,0,0,0,0,1,0"))
   (rule "add_literals" (formula "3") (term "0,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,1,0"))
   (rule "mul_literals" (formula "3") (term "1,0,0,1,0"))
   (rule "ifSplit" (formula "3"))
   (branch "if x true"
      (builtin "One Step Simplification" (formula "1"))
      (builtin "One Step Simplification" (formula "4"))
      (rule "polySimp_elimSub" (formula "4") (term "1,1,0,0,1,1,0,0,0,1"))
      (rule "mul_literals" (formula "4") (term "1,1,1,0,0,1,1,0,0,0,1"))
      (rule "add_zero_right" (formula "4") (term "1,1,0,0,1,1,0,0,0,1"))
      (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0,1,1,0,0,0,1"))
      (rule "blockThrow" (formula "4") (term "1"))
      (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "0,1,0,0,1,1,0,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "4") (term "0,0,1,0,0,1,1,0,0,0,1"))
      (rule "polySimp_elimOne" (formula "4") (term "0,0,1,0,0,1,1,0,0,0,1"))
      (rule "throwUnfold" (formula "4") (term "1") (inst "#v0=m"))
      (rule "variableDeclarationAssign" (formula "4") (term "1"))
      (rule "variableDeclaration" (formula "4") (term "1") (newnames "m"))
      (rule "instanceCreationAssignmentUnfoldArguments" (formula "4") (term "1"))
      (rule "variableDeclarationAssign" (formula "4") (term "1"))
      (rule "variableDeclaration" (formula "4") (term "1") (newnames "var"))
      (rule "assignment" (formula "4") (term "1"))
      (builtin "One Step Simplification" (formula "4"))
      (rule "variableDeclarationAssign" (formula "4") (term "1"))
      (rule "variableDeclaration" (formula "4") (term "1") (newnames "var_1"))
      (rule "stringAssignment" (formula "4") (term "1"))
      (builtin "One Step Simplification" (formula "4"))
      (builtin "One Step Simplification" (formula "5"))
      (rule "eqSymm" (formula "4"))
      (rule "arrayLengthIsAShort" (formula "1") (term "0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "arrayLengthNotNegative" (formula "1") (term "0"))
      (rule "andLeft" (formula "3"))
      (rule "andLeft" (formula "3"))
      (rule "andLeft" (formula "5"))
      (rule "andLeft" (formula "3"))
      (rule "notLeft" (formula "6"))
      (rule "andLeft" (formula "6"))
      (rule "andLeft" (formula "3"))
      (rule "notLeft" (formula "8"))
      (rule "andLeft" (formula "3"))
      (rule "andLeft" (formula "3"))
      (rule "notLeft" (formula "4"))
      (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "11"))
      (builtin "One Step Simplification" (formula "6"))
      (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "8") (ifseqformula "5"))
      (rule "andLeft" (formula "8"))
      (rule "notLeft" (formula "9"))
      (rule "andLeft" (formula "8"))
      (rule "notLeft" (formula "9"))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "8"))
      (rule "notLeft" (formula "10"))
      (rule "notLeft" (formula "9"))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "8"))
      (rule "notLeft" (formula "8"))
      (rule "notLeft" (formula "8"))
      (rule "nonNull" (formula "13") (inst "i=i"))
      (rule "greater_literals" (formula "13") (term "0,1"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "sub_literals" (formula "13") (term "2,1,0,1"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "andLeft" (formula "13"))
      (rule "notLeft" (formula "13"))
      (rule "narrowSelectArrayType" (formula "13") (term "0,0,1,0") (ifseqformula "3") (ifseqformula "14"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
      (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
      (rule "nonNull" (formula "12") (inst "i=i"))
      (rule "greater_literals" (formula "12") (term "0,1"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "sub_literals" (formula "12") (term "2,1,0,1"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "andLeft" (formula "12"))
      (rule "notLeft" (formula "12"))
      (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "3") (ifseqformula "14"))
      (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
      (rule "nonNull" (formula "11") (inst "i=i"))
      (rule "sub_literals" (formula "11") (term "2,1,0,1,1"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "greater_literals" (formula "11") (term "0,1"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "andLeft" (formula "11"))
      (rule "notLeft" (formula "11"))
      (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "3") (ifseqformula "14"))
      (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
      (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
      (rule "nonNull" (formula "10") (inst "i=i"))
      (rule "sub_literals" (formula "10") (term "2,1,0,1,1"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "greater_literals" (formula "10") (term "0,1"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "andLeft" (formula "10"))
      (rule "notLeft" (formula "10"))
      (rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "3") (ifseqformula "14"))
      (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
      (rule "nonNull" (formula "9") (inst "i=i"))
      (rule "greater_literals" (formula "9") (term "0,1"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "sub_literals" (formula "9") (term "2,1,0,1"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "andLeft" (formula "9"))
      (rule "notLeft" (formula "9"))
      (rule "narrowSelectArrayType" (formula "9") (term "0,0,1,0") (ifseqformula "3") (ifseqformula "14"))
      (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
      (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
      (rule "nonNull" (formula "8") (inst "i=i"))
      (rule "sub_literals" (formula "8") (term "2,1,0,1,1"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "greater_literals" (formula "8") (term "0,1"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "andLeft" (formula "8"))
      (rule "notLeft" (formula "8"))
      (rule "narrowSelectArrayType" (formula "8") (term "0,0,1,0") (ifseqformula "3") (ifseqformula "14"))
      (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
      (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
      (rule "nnf_imp2or" (formula "13") (term "0"))
      (rule "nnf_imp2or" (formula "12") (term "0"))
      (rule "nnf_imp2or" (formula "11") (term "0"))
      (rule "nnf_imp2or" (formula "10") (term "0"))
      (rule "nnf_imp2or" (formula "9") (term "0"))
      (rule "nnf_imp2or" (formula "8") (term "0"))
      (rule "nnf_notAnd" (formula "13") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
      (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
      (rule "mul_literals" (formula "13") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "12") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
      (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
      (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
      (rule "mul_literals" (formula "12") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "11") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
      (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
      (rule "add_literals" (formula "11") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
      (rule "mul_literals" (formula "11") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "10") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
      (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
      (rule "add_literals" (formula "10") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
      (rule "mul_literals" (formula "10") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "9") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
      (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
      (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
      (rule "mul_literals" (formula "9") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "8") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
      (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
      (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
      (rule "mul_literals" (formula "8") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
      (rule "commute_or_2" (formula "13") (term "0"))
      (rule "commute_or_2" (formula "12") (term "0"))
      (rule "commute_or_2" (formula "11") (term "0"))
      (rule "commute_or_2" (formula "10") (term "0"))
      (rule "commute_or_2" (formula "9") (term "0"))
      (rule "commute_or_2" (formula "8") (term "0"))
      (rule "commute_or" (formula "13") (term "0,0"))
      (rule "commute_or" (formula "12") (term "0,0"))
      (rule "commute_or" (formula "11") (term "0,0"))
      (rule "commute_or" (formula "10") (term "0,0"))
      (rule "commute_or" (formula "9") (term "0,0"))
      (rule "commute_or" (formula "8") (term "0,0"))
      (rule "arrayLengthNotNegative" (formula "13") (term "1,1,0"))
      (rule "arrayLengthIsAShort" (formula "14") (term "1,1,0"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "true_left" (formula "14"))
      (rule "arrayLengthNotNegative" (formula "12") (term "1,1,0"))
      (rule "arrayLengthIsAShort" (formula "13") (term "1,1,0"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "true_left" (formula "13"))
      (rule "arrayLengthIsAShort" (formula "11") (term "1,1,0"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "true_left" (formula "11"))
      (rule "arrayLengthNotNegative" (formula "11") (term "1,1,0"))
      (rule "arrayLengthIsAShort" (formula "10") (term "1,1,0"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "true_left" (formula "10"))
      (rule "arrayLengthNotNegative" (formula "10") (term "1,1,0"))
      (rule "arrayLengthIsAShort" (formula "9") (term "1,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "true_left" (formula "9"))
      (rule "arrayLengthNotNegative" (formula "9") (term "1,1,0"))
      (rule "arrayLengthNotNegative" (formula "8") (term "1,1,0"))
      (rule "arrayLengthIsAShort" (formula "9") (term "1,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "true_left" (formula "9"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "0") (ifseqformula "3"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "22"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "0,1,1,0") (ifseqformula "4"))
      (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "27"))
      (builtin "One Step Simplification" (formula "20"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "28") (term "0") (ifseqformula "4"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "29"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "26") (term "0") (ifseqformula "5"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "27"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "0") (ifseqformula "6"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "25"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "29") (term "0") (ifseqformula "7"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "30"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "39") (term "0") (ifseqformula "8"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "40"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "36") (term "0") (ifseqformula "9"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "37"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "35") (term "0") (ifseqformula "10"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "36"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "39") (term "0") (ifseqformula "11"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "40"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "32") (term "0") (ifseqformula "12"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "33"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "39") (term "0") (ifseqformula "13"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "40"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "0") (ifseqformula "14"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "44"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "instanceCreationAssignment" (formula "49") (term "1") (inst "#v0=m_1"))
      (rule "variableDeclarationAssign" (formula "49") (term "1"))
      (rule "variableDeclaration" (formula "49") (term "1") (newnames "m_8"))
      (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "49") (term "1") (inst "#v0=m_9"))
      (rule "variableDeclaration" (formula "49") (term "1") (newnames "m_9"))
      (rule "methodBodyExpand" (formula "49") (term "1") (newnames "heapBefore_<createObject>_0,savedHeapBefore_<createObject>_0"))
      (builtin "One Step Simplification" (formula "49"))
      (rule "variableDeclaration" (formula "49") (term "1") (newnames "__NEW___1"))
      (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "49") (term "1") (inst "#v0=m_10"))
      (rule "variableDeclaration" (formula "49") (term "1") (newnames "m_10"))
      (rule "allocateInstance" (formula "49"))
      (builtin "One Step Simplification" (formula "50"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "wellFormedCreate" (formula "1") (term "0,1,0"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "17"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "blockEmpty" (formula "52") (term "1"))
      (rule "assignment" (formula "52") (term "1"))
      (builtin "One Step Simplification" (formula "52"))
      (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=java_lang_Object_created__1"))
      (rule "simplifySelectOfCreate" (formula "1"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "castDel" (formula "1") (term "1,0"))
      (rule "eqSymm" (formula "1") (term "0,0,0"))
      (rule "eqSymm" (formula "1") (term "0,1,0,0"))
      (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "52"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
      (rule "eqSymm" (formula "1") (term "1,0,0"))
      (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "36"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
      (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "methodBodyExpand" (formula "52") (term "1") (newnames "heapBefore_<create>_0,savedHeapBefore_<create>_0"))
      (builtin "One Step Simplification" (formula "52"))
      (rule "assignment_write_attribute_this" (formula "52") (term "1"))
      (builtin "One Step Simplification" (formula "52"))
      (rule "methodCallWithinClass" (formula "52") (term "1"))
      (rule "methodBodyExpand" (formula "52") (term "1") (newnames "heapBefore_<prepareEnter>_0,savedHeapBefore_<prepareEnter>_0"))
      (builtin "One Step Simplification" (formula "52"))
      (rule "methodCallSuper" (formula "52") (term "1"))
      (rule "methodBodyExpand" (formula "52") (term "1") (newnames "heapBefore_<prepare>_2,savedHeapBefore_<prepare>_2"))
      (builtin "One Step Simplification" (formula "52"))
      (rule "methodCallSuper" (formula "52") (term "1"))
      (rule "methodBodyExpand" (formula "52") (term "1") (newnames "heapBefore_<prepare>_3,savedHeapBefore_<prepare>_3"))
      (builtin "One Step Simplification" (formula "52"))
      (rule "methodCallSuper" (formula "52") (term "1"))
      (rule "methodBodyExpand" (formula "52") (term "1") (newnames "heapBefore_<prepare>_4,savedHeapBefore_<prepare>_4"))
      (builtin "One Step Simplification" (formula "52"))
      (rule "methodCallEmpty" (formula "52") (term "1"))
      (rule "blockEmpty" (formula "52") (term "1"))
      (rule "assignment_write_attribute_this" (formula "52") (term "1"))
      (builtin "One Step Simplification" (formula "52"))
      (rule "castDel" (formula "52") (term "1,0,1,0"))
      (rule "assignment_write_attribute_this" (formula "52") (term "1"))
      (builtin "One Step Simplification" (formula "52"))
      (rule "castDel" (formula "52") (term "1,0,1,0"))
      (rule "methodCallEmpty" (formula "52") (term "1"))
      (rule "methodCallEmpty" (formula "52") (term "1"))
      (rule "blockEmpty" (formula "52") (term "1"))
      (rule "assignment_write_attribute_this" (formula "52") (term "1"))
      (builtin "One Step Simplification" (formula "52"))
      (rule "assignment_write_attribute_this" (formula "52") (term "1"))
      (builtin "One Step Simplification" (formula "52"))
      (rule "methodCallEmpty" (formula "52") (term "1"))
      (rule "blockEmpty" (formula "52") (term "1"))
      (rule "methodCallReturnIgnoreResult" (formula "52") (term "1"))
      (rule "methodCallReturn" (formula "52") (term "1"))
      (rule "assignment" (formula "52") (term "1"))
      (builtin "One Step Simplification" (formula "52"))
      (rule "methodCallEmpty" (formula "52") (term "1"))
      (rule "blockEmpty" (formula "52") (term "1"))
      (rule "assignment" (formula "52") (term "1"))
      (builtin "One Step Simplification" (formula "52"))
      (rule "variableDeclarationAssign" (formula "52") (term "1"))
      (rule "variableDeclaration" (formula "52") (term "1") (newnames "var_16"))
      (rule "assignment" (formula "52") (term "1"))
      (builtin "One Step Simplification" (formula "52"))
      (rule "variableDeclarationAssign" (formula "52") (term "1"))
      (rule "variableDeclaration" (formula "52") (term "1") (newnames "var_17"))
      (rule "assignment" (formula "52") (term "1"))
      (builtin "One Step Simplification" (formula "52"))
      (rule "methodBodyExpand" (formula "52") (term "1") (newnames "heapBefore_<init>_3,savedHeapBefore_<init>_3"))
      (builtin "One Step Simplification" (formula "52"))
      (rule "methodCallSuper" (formula "52") (term "1"))
      (rule "methodBodyExpand" (formula "52") (term "1") (newnames "heapBefore_<init>_4,savedHeapBefore_<init>_4"))
      (builtin "One Step Simplification" (formula "52"))
      (rule "methodCallSuper" (formula "52") (term "1"))
      (rule "methodBodyExpand" (formula "52") (term "1") (newnames "heapBefore_<init>_5,savedHeapBefore_<init>_5"))
      (builtin "One Step Simplification" (formula "52"))
      (rule "methodCallSuper" (formula "52") (term "1"))
      (rule "methodBodyExpand" (formula "52") (term "1") (newnames "heapBefore_<init>_6,savedHeapBefore_<init>_6"))
      (builtin "One Step Simplification" (formula "52"))
      (rule "methodCallEmpty" (formula "52") (term "1"))
      (rule "blockEmpty" (formula "52") (term "1"))
      (rule "assignment_write_attribute_this" (formula "52") (term "1"))
      (builtin "One Step Simplification" (formula "52"))
      (rule "castDel" (formula "52") (term "1,0,1,0"))
      (builtin "One Step Simplification" (formula "52"))
      (rule "assignment_write_attribute_this" (formula "52") (term "1"))
      (builtin "One Step Simplification" (formula "52"))
      (rule "castDel" (formula "52") (term "1,0,1,0"))
      (builtin "One Step Simplification" (formula "52"))
      (rule "methodCallEmpty" (formula "52") (term "1"))
      (rule "methodCallEmpty" (formula "52") (term "1"))
      (rule "blockEmpty" (formula "52") (term "1"))
      (rule "assignment_write_attribute_this" (formula "52") (term "1"))
      (builtin "One Step Simplification" (formula "52"))
      (rule "assignment_write_attribute_this" (formula "52") (term "1"))
      (builtin "One Step Simplification" (formula "52"))
      (rule "methodCallEmpty" (formula "52") (term "1"))
      (rule "blockEmpty" (formula "52") (term "1"))
      (rule "assignment_write_attribute" (formula "52") (term "1"))
      (branch "Normal Execution (m_8 != null)"
         (builtin "One Step Simplification" (formula "53"))
         (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "35")))
         (rule "false_right" (formula "52"))
         (rule "assignment" (formula "52") (term "1"))
         (builtin "One Step Simplification" (formula "52"))
         (rule "blockEmpty" (formula "52") (term "1"))
         (rule "methodCallParamThrow" (formula "52") (term "1"))
         (builtin "One Step Simplification" (formula "52"))
         (rule "tryCatchThrow" (formula "52") (term "1"))
         (rule "ifElseUnfold" (formula "52") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "52") (term "1") (newnames "x_9"))
         (rule "equality_comparison_simple" (formula "52") (term "1"))
         (builtin "One Step Simplification" (formula "52"))
         (rule "replace_known_right" (formula "52") (term "0,0,1,0") (ifseqformula "35"))
         (builtin "One Step Simplification" (formula "52"))
         (rule "ifElseSplit" (formula "52"))
         (branch "if x_9 true"
            (builtin "One Step Simplification" (formula "53"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch "if x_9 false"
            (builtin "One Step Simplification" (formula "53"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "ifElseSplit" (formula "52"))
            (branch "if m instanceof java.lang.Throwable true"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
               (rule "true_left" (formula "1"))
               (rule "variableDeclaration" (formula "52") (term "1") (newnames "e_3"))
               (rule "reference_type_cast" (formula "52") (term "1"))
               (branch "Normal Execution (m instanceof java.lang.Throwable)"
                  (builtin "One Step Simplification" (formula "53"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "assignment" (formula "52") (term "1"))
                  (builtin "One Step Simplification" (formula "52"))
                  (rule "emptyModality" (formula "52") (term "1"))
                  (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "35")) (ifInst ""  (formula "35")) (ifInst ""  (formula "35")) (ifInst ""  (formula "35")))
                  (rule "eqSymm" (formula "52") (term "1,0,0,1"))
                  (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "52") (term "0") (ifseqformula "18"))
                  (rule "dismissNonSelectedField" (formula "52") (term "1,1,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "1,1,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "1,1,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "1,1,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "1,1,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "1,1,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "1,1,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "1,1,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "1,1,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "1,1,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "1,1,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "1,1,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "1,1,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "1,1,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "1,1,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "1,1,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "1,1,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "1,1,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "1,1,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "1,1,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0,0,0"))
                  (rule "nonNull" (formula "52") (term "1,0,0,0,0,0,0") (inst "i=i"))
                  (rule "greater_literals" (formula "52") (term "0,1,1,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "52"))
                  (rule "sub_literals" (formula "52") (term "2,1,0,1,1,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "52"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0,1,1,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0,1,1,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0,1,1,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0,1,1,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0,1,1,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "52") (term "1,0,0,1,1,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "52") (term "0,0,0,1,1,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0,1,1,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "52") (term "1,1,0,0,1,1,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "52") (term "1,1,0,0,1,1,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1,0,0,1,1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "52") (term "0,1,1,0,0,1,1,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "52") (term "1,1,1,0,0,1,1,0,0,0,0,0,0"))
                  (rule "nonNull" (formula "52") (term "1,0,0,0,0,0,0,0,0,0") (inst "i=i"))
                  (rule "greater_literals" (formula "52") (term "0,1,1,0,0,0,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "52"))
                  (rule "sub_literals" (formula "52") (term "2,1,0,1,1,0,0,0,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "52"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "52") (term "1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "52") (term "0,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "52") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "52") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "52") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "52") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "nonNull" (formula "52") (term "1,0,0,0,0,0,0,0") (inst "i=i"))
                  (rule "sub_literals" (formula "52") (term "2,1,0,1,1,1,0,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "52"))
                  (rule "greater_literals" (formula "52") (term "0,1,1,0,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "52"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0,1,1,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0,1,1,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0,1,1,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0,1,1,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0,1,1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "52") (term "1,0,0,1,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "52") (term "0,0,0,1,1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0,1,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "52") (term "1,1,0,0,1,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "52") (term "1,1,0,0,1,1,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "52") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "52") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0"))
                  (rule "nonNull" (formula "52") (term "1,0,0,0,0,0,0,0,0") (inst "i=i"))
                  (rule "greater_literals" (formula "52") (term "0,1,1,0,0,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "52"))
                  (rule "sub_literals" (formula "52") (term "2,1,0,1,1,0,0,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "52"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "52") (term "1,0,0,1,1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "52") (term "0,0,0,1,1,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0,1,1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "52") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "52") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "52") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "52") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                  (rule "nonNull" (formula "52") (term "1,0,0,0,0,0") (inst "i=i"))
                  (rule "greater_literals" (formula "52") (term "0,1,1,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "52"))
                  (rule "sub_literals" (formula "52") (term "2,1,0,1,1,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "52"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0,1,1,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0,1,1,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0,1,1,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0,1,1,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0,1,1,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "52") (term "1,0,0,1,1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,0,0,1,1,0,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "52") (term "0,0,0,1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0,1,1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "52") (term "1,1,0,0,1,1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "52") (term "1,1,0,0,1,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1,0,0,1,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "52") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "52") (term "1,1,1,0,0,1,1,0,0,0,0,0"))
                  (rule "nonNull" (formula "52") (term "1,0,0,0,0,0,0,0,0,0,0") (inst "i=i"))
                  (rule "greater_literals" (formula "52") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "52"))
                  (rule "sub_literals" (formula "52") (term "2,1,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "52"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "dismissNonSelectedField" (formula "52") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "52") (term "1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "52") (term "0,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "52") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "52") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "52") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "52") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "pullOutSelect" (formula "52") (term "0,0,1,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_10"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "53") (term "0,0,1,0,0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "52") (term "0,1,0,0,0,0") (ifseqformula "44"))
                  (builtin "One Step Simplification" (formula "52"))
                  (rule "pullOutSelect" (formula "52") (term "1,0,0,1,0,1,1,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_10"))
                  (rule "applyEq" (formula "53") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "53") (term "0,0,0,1,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "53") (term "1,0,0,1,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "53") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "53") (term "0,0,0,1,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "52") (term "0,0,1,0,0,0,0,0,0") (ifseqformula "39"))
                  (builtin "One Step Simplification" (formula "52"))
                  (rule "pullOutSelect" (formula "52") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_10"))
                  (rule "applyEq" (formula "53") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "53") (term "0,0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "53") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "53") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "53") (term "0,0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "52") (term "0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "36"))
                  (builtin "One Step Simplification" (formula "52"))
                  (rule "pullOutSelect" (formula "52") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_10"))
                  (rule "applyEq" (formula "53") (term "0,0,0,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "53") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "53") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "53") (term "0,0,0,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "53") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "52") (term "0,0,1,0,0,0,0,0,0,0,0") (ifseqformula "37"))
                  (builtin "One Step Simplification" (formula "52"))
                  (rule "pullOutSelect" (formula "52") (term "0,0,1,0,0,0,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_10"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "53") (term "0,0,1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "52") (term "0,1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "42"))
                  (builtin "One Step Simplification" (formula "52"))
                  (rule "pullOutSelect" (formula "52") (term "0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_10"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "53") (term "0,0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "52") (term "0,1,0") (ifseqformula "47"))
                  (builtin "One Step Simplification" (formula "52"))
                  (rule "pullOutSelect" (formula "52") (term "0,0,0,1,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_10"))
                  (rule "applyEq" (formula "53") (term "0,1,1,1,0,0,1,1,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "53") (term "1,0,0,1,0,1,1,0,0,0,0") (ifseqformula "1"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "53") (term "0,0,0,1,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "53") (term "0,1,1,1,0,0,1,1,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "53") (term "1,0,0,1,0,1,1,0,0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "52") (term "0,0,1,0,0,0,0") (ifseqformula "40"))
                  (builtin "One Step Simplification" (formula "52"))
                  (rule "pullOutSelect" (formula "52") (term "0,0,0,0,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_10"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "53") (term "0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "52") (term "0,0,0,0,0,0,0,0,0,0") (ifseqformula "43"))
                  (builtin "One Step Simplification" (formula "52"))
                  (rule "pullOutSelect" (formula "52") (term "0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_10"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "53") (term "0,0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "52") (term "0,1,0") (ifseqformula "46"))
                  (builtin "One Step Simplification" (formula "52"))
                  (rule "pullOutSelect" (formula "52") (term "1,0,0,1,0,1,1,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_10"))
                  (rule "applyEq" (formula "53") (term "0,1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "53") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "53") (term "1,0,0,1,0,1,1,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "53") (term "0,1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "53") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "52") (term "0,0,1,0,0,0,0,0") (ifseqformula "38"))
                  (builtin "One Step Simplification" (formula "52"))
                  (rule "pullOutSelect" (formula "52") (term "0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_10"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "53") (term "0,0,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "52") (term "0,1,0") (ifseqformula "45"))
                  (builtin "One Step Simplification" (formula "52"))
                  (rule "pullOutSelect" (formula "52") (term "1,0,0,1,0,1,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_10"))
                  (rule "applyEq" (formula "53") (term "0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEq" (formula "53") (term "0,1,1,1,0,0,1,1,0") (ifseqformula "1"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "53") (term "1,0,0,1,0,1,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "53") (term "0,0,0,1,0") (ifseqformula "1"))
                  (rule "applyEqReverse" (formula "53") (term "0,1,1,1,0,0,1,1,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "52") (term "0,0,1,0") (ifseqformula "41"))
                  (builtin "One Step Simplification" (formula "52"))
                  (rule "nnf_imp2or" (formula "52") (term "0,1,0"))
                  (rule "nnf_imp2or" (formula "52") (term "0,1,0,0"))
                  (rule "nnf_notAnd" (formula "52") (term "0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "52") (term "0,0,0,1,0"))
                  (rule "times_zero_1" (formula "52") (term "1,0,0,0,0,0,1,0"))
                  (rule "add_zero_right" (formula "52") (term "0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0,1,0"))
                  (rule "mul_literals" (formula "52") (term "1,0,0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "52") (term "1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "52") (term "0,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,0,0,1,0"))
                  (rule "add_literals" (formula "52") (term "0,0,0,1,0,0,1,0"))
                  (rule "add_zero_left" (formula "52") (term "0,0,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,1,0"))
                  (rule "nnf_imp2or" (formula "52") (term "0,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "52") (term "0,0,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "52") (term "1,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "52") (term "0,1,0,0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,0,0,1,0,0"))
                  (rule "add_literals" (formula "52") (term "0,0,0,1,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "52") (term "0,0,1,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "1,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "52") (term "0,0,0,1,0,0"))
                  (rule "mul_literals" (formula "52") (term "1,0,0,0,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "52") (term "0,0,0,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0,1,0,0"))
                  (rule "mul_literals" (formula "52") (term "1,0,0,0,1,0,0"))
                  (rule "nnf_imp2or" (formula "52") (term "0,1,0,0,0,0"))
                  (rule "nnf_imp2or" (formula "52") (term "0,0,0,0,0,0,0"))
                  (rule "nnf_imp2or" (formula "52") (term "0,1,0,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "52") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "52") (term "0,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "52") (term "1,0,0,0,0,0,1,0,0,0"))
                  (rule "add_zero_right" (formula "52") (term "0,0,0,0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "52") (term "1,0,0,0,1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "52") (term "1,0,0,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "52") (term "0,1,0,0,1,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,0,0,1,0,0,0"))
                  (rule "add_literals" (formula "52") (term "0,0,0,1,0,0,1,0,0,0"))
                  (rule "add_zero_left" (formula "52") (term "0,0,1,0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "1,0,0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "52") (term "0,0,1,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "52") (term "0,0,0,1,0,0,0,0"))
                  (rule "mul_literals" (formula "52") (term "1,0,0,0,0,0,1,0,0,0,0"))
                  (rule "add_zero_right" (formula "52") (term "0,0,0,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0,1,0,0,0,0"))
                  (rule "mul_literals" (formula "52") (term "1,0,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "52") (term "1,0,0,1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1,0,0,1,0,0,0,0"))
                  (rule "mul_literals" (formula "52") (term "0,1,0,0,1,0,0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,0,0,1,0,0,0,0"))
                  (rule "add_literals" (formula "52") (term "0,0,0,1,0,0,1,0,0,0,0"))
                  (rule "add_zero_left" (formula "52") (term "0,0,1,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "1,0,0,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,1,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "52") (term "0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "52") (term "1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "52") (term "0,1,0,0,1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,0,0,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "52") (term "0,0,0,1,0,0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "52") (term "0,0,1,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "52") (term "0,0,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "52") (term "1,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "52") (term "0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "52") (term "1,0,0,0,0,0,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "52") (term "0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "52") (term "1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1,0,0,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "52") (term "0,1,0,0,1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,0,0,1,0,0,0,0,0"))
                  (rule "add_literals" (formula "52") (term "0,0,0,1,0,0,1,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "52") (term "0,0,1,0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "52") (term "0,0,0,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "52") (term "1,0,0,0,0,0,1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "52") (term "0,0,0,0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "52") (term "1,0,0,0,1,0,0,0,0,0"))
                  (rule "andRight" (formula "52"))
                  (branch "Case 1"
                     (rule "andRight" (formula "52"))
                     (branch "Case 1"
                        (rule "andRight" (formula "52"))
                        (branch "Case 1"
                           (rule "andRight" (formula "52"))
                           (branch "Case 1"
                              (rule "andRight" (formula "52"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "52"))
                                 (branch "Case 1"
                                    (rule "allRight" (formula "52") (inst "sk=i_88"))
                                    (rule "orRight" (formula "52"))
                                    (rule "notRight" (formula "53"))
                                    (rule "orRight" (formula "53"))
                                    (rule "inEqSimp_leqRight" (formula "53"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_geqRight" (formula "54"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_88"))
                                    (rule "simplifySelectOfCreate" (formula "3"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "39")))
                                    (rule "simplifySelectOfCreate" (formula "3"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "19") (ifseqformula "39"))
                                    (rule "allLeft" (formula "25") (inst "t=i_88"))
                                    (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "25") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "inEqSimp_contradInEq1" (formula "25") (ifseqformula "1"))
                                    (rule "andLeft" (formula "25"))
                                    (rule "inEqSimp_homoInEq1" (formula "25"))
                                    (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                                    (rule "add_literals" (formula "25") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "25") (term "1,0"))
                                    (rule "add_literals" (formula "25") (term "0"))
                                    (rule "leq_literals" (formula "25"))
                                    (rule "closeFalse" (formula "25"))
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "52") (inst "sk=i_87"))
                                    (rule "orRight" (formula "52"))
                                    (rule "notRight" (formula "53"))
                                    (rule "orRight" (formula "53"))
                                    (rule "inEqSimp_leqRight" (formula "53"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_geqRight" (formula "54"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_87"))
                                    (rule "simplifySelectOfCreate" (formula "3"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "39")))
                                    (rule "simplifySelectOfCreate" (formula "3"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "19") (ifseqformula "40"))
                                    (rule "allLeft" (formula "27") (inst "t=i_87"))
                                    (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "27") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "1"))
                                    (rule "andLeft" (formula "27"))
                                    (rule "inEqSimp_homoInEq1" (formula "27"))
                                    (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                    (rule "add_literals" (formula "27") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "27") (term "1,0"))
                                    (rule "add_literals" (formula "27") (term "0"))
                                    (rule "leq_literals" (formula "27"))
                                    (rule "closeFalse" (formula "27"))
                                 )
                              )
                              (branch "Case 2"
                                 (rule "allRight" (formula "52") (inst "sk=i_86"))
                                 (rule "orRight" (formula "52"))
                                 (rule "notRight" (formula "53"))
                                 (rule "orRight" (formula "53"))
                                 (rule "inEqSimp_leqRight" (formula "53"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_geqRight" (formula "54"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_86"))
                                 (rule "simplifySelectOfCreate" (formula "3"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "39")))
                                 (rule "simplifySelectOfCreate" (formula "3"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "19") (ifseqformula "41"))
                                 (rule "allLeft" (formula "29") (inst "t=i_86"))
                                 (rule "replace_known_left" (formula "29") (term "0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "29"))
                                 (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "29") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "29"))
                                 (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "29"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0"))
                                 (rule "add_literals" (formula "1") (term "0"))
                                 (rule "leq_literals" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                           (branch "Case 2"
                              (rule "allRight" (formula "52") (inst "sk=i_85"))
                              (rule "orRight" (formula "52"))
                              (rule "notRight" (formula "53"))
                              (rule "orRight" (formula "53"))
                              (rule "inEqSimp_leqRight" (formula "53"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_geqRight" (formula "54"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_85"))
                              (rule "simplifySelectOfCreate" (formula "3"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "39")))
                              (rule "simplifySelectOfCreate" (formula "3"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "19") (ifseqformula "42"))
                              (rule "allLeft" (formula "31") (inst "t=i_85"))
                              (rule "replace_known_left" (formula "31") (term "0,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "inEqSimp_commuteGeq" (formula "31") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "31") (term "0,0"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "inEqSimp_contradInEq1" (formula "31") (ifseqformula "1"))
                              (rule "andLeft" (formula "31"))
                              (rule "inEqSimp_homoInEq1" (formula "31"))
                              (rule "polySimp_pullOutFactor1b" (formula "31") (term "0"))
                              (rule "add_literals" (formula "31") (term "1,1,0"))
                              (rule "times_zero_1" (formula "31") (term "1,0"))
                              (rule "add_literals" (formula "31") (term "0"))
                              (rule "leq_literals" (formula "31"))
                              (rule "closeFalse" (formula "31"))
                           )
                        )
                        (branch "Case 2"
                           (rule "allRight" (formula "52") (inst "sk=i_84"))
                           (rule "orRight" (formula "52"))
                           (rule "notRight" (formula "53"))
                           (rule "orRight" (formula "53"))
                           (rule "inEqSimp_leqRight" (formula "53"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_geqRight" (formula "54"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_84"))
                           (rule "simplifySelectOfCreate" (formula "3"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "39")))
                           (rule "simplifySelectOfCreate" (formula "3"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "19") (ifseqformula "43"))
                           (rule "allLeft" (formula "33") (inst "t=i_84"))
                           (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "inEqSimp_commuteGeq" (formula "33") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                           (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "33") (term "0,0,1"))
                           (rule "leq_literals" (formula "33") (term "0,1"))
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "inEqSimp_contradInEq1" (formula "33") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "33") (term "0"))
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "closeFalse" (formula "33"))
                        )
                     )
                     (branch "Case 2"
                        (rule "allRight" (formula "52") (inst "sk=i_83"))
                        (rule "orRight" (formula "52"))
                        (rule "notRight" (formula "53"))
                        (rule "orRight" (formula "53"))
                        (rule "inEqSimp_leqRight" (formula "53"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "54"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_83"))
                        (rule "simplifySelectOfCreate" (formula "3"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "39")))
                        (rule "simplifySelectOfCreate" (formula "3"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "19") (ifseqformula "44"))
                        (rule "allLeft" (formula "36") (inst "t=i_83"))
                        (rule "replace_known_left" (formula "36") (term "0,0,0") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "36"))
                        (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "36") (term "0") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "36") (term "0,0"))
                        (builtin "One Step Simplification" (formula "36"))
                        (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "36"))
                        (rule "andLeft" (formula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "1"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,1,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0"))
                        (rule "add_literals" (formula "1") (term "0"))
                        (rule "leq_literals" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "Case 2"
                     (rule "allRight" (formula "52") (inst "sk=f_9"))
                     (rule "allRight" (formula "52") (inst "sk=o_9"))
                     (rule "orRight" (formula "52"))
                     (rule "pullOutSelect" (formula "53") (term "0") (inst "selectSK=f_9_0"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "54"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_9_1"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_9_2"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_9_3"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_9_4"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_9_5"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "41"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_9_6"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "58"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "commute_and" (formula "7") (term "0,0"))
                     (rule "commute_and" (formula "6") (term "0,0"))
                     (rule "commute_and" (formula "5") (term "0,0"))
                     (rule "commute_and" (formula "4") (term "0,0"))
                     (rule "commute_and" (formula "3") (term "0,0"))
                     (rule "commute_and" (formula "2") (term "0,0"))
                     (rule "commute_and" (formula "1") (term "0,0"))
                     (rule "ifthenelse_split" (formula "1") (term "0"))
                     (branch " f_9 = java.lang.Object::<created> ∧ o_9 = strPool(\"Message too short\") TRUE"
                        (rule "andLeft" (formula "1"))
                        (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "1")))
                        (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "applyEqRigid" (formula "4") (term "0,1,0,0") (ifseqformula "2"))
                        (rule "eqSymm" (formula "4") (term "1,0,0"))
                        (rule "sortsDisjointModuloNull" (formula "4") (term "1,0,0"))
                        (rule "eqSymm" (formula "4") (term "1,1,0,0"))
                        (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "42"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "58")))
                        (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "applyEqRigid" (formula "6") (term "0,1,0,0") (ifseqformula "2"))
                        (rule "eqSymm" (formula "6") (term "1,0,0"))
                        (rule "sortsDisjointModuloNull" (formula "6") (term "1,0,0"))
                        (rule "eqSymm" (formula "6") (term "1,1,0,0"))
                        (rule "replace_known_right" (formula "6") (term "1,1,0,0") (ifseqformula "57"))
                        (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "41")))
                        (rule "applyEqReverse" (formula "59") (term "1") (ifseqformula "6"))
                        (rule "hideAuxiliaryEq" (formula "6"))
                        (rule "applyEqRigid" (formula "57") (term "1,0,0,1") (ifseqformula "2"))
                        (rule "applyEq" (formula "5") (term "0,1,0,0") (ifseqformula "2"))
                        (rule "eqSymm" (formula "5") (term "1,0,0"))
                        (rule "sortsDisjointModuloNull" (formula "5") (term "1,0,0"))
                        (rule "eqSymm" (formula "5") (term "1,1,0,0"))
                        (rule "replace_known_right" (formula "5") (term "1,1,0,0") (ifseqformula "56"))
                        (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "40")))
                        (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "2"))
                        (rule "eqSymm" (formula "4") (term "1,0,0"))
                        (rule "sortsDisjointModuloNull" (formula "4") (term "1,0,0"))
                        (rule "eqSymm" (formula "4") (term "1,1,0,0"))
                        (rule "replace_known_right" (formula "4") (term "1,1,0,0") (ifseqformula "55"))
                        (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "39")))
                        (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "2"))
                        (rule "eqSymm" (formula "3") (term "1,0,0"))
                        (rule "sortsDisjointModuloNull" (formula "3") (term "1,0,0"))
                        (rule "eqSymm" (formula "3") (term "1,1,0,0"))
                        (rule "replace_known_right" (formula "3") (term "1,1,0,0") (ifseqformula "54"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "38")))
                        (rule "applyEqReverse" (formula "56") (term "1") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "applyEq" (formula "54") (term "0,0,0") (ifseqformula "2"))
                        (rule "eqSymm" (formula "54") (term "0,0"))
                        (rule "replace_known_right" (formula "54") (term "0,0") (ifseqformula "53"))
                        (builtin "One Step Simplification" (formula "54"))
                        (rule "notRight" (formula "54"))
                        (rule "applyEq" (formula "55") (term "1,0") (ifseqformula "3"))
                        (rule "applyEqRigid" (formula "55") (term "2,0") (ifseqformula "2"))
                        (rule "castTrueImpliesOriginalTrue" (formula "55") (ifseqformula "1"))
                        (rule "closeTrue" (formula "55"))
                     )
                     (branch " f_9 = java.lang.Object::<created> ∧ o_9 = strPool(\"Message too short\") FALSE"
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "ifthenelse_split" (formula "1") (term "0"))
                        (branch "f_9 = java.lang.Object::<created> ∧ o_9 = m_10 TRUE"
                           (rule "andLeft" (formula "1"))
                           (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                           (rule "hideAuxiliaryEq" (formula "3"))
                           (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "6"))
                           (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "replace_known_left" (formula "41") (term "0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "41"))
                           (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "applyEq" (formula "59") (term "2,0") (ifseqformula "1"))
                           (rule "narrowSelectType" (formula "59") (term "0") (ifseqformula "21"))
                           (rule "eqSymm" (formula "59"))
                           (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "applyEq" (formula "57") (term "0,0,0") (ifseqformula "2"))
                           (rule "replace_known_right" (formula "57") (term "0,0") (ifseqformula "40"))
                           (builtin "One Step Simplification" (formula "57"))
                           (rule "notRight" (formula "57"))
                           (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "eqSymm" (formula "56"))
                           (rule "close" (formula "56") (ifseqformula "1"))
                        )
                        (branch "f_9 = java.lang.Object::<created> ∧ o_9 = m_10 FALSE"
                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "ifthenelse_split" (formula "1") (term "0"))
                           (branch "f_9 = Throwable::$cause ∧ o_9 = m_10 TRUE"
                              (rule "andLeft" (formula "1"))
                              (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "2")))
                              (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "39"))
                              (rule "replace_known_right" (formula "40") (term "0") (ifseqformula "39"))
                              (builtin "One Step Simplification" (formula "40"))
                              (rule "false_right" (formula "40"))
                              (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "applyEqRigid" (formula "58") (term "2,0") (ifseqformula "1"))
                              (rule "narrowSelectType" (formula "58") (term "0") (ifseqformula "20"))
                              (rule "eqSymm" (formula "58"))
                              (rule "applyEq" (formula "57") (term "0,0,0") (ifseqformula "2"))
                              (rule "replace_known_right" (formula "57") (term "0,0") (ifseqformula "40"))
                              (builtin "One Step Simplification" (formula "57"))
                              (rule "notRight" (formula "57"))
                              (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "eqSymm" (formula "56"))
                              (rule "applyEq" (formula "37") (term "0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "37"))
                              (rule "false_right" (formula "37"))
                              (rule "applyEq" (formula "55") (term "1,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                              (rule "close" (formula "37") (ifseqformula "1"))
                           )
                           (branch "f_9 = Throwable::$cause ∧ o_9 = m_10 FALSE"
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch "f_9 = Throwable::$message ∧ o_9 = m_10 TRUE"
                                 (rule "andLeft" (formula "1"))
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "39"))
                                 (rule "replace_known_left" (formula "40") (term "1") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "replace_known_right" (formula "41") (term "0") (ifseqformula "40"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "false_right" (formula "41"))
                                 (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "applyEqReverse" (formula "60") (term "1") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "applyEq" (formula "38") (term "0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "false_right" (formula "38"))
                                 (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "applyEqRigid" (formula "57") (term "2,0") (ifseqformula "1"))
                                 (rule "narrowSelectType" (formula "57") (term "0") (ifseqformula "19"))
                                 (rule "eqSymm" (formula "57"))
                                 (rule "applyEqRigid" (formula "37") (term "0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "37"))
                                 (rule "false_right" (formula "37"))
                                 (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "56") (term "0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "eqSymm" (formula "55"))
                                 (rule "applyEq" (formula "54") (term "0,0,0") (ifseqformula "2"))
                                 (rule "replace_known_right" (formula "54") (term "0,0") (ifseqformula "37"))
                                 (builtin "One Step Simplification" (formula "54"))
                                 (rule "notRight" (formula "54"))
                                 (rule "applyEq" (formula "55") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                 (rule "close" (formula "37") (ifseqformula "1"))
                              )
                              (branch "f_9 = Throwable::$message ∧ o_9 = m_10 FALSE"
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "f_9 = MalformedData::$errCode ∧ o_9 = m_10 TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "replace_known_left" (formula "40") (term "1") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "40"))
                                    (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "replace_known_right" (formula "41") (term "0") (ifseqformula "40"))
                                    (builtin "One Step Simplification" (formula "41"))
                                    (rule "false_right" (formula "41"))
                                    (rule "applyEq" (formula "38") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "false_right" (formula "38"))
                                    (rule "applyEq" (formula "39") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "false_right" (formula "39"))
                                    (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "58") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "applyEq" (formula "37") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "false_right" (formula "37"))
                                    (rule "applyEq" (formula "55") (term "0,0,0") (ifseqformula "2"))
                                    (rule "replace_known_right" (formula "55") (term "0,0") (ifseqformula "38"))
                                    (builtin "One Step Simplification" (formula "55"))
                                    (rule "notRight" (formula "55"))
                                    (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "56") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "applyEq" (formula "55") (term "1,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "55") (term "2,0") (ifseqformula "2"))
                                    (rule "narrowSelectType" (formula "55") (term "0") (ifseqformula "19"))
                                    (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                    (rule "close" (formula "37") (ifseqformula "1"))
                                 )
                                 (branch "f_9 = MalformedData::$errCode ∧ o_9 = m_10 FALSE"
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch "f_9 = MalformedData::$description ∧ o_9 = m_10 TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "replace_known_left" (formula "40") (term "1") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "replace_known_right" (formula "41") (term "0") (ifseqformula "40"))
                                       (builtin "One Step Simplification" (formula "41"))
                                       (rule "false_right" (formula "41"))
                                       (rule "applyEqRigid" (formula "39") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "false_right" (formula "39"))
                                       (rule "applyEqRigid" (formula "38") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "false_right" (formula "38"))
                                       (rule "applyEqRigid" (formula "58") (term "2,0") (ifseqformula "1"))
                                       (rule "narrowSelectType" (formula "58") (term "0") (ifseqformula "19"))
                                       (rule "eqSymm" (formula "58"))
                                       (rule "applyEq" (formula "57") (term "1,0,0,1") (ifseqformula "2"))
                                       (rule "replace_known_right" (formula "57") (term "0,1") (ifseqformula "39"))
                                       (builtin "One Step Simplification" (formula "57"))
                                       (rule "notRight" (formula "57"))
                                       (rule "applyEqRigid" (formula "38") (term "0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "false_right" (formula "38"))
                                       (rule "applyEqRigid" (formula "38") (term "0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "false_right" (formula "38"))
                                       (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "56") (term "0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "eqSymm" (formula "55"))
                                       (rule "applyEq" (formula "55") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                                       (rule "close" (formula "38") (ifseqformula "1"))
                                    )
                                    (branch "f_9 = MalformedData::$description ∧ o_9 = m_10 FALSE"
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch "f_9 = java.lang.Object::<initialized> ∧ o_9 = m_10 TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "applyEqReverse" (formula "62") (term "1") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "replace_known_left" (formula "40") (term "1") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "replace_known_left" (formula "38") (term "1") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "replace_known_right" (formula "41") (term "0") (ifseqformula "40"))
                                          (builtin "One Step Simplification" (formula "41"))
                                          (rule "false_right" (formula "41"))
                                          (rule "applyEqRigid" (formula "37") (term "0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "false_right" (formula "37"))
                                          (rule "applyEqRigid" (formula "37") (term "0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "false_right" (formula "37"))
                                          (rule "applyEq" (formula "37") (term "0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "false_right" (formula "37"))
                                          (rule "applyEq" (formula "56") (term "0,0,0") (ifseqformula "2"))
                                          (rule "replace_known_right" (formula "56") (term "0,0") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "56"))
                                          (rule "notRight" (formula "56"))
                                          (rule "applyEqRigid" (formula "57") (term "2,0") (ifseqformula "2"))
                                          (rule "narrowSelectType" (formula "57") (term "0") (ifseqformula "19"))
                                          (rule "applyEq" (formula "37") (term "0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "false_right" (formula "37"))
                                          (rule "applyEq" (formula "37") (term "0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "false_right" (formula "37"))
                                          (rule "applyEq" (formula "55") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                          (rule "close" (formula "37") (ifseqformula "1"))
                                       )
                                       (branch "f_9 = java.lang.Object::<initialized> ∧ o_9 = m_10 FALSE"
                                          (rule "close" (formula "61") (ifseqformula "1"))
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
               )
               (branch "ClassCastException (!(m instanceof java.lang.Throwable))"
                  (builtin "One Step Simplification" (formula "53"))
                  (builtin "One Step Simplification" (formula "52"))
                  (rule "closeTrue" (formula "52"))
               )
            )
            (branch "if m instanceof java.lang.Throwable false"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
      (branch "Null Reference (m_8 = null)"
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "if x false"
      (builtin "One Step Simplification" (formula "1"))
      (builtin "One Step Simplification" (formula "4"))
      (rule "notLeft" (formula "1"))
      (rule "polySimp_elimSub" (formula "4") (term "1,1,0,0,1,1,0,0,0,1"))
      (rule "mul_literals" (formula "4") (term "1,1,1,0,0,1,1,0,0,0,1"))
      (rule "add_zero_right" (formula "4") (term "1,1,0,0,1,1,0,0,0,1"))
      (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0,1,1,0,0,0,1"))
      (rule "inEqSimp_leqRight" (formula "2"))
      (rule "mul_literals" (formula "1") (term "1,0,0"))
      (rule "add_literals" (formula "1") (term "0,0"))
      (rule "variableDeclarationAssign" (formula "4") (term "1"))
      (rule "variableDeclaration" (formula "4") (term "1") (newnames "tag"))
      (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "0,1,0,0,1,1,0,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "4") (term "0,0,1,0,0,1,1,0,0,0,1"))
      (rule "polySimp_elimOne" (formula "4") (term "0,0,1,0,0,1,1,0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1"))
      (rule "arrayLengthIsAShort" (formula "1") (term "0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "arrayLengthNotNegative" (formula "1") (term "0"))
      (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "2"))
      (rule "leq_literals" (formula "1") (term "0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (builtin "Use Operation Contract" (formula "4") (newnames "heapBefore_getPayLoad,result_0,exc_0,heapAfter_getPayLoad,anon_heap_getPayLoad") (contract "verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer::getPayLoad([B)].JML behavior operation contract.0"))
      (branch
         (rule "assignment" (formula "6") (term "1,1") (userinteraction))
         (rule "ifUnfold" (formula "6") (term "1,1,1") (inst "#boolv=x") (userinteraction))
         (rule "variableDeclaration" (formula "6") (term "1,1,1") (newnames "x_4") (userinteraction))
         (rule "compound_assignment_2" (formula "6") (term "1,1,1") (inst "#v=x_5") (userinteraction))
         (rule "variableDeclarationAssign" (formula "6") (term "1,1,1") (userinteraction))
         (rule "variableDeclaration" (formula "6") (term "1,1,1") (newnames "x_5") (userinteraction))
         (rule "methodCallWithAssignmentUnfoldArguments" (formula "6") (term "1,1,1") (userinteraction))
         (rule "variableDeclarationAssign" (formula "6") (term "1,1,1") (userinteraction))
         (rule "variableDeclaration" (formula "6") (term "1,1,1") (newnames "var_4") (userinteraction))
         (rule "assignment" (formula "6") (term "1,1,1") (userinteraction))
         (rule "variableDeclarationAssign" (formula "6") (term "1,1,1,1") (userinteraction))
         (rule "variableDeclaration" (formula "6") (term "1,1,1,1") (newnames "var_5") (userinteraction))
         (rule "activeUseStaticFieldReadAccess" (formula "6") (term "1,1,1,1") (userinteraction))
         (rule "assignment_read_static_attribute" (formula "6") (term "1,1,1,1") (userinteraction))
         (builtin "One Step Simplification" (formula "6"))
         (builtin "Use Operation Contract" (formula "6") (newnames "heapBefore_equal,result_1,exc_1") (contract "verif.utils.MessageTools[verif.utils.MessageTools::equal([B,[B)].JML normal_behavior operation contract.0"))
         (branch
            (rule "assignment" (formula "8") (term "1") (userinteraction))
            (rule "blockEmpty" (formula "8") (term "1,1") (userinteraction))
            (rule "compound_assignment_1_new" (formula "8") (term "1,1") (userinteraction))
            (rule "if" (formula "8") (term "1,1,1") (userinteraction))
            (builtin "One Step Simplification" (formula "8"))
            (rule "ifthenelse_negated_for" (formula "8") (userinteraction))
            (rule "ifthenelse_split_for" (formula "8") (userinteraction))
            (branch
               (rule "variableDeclarationAssign" (formula "9") (term "1") (userinteraction))
               (builtin "One Step Simplification" (formula "7"))
               (rule "variableDeclaration" (formula "9") (term "1") (newnames "payload_2") (userinteraction))
               (builtin "Use Operation Contract" (formula "9") (newnames "heapBefore_getSignature_0,result_3,exc_3,heapAfter_getSignature_0,anon_heap_getSignature_0") (contract "verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer::getSignature([B)].JML behavior operation contract.0"))
               (branch "Post (getSignature)"
                  (rule "assignment" (formula "11") (term "1,1") (userinteraction))
                  (rule "methodCallReturn" (formula "11") (term "1,1,1") (userinteraction))
                  (rule "assignment" (formula "11") (term "1,1,1") (userinteraction))
                  (rule "methodCallEmpty" (formula "11") (term "1,1,1,1") (userinteraction))
                  (rule "tryEmpty" (formula "11") (term "1,1,1,1") (userinteraction))
                  (rule "emptyModality" (formula "11") (term "1,1,1,1") (userinteraction))
                  (builtin "One Step Simplification" (formula "11"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "andLeft" (formula "3"))
                  (rule "andLeft" (formula "8"))
                  (rule "andLeft" (formula "11"))
                  (rule "andLeft" (formula "3"))
                  (rule "andLeft" (formula "5"))
                  (rule "andLeft" (formula "11"))
                  (rule "andLeft" (formula "14"))
                  (rule "andLeft" (formula "3"))
                  (rule "notLeft" (formula "6"))
                  (rule "andLeft" (formula "6"))
                  (rule "andLeft" (formula "16"))
                  (rule "andLeft" (formula "15"))
                  (rule "andLeft" (formula "3"))
                  (rule "notLeft" (formula "8"))
                  (rule "andLeft" (formula "3"))
                  (rule "andLeft" (formula "3"))
                  (rule "notLeft" (formula "3"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "andLeft" (formula "9"))
                  (rule "andLeft" (formula "10"))
                  (rule "andLeft" (formula "11"))
                  (rule "andLeft" (formula "10"))
                  (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "10") (userinteraction))
                  (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "10") (userinteraction))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "true_left" (formula "13") (userinteraction))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "18") (userinteraction))
                  (rule "replace_known_left" (formula "21") (term "0,0") (ifseqformula "18") (userinteraction))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "true_left" (formula "21") (userinteraction))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "andLeft" (formula "20") (userinteraction))
                  (rule "andLeft" (formula "21") (userinteraction))
                  (rule "andLeft" (formula "12") (userinteraction))
                  (rule "andLeft" (formula "13") (userinteraction))
                  (rule "notLeft" (formula "14") (userinteraction))
                  (rule "notLeft" (formula "23") (userinteraction))
                  (rule "andRight" (formula "28") (userinteraction))
                  (branch "Case 1"
                     (rule "andRight" (formula "28") (userinteraction))
                     (branch "Case 1"
                        (rule "applyEq" (formula "16") (term "0") (ifseqformula "1") (userinteraction))
                        (rule "ifthenelse_split" (formula "16") (term "1") (userinteraction))
                        (branch " array2seq(heapAfter_getPayLoad, result_0) = array2seq(heapAfter_getPayLoad, verif.selectvoting.system.core.Tag.BALLOTS@heapAfter_getPayLoad) TRUE"
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "true_left" (formula "17") (userinteraction))
                           (rule "eqSymm" (formula "16") (userinteraction))
                           (rule "applyEq" (formula "16") (term "1") (ifseqformula "12") (userinteraction))
                           (rule "cut" (inst "cutFormula=  array2seq(heapAfter_getPayLoad,
            byte[]::select(heapAfter_getPayLoad,
                           null,
                           verif.selectvoting.system.core.Tag::$BALLOTS))
= seqDef{int u;}(Z(0(#)),
                 length(byte[]::select(heapAfter_getSignature_0,
                                       null,
                                       verif.selectvoting.system.core.Tag::$BALLOTS)),
                 any::select(heapAfter_getSignature_0,
                             byte[]::select(heapAfter_getSignature_0,
                                            null,
                                            verif.selectvoting.system.core.Tag::$BALLOTS),
                             arr(u)))") (userinteraction))
                           (branch "CUT: array2seq(heapAfter_getPayLoad, verif.selectvoting.system.core.Tag.BALLOTS@heapAfter_getPayLoad) = seqDef{int u;}(0, verif.selectvoting.system.core.Tag.BALLOTS@heapAfter_getSignature_0.length, verif.selectvoting.system.core.Tag.BALLOTS.arr(u)@heapAfter_getSignature_0) TRUE"
                              (rule "cut" (inst "cutFormula=  array2seq(heapAfter_getPayLoad, tagged_payload)
= seqDef{int u;}(Z(0(#)),
                 length(tagged_payload),
                 any::select(heapAfter_getSignature_0,
                             tagged_payload,
                             arr(u)))") (userinteraction))
                              (branch
                                 (rule "applyEqReverse" (formula "30") (term "0,1") (ifseqformula "1") (userinteraction))
                                 (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "2") (userinteraction))
                                 (rule "close" (formula "30") (ifseqformula "18") (userinteraction))
                              )
                              (branch "CUT: array2seq(heapAfter_getPayLoad, tagged_payload) = seqDef{int u;}(0, tagged_payload.length, tagged_payload.arr(u)@heapAfter_getSignature_0) FALSE"
                                 (rule "hide_right" (formula "30") (userinteraction))
                                 (rule "array2seqDef" (formula "24") (term "0") (inst "u=u") (userinteraction))
                                 (rule "equalityToSeqGetAndSeqLenRight" (formula "24") (inst "iv=iv") (userinteraction))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "1") (ifseqformula "19"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "1") (ifseqformula "10"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,1") (ifseqformula "10"))
                                 (rule "eqSymm" (formula "13"))
                                 (rule "eqSymm" (formula "22"))
                                 (rule "eqSymm" (formula "24") (term "1,0,1"))
                                 (rule "eqSymm" (formula "24") (term "0"))
                                 (rule "eqSymm" (formula "1"))
                                 (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "29"))
                                 (builtin "One Step Simplification" (formula "6"))
                                 (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "26"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "25"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "lenOfSeqDef" (formula "24") (term "1,1,0,0,1"))
                                 (rule "polySimp_elimSub" (formula "24") (term "1,1,1,0,0,1"))
                                 (rule "times_zero_2" (formula "24") (term "1,1,1,1,0,0,1"))
                                 (rule "add_zero_right" (formula "24") (term "1,1,1,0,0,1"))
                                 (rule "getOfSeqDef" (formula "24") (term "1,1,0,1"))
                                 (rule "castDel" (formula "24") (term "2,1,1,0,1"))
                                 (rule "castDel" (formula "24") (term "1,1,1,0,1"))
                                 (rule "add_zero_right" (formula "24") (term "0,2,1,1,1,0,1"))
                                 (rule "polySimp_elimSub" (formula "24") (term "1,1,0,1,1,0,1"))
                                 (rule "times_zero_2" (formula "24") (term "1,1,1,0,1,1,0,1"))
                                 (rule "add_zero_right" (formula "24") (term "1,1,0,1,1,0,1"))
                                 (rule "getOfSeqDef" (formula "24") (term "0,1,0,1"))
                                 (rule "castDel" (formula "24") (term "1,0,1,0,1"))
                                 (rule "castDel" (formula "24") (term "2,0,1,0,1"))
                                 (rule "add_zero_right" (formula "24") (term "0,2,1,0,1,0,1"))
                                 (rule "polySimp_elimSub" (formula "24") (term "1,1,0,0,1,0,1"))
                                 (rule "mul_literals" (formula "24") (term "1,1,1,0,0,1,0,1"))
                                 (rule "add_zero_right" (formula "24") (term "1,1,0,0,1,0,1"))
                                 (rule "lenOfSeqDef" (formula "24") (term "1,0"))
                                 (rule "polySimp_elimSub" (formula "24") (term "1,1,0"))
                                 (rule "mul_literals" (formula "24") (term "1,1,1,0"))
                                 (rule "add_zero_right" (formula "24") (term "1,1,0"))
                                 (rule "lenOfSeqDef" (formula "24") (term "0,0"))
                                 (rule "polySimp_elimSub" (formula "24") (term "1,0,0"))
                                 (rule "times_zero_2" (formula "24") (term "1,1,0,0"))
                                 (rule "add_zero_right" (formula "24") (term "1,0,0"))
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "allRight" (formula "24") (inst "sk=iv_17"))
                                 (rule "impRight" (formula "24"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "replace_known_left" (formula "26") (term "0,0,1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "1")))
                                 (rule "inEqSimp_ltToLeq" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0"))
                                 (rule "eqSymm" (formula "26"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "26") (term "0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0,1,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0"))
                                 (rule "eqSymm" (formula "26"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1"))
                                 (rule "eqSymm" (formula "26"))
                                 (rule "polySimp_addComm1" (formula "26") (term "0,0,0"))
                                 (rule "eqSymm" (formula "26"))
                                 (rule "inEqSimp_commuteLeq" (formula "1"))
                                 (rule "applyEq" (formula "19") (term "1") (ifseqformula "15"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "0,0,1"))
                                 (rule "polySimp_elimOne" (formula "26") (term "0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "26") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                                 (rule "inEqSimp_subsumption1" (formula "2") (term "0,0") (ifseqformula "5"))
                                 (rule "leq_literals" (formula "2") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "replace_known_left" (formula "26") (term "0,1") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "2")))
                                 (rule "array2seqDef" (formula "19") (term "0") (inst "u=u"))
                                 (rule "array2seqDef" (formula "15") (term "0,0") (inst "u=u"))
                                 (rule "array2seqDef" (formula "15") (term "1") (inst "u=u"))
                                 (rule "array2seqDef" (formula "24") (term "1") (inst "u=u"))
                                 (rule "eqSymm" (formula "24"))
                                 (rule "array2seqDef" (formula "3") (term "1") (inst "u=u"))
                                 (rule "array2seqDef" (formula "19") (term "1") (inst "u=u"))
                                 (rule "eqSeqDef" (formula "15") (inst "iv=iv"))
                                 (rule "andLeft" (formula "15"))
                                 (rule "lenOfSeqDef" (formula "15") (term "1"))
                                 (rule "polySimp_elimSub" (formula "15") (term "1,1"))
                                 (rule "mul_literals" (formula "15") (term "1,1,1"))
                                 (rule "add_zero_right" (formula "15") (term "1,1"))
                                 (rule "getOfSeqDef" (formula "16") (term "1,1,0"))
                                 (rule "castDel" (formula "16") (term "1,1,1,0"))
                                 (rule "castDel" (formula "16") (term "2,1,1,0"))
                                 (rule "add_zero_right" (formula "16") (term "0,2,1,1,1,0"))
                                 (rule "polySimp_elimSub" (formula "16") (term "1,1,0,1,1,0"))
                                 (rule "mul_literals" (formula "16") (term "1,1,1,0,1,1,0"))
                                 (rule "add_zero_right" (formula "16") (term "1,1,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1"))
                                 (rule "add_zero_right" (formula "15") (term "0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,1,1,0"))
                                 (rule "apply_eq_monomials" (formula "16") (term "1,0,1,0,0") (ifseqformula "15"))
                                 (rule "polySimp_rightDist" (formula "16") (term "0,1,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,0,1,0,1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "16") (term "1,0,1,0,0"))
                                 (rule "add_literals" (formula "16") (term "1,1,1,0,1,0,0"))
                                 (rule "times_zero_1" (formula "16") (term "1,1,0,1,0,0"))
                                 (rule "add_zero_right" (formula "16") (term "1,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "0,0,1"))
                                 (rule "polySimp_elimOne" (formula "15") (term "0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,1,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,1,1,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,1,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,1,0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,1,0,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "0,0,0,1,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                 (rule "array2seqDef" (formula "25") (term "0,1") (inst "u=u"))
                                 (rule "eqSymm" (formula "25"))
                                 (rule "eqSeqDef" (formula "3") (inst "iv=iv"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "lenOfSeqDef" (formula "3") (term "0"))
                                 (rule "eqSymm" (formula "3"))
                                 (rule "polySimp_elimSub" (formula "3") (term "1,1"))
                                 (rule "times_zero_2" (formula "3") (term "1,1,1"))
                                 (rule "add_zero_right" (formula "3") (term "1,1"))
                                 (rule "lenOfSeqDef" (formula "4") (term "1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "4") (term "1,1,1,0,0"))
                                 (rule "times_zero_2" (formula "4") (term "1,1,1,1,0,0"))
                                 (rule "add_zero_right" (formula "4") (term "1,1,1,0,0"))
                                 (rule "getOfSeqDef" (formula "4") (term "1,1,0"))
                                 (rule "castDel" (formula "4") (term "1,1,1,0"))
                                 (rule "castDel" (formula "4") (term "2,1,1,0"))
                                 (rule "add_zero_right" (formula "4") (term "0,2,1,1,1,0"))
                                 (rule "polySimp_elimSub" (formula "4") (term "1,1,0,1,1,0"))
                                 (rule "mul_literals" (formula "4") (term "1,1,1,0,1,1,0"))
                                 (rule "add_zero_right" (formula "4") (term "1,1,0,1,1,0"))
                                 (rule "getOfSeqDef" (formula "4") (term "0,1,0"))
                                 (rule "castDel" (formula "4") (term "1,0,1,0"))
                                 (rule "castDel" (formula "4") (term "2,0,1,0"))
                                 (rule "add_zero_right" (formula "4") (term "0,2,1,0,1,0"))
                                 (rule "polySimp_elimSub" (formula "4") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_2" (formula "4") (term "1,1,1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "4") (term "1,1,0,0,1,0"))
                                 (rule "lenOfSeqDef" (formula "3") (term "0"))
                                 (rule "eqSymm" (formula "3"))
                                 (rule "polySimp_elimSub" (formula "3") (term "1,1"))
                                 (rule "times_zero_2" (formula "3") (term "1,1,1"))
                                 (rule "add_zero_right" (formula "3") (term "1,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "4") (term "0,1,1,0,0"))
                                 (rule "add_zero_right" (formula "4") (term "0,0,1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3") (term "0,0"))
                                 (rule "add_zero_right" (formula "3") (term "0,0,0"))
                                 (rule "eqSymm" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3") (term "0,0"))
                                 (rule "add_zero_right" (formula "3") (term "0,0,0"))
                                 (rule "eqSymm" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0,1,0"))
                                 (rule "applyEqRigid" (formula "4") (term "0,1,0,0,1,0,0") (ifseqformula "3"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1,1,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,1,1,0"))
                                 (rule "mul_literals" (formula "4") (term "0,1,1,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "4") (term "0,1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0"))
                                 (rule "eqSymm" (formula "3"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0,0,1"))
                                 (rule "applyEqRigid" (formula "4") (term "0,1,0,0,1,0,0") (ifseqformula "3"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0"))
                                 (rule "eqSymm" (formula "3"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0,0,1"))
                                 (rule "applyEqRigid" (formula "4") (term "0,1,0,0,1,0,0") (ifseqformula "3"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "4") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0"))
                                 (rule "eqSeqDef" (formula "21") (inst "iv=iv"))
                                 (rule "andLeft" (formula "21"))
                                 (rule "lenOfSeqDef" (formula "21") (term "0"))
                                 (rule "eqSymm" (formula "21"))
                                 (rule "polySimp_elimSub" (formula "21") (term "1,1"))
                                 (rule "times_zero_2" (formula "21") (term "1,1,1"))
                                 (rule "add_zero_right" (formula "21") (term "1,1"))
                                 (rule "lenOfSeqDef" (formula "22") (term "1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "22") (term "1,1,1,0,0"))
                                 (rule "times_zero_2" (formula "22") (term "1,1,1,1,0,0"))
                                 (rule "add_zero_right" (formula "22") (term "1,1,1,0,0"))
                                 (rule "getOfSeqDef" (formula "22") (term "1,1,0"))
                                 (rule "castDel" (formula "22") (term "1,1,1,0"))
                                 (rule "castDel" (formula "22") (term "2,1,1,0"))
                                 (rule "add_zero_right" (formula "22") (term "0,2,1,1,1,0"))
                                 (rule "polySimp_elimSub" (formula "22") (term "1,1,0,1,1,0"))
                                 (rule "times_zero_2" (formula "22") (term "1,1,1,0,1,1,0"))
                                 (rule "add_zero_right" (formula "22") (term "1,1,0,1,1,0"))
                                 (rule "getOfSeqDef" (formula "22") (term "0,1,0"))
                                 (rule "castDel" (formula "22") (term "2,0,1,0"))
                                 (rule "castDel" (formula "22") (term "1,0,1,0"))
                                 (rule "add_zero_right" (formula "22") (term "0,2,1,0,1,0"))
                                 (rule "polySimp_elimSub" (formula "22") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_2" (formula "22") (term "1,1,1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "22") (term "1,1,0,0,1,0"))
                                 (rule "lenOfSeqDef" (formula "21") (term "0"))
                                 (rule "eqSymm" (formula "21"))
                                 (rule "polySimp_elimSub" (formula "21") (term "1,1"))
                                 (rule "mul_literals" (formula "21") (term "1,1,1"))
                                 (rule "add_zero_right" (formula "21") (term "1,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1,1,0,0"))
                                 (rule "add_zero_right" (formula "22") (term "0,0,1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1"))
                                 (rule "add_zero_right" (formula "21") (term "0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0"))
                                 (rule "add_zero_right" (formula "21") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1,0"))
                                 (rule "apply_eq_monomials" (formula "22") (term "1,0,0,1,0,0") (ifseqformula "21"))
                                 (rule "polySimp_rightDist" (formula "22") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0,0,1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "22") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "22") (term "1,1,1,0,0,1,0,0"))
                                 (rule "times_zero_1" (formula "22") (term "1,1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "22") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,1,0,1,1,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,1,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "0,0,1"))
                                 (rule "polySimp_elimOne" (formula "21") (term "0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,1,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "0,0,1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "0,0,1,1,1,0,0"))
                                 (rule "eqSeqDef" (formula "27") (inst "iv=iv"))
                                 (rule "andLeft" (formula "27"))
                                 (rule "lenOfSeqDef" (formula "27") (term "1"))
                                 (rule "polySimp_elimSub" (formula "27") (term "1,1"))
                                 (rule "mul_literals" (formula "27") (term "1,1,1"))
                                 (rule "add_zero_right" (formula "27") (term "1,1"))
                                 (rule "getOfSeqDef" (formula "28") (term "1,1,0"))
                                 (rule "castDel" (formula "28") (term "1,1,1,0"))
                                 (rule "castDel" (formula "28") (term "2,1,1,0"))
                                 (rule "add_zero_right" (formula "28") (term "0,2,1,1,1,0"))
                                 (rule "polySimp_elimSub" (formula "28") (term "1,1,0,1,1,0"))
                                 (rule "mul_literals" (formula "28") (term "1,1,1,0,1,1,0"))
                                 (rule "add_zero_right" (formula "28") (term "1,1,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "27") (term "0,1"))
                                 (rule "add_zero_right" (formula "27") (term "0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,1,1,0"))
                                 (rule "apply_eq_monomials" (formula "28") (term "1,0,1,0,0") (ifseqformula "27"))
                                 (rule "polySimp_rightDist" (formula "28") (term "0,1,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "28") (term "1,0,1,0,0"))
                                 (rule "add_literals" (formula "28") (term "1,1,1,0,1,0,0"))
                                 (rule "times_zero_1" (formula "28") (term "1,1,0,1,0,0"))
                                 (rule "add_zero_right" (formula "28") (term "1,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "0,0,1"))
                                 (rule "polySimp_elimOne" (formula "27") (term "0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,1,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,1,1,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,1,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0,1,0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,1,0,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "0,0,0,1,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                                 (rule "pullOutSelect" (formula "30") (term "1") (inst "selectSK=arr_277"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")) (ifInst ""  (formula "10")))
                                 (rule "applyEqReverse" (formula "31") (term "1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "narrowSelectArrayType" (formula "30") (term "1") (ifseqformula "19") (ifseqformula "35"))
                                 (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=arr_278"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                                 (rule "replaceKnownSelect_taclet10000000010_1" (formula "1") (term "2,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet10000000010_2" (formula "1") (term "2,0"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "14"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "10"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "narrowSelectArrayType" (formula "30") (term "0") (ifseqformula "19") (ifseqformula "35"))
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "closeTrue" (formula "30"))
                              )
                           )
                           (branch "CUT: array2seq(heapAfter_getPayLoad, verif.selectvoting.system.core.Tag.BALLOTS@heapAfter_getPayLoad) = seqDef{int u;}(0, verif.selectvoting.system.core.Tag.BALLOTS@heapAfter_getSignature_0.length, verif.selectvoting.system.core.Tag.BALLOTS.arr(u)@heapAfter_getSignature_0) FALSE"
                              (rule "hide_right" (formula "29") (userinteraction))
                              (rule "array2seqDef" (formula "23") (term "0") (inst "u=u") (userinteraction))
                              (rule "equalityToSeqGetAndSeqLenRight" (formula "23") (inst "iv=iv") (userinteraction))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "1") (ifseqformula "9"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "1") (ifseqformula "18"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "0,1") (ifseqformula "9"))
                              (rule "eqSymm" (formula "21"))
                              (rule "eqSymm" (formula "12"))
                              (rule "eqSymm" (formula "23") (term "1,0,1"))
                              (rule "eqSymm" (formula "23") (term "0"))
                              (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "28"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "25"))
                              (builtin "One Step Simplification" (formula "11"))
                              (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "24"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "lenOfSeqDef" (formula "23") (term "1,1,0,0,1"))
                              (rule "polySimp_elimSub" (formula "23") (term "1,1,1,0,0,1"))
                              (rule "times_zero_2" (formula "23") (term "1,1,1,1,0,0,1"))
                              (rule "add_zero_right" (formula "23") (term "1,1,1,0,0,1"))
                              (rule "getOfSeqDef" (formula "23") (term "0,1,0,1"))
                              (rule "castDel" (formula "23") (term "1,0,1,0,1"))
                              (rule "castDel" (formula "23") (term "2,0,1,0,1"))
                              (rule "add_zero_right" (formula "23") (term "0,2,1,0,1,0,1"))
                              (rule "eqSymm" (formula "23") (term "1,0,1"))
                              (rule "polySimp_elimSub" (formula "23") (term "1,1,0,1,1,0,1"))
                              (rule "times_zero_2" (formula "23") (term "1,1,1,0,1,1,0,1"))
                              (rule "add_zero_right" (formula "23") (term "1,1,0,1,1,0,1"))
                              (rule "lenOfSeqDef" (formula "23") (term "0,0"))
                              (rule "eqSymm" (formula "23") (term "0"))
                              (rule "polySimp_elimSub" (formula "23") (term "1,1,0"))
                              (rule "times_zero_2" (formula "23") (term "1,1,1,0"))
                              (rule "add_zero_right" (formula "23") (term "1,1,0"))
                              (rule "getOfSeqDef" (formula "23") (term "0,1,0,1"))
                              (rule "castDel" (formula "23") (term "1,0,1,0,1"))
                              (rule "castDel" (formula "23") (term "2,0,1,0,1"))
                              (rule "add_zero_right" (formula "23") (term "0,2,1,0,1,0,1"))
                              (rule "eqSymm" (formula "23") (term "1,0,1"))
                              (rule "polySimp_elimSub" (formula "23") (term "1,1,0,1,1,0,1"))
                              (rule "times_zero_2" (formula "23") (term "1,1,1,0,1,1,0,1"))
                              (rule "add_zero_right" (formula "23") (term "1,1,0,1,1,0,1"))
                              (rule "lenOfSeqDef" (formula "23") (term "0,0"))
                              (rule "eqSymm" (formula "23") (term "0"))
                              (rule "polySimp_elimSub" (formula "23") (term "1,1,0"))
                              (rule "times_zero_2" (formula "23") (term "1,1,1,0"))
                              (rule "add_zero_right" (formula "23") (term "1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,1,0,0,1"))
                              (rule "add_zero_right" (formula "23") (term "0,0,1,1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,1,0,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,1,0,1"))
                              (rule "eqSymm" (formula "23") (term "1,0,1"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,1,1,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                              (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                              (rule "eqSymm" (formula "23") (term "0"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,1,0,1"))
                              (rule "eqSymm" (formula "23") (term "1,0,1"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,1,1,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                              (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                              (rule "eqSymm" (formula "23") (term "0"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,1,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,1,1,0,1"))
                              (rule "applyEq" (formula "16") (term "1") (ifseqformula "12"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,1"))
                              (rule "mul_literals" (formula "23") (term "0,1,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,1,0,1"))
                              (rule "eqSymm" (formula "23") (term "1,0,1"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,1,1,0,1"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,1,0,1,1,0,1"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,1,1,0,1"))
                              (rule "mul_literals" (formula "23") (term "0,1,1,0,1,1,0,1"))
                              (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,1,1,0,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,0"))
                              (rule "eqSymm" (formula "23") (term "0"))
                              (rule "polySimp_elimOne" (formula "23") (term "0,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,1,1,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "0,0,1,1,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "23") (term "0,0,1,1,1,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,1,0,1"))
                              (rule "eqSymm" (formula "23") (term "1,0,1"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,1,1,0,1"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,1,0,1,1,0,1"))
                              (rule "mul_literals" (formula "23") (term "0,1,1,0,1,1,0,1"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,1,1,0,1"))
                              (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,1,1,0,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,0"))
                              (rule "eqSymm" (formula "23") (term "0"))
                              (rule "polySimp_elimOne" (formula "23") (term "0,0,1,0"))
                              (rule "array2seqDef" (formula "16") (term "0") (inst "u=u"))
                              (rule "array2seqDef" (formula "21") (term "0,0") (inst "u=u"))
                              (rule "array2seqDef" (formula "21") (term "1") (inst "u=u"))
                              (rule "array2seqDef" (formula "12") (term "0,0") (inst "u=u"))
                              (rule "array2seqDef" (formula "12") (term "1") (inst "u=u"))
                              (rule "array2seqDef" (formula "16") (term "1") (inst "u=u"))
                              (rule "eqSeqDef" (formula "21") (inst "iv=iv"))
                              (rule "andLeft" (formula "21"))
                              (rule "lenOfSeqDef" (formula "21") (term "1"))
                              (rule "polySimp_elimSub" (formula "21") (term "1,1"))
                              (rule "times_zero_2" (formula "21") (term "1,1,1"))
                              (rule "add_zero_right" (formula "21") (term "1,1"))
                              (rule "getOfSeqDef" (formula "22") (term "1,1,0"))
                              (rule "castDel" (formula "22") (term "1,1,1,0"))
                              (rule "castDel" (formula "22") (term "2,1,1,0"))
                              (rule "add_zero_right" (formula "22") (term "0,2,1,1,1,0"))
                              (rule "polySimp_elimSub" (formula "22") (term "1,1,0,1,1,0"))
                              (rule "times_zero_2" (formula "22") (term "1,1,1,0,1,1,0"))
                              (rule "add_zero_right" (formula "22") (term "1,1,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                              (rule "polySimp_addComm1" (formula "22") (term "0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1"))
                              (rule "add_zero_right" (formula "21") (term "0,0,1"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,1,1,0"))
                              (rule "apply_eq_monomials" (formula "22") (term "1,0,1,0,0") (ifseqformula "21"))
                              (rule "polySimp_rightDist" (formula "22") (term "0,1,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0,1,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "22") (term "1,0,1,0,0"))
                              (rule "add_literals" (formula "22") (term "1,1,1,0,1,0,0"))
                              (rule "times_zero_1" (formula "22") (term "1,1,0,1,0,0"))
                              (rule "add_zero_right" (formula "22") (term "1,0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0,0"))
                              (rule "polySimp_addComm1" (formula "22") (term "0,1,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "0,0,1"))
                              (rule "polySimp_elimOne" (formula "21") (term "0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,1,0,1,1,0"))
                              (rule "mul_literals" (formula "22") (term "0,1,1,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,1,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,1,0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,1,0,0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "22") (term "0,0,0,1,0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                              (rule "eqSeqDef" (formula "12") (inst "iv=iv"))
                              (rule "andLeft" (formula "12"))
                              (rule "getOfSeqDef" (formula "13") (term "1,1,0"))
                              (rule "castDel" (formula "13") (term "1,1,1,0"))
                              (rule "castDel" (formula "13") (term "2,1,1,0"))
                              (rule "add_zero_right" (formula "13") (term "0,2,1,1,1,0"))
                              (rule "polySimp_elimSub" (formula "13") (term "1,1,0,1,1,0"))
                              (rule "times_zero_2" (formula "13") (term "1,1,1,0,1,1,0"))
                              (rule "add_zero_right" (formula "13") (term "1,1,0,1,1,0"))
                              (rule "lenOfSeqDef" (formula "12") (term "1"))
                              (rule "polySimp_elimSub" (formula "12") (term "1,1"))
                              (rule "times_zero_2" (formula "12") (term "1,1,1"))
                              (rule "add_zero_right" (formula "12") (term "1,1"))
                              (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                              (rule "polySimp_addComm1" (formula "13") (term "0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "12") (term "0,1"))
                              (rule "add_zero_right" (formula "12") (term "0,0,1"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,1,1,0"))
                              (rule "apply_eq_monomials" (formula "13") (term "1,0,1,0,0") (ifseqformula "12"))
                              (rule "polySimp_rightDist" (formula "13") (term "0,1,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,1,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "13") (term "1,0,1,0,0"))
                              (rule "add_literals" (formula "13") (term "1,1,1,0,1,0,0"))
                              (rule "times_zero_1" (formula "13") (term "1,1,0,1,0,0"))
                              (rule "add_zero_right" (formula "13") (term "1,0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,0,0"))
                              (rule "polySimp_addComm1" (formula "13") (term "0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,1,0,1,1,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,1,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,1,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "0,0,1"))
                              (rule "polySimp_elimOne" (formula "12") (term "0,0,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0,1,0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,1,0,0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "13") (term "0,0,0,1,0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                              (rule "eqSeqDef" (formula "17") (inst "iv=iv"))
                              (rule "andLeft" (formula "17"))
                              (rule "lenOfSeqDef" (formula "18") (term "1,1,0,0"))
                              (rule "polySimp_elimSub" (formula "18") (term "1,1,1,0,0"))
                              (rule "times_zero_2" (formula "18") (term "1,1,1,1,0,0"))
                              (rule "add_zero_right" (formula "18") (term "1,1,1,0,0"))
                              (rule "lenOfSeqDef" (formula "17") (term "1"))
                              (rule "polySimp_elimSub" (formula "17") (term "1,1"))
                              (rule "times_zero_2" (formula "17") (term "1,1,1"))
                              (rule "add_zero_right" (formula "17") (term "1,1"))
                              (rule "lenOfSeqDef" (formula "17") (term "0"))
                              (rule "polySimp_elimSub" (formula "17") (term "1,0"))
                              (rule "times_zero_2" (formula "17") (term "1,1,0"))
                              (rule "add_zero_right" (formula "17") (term "1,0"))
                              (rule "getOfSeqDef" (formula "18") (term "0,1,0"))
                              (rule "castDel" (formula "18") (term "2,0,1,0"))
                              (rule "castDel" (formula "18") (term "1,0,1,0"))
                              (rule "add_zero_right" (formula "18") (term "0,2,1,0,1,0"))
                              (rule "eqSymm" (formula "18") (term "1,0"))
                              (rule "polySimp_elimSub" (formula "18") (term "1,1,0,1,1,0"))
                              (rule "times_zero_2" (formula "18") (term "1,1,1,0,1,1,0"))
                              (rule "add_zero_right" (formula "18") (term "1,1,0,1,1,0"))
                              (rule "getOfSeqDef" (formula "18") (term "0,1,0"))
                              (rule "castDel" (formula "18") (term "1,0,1,0"))
                              (rule "castDel" (formula "18") (term "2,0,1,0"))
                              (rule "add_zero_right" (formula "18") (term "0,2,1,0,1,0"))
                              (rule "eqSymm" (formula "18") (term "1,0"))
                              (rule "polySimp_elimSub" (formula "18") (term "1,1,0,1,1,0"))
                              (rule "times_zero_2" (formula "18") (term "1,1,1,0,1,1,0"))
                              (rule "add_zero_right" (formula "18") (term "1,1,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1,1,0,0"))
                              (rule "add_zero_right" (formula "18") (term "0,0,1,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1"))
                              (rule "add_zero_right" (formula "17") (term "0,0,1"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0"))
                              (rule "add_zero_right" (formula "17") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,1,0"))
                              (rule "eqSymm" (formula "18") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,1,0"))
                              (rule "eqSymm" (formula "18") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,1,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,1,1,0"))
                              (rule "apply_eq_monomials" (formula "18") (term "1,0,0,1,0,0") (ifseqformula "17"))
                              (rule "polySimp_rightDist" (formula "18") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0,0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "18") (term "1,0,1,0,0,1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "18") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "18") (term "1,1,1,0,0,1,0,0"))
                              (rule "times_zero_1" (formula "18") (term "1,1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "18") (term "1,0,0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "0,0,1"))
                              (rule "polySimp_elimOne" (formula "17") (term "0,0,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0"))
                              (rule "polySimp_elimOne" (formula "17") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1,0"))
                              (rule "eqSymm" (formula "18") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,1,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,1,1,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,1,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,1,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,1,0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,1,0,0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "18") (term "0,0,0,1,0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1,0"))
                              (rule "eqSymm" (formula "18") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,1,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,1,1,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,1,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                              (rule "pullOutSelect" (formula "26") (term "0,1,1,1,1,0,0,1") (inst "selectSK=verif_selectvoting_system_core_Tag_BALLOTS_12"))
                              (rule "applyEq" (formula "18") (term "0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "27") (term "1,1,1,1,0,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "27") (term "0,0,0,1,1,1,0,0,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "27") (term "0,0,0,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "27") (term "0,1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "19") (term "0,1,1,1,0,0,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "19") (term "1,1,0,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "18") (term "0,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "27") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "27") (term "0,1,1,1,1,0,0,1") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "18") (term "0,0,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "27") (term "1,1,1,1,0,1") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "27") (term "0,0,0,1,1,1,0,0,1") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "27") (term "0,0,0,1,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "27") (term "0,1,1,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "19") (term "0,1,1,1,0,0,1,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "19") (term "1,1,0,1,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "18") (term "0,1,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "27") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "applyEq" (formula "26") (term "1,1,1,0,0,1") (ifseqformula "17"))
                              (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "17"))
                              (rule "pullOutSelect" (formula "26") (term "0,1,1,1,0,0,1,0,1") (inst "selectSK=verif_selectvoting_system_core_Tag_BALLOTS_13"))
                              (rule "applyEq" (formula "27") (term "0,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "27") (term "1,1,0,1,0,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "27") (term "0,0,0,0,0") (ifseqformula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "replaceKnownSelect_taclet1000000010_1" (formula "1") (term "0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1000000010_2" (formula "1") (term "0"))
                              (rule "applyEqReverse" (formula "27") (term "0,1,1,1,0,0,1,0,1") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "27") (term "0,1,0,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "27") (term "1,1,0,1,0,1") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "27") (term "0,0,0,0,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "17"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "allRight" (formula "26") (inst "sk=iv_18"))
                              (rule "impRight" (formula "26"))
                              (rule "andLeft" (formula "1"))
                              (rule "replace_known_left" (formula "28") (term "0,0,1") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "1")))
                              (rule "inEqSimp_homoInEq0" (formula "2"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "inEqSimp_homoInEq0" (formula "28") (term "0,0"))
                              (rule "eqSymm" (formula "28"))
                              (rule "polySimp_addComm1" (formula "28") (term "0,0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "28") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                              (rule "eqSymm" (formula "28"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "mul_literals" (formula "2") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,0,1"))
                              (rule "mul_literals" (formula "28") (term "0,1,0,1"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,1"))
                              (rule "polySimp_elimOne" (formula "28") (term "1,1,0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                              (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                              (rule "pullOutSelect" (formula "28") (term "1,1") (inst "selectSK=arr_279"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                              (rule "ifthenelse_negated" (formula "1") (term "0"))
                              (rule "narrowSelectArrayType" (formula "1") (term "2,0") (ifseqformula "11") (ifseqformula "33"))
                              (rule "narrowSelectArrayType" (formula "1") (term "1,0") (ifseqformula "18") (ifseqformula "33"))
                              (rule "pullOutSelect" (formula "29") (term "1,0") (inst "selectSK=arr_280"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                              (rule "replaceKnownSelect_taclet1000000010_5" (formula "1") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "13"))
                              (rule "ifthenelse_negated" (formula "1") (term "0"))
                              (rule "narrowSelectArrayType" (formula "1") (term "2,0") (ifseqformula "23") (ifseqformula "34"))
                              (rule "nnf_imp2or" (formula "28") (term "0"))
                              (rule "nnf_imp2or" (formula "17") (term "0"))
                              (rule "nnf_imp2or" (formula "22") (term "0"))
                              (rule "nnf_notAnd" (formula "28") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                              (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "28") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                              (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "17") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                              (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                              (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "22") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
                              (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "22") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                              (rule "mul_literals" (formula "22") (term "1,0,0,0"))
                              (rule "cut_direct" (formula "15") (term "0"))
                              (branch "CUT: result_0.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "cut_direct" (formula "26") (term "0,0"))
                                 (branch "CUT: result_3.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "true_left" (formula "27"))
                                    (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "11") (ifseqformula "8"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "notLeft" (formula "12"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "notLeft" (formula "12"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "notLeft" (formula "12"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "notLeft" (formula "12"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "notLeft" (formula "11"))
                                    (rule "notLeft" (formula "11"))
                                    (rule "nonNull" (formula "16") (inst "i=i"))
                                    (rule "greater_literals" (formula "16") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "sub_literals" (formula "16") (term "2,1,0,1"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "notLeft" (formula "16"))
                                    (rule "narrowSelectArrayType" (formula "16") (term "0,0,1,0") (ifseqformula "24") (ifseqformula "35"))
                                    (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "15") (inst "i=i"))
                                    (rule "greater_literals" (formula "15") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "sub_literals" (formula "15") (term "2,1,0,1"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "andLeft" (formula "15"))
                                    (rule "notLeft" (formula "15"))
                                    (rule "narrowSelectArrayType" (formula "15") (term "0,0,1,0") (ifseqformula "24") (ifseqformula "35"))
                                    (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "14") (inst "i=i"))
                                    (rule "sub_literals" (formula "14") (term "2,1,0,1,1"))
                                    (builtin "One Step Simplification" (formula "14"))
                                    (rule "greater_literals" (formula "14") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "14"))
                                    (rule "andLeft" (formula "14"))
                                    (rule "notLeft" (formula "14"))
                                    (rule "narrowSelectArrayType" (formula "14") (term "0,0,1,0") (ifseqformula "24") (ifseqformula "35"))
                                    (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "13") (inst "i=i"))
                                    (rule "greater_literals" (formula "13") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "sub_literals" (formula "13") (term "2,1,0,1"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "notLeft" (formula "13"))
                                    (rule "narrowSelectArrayType" (formula "13") (term "0,0,1,0") (ifseqformula "24") (ifseqformula "35"))
                                    (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "12") (inst "i=i"))
                                    (rule "sub_literals" (formula "12") (term "2,1,0,1,1"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "greater_literals" (formula "12") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "andLeft" (formula "12"))
                                    (rule "notLeft" (formula "12"))
                                    (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "24") (ifseqformula "35"))
                                    (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "11") (inst "i=i"))
                                    (rule "sub_literals" (formula "11") (term "2,1,0,1,1"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "greater_literals" (formula "11") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "notLeft" (formula "11"))
                                    (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "24") (ifseqformula "35"))
                                    (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                    (rule "nnf_imp2or" (formula "16") (term "0"))
                                    (rule "nnf_imp2or" (formula "15") (term "0"))
                                    (rule "nnf_imp2or" (formula "14") (term "0"))
                                    (rule "nnf_imp2or" (formula "13") (term "0"))
                                    (rule "nnf_imp2or" (formula "12") (term "0"))
                                    (rule "nnf_imp2or" (formula "11") (term "0"))
                                    (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                    (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                    (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                    (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                    (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                    (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "11") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                    (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                                    (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "23") (ifseqformula "8"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "notLeft" (formula "25"))
                                    (rule "notLeft" (formula "24"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "notLeft" (formula "24"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "notLeft" (formula "24"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "notLeft" (formula "24"))
                                    (rule "notLeft" (formula "23"))
                                    (rule "nonNull" (formula "28") (inst "i=i"))
                                    (rule "sub_literals" (formula "28") (term "2,1,0,1,1"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "greater_literals" (formula "28") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "andLeft" (formula "28"))
                                    (rule "notLeft" (formula "28"))
                                    (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "27") (inst "i=i"))
                                    (rule "sub_literals" (formula "27") (term "2,1,0,1,1"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "greater_literals" (formula "27") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "andLeft" (formula "27"))
                                    (rule "notLeft" (formula "27"))
                                    (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "26") (inst "i=i"))
                                    (rule "greater_literals" (formula "26") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "sub_literals" (formula "26") (term "2,1,0,1"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "andLeft" (formula "26"))
                                    (rule "notLeft" (formula "26"))
                                    (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "25") (inst "i=i"))
                                    (rule "greater_literals" (formula "25") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "sub_literals" (formula "25") (term "2,1,0,1"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "andLeft" (formula "25"))
                                    (rule "notLeft" (formula "25"))
                                    (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "24") (inst "i=i"))
                                    (rule "greater_literals" (formula "24") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "sub_literals" (formula "24") (term "2,1,0,1"))
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "andLeft" (formula "24"))
                                    (rule "notLeft" (formula "24"))
                                    (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "23") (inst "i=i"))
                                    (rule "greater_literals" (formula "23") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "sub_literals" (formula "23") (term "2,1,0,1"))
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "notLeft" (formula "23"))
                                    (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                                    (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_23"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")) (ifInst ""  (formula "8")))
                                    (rule "applyEqReverse" (formula "52") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "50") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_23"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")) (ifInst ""  (formula "8")))
                                    (rule "applyEqReverse" (formula "51") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "49") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_23"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")) (ifInst ""  (formula "8")))
                                    (rule "applyEqReverse" (formula "50") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_23"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")) (ifInst ""  (formula "8")))
                                    (rule "applyEqReverse" (formula "49") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_23"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")) (ifInst ""  (formula "8")))
                                    (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_23"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "63")) (ifInst ""  (formula "8")))
                                    (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "28") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_23"))
                                    (rule "applyEq" (formula "46") (term "0") (ifseqformula "28"))
                                    (rule "applyEq" (formula "29") (term "0,1,1,1,0,0") (ifseqformula "28"))
                                    (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "62")) (ifInst ""  (formula "7")))
                                    (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "28"))
                                    (rule "applyEqReverse" (formula "29") (term "0,1,1,1,0,0") (ifseqformula "28"))
                                    (rule "applyEqReverse" (formula "29") (term "1,0,0,1,0") (ifseqformula "28"))
                                    (rule "hideAuxiliaryEq" (formula "28"))
                                    (rule "pullOutSelect" (formula "27") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_23"))
                                    (rule "applyEq" (formula "45") (term "0") (ifseqformula "27"))
                                    (rule "applyEq" (formula "28") (term "0,1,1,1,0,0") (ifseqformula "27"))
                                    (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "61")) (ifInst ""  (formula "7")))
                                    (rule "applyEqReverse" (formula "28") (term "1,0,0,1,0") (ifseqformula "27"))
                                    (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "27"))
                                    (rule "applyEqReverse" (formula "28") (term "0,1,1,1,0,0") (ifseqformula "27"))
                                    (rule "hideAuxiliaryEq" (formula "27"))
                                    (rule "pullOutSelect" (formula "26") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_23"))
                                    (rule "applyEq" (formula "44") (term "0") (ifseqformula "26"))
                                    (rule "applyEq" (formula "27") (term "0,1,1,1,0,0") (ifseqformula "26"))
                                    (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "60")) (ifInst ""  (formula "7")))
                                    (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "26"))
                                    (rule "applyEqReverse" (formula "27") (term "0,1,1,1,0,0") (ifseqformula "26"))
                                    (rule "applyEqReverse" (formula "27") (term "1,0,0,1,0") (ifseqformula "26"))
                                    (rule "hideAuxiliaryEq" (formula "26"))
                                    (rule "pullOutSelect" (formula "25") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_23"))
                                    (rule "applyEq" (formula "43") (term "0") (ifseqformula "25"))
                                    (rule "applyEq" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "25"))
                                    (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "59")) (ifInst ""  (formula "7")))
                                    (rule "applyEqReverse" (formula "26") (term "1,0,0,1,0") (ifseqformula "25"))
                                    (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "25"))
                                    (rule "applyEqReverse" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "25"))
                                    (rule "hideAuxiliaryEq" (formula "25"))
                                    (rule "pullOutSelect" (formula "24") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_23"))
                                    (rule "applyEq" (formula "25") (term "0,1,1,1,0,0") (ifseqformula "24"))
                                    (rule "applyEq" (formula "42") (term "0") (ifseqformula "24"))
                                    (rule "simplifySelectOfAnonEQ" (formula "24") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "58")) (ifInst ""  (formula "7")))
                                    (rule "applyEqReverse" (formula "25") (term "0,1,1,1,0,0") (ifseqformula "24"))
                                    (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "24"))
                                    (rule "applyEqReverse" (formula "25") (term "1,0,0,1,0") (ifseqformula "24"))
                                    (rule "hideAuxiliaryEq" (formula "24"))
                                    (rule "pullOutSelect" (formula "23") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_23"))
                                    (rule "applyEq" (formula "41") (term "0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "24") (term "0,1,1,1,0,0") (ifseqformula "23"))
                                    (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "57")) (ifInst ""  (formula "7")))
                                    (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "23"))
                                    (rule "applyEqReverse" (formula "24") (term "0,1,1,1,0,0") (ifseqformula "23"))
                                    (rule "applyEqReverse" (formula "24") (term "1,0,0,1,0") (ifseqformula "23"))
                                    (rule "hideAuxiliaryEq" (formula "23"))
                                    (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "39") (ifseqformula "8"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "notLeft" (formula "40"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "notLeft" (formula "40"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "notLeft" (formula "40"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "notLeft" (formula "40"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "notLeft" (formula "40"))
                                    (rule "notLeft" (formula "39"))
                                    (rule "nonNull" (formula "44") (inst "i=i"))
                                    (rule "sub_literals" (formula "44") (term "2,1,0,1,1"))
                                    (builtin "One Step Simplification" (formula "44"))
                                    (rule "greater_literals" (formula "44") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "44"))
                                    (rule "andLeft" (formula "44"))
                                    (rule "notLeft" (formula "44"))
                                    (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "44") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "43") (inst "i=i"))
                                    (rule "sub_literals" (formula "43") (term "2,1,0,1,1"))
                                    (builtin "One Step Simplification" (formula "43"))
                                    (rule "greater_literals" (formula "43") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "43"))
                                    (rule "andLeft" (formula "43"))
                                    (rule "notLeft" (formula "43"))
                                    (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "43") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "42") (inst "i=i"))
                                    (rule "greater_literals" (formula "42") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "42"))
                                    (rule "sub_literals" (formula "42") (term "2,1,0,1"))
                                    (builtin "One Step Simplification" (formula "42"))
                                    (rule "andLeft" (formula "42"))
                                    (rule "notLeft" (formula "42"))
                                    (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "42") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "41") (inst "i=i"))
                                    (rule "sub_literals" (formula "41") (term "2,1,0,1,1"))
                                    (builtin "One Step Simplification" (formula "41"))
                                    (rule "greater_literals" (formula "41") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "41"))
                                    (rule "andLeft" (formula "41"))
                                    (rule "notLeft" (formula "41"))
                                    (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "41") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "40") (inst "i=i"))
                                    (rule "greater_literals" (formula "40") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "40"))
                                    (rule "sub_literals" (formula "40") (term "2,1,0,1"))
                                    (builtin "One Step Simplification" (formula "40"))
                                    (rule "andLeft" (formula "40"))
                                    (rule "notLeft" (formula "40"))
                                    (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "40") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "39") (inst "i=i"))
                                    (rule "greater_literals" (formula "39") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "sub_literals" (formula "39") (term "2,1,0,1"))
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "notLeft" (formula "39"))
                                    (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0"))
                                    (rule "pullOutSelect" (formula "56") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_24"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "73")))
                                    (rule "replaceKnownSelect_taclet001000000010_7" (formula "1") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet001000000010_8" (formula "1") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "19"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "55") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_24"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")))
                                    (rule "replaceKnownSelect_taclet001000000010_9" (formula "1") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet001000000010_10" (formula "1") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "19"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "56") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "54") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_24"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "71")))
                                    (rule "replaceKnownSelect_taclet001000000010_11" (formula "1") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet001000000010_12" (formula "1") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "19"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "55") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "53") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_24"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "70")))
                                    (rule "replaceKnownSelect_taclet001000000010_13" (formula "1") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet001000000010_14" (formula "1") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "19"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "52") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_24"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "69")))
                                    (rule "replaceKnownSelect_taclet001000000010_15" (formula "1") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet001000000010_16" (formula "1") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "19"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "53") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_24"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")))
                                    (rule "replaceKnownSelect_taclet001000000010_17" (formula "1") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet001000000010_18" (formula "1") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "19"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "52") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "44") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_24"))
                                    (rule "applyEq" (formula "45") (term "0,1,1,1,0,0") (ifseqformula "44"))
                                    (rule "applyEq" (formula "51") (term "0") (ifseqformula "44"))
                                    (rule "simplifySelectOfAnonEQ" (formula "44") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "67")))
                                    (rule "replaceKnownSelect_taclet001000000010_19" (formula "44") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet001000000010_20" (formula "44") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,0,0") (ifseqformula "18"))
                                    (rule "replace_known_left" (formula "44") (term "0,0,0,0") (ifseqformula "7"))
                                    (builtin "One Step Simplification" (formula "44"))
                                    (rule "applyEqReverse" (formula "51") (term "0") (ifseqformula "44"))
                                    (rule "applyEqReverse" (formula "45") (term "0,1,1,1,0,0") (ifseqformula "44"))
                                    (rule "applyEqReverse" (formula "45") (term "1,0,0,1,0") (ifseqformula "44"))
                                    (rule "hideAuxiliaryEq" (formula "44"))
                                    (rule "pullOutSelect" (formula "43") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_24"))
                                    (rule "applyEq" (formula "50") (term "0") (ifseqformula "43"))
                                    (rule "applyEq" (formula "44") (term "0,1,1,1,0,0") (ifseqformula "43"))
                                    (rule "simplifySelectOfAnonEQ" (formula "43") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "66")))
                                    (rule "replaceKnownSelect_taclet001000000010_21" (formula "43") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet001000000010_22" (formula "43") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,0,0") (ifseqformula "18"))
                                    (rule "replace_known_left" (formula "43") (term "0,0,0,0") (ifseqformula "7"))
                                    (builtin "One Step Simplification" (formula "43"))
                                    (rule "applyEqReverse" (formula "44") (term "0,1,1,1,0,0") (ifseqformula "43"))
                                    (rule "applyEqReverse" (formula "50") (term "0") (ifseqformula "43"))
                                    (rule "applyEqReverse" (formula "44") (term "1,0,0,1,0") (ifseqformula "43"))
                                    (rule "hideAuxiliaryEq" (formula "43"))
                                    (rule "pullOutSelect" (formula "42") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_24"))
                                    (rule "applyEq" (formula "43") (term "0,1,1,1,0,0") (ifseqformula "42"))
                                    (rule "applyEq" (formula "49") (term "0") (ifseqformula "42"))
                                    (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "65")))
                                    (rule "replaceKnownSelect_taclet001000000010_23" (formula "42") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet001000000010_24" (formula "42") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,0,0") (ifseqformula "18"))
                                    (rule "replace_known_left" (formula "42") (term "0,0,0,0") (ifseqformula "7"))
                                    (builtin "One Step Simplification" (formula "42"))
                                    (rule "applyEqReverse" (formula "49") (term "0") (ifseqformula "42"))
                                    (rule "applyEqReverse" (formula "43") (term "0,1,1,1,0,0") (ifseqformula "42"))
                                    (rule "applyEqReverse" (formula "43") (term "1,0,0,1,0") (ifseqformula "42"))
                                    (rule "hideAuxiliaryEq" (formula "42"))
                                    (rule "pullOutSelect" (formula "41") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_24"))
                                    (rule "applyEq" (formula "48") (term "0") (ifseqformula "41"))
                                    (rule "applyEq" (formula "42") (term "0,1,1,1,0,0") (ifseqformula "41"))
                                    (rule "simplifySelectOfAnonEQ" (formula "41") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "64")))
                                    (rule "replaceKnownSelect_taclet001000000010_25" (formula "41") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet001000000010_26" (formula "41") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "0,0,0") (ifseqformula "18"))
                                    (rule "replace_known_left" (formula "41") (term "0,0,0,0") (ifseqformula "7"))
                                    (builtin "One Step Simplification" (formula "41"))
                                    (rule "applyEqReverse" (formula "42") (term "1,0,0,1,0") (ifseqformula "41"))
                                    (rule "applyEqReverse" (formula "42") (term "0,1,1,1,0,0") (ifseqformula "41"))
                                    (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "41"))
                                    (rule "hideAuxiliaryEq" (formula "41"))
                                    (rule "pullOutSelect" (formula "40") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_24"))
                                    (rule "applyEq" (formula "41") (term "0,1,1,1,0,0") (ifseqformula "40"))
                                    (rule "applyEq" (formula "47") (term "0") (ifseqformula "40"))
                                    (rule "simplifySelectOfAnonEQ" (formula "40") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "63")))
                                    (rule "replaceKnownSelect_taclet001000000010_27" (formula "40") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet001000000010_28" (formula "40") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,0,0") (ifseqformula "18"))
                                    (rule "replace_known_left" (formula "40") (term "0,0,0,0") (ifseqformula "7"))
                                    (builtin "One Step Simplification" (formula "40"))
                                    (rule "applyEqReverse" (formula "41") (term "1,0,0,1,0") (ifseqformula "40"))
                                    (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "40"))
                                    (rule "applyEqReverse" (formula "41") (term "0,1,1,1,0,0") (ifseqformula "40"))
                                    (rule "hideAuxiliaryEq" (formula "40"))
                                    (rule "pullOutSelect" (formula "39") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_24"))
                                    (rule "applyEq" (formula "46") (term "0") (ifseqformula "39"))
                                    (rule "applyEq" (formula "40") (term "0,1,1,1,0,0") (ifseqformula "39"))
                                    (rule "simplifySelectOfAnonEQ" (formula "39") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "62")))
                                    (rule "replaceKnownSelect_taclet001000000010_29" (formula "39") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet001000000010_30" (formula "39") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "0,0,0") (ifseqformula "18"))
                                    (rule "replace_known_left" (formula "39") (term "0,0,0,0") (ifseqformula "7"))
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "applyEqReverse" (formula "40") (term "1,0,0,1,0") (ifseqformula "39"))
                                    (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "39"))
                                    (rule "applyEqReverse" (formula "40") (term "0,1,1,1,0,0") (ifseqformula "39"))
                                    (rule "hideAuxiliaryEq" (formula "39"))
                                    (rule "commute_or_2" (formula "38") (term "0"))
                                    (rule "ifthenelse_split" (formula "37") (term "1"))
                                    (branch "result_3.length ≥ 1 TRUE"
                                       (rule "replace_known_left" (formula "39") (term "0,1,1,0") (ifseqformula "37"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "commute_or_2" (formula "22") (term "0"))
                                       (rule "commute_or_2" (formula "32") (term "0"))
                                       (rule "lenNonNegative" (formula "38") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "38"))
                                       (rule "ifthenelse_split" (formula "21") (term "1"))
                                       (branch "result_0.length ≥ 1 TRUE"
                                          (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "21"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_left" (formula "23") (term "0,1,1,0") (ifseqformula "21"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "replace_known_left" (formula "33") (term "0,1,1,0") (ifseqformula "21"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "replace_known_left" (formula "32") (term "0,1") (ifseqformula "21"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "lenNonNegative" (formula "22") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "22"))
                                          (rule "nnf_imp2or" (formula "30") (term "0"))
                                          (rule "nnf_imp2or" (formula "29") (term "0"))
                                          (rule "nnf_imp2or" (formula "28") (term "0"))
                                          (rule "nnf_imp2or" (formula "27") (term "0"))
                                          (rule "commute_or_2" (formula "16") (term "0"))
                                          (rule "nnf_imp2or" (formula "26") (term "0"))
                                          (rule "nnf_imp2or" (formula "25") (term "0"))
                                          (rule "commute_or_2" (formula "15") (term "0"))
                                          (rule "commute_or_2" (formula "14") (term "0"))
                                          (rule "commute_or_2" (formula "13") (term "0"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch " verif.selectvoting.system.core.Tag.BALLOTS.<created> = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "62") (term "1,1") (ifseqformula "3"))
                                             (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "61") (term "1,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "61"))
                                             (rule "closeTrue" (formula "61"))
                                          )
                                          (branch " verif.selectvoting.system.core.Tag.BALLOTS.<created> = TRUE FALSE"
                                             (rule "referencedObjectIsCreatedRight" (formula "49") (ifseqformula "66"))
                                             (rule "close" (formula "49") (ifseqformula "31"))
                                          )
                                       )
                                       (branch "result_0.length ≥ 1 FALSE"
                                          (rule "replace_known_right" (formula "32") (term "0,1,1,0") (ifseqformula "47"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "47"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "31") (term "0,1") (ifseqformula "47"))
                                          (builtin "One Step Simplification" (formula "31"))
                                          (rule "replace_known_right" (formula "22") (term "0,1,1,0") (ifseqformula "47"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "inEqSimp_geqRight" (formula "47"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_homoInEq1" (formula "5"))
                                          (rule "mul_literals" (formula "5") (term "1,0"))
                                          (rule "add_zero_right" (formula "5") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                          (rule "mul_literals" (formula "5") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "4"))
                                          (rule "qeq_literals" (formula "5") (term "0"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "closeFalse" (formula "5"))
                                       )
                                    )
                                    (branch "result_3.length ≥ 1 FALSE"
                                       (rule "replace_known_right" (formula "38") (term "0,1,1,0") (ifseqformula "45"))
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "inEqSimp_geqRight" (formula "45"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "commute_or_2" (formula "23") (term "0"))
                                       (rule "commute_or_2" (formula "33") (term "0"))
                                       (rule "lenNonNegative" (formula "38") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "38"))
                                       (rule "ifthenelse_split" (formula "22") (term "1"))
                                       (branch "result_0.length ≥ 1 TRUE"
                                          (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "22"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_left" (formula "24") (term "0,1,1,0") (ifseqformula "22"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "replace_known_left" (formula "34") (term "0,1,1,0") (ifseqformula "22"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "replace_known_left" (formula "33") (term "0,1") (ifseqformula "22"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "lenNonNegative" (formula "23") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "23"))
                                          (rule "nnf_imp2or" (formula "31") (term "0"))
                                          (rule "nnf_imp2or" (formula "30") (term "0"))
                                          (rule "nnf_imp2or" (formula "29") (term "0"))
                                          (rule "nnf_imp2or" (formula "28") (term "0"))
                                          (rule "commute_or_2" (formula "17") (term "0"))
                                          (rule "nnf_imp2or" (formula "27") (term "0"))
                                          (rule "nnf_imp2or" (formula "26") (term "0"))
                                          (rule "commute_or_2" (formula "16") (term "0"))
                                          (rule "commute_or_2" (formula "15") (term "0"))
                                          (rule "commute_or_2" (formula "14") (term "0"))
                                          (rule "ifthenelse_split" (formula "3") (term "0"))
                                          (branch " verif.selectvoting.system.core.Tag.BALLOTS.<created> = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "62") (term "1,1") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "61") (term "1,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "61"))
                                             (rule "closeTrue" (formula "61"))
                                          )
                                          (branch " verif.selectvoting.system.core.Tag.BALLOTS.<created> = TRUE FALSE"
                                             (rule "referencedObjectIsCreatedRight" (formula "49") (ifseqformula "66"))
                                             (rule "close" (formula "49") (ifseqformula "32"))
                                          )
                                       )
                                       (branch "result_0.length ≥ 1 FALSE"
                                          (rule "replace_known_right" (formula "32") (term "0,1") (ifseqformula "47"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "replace_known_right" (formula "33") (term "0,1,1,0") (ifseqformula "47"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "47"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_right" (formula "23") (term "0,1,1,0") (ifseqformula "47"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_geqRight" (formula "47"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_homoInEq1" (formula "6"))
                                          (rule "mul_literals" (formula "6") (term "1,0"))
                                          (rule "add_zero_right" (formula "6") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                          (rule "mul_literals" (formula "6") (term "1"))
                                          (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "5") (term "0"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "closeFalse" (formula "5"))
                                       )
                                    )
                                 )
                                 (branch "CUT: result_3.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "18") (ifseqformula "8"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "notLeft" (formula "20"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "notLeft" (formula "20"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "notLeft" (formula "20"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "notLeft" (formula "20"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "notLeft" (formula "18"))
                                    (rule "notLeft" (formula "18"))
                                    (rule "nonNull" (formula "23") (inst "i=i"))
                                    (rule "sub_literals" (formula "23") (term "2,1,0,1,1"))
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "greater_literals" (formula "23") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "notLeft" (formula "23"))
                                    (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "22") (inst "i=i"))
                                    (rule "greater_literals" (formula "22") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "sub_literals" (formula "22") (term "2,1,0,1"))
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "andLeft" (formula "22"))
                                    (rule "notLeft" (formula "22"))
                                    (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "21") (inst "i=i"))
                                    (rule "greater_literals" (formula "21") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "sub_literals" (formula "21") (term "2,1,0,1"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "andLeft" (formula "21"))
                                    (rule "notLeft" (formula "21"))
                                    (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "20") (inst "i=i"))
                                    (rule "sub_literals" (formula "20") (term "2,1,0,1,1"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "greater_literals" (formula "20") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "andLeft" (formula "20"))
                                    (rule "notLeft" (formula "20"))
                                    (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "19") (inst "i=i"))
                                    (rule "greater_literals" (formula "19") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "sub_literals" (formula "19") (term "2,1,0,1"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "andLeft" (formula "19"))
                                    (rule "notLeft" (formula "19"))
                                    (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "18") (inst "i=i"))
                                    (rule "greater_literals" (formula "18") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "sub_literals" (formula "18") (term "2,1,0,1"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "notLeft" (formula "18"))
                                    (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                    (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_21"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")) (ifInst ""  (formula "8")))
                                    (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_21"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")) (ifInst ""  (formula "8")))
                                    (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_21"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")) (ifInst ""  (formula "8")))
                                    (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_21"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")) (ifInst ""  (formula "8")))
                                    (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_21"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")) (ifInst ""  (formula "8")))
                                    (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_21"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")) (ifInst ""  (formula "8")))
                                    (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "23") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_21"))
                                    (rule "applyEq" (formula "24") (term "0,1,1,1,0,0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "41") (term "0") (ifseqformula "23"))
                                    (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "13"))
                                    (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "52")) (ifInst ""  (formula "7")))
                                    (rule "applyEqReverse" (formula "24") (term "1,0,0,1,0") (ifseqformula "23"))
                                    (rule "applyEqReverse" (formula "24") (term "0,1,1,1,0,0") (ifseqformula "23"))
                                    (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "23"))
                                    (rule "hideAuxiliaryEq" (formula "23"))
                                    (rule "pullOutSelect" (formula "22") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_21"))
                                    (rule "applyEq" (formula "23") (term "0,1,1,1,0,0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "40") (term "0") (ifseqformula "22"))
                                    (rule "simplifySelectOfAnonEQ" (formula "22") (ifseqformula "13"))
                                    (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "52")) (ifInst ""  (formula "7")))
                                    (rule "applyEqReverse" (formula "23") (term "0,1,1,1,0,0") (ifseqformula "22"))
                                    (rule "applyEqReverse" (formula "23") (term "1,0,0,1,0") (ifseqformula "22"))
                                    (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "22"))
                                    (rule "hideAuxiliaryEq" (formula "22"))
                                    (rule "pullOutSelect" (formula "21") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_21"))
                                    (rule "applyEq" (formula "39") (term "0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "21"))
                                    (rule "simplifySelectOfAnonEQ" (formula "21") (ifseqformula "13"))
                                    (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "52")) (ifInst ""  (formula "7")))
                                    (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "21"))
                                    (rule "applyEqReverse" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "21"))
                                    (rule "applyEqReverse" (formula "22") (term "1,0,0,1,0") (ifseqformula "21"))
                                    (rule "hideAuxiliaryEq" (formula "21"))
                                    (rule "pullOutSelect" (formula "20") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_21"))
                                    (rule "applyEq" (formula "38") (term "0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "21") (term "0,1,1,1,0,0") (ifseqformula "20"))
                                    (rule "simplifySelectOfAnonEQ" (formula "20") (ifseqformula "13"))
                                    (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "52")) (ifInst ""  (formula "7")))
                                    (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "20"))
                                    (rule "applyEqReverse" (formula "21") (term "1,0,0,1,0") (ifseqformula "20"))
                                    (rule "applyEqReverse" (formula "21") (term "0,1,1,1,0,0") (ifseqformula "20"))
                                    (rule "hideAuxiliaryEq" (formula "20"))
                                    (rule "pullOutSelect" (formula "19") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_21"))
                                    (rule "applyEq" (formula "37") (term "0") (ifseqformula "19"))
                                    (rule "applyEq" (formula "20") (term "0,1,1,1,0,0") (ifseqformula "19"))
                                    (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "13"))
                                    (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "52")) (ifInst ""  (formula "7")))
                                    (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "19"))
                                    (rule "applyEqReverse" (formula "20") (term "0,1,1,1,0,0") (ifseqformula "19"))
                                    (rule "applyEqReverse" (formula "20") (term "1,0,0,1,0") (ifseqformula "19"))
                                    (rule "hideAuxiliaryEq" (formula "19"))
                                    (rule "pullOutSelect" (formula "18") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_21"))
                                    (rule "applyEq" (formula "36") (term "0") (ifseqformula "18"))
                                    (rule "applyEq" (formula "19") (term "0,1,1,1,0,0") (ifseqformula "18"))
                                    (rule "simplifySelectOfAnonEQ" (formula "18") (ifseqformula "13"))
                                    (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "52")) (ifInst ""  (formula "7")))
                                    (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "18"))
                                    (rule "applyEqReverse" (formula "19") (term "0,1,1,1,0,0") (ifseqformula "18"))
                                    (rule "applyEqReverse" (formula "19") (term "1,0,0,1,0") (ifseqformula "18"))
                                    (rule "hideAuxiliaryEq" (formula "18"))
                                    (rule "nnf_imp2or" (formula "23") (term "0"))
                                    (rule "nnf_imp2or" (formula "22") (term "0"))
                                    (rule "nnf_imp2or" (formula "21") (term "0"))
                                    (rule "nnf_imp2or" (formula "20") (term "0"))
                                    (rule "nnf_imp2or" (formula "19") (term "0"))
                                    (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "34") (ifseqformula "8"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "notLeft" (formula "35"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "notLeft" (formula "35"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "notLeft" (formula "36"))
                                    (rule "notLeft" (formula "35"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "notLeft" (formula "34"))
                                    (rule "notLeft" (formula "34"))
                                    (rule "nonNull" (formula "39") (inst "i=i"))
                                    (rule "greater_literals" (formula "39") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "sub_literals" (formula "39") (term "2,1,0,1"))
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "notLeft" (formula "39"))
                                    (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "38") (inst "i=i"))
                                    (rule "greater_literals" (formula "38") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "sub_literals" (formula "38") (term "2,1,0,1"))
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "andLeft" (formula "38"))
                                    (rule "notLeft" (formula "38"))
                                    (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "38") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "37") (inst "i=i"))
                                    (rule "sub_literals" (formula "37") (term "2,1,0,1,1"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "greater_literals" (formula "37") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "notLeft" (formula "37"))
                                    (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "36") (inst "i=i"))
                                    (rule "greater_literals" (formula "36") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "sub_literals" (formula "36") (term "2,1,0,1"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "andLeft" (formula "36"))
                                    (rule "notLeft" (formula "36"))
                                    (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "35") (inst "i=i"))
                                    (rule "greater_literals" (formula "35") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "sub_literals" (formula "35") (term "2,1,0,1"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "andLeft" (formula "35"))
                                    (rule "notLeft" (formula "35"))
                                    (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "35") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "34") (inst "i=i"))
                                    (rule "greater_literals" (formula "34") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "sub_literals" (formula "34") (term "2,1,0,1"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "notLeft" (formula "34"))
                                    (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "34") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0"))
                                    (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_22"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "69")))
                                    (rule "replaceKnownSelect_taclet101000000010_7" (formula "1") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet101000000010_8" (formula "1") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "14"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "52") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "50") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_22"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")))
                                    (rule "replaceKnownSelect_taclet101000000010_9" (formula "1") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet101000000010_10" (formula "1") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "14"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "51") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "49") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_22"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")))
                                    (rule "replaceKnownSelect_taclet101000000010_11" (formula "1") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet101000000010_12" (formula "1") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "14"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "50") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_22"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")))
                                    (rule "replaceKnownSelect_taclet101000000010_13" (formula "1") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet101000000010_14" (formula "1") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "14"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "49") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_22"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")))
                                    (rule "replaceKnownSelect_taclet101000000010_15" (formula "1") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet101000000010_16" (formula "1") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "14"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_22"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")))
                                    (rule "replaceKnownSelect_taclet101000000010_17" (formula "1") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet101000000010_18" (formula "1") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "14"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "39") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_22"))
                                    (rule "applyEq" (formula "40") (term "0,1,1,1,0,0") (ifseqformula "39"))
                                    (rule "applyEq" (formula "46") (term "0") (ifseqformula "39"))
                                    (rule "simplifySelectOfAnonEQ" (formula "39") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "63")))
                                    (rule "replaceKnownSelect_taclet101000000010_19" (formula "39") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet101000000010_20" (formula "39") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "0,0,0") (ifseqformula "13"))
                                    (rule "replace_known_left" (formula "39") (term "0,0,0,0") (ifseqformula "7"))
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "39"))
                                    (rule "applyEqReverse" (formula "40") (term "0,1,1,1,0,0") (ifseqformula "39"))
                                    (rule "applyEqReverse" (formula "40") (term "1,0,0,1,0") (ifseqformula "39"))
                                    (rule "hideAuxiliaryEq" (formula "39"))
                                    (rule "pullOutSelect" (formula "38") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_22"))
                                    (rule "applyEq" (formula "45") (term "0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "39") (term "0,1,1,1,0,0") (ifseqformula "38"))
                                    (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "62")))
                                    (rule "replaceKnownSelect_taclet101000000010_21" (formula "38") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet101000000010_22" (formula "38") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "0,0,0") (ifseqformula "13"))
                                    (rule "replace_known_left" (formula "38") (term "0,0,0,0") (ifseqformula "7"))
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "applyEqReverse" (formula "39") (term "0,1,1,1,0,0") (ifseqformula "38"))
                                    (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "38"))
                                    (rule "applyEqReverse" (formula "39") (term "1,0,0,1,0") (ifseqformula "38"))
                                    (rule "hideAuxiliaryEq" (formula "38"))
                                    (rule "pullOutSelect" (formula "37") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_22"))
                                    (rule "applyEq" (formula "44") (term "0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "38") (term "0,1,1,1,0,0") (ifseqformula "37"))
                                    (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "61")))
                                    (rule "replaceKnownSelect_taclet101000000010_23" (formula "37") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet101000000010_24" (formula "37") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,0,0") (ifseqformula "13"))
                                    (rule "replace_known_left" (formula "37") (term "0,0,0,0") (ifseqformula "7"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "applyEqReverse" (formula "38") (term "1,0,0,1,0") (ifseqformula "37"))
                                    (rule "applyEqReverse" (formula "38") (term "0,1,1,1,0,0") (ifseqformula "37"))
                                    (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "37"))
                                    (rule "hideAuxiliaryEq" (formula "37"))
                                    (rule "pullOutSelect" (formula "36") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_22"))
                                    (rule "applyEq" (formula "43") (term "0") (ifseqformula "36"))
                                    (rule "applyEq" (formula "37") (term "0,1,1,1,0,0") (ifseqformula "36"))
                                    (rule "simplifySelectOfAnonEQ" (formula "36") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "60")))
                                    (rule "replaceKnownSelect_taclet101000000010_25" (formula "36") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet101000000010_26" (formula "36") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "0,0,0") (ifseqformula "13"))
                                    (rule "replace_known_left" (formula "36") (term "0,0,0,0") (ifseqformula "7"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "applyEqReverse" (formula "37") (term "1,0,0,1,0") (ifseqformula "36"))
                                    (rule "applyEqReverse" (formula "37") (term "0,1,1,1,0,0") (ifseqformula "36"))
                                    (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "36"))
                                    (rule "hideAuxiliaryEq" (formula "36"))
                                    (rule "pullOutSelect" (formula "35") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_22"))
                                    (rule "applyEq" (formula "42") (term "0") (ifseqformula "35"))
                                    (rule "applyEq" (formula "36") (term "0,1,1,1,0,0") (ifseqformula "35"))
                                    (rule "simplifySelectOfAnonEQ" (formula "35") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "59")))
                                    (rule "replaceKnownSelect_taclet101000000010_27" (formula "35") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet101000000010_28" (formula "35") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,0") (ifseqformula "13"))
                                    (rule "replace_known_left" (formula "35") (term "0,0,0,0") (ifseqformula "7"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "35"))
                                    (rule "applyEqReverse" (formula "36") (term "0,1,1,1,0,0") (ifseqformula "35"))
                                    (rule "applyEqReverse" (formula "36") (term "1,0,0,1,0") (ifseqformula "35"))
                                    (rule "hideAuxiliaryEq" (formula "35"))
                                    (rule "pullOutSelect" (formula "34") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_22"))
                                    (rule "applyEq" (formula "41") (term "0") (ifseqformula "34"))
                                    (rule "applyEq" (formula "35") (term "0,1,1,1,0,0") (ifseqformula "34"))
                                    (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "58")))
                                    (rule "replaceKnownSelect_taclet101000000010_29" (formula "34") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet101000000010_30" (formula "34") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "0,0,0") (ifseqformula "13"))
                                    (rule "replace_known_left" (formula "34") (term "0,0,0,0") (ifseqformula "7"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "applyEqReverse" (formula "35") (term "1,0,0,1,0") (ifseqformula "34"))
                                    (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "34"))
                                    (rule "applyEqReverse" (formula "35") (term "0,1,1,1,0,0") (ifseqformula "34"))
                                    (rule "hideAuxiliaryEq" (formula "34"))
                                    (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "11") (ifseqformula "8"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "notLeft" (formula "13"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "notLeft" (formula "13"))
                                    (rule "notLeft" (formula "12"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "notLeft" (formula "12"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "notLeft" (formula "12"))
                                    (rule "notLeft" (formula "11"))
                                    (rule "nonNull" (formula "16") (inst "i=i"))
                                    (rule "greater_literals" (formula "16") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "50")))
                                    (rule "sub_literals" (formula "16") (term "2,1,0"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "narrowSelectArrayType" (formula "16") (term "0,0,1,0") (ifseqformula "29") (ifseqformula "50"))
                                    (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "15") (inst "i=i"))
                                    (rule "greater_literals" (formula "15") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "49")))
                                    (rule "sub_literals" (formula "15") (term "2,1,0"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "narrowSelectArrayType" (formula "15") (term "0,0,1,0") (ifseqformula "29") (ifseqformula "49"))
                                    (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "14") (inst "i=i"))
                                    (rule "sub_literals" (formula "14") (term "2,1,0,1,1"))
                                    (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "48")))
                                    (rule "greater_literals" (formula "14") (term "0"))
                                    (builtin "One Step Simplification" (formula "14"))
                                    (rule "narrowSelectArrayType" (formula "14") (term "0,0,1,0") (ifseqformula "29") (ifseqformula "48"))
                                    (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "13") (inst "i=i"))
                                    (rule "greater_literals" (formula "13") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "47")))
                                    (rule "sub_literals" (formula "13") (term "2,1,0"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "narrowSelectArrayType" (formula "13") (term "0,0,1,0") (ifseqformula "29") (ifseqformula "47"))
                                    (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "12") (inst "i=i"))
                                    (rule "greater_literals" (formula "12") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "46")))
                                    (rule "sub_literals" (formula "12") (term "2,1,0"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "29") (ifseqformula "46"))
                                    (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "11") (inst "i=i"))
                                    (rule "greater_literals" (formula "11") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "45")))
                                    (rule "sub_literals" (formula "11") (term "2,1,0"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "29") (ifseqformula "45"))
                                    (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                    (rule "nnf_imp2or" (formula "23") (term "0"))
                                    (rule "nnf_notAnd" (formula "28") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "28") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                    (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "27") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                    (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                                    (rule "mul_literals" (formula "26") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "26") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                    (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                                    (rule "mul_literals" (formula "25") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "25") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                    (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "24") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "24") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                                    (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                                    (rule "commute_or_2" (formula "38") (term "0"))
                                    (rule "ifthenelse_split" (formula "37") (term "1"))
                                    (branch "result_3.length ≥ 1 TRUE"
                                       (rule "replace_known_left" (formula "39") (term "0,1,1,0") (ifseqformula "37"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "commute_or_2" (formula "22") (term "0"))
                                       (rule "commute_or_2" (formula "32") (term "0"))
                                       (rule "lenNonNegative" (formula "38") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "38"))
                                       (rule "ifthenelse_split" (formula "21") (term "1"))
                                       (branch "result_0.length ≥ 1 TRUE"
                                          (rule "replace_known_left" (formula "23") (term "0,1,1,0") (ifseqformula "21"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "21"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_left" (formula "33") (term "0,1,1,0") (ifseqformula "21"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "replace_known_left" (formula "32") (term "0,1") (ifseqformula "21"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "lenNonNegative" (formula "22") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "22"))
                                          (rule "nnf_imp2or" (formula "48") (term "0"))
                                          (rule "nnf_imp2or" (formula "47") (term "0"))
                                          (rule "nnf_imp2or" (formula "46") (term "0"))
                                          (rule "nnf_imp2or" (formula "45") (term "0"))
                                          (rule "nnf_imp2or" (formula "44") (term "0"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch " verif.selectvoting.system.core.Tag.BALLOTS.<created> = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "63") (term "1,1") (ifseqformula "3"))
                                             (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "62") (term "1,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "62"))
                                             (rule "closeTrue" (formula "62"))
                                          )
                                          (branch " verif.selectvoting.system.core.Tag.BALLOTS.<created> = TRUE FALSE"
                                             (rule "referencedObjectIsCreatedRight" (formula "49") (ifseqformula "67"))
                                             (rule "close" (formula "49") (ifseqformula "31"))
                                          )
                                       )
                                       (branch "result_0.length ≥ 1 FALSE"
                                          (rule "replace_known_right" (formula "22") (term "0,1,1,0") (ifseqformula "47"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "47"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "32") (term "0,1,1,0") (ifseqformula "47"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "replace_known_right" (formula "31") (term "0,1") (ifseqformula "47"))
                                          (builtin "One Step Simplification" (formula "31"))
                                          (rule "inEqSimp_geqRight" (formula "47"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_homoInEq1" (formula "5"))
                                          (rule "times_zero_2" (formula "5") (term "1,0"))
                                          (rule "add_zero_right" (formula "5") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                          (rule "mul_literals" (formula "5") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "4"))
                                          (rule "qeq_literals" (formula "5") (term "0"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "closeFalse" (formula "5"))
                                       )
                                    )
                                    (branch "result_3.length ≥ 1 FALSE"
                                       (rule "replace_known_right" (formula "38") (term "0,1,1,0") (ifseqformula "45"))
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "inEqSimp_geqRight" (formula "45"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "commute_or_2" (formula "23") (term "0"))
                                       (rule "commute_or_2" (formula "33") (term "0"))
                                       (rule "lenNonNegative" (formula "38") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "38"))
                                       (rule "ifthenelse_split" (formula "22") (term "1"))
                                       (branch "result_0.length ≥ 1 TRUE"
                                          (rule "replace_known_left" (formula "24") (term "0,1,1,0") (ifseqformula "22"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "replace_known_left" (formula "34") (term "0,1,1,0") (ifseqformula "22"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "replace_known_left" (formula "33") (term "0,1") (ifseqformula "22"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "22"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "lenNonNegative" (formula "23") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "23"))
                                          (rule "nnf_imp2or" (formula "48") (term "0"))
                                          (rule "nnf_imp2or" (formula "47") (term "0"))
                                          (rule "nnf_imp2or" (formula "46") (term "0"))
                                          (rule "nnf_imp2or" (formula "45") (term "0"))
                                          (rule "nnf_imp2or" (formula "44") (term "0"))
                                          (rule "ifthenelse_split" (formula "3") (term "0"))
                                          (branch " verif.selectvoting.system.core.Tag.BALLOTS.<created> = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "63") (term "1,1") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "62") (term "1,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "62"))
                                             (rule "closeTrue" (formula "62"))
                                          )
                                          (branch " verif.selectvoting.system.core.Tag.BALLOTS.<created> = TRUE FALSE"
                                             (rule "referencedObjectIsCreatedRight" (formula "49") (ifseqformula "67"))
                                             (rule "close" (formula "49") (ifseqformula "32"))
                                          )
                                       )
                                       (branch "result_0.length ≥ 1 FALSE"
                                          (rule "replace_known_right" (formula "33") (term "0,1,1,0") (ifseqformula "47"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "47"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_right" (formula "32") (term "0,1") (ifseqformula "47"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "replace_known_right" (formula "23") (term "0,1,1,0") (ifseqformula "47"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_geqRight" (formula "47"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_homoInEq1" (formula "6"))
                                          (rule "times_zero_2" (formula "6") (term "1,0"))
                                          (rule "add_zero_right" (formula "6") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                          (rule "mul_literals" (formula "6") (term "1"))
                                          (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "6"))
                                          (rule "qeq_literals" (formula "5") (term "0"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "closeFalse" (formula "5"))
                                       )
                                    )
                                 )
                              )
                              (branch "CUT: result_0.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "cut_direct" (formula "26") (term "0,0"))
                                 (branch "CUT: result_3.<created> = TRUE TRUE"
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "true_left" (formula "27"))
                                    (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "11") (ifseqformula "8"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "notLeft" (formula "12"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "notLeft" (formula "12"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "notLeft" (formula "12"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "notLeft" (formula "13"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "notLeft" (formula "12"))
                                    (rule "notLeft" (formula "11"))
                                    (rule "nonNull" (formula "16") (inst "i=i"))
                                    (rule "greater_literals" (formula "16") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "sub_literals" (formula "16") (term "2,1,0,1"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "notLeft" (formula "16"))
                                    (rule "narrowSelectArrayType" (formula "16") (term "0,0,1,0") (ifseqformula "24") (ifseqformula "35"))
                                    (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "15") (inst "i=i"))
                                    (rule "greater_literals" (formula "15") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "sub_literals" (formula "15") (term "2,1,0,1"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "andLeft" (formula "15"))
                                    (rule "notLeft" (formula "15"))
                                    (rule "narrowSelectArrayType" (formula "15") (term "0,0,1,0") (ifseqformula "24") (ifseqformula "35"))
                                    (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "14") (inst "i=i"))
                                    (rule "sub_literals" (formula "14") (term "2,1,0,1,1"))
                                    (builtin "One Step Simplification" (formula "14"))
                                    (rule "greater_literals" (formula "14") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "14"))
                                    (rule "andLeft" (formula "14"))
                                    (rule "notLeft" (formula "14"))
                                    (rule "narrowSelectArrayType" (formula "14") (term "0,0,1,0") (ifseqformula "24") (ifseqformula "35"))
                                    (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "13") (inst "i=i"))
                                    (rule "greater_literals" (formula "13") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "sub_literals" (formula "13") (term "2,1,0,1"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "notLeft" (formula "13"))
                                    (rule "narrowSelectArrayType" (formula "13") (term "0,0,1,0") (ifseqformula "24") (ifseqformula "35"))
                                    (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "12") (inst "i=i"))
                                    (rule "greater_literals" (formula "12") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "sub_literals" (formula "12") (term "2,1,0,1"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "andLeft" (formula "12"))
                                    (rule "notLeft" (formula "12"))
                                    (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "24") (ifseqformula "35"))
                                    (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "11") (inst "i=i"))
                                    (rule "sub_literals" (formula "11") (term "2,1,0,1,1"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "greater_literals" (formula "11") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "notLeft" (formula "11"))
                                    (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "24") (ifseqformula "35"))
                                    (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                    (rule "nnf_imp2or" (formula "16") (term "0"))
                                    (rule "nnf_imp2or" (formula "15") (term "0"))
                                    (rule "nnf_imp2or" (formula "14") (term "0"))
                                    (rule "nnf_imp2or" (formula "13") (term "0"))
                                    (rule "nnf_imp2or" (formula "12") (term "0"))
                                    (rule "nnf_imp2or" (formula "11") (term "0"))
                                    (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                                    (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                    (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                    (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                    (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                    (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                    (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "11") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                    (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                                    (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "34") (ifseqformula "8"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "notLeft" (formula "35"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "notLeft" (formula "35"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "notLeft" (formula "35"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "notLeft" (formula "35"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "notLeft" (formula "35"))
                                    (rule "notLeft" (formula "34"))
                                    (rule "nonNull" (formula "39") (inst "i=i"))
                                    (rule "greater_literals" (formula "39") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "sub_literals" (formula "39") (term "2,1,0,1"))
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "notLeft" (formula "39"))
                                    (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "38") (inst "i=i"))
                                    (rule "greater_literals" (formula "38") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "sub_literals" (formula "38") (term "2,1,0,1"))
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "andLeft" (formula "38"))
                                    (rule "notLeft" (formula "38"))
                                    (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "38") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "37") (inst "i=i"))
                                    (rule "sub_literals" (formula "37") (term "2,1,0,1,1"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "greater_literals" (formula "37") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "notLeft" (formula "37"))
                                    (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "36") (inst "i=i"))
                                    (rule "sub_literals" (formula "36") (term "2,1,0,1,1"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "greater_literals" (formula "36") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "andLeft" (formula "36"))
                                    (rule "notLeft" (formula "36"))
                                    (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "35") (inst "i=i"))
                                    (rule "sub_literals" (formula "35") (term "2,1,0,1,1"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "greater_literals" (formula "35") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "andLeft" (formula "35"))
                                    (rule "notLeft" (formula "35"))
                                    (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "35") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "34") (inst "i=i"))
                                    (rule "sub_literals" (formula "34") (term "2,1,0,1,1"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "greater_literals" (formula "34") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "andLeft" (formula "34"))
                                    (rule "notLeft" (formula "34"))
                                    (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "34") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0"))
                                    (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_20"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "69")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "19"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "69")) (ifInst ""  (formula "8")))
                                    (rule "applyEqReverse" (formula "52") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "50") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_20"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "19"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")) (ifInst ""  (formula "8")))
                                    (rule "applyEqReverse" (formula "51") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "49") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_20"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "19"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")) (ifInst ""  (formula "8")))
                                    (rule "applyEqReverse" (formula "50") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_20"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "19"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")) (ifInst ""  (formula "8")))
                                    (rule "applyEqReverse" (formula "49") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_20"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "19"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")) (ifInst ""  (formula "8")))
                                    (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_20"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "19"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")) (ifInst ""  (formula "8")))
                                    (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "39") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_20"))
                                    (rule "applyEq" (formula "40") (term "0,1,1,1,0,0") (ifseqformula "39"))
                                    (rule "applyEq" (formula "46") (term "0") (ifseqformula "39"))
                                    (rule "simplifySelectOfAnonEQ" (formula "39") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "63")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "0,0,0") (ifseqformula "18"))
                                    (rule "replace_known_left" (formula "39") (term "0,0,0,0") (ifseqformula "7"))
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "simplifySelectOfAnonEQ" (formula "39") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "63")) (ifInst ""  (formula "7")))
                                    (rule "applyEqReverse" (formula "40") (term "1,0,0,1,0") (ifseqformula "39"))
                                    (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "39"))
                                    (rule "applyEqReverse" (formula "40") (term "0,1,1,1,0,0") (ifseqformula "39"))
                                    (rule "hideAuxiliaryEq" (formula "39"))
                                    (rule "pullOutSelect" (formula "38") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_20"))
                                    (rule "applyEq" (formula "39") (term "0,1,1,1,0,0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "45") (term "0") (ifseqformula "38"))
                                    (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "62")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "0,0,0") (ifseqformula "18"))
                                    (rule "replace_known_left" (formula "38") (term "0,0,0,0") (ifseqformula "7"))
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "62")) (ifInst ""  (formula "7")))
                                    (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "38"))
                                    (rule "applyEqReverse" (formula "39") (term "0,1,1,1,0,0") (ifseqformula "38"))
                                    (rule "applyEqReverse" (formula "39") (term "1,0,0,1,0") (ifseqformula "38"))
                                    (rule "hideAuxiliaryEq" (formula "38"))
                                    (rule "pullOutSelect" (formula "37") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_20"))
                                    (rule "applyEq" (formula "38") (term "0,1,1,1,0,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "44") (term "0") (ifseqformula "37"))
                                    (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "61")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,0,0") (ifseqformula "18"))
                                    (rule "replace_known_left" (formula "37") (term "0,0,0,0") (ifseqformula "7"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "61")) (ifInst ""  (formula "7")))
                                    (rule "applyEqReverse" (formula "38") (term "0,1,1,1,0,0") (ifseqformula "37"))
                                    (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "37"))
                                    (rule "applyEqReverse" (formula "38") (term "1,0,0,1,0") (ifseqformula "37"))
                                    (rule "hideAuxiliaryEq" (formula "37"))
                                    (rule "pullOutSelect" (formula "36") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_20"))
                                    (rule "applyEq" (formula "37") (term "0,1,1,1,0,0") (ifseqformula "36"))
                                    (rule "applyEq" (formula "43") (term "0") (ifseqformula "36"))
                                    (rule "simplifySelectOfAnonEQ" (formula "36") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "60")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "0,0,0") (ifseqformula "18"))
                                    (rule "replace_known_left" (formula "36") (term "0,0,0,0") (ifseqformula "7"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "simplifySelectOfAnonEQ" (formula "36") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "60")) (ifInst ""  (formula "7")))
                                    (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "36"))
                                    (rule "applyEqReverse" (formula "37") (term "0,1,1,1,0,0") (ifseqformula "36"))
                                    (rule "applyEqReverse" (formula "37") (term "1,0,0,1,0") (ifseqformula "36"))
                                    (rule "hideAuxiliaryEq" (formula "36"))
                                    (rule "pullOutSelect" (formula "35") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_20"))
                                    (rule "applyEq" (formula "42") (term "0") (ifseqformula "35"))
                                    (rule "applyEq" (formula "36") (term "0,1,1,1,0,0") (ifseqformula "35"))
                                    (rule "simplifySelectOfAnonEQ" (formula "35") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "59")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,0") (ifseqformula "18"))
                                    (rule "replace_known_left" (formula "35") (term "0,0,0,0") (ifseqformula "7"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "simplifySelectOfAnonEQ" (formula "35") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "59")) (ifInst ""  (formula "7")))
                                    (rule "applyEqReverse" (formula "36") (term "0,1,1,1,0,0") (ifseqformula "35"))
                                    (rule "applyEqReverse" (formula "36") (term "1,0,0,1,0") (ifseqformula "35"))
                                    (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "35"))
                                    (rule "hideAuxiliaryEq" (formula "35"))
                                    (rule "pullOutSelect" (formula "34") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_20"))
                                    (rule "applyEq" (formula "41") (term "0") (ifseqformula "34"))
                                    (rule "applyEq" (formula "35") (term "0,1,1,1,0,0") (ifseqformula "34"))
                                    (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "58")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "0,0,0") (ifseqformula "18"))
                                    (rule "replace_known_left" (formula "34") (term "0,0,0,0") (ifseqformula "7"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "58")) (ifInst ""  (formula "7")))
                                    (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "34"))
                                    (rule "applyEqReverse" (formula "35") (term "1,0,0,1,0") (ifseqformula "34"))
                                    (rule "applyEqReverse" (formula "35") (term "0,1,1,1,0,0") (ifseqformula "34"))
                                    (rule "hideAuxiliaryEq" (formula "34"))
                                    (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "23") (ifseqformula "8"))
                                    (rule "replaceKnownSelect_taclet011000000010_8" (formula "23") (term "0,0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet011000000010_9" (formula "23") (term "0,0,1"))
                                    (rule "replaceKnownSelect_taclet011000000010_11" (formula "23") (term "0,0,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet011000000010_12" (formula "23") (term "0,0,1,0"))
                                    (rule "replaceKnownSelect_taclet011000000010_14" (formula "23") (term "0,0,1,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet011000000010_15" (formula "23") (term "0,0,1,0,0"))
                                    (rule "replaceKnownSelect_taclet011000000010_17" (formula "23") (term "0,0,1,0,0,0"))
                                    (rule "replaceKnownSelect_taclet011000000010_26" (formula "23") (term "1,1,0,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet011000000010_18" (formula "23") (term "0,0,1,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet011000000010_27" (formula "23") (term "1,1,0,0,0,0"))
                                    (rule "replaceKnownSelect_taclet011000000010_29" (formula "23") (term "1,1,0,0,0,0,0"))
                                    (rule "replaceKnownSelect_taclet011000000010_32" (formula "23") (term "1,1,0,0,0,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet011000000010_30" (formula "23") (term "1,1,0,0,0,0,0"))
                                    (rule "replaceKnownSelect_taclet011000000010_35" (formula "23") (term "1,1,0,0,0,0,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet011000000010_33" (formula "23") (term "1,1,0,0,0,0,0,0"))
                                    (rule "replaceKnownSelect_taclet011000000010_38" (formula "23") (term "1,1,0,0,0,0,0,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet011000000010_36" (formula "23") (term "1,1,0,0,0,0,0,0,0"))
                                    (rule "replaceKnownSelect_taclet011000000010_41" (formula "23") (term "1,1,0,0,0,0,0,0,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet011000000010_39" (formula "23") (term "1,1,0,0,0,0,0,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet011000000010_42" (formula "23") (term "1,1,0,0,0,0,0,0,0,0,0"))
                                    (rule "replaceKnownSelect_taclet011000000010_20" (formula "23") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "replaceKnownSelect_taclet011000000010_23" (formula "23") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet011000000010_21" (formula "23") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet011000000010_24" (formula "23") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "notLeft" (formula "24"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "notLeft" (formula "25"))
                                    (rule "notLeft" (formula "24"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "notLeft" (formula "24"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "notLeft" (formula "24"))
                                    (rule "notLeft" (formula "23"))
                                    (rule "nonNull" (formula "28") (inst "i=i"))
                                    (rule "sub_literals" (formula "28") (term "2,1,0,1,1"))
                                    (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "50")))
                                    (rule "greater_literals" (formula "28") (term "0"))
                                    (builtin "One Step Simplification" (formula "28"))
                                    (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "27") (inst "i=i"))
                                    (rule "sub_literals" (formula "27") (term "2,1,0,1,1"))
                                    (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "49")))
                                    (rule "greater_literals" (formula "27") (term "0"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "26") (inst "i=i"))
                                    (rule "greater_literals" (formula "26") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "48")))
                                    (rule "sub_literals" (formula "26") (term "2,1,0"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "25") (inst "i=i"))
                                    (rule "sub_literals" (formula "25") (term "2,1,0,1,1"))
                                    (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "47")))
                                    (rule "greater_literals" (formula "25") (term "0"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "24") (inst "i=i"))
                                    (rule "greater_literals" (formula "24") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "46")))
                                    (rule "sub_literals" (formula "24") (term "2,1,0"))
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "23") (inst "i=i"))
                                    (rule "greater_literals" (formula "23") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "45")))
                                    (rule "sub_literals" (formula "23") (term "2,1,0"))
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                                    (rule "commute_or_2" (formula "38") (term "0"))
                                    (rule "ifthenelse_split" (formula "37") (term "1"))
                                    (branch "result_3.length ≥ 1 TRUE"
                                       (rule "replace_known_left" (formula "39") (term "0,1,1,0") (ifseqformula "37"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "commute_or_2" (formula "22") (term "0"))
                                       (rule "commute_or_2" (formula "32") (term "0"))
                                       (rule "lenNonNegative" (formula "38") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "38"))
                                       (rule "ifthenelse_split" (formula "21") (term "1"))
                                       (branch "result_0.length ≥ 1 TRUE"
                                          (rule "replace_known_left" (formula "33") (term "0,1,1,0") (ifseqformula "21"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "replace_known_left" (formula "23") (term "0,1,1,0") (ifseqformula "21"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "replace_known_left" (formula "32") (term "0,1") (ifseqformula "21"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "21"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "lenNonNegative" (formula "22") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "22"))
                                          (rule "commute_or_2" (formula "16") (term "0"))
                                          (rule "nnf_imp2or" (formula "48") (term "0"))
                                          (rule "commute_or_2" (formula "15") (term "0"))
                                          (rule "nnf_imp2or" (formula "47") (term "0"))
                                          (rule "commute_or_2" (formula "14") (term "0"))
                                          (rule "nnf_imp2or" (formula "46") (term "0"))
                                          (rule "nnf_imp2or" (formula "45") (term "0"))
                                          (rule "commute_or_2" (formula "13") (term "0"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch " verif.selectvoting.system.core.Tag.BALLOTS.<created> = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEqReverse" (formula "63") (term "1,1") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "62") (term "1,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "62"))
                                             (rule "closeTrue" (formula "62"))
                                          )
                                          (branch " verif.selectvoting.system.core.Tag.BALLOTS.<created> = TRUE FALSE"
                                             (rule "referencedObjectIsCreatedRight" (formula "49") (ifseqformula "67"))
                                             (rule "close" (formula "49") (ifseqformula "31"))
                                          )
                                       )
                                       (branch "result_0.length ≥ 1 FALSE"
                                          (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "47"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "22") (term "0,1,1,0") (ifseqformula "47"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "replace_known_right" (formula "31") (term "0,1") (ifseqformula "47"))
                                          (builtin "One Step Simplification" (formula "31"))
                                          (rule "replace_known_right" (formula "32") (term "0,1,1,0") (ifseqformula "47"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "inEqSimp_geqRight" (formula "47"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_homoInEq1" (formula "5"))
                                          (rule "times_zero_2" (formula "5") (term "1,0"))
                                          (rule "add_zero_right" (formula "5") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                          (rule "mul_literals" (formula "5") (term "1"))
                                          (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "5"))
                                          (rule "qeq_literals" (formula "4") (term "0"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "closeFalse" (formula "4"))
                                       )
                                    )
                                    (branch "result_3.length ≥ 1 FALSE"
                                       (rule "replace_known_right" (formula "38") (term "0,1,1,0") (ifseqformula "45"))
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "inEqSimp_geqRight" (formula "45"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "commute_or_2" (formula "23") (term "0"))
                                       (rule "commute_or_2" (formula "33") (term "0"))
                                       (rule "lenNonNegative" (formula "38") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "38"))
                                       (rule "ifthenelse_split" (formula "22") (term "1"))
                                       (branch "result_0.length ≥ 1 TRUE"
                                          (rule "replace_known_left" (formula "24") (term "0,1,1,0") (ifseqformula "22"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "22"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_left" (formula "33") (term "0,1") (ifseqformula "22"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "replace_known_left" (formula "34") (term "0,1,1,0") (ifseqformula "22"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "lenNonNegative" (formula "23") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "23"))
                                          (rule "commute_or_2" (formula "17") (term "0"))
                                          (rule "nnf_imp2or" (formula "48") (term "0"))
                                          (rule "commute_or_2" (formula "16") (term "0"))
                                          (rule "nnf_imp2or" (formula "47") (term "0"))
                                          (rule "commute_or_2" (formula "15") (term "0"))
                                          (rule "nnf_imp2or" (formula "46") (term "0"))
                                          (rule "nnf_imp2or" (formula "45") (term "0"))
                                          (rule "commute_or_2" (formula "14") (term "0"))
                                          (rule "ifthenelse_split" (formula "3") (term "0"))
                                          (branch " verif.selectvoting.system.core.Tag.BALLOTS.<created> = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "63") (term "1,1") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "62") (term "1,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "62"))
                                             (rule "closeTrue" (formula "62"))
                                          )
                                          (branch " verif.selectvoting.system.core.Tag.BALLOTS.<created> = TRUE FALSE"
                                             (rule "referencedObjectIsCreatedRight" (formula "49") (ifseqformula "67"))
                                             (rule "close" (formula "49") (ifseqformula "32"))
                                          )
                                       )
                                       (branch "result_0.length ≥ 1 FALSE"
                                          (rule "replace_known_right" (formula "23") (term "0,1,1,0") (ifseqformula "47"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "replace_known_right" (formula "33") (term "0,1,1,0") (ifseqformula "47"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "replace_known_right" (formula "32") (term "0,1") (ifseqformula "47"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "47"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "inEqSimp_geqRight" (formula "47"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_homoInEq1" (formula "6"))
                                          (rule "times_zero_2" (formula "6") (term "1,0"))
                                          (rule "add_zero_right" (formula "6") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                          (rule "mul_literals" (formula "6") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "5"))
                                          (rule "qeq_literals" (formula "6") (term "0"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "closeFalse" (formula "6"))
                                       )
                                    )
                                 )
                                 (branch "CUT: result_3.<created> = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "18") (ifseqformula "8"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "notLeft" (formula "20"))
                                    (rule "notLeft" (formula "19"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "notLeft" (formula "20"))
                                    (rule "notLeft" (formula "19"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "notLeft" (formula "19"))
                                    (rule "notLeft" (formula "18"))
                                    (rule "nonNull" (formula "23") (inst "i=i"))
                                    (rule "greater_literals" (formula "23") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "sub_literals" (formula "23") (term "2,1,0,1"))
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "notLeft" (formula "23"))
                                    (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "22") (inst "i=i"))
                                    (rule "sub_literals" (formula "22") (term "2,1,0,1,1"))
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "greater_literals" (formula "22") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "andLeft" (formula "22"))
                                    (rule "notLeft" (formula "22"))
                                    (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "21") (inst "i=i"))
                                    (rule "sub_literals" (formula "21") (term "2,1,0,1,1"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "greater_literals" (formula "21") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "andLeft" (formula "21"))
                                    (rule "notLeft" (formula "21"))
                                    (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "20") (inst "i=i"))
                                    (rule "greater_literals" (formula "20") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "sub_literals" (formula "20") (term "2,1,0,1"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "andLeft" (formula "20"))
                                    (rule "notLeft" (formula "20"))
                                    (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "19") (inst "i=i"))
                                    (rule "greater_literals" (formula "19") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "sub_literals" (formula "19") (term "2,1,0,1"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "andLeft" (formula "19"))
                                    (rule "notLeft" (formula "19"))
                                    (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "18") (inst "i=i"))
                                    (rule "greater_literals" (formula "18") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "sub_literals" (formula "18") (term "2,1,0,1"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "notLeft" (formula "18"))
                                    (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                    (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_18"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")) (ifInst ""  (formula "8")))
                                    (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_18"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")) (ifInst ""  (formula "8")))
                                    (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_18"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")) (ifInst ""  (formula "8")))
                                    (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_18"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")) (ifInst ""  (formula "8")))
                                    (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_18"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")) (ifInst ""  (formula "8")))
                                    (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_18"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")) (ifInst ""  (formula "8")))
                                    (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "23") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_18"))
                                    (rule "applyEq" (formula "41") (term "0") (ifseqformula "23"))
                                    (rule "applyEq" (formula "24") (term "0,1,1,1,0,0") (ifseqformula "23"))
                                    (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "13"))
                                    (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "53")) (ifInst ""  (formula "7")))
                                    (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "23"))
                                    (rule "applyEqReverse" (formula "24") (term "0,1,1,1,0,0") (ifseqformula "23"))
                                    (rule "applyEqReverse" (formula "24") (term "1,0,0,1,0") (ifseqformula "23"))
                                    (rule "hideAuxiliaryEq" (formula "23"))
                                    (rule "pullOutSelect" (formula "22") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_18"))
                                    (rule "applyEq" (formula "40") (term "0") (ifseqformula "22"))
                                    (rule "applyEq" (formula "23") (term "0,1,1,1,0,0") (ifseqformula "22"))
                                    (rule "simplifySelectOfAnonEQ" (formula "22") (ifseqformula "13"))
                                    (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "53")) (ifInst ""  (formula "7")))
                                    (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "22"))
                                    (rule "applyEqReverse" (formula "23") (term "0,1,1,1,0,0") (ifseqformula "22"))
                                    (rule "applyEqReverse" (formula "23") (term "1,0,0,1,0") (ifseqformula "22"))
                                    (rule "hideAuxiliaryEq" (formula "22"))
                                    (rule "pullOutSelect" (formula "21") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_18"))
                                    (rule "applyEq" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "39") (term "0") (ifseqformula "21"))
                                    (rule "simplifySelectOfAnonEQ" (formula "21") (ifseqformula "13"))
                                    (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "53")) (ifInst ""  (formula "7")))
                                    (rule "applyEqReverse" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "21"))
                                    (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "21"))
                                    (rule "applyEqReverse" (formula "22") (term "1,0,0,1,0") (ifseqformula "21"))
                                    (rule "hideAuxiliaryEq" (formula "21"))
                                    (rule "pullOutSelect" (formula "20") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_18"))
                                    (rule "applyEq" (formula "21") (term "0,1,1,1,0,0") (ifseqformula "20"))
                                    (rule "applyEq" (formula "38") (term "0") (ifseqformula "20"))
                                    (rule "simplifySelectOfAnonEQ" (formula "20") (ifseqformula "13"))
                                    (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "53")) (ifInst ""  (formula "7")))
                                    (rule "applyEqReverse" (formula "21") (term "1,0,0,1,0") (ifseqformula "20"))
                                    (rule "applyEqReverse" (formula "21") (term "0,1,1,1,0,0") (ifseqformula "20"))
                                    (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "20"))
                                    (rule "hideAuxiliaryEq" (formula "20"))
                                    (rule "pullOutSelect" (formula "19") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_18"))
                                    (rule "applyEq" (formula "37") (term "0") (ifseqformula "19"))
                                    (rule "applyEq" (formula "20") (term "0,1,1,1,0,0") (ifseqformula "19"))
                                    (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "13"))
                                    (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "53")) (ifInst ""  (formula "7")))
                                    (rule "applyEqReverse" (formula "20") (term "1,0,0,1,0") (ifseqformula "19"))
                                    (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "19"))
                                    (rule "applyEqReverse" (formula "20") (term "0,1,1,1,0,0") (ifseqformula "19"))
                                    (rule "hideAuxiliaryEq" (formula "19"))
                                    (rule "pullOutSelect" (formula "18") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_18"))
                                    (rule "applyEq" (formula "19") (term "0,1,1,1,0,0") (ifseqformula "18"))
                                    (rule "applyEq" (formula "36") (term "0") (ifseqformula "18"))
                                    (rule "simplifySelectOfAnonEQ" (formula "18") (ifseqformula "13"))
                                    (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "53")) (ifInst ""  (formula "7")))
                                    (rule "applyEqReverse" (formula "19") (term "1,0,0,1,0") (ifseqformula "18"))
                                    (rule "applyEqReverse" (formula "19") (term "0,1,1,1,0,0") (ifseqformula "18"))
                                    (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "18"))
                                    (rule "hideAuxiliaryEq" (formula "18"))
                                    (rule "nnf_imp2or" (formula "23") (term "0"))
                                    (rule "nnf_imp2or" (formula "22") (term "0"))
                                    (rule "nnf_imp2or" (formula "21") (term "0"))
                                    (rule "nnf_imp2or" (formula "20") (term "0"))
                                    (rule "nnf_imp2or" (formula "19") (term "0"))
                                    (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "11") (ifseqformula "8"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "notLeft" (formula "12"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "notLeft" (formula "12"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "notLeft" (formula "12"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "notLeft" (formula "12"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "andLeft" (formula "11"))
                                    (rule "notLeft" (formula "11"))
                                    (rule "notLeft" (formula "11"))
                                    (rule "nonNull" (formula "16") (inst "i=i"))
                                    (rule "greater_literals" (formula "16") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "45")))
                                    (rule "sub_literals" (formula "16") (term "2,1,0"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "narrowSelectArrayType" (formula "16") (term "0,0,1,0") (ifseqformula "29") (ifseqformula "45"))
                                    (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "15") (inst "i=i"))
                                    (rule "greater_literals" (formula "15") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "44")))
                                    (rule "sub_literals" (formula "15") (term "2,1,0"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "narrowSelectArrayType" (formula "15") (term "0,0,1,0") (ifseqformula "29") (ifseqformula "44"))
                                    (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "14") (inst "i=i"))
                                    (rule "sub_literals" (formula "14") (term "2,1,0,1,1"))
                                    (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "43")))
                                    (rule "greater_literals" (formula "14") (term "0"))
                                    (builtin "One Step Simplification" (formula "14"))
                                    (rule "narrowSelectArrayType" (formula "14") (term "0,0,1,0") (ifseqformula "29") (ifseqformula "43"))
                                    (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "13") (inst "i=i"))
                                    (rule "greater_literals" (formula "13") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "42")))
                                    (rule "sub_literals" (formula "13") (term "2,1,0"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "narrowSelectArrayType" (formula "13") (term "0,0,1,0") (ifseqformula "29") (ifseqformula "42"))
                                    (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "12") (inst "i=i"))
                                    (rule "greater_literals" (formula "12") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "41")))
                                    (rule "sub_literals" (formula "12") (term "2,1,0"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "29") (ifseqformula "41"))
                                    (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "11") (inst "i=i"))
                                    (rule "greater_literals" (formula "11") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "40")))
                                    (rule "sub_literals" (formula "11") (term "2,1,0"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "29") (ifseqformula "40"))
                                    (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                    (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "39") (ifseqformula "8"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "notLeft" (formula "40"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "notLeft" (formula "40"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "notLeft" (formula "40"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "notLeft" (formula "40"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "notLeft" (formula "40"))
                                    (rule "notLeft" (formula "39"))
                                    (rule "nonNull" (formula "44") (inst "i=i"))
                                    (rule "sub_literals" (formula "44") (term "2,1,0,1,1"))
                                    (builtin "One Step Simplification" (formula "44"))
                                    (rule "greater_literals" (formula "44") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "44"))
                                    (rule "andLeft" (formula "44"))
                                    (rule "notLeft" (formula "44"))
                                    (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "44") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "43") (inst "i=i"))
                                    (rule "sub_literals" (formula "43") (term "2,1,0,1,1"))
                                    (builtin "One Step Simplification" (formula "43"))
                                    (rule "greater_literals" (formula "43") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "43"))
                                    (rule "andLeft" (formula "43"))
                                    (rule "notLeft" (formula "43"))
                                    (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "43") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "42") (inst "i=i"))
                                    (rule "greater_literals" (formula "42") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "42"))
                                    (rule "sub_literals" (formula "42") (term "2,1,0,1"))
                                    (builtin "One Step Simplification" (formula "42"))
                                    (rule "andLeft" (formula "42"))
                                    (rule "notLeft" (formula "42"))
                                    (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "42") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "41") (inst "i=i"))
                                    (rule "greater_literals" (formula "41") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "41"))
                                    (rule "sub_literals" (formula "41") (term "2,1,0,1"))
                                    (builtin "One Step Simplification" (formula "41"))
                                    (rule "andLeft" (formula "41"))
                                    (rule "notLeft" (formula "41"))
                                    (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "41") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "40") (inst "i=i"))
                                    (rule "greater_literals" (formula "40") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "40"))
                                    (rule "sub_literals" (formula "40") (term "2,1,0,1"))
                                    (builtin "One Step Simplification" (formula "40"))
                                    (rule "andLeft" (formula "40"))
                                    (rule "notLeft" (formula "40"))
                                    (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "40") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "39") (inst "i=i"))
                                    (rule "greater_literals" (formula "39") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "sub_literals" (formula "39") (term "2,1,0,1"))
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "notLeft" (formula "39"))
                                    (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0"))
                                    (rule "pullOutSelect" (formula "56") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_19"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "75")))
                                    (rule "replaceKnownSelect_taclet111000000010_7" (formula "1") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet111000000010_8" (formula "1") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "19"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "55") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_19"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")))
                                    (rule "replaceKnownSelect_taclet111000000010_9" (formula "1") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet111000000010_10" (formula "1") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "19"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "56") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "54") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_19"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "73")))
                                    (rule "replaceKnownSelect_taclet111000000010_11" (formula "1") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet111000000010_12" (formula "1") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "19"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "55") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "53") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_19"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "72")))
                                    (rule "replaceKnownSelect_taclet111000000010_13" (formula "1") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet111000000010_14" (formula "1") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "19"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "52") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_19"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "71")))
                                    (rule "replaceKnownSelect_taclet111000000010_15" (formula "1") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet111000000010_16" (formula "1") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "19"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "53") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_19"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "70")))
                                    (rule "replaceKnownSelect_taclet111000000010_17" (formula "1") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet111000000010_18" (formula "1") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "19"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "52") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "44") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_19"))
                                    (rule "applyEq" (formula "51") (term "0") (ifseqformula "44"))
                                    (rule "applyEq" (formula "45") (term "0,1,1,1,0,0") (ifseqformula "44"))
                                    (rule "simplifySelectOfAnonEQ" (formula "44") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "69")))
                                    (rule "replaceKnownSelect_taclet111000000010_19" (formula "44") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet111000000010_20" (formula "44") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,0,0") (ifseqformula "18"))
                                    (rule "replace_known_left" (formula "44") (term "0,0,0,0") (ifseqformula "7"))
                                    (builtin "One Step Simplification" (formula "44"))
                                    (rule "applyEqReverse" (formula "51") (term "0") (ifseqformula "44"))
                                    (rule "applyEqReverse" (formula "45") (term "1,0,0,1,0") (ifseqformula "44"))
                                    (rule "applyEqReverse" (formula "45") (term "0,1,1,1,0,0") (ifseqformula "44"))
                                    (rule "hideAuxiliaryEq" (formula "44"))
                                    (rule "pullOutSelect" (formula "43") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_19"))
                                    (rule "applyEq" (formula "50") (term "0") (ifseqformula "43"))
                                    (rule "applyEq" (formula "44") (term "0,1,1,1,0,0") (ifseqformula "43"))
                                    (rule "simplifySelectOfAnonEQ" (formula "43") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "68")))
                                    (rule "replaceKnownSelect_taclet111000000010_21" (formula "43") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet111000000010_22" (formula "43") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "43") (term "0,0,0") (ifseqformula "18"))
                                    (rule "replace_known_left" (formula "43") (term "0,0,0,0") (ifseqformula "7"))
                                    (builtin "One Step Simplification" (formula "43"))
                                    (rule "applyEqReverse" (formula "50") (term "0") (ifseqformula "43"))
                                    (rule "applyEqReverse" (formula "44") (term "0,1,1,1,0,0") (ifseqformula "43"))
                                    (rule "applyEqReverse" (formula "44") (term "1,0,0,1,0") (ifseqformula "43"))
                                    (rule "hideAuxiliaryEq" (formula "43"))
                                    (rule "pullOutSelect" (formula "42") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_19"))
                                    (rule "applyEq" (formula "43") (term "0,1,1,1,0,0") (ifseqformula "42"))
                                    (rule "applyEq" (formula "49") (term "0") (ifseqformula "42"))
                                    (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "67")))
                                    (rule "replaceKnownSelect_taclet111000000010_23" (formula "42") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet111000000010_24" (formula "42") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,0,0") (ifseqformula "18"))
                                    (rule "replace_known_left" (formula "42") (term "0,0,0,0") (ifseqformula "7"))
                                    (builtin "One Step Simplification" (formula "42"))
                                    (rule "applyEqReverse" (formula "43") (term "0,1,1,1,0,0") (ifseqformula "42"))
                                    (rule "applyEqReverse" (formula "43") (term "1,0,0,1,0") (ifseqformula "42"))
                                    (rule "applyEqReverse" (formula "49") (term "0") (ifseqformula "42"))
                                    (rule "hideAuxiliaryEq" (formula "42"))
                                    (rule "pullOutSelect" (formula "41") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_19"))
                                    (rule "applyEq" (formula "48") (term "0") (ifseqformula "41"))
                                    (rule "applyEq" (formula "42") (term "0,1,1,1,0,0") (ifseqformula "41"))
                                    (rule "simplifySelectOfAnonEQ" (formula "41") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "66")))
                                    (rule "replaceKnownSelect_taclet111000000010_25" (formula "41") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet111000000010_26" (formula "41") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "0,0,0") (ifseqformula "18"))
                                    (rule "replace_known_left" (formula "41") (term "0,0,0,0") (ifseqformula "7"))
                                    (builtin "One Step Simplification" (formula "41"))
                                    (rule "applyEqReverse" (formula "42") (term "0,1,1,1,0,0") (ifseqformula "41"))
                                    (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "41"))
                                    (rule "applyEqReverse" (formula "42") (term "1,0,0,1,0") (ifseqformula "41"))
                                    (rule "hideAuxiliaryEq" (formula "41"))
                                    (rule "pullOutSelect" (formula "40") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_19"))
                                    (rule "applyEq" (formula "47") (term "0") (ifseqformula "40"))
                                    (rule "applyEq" (formula "41") (term "0,1,1,1,0,0") (ifseqformula "40"))
                                    (rule "simplifySelectOfAnonEQ" (formula "40") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "65")))
                                    (rule "replaceKnownSelect_taclet111000000010_27" (formula "40") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet111000000010_28" (formula "40") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,0,0") (ifseqformula "18"))
                                    (rule "replace_known_left" (formula "40") (term "0,0,0,0") (ifseqformula "7"))
                                    (builtin "One Step Simplification" (formula "40"))
                                    (rule "applyEqReverse" (formula "41") (term "1,0,0,1,0") (ifseqformula "40"))
                                    (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "40"))
                                    (rule "applyEqReverse" (formula "41") (term "0,1,1,1,0,0") (ifseqformula "40"))
                                    (rule "hideAuxiliaryEq" (formula "40"))
                                    (rule "pullOutSelect" (formula "39") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_19"))
                                    (rule "applyEq" (formula "46") (term "0") (ifseqformula "39"))
                                    (rule "applyEq" (formula "40") (term "0,1,1,1,0,0") (ifseqformula "39"))
                                    (rule "simplifySelectOfAnonEQ" (formula "39") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "64")))
                                    (rule "replaceKnownSelect_taclet111000000010_29" (formula "39") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet111000000010_30" (formula "39") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "0,0,0") (ifseqformula "18"))
                                    (rule "replace_known_left" (formula "39") (term "0,0,0,0") (ifseqformula "7"))
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "applyEqReverse" (formula "40") (term "0,1,1,1,0,0") (ifseqformula "39"))
                                    (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "39"))
                                    (rule "applyEqReverse" (formula "40") (term "1,0,0,1,0") (ifseqformula "39"))
                                    (rule "hideAuxiliaryEq" (formula "39"))
                                    (rule "nnf_imp2or" (formula "23") (term "0"))
                                    (rule "nnf_notAnd" (formula "28") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                                    (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "28") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                    (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "27") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                    (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "26") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                    (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                                    (rule "mul_literals" (formula "25") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "25") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                    (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "24") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "24") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                                    (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                                    (rule "commute_or_2" (formula "38") (term "0"))
                                    (rule "ifthenelse_split" (formula "37") (term "1"))
                                    (branch "result_3.length ≥ 1 TRUE"
                                       (rule "replace_known_left" (formula "39") (term "0,1,1,0") (ifseqformula "37"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "nnf_imp2or" (formula "16") (term "0"))
                                       (rule "commute_or_2" (formula "22") (term "0"))
                                       (rule "nnf_imp2or" (formula "15") (term "0"))
                                       (rule "commute_or_2" (formula "32") (term "0"))
                                       (rule "nnf_imp2or" (formula "14") (term "0"))
                                       (rule "lenNonNegative" (formula "38") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "38"))
                                       (rule "nnf_imp2or" (formula "13") (term "0"))
                                       (rule "ifthenelse_split" (formula "21") (term "1"))
                                       (branch "result_0.length ≥ 1 TRUE"
                                          (rule "replace_known_left" (formula "32") (term "0,1") (ifseqformula "21"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "replace_known_left" (formula "23") (term "0,1,1,0") (ifseqformula "21"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "21"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_left" (formula "33") (term "0,1,1,0") (ifseqformula "21"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "nnf_imp2or" (formula "12") (term "0"))
                                          (rule "nnf_imp2or" (formula "11") (term "0"))
                                          (rule "lenNonNegative" (formula "22") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "22"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch " verif.selectvoting.system.core.Tag.BALLOTS.<created> = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "applyEqReverse" (formula "64") (term "1,1") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "63"))
                                             (rule "closeTrue" (formula "63"))
                                          )
                                          (branch " verif.selectvoting.system.core.Tag.BALLOTS.<created> = TRUE FALSE"
                                             (rule "referencedObjectIsCreatedRight" (formula "49") (ifseqformula "68"))
                                             (rule "close" (formula "49") (ifseqformula "31"))
                                          )
                                       )
                                       (branch "result_0.length ≥ 1 FALSE"
                                          (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "47"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "replace_known_right" (formula "31") (term "0,1") (ifseqformula "47"))
                                          (builtin "One Step Simplification" (formula "31"))
                                          (rule "replace_known_right" (formula "22") (term "0,1,1,0") (ifseqformula "47"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "replace_known_right" (formula "32") (term "0,1,1,0") (ifseqformula "47"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "inEqSimp_geqRight" (formula "47"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_homoInEq1" (formula "5"))
                                          (rule "times_zero_2" (formula "5") (term "1,0"))
                                          (rule "add_zero_right" (formula "5") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                          (rule "mul_literals" (formula "5") (term "1"))
                                          (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "5"))
                                          (rule "qeq_literals" (formula "4") (term "0"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "closeFalse" (formula "4"))
                                       )
                                    )
                                    (branch "result_3.length ≥ 1 FALSE"
                                       (rule "replace_known_right" (formula "38") (term "0,1,1,0") (ifseqformula "45"))
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "inEqSimp_geqRight" (formula "45"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "nnf_imp2or" (formula "17") (term "0"))
                                       (rule "commute_or_2" (formula "23") (term "0"))
                                       (rule "nnf_imp2or" (formula "16") (term "0"))
                                       (rule "commute_or_2" (formula "33") (term "0"))
                                       (rule "nnf_imp2or" (formula "15") (term "0"))
                                       (rule "lenNonNegative" (formula "38") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "38"))
                                       (rule "nnf_imp2or" (formula "14") (term "0"))
                                       (rule "ifthenelse_split" (formula "22") (term "1"))
                                       (branch "result_0.length ≥ 1 TRUE"
                                          (rule "replace_known_left" (formula "24") (term "0,1,1,0") (ifseqformula "22"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "22"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_left" (formula "33") (term "0,1") (ifseqformula "22"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "replace_known_left" (formula "34") (term "0,1,1,0") (ifseqformula "22"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "nnf_imp2or" (formula "13") (term "0"))
                                          (rule "nnf_imp2or" (formula "12") (term "0"))
                                          (rule "lenNonNegative" (formula "23") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "23"))
                                          (rule "ifthenelse_split" (formula "3") (term "0"))
                                          (branch " verif.selectvoting.system.core.Tag.BALLOTS.<created> = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "64") (term "1,1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "63") (term "1,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "63"))
                                             (rule "closeTrue" (formula "63"))
                                          )
                                          (branch " verif.selectvoting.system.core.Tag.BALLOTS.<created> = TRUE FALSE"
                                             (rule "referencedObjectIsCreatedRight" (formula "49") (ifseqformula "68"))
                                             (rule "close" (formula "49") (ifseqformula "32"))
                                          )
                                       )
                                       (branch "result_0.length ≥ 1 FALSE"
                                          (rule "replace_known_right" (formula "23") (term "0,1,1,0") (ifseqformula "47"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "replace_known_right" (formula "32") (term "0,1") (ifseqformula "47"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "47"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_right" (formula "33") (term "0,1,1,0") (ifseqformula "47"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "inEqSimp_geqRight" (formula "47"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_homoInEq1" (formula "6"))
                                          (rule "times_zero_2" (formula "6") (term "1,0"))
                                          (rule "add_zero_right" (formula "6") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                          (rule "mul_literals" (formula "6") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "5"))
                                          (rule "qeq_literals" (formula "6") (term "0"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "closeFalse" (formula "6"))
                                       )
                                    )
                                 )
                              )
                           )
                        )
                        (branch " array2seq(heapAfter_getPayLoad, result_0) = array2seq(heapAfter_getPayLoad, verif.selectvoting.system.core.Tag.BALLOTS@heapAfter_getPayLoad) FALSE"
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "closeFalse" (formula "16") (userinteraction))
                        )
                     )
                     (branch "Case 2"
                        (rule "andRight" (formula "28") (userinteraction))
                        (branch
                           (rule "andRight" (formula "28") (userinteraction))
                           (branch "Case 1"
                              (rule "equalityToSeqGetAndSeqLenLeft" (formula "21") (inst "iv=iv") (userinteraction))
                              (rule "andLeft" (formula "21") (userinteraction))
                              (rule "lenOfArray2seq" (formula "21") (term "0") (userinteraction))
                              (rule "ifthenelse_split" (formula "30") (term "1") (userinteraction))
                              (branch "result_3.length ≥ 1 TRUE"
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "1") (ifseqformula "19"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "1") (ifseqformula "10"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,1") (ifseqformula "10"))
                                 (rule "eqSymm" (formula "13"))
                                 (rule "eqSymm" (formula "23") (term "1,0"))
                                 (rule "eqSymm" (formula "24"))
                                 (rule "eqSymm" (formula "17") (term "0,1"))
                                 (rule "eqSymm" (formula "22"))
                                 (rule "eqSymm" (formula "17"))
                                 (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "30"))
                                 (builtin "One Step Simplification" (formula "6"))
                                 (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "27"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "26"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                 (rule "applyEq" (formula "17") (term "1") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "applyEq" (formula "23") (term "0,0,1,0") (ifseqformula "24"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "true_left" (formula "23"))
                                 (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "23"))
                                 (rule "array2seqDef" (formula "13") (term "0,0") (inst "u=u"))
                                 (rule "array2seqDef" (formula "13") (term "1") (inst "u=u"))
                                 (rule "array2seqDef" (formula "23") (term "0,0") (inst "u=u"))
                                 (rule "array2seqDef" (formula "23") (term "1") (inst "u=u"))
                                 (rule "array2seqDef" (formula "17") (term "0") (inst "u=u"))
                                 (rule "array2seqDef" (formula "17") (term "1") (inst "u=u"))
                                 (rule "array2seqDef" (formula "22") (term "0,0") (inst "u=u"))
                                 (rule "lenOfSeqDef" (formula "22") (term "0"))
                                 (rule "polySimp_elimSub" (formula "22") (term "1,0"))
                                 (rule "mul_literals" (formula "22") (term "1,1,0"))
                                 (rule "add_zero_right" (formula "22") (term "1,0"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "eqSymm" (formula "22") (term "1"))
                                 (rule "inEqSimp_ltToLeq" (formula "22") (term "0"))
                                 (rule "add_zero_right" (formula "22") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "0,0"))
                                 (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "true_left" (formula "22"))
                                 (rule "eqSeqDef" (formula "13") (inst "iv=iv"))
                                 (rule "andLeft" (formula "13"))
                                 (rule "lenOfSeqDef" (formula "13") (term "1"))
                                 (rule "polySimp_elimSub" (formula "13") (term "1,1"))
                                 (rule "times_zero_2" (formula "13") (term "1,1,1"))
                                 (rule "add_zero_right" (formula "13") (term "1,1"))
                                 (rule "getOfSeqDef" (formula "14") (term "1,1,0"))
                                 (rule "castDel" (formula "14") (term "2,1,1,0"))
                                 (rule "castDel" (formula "14") (term "1,1,1,0"))
                                 (rule "add_zero_right" (formula "14") (term "0,2,1,1,1,0"))
                                 (rule "polySimp_elimSub" (formula "14") (term "1,1,0,1,1,0"))
                                 (rule "mul_literals" (formula "14") (term "1,1,1,0,1,1,0"))
                                 (rule "add_zero_right" (formula "14") (term "1,1,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1"))
                                 (rule "add_zero_right" (formula "13") (term "0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,1,1,0"))
                                 (rule "apply_eq_monomials" (formula "14") (term "1,0,1,0,0") (ifseqformula "13"))
                                 (rule "polySimp_rightDist" (formula "14") (term "0,1,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,0,1,0,1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "14") (term "1,0,1,0,0"))
                                 (rule "add_literals" (formula "14") (term "1,1,1,0,1,0,0"))
                                 (rule "times_zero_1" (formula "14") (term "1,1,0,1,0,0"))
                                 (rule "add_zero_right" (formula "14") (term "1,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "0,0,1"))
                                 (rule "polySimp_elimOne" (formula "13") (term "0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,1,0,1,1,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,1,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,1,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "0,0,1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "0,0,1,1,1,0,0"))
                                 (rule "eqSeqDef" (formula "23") (inst "iv=iv"))
                                 (rule "andLeft" (formula "23"))
                                 (rule "lenOfSeqDef" (formula "23") (term "1"))
                                 (rule "polySimp_elimSub" (formula "23") (term "1,1"))
                                 (rule "times_zero_2" (formula "23") (term "1,1,1"))
                                 (rule "add_zero_right" (formula "23") (term "1,1"))
                                 (rule "getOfSeqDef" (formula "24") (term "1,1,0"))
                                 (rule "castDel" (formula "24") (term "1,1,1,0"))
                                 (rule "castDel" (formula "24") (term "2,1,1,0"))
                                 (rule "add_zero_right" (formula "24") (term "0,2,1,1,1,0"))
                                 (rule "polySimp_elimSub" (formula "24") (term "1,1,0,1,1,0"))
                                 (rule "times_zero_2" (formula "24") (term "1,1,1,0,1,1,0"))
                                 (rule "add_zero_right" (formula "24") (term "1,1,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1"))
                                 (rule "add_zero_right" (formula "23") (term "0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,1,1,0"))
                                 (rule "apply_eq_monomials" (formula "24") (term "1,0,1,0,0") (ifseqformula "23"))
                                 (rule "polySimp_rightDist" (formula "24") (term "0,1,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,0,1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "24") (term "1,0,1,0,0"))
                                 (rule "add_literals" (formula "24") (term "1,1,1,0,1,0,0"))
                                 (rule "times_zero_1" (formula "24") (term "1,1,0,1,0,0"))
                                 (rule "add_zero_right" (formula "24") (term "1,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "0,0,1"))
                                 (rule "polySimp_elimOne" (formula "23") (term "0,0,1"))
                                 (rule "replace_known_left" (formula "23") (term "0,1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "31")))
                                 (rule "closeFalse" (formula "23"))
                              )
                              (branch "result_3.length ≥ 1 FALSE"
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "1") (ifseqformula "18"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "1") (ifseqformula "9"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "0,1") (ifseqformula "9"))
                                 (rule "eqSymm" (formula "23"))
                                 (rule "eqSymm" (formula "21"))
                                 (rule "eqSymm" (formula "16"))
                                 (rule "eqSymm" (formula "22") (term "1,0"))
                                 (rule "eqSymm" (formula "12"))
                                 (rule "eqSymm" (formula "16") (term "0,0"))
                                 (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "29"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "26"))
                                 (builtin "One Step Simplification" (formula "11"))
                                 (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "25"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "inEqSimp_geqRight" (formula "30"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                 (rule "applyEq" (formula "23") (term "0,0,1,0") (ifseqformula "24"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "true_left" (formula "23"))
                                 (rule "applyEq" (formula "17") (term "1") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "23"))
                                 (rule "array2seqDef" (formula "23") (term "0,0") (inst "u=u"))
                                 (rule "array2seqDef" (formula "23") (term "1") (inst "u=u"))
                                 (rule "array2seqDef" (formula "13") (term "0,0") (inst "u=u"))
                                 (rule "array2seqDef" (formula "13") (term "1") (inst "u=u"))
                                 (rule "array2seqDef" (formula "17") (term "0") (inst "u=u"))
                                 (rule "array2seqDef" (formula "17") (term "1") (inst "u=u"))
                                 (rule "array2seqDef" (formula "22") (term "0,0") (inst "u=u"))
                                 (rule "lenOfSeqDef" (formula "22") (term "0"))
                                 (rule "polySimp_elimSub" (formula "22") (term "1,0"))
                                 (rule "mul_literals" (formula "22") (term "1,1,0"))
                                 (rule "add_zero_right" (formula "22") (term "1,0"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "eqSymm" (formula "22") (term "1"))
                                 (rule "inEqSimp_ltToLeq" (formula "22") (term "0"))
                                 (rule "add_zero_right" (formula "22") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "0,0"))
                                 (rule "inEqSimp_contradInEq0" (formula "22") (term "0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "22") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "applyEq" (formula "1") (term "0") (ifseqformula "22"))
                                 (rule "leq_literals" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "applyEq" (formula "22") (term "1,1") (ifseqformula "21"))
                                 (rule "seqDef_lower_equals_upper" (formula "22") (term "1"))
                                 (rule "eqSeqEmpty" (formula "22"))
                                 (rule "close" (formula "29") (ifseqformula "22"))
                              )
                           )
                           (branch
                              (rule "eqSymm" (formula "21") (userinteraction))
                              (rule "cut" (inst "cutFormula=  array2seq(heapAfter_getSignature_0, tagged_payload)
= seqDef{int u;}(Z(0(#)),
                 length(tagged_payload),
                 any::select(heapAfter_getSignature_0,
                             tagged_payload,
                             arr(u)))") (userinteraction))
                              (branch "CUT: array2seq(heapAfter_getSignature_0, tagged_payload) = seqDef{int u;}(0, tagged_payload.length, tagged_payload.arr(u)@heapAfter_getSignature_0) TRUE"
                                 (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "1") (userinteraction))
                                 (rule "equalityToSeqGetAndSeqLenLeft" (formula "22") (inst "iv=iv") (userinteraction))
                                 (rule "andLeft" (formula "22") (userinteraction))
                                 (rule "allRight" (formula "31") (inst "sk=iv_22") (userinteraction))
                                 (rule "orRight" (formula "31") (userinteraction))
                                 (rule "orRight" (formula "31") (userinteraction))
                                 (rule "allLeftHide" (formula "23") (inst "t=iv_22") (userinteraction))
                                 (rule "impLeft" (formula "23") (userinteraction))
                                 (branch
                                    (rule "andRight" (formula "25") (userinteraction))
                                    (branch "Case 1"
                                       (rule "hide_right" (formula "33") (userinteraction))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "1") (ifseqformula "19"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "1") (ifseqformula "10"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,1") (ifseqformula "10"))
                                       (rule "eqSymm" (formula "17") (term "0,1"))
                                       (rule "eqSymm" (formula "13"))
                                       (rule "eqSymm" (formula "1"))
                                       (rule "eqSymm" (formula "17"))
                                       (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "30"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "27"))
                                       (builtin "One Step Simplification" (formula "12"))
                                       (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "26"))
                                       (builtin "One Step Simplification" (formula "21"))
                                       (rule "inEqSimp_leqRight" (formula "32"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_leqRight" (formula "26"))
                                       (rule "add_zero_right" (formula "1") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                       (rule "inEqSimp_leqRight" (formula "32"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "applyEq" (formula "20") (term "1") (ifseqformula "5"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "mul_literals" (formula "3") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                    (branch "Case 2"
                                       (rule "hide_right" (formula "33") (userinteraction))
                                       (rule "leq_to_geq" (formula "32") (userinteraction))
                                       (rule "geq_to_lt" (formula "32") (userinteraction))
                                       (rule "notRight" (formula "32") (userinteraction))
                                       (rule "close" (formula "26") (ifseqformula "1") (userinteraction))
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "applyEq" (formula "33") (term "0") (ifseqformula "23") (userinteraction))
                                    (rule "getOfArray2seq" (formula "33") (term "0") (userinteraction))
                                    (branch
                                       (rule "ifthenelse_split" (formula "33") (term "1") (userinteraction))
                                       (branch "iv_22 ≥ 0 ∧ iv_22 ≤ -1 + result_3.length TRUE"
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "closeTrue" (formula "34") (userinteraction))
                                       )
                                       (branch
                                          (rule "andRight" (formula "33") (newnames "x_0,x_0,x_0,x_0,x_0,x_0,x_0,x_0,x_0,x_0,x_0") (userinteraction))
                                          (branch "Case 1"
                                             (rule "geq_to_lt" (formula "33") (userinteraction))
                                             (rule "notRight" (formula "33") (userinteraction))
                                             (rule "inEqSimp_leqRight" (formula "32") (userinteraction))
                                             (rule "mul_literals" (formula "1") (term "1,0,0") (userinteraction))
                                             (rule "add_literals" (formula "1") (term "0,0") (userinteraction))
                                             (rule "add_zero_left" (formula "1") (term "0") (userinteraction))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "1") (ifseqformula "21"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "1") (ifseqformula "12"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "0,1") (ifseqformula "12"))
                                             (rule "eqSymm" (formula "19") (term "0,1"))
                                             (rule "eqSymm" (formula "15"))
                                             (rule "eqSymm" (formula "3"))
                                             (rule "eqSymm" (formula "19"))
                                             (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "32"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "29"))
                                             (builtin "One Step Simplification" (formula "14"))
                                             (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "28"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "inEqSimp_leqRight" (formula "33"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "3"))
                                             (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "3") (term "0,0"))
                                             (rule "applyEq" (formula "20") (term "1") (ifseqformula "5"))
                                             (builtin "One Step Simplification" (formula "20"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                             (rule "mul_literals" (formula "3") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "3") (term "0"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "closeFalse" (formula "3"))
                                          )
                                          (branch "Case 2"
                                             (rule "lenOfArray2seq" (formula "22") (term "1") (userinteraction))
                                             (rule "applyEq" (formula "32") (term "0") (ifseqformula "22") (userinteraction))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "1") (ifseqformula "19"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "1") (ifseqformula "10"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,1") (ifseqformula "10"))
                                             (rule "eqSymm" (formula "13"))
                                             (rule "eqSymm" (formula "17"))
                                             (rule "eqSymm" (formula "1"))
                                             (rule "eqSymm" (formula "17") (term "0,0"))
                                             (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "30"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "27"))
                                             (builtin "One Step Simplification" (formula "12"))
                                             (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "21"))
                                             (rule "inEqSimp_leqRight" (formula "32"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_leqRight" (formula "32"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_leqRight" (formula "33"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "1") (term "0"))
                                             (rule "applyEq" (formula "20") (term "1") (ifseqformula "5"))
                                             (builtin "One Step Simplification" (formula "20"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                             (rule "mul_literals" (formula "3") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0"))
                                             (rule "add_literals" (formula "1") (term "0"))
                                             (rule "leq_literals" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "1") (ifseqformula "19"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "1") (ifseqformula "10"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,1") (ifseqformula "10"))
                                       (rule "eqSymm" (formula "34"))
                                       (rule "eqSymm" (formula "17") (term "0,1"))
                                       (rule "eqSymm" (formula "1"))
                                       (rule "eqSymm" (formula "13"))
                                       (rule "eqSymm" (formula "17"))
                                       (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "30"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "27"))
                                       (builtin "One Step Simplification" (formula "12"))
                                       (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "26"))
                                       (builtin "One Step Simplification" (formula "21"))
                                       (rule "inEqSimp_leqRight" (formula "31"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "inEqSimp_leqRight" (formula "32"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "33") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1"))
                                       (rule "polySimp_addComm1" (formula "33") (term "0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "33") (term "0"))
                                       (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "inEqSimp_leqRight" (formula "33"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "34") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "34") (term "0,0,0"))
                                       (rule "applyEq" (formula "20") (term "1") (ifseqformula "5"))
                                       (builtin "One Step Simplification" (formula "20"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "34") (term "1,0,0"))
                                       (rule "mul_literals" (formula "34") (term "0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0"))
                                       (rule "inEqSimp_contradInEq0" (formula "34") (term "0,0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "34") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "34") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "34") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "34") (term "0,0,0,0"))
                                       (rule "leq_literals" (formula "34") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "eqSymm" (formula "34"))
                                       (rule "array2seqDef" (formula "25") (term "0,1") (inst "u=u"))
                                       (rule "lenOfSeqDef" (formula "25") (term "1"))
                                       (rule "polySimp_elimSub" (formula "25") (term "1,1"))
                                       (rule "mul_literals" (formula "25") (term "1,1,1"))
                                       (rule "add_zero_right" (formula "25") (term "1,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1"))
                                       (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "0,0,1"))
                                       (rule "polySimp_elimOne" (formula "25") (term "0,0,1"))
                                       (rule "array2seqDef" (formula "27") (term "1") (inst "u=u"))
                                       (rule "array2seqDef" (formula "26") (term "0,1") (inst "u=u"))
                                       (rule "getOfSeqDef" (formula "26") (term "1"))
                                       (rule "castDel" (formula "26") (term "2,1"))
                                       (rule "castDel" (formula "26") (term "1,1"))
                                       (rule "add_zero_right" (formula "26") (term "0,2,1,1"))
                                       (rule "polySimp_elimSub" (formula "26") (term "1,1,0,1"))
                                       (rule "times_zero_2" (formula "26") (term "1,1,1,0,1"))
                                       (rule "add_zero_right" (formula "26") (term "1,1,0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,1"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,1"))
                                       (rule "polySimp_addComm1" (formula "26") (term "0,1,0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,1"))
                                       (rule "replace_known_left" (formula "26") (term "0,0,1") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "26"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "0,0,1"))
                                       (rule "polySimp_elimOne" (formula "26") (term "0,0,1"))
                                       (rule "inEqSimp_contradInEq0" (formula "26") (term "0,1") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0,1"))
                                       (rule "add_literals" (formula "26") (term "1,1,0,0,0,1"))
                                       (rule "times_zero_1" (formula "26") (term "1,0,0,0,1"))
                                       (rule "add_zero_right" (formula "26") (term "0,0,0,1"))
                                       (rule "leq_literals" (formula "26") (term "0,0,1"))
                                       (builtin "One Step Simplification" (formula "26"))
                                       (rule "array2seqDef" (formula "4") (term "1") (inst "u=u"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "array2seqDef" (formula "15") (term "1") (inst "u=u"))
                                       (rule "eqSymm" (formula "15"))
                                       (rule "array2seqDef" (formula "19") (term "0") (inst "u=u"))
                                       (rule "array2seqDef" (formula "19") (term "1") (inst "u=u"))
                                       (rule "array2seqDef" (formula "33") (term "0,0") (inst "u=u"))
                                       (rule "getOfSeqDef" (formula "33") (term "0"))
                                       (rule "castDel" (formula "33") (term "1,0"))
                                       (rule "castDel" (formula "33") (term "2,0"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "add_zero_right" (formula "33") (term "0,2,0,1"))
                                       (rule "orRight" (formula "33"))
                                       (rule "notRight" (formula "33"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "polySimp_elimSub" (formula "2") (term "1"))
                                       (rule "times_zero_2" (formula "2") (term "1,1"))
                                       (rule "add_zero_right" (formula "2") (term "1"))
                                       (rule "inEqSimp_ltToLeq" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                       (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0"))
                                       (rule "add_zero_right" (formula "2") (term "0"))
                                       (rule "leq_literals" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                 )
                              )
                              (branch "CUT: array2seq(heapAfter_getSignature_0, tagged_payload) = seqDef{int u;}(0, tagged_payload.length, tagged_payload.arr(u)@heapAfter_getSignature_0) FALSE"
                                 (rule "hide_right" (formula "29") (userinteraction))
                                 (rule "equalityToSeqGetAndSeqLenRight" (formula "23") (inst "iv=iv") (userinteraction))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "1") (ifseqformula "18"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "1") (ifseqformula "9"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "0,1") (ifseqformula "9"))
                                 (rule "eqSymm" (formula "16"))
                                 (rule "eqSymm" (formula "23") (term "1,0,1"))
                                 (rule "eqSymm" (formula "23") (term "0"))
                                 (rule "eqSymm" (formula "12"))
                                 (rule "eqSymm" (formula "16") (term "0,0"))
                                 (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "28"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "25"))
                                 (builtin "One Step Simplification" (formula "11"))
                                 (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "24"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "getOfSeqDef" (formula "23") (term "0,1,0,1"))
                                 (rule "castDel" (formula "23") (term "1,0,1,0,1"))
                                 (rule "castDel" (formula "23") (term "2,0,1,0,1"))
                                 (rule "add_zero_right" (formula "23") (term "0,2,1,0,1,0,1"))
                                 (rule "polySimp_elimSub" (formula "23") (term "1,1,0,0,1,0,1"))
                                 (rule "times_zero_2" (formula "23") (term "1,1,1,0,0,1,0,1"))
                                 (rule "add_zero_right" (formula "23") (term "1,1,0,0,1,0,1"))
                                 (rule "lenOfSeqDef" (formula "23") (term "0,0"))
                                 (rule "polySimp_elimSub" (formula "23") (term "1,0,0"))
                                 (rule "mul_literals" (formula "23") (term "1,1,0,0"))
                                 (rule "add_zero_right" (formula "23") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,1,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                                 (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,1,0,1"))
                                 (rule "applyEq" (formula "16") (term "1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,1"))
                                 (rule "mul_literals" (formula "23") (term "0,1,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,1,0,1"))
                                 (rule "mul_literals" (formula "23") (term "0,1,1,0,0,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,1,0,1"))
                                 (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,1,0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "23") (term "0,0,0,0"))
                                 (rule "inEqSimp_subsumption1" (formula "23") (term "0,0,0") (ifseqformula "2"))
                                 (rule "leq_literals" (formula "23") (term "0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "eqSymm" (formula "23") (term "0"))
                                 (rule "array2seqDef" (formula "21") (term "0,0") (inst "u=u"))
                                 (rule "array2seqDef" (formula "21") (term "1") (inst "u=u"))
                                 (rule "array2seqDef" (formula "12") (term "1") (inst "u=u"))
                                 (rule "eqSymm" (formula "12"))
                                 (rule "array2seqDef" (formula "16") (term "1") (inst "u=u"))
                                 (rule "eqSymm" (formula "16"))
                                 (rule "array2seqDef" (formula "23") (term "0,1,1,1,0,0,1") (inst "u=u"))
                                 (rule "lenOfSeqDef" (formula "23") (term "1,1,1,0,0,1"))
                                 (rule "polySimp_elimSub" (formula "23") (term "1,1,1,1,0,0,1"))
                                 (rule "times_zero_2" (formula "23") (term "1,1,1,1,1,0,0,1"))
                                 (rule "add_zero_right" (formula "23") (term "1,1,1,1,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,1,1,0,0,1"))
                                 (rule "add_zero_right" (formula "23") (term "0,0,1,1,1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,1,1,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,1,1,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "0,0,1,1,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "23") (term "0,0,1,1,1,0,0,1"))
                                 (rule "inEqSimp_subsumption1" (formula "23") (term "0,1,1,1,0,0,1") (ifseqformula "2"))
                                 (rule "leq_literals" (formula "23") (term "0,0,1,1,1,0,0,1"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "eqSeqDef" (formula "21") (inst "iv=iv"))
                                 (rule "andLeft" (formula "21"))
                                 (rule "getOfSeqDef" (formula "22") (term "1,1,0"))
                                 (rule "castDel" (formula "22") (term "2,1,1,0"))
                                 (rule "castDel" (formula "22") (term "1,1,1,0"))
                                 (rule "add_zero_right" (formula "22") (term "0,2,1,1,1,0"))
                                 (rule "polySimp_elimSub" (formula "22") (term "1,1,0,1,1,0"))
                                 (rule "times_zero_2" (formula "22") (term "1,1,1,0,1,1,0"))
                                 (rule "add_zero_right" (formula "22") (term "1,1,0,1,1,0"))
                                 (rule "lenOfSeqDef" (formula "21") (term "1"))
                                 (rule "polySimp_elimSub" (formula "21") (term "1,1"))
                                 (rule "times_zero_2" (formula "21") (term "1,1,1"))
                                 (rule "add_zero_right" (formula "21") (term "1,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1"))
                                 (rule "add_zero_right" (formula "21") (term "0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,1,1,0"))
                                 (rule "apply_eq_monomials" (formula "22") (term "1,0,1,0,0") (ifseqformula "21"))
                                 (rule "polySimp_rightDist" (formula "22") (term "0,1,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0,1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "22") (term "1,0,1,0,0"))
                                 (rule "add_literals" (formula "22") (term "1,1,1,0,1,0,0"))
                                 (rule "times_zero_1" (formula "22") (term "1,1,0,1,0,0"))
                                 (rule "add_zero_right" (formula "22") (term "1,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,1,0,1,1,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,1,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "0,0,1"))
                                 (rule "polySimp_elimOne" (formula "21") (term "0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,1,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "0,0,1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "0,0,1,1,1,0,0"))
                                 (rule "array2seqDef" (formula "12") (term "0,1") (inst "u=u"))
                                 (rule "eqSymm" (formula "12"))
                                 (rule "array2seqDef" (formula "16") (term "1") (inst "u=u"))
                                 (rule "eqSymm" (formula "16"))
                                 (rule "array2seqDef" (formula "24") (term "0,1,1,0,1") (inst "u=u"))
                                 (rule "eqSymm" (formula "24") (term "1,0,1"))
                                 (rule "getOfSeqDef" (formula "24") (term "0,1,0,1"))
                                 (rule "castDel" (formula "24") (term "2,0,1,0,1"))
                                 (rule "castDel" (formula "24") (term "1,0,1,0,1"))
                                 (rule "add_zero_right" (formula "24") (term "0,2,1,0,1,0,1"))
                                 (rule "polySimp_elimSub" (formula "24") (term "1,1,0,0,1,0,1"))
                                 (rule "mul_literals" (formula "24") (term "1,1,1,0,0,1,0,1"))
                                 (rule "add_zero_right" (formula "24") (term "1,1,0,0,1,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0,1"))
                                 (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,0,1"))
                                 (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,0,1"))
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "eqSeqDef" (formula "12") (inst "iv=iv"))
                                 (rule "andLeft" (formula "12"))
                                 (rule "getOfSeqDef" (formula "13") (term "1,1,0"))
                                 (rule "castDel" (formula "13") (term "1,1,1,0"))
                                 (rule "castDel" (formula "13") (term "2,1,1,0"))
                                 (rule "add_zero_right" (formula "13") (term "0,2,1,1,1,0"))
                                 (rule "polySimp_elimSub" (formula "13") (term "1,1,0,1,1,0"))
                                 (rule "mul_literals" (formula "13") (term "1,1,1,0,1,1,0"))
                                 (rule "add_zero_right" (formula "13") (term "1,1,0,1,1,0"))
                                 (rule "lenOfSeqDefEQ" (formula "12") (term "1") (ifseqformula "17"))
                                 (rule "polySimp_elimSub" (formula "12") (term "1,1"))
                                 (rule "times_zero_2" (formula "12") (term "1,1,1"))
                                 (rule "add_zero_right" (formula "12") (term "1,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "12") (term "0,1"))
                                 (rule "apply_eq_monomials" (formula "13") (term "1,0,1,0,0") (ifseqformula "12"))
                                 (rule "polySimp_rightDist" (formula "13") (term "0,1,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "13") (term "1,0,1,0,0"))
                                 (rule "add_literals" (formula "13") (term "1,1,1,0,1,0,0"))
                                 (rule "times_zero_1" (formula "13") (term "1,1,0,1,0,0"))
                                 (rule "add_zero_right" (formula "13") (term "1,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,1,0,1,1,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,1,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                 (rule "eqSeqDef" (formula "17") (inst "iv=iv"))
                                 (rule "andLeft" (formula "17"))
                                 (rule "getOfSeqDef" (formula "18") (term "1,1,0"))
                                 (rule "castDel" (formula "18") (term "2,1,1,0"))
                                 (rule "castDel" (formula "18") (term "1,1,1,0"))
                                 (rule "add_zero_right" (formula "18") (term "0,2,1,1,1,0"))
                                 (rule "polySimp_elimSub" (formula "18") (term "1,1,0,1,1,0"))
                                 (rule "times_zero_2" (formula "18") (term "1,1,1,0,1,1,0"))
                                 (rule "add_zero_right" (formula "18") (term "1,1,0,1,1,0"))
                                 (rule "lenOfSeqDef" (formula "18") (term "1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "18") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "18") (term "1,1,1,1,0,0"))
                                 (rule "add_zero_right" (formula "18") (term "1,1,1,0,0"))
                                 (rule "lenOfSeqDef" (formula "17") (term "0"))
                                 (rule "eqSymm" (formula "17"))
                                 (rule "polySimp_elimSub" (formula "17") (term "1,1"))
                                 (rule "times_zero_2" (formula "17") (term "1,1,1"))
                                 (rule "add_zero_right" (formula "17") (term "1,1"))
                                 (rule "getOfSeqDef" (formula "18") (term "0,1,0"))
                                 (rule "castDel" (formula "18") (term "1,0,1,0"))
                                 (rule "castDel" (formula "18") (term "2,0,1,0"))
                                 (rule "add_zero_right" (formula "18") (term "0,2,1,0,1,0"))
                                 (rule "polySimp_elimSub" (formula "18") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_2" (formula "18") (term "1,1,1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "18") (term "1,1,0,0,1,0"))
                                 (rule "lenOfSeqDef" (formula "17") (term "0"))
                                 (rule "eqSymm" (formula "17"))
                                 (rule "polySimp_elimSub" (formula "17") (term "1,1"))
                                 (rule "times_zero_2" (formula "17") (term "1,1,1"))
                                 (rule "add_zero_right" (formula "17") (term "1,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1,1,0,0"))
                                 (rule "add_zero_right" (formula "18") (term "0,0,1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1"))
                                 (rule "add_zero_right" (formula "17") (term "0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0"))
                                 (rule "add_zero_right" (formula "17") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,1,0"))
                                 (rule "apply_eq_monomials" (formula "18") (term "1,0,0,1,0,0") (ifseqformula "17"))
                                 (rule "polySimp_rightDist" (formula "18") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "1,0,1,0,0,1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "18") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "18") (term "1,1,1,0,0,1,0,0"))
                                 (rule "times_zero_1" (formula "18") (term "1,1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "18") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,1,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,1,1,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,1,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "0,0,1"))
                                 (rule "polySimp_elimOne" (formula "17") (term "0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,1,0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,1,0,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "0,0,0,1,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                 (rule "array2seqDef" (formula "26") (term "0,0") (inst "u=u"))
                                 (rule "lenOfSeqDef" (formula "26") (term "0"))
                                 (rule "polySimp_elimSub" (formula "26") (term "1,0"))
                                 (rule "times_zero_2" (formula "26") (term "1,1,0"))
                                 (rule "add_zero_right" (formula "26") (term "1,0"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "orRight" (formula "26"))
                                 (rule "eqSymm" (formula "27"))
                                 (rule "inEqSimp_ltRight" (formula "26"))
                                 (rule "add_zero_right" (formula "1") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0"))
                                 (rule "inEqSimp_invertInEq1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "times_zero_2" (formula "1") (term "1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_contradEq7" (formula "27") (ifseqformula "3"))
                                 (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "27") (term "0,0"))
                                 (rule "leq_literals" (formula "27") (term "0"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "false_right" (formula "27"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "1") (term "0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "1") (ifseqformula "9"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "1") (ifseqformula "18"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "0,1") (ifseqformula "9"))
                           (rule "eqSymm" (formula "16"))
                           (rule "eqSymm" (formula "21"))
                           (rule "eqSymm" (formula "12"))
                           (rule "eqSymm" (formula "16") (term "0,0"))
                           (rule "replace_known_right" (formula "28") (term "0,1") (ifseqformula "23"))
                           (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "22")))
                           (rule "closeTrue" (formula "28"))
                        )
                     )
                  )
                  (branch "Case 2"
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "1") (ifseqformula "9"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "1") (ifseqformula "18"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "0,1") (ifseqformula "9"))
                     (rule "allRight" (formula "28") (inst "sk=f_14"))
                     (rule "allRight" (formula "28") (inst "sk=o_14"))
                     (rule "orRight" (formula "28"))
                     (rule "eqSymm" (formula "12"))
                     (rule "eqSymm" (formula "21"))
                     (rule "eqSymm" (formula "16") (term "0,1"))
                     (rule "eqSymm" (formula "29"))
                     (rule "eqSymm" (formula "16"))
                     (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "27"))
                     (builtin "One Step Simplification" (formula "5"))
                     (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "24"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "23"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "applyEq" (formula "16") (term "1") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "array2seqDef" (formula "12") (term "0,0") (inst "u=u"))
                     (rule "array2seqDef" (formula "12") (term "1") (inst "u=u"))
                     (rule "array2seqDef" (formula "21") (term "1") (inst "u=u"))
                     (rule "eqSymm" (formula "21"))
                     (rule "array2seqDef" (formula "16") (term "1") (inst "u=u"))
                     (rule "eqSymm" (formula "16"))
                     (rule "eqSeqDef" (formula "12") (inst "iv=iv"))
                     (rule "andLeft" (formula "12"))
                     (rule "getOfSeqDef" (formula "13") (term "1,1,0"))
                     (rule "castDel" (formula "13") (term "1,1,1,0"))
                     (rule "castDel" (formula "13") (term "2,1,1,0"))
                     (rule "add_zero_right" (formula "13") (term "0,2,1,1,1,0"))
                     (rule "polySimp_elimSub" (formula "13") (term "1,1,0,1,1,0"))
                     (rule "times_zero_2" (formula "13") (term "1,1,1,0,1,1,0"))
                     (rule "add_zero_right" (formula "13") (term "1,1,0,1,1,0"))
                     (rule "lenOfSeqDef" (formula "12") (term "1"))
                     (rule "polySimp_elimSub" (formula "12") (term "1,1"))
                     (rule "mul_literals" (formula "12") (term "1,1,1"))
                     (rule "add_zero_right" (formula "12") (term "1,1"))
                     (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                     (rule "polySimp_addComm1" (formula "13") (term "0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "12") (term "0,1"))
                     (rule "add_zero_right" (formula "12") (term "0,0,1"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,1,1,0"))
                     (rule "apply_eq_monomials" (formula "13") (term "1,0,1,0,0") (ifseqformula "12"))
                     (rule "polySimp_rightDist" (formula "13") (term "0,1,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,0,1,0,1,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "13") (term "1,0,1,0,0"))
                     (rule "add_literals" (formula "13") (term "1,1,1,0,1,0,0"))
                     (rule "times_zero_1" (formula "13") (term "1,1,0,1,0,0"))
                     (rule "add_zero_right" (formula "13") (term "1,0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,0,0"))
                     (rule "polySimp_addComm1" (formula "13") (term "0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,1,0,1,1,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,1,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,1,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "0,0,1"))
                     (rule "polySimp_elimOne" (formula "12") (term "0,0,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0,1,0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,1,0,0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "0,0,0,1,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                     (rule "array2seqDef" (formula "22") (term "0,1") (inst "u=u"))
                     (rule "eqSymm" (formula "22"))
                     (rule "array2seqDef" (formula "17") (term "1") (inst "u=u"))
                     (rule "eqSymm" (formula "17"))
                     (rule "eqSeqDef" (formula "22") (inst "iv=iv"))
                     (rule "andLeft" (formula "22"))
                     (rule "lenOfSeqDef" (formula "22") (term "1"))
                     (rule "polySimp_elimSub" (formula "22") (term "1,1"))
                     (rule "times_zero_2" (formula "22") (term "1,1,1"))
                     (rule "add_zero_right" (formula "22") (term "1,1"))
                     (rule "getOfSeqDef" (formula "23") (term "1,1,0"))
                     (rule "castDel" (formula "23") (term "1,1,1,0"))
                     (rule "castDel" (formula "23") (term "2,1,1,0"))
                     (rule "add_zero_right" (formula "23") (term "0,2,1,1,1,0"))
                     (rule "polySimp_elimSub" (formula "23") (term "1,1,0,1,1,0"))
                     (rule "times_zero_2" (formula "23") (term "1,1,1,0,1,1,0"))
                     (rule "add_zero_right" (formula "23") (term "1,1,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                     (rule "polySimp_addComm1" (formula "23") (term "0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1"))
                     (rule "add_zero_right" (formula "22") (term "0,0,1"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,1,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,1,1,0"))
                     (rule "apply_eq_monomials" (formula "23") (term "1,0,1,0,0") (ifseqformula "22"))
                     (rule "polySimp_rightDist" (formula "23") (term "0,1,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,1,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "23") (term "1,0,1,0,0"))
                     (rule "add_literals" (formula "23") (term "1,1,1,0,1,0,0"))
                     (rule "times_zero_1" (formula "23") (term "1,1,0,1,0,0"))
                     (rule "add_zero_right" (formula "23") (term "1,0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0,0"))
                     (rule "polySimp_addComm1" (formula "23") (term "0,1,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "0,0,1"))
                     (rule "polySimp_elimOne" (formula "22") (term "0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "23") (term "1,1,0,1,1,0"))
                     (rule "mul_literals" (formula "23") (term "0,1,1,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,1,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0,1,0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,1,0,0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "23") (term "0,0,0,1,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                     (rule "eqSeqDef" (formula "17") (inst "iv=iv"))
                     (rule "andLeft" (formula "17"))
                     (rule "lenOfSeqDef" (formula "17") (term "0"))
                     (rule "eqSymm" (formula "17"))
                     (rule "polySimp_elimSub" (formula "17") (term "1,1"))
                     (rule "times_zero_2" (formula "17") (term "1,1,1"))
                     (rule "add_zero_right" (formula "17") (term "1,1"))
                     (rule "getOfSeqDef" (formula "18") (term "0,1,0"))
                     (rule "castDel" (formula "18") (term "1,0,1,0"))
                     (rule "castDel" (formula "18") (term "2,0,1,0"))
                     (rule "add_zero_right" (formula "18") (term "0,2,1,0,1,0"))
                     (rule "eqSymm" (formula "18") (term "1,0"))
                     (rule "polySimp_elimSub" (formula "18") (term "1,1,0,1,1,0"))
                     (rule "mul_literals" (formula "18") (term "1,1,1,0,1,1,0"))
                     (rule "add_zero_right" (formula "18") (term "1,1,0,1,1,0"))
                     (rule "lenOfSeqDef" (formula "18") (term "1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "18") (term "1,1,1,0,0"))
                     (rule "times_zero_2" (formula "18") (term "1,1,1,1,0,0"))
                     (rule "add_zero_right" (formula "18") (term "1,1,1,0,0"))
                     (rule "lenOfSeqDef" (formula "17") (term "0"))
                     (rule "eqSymm" (formula "17"))
                     (rule "polySimp_elimSub" (formula "17") (term "1,1"))
                     (rule "times_zero_2" (formula "17") (term "1,1,1"))
                     (rule "add_zero_right" (formula "17") (term "1,1"))
                     (rule "getOfSeqDef" (formula "18") (term "0,1,0"))
                     (rule "castDel" (formula "18") (term "1,0,1,0"))
                     (rule "castDel" (formula "18") (term "2,0,1,0"))
                     (rule "add_zero_right" (formula "18") (term "0,2,1,0,1,0"))
                     (rule "eqSymm" (formula "18") (term "1,0"))
                     (rule "polySimp_elimSub" (formula "18") (term "1,1,0,1,1,0"))
                     (rule "times_zero_2" (formula "18") (term "1,1,1,0,1,1,0"))
                     (rule "add_zero_right" (formula "18") (term "1,1,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1,1,0,0"))
                     (rule "add_zero_right" (formula "18") (term "0,0,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0"))
                     (rule "add_zero_right" (formula "17") (term "0,0,0"))
                     (rule "eqSymm" (formula "17"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,1,0"))
                     (rule "eqSymm" (formula "18") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0"))
                     (rule "add_zero_right" (formula "17") (term "0,0,0"))
                     (rule "eqSymm" (formula "17"))
                     (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,1,0"))
                     (rule "eqSymm" (formula "18") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,1,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,1,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,1,0"))
                     (rule "apply_eq_monomials" (formula "18") (term "1,0,0,1,0,0") (ifseqformula "17"))
                     (rule "polySimp_rightDist" (formula "18") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0,0,1,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "18") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "18") (term "1,1,1,0,0,1,0,0"))
                     (rule "times_zero_1" (formula "18") (term "1,1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "18") (term "1,0,0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0"))
                     (rule "eqSymm" (formula "17"))
                     (rule "polySimp_elimOne" (formula "17") (term "0,0,1"))
                     (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0") (ifseqformula "17"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1,0"))
                     (rule "eqSymm" (formula "18") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "18") (term "1,1,0,1,1,0"))
                     (rule "mul_literals" (formula "18") (term "0,1,1,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,1,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0"))
                     (rule "eqSymm" (formula "17"))
                     (rule "polySimp_elimOne" (formula "17") (term "0,0,1"))
                     (rule "apply_eq_monomials" (formula "18") (term "1,0,0,1,0,0") (ifseqformula "17"))
                     (rule "polySimp_rightDist" (formula "18") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0,0,1,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "18") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "18") (term "1,1,1,0,0,1,0,0"))
                     (rule "times_zero_1" (formula "18") (term "1,1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "18") (term "1,0,0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1,0"))
                     (rule "eqSymm" (formula "18") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "18") (term "1,1,0,1,1,0"))
                     (rule "mul_literals" (formula "18") (term "0,1,1,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                     (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=f_14_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "10"))
                     (rule "eqSymm" (formula "33"))
                     (rule "pullOutSelect" (formula "18") (term "0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_Tag_BALLOTS_10"))
                     (rule "applyEq" (formula "19") (term "0,1,0") (ifseqformula "18"))
                     (rule "applyEq" (formula "20") (term "0,1,1,1,0,0,1,0") (ifseqformula "18"))
                     (rule "applyEq" (formula "20") (term "1,1,0,1,0") (ifseqformula "18"))
                     (rule "simplifySelectOfAnonEQ" (formula "18") (ifseqformula "10"))
                     (builtin "One Step Simplification" (formula "18"))
                     (rule "applyEqReverse" (formula "19") (term "0,1,0") (ifseqformula "18"))
                     (rule "applyEqReverse" (formula "19") (term "0,0,0,0") (ifseqformula "18"))
                     (rule "applyEqReverse" (formula "20") (term "0,1,1,1,0,0,1,0") (ifseqformula "18"))
                     (rule "applyEqReverse" (formula "20") (term "1,1,0,1,0") (ifseqformula "18"))
                     (rule "hideAuxiliaryEq" (formula "18"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_14_1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "nnf_imp2or" (formula "14") (term "0"))
                     (rule "nnf_imp2or" (formula "25") (term "0"))
                     (rule "nnf_imp2or" (formula "19") (term "0"))
                     (rule "nnf_notAnd" (formula "14") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                     (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                     (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "25") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                     (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "25") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                     (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "19") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                     (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                     (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                     (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "8") (ifseqformula "5"))
                     (rule "andLeft" (formula "8"))
                     (rule "notLeft" (formula "9"))
                     (rule "andLeft" (formula "8"))
                     (rule "notLeft" (formula "9"))
                     (rule "andLeft" (formula "8"))
                     (rule "andLeft" (formula "8"))
                     (rule "notLeft" (formula "10"))
                     (rule "notLeft" (formula "9"))
                     (rule "andLeft" (formula "8"))
                     (rule "andLeft" (formula "8"))
                     (rule "andLeft" (formula "8"))
                     (rule "andLeft" (formula "8"))
                     (rule "andLeft" (formula "8"))
                     (rule "andLeft" (formula "8"))
                     (rule "andLeft" (formula "8"))
                     (rule "notLeft" (formula "8"))
                     (rule "notLeft" (formula "8"))
                     (rule "nonNull" (formula "13") (inst "i=i"))
                     (rule "greater_literals" (formula "13") (term "0,1"))
                     (builtin "One Step Simplification" (formula "13"))
                     (rule "sub_literals" (formula "13") (term "2,1,0,1"))
                     (builtin "One Step Simplification" (formula "13"))
                     (rule "andLeft" (formula "13"))
                     (rule "notLeft" (formula "13"))
                     (rule "narrowSelectArrayType" (formula "13") (term "0,0,1,0") (ifseqformula "21") (ifseqformula "32"))
                     (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "12") (inst "i=i"))
                     (rule "greater_literals" (formula "12") (term "0,1"))
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "sub_literals" (formula "12") (term "2,1,0,1"))
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "andLeft" (formula "12"))
                     (rule "notLeft" (formula "12"))
                     (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "21") (ifseqformula "32"))
                     (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "11") (inst "i=i"))
                     (rule "greater_literals" (formula "11") (term "0,1"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "sub_literals" (formula "11") (term "2,1,0,1"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "andLeft" (formula "11"))
                     (rule "notLeft" (formula "11"))
                     (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "21") (ifseqformula "32"))
                     (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "10") (inst "i=i"))
                     (rule "greater_literals" (formula "10") (term "0,1"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "sub_literals" (formula "10") (term "2,1,0,1"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "notLeft" (formula "10"))
                     (rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "21") (ifseqformula "32"))
                     (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "9") (inst "i=i"))
                     (rule "sub_literals" (formula "9") (term "2,1,0,1,1"))
                     (builtin "One Step Simplification" (formula "9"))
                     (rule "greater_literals" (formula "9") (term "0,1"))
                     (builtin "One Step Simplification" (formula "9"))
                     (rule "andLeft" (formula "9"))
                     (rule "notLeft" (formula "9"))
                     (rule "narrowSelectArrayType" (formula "9") (term "0,0,1,0") (ifseqformula "21") (ifseqformula "32"))
                     (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "8") (inst "i=i"))
                     (rule "sub_literals" (formula "8") (term "2,1,0,1,1"))
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "greater_literals" (formula "8") (term "0,1"))
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "andLeft" (formula "8"))
                     (rule "notLeft" (formula "8"))
                     (rule "narrowSelectArrayType" (formula "8") (term "0,0,1,0") (ifseqformula "21") (ifseqformula "32"))
                     (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
                     (rule "nnf_imp2or" (formula "13") (term "0"))
                     (rule "nnf_imp2or" (formula "12") (term "0"))
                     (rule "nnf_imp2or" (formula "11") (term "0"))
                     (rule "nnf_imp2or" (formula "10") (term "0"))
                     (rule "nnf_imp2or" (formula "9") (term "0"))
                     (rule "nnf_imp2or" (formula "8") (term "0"))
                     (rule "nnf_notAnd" (formula "13") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                     (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                     (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "12") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                     (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                     (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "11") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
                     (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "11") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                     (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "10") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                     (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "9") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
                     (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "9") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                     (rule "mul_literals" (formula "9") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "8") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
                     (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                     (rule "mul_literals" (formula "8") (term "1,0,0,0"))
                     (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "31") (ifseqformula "5"))
                     (rule "andLeft" (formula "31"))
                     (rule "notLeft" (formula "32"))
                     (rule "andLeft" (formula "31"))
                     (rule "notLeft" (formula "32"))
                     (rule "andLeft" (formula "31"))
                     (rule "andLeft" (formula "31"))
                     (rule "notLeft" (formula "33"))
                     (rule "notLeft" (formula "32"))
                     (rule "andLeft" (formula "31"))
                     (rule "andLeft" (formula "31"))
                     (rule "andLeft" (formula "31"))
                     (rule "andLeft" (formula "31"))
                     (rule "andLeft" (formula "31"))
                     (rule "andLeft" (formula "31"))
                     (rule "andLeft" (formula "31"))
                     (rule "notLeft" (formula "31"))
                     (rule "notLeft" (formula "31"))
                     (rule "nonNull" (formula "36") (inst "i=i"))
                     (rule "greater_literals" (formula "36") (term "0,1"))
                     (builtin "One Step Simplification" (formula "36"))
                     (rule "sub_literals" (formula "36") (term "2,1,0,1"))
                     (builtin "One Step Simplification" (formula "36"))
                     (rule "andLeft" (formula "36"))
                     (rule "notLeft" (formula "36"))
                     (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "36") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "35") (inst "i=i"))
                     (rule "greater_literals" (formula "35") (term "0,1"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "sub_literals" (formula "35") (term "2,1,0,1"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "andLeft" (formula "35"))
                     (rule "notLeft" (formula "35"))
                     (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "35") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "34") (inst "i=i"))
                     (rule "greater_literals" (formula "34") (term "0,1"))
                     (builtin "One Step Simplification" (formula "34"))
                     (rule "sub_literals" (formula "34") (term "2,1,0,1"))
                     (builtin "One Step Simplification" (formula "34"))
                     (rule "andLeft" (formula "34"))
                     (rule "notLeft" (formula "34"))
                     (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "34") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "33") (inst "i=i"))
                     (rule "sub_literals" (formula "33") (term "2,1,0,1,1"))
                     (builtin "One Step Simplification" (formula "33"))
                     (rule "greater_literals" (formula "33") (term "0,1"))
                     (builtin "One Step Simplification" (formula "33"))
                     (rule "andLeft" (formula "33"))
                     (rule "notLeft" (formula "33"))
                     (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "32") (inst "i=i"))
                     (rule "greater_literals" (formula "32") (term "0,1"))
                     (builtin "One Step Simplification" (formula "32"))
                     (rule "sub_literals" (formula "32") (term "2,1,0,1"))
                     (builtin "One Step Simplification" (formula "32"))
                     (rule "andLeft" (formula "32"))
                     (rule "notLeft" (formula "32"))
                     (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "32") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "31") (inst "i=i"))
                     (rule "greater_literals" (formula "31") (term "0,1"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "sub_literals" (formula "31") (term "2,1,0,1"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "andLeft" (formula "31"))
                     (rule "notLeft" (formula "31"))
                     (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                     (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_13"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "16"))
                     (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")) (ifInst ""  (formula "5")))
                     (rule "applyEqReverse" (formula "49") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_13"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "63")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "16"))
                     (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "63")) (ifInst ""  (formula "5")))
                     (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_13"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "62")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "16"))
                     (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "62")) (ifInst ""  (formula "5")))
                     (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_13"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "61")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "16"))
                     (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "61")) (ifInst ""  (formula "5")))
                     (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_13"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "16"))
                     (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")) (ifInst ""  (formula "5")))
                     (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_13"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "16"))
                     (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")) (ifInst ""  (formula "5")))
                     (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "36") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_13"))
                     (rule "applyEq" (formula "43") (term "0") (ifseqformula "36"))
                     (rule "applyEq" (formula "37") (term "0,1,1,1,0,0") (ifseqformula "36"))
                     (rule "simplifySelectOfAnonEQ" (formula "36") (ifseqformula "26"))
                     (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "58")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "0,0,0") (ifseqformula "15"))
                     (rule "replace_known_left" (formula "36") (term "0,0,0,0") (ifseqformula "4"))
                     (builtin "One Step Simplification" (formula "36"))
                     (rule "simplifySelectOfAnonEQ" (formula "36") (ifseqformula "15"))
                     (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "58")) (ifInst ""  (formula "4")))
                     (rule "applyEqReverse" (formula "37") (term "1,0,0,1,0") (ifseqformula "36"))
                     (rule "applyEqReverse" (formula "37") (term "0,1,1,1,0,0") (ifseqformula "36"))
                     (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "36"))
                     (rule "hideAuxiliaryEq" (formula "36"))
                     (rule "pullOutSelect" (formula "35") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_13"))
                     (rule "applyEq" (formula "42") (term "0") (ifseqformula "35"))
                     (rule "applyEq" (formula "36") (term "0,1,1,1,0,0") (ifseqformula "35"))
                     (rule "simplifySelectOfAnonEQ" (formula "35") (ifseqformula "26"))
                     (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "57")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,0") (ifseqformula "15"))
                     (rule "replace_known_left" (formula "35") (term "0,0,0,0") (ifseqformula "4"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "simplifySelectOfAnonEQ" (formula "35") (ifseqformula "15"))
                     (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "57")) (ifInst ""  (formula "4")))
                     (rule "applyEqReverse" (formula "36") (term "0,1,1,1,0,0") (ifseqformula "35"))
                     (rule "applyEqReverse" (formula "36") (term "1,0,0,1,0") (ifseqformula "35"))
                     (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "35"))
                     (rule "hideAuxiliaryEq" (formula "35"))
                     (rule "pullOutSelect" (formula "34") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_13"))
                     (rule "applyEq" (formula "35") (term "0,1,1,1,0,0") (ifseqformula "34"))
                     (rule "applyEq" (formula "41") (term "0") (ifseqformula "34"))
                     (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "26"))
                     (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "56")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "0,0,0") (ifseqformula "15"))
                     (rule "replace_known_left" (formula "34") (term "0,0,0,0") (ifseqformula "4"))
                     (builtin "One Step Simplification" (formula "34"))
                     (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "15"))
                     (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "56")) (ifInst ""  (formula "4")))
                     (rule "applyEqReverse" (formula "35") (term "1,0,0,1,0") (ifseqformula "34"))
                     (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "34"))
                     (rule "applyEqReverse" (formula "35") (term "0,1,1,1,0,0") (ifseqformula "34"))
                     (rule "hideAuxiliaryEq" (formula "34"))
                     (rule "pullOutSelect" (formula "33") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_13"))
                     (rule "applyEq" (formula "40") (term "0") (ifseqformula "33"))
                     (rule "applyEq" (formula "34") (term "0,1,1,1,0,0") (ifseqformula "33"))
                     (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "26"))
                     (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "55")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "0,0,0") (ifseqformula "15"))
                     (rule "replace_known_left" (formula "33") (term "0,0,0,0") (ifseqformula "4"))
                     (builtin "One Step Simplification" (formula "33"))
                     (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "15"))
                     (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "55")) (ifInst ""  (formula "4")))
                     (rule "applyEqReverse" (formula "34") (term "0,1,1,1,0,0") (ifseqformula "33"))
                     (rule "applyEqReverse" (formula "34") (term "1,0,0,1,0") (ifseqformula "33"))
                     (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "33"))
                     (rule "hideAuxiliaryEq" (formula "33"))
                     (rule "pullOutSelect" (formula "32") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_13"))
                     (rule "applyEq" (formula "33") (term "0,1,1,1,0,0") (ifseqformula "32"))
                     (rule "applyEq" (formula "39") (term "0") (ifseqformula "32"))
                     (rule "simplifySelectOfAnonEQ" (formula "32") (ifseqformula "26"))
                     (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "54")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "0,0,0") (ifseqformula "15"))
                     (rule "replace_known_left" (formula "32") (term "0,0,0,0") (ifseqformula "4"))
                     (builtin "One Step Simplification" (formula "32"))
                     (rule "simplifySelectOfAnonEQ" (formula "32") (ifseqformula "15"))
                     (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "54")) (ifInst ""  (formula "4")))
                     (rule "applyEqReverse" (formula "33") (term "1,0,0,1,0") (ifseqformula "32"))
                     (rule "applyEqReverse" (formula "33") (term "0,1,1,1,0,0") (ifseqformula "32"))
                     (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "32"))
                     (rule "hideAuxiliaryEq" (formula "32"))
                     (rule "pullOutSelect" (formula "31") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_13"))
                     (rule "applyEq" (formula "38") (term "0") (ifseqformula "31"))
                     (rule "applyEq" (formula "32") (term "0,1,1,1,0,0") (ifseqformula "31"))
                     (rule "simplifySelectOfAnonEQ" (formula "31") (ifseqformula "26"))
                     (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "53")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0,0,0") (ifseqformula "15"))
                     (rule "replace_known_left" (formula "31") (term "0,0,0,0") (ifseqformula "4"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "simplifySelectOfAnonEQ" (formula "31") (ifseqformula "15"))
                     (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "53")) (ifInst ""  (formula "4")))
                     (rule "applyEqReverse" (formula "32") (term "0,1,1,1,0,0") (ifseqformula "31"))
                     (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "31"))
                     (rule "applyEqReverse" (formula "32") (term "1,0,0,1,0") (ifseqformula "31"))
                     (rule "hideAuxiliaryEq" (formula "31"))
                     (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "20") (ifseqformula "5"))
                     (rule "replaceKnownSelect_taclet1000010_6" (formula "20") (term "0,0,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000010_7" (formula "20") (term "0,0,1"))
                     (rule "replaceKnownSelect_taclet1000010_9" (formula "20") (term "0,0,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000010_10" (formula "20") (term "0,0,1,0"))
                     (rule "replaceKnownSelect_taclet1000010_12" (formula "20") (term "0,0,1,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000010_13" (formula "20") (term "0,0,1,0,0"))
                     (rule "replaceKnownSelect_taclet1000010_15" (formula "20") (term "0,0,1,0,0,0"))
                     (rule "replaceKnownSelect_taclet1000010_24" (formula "20") (term "1,1,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000010_16" (formula "20") (term "0,0,1,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000010_25" (formula "20") (term "1,1,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1000010_27" (formula "20") (term "1,1,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1000010_30" (formula "20") (term "1,1,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000010_28" (formula "20") (term "1,1,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1000010_33" (formula "20") (term "1,1,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000010_31" (formula "20") (term "1,1,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1000010_36" (formula "20") (term "1,1,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000010_34" (formula "20") (term "1,1,0,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1000010_39" (formula "20") (term "1,1,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000010_37" (formula "20") (term "1,1,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000010_40" (formula "20") (term "1,1,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1000010_18" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownSelect_taclet1000010_21" (formula "20") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000010_19" (formula "20") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000010_22" (formula "20") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                     (rule "andLeft" (formula "20"))
                     (rule "notLeft" (formula "21"))
                     (rule "andLeft" (formula "20"))
                     (rule "notLeft" (formula "21"))
                     (rule "andLeft" (formula "20"))
                     (rule "notLeft" (formula "21"))
                     (rule "andLeft" (formula "20"))
                     (rule "notLeft" (formula "21"))
                     (rule "andLeft" (formula "20"))
                     (rule "andLeft" (formula "20"))
                     (rule "andLeft" (formula "20"))
                     (rule "andLeft" (formula "20"))
                     (rule "andLeft" (formula "20"))
                     (rule "andLeft" (formula "20"))
                     (rule "andLeft" (formula "20"))
                     (rule "notLeft" (formula "21"))
                     (rule "notLeft" (formula "20"))
                     (rule "nonNull" (formula "25") (inst "i=i"))
                     (rule "sub_literals" (formula "25") (term "2,1,0,1,1"))
                     (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "47")))
                     (rule "greater_literals" (formula "25") (term "0"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "24") (inst "i=i"))
                     (rule "greater_literals" (formula "24") (term "0,1"))
                     (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "46")))
                     (rule "sub_literals" (formula "24") (term "2,1,0"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "23") (inst "i=i"))
                     (rule "greater_literals" (formula "23") (term "0,1"))
                     (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "45")))
                     (rule "sub_literals" (formula "23") (term "2,1,0"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "22") (inst "i=i"))
                     (rule "greater_literals" (formula "22") (term "0,1"))
                     (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "44")))
                     (rule "sub_literals" (formula "22") (term "2,1,0"))
                     (builtin "One Step Simplification" (formula "22"))
                     (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "21") (inst "i=i"))
                     (rule "sub_literals" (formula "21") (term "2,1,0,1,1"))
                     (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "43")))
                     (rule "greater_literals" (formula "21") (term "0"))
                     (builtin "One Step Simplification" (formula "21"))
                     (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "20") (inst "i=i"))
                     (rule "greater_literals" (formula "20") (term "0,1"))
                     (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "42")))
                     (rule "sub_literals" (formula "20") (term "2,1,0"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                     (rule "commute_or_2" (formula "19") (term "0"))
                     (rule "commute_or_2" (formula "35") (term "0"))
                     (rule "commute_or_2" (formula "29") (term "0"))
                     (rule "ifthenelse_split" (formula "18") (term "1"))
                     (branch "result_0.length ≥ 1 TRUE"
                        (rule "replace_known_left" (formula "29") (term "0,1") (ifseqformula "18"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "replace_known_left" (formula "30") (term "0,1,1,0") (ifseqformula "18"))
                        (builtin "One Step Simplification" (formula "30"))
                        (rule "replace_known_left" (formula "20") (term "0,1,1,0") (ifseqformula "18"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "cut_direct" (formula "60") (term "0,0"))
                        (branch "CUT: o_14 = null TRUE"
                           (builtin "One Step Simplification" (formula "61"))
                           (rule "false_right" (formula "61"))
                           (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "61")))
                           (rule "closeFalse" (formula "2"))
                        )
                        (branch "CUT: o_14 = null FALSE"
                           (builtin "One Step Simplification" (formula "61"))
                           (rule "notRight" (formula "61"))
                           (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "61"))
                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")) (ifInst ""  (formula "62")))
                           (rule "closeFalse" (formula "2"))
                        )
                     )
                     (branch "result_0.length ≥ 1 FALSE"
                        (rule "replace_known_right" (formula "29") (term "0,1,1,0") (ifseqformula "42"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "replace_known_right" (formula "28") (term "0,1") (ifseqformula "42"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "replace_known_right" (formula "19") (term "0,1,1,0") (ifseqformula "42"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "inEqSimp_geqRight" (formula "42"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_notGeq" (formula "29") (term "0"))
                        (rule "mul_literals" (formula "29") (term "1,0,0,0"))
                        (rule "add_literals" (formula "29") (term "0,0,0"))
                        (rule "add_zero_left" (formula "29") (term "0,0"))
                        (rule "cut_direct" (formula "60") (term "0,0"))
                        (branch "CUT: o_14 = null TRUE"
                           (builtin "One Step Simplification" (formula "61"))
                           (rule "false_right" (formula "61"))
                           (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "61")))
                           (rule "closeFalse" (formula "3"))
                        )
                        (branch "CUT: o_14 = null FALSE"
                           (builtin "One Step Simplification" (formula "61"))
                           (rule "notRight" (formula "61"))
                           (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "61"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")) (ifInst ""  (formula "62")))
                           (rule "closeFalse" (formula "3"))
                        )
                     )
                  )
               )
               (branch
                  (builtin "One Step Simplification" (formula "11"))
                  (builtin "One Step Simplification" (formula "9"))
                  (builtin "One Step Simplification" (formula "5"))
                  (rule "andLeft" (formula "3"))
                  (rule "andLeft" (formula "8"))
                  (rule "andLeft" (formula "11"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "1,0") (ifseqformula "11"))
                  (rule "andLeft" (formula "6"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "7") (term "1,1,0") (ifseqformula "6"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "13") (term "0,1,0") (ifseqformula "6"))
                  (rule "andLeft" (formula "4"))
                  (rule "andLeft" (formula "3"))
                  (rule "andLeft" (formula "12"))
                  (rule "andLeft" (formula "9"))
                  (rule "andLeft" (formula "16"))
                  (rule "notLeft" (formula "5"))
                  (rule "andLeft" (formula "5"))
                  (rule "andLeft" (formula "3"))
                  (rule "andLeft" (formula "10"))
                  (rule "typeEqDerived" (formula "12") (term "0,1,1,1,1") (ifseqformula "10"))
                  (rule "typeEqDerived" (formula "12") (term "0,1,0,1,1,1") (ifseqformula "10"))
                  (rule "typeEqDerived" (formula "12") (term "0,0,0,1,1,1") (ifseqformula "10"))
                  (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "10")) (ifInst ""  (formula "10")))
                  (rule "andLeft" (formula "19"))
                  (rule "andLeft" (formula "18"))
                  (rule "notLeft" (formula "7"))
                  (rule "andLeft" (formula "3"))
                  (rule "andLeft" (formula "12"))
                  (rule "notLeft" (formula "19"))
                  (rule "andLeft" (formula "3"))
                  (rule "andLeft" (formula "14"))
                  (rule "andLeft" (formula "3"))
                  (rule "notLeft" (formula "15"))
                  (rule "notLeft" (formula "3"))
                  (rule "eqSymm" (formula "16") (term "0,1"))
                  (rule "eqSymm" (formula "20") (term "0,1"))
                  (rule "eqSymm" (formula "12"))
                  (rule "eqSymm" (formula "16"))
                  (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "26"))
                  (builtin "One Step Simplification" (formula "5"))
                  (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "24"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "true_left" (formula "20"))
                  (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "22"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "23"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "andLeft" (formula "20"))
                  (rule "applyEq" (formula "16") (term "1") (ifseqformula "1"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "array2seqDef" (formula "12") (term "1") (inst "u=u"))
                  (rule "eqSymm" (formula "12"))
                  (rule "array2seqDef" (formula "16") (term "1") (inst "u=u"))
                  (rule "eqSymm" (formula "16"))
                  (rule "array2seqDef" (formula "12") (term "0,1") (inst "u=u"))
                  (rule "eqSymm" (formula "12"))
                  (rule "array2seqDef" (formula "16") (term "1") (inst "u=u"))
                  (rule "eqSymm" (formula "16"))
                  (rule "eqSeqDef" (formula "12") (inst "iv=iv"))
                  (rule "andLeft" (formula "12"))
                  (rule "lenOfSeqDef" (formula "12") (term "1"))
                  (rule "polySimp_elimSub" (formula "12") (term "1,1"))
                  (rule "times_zero_2" (formula "12") (term "1,1,1"))
                  (rule "add_zero_right" (formula "12") (term "1,1"))
                  (rule "getOfSeqDef" (formula "13") (term "1,1,0"))
                  (rule "castDel" (formula "13") (term "2,1,1,0"))
                  (rule "castDel" (formula "13") (term "1,1,1,0"))
                  (rule "add_zero_right" (formula "13") (term "0,2,1,1,1,0"))
                  (rule "polySimp_elimSub" (formula "13") (term "1,1,0,1,1,0"))
                  (rule "times_zero_2" (formula "13") (term "1,1,1,0,1,1,0"))
                  (rule "add_zero_right" (formula "13") (term "1,1,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                  (rule "polySimp_addComm1" (formula "13") (term "0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "12") (term "0,1"))
                  (rule "add_zero_right" (formula "12") (term "0,0,1"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,1,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,1,1,0"))
                  (rule "apply_eq_monomials" (formula "13") (term "1,0,1,0,0") (ifseqformula "12"))
                  (rule "polySimp_rightDist" (formula "13") (term "0,1,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "13") (term "1,0,1,0,1,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "13") (term "1,0,1,0,0"))
                  (rule "add_literals" (formula "13") (term "1,1,1,0,1,0,0"))
                  (rule "times_zero_1" (formula "13") (term "1,1,0,1,0,0"))
                  (rule "add_zero_right" (formula "13") (term "1,0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,0,0"))
                  (rule "polySimp_addComm1" (formula "13") (term "0,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "0,0,1"))
                  (rule "polySimp_elimOne" (formula "12") (term "0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "13") (term "1,1,0,1,1,0"))
                  (rule "mul_literals" (formula "13") (term "0,1,1,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,1,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0,1,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,1,0,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "13") (term "0,0,0,1,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                  (rule "eqSeqDef" (formula "17") (inst "iv=iv"))
                  (rule "andLeft" (formula "17"))
                  (rule "lenOfSeqDef" (formula "17") (term "0"))
                  (rule "eqSymm" (formula "17"))
                  (rule "polySimp_elimSub" (formula "17") (term "1,1"))
                  (rule "times_zero_2" (formula "17") (term "1,1,1"))
                  (rule "add_zero_right" (formula "17") (term "1,1"))
                  (rule "getOfSeqDef" (formula "18") (term "0,1,0"))
                  (rule "castDel" (formula "18") (term "2,0,1,0"))
                  (rule "castDel" (formula "18") (term "1,0,1,0"))
                  (rule "add_zero_right" (formula "18") (term "0,2,1,0,1,0"))
                  (rule "eqSymm" (formula "18") (term "1,0"))
                  (rule "polySimp_elimSub" (formula "18") (term "1,1,0,1,1,0"))
                  (rule "times_zero_2" (formula "18") (term "1,1,1,0,1,1,0"))
                  (rule "add_zero_right" (formula "18") (term "1,1,0,1,1,0"))
                  (rule "lenOfSeqDef" (formula "18") (term "1,1,0,0"))
                  (rule "polySimp_elimSub" (formula "18") (term "1,1,1,0,0"))
                  (rule "times_zero_2" (formula "18") (term "1,1,1,1,0,0"))
                  (rule "add_zero_right" (formula "18") (term "1,1,1,0,0"))
                  (rule "lenOfSeqDef" (formula "17") (term "0"))
                  (rule "eqSymm" (formula "17"))
                  (rule "polySimp_elimSub" (formula "17") (term "1,1"))
                  (rule "times_zero_2" (formula "17") (term "1,1,1"))
                  (rule "add_zero_right" (formula "17") (term "1,1"))
                  (rule "getOfSeqDef" (formula "18") (term "0,1,0"))
                  (rule "castDel" (formula "18") (term "1,0,1,0"))
                  (rule "castDel" (formula "18") (term "2,0,1,0"))
                  (rule "add_zero_right" (formula "18") (term "0,2,1,0,1,0"))
                  (rule "eqSymm" (formula "18") (term "1,0"))
                  (rule "polySimp_elimSub" (formula "18") (term "1,1,0,1,1,0"))
                  (rule "times_zero_2" (formula "18") (term "1,1,1,0,1,1,0"))
                  (rule "add_zero_right" (formula "18") (term "1,1,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1,1,0,0"))
                  (rule "add_zero_right" (formula "18") (term "0,0,1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0"))
                  (rule "add_zero_right" (formula "17") (term "0,0,0"))
                  (rule "eqSymm" (formula "17"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,1,0"))
                  (rule "eqSymm" (formula "18") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0"))
                  (rule "add_zero_right" (formula "17") (term "0,0,0"))
                  (rule "eqSymm" (formula "17"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,1,0"))
                  (rule "eqSymm" (formula "18") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,1,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,1,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,1,0"))
                  (rule "apply_eq_monomials" (formula "18") (term "1,0,0,1,0,0") (ifseqformula "17"))
                  (rule "polySimp_rightDist" (formula "18") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,0,1,0,0,1,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "18") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "18") (term "1,1,1,0,0,1,0,0"))
                  (rule "times_zero_1" (formula "18") (term "1,1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "18") (term "1,0,0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0"))
                  (rule "eqSymm" (formula "17"))
                  (rule "polySimp_elimOne" (formula "17") (term "0,0,1"))
                  (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0") (ifseqformula "17"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1,0"))
                  (rule "eqSymm" (formula "18") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,1,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,1,1,0"))
                  (rule "mul_literals" (formula "18") (term "0,1,1,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,1,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0"))
                  (rule "eqSymm" (formula "17"))
                  (rule "polySimp_elimOne" (formula "17") (term "0,0,1"))
                  (rule "apply_eq_monomials" (formula "18") (term "1,0,0,1,0,0") (ifseqformula "17"))
                  (rule "polySimp_rightDist" (formula "18") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0,0,1,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "18") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "18") (term "1,1,1,0,0,1,0,0"))
                  (rule "times_zero_1" (formula "18") (term "1,1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "18") (term "1,0,0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1,0"))
                  (rule "eqSymm" (formula "18") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,1,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,1,1,0"))
                  (rule "mul_literals" (formula "18") (term "0,1,1,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                  (rule "pullOutSelect" (formula "17") (term "0,1,0") (inst "selectSK=verif_selectvoting_system_core_Tag_BALLOTS_9"))
                  (rule "applyEq" (formula "19") (term "1,1,0,1,0") (ifseqformula "17"))
                  (rule "applyEq" (formula "18") (term "0,0,0,0") (ifseqformula "17"))
                  (rule "applyEq" (formula "19") (term "0,1,1,1,0,0,1,0") (ifseqformula "17"))
                  (rule "simplifySelectOfAnonEQ" (formula "17") (ifseqformula "9"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "applyEqReverse" (formula "18") (term "0,1,0") (ifseqformula "17"))
                  (rule "applyEqReverse" (formula "19") (term "1,1,0,1,0") (ifseqformula "17"))
                  (rule "applyEqReverse" (formula "18") (term "0,0,0,0") (ifseqformula "17"))
                  (rule "applyEqReverse" (formula "19") (term "0,1,1,1,0,0,1,0") (ifseqformula "17"))
                  (rule "hideAuxiliaryEq" (formula "17"))
                  (rule "nnf_imp2or" (formula "13") (term "0"))
                  (rule "nnf_imp2or" (formula "18") (term "0"))
                  (rule "nnf_notAnd" (formula "13") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                  (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                  (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "18") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                  (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                  (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                  (rule "methodCallParamThrow" (formula "29") (term "1"))
                  (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "7") (ifseqformula "4"))
                  (rule "andLeft" (formula "7"))
                  (rule "notLeft" (formula "8"))
                  (rule "andLeft" (formula "7"))
                  (rule "notLeft" (formula "8"))
                  (rule "andLeft" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "notLeft" (formula "9"))
                  (rule "notLeft" (formula "8"))
                  (rule "andLeft" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "notLeft" (formula "8"))
                  (rule "notLeft" (formula "7"))
                  (rule "nonNull" (formula "12") (inst "i=i"))
                  (rule "sub_literals" (formula "12") (term "2,1,0,1,1"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "greater_literals" (formula "12") (term "0,1"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "andLeft" (formula "12"))
                  (rule "notLeft" (formula "12"))
                  (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "20") (ifseqformula "29"))
                  (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "11") (inst "i=i"))
                  (rule "greater_literals" (formula "11") (term "0,1"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "sub_literals" (formula "11") (term "2,1,0,1"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "andLeft" (formula "11"))
                  (rule "notLeft" (formula "11"))
                  (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "20") (ifseqformula "29"))
                  (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "10") (inst "i=i"))
                  (rule "greater_literals" (formula "10") (term "0,1"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "sub_literals" (formula "10") (term "2,1,0,1"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "andLeft" (formula "10"))
                  (rule "notLeft" (formula "10"))
                  (rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "20") (ifseqformula "29"))
                  (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "9") (inst "i=i"))
                  (rule "sub_literals" (formula "9") (term "2,1,0,1,1"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "greater_literals" (formula "9") (term "0,1"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "andLeft" (formula "9"))
                  (rule "notLeft" (formula "9"))
                  (rule "narrowSelectArrayType" (formula "9") (term "0,0,1,0") (ifseqformula "20") (ifseqformula "29"))
                  (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "8") (inst "i=i"))
                  (rule "sub_literals" (formula "8") (term "2,1,0,1,1"))
                  (builtin "One Step Simplification" (formula "8"))
                  (rule "greater_literals" (formula "8") (term "0,1"))
                  (builtin "One Step Simplification" (formula "8"))
                  (rule "andLeft" (formula "8"))
                  (rule "notLeft" (formula "8"))
                  (rule "narrowSelectArrayType" (formula "8") (term "0,0,1,0") (ifseqformula "20") (ifseqformula "29"))
                  (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "7") (inst "i=i"))
                  (rule "sub_literals" (formula "7") (term "2,1,0,1,1"))
                  (builtin "One Step Simplification" (formula "7"))
                  (rule "greater_literals" (formula "7") (term "0,1"))
                  (builtin "One Step Simplification" (formula "7"))
                  (rule "andLeft" (formula "7"))
                  (rule "notLeft" (formula "7"))
                  (rule "narrowSelectArrayType" (formula "7") (term "0,0,1,0") (ifseqformula "20") (ifseqformula "29"))
                  (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
                  (rule "nnf_imp2or" (formula "12") (term "0"))
                  (rule "nnf_imp2or" (formula "11") (term "0"))
                  (rule "nnf_imp2or" (formula "10") (term "0"))
                  (rule "nnf_imp2or" (formula "9") (term "0"))
                  (rule "nnf_imp2or" (formula "8") (term "0"))
                  (rule "nnf_imp2or" (formula "7") (term "0"))
                  (rule "nnf_notAnd" (formula "12") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                  (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                  (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "11") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
                  (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "11") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                  (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "10") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
                  (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                  (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "9") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
                  (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                  (rule "mul_literals" (formula "9") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "8") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
                  (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                  (rule "mul_literals" (formula "8") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "7") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
                  (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "7") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
                  (rule "mul_literals" (formula "7") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
                  (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "27") (ifseqformula "4"))
                  (rule "andLeft" (formula "27"))
                  (rule "andLeft" (formula "27"))
                  (rule "notLeft" (formula "29"))
                  (rule "andLeft" (formula "27"))
                  (rule "notLeft" (formula "29"))
                  (rule "notLeft" (formula "28"))
                  (rule "andLeft" (formula "27"))
                  (rule "notLeft" (formula "28"))
                  (rule "andLeft" (formula "27"))
                  (rule "andLeft" (formula "27"))
                  (rule "andLeft" (formula "27"))
                  (rule "andLeft" (formula "27"))
                  (rule "andLeft" (formula "27"))
                  (rule "andLeft" (formula "27"))
                  (rule "andLeft" (formula "27"))
                  (rule "notLeft" (formula "28"))
                  (rule "notLeft" (formula "27"))
                  (rule "nonNull" (formula "32") (inst "i=i"))
                  (rule "sub_literals" (formula "32") (term "2,1,0,1,1"))
                  (builtin "One Step Simplification" (formula "32"))
                  (rule "greater_literals" (formula "32") (term "0,1"))
                  (builtin "One Step Simplification" (formula "32"))
                  (rule "andLeft" (formula "32"))
                  (rule "notLeft" (formula "32"))
                  (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "32") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "31") (inst "i=i"))
                  (rule "greater_literals" (formula "31") (term "0,1"))
                  (builtin "One Step Simplification" (formula "31"))
                  (rule "sub_literals" (formula "31") (term "2,1,0,1"))
                  (builtin "One Step Simplification" (formula "31"))
                  (rule "andLeft" (formula "31"))
                  (rule "notLeft" (formula "31"))
                  (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "30") (inst "i=i"))
                  (rule "sub_literals" (formula "30") (term "2,1,0,1,1"))
                  (builtin "One Step Simplification" (formula "30"))
                  (rule "greater_literals" (formula "30") (term "0,1"))
                  (builtin "One Step Simplification" (formula "30"))
                  (rule "andLeft" (formula "30"))
                  (rule "notLeft" (formula "30"))
                  (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "29") (inst "i=i"))
                  (rule "sub_literals" (formula "29") (term "2,1,0,1,1"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "greater_literals" (formula "29") (term "0,1"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "andLeft" (formula "29"))
                  (rule "notLeft" (formula "29"))
                  (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "28") (inst "i=i"))
                  (rule "greater_literals" (formula "28") (term "0,1"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "sub_literals" (formula "28") (term "2,1,0,1"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "andLeft" (formula "28"))
                  (rule "notLeft" (formula "28"))
                  (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "27") (inst "i=i"))
                  (rule "sub_literals" (formula "27") (term "2,1,0,1,1"))
                  (builtin "One Step Simplification" (formula "27"))
                  (rule "greater_literals" (formula "27") (term "0,1"))
                  (builtin "One Step Simplification" (formula "27"))
                  (rule "andLeft" (formula "27"))
                  (rule "notLeft" (formula "27"))
                  (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                  (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_12"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "15"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "4"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")) (ifInst ""  (formula "4")))
                  (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_12"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "15"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "4"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")) (ifInst ""  (formula "4")))
                  (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_12"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "15"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "4"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")) (ifInst ""  (formula "4")))
                  (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_12"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "15"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "4"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")) (ifInst ""  (formula "4")))
                  (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_12"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "15"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "4"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")) (ifInst ""  (formula "4")))
                  (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_12"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "15"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "4"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")) (ifInst ""  (formula "4")))
                  (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "32") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_12"))
                  (rule "applyEq" (formula "40") (term "0") (ifseqformula "32"))
                  (rule "applyEq" (formula "33") (term "0,1,1,1,0,0") (ifseqformula "32"))
                  (rule "simplifySelectOfAnonEQ" (formula "32") (ifseqformula "25"))
                  (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "53")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "0,0,0") (ifseqformula "14"))
                  (rule "replace_known_left" (formula "32") (term "0,0,0,0") (ifseqformula "3"))
                  (builtin "One Step Simplification" (formula "32"))
                  (rule "simplifySelectOfAnonEQ" (formula "32") (ifseqformula "14"))
                  (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "53")) (ifInst ""  (formula "3")))
                  (rule "applyEqReverse" (formula "33") (term "0,1,1,1,0,0") (ifseqformula "32"))
                  (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "32"))
                  (rule "applyEqReverse" (formula "33") (term "1,0,0,1,0") (ifseqformula "32"))
                  (rule "hideAuxiliaryEq" (formula "32"))
                  (rule "pullOutSelect" (formula "31") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_12"))
                  (rule "applyEq" (formula "32") (term "0,1,1,1,0,0") (ifseqformula "31"))
                  (rule "applyEq" (formula "39") (term "0") (ifseqformula "31"))
                  (rule "simplifySelectOfAnonEQ" (formula "31") (ifseqformula "25"))
                  (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "52")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0,0,0") (ifseqformula "14"))
                  (rule "replace_known_left" (formula "31") (term "0,0,0,0") (ifseqformula "3"))
                  (builtin "One Step Simplification" (formula "31"))
                  (rule "simplifySelectOfAnonEQ" (formula "31") (ifseqformula "14"))
                  (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "52")) (ifInst ""  (formula "3")))
                  (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "31"))
                  (rule "applyEqReverse" (formula "32") (term "0,1,1,1,0,0") (ifseqformula "31"))
                  (rule "applyEqReverse" (formula "32") (term "1,0,0,1,0") (ifseqformula "31"))
                  (rule "hideAuxiliaryEq" (formula "31"))
                  (rule "pullOutSelect" (formula "30") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_12"))
                  (rule "applyEq" (formula "31") (term "0,1,1,1,0,0") (ifseqformula "30"))
                  (rule "applyEq" (formula "38") (term "0") (ifseqformula "30"))
                  (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "25"))
                  (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "51")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,0,0") (ifseqformula "14"))
                  (rule "replace_known_left" (formula "30") (term "0,0,0,0") (ifseqformula "3"))
                  (builtin "One Step Simplification" (formula "30"))
                  (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "14"))
                  (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "51")) (ifInst ""  (formula "3")))
                  (rule "applyEqReverse" (formula "31") (term "1,0,0,1,0") (ifseqformula "30"))
                  (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "30"))
                  (rule "applyEqReverse" (formula "31") (term "0,1,1,1,0,0") (ifseqformula "30"))
                  (rule "hideAuxiliaryEq" (formula "30"))
                  (rule "pullOutSelect" (formula "29") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_12"))
                  (rule "applyEq" (formula "30") (term "0,1,1,1,0,0") (ifseqformula "29"))
                  (rule "applyEq" (formula "37") (term "0") (ifseqformula "29"))
                  (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "25"))
                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "50")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,0,0") (ifseqformula "14"))
                  (rule "replace_known_left" (formula "29") (term "0,0,0,0") (ifseqformula "3"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "14"))
                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "50")) (ifInst ""  (formula "3")))
                  (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "29"))
                  (rule "applyEqReverse" (formula "30") (term "0,1,1,1,0,0") (ifseqformula "29"))
                  (rule "applyEqReverse" (formula "30") (term "1,0,0,1,0") (ifseqformula "29"))
                  (rule "hideAuxiliaryEq" (formula "29"))
                  (rule "pullOutSelect" (formula "28") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_12"))
                  (rule "applyEq" (formula "36") (term "0") (ifseqformula "28"))
                  (rule "applyEq" (formula "29") (term "0,1,1,1,0,0") (ifseqformula "28"))
                  (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "25"))
                  (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "49")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,0,0") (ifseqformula "14"))
                  (rule "replace_known_left" (formula "28") (term "0,0,0,0") (ifseqformula "3"))
                  (builtin "One Step Simplification" (formula "28"))
                  (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "14"))
                  (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "49")) (ifInst ""  (formula "3")))
                  (rule "applyEqReverse" (formula "29") (term "1,0,0,1,0") (ifseqformula "28"))
                  (rule "applyEqReverse" (formula "29") (term "0,1,1,1,0,0") (ifseqformula "28"))
                  (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "28"))
                  (rule "hideAuxiliaryEq" (formula "28"))
                  (rule "pullOutSelect" (formula "27") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_12"))
                  (rule "applyEq" (formula "28") (term "0,1,1,1,0,0") (ifseqformula "27"))
                  (rule "applyEq" (formula "35") (term "0") (ifseqformula "27"))
                  (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "25"))
                  (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "48")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,0,0") (ifseqformula "14"))
                  (rule "replace_known_left" (formula "27") (term "0,0,0,0") (ifseqformula "3"))
                  (builtin "One Step Simplification" (formula "27"))
                  (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "14"))
                  (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "48")) (ifInst ""  (formula "3")))
                  (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "27"))
                  (rule "applyEqReverse" (formula "28") (term "1,0,0,1,0") (ifseqformula "27"))
                  (rule "applyEqReverse" (formula "28") (term "0,1,1,1,0,0") (ifseqformula "27"))
                  (rule "hideAuxiliaryEq" (formula "27"))
                  (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "19") (ifseqformula "4"))
                  (rule "replaceKnownSelect_taclet100010_3" (formula "19") (term "0,0,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet100010_4" (formula "19") (term "0,0,1"))
                  (rule "replaceKnownSelect_taclet100010_6" (formula "19") (term "0,0,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet100010_7" (formula "19") (term "0,0,1,0"))
                  (rule "replaceKnownSelect_taclet100010_9" (formula "19") (term "0,0,1,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet100010_10" (formula "19") (term "0,0,1,0,0"))
                  (rule "replaceKnownSelect_taclet100010_21" (formula "19") (term "1,1,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet100010_12" (formula "19") (term "0,0,1,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet100010_22" (formula "19") (term "1,1,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet100010_13" (formula "19") (term "0,0,1,0,0,0"))
                  (rule "replaceKnownSelect_taclet100010_24" (formula "19") (term "1,1,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet100010_27" (formula "19") (term "1,1,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet100010_25" (formula "19") (term "1,1,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet100010_30" (formula "19") (term "1,1,0,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet100010_28" (formula "19") (term "1,1,0,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet100010_33" (formula "19") (term "1,1,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet100010_31" (formula "19") (term "1,1,0,0,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet100010_36" (formula "19") (term "1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet100010_34" (formula "19") (term "1,1,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet100010_37" (formula "19") (term "1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet100010_18" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet100010_15" (formula "19") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet100010_19" (formula "19") (term "0,0,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet100010_16" (formula "19") (term "0,0,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "andLeft" (formula "19"))
                  (rule "andLeft" (formula "19"))
                  (rule "notLeft" (formula "21"))
                  (rule "andLeft" (formula "19"))
                  (rule "notLeft" (formula "21"))
                  (rule "notLeft" (formula "20"))
                  (rule "andLeft" (formula "19"))
                  (rule "andLeft" (formula "19"))
                  (rule "notLeft" (formula "21"))
                  (rule "andLeft" (formula "19"))
                  (rule "andLeft" (formula "19"))
                  (rule "andLeft" (formula "19"))
                  (rule "andLeft" (formula "19"))
                  (rule "andLeft" (formula "19"))
                  (rule "andLeft" (formula "19"))
                  (rule "notLeft" (formula "20"))
                  (rule "notLeft" (formula "19"))
                  (rule "nonNull" (formula "24") (inst "i=i"))
                  (rule "greater_literals" (formula "24") (term "0,1"))
                  (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "44")))
                  (rule "sub_literals" (formula "24") (term "2,1,0"))
                  (builtin "One Step Simplification" (formula "24"))
                  (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "23") (inst "i=i"))
                  (rule "greater_literals" (formula "23") (term "0,1"))
                  (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "43")))
                  (rule "sub_literals" (formula "23") (term "2,1,0"))
                  (builtin "One Step Simplification" (formula "23"))
                  (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "22") (inst "i=i"))
                  (rule "greater_literals" (formula "22") (term "0,1"))
                  (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "42")))
                  (rule "sub_literals" (formula "22") (term "2,1,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "21") (inst "i=i"))
                  (rule "greater_literals" (formula "21") (term "0,1"))
                  (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "41")))
                  (rule "sub_literals" (formula "21") (term "2,1,0"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "20") (inst "i=i"))
                  (rule "greater_literals" (formula "20") (term "0,1"))
                  (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "40")))
                  (rule "sub_literals" (formula "20") (term "2,1,0"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "19") (inst "i=i"))
                  (rule "greater_literals" (formula "19") (term "0,1"))
                  (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "39")))
                  (rule "sub_literals" (formula "19") (term "2,1,0"))
                  (builtin "One Step Simplification" (formula "19"))
                  (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                  (rule "commute_or_2" (formula "18") (term "0"))
                  (rule "commute_or_2" (formula "28") (term "0"))
                  (rule "tryCatchThrow" (formula "56") (term "1"))
                  (rule "lenNonNegative" (formula "17") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "17"))
                  (rule "arrayLengthIsAShort" (formula "18") (term "1,1"))
                  (builtin "One Step Simplification" (formula "18"))
                  (rule "true_left" (formula "18"))
                  (rule "arrayLengthNotNegative" (formula "18") (term "1,1"))
                  (rule "commute_or_2" (formula "12") (term "0"))
                  (rule "nnf_imp2or" (formula "39") (term "0"))
                  (rule "commute_or_2" (formula "11") (term "0"))
                  (rule "nnf_imp2or" (formula "38") (term "0"))
                  (rule "commute_or_2" (formula "10") (term "0"))
                  (rule "nnf_imp2or" (formula "37") (term "0"))
                  (rule "nnf_imp2or" (formula "36") (term "0"))
                  (rule "commute_or_2" (formula "9") (term "0"))
                  (rule "nnf_imp2or" (formula "35") (term "0"))
                  (rule "commute_or_2" (formula "8") (term "0"))
                  (rule "nnf_imp2or" (formula "34") (term "0"))
                  (rule "commute_or_2" (formula "7") (term "0"))
                  (rule "nnf_imp2or" (formula "26") (term "0"))
                  (rule "nnf_imp2or" (formula "25") (term "0"))
                  (rule "arrayLengthNotNegative" (formula "29") (term "1,0"))
                  (rule "arrayLengthIsAShort" (formula "30") (term "1,0"))
                  (builtin "One Step Simplification" (formula "30"))
                  (rule "true_left" (formula "30"))
                  (rule "nnf_imp2or" (formula "24") (term "0"))
                  (rule "nnf_imp2or" (formula "23") (term "0"))
                  (rule "nnf_imp2or" (formula "22") (term "0"))
                  (rule "nnf_imp2or" (formula "21") (term "0"))
                  (rule "nnf_notAnd" (formula "40") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "40") (term "0,0,0"))
                  (rule "times_zero_1" (formula "40") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "40") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0"))
                  (rule "mul_literals" (formula "40") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "40") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "40") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "39") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "39") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "39") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0"))
                  (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "39") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
                  (rule "mul_literals" (formula "39") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "38") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0"))
                  (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "38") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                  (rule "mul_literals" (formula "38") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "38") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "37") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "37") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "37") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0"))
                  (rule "mul_literals" (formula "37") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "37") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0"))
                  (rule "mul_literals" (formula "37") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "36") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0"))
                  (rule "mul_literals" (formula "36") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "36") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0"))
                  (rule "mul_literals" (formula "36") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "36") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "36") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "35") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0"))
                  (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "35") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
                  (rule "mul_literals" (formula "35") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "35") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "26") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                  (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "26") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                  (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "25") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                  (rule "mul_literals" (formula "25") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "25") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                  (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "24") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                  (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "24") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                  (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "23") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
                  (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "23") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                  (rule "mul_literals" (formula "23") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "22") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
                  (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "22") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                  (rule "mul_literals" (formula "22") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "21") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "21") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
                  (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "21") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                  (rule "mul_literals" (formula "21") (term "1,0,0,0"))
                  (rule "commute_or" (formula "20") (term "0,0"))
                  (rule "commute_or" (formula "31") (term "0,0"))
                  (rule "commute_or" (formula "12") (term "0,0"))
                  (rule "commute_or" (formula "11") (term "0,0"))
                  (rule "commute_or" (formula "10") (term "0,0"))
                  (rule "commute_or" (formula "9") (term "0,0"))
                  (rule "commute_or" (formula "8") (term "0,0"))
                  (rule "commute_or" (formula "7") (term "0,0"))
                  (rule "commute_or_2" (formula "40") (term "0"))
                  (rule "commute_or_2" (formula "39") (term "0"))
                  (rule "commute_or_2" (formula "38") (term "0"))
                  (rule "commute_or_2" (formula "37") (term "0"))
                  (rule "commute_or_2" (formula "36") (term "0"))
                  (rule "commute_or_2" (formula "35") (term "0"))
                  (rule "commute_or_2" (formula "26") (term "0"))
                  (rule "commute_or_2" (formula "25") (term "0"))
                  (rule "commute_or_2" (formula "24") (term "0"))
                  (rule "commute_or_2" (formula "23") (term "0"))
                  (rule "commute_or_2" (formula "22") (term "0"))
                  (rule "commute_or_2" (formula "21") (term "0"))
                  (rule "ifElseUnfold" (formula "59") (term "1") (inst "#boolv=x"))
                  (rule "variableDeclaration" (formula "59") (term "1") (newnames "x_11"))
                  (rule "commute_or" (formula "40") (term "0,0"))
                  (rule "commute_or" (formula "39") (term "0,0"))
                  (rule "commute_or" (formula "38") (term "0,0"))
                  (rule "commute_or" (formula "37") (term "0,0"))
                  (rule "commute_or" (formula "36") (term "0,0"))
                  (rule "commute_or" (formula "35") (term "0,0"))
                  (rule "commute_or" (formula "26") (term "0,0"))
                  (rule "commute_or" (formula "25") (term "0,0"))
                  (rule "commute_or" (formula "24") (term "0,0"))
                  (rule "commute_or" (formula "23") (term "0,0"))
                  (rule "commute_or" (formula "22") (term "0,0"))
                  (rule "commute_or" (formula "21") (term "0,0"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "27"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "arrayLengthNotNegative" (formula "13") (term "1,1,0"))
                  (rule "arrayLengthIsAShort" (formula "14") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "14"))
                  (rule "true_left" (formula "14"))
                  (rule "arrayLengthNotNegative" (formula "12") (term "1,1,0"))
                  (rule "arrayLengthIsAShort" (formula "13") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "true_left" (formula "13"))
                  (rule "arrayLengthIsAShort" (formula "11") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "true_left" (formula "11"))
                  (rule "arrayLengthNotNegative" (formula "11") (term "1,1,0"))
                  (rule "arrayLengthNotNegative" (formula "10") (term "1,1,0"))
                  (rule "arrayLengthIsAShort" (formula "11") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "true_left" (formula "11"))
                  (rule "arrayLengthIsAShort" (formula "9") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "true_left" (formula "9"))
                  (rule "arrayLengthNotNegative" (formula "9") (term "1,1,0"))
                  (rule "arrayLengthNotNegative" (formula "8") (term "1,1,0"))
                  (rule "arrayLengthIsAShort" (formula "9") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "true_left" (formula "9"))
                  (rule "ifthenelse_to_or_right" (formula "27") (term "0,0,0"))
                  (rule "nnf_notAnd" (formula "27") (term "0,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,0,0,0"))
                  (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "27") (term "0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0,0"))
                  (rule "commute_or" (formula "27") (term "0,0"))
                  (rule "commute_or_2" (formula "27") (term "0"))
                  (rule "commute_or" (formula "27") (term "1,1,0"))
                  (rule "commute_or_2" (formula "27") (term "0,1,0"))
                  (rule "commute_or" (formula "27") (term "0,0,1,0"))
                  (rule "ifthenelse_to_or_right" (formula "38") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "38"))
                  (rule "nnf_notAnd" (formula "38") (term "0,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0,0,0,0"))
                  (rule "add_literals" (formula "38") (term "0,0,0,1,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "38") (term "0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0,0,0,0"))
                  (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "38") (term "0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "38") (term "1,0,0,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "38") (term "0,1,1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "38") (term "0,0,1,1,0,0,0"))
                  (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,1,1,0,0,0"))
                  (rule "add_literals" (formula "38") (term "0,0,0,0,1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,1,1,0,0,0"))
                  (rule "mul_literals" (formula "38") (term "1,0,0,1,1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "38") (term "1,0,1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,1,1,0,0,0"))
                  (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,1,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,1,1,0,0,0"))
                  (rule "add_literals" (formula "38") (term "0,0,0,1,0,1,1,0,0,0"))
                  (rule "add_zero_left" (formula "38") (term "0,0,1,0,1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "38") (term "1,1,0,1,1,0,0,0"))
                  (rule "commute_or" (formula "38") (term "0,0"))
                  (rule "commute_or_2" (formula "38") (term "0"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "34"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "35"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "36"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "62") (term "0") (ifseqformula "37"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "63"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "38"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "39"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "40"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "equality_comparison_simple" (formula "73") (term "1"))
                  (builtin "One Step Simplification" (formula "73"))
                  (rule "replace_known_right" (formula "73") (term "0,0,1,0") (ifseqformula "70"))
                  (builtin "One Step Simplification" (formula "73"))
                  (rule "commute_or" (formula "45") (term "1,1,0"))
                  (rule "commute_or_2" (formula "45") (term "0,1,0"))
                  (rule "cnf_rightDist" (formula "34") (term "1,1,0"))
                  (rule "cnf_rightDist" (formula "34") (term "0"))
                  (rule "distr_forallAnd" (formula "34"))
                  (rule "andLeft" (formula "34"))
                  (rule "commute_or" (formula "35") (term "0"))
                  (rule "commute_or_2" (formula "34") (term "0"))
                  (rule "commute_or" (formula "35") (term "1,1,0"))
                  (rule "shift_paren_or" (formula "34") (term "0,0"))
                  (rule "cnf_rightDist" (formula "35") (term "0"))
                  (rule "distr_forallAnd" (formula "35"))
                  (rule "andLeft" (formula "35"))
                  (rule "commute_or_2" (formula "35") (term "0"))
                  (rule "shift_paren_or" (formula "36") (term "0"))
                  (rule "commute_or_2" (formula "36") (term "0,0"))
                  (rule "shift_paren_or" (formula "35") (term "0,0"))
                  (rule "commute_or" (formula "35") (term "0,0,0"))
                  (rule "inEqSimp_or_tautInEq1" (formula "35") (term "0,0"))
                  (rule "add_zero_right" (formula "35") (term "1,1,0,0"))
                  (rule "qeq_literals" (formula "35") (term "1,0,0"))
                  (builtin "One Step Simplification" (formula "35"))
                  (rule "true_left" (formula "35"))
                  (rule "commute_or_2" (formula "46") (term "0,1,1,0"))
                  (rule "commute_or" (formula "46") (term "0,0,1,0"))
                  (rule "shift_paren_or" (formula "34") (term "0,0,0"))
                  (rule "commute_or" (formula "34") (term "0,0,0,0"))
                  (builtin "One Step Simplification" (formula "34"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "42"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "commute_or" (formula "47") (term "0,0,1,1,0"))
                  (rule "cnf_rightDist" (formula "47") (term "1,1,0"))
                  (rule "commute_or_2" (formula "47") (term "0,1,1,0"))
                  (rule "inEqSimp_or_tautInEq1" (formula "47") (term "0,0,1,1,0"))
                  (rule "add_zero_right" (formula "47") (term "1,1,0,0,1,1,0"))
                  (rule "qeq_literals" (formula "47") (term "1,0,0,1,1,0"))
                  (builtin "One Step Simplification" (formula "47"))
                  (rule "shift_paren_or" (formula "47") (term "1,1,0"))
                  (rule "commute_or" (formula "47") (term "0,1,1,0"))
                  (rule "cnf_rightDist" (formula "47") (term "0"))
                  (rule "distr_forallAnd" (formula "47"))
                  (rule "andLeft" (formula "47"))
                  (rule "commute_or_2" (formula "47") (term "0"))
                  (rule "shift_paren_or" (formula "48") (term "0"))
                  (rule "commute_or_2" (formula "48") (term "0,0"))
                  (rule "shift_paren_or" (formula "47") (term "0,0"))
                  (rule "commute_or_2" (formula "48") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "48"))
                  (rule "shift_paren_or" (formula "47") (term "0,0,0"))
                  (rule "commute_or" (formula "47") (term "0,0,0,0"))
                  (builtin "One Step Simplification" (formula "47"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "43"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "60") (term "0") (ifseqformula "44"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "63") (term "0") (ifseqformula "45"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "64"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "46"))
                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "ifthenelse_to_or_left" (formula "51") (term "0,0,0,0"))
                  (rule "eqSymm" (formula "51") (term "1,1,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "51") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "51") (term "1,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "51") (term "0,0,0,1,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "51") (term "0,0,1,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "1,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "51") (term "0,0,0,0,0,0,0"))
                  (rule "times_zero_1" (formula "51") (term "1,0,0,0,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "51") (term "0,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "51") (term "1,0,0,0,0,0,0,0"))
                  (rule "commute_or" (formula "51") (term "0,0,0"))
                  (rule "commute_or_2" (formula "51") (term "0,0"))
                  (rule "commute_or_2" (formula "51") (term "0"))
                  (rule "commute_or_2" (formula "51") (term "0,1,0"))
                  (rule "commute_or" (formula "51") (term "1,1,0"))
                  (rule "commute_or" (formula "51") (term "0,0,1,0"))
                  (rule "cnf_rightDist" (formula "51") (term "1,1,0"))
                  (rule "cnf_rightDist" (formula "51") (term "0"))
                  (rule "distr_forallAnd" (formula "51"))
                  (rule "andLeft" (formula "51"))
                  (rule "commute_or_2" (formula "51") (term "0"))
                  (rule "commute_or" (formula "52") (term "0"))
                  (rule "shift_paren_or" (formula "51") (term "0,0"))
                  (rule "commute_or" (formula "52") (term "1,1,0"))
                  (rule "commute_or_2" (formula "51") (term "0,0,0"))
                  (rule "cnf_rightDist" (formula "52") (term "0"))
                  (rule "distr_forallAnd" (formula "52"))
                  (rule "andLeft" (formula "52"))
                  (rule "commute_or_2" (formula "52") (term "0"))
                  (rule "shift_paren_or" (formula "53") (term "0"))
                  (rule "commute_or_2" (formula "52") (term "0,0"))
                  (rule "commute_or_2" (formula "53") (term "0,0"))
                  (rule "shift_paren_or" (formula "52") (term "0,0,0"))
                  (rule "shift_paren_or" (formula "53") (term "0,0,0"))
                  (rule "commute_or" (formula "52") (term "0,0,0,0"))
                  (rule "inEqSimp_or_tautInEq1" (formula "52") (term "0,0,0"))
                  (rule "add_zero_right" (formula "52") (term "1,1,0,0,0"))
                  (rule "qeq_literals" (formula "52") (term "1,0,0,0"))
                  (builtin "One Step Simplification" (formula "52"))
                  (rule "true_left" (formula "52"))
                  (rule "shift_paren_or" (formula "51") (term "0,0,0,0"))
                  (rule "commute_or" (formula "51") (term "0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "51"))
                  (rule "ifElseSplit" (formula "81"))
                  (branch "if x_11 true"
                     (builtin "One Step Simplification" (formula "82"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "if x_11 false"
                     (builtin "One Step Simplification" (formula "82"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "ifElseSplit" (formula "81"))
                     (branch "if exc_3 instanceof java.lang.Throwable true"
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "79")))
                        (rule "true_left" (formula "1"))
                        (rule "variableDeclaration" (formula "81") (term "1") (newnames "e_5"))
                        (rule "reference_type_cast" (formula "81") (term "1"))
                        (branch "Normal Execution (exc_3 instanceof java.lang.Throwable)"
                           (builtin "One Step Simplification" (formula "82"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "assignment" (formula "81") (term "1"))
                           (builtin "One Step Simplification" (formula "81"))
                           (rule "emptyModality" (formula "81") (term "1"))
                           (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "78")) (ifInst ""  (formula "78")) (ifInst ""  (formula "63")))
                           (rule "eqSymm" (formula "81") (term "1,0,0,1"))
                           (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "81") (term "0") (ifseqformula "17"))
                           (rule "replaceKnownSelect_taclet100010_2" (formula "81") (term "0,0,1,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet100010_4" (formula "81") (term "0,0,1,0"))
                           (rule "replaceKnownSelect_taclet100010_5" (formula "81") (term "0,0,1,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet100010_7" (formula "81") (term "0,0,1,0,0"))
                           (rule "replaceKnownSelect_taclet100010_8" (formula "81") (term "0,0,1,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet100010_10" (formula "81") (term "0,0,1,0,0,0"))
                           (rule "replaceKnownSelect_taclet100010_20" (formula "81") (term "1,1,0,0,0,0,0"))
                           (rule "replaceKnownSelect_taclet100010_11" (formula "81") (term "0,0,1,0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet100010_22" (formula "81") (term "1,1,0,0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet100010_13" (formula "81") (term "0,0,1,0,0,0,0"))
                           (rule "replaceKnownSelect_taclet100010_23" (formula "81") (term "1,1,0,0,0,0,0,0"))
                           (rule "replaceKnownSelect_taclet100010_26" (formula "81") (term "1,1,0,0,0,0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet100010_25" (formula "81") (term "1,1,0,0,0,0,0,0"))
                           (rule "replaceKnownSelect_taclet100010_29" (formula "81") (term "1,1,0,0,0,0,0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet100010_28" (formula "81") (term "1,1,0,0,0,0,0,0,0"))
                           (rule "replaceKnownSelect_taclet100010_32" (formula "81") (term "1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet100010_31" (formula "81") (term "1,1,0,0,0,0,0,0,0,0"))
                           (rule "replaceKnownSelect_taclet100010_35" (formula "81") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet100010_34" (formula "81") (term "1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet100010_37" (formula "81") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "replaceKnownSelect_taclet100010_17" (formula "81") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "replaceKnownSelect_taclet100010_14" (formula "81") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet100010_19" (formula "81") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet100010_16" (formula "81") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "replace_known_right" (formula "81") (term "0,1,0,0") (ifseqformula "74"))
                           (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "70")) (ifInst ""  (formula "71")) (ifInst ""  (formula "72")) (ifInst ""  (formula "73")) (ifInst ""  (formula "75")))
                           (rule "nonNull" (formula "81") (term "1,0,0,0,0,0") (inst "i=i"))
                           (rule "sub_literals" (formula "81") (term "2,1,0,1,1,1,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "65")))
                           (rule "greater_literals" (formula "81") (term "0,1,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "81"))
                           (rule "inEqSimp_ltToLeq" (formula "81") (term "1,0,0,1,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,1,0,0,1,0,0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "81") (term "0,0,0,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "1,0,0,1,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "81") (term "1,1,0,0,1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "81") (term "1,1,0,0,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "81") (term "0,1,1,0,0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "81") (term "1,1,1,0,0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "81") (term "1,1,1,0,0,1,0,0,0,0,0"))
                           (rule "nonNull" (formula "81") (term "1,0,0,0") (inst "i=i"))
                           (rule "greater_literals" (formula "81") (term "0,1,1,0,0,0"))
                           (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "67")))
                           (rule "sub_literals" (formula "81") (term "2,1,0,1,0,0,0"))
                           (builtin "One Step Simplification" (formula "81"))
                           (rule "inEqSimp_ltToLeq" (formula "81") (term "1,0,0,1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,1,0,0,1,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "81") (term "0,0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "1,0,0,1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "81") (term "1,1,0,0,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "81") (term "1,1,0,0,1,0,0,0"))
                           (rule "mul_literals" (formula "81") (term "0,1,1,0,0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "81") (term "1,1,1,0,0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "81") (term "1,1,1,0,0,1,0,0,0"))
                           (rule "nonNull" (formula "81") (term "1,0") (inst "i=i"))
                           (rule "greater_literals" (formula "81") (term "0,1,1,0"))
                           (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "69")))
                           (rule "sub_literals" (formula "81") (term "2,1,0,1,0"))
                           (builtin "One Step Simplification" (formula "81"))
                           (rule "inEqSimp_ltToLeq" (formula "81") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,1,0,0,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "81") (term "0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "81") (term "1,1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "81") (term "1,1,0,0,1,0"))
                           (rule "mul_literals" (formula "81") (term "0,1,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "81") (term "1,1,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "81") (term "1,1,1,0,0,1,0"))
                           (rule "nonNull" (formula "81") (term "0,0,0,0,0,0") (inst "i=i"))
                           (rule "sub_literals" (formula "81") (term "2,1,0,1,1,0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "64")))
                           (rule "greater_literals" (formula "81") (term "0,0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "81"))
                           (rule "inEqSimp_ltToLeq" (formula "81") (term "1,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "81") (term "0,0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "1,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "81") (term "1,1,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "81") (term "1,1,0,0,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "81") (term "0,1,1,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "81") (term "1,1,1,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "81") (term "1,1,1,0,0,0,0,0,0,0,0"))
                           (rule "nonNull" (formula "81") (term "1,0,0") (inst "i=i"))
                           (rule "greater_literals" (formula "81") (term "0,1,1,0,0"))
                           (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "68")))
                           (rule "sub_literals" (formula "81") (term "2,1,0,1,0,0"))
                           (builtin "One Step Simplification" (formula "81"))
                           (rule "inEqSimp_ltToLeq" (formula "81") (term "1,0,0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "81") (term "0,0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "1,0,0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "81") (term "1,1,0,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "81") (term "1,1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "81") (term "0,1,1,0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "81") (term "1,1,1,0,0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "81") (term "1,1,1,0,0,1,0,0"))
                           (rule "nonNull" (formula "81") (term "1,0,0,0,0") (inst "i=i"))
                           (rule "greater_literals" (formula "81") (term "0,1,1,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "66")))
                           (rule "sub_literals" (formula "81") (term "2,1,0,1,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "81"))
                           (rule "inEqSimp_ltToLeq" (formula "81") (term "1,0,0,1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,1,0,0,1,0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "81") (term "0,0,0,1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "1,0,0,1,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "81") (term "1,1,0,0,1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "81") (term "1,1,0,0,1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "81") (term "1,1,1,0,0,1,0,0,0,0"))
                           (rule "mul_literals" (formula "81") (term "0,1,1,0,0,1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "81") (term "1,1,1,0,0,1,0,0,0,0"))
                           (rule "nnf_imp2or" (formula "81") (term "0,1,0"))
                           (rule "nnf_imp2or" (formula "81") (term "0,1,0,0"))
                           (rule "nnf_notAnd" (formula "81") (term "0,0,1,0"))
                           (rule "inEqSimp_notLeq" (formula "81") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "81") (term "1,0,0,1,0,0,1,0"))
                           (rule "mul_literals" (formula "81") (term "0,1,0,0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "81") (term "0,0,1,0,0,1,0"))
                           (rule "add_literals" (formula "81") (term "0,0,0,1,0,0,1,0"))
                           (rule "add_zero_left" (formula "81") (term "0,0,1,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "81") (term "1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "81") (term "1,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "81") (term "1,1,0,0,1,0"))
                           (rule "inEqSimp_notGeq" (formula "81") (term "0,0,0,1,0"))
                           (rule "mul_literals" (formula "81") (term "1,0,0,0,0,0,1,0"))
                           (rule "add_zero_right" (formula "81") (term "0,0,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "0,0,0,1,0"))
                           (rule "mul_literals" (formula "81") (term "1,0,0,0,1,0"))
                           (rule "nnf_imp2or" (formula "81") (term "0,1,0,0,0"))
                           (rule "nnf_notAnd" (formula "81") (term "0,0,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "81") (term "1,0,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "81") (term "1,0,0,1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "81") (term "0,1,0,0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "81") (term "0,0,1,0,0,1,0,0"))
                           (rule "add_literals" (formula "81") (term "0,0,0,1,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "81") (term "0,0,1,0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "81") (term "1,0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "81") (term "1,1,0,0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "81") (term "1,1,0,0,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "81") (term "0,0,0,1,0,0"))
                           (rule "mul_literals" (formula "81") (term "1,0,0,0,0,0,1,0,0"))
                           (rule "add_literals" (formula "81") (term "0,0,0,0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "0,0,0,1,0,0"))
                           (rule "mul_literals" (formula "81") (term "1,0,0,0,1,0,0"))
                           (rule "nnf_imp2or" (formula "81") (term "0,1,0,0,0,0"))
                           (rule "nnf_imp2or" (formula "81") (term "0,0,0,0,0,0,0"))
                           (rule "nnf_imp2or" (formula "81") (term "0,1,0,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "81") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "81") (term "1,0,0,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "81") (term "1,0,0,1,0,0,1,0,0,0"))
                           (rule "mul_literals" (formula "81") (term "0,1,0,0,1,0,0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "81") (term "0,0,1,0,0,1,0,0,0"))
                           (rule "add_literals" (formula "81") (term "0,0,0,1,0,0,1,0,0,0"))
                           (rule "add_zero_left" (formula "81") (term "0,0,1,0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "81") (term "1,0,0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "81") (term "1,1,0,0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "81") (term "1,1,0,0,1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "81") (term "0,0,0,1,0,0,0"))
                           (rule "times_zero_1" (formula "81") (term "1,0,0,0,0,0,1,0,0,0"))
                           (rule "add_literals" (formula "81") (term "0,0,0,0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "0,0,0,1,0,0,0"))
                           (rule "mul_literals" (formula "81") (term "1,0,0,0,1,0,0,0"))
                           (rule "nnf_notAnd" (formula "81") (term "0,0,1,0,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "81") (term "1,0,0,1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "81") (term "1,0,0,1,0,0,1,0,0,0,0"))
                           (rule "mul_literals" (formula "81") (term "0,1,0,0,1,0,0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "81") (term "0,0,1,0,0,1,0,0,0,0"))
                           (rule "add_literals" (formula "81") (term "0,0,0,1,0,0,1,0,0,0,0"))
                           (rule "add_zero_left" (formula "81") (term "0,0,1,0,0,1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "81") (term "1,0,0,1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "81") (term "1,1,0,0,1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "81") (term "1,1,0,0,1,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "81") (term "0,0,0,1,0,0,0,0"))
                           (rule "mul_literals" (formula "81") (term "1,0,0,0,0,0,1,0,0,0,0"))
                           (rule "add_literals" (formula "81") (term "0,0,0,0,0,1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "0,0,0,1,0,0,0,0"))
                           (rule "mul_literals" (formula "81") (term "1,0,0,0,1,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "81") (term "0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "81") (term "1,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "81") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "81") (term "0,1,0,0,1,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "81") (term "0,0,1,0,0,0,0,0,0,0,0"))
                           (rule "add_literals" (formula "81") (term "0,0,0,1,0,0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "81") (term "0,0,1,0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "81") (term "1,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "81") (term "1,1,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "81") (term "1,1,0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "81") (term "0,0,0,0,0,0,0,0,0"))
                           (rule "times_zero_1" (formula "81") (term "1,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "add_literals" (formula "81") (term "0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "0,0,0,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "81") (term "1,0,0,0,0,0,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "81") (term "0,0,1,0,0,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "81") (term "1,0,0,1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "81") (term "1,0,0,1,0,0,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "81") (term "0,1,0,0,1,0,0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "81") (term "0,0,1,0,0,1,0,0,0,0,0"))
                           (rule "add_literals" (formula "81") (term "0,0,0,1,0,0,1,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "81") (term "0,0,1,0,0,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "81") (term "1,0,0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "81") (term "1,1,0,0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "81") (term "1,1,0,0,1,0,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "81") (term "0,0,0,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "81") (term "1,0,0,0,0,0,1,0,0,0,0,0"))
                           (rule "add_literals" (formula "81") (term "0,0,0,0,0,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "0,0,0,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "81") (term "1,0,0,0,1,0,0,0,0,0"))
                           (rule "ifthenelse_split" (formula "50") (term "1"))
                           (branch "result_0.length ≥ 1 TRUE"
                              (rule "replace_known_left" (formula "39") (term "0,1,1,0") (ifseqformula "50"))
                              (builtin "One Step Simplification" (formula "39"))
                              (rule "replace_known_left" (formula "53") (term "0,1,1,0") (ifseqformula "50"))
                              (builtin "One Step Simplification" (formula "53"))
                              (rule "replace_known_left" (formula "40") (term "0,1,1,0") (ifseqformula "50"))
                              (builtin "One Step Simplification" (formula "40"))
                              (rule "replace_known_left" (formula "38") (term "0,1") (ifseqformula "50"))
                              (builtin "One Step Simplification" (formula "38"))
                              (rule "replace_known_left" (formula "54") (term "0,1,1,0") (ifseqformula "50"))
                              (builtin "One Step Simplification" (formula "54"))
                              (rule "replace_known_left" (formula "52") (term "0,1,1,0") (ifseqformula "50"))
                              (builtin "One Step Simplification" (formula "52"))
                              (rule "inEqSimp_subsumption1" (formula "37") (ifseqformula "50"))
                              (rule "leq_literals" (formula "37") (term "0"))
                              (builtin "One Step Simplification" (formula "37"))
                              (rule "true_left" (formula "37"))
                              (rule "inEqSimp_or_tautInEq1" (formula "39") (term "0"))
                              (rule "inEqSimp_homoInEq1" (formula "39") (term "1,0"))
                              (rule "polySimp_pullOutFactor1" (formula "39") (term "0,1,0"))
                              (rule "add_literals" (formula "39") (term "1,0,1,0"))
                              (rule "times_zero_1" (formula "39") (term "0,1,0"))
                              (rule "leq_literals" (formula "39") (term "1,0"))
                              (builtin "One Step Simplification" (formula "39"))
                              (rule "true_left" (formula "39"))
                              (rule "commute_or_2" (formula "51") (term "0"))
                              (builtin "One Step Simplification" (formula "51"))
                              (rule "commute_or_2" (formula "52") (term "0"))
                              (rule "inEqSimp_or_tautInEq1" (formula "52") (term "0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "52") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1" (formula "52") (term "0,1,0,0"))
                              (rule "add_literals" (formula "52") (term "1,0,1,0,0"))
                              (rule "times_zero_1" (formula "52") (term "0,1,0,0"))
                              (rule "leq_literals" (formula "52") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "52"))
                              (rule "true_left" (formula "52"))
                              (rule "commute_or_2" (formula "50") (term "0"))
                              (builtin "One Step Simplification" (formula "50"))
                              (rule "ifthenelse_split" (formula "49") (term "0"))
                              (branch "verif.selectvoting.system.core.Tag.BALLOTS.length ≥ 1 TRUE"
                                 (rule "applyEq" (formula "52") (term "1,1,1,0") (ifseqformula "50"))
                                 (rule "applyEq" (formula "47") (term "0") (ifseqformula "50"))
                                 (rule "applyEq" (formula "49") (term "0") (ifseqformula "50"))
                                 (rule "applyEq" (formula "50") (term "1,1,0") (ifseqformula "49"))
                                 (builtin "One Step Simplification" (formula "50"))
                                 (rule "inEqSimp_subsumption1" (formula "47") (ifseqformula "48"))
                                 (rule "leq_literals" (formula "47") (term "0"))
                                 (builtin "One Step Simplification" (formula "47"))
                                 (rule "true_left" (formula "47"))
                                 (rule "inEqSimp_or_tautInEq3" (formula "50") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "50") (term "1,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "50") (term "0,1,0"))
                                 (rule "add_literals" (formula "50") (term "1,0,1,0"))
                                 (rule "times_zero_1" (formula "50") (term "0,1,0"))
                                 (rule "leq_literals" (formula "50") (term "1,0"))
                                 (builtin "One Step Simplification" (formula "50"))
                                 (rule "true_left" (formula "50"))
                                 (rule "andRight" (formula "77"))
                                 (branch "Case 1"
                                    (rule "cut_direct" (formula "35") (term "0"))
                                    (branch "CUT: result_0.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "true_left" (formula "36"))
                                       (rule "cut_direct" (formula "59") (term "1"))
                                       (branch "CUT: verif.selectvoting.system.core.MixServer.MalformedData::instance(exc_3) = TRUE TRUE"
                                          (rule "instanceof_not_compatible_5" (formula "60") (term "1,0") (ifseqformula "59"))
                                          (rule "instanceof_not_compatible_5" (formula "60") (term "0,0") (ifseqformula "59"))
                                          (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "75")) (ifInst ""  (formula "75")))
                                          (rule "true_left" (formula "60"))
                                          (rule "cut_direct" (formula "52") (term "0,0"))
                                          (branch "CUT: exc_3.<created> = TRUE TRUE"
                                             (builtin "One Step Simplification" (formula "53"))
                                             (rule "true_left" (formula "53"))
                                             (rule "andRight" (formula "77"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "77"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "77"))
                                                   (branch "Case 1"
                                                      (rule "andRight" (formula "77"))
                                                      (branch "Case 1"
                                                         (rule "andRight" (formula "77"))
                                                         (branch "Case 1"
                                                            (rule "allRight" (formula "77") (inst "sk=i_273"))
                                                            (rule "orRight" (formula "77"))
                                                            (rule "notRight" (formula "78"))
                                                            (rule "orRight" (formula "78"))
                                                            (rule "inEqSimp_leqRight" (formula "78"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_geqRight" (formula "79"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_273"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "64")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                            (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "7"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "64")) (ifInst ""  (formula "7")))
                                                            (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "63"))
                                                            (rule "allLeft" (formula "24") (inst "t=i_273"))
                                                            (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "24"))
                                                            (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                                            (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "24") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "24"))
                                                            (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "24"))
                                                            (rule "qeq_literals" (formula "2") (term "0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "closeFalse" (formula "2"))
                                                         )
                                                         (branch "Case 2"
                                                            (rule "allRight" (formula "77") (inst "sk=i_272"))
                                                            (rule "orRight" (formula "77"))
                                                            (rule "notRight" (formula "78"))
                                                            (rule "orRight" (formula "78"))
                                                            (rule "inEqSimp_leqRight" (formula "78"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_geqRight" (formula "79"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_272"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "65")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                            (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "8"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "65")) (ifInst ""  (formula "8")))
                                                            (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "64"))
                                                            (rule "allLeft" (formula "26") (inst "t=i_272"))
                                                            (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "26"))
                                                            (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                                            (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "26") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "26") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "26"))
                                                            (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "26"))
                                                            (rule "qeq_literals" (formula "2") (term "0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "closeFalse" (formula "2"))
                                                         )
                                                      )
                                                      (branch "Case 2"
                                                         (rule "allRight" (formula "77") (inst "sk=i_271"))
                                                         (rule "orRight" (formula "77"))
                                                         (rule "orRight" (formula "77"))
                                                         (rule "notRight" (formula "79"))
                                                         (rule "inEqSimp_geqRight" (formula "79"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "inEqSimp_leqRight" (formula "79"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_271"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "66")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                         (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "6"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "66")) (ifInst ""  (formula "6")))
                                                         (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "65"))
                                                         (rule "allLeft" (formula "28") (inst "t=i_271"))
                                                         (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "28"))
                                                         (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "28") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "28"))
                                                         (rule "inEqSimp_contradInEq1" (formula "28") (ifseqformula "2"))
                                                         (rule "andLeft" (formula "28"))
                                                         (rule "inEqSimp_homoInEq1" (formula "28"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                                         (rule "add_literals" (formula "28") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "28") (term "1,0"))
                                                         (rule "add_literals" (formula "28") (term "0"))
                                                         (rule "leq_literals" (formula "28"))
                                                         (rule "closeFalse" (formula "28"))
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                      (rule "allRight" (formula "77") (inst "sk=i_270"))
                                                      (rule "orRight" (formula "77"))
                                                      (rule "notRight" (formula "78"))
                                                      (rule "orRight" (formula "78"))
                                                      (rule "inEqSimp_leqRight" (formula "78"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_geqRight" (formula "79"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_270"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "5"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")) (ifInst ""  (formula "5")))
                                                      (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "66"))
                                                      (rule "allLeft" (formula "30") (inst "t=i_270"))
                                                      (rule "replace_known_left" (formula "30") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "2"))
                                                      (rule "qeq_literals" (formula "30") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "inEqSimp_contradInEq1" (formula "30") (ifseqformula "1"))
                                                      (rule "andLeft" (formula "30"))
                                                      (rule "inEqSimp_homoInEq1" (formula "30"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "30") (term "0"))
                                                      (rule "add_literals" (formula "30") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "30") (term "1,0"))
                                                      (rule "add_literals" (formula "30") (term "0"))
                                                      (rule "leq_literals" (formula "30"))
                                                      (rule "closeFalse" (formula "30"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "allRight" (formula "77") (inst "sk=i_269"))
                                                   (rule "orRight" (formula "77"))
                                                   (rule "notRight" (formula "78"))
                                                   (rule "orRight" (formula "78"))
                                                   (rule "inEqSimp_leqRight" (formula "78"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_geqRight" (formula "79"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_269"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                   (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "9"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")) (ifInst ""  (formula "9")))
                                                   (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "67"))
                                                   (rule "allLeft" (formula "32") (inst "t=i_269"))
                                                   (rule "replace_known_left" (formula "32") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "32"))
                                                   (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "32") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "32"))
                                                   (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "32"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0"))
                                                   (rule "add_literals" (formula "1") (term "0"))
                                                   (rule "leq_literals" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "77") (inst "sk=i_268"))
                                                (rule "orRight" (formula "77"))
                                                (rule "notRight" (formula "78"))
                                                (rule "orRight" (formula "78"))
                                                (rule "inEqSimp_geqRight" (formula "79"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_leqRight" (formula "79"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_268"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "10"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")) (ifInst ""  (formula "10")))
                                                (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "68"))
                                                (rule "allLeft" (formula "34") (inst "t=i_268"))
                                                (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "34") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "inEqSimp_contradInEq1" (formula "34") (ifseqformula "2"))
                                                (rule "andLeft" (formula "34"))
                                                (rule "inEqSimp_homoInEq1" (formula "34"))
                                                (rule "polySimp_pullOutFactor1b" (formula "34") (term "0"))
                                                (rule "add_literals" (formula "34") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "34") (term "1,0"))
                                                (rule "add_literals" (formula "34") (term "0"))
                                                (rule "leq_literals" (formula "34"))
                                                (rule "closeFalse" (formula "34"))
                                             )
                                          )
                                          (branch "CUT: exc_3.<created> = TRUE FALSE"
                                             (builtin "One Step Simplification" (formula "52"))
                                             (rule "andRight" (formula "78"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "78"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "78"))
                                                   (branch "Case 1"
                                                      (rule "andRight" (formula "78"))
                                                      (branch "Case 1"
                                                         (rule "andRight" (formula "78"))
                                                         (branch "Case 1"
                                                            (rule "allRight" (formula "78") (inst "sk=i_267"))
                                                            (rule "orRight" (formula "78"))
                                                            (rule "notRight" (formula "79"))
                                                            (rule "orRight" (formula "79"))
                                                            (rule "inEqSimp_leqRight" (formula "79"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_geqRight" (formula "80"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_267"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "65")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                            (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "7"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "65")) (ifInst ""  (formula "7")))
                                                            (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "64"))
                                                            (rule "allLeft" (formula "24") (inst "t=i_267"))
                                                            (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "24"))
                                                            (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                                            (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "24") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "24"))
                                                            (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "2"))
                                                            (rule "qeq_literals" (formula "24") (term "0"))
                                                            (builtin "One Step Simplification" (formula "24"))
                                                            (rule "closeFalse" (formula "24"))
                                                         )
                                                         (branch "Case 2"
                                                            (rule "allRight" (formula "78") (inst "sk=i_266"))
                                                            (rule "orRight" (formula "78"))
                                                            (rule "notRight" (formula "79"))
                                                            (rule "orRight" (formula "79"))
                                                            (rule "inEqSimp_leqRight" (formula "79"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_geqRight" (formula "80"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_266"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "66")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                            (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "8"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "66")) (ifInst ""  (formula "8")))
                                                            (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "65"))
                                                            (rule "allLeft" (formula "26") (inst "t=i_266"))
                                                            (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "26"))
                                                            (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                                            (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "26") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "26") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "26"))
                                                            (rule "inEqSimp_contradInEq1" (formula "26") (ifseqformula "2"))
                                                            (rule "qeq_literals" (formula "26") (term "0"))
                                                            (builtin "One Step Simplification" (formula "26"))
                                                            (rule "closeFalse" (formula "26"))
                                                         )
                                                      )
                                                      (branch "Case 2"
                                                         (rule "allRight" (formula "78") (inst "sk=i_265"))
                                                         (rule "orRight" (formula "78"))
                                                         (rule "orRight" (formula "78"))
                                                         (rule "notRight" (formula "80"))
                                                         (rule "inEqSimp_geqRight" (formula "80"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "inEqSimp_leqRight" (formula "80"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_265"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                         (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "6"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")) (ifInst ""  (formula "6")))
                                                         (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "66"))
                                                         (rule "allLeft" (formula "28") (inst "t=i_265"))
                                                         (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "28"))
                                                         (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                                                         (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "28") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "28") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "28"))
                                                         (rule "inEqSimp_contradInEq1" (formula "28") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "28") (term "0"))
                                                         (builtin "One Step Simplification" (formula "28"))
                                                         (rule "closeFalse" (formula "28"))
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                      (rule "allRight" (formula "78") (inst "sk=i_264"))
                                                      (rule "orRight" (formula "78"))
                                                      (rule "notRight" (formula "79"))
                                                      (rule "orRight" (formula "79"))
                                                      (rule "inEqSimp_leqRight" (formula "79"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_geqRight" (formula "80"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_264"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "5"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")) (ifInst ""  (formula "5")))
                                                      (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "67"))
                                                      (rule "allLeft" (formula "30") (inst "t=i_264"))
                                                      (rule "replace_known_left" (formula "30") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                                                      (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "30") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "30") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "30"))
                                                      (rule "qeq_literals" (formula "2") (term "0"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "closeFalse" (formula "2"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "allRight" (formula "78") (inst "sk=i_263"))
                                                   (rule "orRight" (formula "78"))
                                                   (rule "notRight" (formula "79"))
                                                   (rule "orRight" (formula "79"))
                                                   (rule "inEqSimp_geqRight" (formula "80"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_leqRight" (formula "80"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_263"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                   (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "9"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")) (ifInst ""  (formula "9")))
                                                   (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "68"))
                                                   (rule "allLeft" (formula "32") (inst "t=i_263"))
                                                   (rule "replace_known_left" (formula "32") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "32"))
                                                   (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                                                   (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "32") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "32") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "32"))
                                                   (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "32"))
                                                   (rule "qeq_literals" (formula "1") (term "0"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "78") (inst "sk=i_262"))
                                                (rule "orRight" (formula "78"))
                                                (rule "notRight" (formula "79"))
                                                (rule "orRight" (formula "79"))
                                                (rule "inEqSimp_geqRight" (formula "80"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_leqRight" (formula "80"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_262"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "70")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "10"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "70")) (ifInst ""  (formula "10")))
                                                (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "69"))
                                                (rule "allLeft" (formula "34") (inst "t=i_262"))
                                                (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                                (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                                (rule "leq_literals" (formula "34") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "34"))
                                                (rule "qeq_literals" (formula "1") (term "0"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                       )
                                       (branch "CUT: verif.selectvoting.system.core.MixServer.MalformedData::instance(exc_3) = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "59"))
                                          (rule "cut_direct" (formula "52") (term "0,0"))
                                          (branch "CUT: exc_3.<created> = TRUE TRUE"
                                             (builtin "One Step Simplification" (formula "53"))
                                             (rule "true_left" (formula "53"))
                                             (rule "andRight" (formula "78"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "78"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "78"))
                                                   (branch "Case 1"
                                                      (rule "andRight" (formula "78"))
                                                      (branch "Case 1"
                                                         (rule "andRight" (formula "78"))
                                                         (branch "Case 1"
                                                            (rule "allRight" (formula "78") (inst "sk=i_261"))
                                                            (rule "orRight" (formula "78"))
                                                            (rule "orRight" (formula "78"))
                                                            (rule "notRight" (formula "80"))
                                                            (rule "inEqSimp_leqRight" (formula "79"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_geqRight" (formula "80"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_261"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "65")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                            (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "7"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "65")) (ifInst ""  (formula "7")))
                                                            (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "64"))
                                                            (rule "allLeft" (formula "24") (inst "t=i_261"))
                                                            (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "24"))
                                                            (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "2"))
                                                            (rule "qeq_literals" (formula "24") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "24"))
                                                            (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "1"))
                                                            (rule "andLeft" (formula "24"))
                                                            (rule "inEqSimp_homoInEq1" (formula "24"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                                            (rule "add_literals" (formula "24") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "24") (term "1,0"))
                                                            (rule "add_zero_right" (formula "24") (term "0"))
                                                            (rule "leq_literals" (formula "24"))
                                                            (rule "closeFalse" (formula "24"))
                                                         )
                                                         (branch "Case 2"
                                                            (rule "allRight" (formula "78") (inst "sk=i_260"))
                                                            (rule "orRight" (formula "78"))
                                                            (rule "orRight" (formula "78"))
                                                            (rule "notRight" (formula "80"))
                                                            (rule "inEqSimp_leqRight" (formula "79"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_geqRight" (formula "80"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_260"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "66")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                            (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "8"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "66")) (ifInst ""  (formula "8")))
                                                            (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "65"))
                                                            (rule "allLeft" (formula "26") (inst "t=i_260"))
                                                            (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "26"))
                                                            (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "2"))
                                                            (rule "qeq_literals" (formula "26") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "26"))
                                                            (rule "inEqSimp_contradInEq1" (formula "26") (ifseqformula "1"))
                                                            (rule "andLeft" (formula "26"))
                                                            (rule "inEqSimp_homoInEq1" (formula "26"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                                            (rule "add_literals" (formula "26") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "26") (term "1,0"))
                                                            (rule "add_zero_right" (formula "26") (term "0"))
                                                            (rule "leq_literals" (formula "26"))
                                                            (rule "closeFalse" (formula "26"))
                                                         )
                                                      )
                                                      (branch "Case 2"
                                                         (rule "allRight" (formula "78") (inst "sk=i_259"))
                                                         (rule "orRight" (formula "78"))
                                                         (rule "orRight" (formula "78"))
                                                         (rule "notRight" (formula "80"))
                                                         (rule "inEqSimp_leqRight" (formula "79"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_geqRight" (formula "80"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_259"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                         (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "6"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")) (ifInst ""  (formula "6")))
                                                         (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "66"))
                                                         (rule "allLeft" (formula "28") (inst "t=i_259"))
                                                         (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "28"))
                                                         (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "2"))
                                                         (rule "qeq_literals" (formula "28") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "28"))
                                                         (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "28"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0"))
                                                         (rule "leq_literals" (formula "1"))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                      (rule "allRight" (formula "78") (inst "sk=i_258"))
                                                      (rule "orRight" (formula "78"))
                                                      (rule "orRight" (formula "78"))
                                                      (rule "notRight" (formula "80"))
                                                      (rule "inEqSimp_leqRight" (formula "79"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_geqRight" (formula "80"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_258"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "5"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")) (ifInst ""  (formula "5")))
                                                      (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "67"))
                                                      (rule "allLeft" (formula "30") (inst "t=i_258"))
                                                      (rule "replace_known_left" (formula "30") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "2"))
                                                      (rule "qeq_literals" (formula "30") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "inEqSimp_contradInEq1" (formula "30") (ifseqformula "1"))
                                                      (rule "andLeft" (formula "30"))
                                                      (rule "inEqSimp_homoInEq1" (formula "30"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "30") (term "0"))
                                                      (rule "add_literals" (formula "30") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "30") (term "1,0"))
                                                      (rule "add_zero_right" (formula "30") (term "0"))
                                                      (rule "leq_literals" (formula "30"))
                                                      (rule "closeFalse" (formula "30"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "allRight" (formula "78") (inst "sk=i_257"))
                                                   (rule "orRight" (formula "78"))
                                                   (rule "orRight" (formula "78"))
                                                   (rule "notRight" (formula "80"))
                                                   (rule "inEqSimp_leqRight" (formula "79"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_geqRight" (formula "80"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_257"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                   (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "9"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")) (ifInst ""  (formula "9")))
                                                   (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "68"))
                                                   (rule "allLeft" (formula "32") (inst "t=i_257"))
                                                   (rule "replace_known_left" (formula "32") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "32"))
                                                   (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "32") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "32"))
                                                   (rule "inEqSimp_contradInEq1" (formula "32") (ifseqformula "1"))
                                                   (rule "andLeft" (formula "32"))
                                                   (rule "inEqSimp_homoInEq1" (formula "32"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "32") (term "0"))
                                                   (rule "add_literals" (formula "32") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "32") (term "1,0"))
                                                   (rule "add_zero_right" (formula "32") (term "0"))
                                                   (rule "leq_literals" (formula "32"))
                                                   (rule "closeFalse" (formula "32"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "78") (inst "sk=i_256"))
                                                (rule "orRight" (formula "78"))
                                                (rule "orRight" (formula "78"))
                                                (rule "notRight" (formula "80"))
                                                (rule "inEqSimp_leqRight" (formula "79"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_geqRight" (formula "80"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_256"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "70")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "10"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "70")) (ifInst ""  (formula "10")))
                                                (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "69"))
                                                (rule "allLeft" (formula "34") (inst "t=i_256"))
                                                (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                                (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                                (rule "leq_literals" (formula "34") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "34"))
                                                (rule "qeq_literals" (formula "2") (term "0"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                          )
                                          (branch "CUT: exc_3.<created> = TRUE FALSE"
                                             (builtin "One Step Simplification" (formula "52"))
                                             (rule "andRight" (formula "79"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "79"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "79"))
                                                   (branch "Case 1"
                                                      (rule "andRight" (formula "79"))
                                                      (branch "Case 1"
                                                         (rule "andRight" (formula "79"))
                                                         (branch "Case 1"
                                                            (rule "allRight" (formula "79") (inst "sk=i_255"))
                                                            (rule "orRight" (formula "79"))
                                                            (rule "notRight" (formula "80"))
                                                            (rule "orRight" (formula "80"))
                                                            (rule "inEqSimp_leqRight" (formula "80"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_geqRight" (formula "81"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_255"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "66")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                            (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "7"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "66")) (ifInst ""  (formula "7")))
                                                            (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "65"))
                                                            (rule "allLeft" (formula "24") (inst "t=i_255"))
                                                            (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "24"))
                                                            (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "2"))
                                                            (rule "qeq_literals" (formula "24") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "24"))
                                                            (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "1"))
                                                            (rule "andLeft" (formula "24"))
                                                            (rule "inEqSimp_homoInEq1" (formula "24"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                                            (rule "add_literals" (formula "24") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "24") (term "1,0"))
                                                            (rule "add_zero_right" (formula "24") (term "0"))
                                                            (rule "leq_literals" (formula "24"))
                                                            (rule "closeFalse" (formula "24"))
                                                         )
                                                         (branch "Case 2"
                                                            (rule "allRight" (formula "79") (inst "sk=i_254"))
                                                            (rule "orRight" (formula "79"))
                                                            (rule "notRight" (formula "80"))
                                                            (rule "orRight" (formula "80"))
                                                            (rule "inEqSimp_leqRight" (formula "80"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_geqRight" (formula "81"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_254"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                            (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "8"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")) (ifInst ""  (formula "8")))
                                                            (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "66"))
                                                            (rule "allLeft" (formula "26") (inst "t=i_254"))
                                                            (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "26"))
                                                            (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "2"))
                                                            (rule "qeq_literals" (formula "26") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "26"))
                                                            (rule "inEqSimp_contradInEq1" (formula "26") (ifseqformula "1"))
                                                            (rule "andLeft" (formula "26"))
                                                            (rule "inEqSimp_homoInEq1" (formula "26"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                                            (rule "add_literals" (formula "26") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "26") (term "1,0"))
                                                            (rule "add_zero_right" (formula "26") (term "0"))
                                                            (rule "leq_literals" (formula "26"))
                                                            (rule "closeFalse" (formula "26"))
                                                         )
                                                      )
                                                      (branch "Case 2"
                                                         (rule "allRight" (formula "79") (inst "sk=i_253"))
                                                         (rule "orRight" (formula "79"))
                                                         (rule "notRight" (formula "80"))
                                                         (rule "orRight" (formula "80"))
                                                         (rule "inEqSimp_leqRight" (formula "80"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_geqRight" (formula "81"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_253"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                         (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "6"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")) (ifInst ""  (formula "6")))
                                                         (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "67"))
                                                         (rule "allLeft" (formula "28") (inst "t=i_253"))
                                                         (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "28"))
                                                         (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "2"))
                                                         (rule "qeq_literals" (formula "28") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "28"))
                                                         (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "28"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0"))
                                                         (rule "leq_literals" (formula "1"))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                      (rule "allRight" (formula "79") (inst "sk=i_252"))
                                                      (rule "orRight" (formula "79"))
                                                      (rule "notRight" (formula "80"))
                                                      (rule "orRight" (formula "80"))
                                                      (rule "inEqSimp_geqRight" (formula "81"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_leqRight" (formula "81"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_252"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "5"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")) (ifInst ""  (formula "5")))
                                                      (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "68"))
                                                      (rule "allLeft" (formula "30") (inst "t=i_252"))
                                                      (rule "replace_known_left" (formula "30") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "30") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "inEqSimp_contradInEq1" (formula "30") (ifseqformula "2"))
                                                      (rule "andLeft" (formula "30"))
                                                      (rule "inEqSimp_homoInEq1" (formula "30"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "30") (term "0"))
                                                      (rule "add_literals" (formula "30") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "30") (term "1,0"))
                                                      (rule "add_zero_right" (formula "30") (term "0"))
                                                      (rule "leq_literals" (formula "30"))
                                                      (rule "closeFalse" (formula "30"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "allRight" (formula "79") (inst "sk=i_251"))
                                                   (rule "orRight" (formula "79"))
                                                   (rule "notRight" (formula "80"))
                                                   (rule "orRight" (formula "80"))
                                                   (rule "inEqSimp_leqRight" (formula "80"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_geqRight" (formula "81"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_251"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "70")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                   (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "9"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "70")) (ifInst ""  (formula "9")))
                                                   (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "69"))
                                                   (rule "allLeft" (formula "32") (inst "t=i_251"))
                                                   (rule "replace_known_left" (formula "32") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "32"))
                                                   (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                                                   (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "32") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "32") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "32"))
                                                   (rule "inEqSimp_contradInEq1" (formula "32") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "32") (term "0"))
                                                   (builtin "One Step Simplification" (formula "32"))
                                                   (rule "closeFalse" (formula "32"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "79") (inst "sk=i_250"))
                                                (rule "orRight" (formula "79"))
                                                (rule "notRight" (formula "80"))
                                                (rule "orRight" (formula "80"))
                                                (rule "inEqSimp_leqRight" (formula "80"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_geqRight" (formula "81"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_250"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "71")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "10"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "71")) (ifInst ""  (formula "10")))
                                                (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "70"))
                                                (rule "allLeft" (formula "34") (inst "t=i_250"))
                                                (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "34") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "inEqSimp_contradInEq1" (formula "34") (ifseqformula "1"))
                                                (rule "andLeft" (formula "34"))
                                                (rule "inEqSimp_homoInEq1" (formula "34"))
                                                (rule "polySimp_pullOutFactor1b" (formula "34") (term "0"))
                                                (rule "add_literals" (formula "34") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "34") (term "1,0"))
                                                (rule "add_zero_right" (formula "34") (term "0"))
                                                (rule "leq_literals" (formula "34"))
                                                (rule "closeFalse" (formula "34"))
                                             )
                                          )
                                       )
                                    )
                                    (branch "CUT: result_0.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "cut_direct" (formula "59") (term "1"))
                                       (branch "CUT: verif.selectvoting.system.core.MixServer.MalformedData::instance(exc_3) = TRUE TRUE"
                                          (rule "instanceof_not_compatible_5" (formula "60") (term "1,0") (ifseqformula "59"))
                                          (rule "instanceof_not_compatible_5" (formula "60") (term "0,0") (ifseqformula "59"))
                                          (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "76")) (ifInst ""  (formula "76")))
                                          (rule "true_left" (formula "60"))
                                          (rule "cut_direct" (formula "52") (term "0,0"))
                                          (branch "CUT: exc_3.<created> = TRUE TRUE"
                                             (builtin "One Step Simplification" (formula "53"))
                                             (rule "true_left" (formula "53"))
                                             (rule "andRight" (formula "78"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "78"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "78"))
                                                   (branch "Case 1"
                                                      (rule "andRight" (formula "78"))
                                                      (branch "Case 1"
                                                         (rule "andRight" (formula "78"))
                                                         (branch "Case 1"
                                                            (rule "allRight" (formula "78") (inst "sk=i_249"))
                                                            (rule "orRight" (formula "78"))
                                                            (rule "orRight" (formula "78"))
                                                            (rule "notRight" (formula "80"))
                                                            (rule "inEqSimp_geqRight" (formula "80"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                            (rule "inEqSimp_leqRight" (formula "80"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                            (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_249"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "65")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                            (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "7"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "65")) (ifInst ""  (formula "7")))
                                                            (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "64"))
                                                            (rule "allLeft" (formula "24") (inst "t=i_249"))
                                                            (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "24"))
                                                            (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "1"))
                                                            (rule "qeq_literals" (formula "24") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "24"))
                                                            (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "2"))
                                                            (rule "andLeft" (formula "24"))
                                                            (rule "inEqSimp_homoInEq1" (formula "24"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                                            (rule "add_literals" (formula "24") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "24") (term "1,0"))
                                                            (rule "add_zero_right" (formula "24") (term "0"))
                                                            (rule "leq_literals" (formula "24"))
                                                            (rule "closeFalse" (formula "24"))
                                                         )
                                                         (branch "Case 2"
                                                            (rule "allRight" (formula "78") (inst "sk=i_248"))
                                                            (rule "orRight" (formula "78"))
                                                            (rule "orRight" (formula "78"))
                                                            (rule "notRight" (formula "80"))
                                                            (rule "inEqSimp_geqRight" (formula "80"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                            (rule "inEqSimp_leqRight" (formula "80"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                            (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_248"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "66")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                            (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "8"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "66")) (ifInst ""  (formula "8")))
                                                            (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "65"))
                                                            (rule "allLeft" (formula "26") (inst "t=i_248"))
                                                            (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "26"))
                                                            (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "1"))
                                                            (rule "qeq_literals" (formula "26") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "26"))
                                                            (rule "inEqSimp_contradInEq1" (formula "26") (ifseqformula "2"))
                                                            (rule "andLeft" (formula "26"))
                                                            (rule "inEqSimp_homoInEq1" (formula "26"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                                            (rule "add_literals" (formula "26") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "26") (term "1,0"))
                                                            (rule "add_zero_right" (formula "26") (term "0"))
                                                            (rule "leq_literals" (formula "26"))
                                                            (rule "closeFalse" (formula "26"))
                                                         )
                                                      )
                                                      (branch "Case 2"
                                                         (rule "allRight" (formula "78") (inst "sk=i_247"))
                                                         (rule "orRight" (formula "78"))
                                                         (rule "orRight" (formula "78"))
                                                         (rule "notRight" (formula "80"))
                                                         (rule "inEqSimp_leqRight" (formula "79"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_geqRight" (formula "80"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_247"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                         (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "6"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")) (ifInst ""  (formula "6")))
                                                         (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "66"))
                                                         (rule "allLeft" (formula "28") (inst "t=i_247"))
                                                         (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "28"))
                                                         (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "2"))
                                                         (rule "qeq_literals" (formula "28") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "28"))
                                                         (rule "inEqSimp_contradInEq1" (formula "28") (ifseqformula "1"))
                                                         (rule "andLeft" (formula "28"))
                                                         (rule "inEqSimp_homoInEq1" (formula "28"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                                         (rule "add_literals" (formula "28") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "28") (term "1,0"))
                                                         (rule "add_zero_right" (formula "28") (term "0"))
                                                         (rule "leq_literals" (formula "28"))
                                                         (rule "closeFalse" (formula "28"))
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                      (rule "allRight" (formula "78") (inst "sk=i_246"))
                                                      (rule "orRight" (formula "78"))
                                                      (rule "orRight" (formula "78"))
                                                      (rule "notRight" (formula "80"))
                                                      (rule "inEqSimp_geqRight" (formula "80"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_leqRight" (formula "80"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_246"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "5"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")) (ifInst ""  (formula "5")))
                                                      (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "67"))
                                                      (rule "allLeft" (formula "30") (inst "t=i_246"))
                                                      (rule "replace_known_left" (formula "30") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "30") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "inEqSimp_contradInEq1" (formula "30") (ifseqformula "2"))
                                                      (rule "andLeft" (formula "30"))
                                                      (rule "inEqSimp_homoInEq1" (formula "30"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "30") (term "0"))
                                                      (rule "add_literals" (formula "30") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "30") (term "1,0"))
                                                      (rule "add_zero_right" (formula "30") (term "0"))
                                                      (rule "leq_literals" (formula "30"))
                                                      (rule "closeFalse" (formula "30"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "allRight" (formula "78") (inst "sk=i_245"))
                                                   (rule "orRight" (formula "78"))
                                                   (rule "orRight" (formula "78"))
                                                   (rule "notRight" (formula "80"))
                                                   (rule "inEqSimp_geqRight" (formula "80"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_leqRight" (formula "80"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_245"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                   (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "9"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")) (ifInst ""  (formula "9")))
                                                   (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "68"))
                                                   (rule "allLeft" (formula "32") (inst "t=i_245"))
                                                   (rule "replace_known_left" (formula "32") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "32"))
                                                   (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                                                   (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "32") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "32") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "32"))
                                                   (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "32"))
                                                   (rule "qeq_literals" (formula "1") (term "0"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "78") (inst "sk=i_244"))
                                                (rule "orRight" (formula "78"))
                                                (rule "orRight" (formula "78"))
                                                (rule "notRight" (formula "80"))
                                                (rule "inEqSimp_geqRight" (formula "80"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_leqRight" (formula "80"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_244"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "70")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "10"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "70")) (ifInst ""  (formula "10")))
                                                (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "69"))
                                                (rule "allLeft" (formula "34") (inst "t=i_244"))
                                                (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "34") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "inEqSimp_contradInEq1" (formula "34") (ifseqformula "2"))
                                                (rule "andLeft" (formula "34"))
                                                (rule "inEqSimp_homoInEq1" (formula "34"))
                                                (rule "polySimp_pullOutFactor1b" (formula "34") (term "0"))
                                                (rule "add_literals" (formula "34") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "34") (term "1,0"))
                                                (rule "add_zero_right" (formula "34") (term "0"))
                                                (rule "leq_literals" (formula "34"))
                                                (rule "closeFalse" (formula "34"))
                                             )
                                          )
                                          (branch "CUT: exc_3.<created> = TRUE FALSE"
                                             (builtin "One Step Simplification" (formula "52"))
                                             (rule "andRight" (formula "79"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "79"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "79"))
                                                   (branch "Case 1"
                                                      (rule "andRight" (formula "79"))
                                                      (branch "Case 1"
                                                         (rule "andRight" (formula "79"))
                                                         (branch "Case 1"
                                                            (rule "allRight" (formula "79") (inst "sk=i_243"))
                                                            (rule "orRight" (formula "79"))
                                                            (rule "orRight" (formula "79"))
                                                            (rule "notRight" (formula "81"))
                                                            (rule "inEqSimp_geqRight" (formula "81"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                            (rule "inEqSimp_leqRight" (formula "81"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                            (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_243"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "66")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                            (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "7"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "66")) (ifInst ""  (formula "7")))
                                                            (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "65"))
                                                            (rule "allLeft" (formula "24") (inst "t=i_243"))
                                                            (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "24"))
                                                            (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "1"))
                                                            (rule "qeq_literals" (formula "24") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "24"))
                                                            (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "2"))
                                                            (rule "andLeft" (formula "24"))
                                                            (rule "inEqSimp_homoInEq1" (formula "24"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                                            (rule "add_literals" (formula "24") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "24") (term "1,0"))
                                                            (rule "add_zero_right" (formula "24") (term "0"))
                                                            (rule "leq_literals" (formula "24"))
                                                            (rule "closeFalse" (formula "24"))
                                                         )
                                                         (branch "Case 2"
                                                            (rule "allRight" (formula "79") (inst "sk=i_242"))
                                                            (rule "orRight" (formula "79"))
                                                            (rule "orRight" (formula "79"))
                                                            (rule "notRight" (formula "81"))
                                                            (rule "inEqSimp_geqRight" (formula "81"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                            (rule "inEqSimp_leqRight" (formula "81"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                            (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_242"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                            (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "8"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")) (ifInst ""  (formula "8")))
                                                            (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "66"))
                                                            (rule "allLeft" (formula "26") (inst "t=i_242"))
                                                            (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "26"))
                                                            (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "1"))
                                                            (rule "qeq_literals" (formula "26") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "26"))
                                                            (rule "inEqSimp_contradInEq1" (formula "26") (ifseqformula "2"))
                                                            (rule "andLeft" (formula "26"))
                                                            (rule "inEqSimp_homoInEq1" (formula "26"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                                            (rule "add_literals" (formula "26") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "26") (term "1,0"))
                                                            (rule "add_zero_right" (formula "26") (term "0"))
                                                            (rule "leq_literals" (formula "26"))
                                                            (rule "closeFalse" (formula "26"))
                                                         )
                                                      )
                                                      (branch "Case 2"
                                                         (rule "allRight" (formula "79") (inst "sk=i_241"))
                                                         (rule "orRight" (formula "79"))
                                                         (rule "orRight" (formula "79"))
                                                         (rule "notRight" (formula "81"))
                                                         (rule "inEqSimp_geqRight" (formula "81"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "inEqSimp_leqRight" (formula "81"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_241"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                         (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "6"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")) (ifInst ""  (formula "6")))
                                                         (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "67"))
                                                         (rule "allLeft" (formula "28") (inst "t=i_241"))
                                                         (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "28"))
                                                         (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "28") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "28"))
                                                         (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "28"))
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "2"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                         (rule "add_literals" (formula "2") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "2") (term "1,0"))
                                                         (rule "add_zero_right" (formula "2") (term "0"))
                                                         (rule "leq_literals" (formula "2"))
                                                         (rule "closeFalse" (formula "2"))
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                      (rule "allRight" (formula "79") (inst "sk=i_240"))
                                                      (rule "orRight" (formula "79"))
                                                      (rule "orRight" (formula "79"))
                                                      (rule "notRight" (formula "81"))
                                                      (rule "inEqSimp_geqRight" (formula "81"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_leqRight" (formula "81"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_240"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "5"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")) (ifInst ""  (formula "5")))
                                                      (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "68"))
                                                      (rule "allLeft" (formula "30") (inst "t=i_240"))
                                                      (rule "replace_known_left" (formula "30") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "30") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "30"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0"))
                                                      (rule "leq_literals" (formula "2"))
                                                      (rule "closeFalse" (formula "2"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "allRight" (formula "79") (inst "sk=i_239"))
                                                   (rule "orRight" (formula "79"))
                                                   (rule "orRight" (formula "79"))
                                                   (rule "notRight" (formula "81"))
                                                   (rule "inEqSimp_leqRight" (formula "80"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_geqRight" (formula "81"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_239"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "70")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                   (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "9"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "70")) (ifInst ""  (formula "9")))
                                                   (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "69"))
                                                   (rule "allLeft" (formula "32") (inst "t=i_239"))
                                                   (rule "replace_known_left" (formula "32") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "32"))
                                                   (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "32") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "32"))
                                                   (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "32"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0"))
                                                   (rule "leq_literals" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "79") (inst "sk=i_238"))
                                                (rule "orRight" (formula "79"))
                                                (rule "orRight" (formula "79"))
                                                (rule "notRight" (formula "81"))
                                                (rule "inEqSimp_geqRight" (formula "81"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_leqRight" (formula "81"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_238"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "71")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "10"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "71")) (ifInst ""  (formula "10")))
                                                (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "70"))
                                                (rule "allLeft" (formula "34") (inst "t=i_238"))
                                                (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "34") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "34"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "2"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0"))
                                                (rule "add_zero_right" (formula "2") (term "0"))
                                                (rule "leq_literals" (formula "2"))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                          )
                                       )
                                       (branch "CUT: verif.selectvoting.system.core.MixServer.MalformedData::instance(exc_3) = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "59"))
                                          (rule "cut_direct" (formula "52") (term "0,0"))
                                          (branch "CUT: exc_3.<created> = TRUE TRUE"
                                             (builtin "One Step Simplification" (formula "53"))
                                             (rule "true_left" (formula "53"))
                                             (rule "andRight" (formula "79"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "79"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "79"))
                                                   (branch "Case 1"
                                                      (rule "andRight" (formula "79"))
                                                      (branch "Case 1"
                                                         (rule "andRight" (formula "79"))
                                                         (branch "Case 1"
                                                            (rule "allRight" (formula "79") (inst "sk=i_237"))
                                                            (rule "orRight" (formula "79"))
                                                            (rule "orRight" (formula "79"))
                                                            (rule "notRight" (formula "81"))
                                                            (rule "inEqSimp_leqRight" (formula "80"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_geqRight" (formula "81"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_237"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "66")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                            (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "7"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "66")) (ifInst ""  (formula "7")))
                                                            (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "65"))
                                                            (rule "allLeft" (formula "24") (inst "t=i_237"))
                                                            (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "24"))
                                                            (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                                            (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "24") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "24") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "24"))
                                                            (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "24"))
                                                            (rule "qeq_literals" (formula "2") (term "0"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "closeFalse" (formula "2"))
                                                         )
                                                         (branch "Case 2"
                                                            (rule "allRight" (formula "79") (inst "sk=i_236"))
                                                            (rule "orRight" (formula "79"))
                                                            (rule "orRight" (formula "79"))
                                                            (rule "notRight" (formula "81"))
                                                            (rule "inEqSimp_leqRight" (formula "80"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_geqRight" (formula "81"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_236"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                            (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "8"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")) (ifInst ""  (formula "8")))
                                                            (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "66"))
                                                            (rule "allLeft" (formula "26") (inst "t=i_236"))
                                                            (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "26"))
                                                            (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                                            (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                                            (rule "add_literals" (formula "26") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "26") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "26"))
                                                            (rule "inEqSimp_contradInEq1" (formula "26") (ifseqformula "2"))
                                                            (rule "qeq_literals" (formula "26") (term "0"))
                                                            (builtin "One Step Simplification" (formula "26"))
                                                            (rule "closeFalse" (formula "26"))
                                                         )
                                                      )
                                                      (branch "Case 2"
                                                         (rule "allRight" (formula "79") (inst "sk=i_235"))
                                                         (rule "orRight" (formula "79"))
                                                         (rule "orRight" (formula "79"))
                                                         (rule "notRight" (formula "81"))
                                                         (rule "inEqSimp_geqRight" (formula "81"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "inEqSimp_leqRight" (formula "81"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_235"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                         (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "6"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")) (ifInst ""  (formula "6")))
                                                         (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "67"))
                                                         (rule "allLeft" (formula "28") (inst "t=i_235"))
                                                         (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "28"))
                                                         (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "28") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "28"))
                                                         (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "28"))
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "2"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                         (rule "add_literals" (formula "2") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "2") (term "1,0"))
                                                         (rule "add_zero_right" (formula "2") (term "0"))
                                                         (rule "leq_literals" (formula "2"))
                                                         (rule "closeFalse" (formula "2"))
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                      (rule "allRight" (formula "79") (inst "sk=i_234"))
                                                      (rule "orRight" (formula "79"))
                                                      (rule "orRight" (formula "79"))
                                                      (rule "notRight" (formula "81"))
                                                      (rule "inEqSimp_geqRight" (formula "81"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_leqRight" (formula "81"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_234"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "5"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")) (ifInst ""  (formula "5")))
                                                      (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "68"))
                                                      (rule "allLeft" (formula "30") (inst "t=i_234"))
                                                      (rule "replace_known_left" (formula "30") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                                                      (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "30") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "30") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "30"))
                                                      (rule "qeq_literals" (formula "1") (term "0"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "allRight" (formula "79") (inst "sk=i_233"))
                                                   (rule "orRight" (formula "79"))
                                                   (rule "orRight" (formula "79"))
                                                   (rule "notRight" (formula "81"))
                                                   (rule "inEqSimp_leqRight" (formula "80"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_geqRight" (formula "81"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_233"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "70")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                   (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "9"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "70")) (ifInst ""  (formula "9")))
                                                   (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "69"))
                                                   (rule "allLeft" (formula "32") (inst "t=i_233"))
                                                   (rule "replace_known_left" (formula "32") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "32"))
                                                   (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                                                   (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "32") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "32") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "32"))
                                                   (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "32"))
                                                   (rule "qeq_literals" (formula "2") (term "0"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "79") (inst "sk=i_232"))
                                                (rule "orRight" (formula "79"))
                                                (rule "orRight" (formula "79"))
                                                (rule "notRight" (formula "81"))
                                                (rule "inEqSimp_leqRight" (formula "80"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_geqRight" (formula "81"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_232"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "71")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "10"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "71")) (ifInst ""  (formula "10")))
                                                (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "70"))
                                                (rule "allLeft" (formula "34") (inst "t=i_232"))
                                                (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                                (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "34") (term "0,0,1"))
                                                (rule "leq_literals" (formula "34") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "34"))
                                                (rule "qeq_literals" (formula "2") (term "0"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                          )
                                          (branch "CUT: exc_3.<created> = TRUE FALSE"
                                             (builtin "One Step Simplification" (formula "52"))
                                             (rule "andRight" (formula "80"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "80"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "80"))
                                                   (branch "Case 1"
                                                      (rule "andRight" (formula "80"))
                                                      (branch "Case 1"
                                                         (rule "andRight" (formula "80"))
                                                         (branch "Case 1"
                                                            (rule "allRight" (formula "80") (inst "sk=i_231"))
                                                            (rule "orRight" (formula "80"))
                                                            (rule "notRight" (formula "81"))
                                                            (rule "orRight" (formula "81"))
                                                            (rule "inEqSimp_leqRight" (formula "81"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_geqRight" (formula "82"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_231"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                            (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "7"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")) (ifInst ""  (formula "7")))
                                                            (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "66"))
                                                            (rule "allLeft" (formula "24") (inst "t=i_231"))
                                                            (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "24"))
                                                            (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                                            (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "24") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "24"))
                                                            (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "2"))
                                                            (rule "qeq_literals" (formula "24") (term "0"))
                                                            (builtin "One Step Simplification" (formula "24"))
                                                            (rule "closeFalse" (formula "24"))
                                                         )
                                                         (branch "Case 2"
                                                            (rule "allRight" (formula "80") (inst "sk=i_230"))
                                                            (rule "orRight" (formula "80"))
                                                            (rule "notRight" (formula "81"))
                                                            (rule "orRight" (formula "81"))
                                                            (rule "inEqSimp_leqRight" (formula "81"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_geqRight" (formula "82"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_230"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                            (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "8"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")) (ifInst ""  (formula "8")))
                                                            (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "67"))
                                                            (rule "allLeft" (formula "26") (inst "t=i_230"))
                                                            (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "26"))
                                                            (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                                            (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "26") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "26") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "26"))
                                                            (rule "inEqSimp_contradInEq1" (formula "26") (ifseqformula "2"))
                                                            (rule "qeq_literals" (formula "26") (term "0"))
                                                            (builtin "One Step Simplification" (formula "26"))
                                                            (rule "closeFalse" (formula "26"))
                                                         )
                                                      )
                                                      (branch "Case 2"
                                                         (rule "allRight" (formula "80") (inst "sk=i_229"))
                                                         (rule "orRight" (formula "80"))
                                                         (rule "notRight" (formula "81"))
                                                         (rule "orRight" (formula "81"))
                                                         (rule "inEqSimp_geqRight" (formula "82"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "inEqSimp_leqRight" (formula "82"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_229"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                         (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "6"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")) (ifInst ""  (formula "6")))
                                                         (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "68"))
                                                         (rule "allLeft" (formula "28") (inst "t=i_229"))
                                                         (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "28"))
                                                         (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                                                         (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "28") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "28") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "28"))
                                                         (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "28"))
                                                         (rule "qeq_literals" (formula "1") (term "0"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                      (rule "allRight" (formula "80") (inst "sk=i_228"))
                                                      (rule "orRight" (formula "80"))
                                                      (rule "notRight" (formula "81"))
                                                      (rule "orRight" (formula "81"))
                                                      (rule "inEqSimp_leqRight" (formula "81"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_geqRight" (formula "82"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_228"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "70")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "5"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "70")) (ifInst ""  (formula "5")))
                                                      (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "69"))
                                                      (rule "allLeft" (formula "30") (inst "t=i_228"))
                                                      (rule "replace_known_left" (formula "30") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "2"))
                                                      (rule "qeq_literals" (formula "30") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "inEqSimp_contradInEq1" (formula "30") (ifseqformula "1"))
                                                      (rule "andLeft" (formula "30"))
                                                      (rule "inEqSimp_homoInEq1" (formula "30"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "30") (term "0"))
                                                      (rule "add_literals" (formula "30") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "30") (term "1,0"))
                                                      (rule "add_zero_right" (formula "30") (term "0"))
                                                      (rule "leq_literals" (formula "30"))
                                                      (rule "closeFalse" (formula "30"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "allRight" (formula "80") (inst "sk=i_227"))
                                                   (rule "orRight" (formula "80"))
                                                   (rule "notRight" (formula "81"))
                                                   (rule "orRight" (formula "81"))
                                                   (rule "inEqSimp_geqRight" (formula "82"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_leqRight" (formula "82"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_227"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "71")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                   (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "9"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "71")) (ifInst ""  (formula "9")))
                                                   (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "70"))
                                                   (rule "allLeft" (formula "32") (inst "t=i_227"))
                                                   (rule "replace_known_left" (formula "32") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "32"))
                                                   (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                                                   (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "32") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "32") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "32"))
                                                   (rule "inEqSimp_contradInEq1" (formula "32") (ifseqformula "1"))
                                                   (rule "qeq_literals" (formula "32") (term "0"))
                                                   (builtin "One Step Simplification" (formula "32"))
                                                   (rule "closeFalse" (formula "32"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "80") (inst "sk=i_226"))
                                                (rule "orRight" (formula "80"))
                                                (rule "notRight" (formula "81"))
                                                (rule "orRight" (formula "81"))
                                                (rule "inEqSimp_leqRight" (formula "81"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_geqRight" (formula "82"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_226"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "55"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "72")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "10"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "72")) (ifInst ""  (formula "10")))
                                                (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "71"))
                                                (rule "allLeft" (formula "34") (inst "t=i_226"))
                                                (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "34") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "inEqSimp_contradInEq1" (formula "34") (ifseqformula "1"))
                                                (rule "andLeft" (formula "34"))
                                                (rule "inEqSimp_homoInEq1" (formula "34"))
                                                (rule "polySimp_pullOutFactor1b" (formula "34") (term "0"))
                                                (rule "add_literals" (formula "34") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "34") (term "1,0"))
                                                (rule "add_zero_right" (formula "34") (term "0"))
                                                (rule "leq_literals" (formula "34"))
                                                (rule "closeFalse" (formula "34"))
                                             )
                                          )
                                       )
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "77") (inst "sk=f_13"))
                                    (rule "allRight" (formula "77") (inst "sk=o_13"))
                                    (rule "orRight" (formula "77"))
                                    (rule "pullOutSelect" (formula "78") (term "0") (inst "selectSK=f_13_0"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "52"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "34"))
                                    (rule "eqSymm" (formula "79"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_13_1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "79")))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "cut_direct" (formula "36") (term "0"))
                                    (branch "CUT: result_0.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "true_left" (formula "37"))
                                       (rule "cut_direct" (formula "60") (term "1"))
                                       (branch "CUT: verif.selectvoting.system.core.MixServer.MalformedData::instance(exc_3) = TRUE TRUE"
                                          (rule "instanceof_not_compatible_5" (formula "61") (term "0,0") (ifseqformula "60"))
                                          (rule "instanceof_not_compatible_5" (formula "61") (term "1,0") (ifseqformula "60"))
                                          (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "76")) (ifInst ""  (formula "76")))
                                          (rule "true_left" (formula "61"))
                                          (rule "cut_direct" (formula "53") (term "0,0"))
                                          (branch "CUT: exc_3.<created> = TRUE TRUE"
                                             (builtin "One Step Simplification" (formula "54"))
                                             (rule "true_left" (formula "54"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch " ¬o_13 = null ∧ ¬( o_13.<created> = TRUE ∨ o_13.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "orRight" (formula "62"))
                                                (rule "applyEqReverse" (formula "82") (term "1") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "eqSymm" (formula "81"))
                                                (rule "replace_known_right" (formula "80") (term "0,0") (ifseqformula "60"))
                                                (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "61")))
                                                (rule "closeTrue" (formula "80"))
                                             )
                                             (branch " ¬o_13 = null ∧ ¬( o_13.<created> = TRUE ∨ o_13.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) FALSE"
                                                (rule "close" (formula "80") (ifseqformula "1"))
                                             )
                                          )
                                          (branch "CUT: exc_3.<created> = TRUE FALSE"
                                             (builtin "One Step Simplification" (formula "53"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch " ¬o_13 = null ∧ ¬( o_13.<created> = TRUE ∨ o_13.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "orRight" (formula "62"))
                                                (rule "applyEqReverse" (formula "83") (term "1") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "eqSymm" (formula "82"))
                                                (rule "replace_known_right" (formula "81") (term "0,0") (ifseqformula "60"))
                                                (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "61")))
                                                (rule "closeTrue" (formula "81"))
                                             )
                                             (branch " ¬o_13 = null ∧ ¬( o_13.<created> = TRUE ∨ o_13.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) FALSE"
                                                (rule "close" (formula "81") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                       (branch "CUT: verif.selectvoting.system.core.MixServer.MalformedData::instance(exc_3) = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "60"))
                                          (rule "cut_direct" (formula "53") (term "0,0"))
                                          (branch "CUT: exc_3.<created> = TRUE TRUE"
                                             (builtin "One Step Simplification" (formula "54"))
                                             (rule "true_left" (formula "54"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch " ¬o_13 = null ∧ ¬( o_13.<created> = TRUE ∨ o_13.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "orRight" (formula "62"))
                                                (rule "applyEqReverse" (formula "83") (term "1") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "eqSymm" (formula "82"))
                                                (rule "replace_known_right" (formula "81") (term "0,1") (ifseqformula "61"))
                                                (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "60")))
                                                (rule "closeTrue" (formula "81"))
                                             )
                                             (branch " ¬o_13 = null ∧ ¬( o_13.<created> = TRUE ∨ o_13.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) FALSE"
                                                (rule "close" (formula "81") (ifseqformula "1"))
                                             )
                                          )
                                          (branch "CUT: exc_3.<created> = TRUE FALSE"
                                             (builtin "One Step Simplification" (formula "53"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch " ¬o_13 = null ∧ ¬( o_13.<created> = TRUE ∨ o_13.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "orRight" (formula "61"))
                                                (rule "applyEqReverse" (formula "84") (term "1") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "eqSymm" (formula "83"))
                                                (rule "replace_known_right" (formula "82") (term "0,0") (ifseqformula "62"))
                                                (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "60")))
                                                (rule "closeTrue" (formula "82"))
                                             )
                                             (branch " ¬o_13 = null ∧ ¬( o_13.<created> = TRUE ∨ o_13.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) FALSE"
                                                (rule "close" (formula "82") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                    )
                                    (branch "CUT: result_0.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "cut_direct" (formula "60") (term "1"))
                                       (branch "CUT: verif.selectvoting.system.core.MixServer.MalformedData::instance(exc_3) = TRUE TRUE"
                                          (rule "instanceof_not_compatible_5" (formula "61") (term "1,0") (ifseqformula "60"))
                                          (rule "instanceof_not_compatible_5" (formula "61") (term "0,0") (ifseqformula "60"))
                                          (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "77")) (ifInst ""  (formula "77")))
                                          (rule "true_left" (formula "61"))
                                          (rule "cut_direct" (formula "53") (term "0,0"))
                                          (branch "CUT: exc_3.<created> = TRUE TRUE"
                                             (builtin "One Step Simplification" (formula "54"))
                                             (rule "true_left" (formula "54"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch " ¬o_13 = null ∧ ¬( o_13.<created> = TRUE ∨ o_13.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "orRight" (formula "62"))
                                                (rule "applyEqReverse" (formula "83") (term "1") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "eqSymm" (formula "82"))
                                                (rule "replace_known_right" (formula "81") (term "0,0") (ifseqformula "60"))
                                                (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "61")))
                                                (rule "closeTrue" (formula "81"))
                                             )
                                             (branch " ¬o_13 = null ∧ ¬( o_13.<created> = TRUE ∨ o_13.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) FALSE"
                                                (rule "close" (formula "81") (ifseqformula "1"))
                                             )
                                          )
                                          (branch "CUT: exc_3.<created> = TRUE FALSE"
                                             (builtin "One Step Simplification" (formula "53"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch " ¬o_13 = null ∧ ¬( o_13.<created> = TRUE ∨ o_13.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "orRight" (formula "61"))
                                                (rule "applyEqReverse" (formula "84") (term "1") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "eqSymm" (formula "83"))
                                                (rule "replace_known_right" (formula "82") (term "0,0") (ifseqformula "62"))
                                                (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "60")))
                                                (rule "closeTrue" (formula "82"))
                                             )
                                             (branch " ¬o_13 = null ∧ ¬( o_13.<created> = TRUE ∨ o_13.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) FALSE"
                                                (rule "close" (formula "82") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                       (branch "CUT: verif.selectvoting.system.core.MixServer.MalformedData::instance(exc_3) = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "60"))
                                          (rule "cut_direct" (formula "53") (term "0,0"))
                                          (branch "CUT: exc_3.<created> = TRUE TRUE"
                                             (builtin "One Step Simplification" (formula "54"))
                                             (rule "true_left" (formula "54"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch " ¬o_13 = null ∧ ¬( o_13.<created> = TRUE ∨ o_13.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "orRight" (formula "61"))
                                                (rule "applyEqReverse" (formula "84") (term "1") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "eqSymm" (formula "83"))
                                                (rule "replace_known_right" (formula "82") (term "0,0") (ifseqformula "62"))
                                                (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "60")))
                                                (rule "closeTrue" (formula "82"))
                                             )
                                             (branch " ¬o_13 = null ∧ ¬( o_13.<created> = TRUE ∨ o_13.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) FALSE"
                                                (rule "close" (formula "82") (ifseqformula "1"))
                                             )
                                          )
                                          (branch "CUT: exc_3.<created> = TRUE FALSE"
                                             (builtin "One Step Simplification" (formula "53"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch " ¬o_13 = null ∧ ¬( o_13.<created> = TRUE ∨ o_13.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "orRight" (formula "62"))
                                                (rule "applyEqReverse" (formula "85") (term "1") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "eqSymm" (formula "84"))
                                                (rule "replace_known_right" (formula "83") (term "0,0") (ifseqformula "60"))
                                                (builtin "One Step Simplification" (formula "83") (ifInst ""  (formula "61")))
                                                (rule "closeTrue" (formula "83"))
                                             )
                                             (branch " ¬o_13 = null ∧ ¬( o_13.<created> = TRUE ∨ o_13.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) FALSE"
                                                (rule "close" (formula "83") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "verif.selectvoting.system.core.Tag.BALLOTS.length ≥ 1 FALSE"
                                 (rule "eqSymm" (formula "49"))
                                 (rule "inEqSimp_geqRight" (formula "62"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "applyEq" (formula "49") (term "0") (ifseqformula "50"))
                                 (rule "qeq_literals" (formula "49"))
                                 (rule "closeFalse" (formula "49"))
                              )
                           )
                           (branch "result_0.length ≥ 1 FALSE"
                              (builtin "One Step Simplification" (formula "50"))
                              (rule "replace_known_right" (formula "51") (term "0,1,1,0") (ifseqformula "64"))
                              (builtin "One Step Simplification" (formula "51"))
                              (rule "replace_known_right" (formula "39") (term "0,1,1,0") (ifseqformula "64"))
                              (builtin "One Step Simplification" (formula "39"))
                              (rule "replace_known_right" (formula "40") (term "0,1,1,0") (ifseqformula "64"))
                              (builtin "One Step Simplification" (formula "40"))
                              (rule "replace_known_right" (formula "53") (term "0,1,1,0") (ifseqformula "64"))
                              (builtin "One Step Simplification" (formula "53"))
                              (rule "replace_known_right" (formula "52") (term "0,1,1,0") (ifseqformula "64"))
                              (builtin "One Step Simplification" (formula "52"))
                              (rule "replace_known_right" (formula "38") (term "0,1") (ifseqformula "64"))
                              (builtin "One Step Simplification" (formula "38"))
                              (rule "inEqSimp_geqRight" (formula "64"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_antiSymm" (formula "38") (ifseqformula "1"))
                              (rule "applyEq" (formula "54") (term "1,1,0,0,0") (ifseqformula "38"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "38"))
                              (rule "leq_literals" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "applyEq" (formula "41") (term "1,1,1,0,0") (ifseqformula "37"))
                              (rule "add_zero_right" (formula "41") (term "1,1,0,0"))
                              (builtin "One Step Simplification" (formula "41"))
                              (rule "applyEq" (formula "54") (term "1,1,1,0,0,0") (ifseqformula "37"))
                              (rule "add_zero_right" (formula "54") (term "1,1,0,0,0"))
                              (builtin "One Step Simplification" (formula "54"))
                              (rule "applyEq" (formula "52") (term "1,1,0,0,0") (ifseqformula "37"))
                              (rule "applyEq" (formula "38") (term "0") (ifseqformula "37"))
                              (rule "qeq_literals" (formula "38"))
                              (rule "true_left" (formula "38"))
                              (rule "applyEq" (formula "39") (term "1,1,0,0") (ifseqformula "37"))
                              (builtin "One Step Simplification" (formula "39"))
                              (rule "inEqSimp_notGeq" (formula "50") (term "0"))
                              (rule "mul_literals" (formula "50") (term "1,0,0,0"))
                              (rule "add_literals" (formula "50") (term "0,0,0"))
                              (rule "add_zero_left" (formula "50") (term "0,0"))
                              (rule "inEqSimp_or_tautInEq1" (formula "52") (term "0,0,0"))
                              (rule "add_literals" (formula "52") (term "1,1,0,0,0"))
                              (rule "qeq_literals" (formula "52") (term "1,0,0,0"))
                              (builtin "One Step Simplification" (formula "52"))
                              (rule "true_left" (formula "52"))
                              (rule "inEqSimp_or_tautInEq1" (formula "40") (term "0"))
                              (rule "add_zero_right" (formula "40") (term "1,1,0"))
                              (rule "qeq_literals" (formula "40") (term "1,0"))
                              (builtin "One Step Simplification" (formula "40"))
                              (rule "true_left" (formula "40"))
                              (rule "inEqSimp_or_tautInEq1" (formula "50") (term "0,0,0"))
                              (rule "add_literals" (formula "50") (term "1,1,0,0,0"))
                              (rule "qeq_literals" (formula "50") (term "1,0,0,0"))
                              (builtin "One Step Simplification" (formula "50"))
                              (rule "true_left" (formula "50"))
                              (rule "inEqSimp_or_tautInEq1" (formula "39") (term "0"))
                              (rule "add_zero_right" (formula "39") (term "1,1,0"))
                              (rule "qeq_literals" (formula "39") (term "1,0"))
                              (builtin "One Step Simplification" (formula "39"))
                              (rule "true_left" (formula "39"))
                              (rule "commute_or_2" (formula "49") (term "0"))
                              (rule "inEqSimp_or_tautInEq1" (formula "49") (term "0,0"))
                              (rule "add_zero_right" (formula "49") (term "1,1,0,0"))
                              (rule "qeq_literals" (formula "49") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "49"))
                              (rule "true_left" (formula "49"))
                              (rule "andRight" (formula "76"))
                              (branch "Case 1"
                                 (rule "cut_direct" (formula "58") (term "1"))
                                 (branch "CUT: verif.selectvoting.system.core.MixServer.MalformedData::instance(exc_3) = TRUE TRUE"
                                    (rule "instanceof_not_compatible_5" (formula "59") (term "1,0") (ifseqformula "58"))
                                    (rule "instanceof_not_compatible_5" (formula "59") (term "0,0") (ifseqformula "58"))
                                    (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "74")) (ifInst ""  (formula "74")))
                                    (rule "true_left" (formula "59"))
                                    (rule "cut_direct" (formula "35") (term "0"))
                                    (branch "CUT: result_0.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "true_left" (formula "36"))
                                       (rule "cut_direct" (formula "51") (term "0,0"))
                                       (branch "CUT: exc_3.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "52"))
                                          (rule "true_left" (formula "52"))
                                          (rule "andRight" (formula "76"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "76"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "76"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "76"))
                                                   (branch "Case 1"
                                                      (rule "andRight" (formula "76"))
                                                      (branch "Case 1"
                                                         (rule "allRight" (formula "76") (inst "sk=i_225"))
                                                         (rule "orRight" (formula "76"))
                                                         (rule "notRight" (formula "77"))
                                                         (rule "orRight" (formula "77"))
                                                         (rule "inEqSimp_leqRight" (formula "77"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_geqRight" (formula "78"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_225"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "63")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                         (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "7"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "63")) (ifInst ""  (formula "7")))
                                                         (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "62"))
                                                         (rule "allLeft" (formula "24") (inst "t=i_225"))
                                                         (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "24"))
                                                         (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                                         (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "24") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "24"))
                                                         (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "2"))
                                                         (rule "qeq_literals" (formula "24") (term "0"))
                                                         (builtin "One Step Simplification" (formula "24"))
                                                         (rule "closeFalse" (formula "24"))
                                                      )
                                                      (branch "Case 2"
                                                         (rule "allRight" (formula "76") (inst "sk=i_224"))
                                                         (rule "orRight" (formula "76"))
                                                         (rule "notRight" (formula "77"))
                                                         (rule "orRight" (formula "77"))
                                                         (rule "inEqSimp_leqRight" (formula "77"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_geqRight" (formula "78"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_224"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "64")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                         (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "8"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "64")) (ifInst ""  (formula "8")))
                                                         (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "63"))
                                                         (rule "allLeft" (formula "26") (inst "t=i_224"))
                                                         (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                                         (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "26") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "26") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "inEqSimp_contradInEq1" (formula "26") (ifseqformula "2"))
                                                         (rule "qeq_literals" (formula "26") (term "0"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "closeFalse" (formula "26"))
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                      (rule "allRight" (formula "76") (inst "sk=i_223"))
                                                      (rule "orRight" (formula "76"))
                                                      (rule "notRight" (formula "77"))
                                                      (rule "orRight" (formula "77"))
                                                      (rule "inEqSimp_leqRight" (formula "77"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_geqRight" (formula "78"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_223"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "65")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "6"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "65")) (ifInst ""  (formula "6")))
                                                      (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "64"))
                                                      (rule "allLeft" (formula "28") (inst "t=i_223"))
                                                      (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                                                      (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "28") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "28") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "inEqSimp_contradInEq1" (formula "28") (ifseqformula "2"))
                                                      (rule "qeq_literals" (formula "28") (term "0"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "closeFalse" (formula "28"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "allRight" (formula "76") (inst "sk=i_222"))
                                                   (rule "orRight" (formula "76"))
                                                   (rule "notRight" (formula "77"))
                                                   (rule "orRight" (formula "77"))
                                                   (rule "inEqSimp_geqRight" (formula "78"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_leqRight" (formula "78"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_222"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "66")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                   (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "66")) (ifInst ""  (formula "5")))
                                                   (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "65"))
                                                   (rule "allLeft" (formula "30") (inst "t=i_222"))
                                                   (rule "replace_known_left" (formula "30") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                                                   (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "30") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "30") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "inEqSimp_contradInEq1" (formula "30") (ifseqformula "1"))
                                                   (rule "qeq_literals" (formula "30") (term "0"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "closeFalse" (formula "30"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "76") (inst "sk=i_221"))
                                                (rule "orRight" (formula "76"))
                                                (rule "notRight" (formula "77"))
                                                (rule "orRight" (formula "77"))
                                                (rule "inEqSimp_leqRight" (formula "77"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_geqRight" (formula "78"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_221"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "9"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")) (ifInst ""  (formula "9")))
                                                (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "66"))
                                                (rule "allLeft" (formula "32") (inst "t=i_221"))
                                                (rule "replace_known_left" (formula "32") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "32") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "inEqSimp_contradInEq1" (formula "32") (ifseqformula "1"))
                                                (rule "andLeft" (formula "32"))
                                                (rule "inEqSimp_homoInEq1" (formula "32"))
                                                (rule "polySimp_pullOutFactor1b" (formula "32") (term "0"))
                                                (rule "add_literals" (formula "32") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "32") (term "1,0"))
                                                (rule "add_literals" (formula "32") (term "0"))
                                                (rule "leq_literals" (formula "32"))
                                                (rule "closeFalse" (formula "32"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "allRight" (formula "76") (inst "sk=i_220"))
                                             (rule "orRight" (formula "76"))
                                             (rule "notRight" (formula "77"))
                                             (rule "orRight" (formula "77"))
                                             (rule "inEqSimp_leqRight" (formula "77"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_geqRight" (formula "78"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_220"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "10"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")) (ifInst ""  (formula "10")))
                                             (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "67"))
                                             (rule "allLeft" (formula "34") (inst "t=i_220"))
                                             (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                             (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                             (rule "leq_literals" (formula "34") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "inEqSimp_contradInEq1" (formula "34") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "34") (term "0"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "closeFalse" (formula "34"))
                                          )
                                       )
                                       (branch "CUT: exc_3.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "51"))
                                          (rule "andRight" (formula "77"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "77"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "77"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "77"))
                                                   (branch "Case 1"
                                                      (rule "andRight" (formula "77"))
                                                      (branch "Case 1"
                                                         (rule "allRight" (formula "77") (inst "sk=i_219"))
                                                         (rule "orRight" (formula "77"))
                                                         (rule "notRight" (formula "78"))
                                                         (rule "orRight" (formula "78"))
                                                         (rule "inEqSimp_leqRight" (formula "78"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_geqRight" (formula "79"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_219"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "64")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                         (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "7"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "64")) (ifInst ""  (formula "7")))
                                                         (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "63"))
                                                         (rule "allLeft" (formula "24") (inst "t=i_219"))
                                                         (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "24"))
                                                         (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                                         (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "24") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "24"))
                                                         (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "2"))
                                                         (rule "qeq_literals" (formula "24") (term "0"))
                                                         (builtin "One Step Simplification" (formula "24"))
                                                         (rule "closeFalse" (formula "24"))
                                                      )
                                                      (branch "Case 2"
                                                         (rule "allRight" (formula "77") (inst "sk=i_218"))
                                                         (rule "orRight" (formula "77"))
                                                         (rule "notRight" (formula "78"))
                                                         (rule "orRight" (formula "78"))
                                                         (rule "inEqSimp_leqRight" (formula "78"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_geqRight" (formula "79"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_218"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "65")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                         (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "8"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "65")) (ifInst ""  (formula "8")))
                                                         (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "64"))
                                                         (rule "allLeft" (formula "26") (inst "t=i_218"))
                                                         (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                                         (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "26") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "26") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "inEqSimp_contradInEq1" (formula "26") (ifseqformula "2"))
                                                         (rule "qeq_literals" (formula "26") (term "0"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "closeFalse" (formula "26"))
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                      (rule "allRight" (formula "77") (inst "sk=i_217"))
                                                      (rule "orRight" (formula "77"))
                                                      (rule "notRight" (formula "78"))
                                                      (rule "orRight" (formula "78"))
                                                      (rule "inEqSimp_geqRight" (formula "79"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_leqRight" (formula "79"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_217"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "66")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "6"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "66")) (ifInst ""  (formula "6")))
                                                      (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "65"))
                                                      (rule "allLeft" (formula "28") (inst "t=i_217"))
                                                      (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                                                      (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "28") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "28") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "inEqSimp_contradInEq1" (formula "28") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "28") (term "0"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "closeFalse" (formula "28"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "allRight" (formula "77") (inst "sk=i_216"))
                                                   (rule "orRight" (formula "77"))
                                                   (rule "notRight" (formula "78"))
                                                   (rule "orRight" (formula "78"))
                                                   (rule "inEqSimp_leqRight" (formula "78"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_geqRight" (formula "79"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_216"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                   (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")) (ifInst ""  (formula "5")))
                                                   (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "66"))
                                                   (rule "allLeft" (formula "30") (inst "t=i_216"))
                                                   (rule "replace_known_left" (formula "30") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                                                   (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "30") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "30") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "inEqSimp_contradInEq1" (formula "30") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "30") (term "0"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "closeFalse" (formula "30"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "77") (inst "sk=i_215"))
                                                (rule "orRight" (formula "77"))
                                                (rule "notRight" (formula "78"))
                                                (rule "orRight" (formula "78"))
                                                (rule "inEqSimp_geqRight" (formula "79"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_leqRight" (formula "79"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_215"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "9"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")) (ifInst ""  (formula "9")))
                                                (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "67"))
                                                (rule "allLeft" (formula "32") (inst "t=i_215"))
                                                (rule "replace_known_left" (formula "32") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                                                (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "32") (term "0,0,1"))
                                                (rule "leq_literals" (formula "32") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "inEqSimp_contradInEq1" (formula "32") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "32") (term "0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "closeFalse" (formula "32"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "allRight" (formula "77") (inst "sk=i_214"))
                                             (rule "orRight" (formula "77"))
                                             (rule "notRight" (formula "78"))
                                             (rule "orRight" (formula "78"))
                                             (rule "inEqSimp_leqRight" (formula "78"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_geqRight" (formula "79"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_214"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "10"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")) (ifInst ""  (formula "10")))
                                             (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "68"))
                                             (rule "allLeft" (formula "34") (inst "t=i_214"))
                                             (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                             (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                             (rule "leq_literals" (formula "34") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "inEqSimp_contradInEq1" (formula "34") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "34") (term "0"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "closeFalse" (formula "34"))
                                          )
                                       )
                                    )
                                    (branch "CUT: result_0.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "cut_direct" (formula "51") (term "0,0"))
                                       (branch "CUT: exc_3.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "52"))
                                          (rule "true_left" (formula "52"))
                                          (rule "andRight" (formula "77"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "77"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "77"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "77"))
                                                   (branch "Case 1"
                                                      (rule "andRight" (formula "77"))
                                                      (branch "Case 1"
                                                         (rule "allRight" (formula "77") (inst "sk=i_213"))
                                                         (rule "orRight" (formula "77"))
                                                         (rule "orRight" (formula "77"))
                                                         (rule "notRight" (formula "79"))
                                                         (rule "inEqSimp_geqRight" (formula "79"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "inEqSimp_leqRight" (formula "79"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_213"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "64")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                         (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "7"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "64")) (ifInst ""  (formula "7")))
                                                         (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "63"))
                                                         (rule "allLeft" (formula "24") (inst "t=i_213"))
                                                         (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "24"))
                                                         (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "24") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "24"))
                                                         (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "24"))
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "2"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                         (rule "add_literals" (formula "2") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "2") (term "1,0"))
                                                         (rule "add_zero_right" (formula "2") (term "0"))
                                                         (rule "leq_literals" (formula "2"))
                                                         (rule "closeFalse" (formula "2"))
                                                      )
                                                      (branch "Case 2"
                                                         (rule "allRight" (formula "77") (inst "sk=i_212"))
                                                         (rule "orRight" (formula "77"))
                                                         (rule "orRight" (formula "77"))
                                                         (rule "notRight" (formula "79"))
                                                         (rule "inEqSimp_geqRight" (formula "79"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "inEqSimp_leqRight" (formula "79"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_212"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "65")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                         (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "8"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "65")) (ifInst ""  (formula "8")))
                                                         (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "64"))
                                                         (rule "allLeft" (formula "26") (inst "t=i_212"))
                                                         (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "26") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "26"))
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "2"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                         (rule "add_literals" (formula "2") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "2") (term "1,0"))
                                                         (rule "add_zero_right" (formula "2") (term "0"))
                                                         (rule "leq_literals" (formula "2"))
                                                         (rule "closeFalse" (formula "2"))
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                      (rule "allRight" (formula "77") (inst "sk=i_211"))
                                                      (rule "orRight" (formula "77"))
                                                      (rule "orRight" (formula "77"))
                                                      (rule "notRight" (formula "79"))
                                                      (rule "inEqSimp_geqRight" (formula "79"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_leqRight" (formula "79"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_211"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "66")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "6"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "66")) (ifInst ""  (formula "6")))
                                                      (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "65"))
                                                      (rule "allLeft" (formula "28") (inst "t=i_211"))
                                                      (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                                                      (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "28") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "28") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "inEqSimp_contradInEq1" (formula "28") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "28") (term "0"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "closeFalse" (formula "28"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "allRight" (formula "77") (inst "sk=i_210"))
                                                   (rule "orRight" (formula "77"))
                                                   (rule "orRight" (formula "77"))
                                                   (rule "notRight" (formula "79"))
                                                   (rule "inEqSimp_geqRight" (formula "79"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_leqRight" (formula "79"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_210"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                   (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")) (ifInst ""  (formula "5")))
                                                   (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "66"))
                                                   (rule "allLeft" (formula "30") (inst "t=i_210"))
                                                   (rule "replace_known_left" (formula "30") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                                                   (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "30") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "30") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "inEqSimp_contradInEq1" (formula "30") (ifseqformula "1"))
                                                   (rule "qeq_literals" (formula "30") (term "0"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "closeFalse" (formula "30"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "77") (inst "sk=i_209"))
                                                (rule "orRight" (formula "77"))
                                                (rule "orRight" (formula "77"))
                                                (rule "notRight" (formula "79"))
                                                (rule "inEqSimp_leqRight" (formula "78"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_geqRight" (formula "79"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_209"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "9"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")) (ifInst ""  (formula "9")))
                                                (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "67"))
                                                (rule "allLeft" (formula "32") (inst "t=i_209"))
                                                (rule "replace_known_left" (formula "32") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "32") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "32"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0"))
                                                (rule "add_zero_right" (formula "1") (term "0"))
                                                (rule "leq_literals" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "allRight" (formula "77") (inst "sk=i_208"))
                                             (rule "orRight" (formula "77"))
                                             (rule "orRight" (formula "77"))
                                             (rule "notRight" (formula "79"))
                                             (rule "inEqSimp_leqRight" (formula "78"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_geqRight" (formula "79"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_208"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "10"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")) (ifInst ""  (formula "10")))
                                             (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "68"))
                                             (rule "allLeft" (formula "34") (inst "t=i_208"))
                                             (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                             (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                             (rule "leq_literals" (formula "34") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "inEqSimp_contradInEq1" (formula "34") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "34") (term "0"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "closeFalse" (formula "34"))
                                          )
                                       )
                                       (branch "CUT: exc_3.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "51"))
                                          (rule "andRight" (formula "78"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "78"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "78"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "78"))
                                                   (branch "Case 1"
                                                      (rule "andRight" (formula "78"))
                                                      (branch "Case 1"
                                                         (rule "allRight" (formula "78") (inst "sk=i_207"))
                                                         (rule "orRight" (formula "78"))
                                                         (rule "orRight" (formula "78"))
                                                         (rule "notRight" (formula "80"))
                                                         (rule "inEqSimp_geqRight" (formula "80"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "inEqSimp_leqRight" (formula "80"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_207"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "65")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                         (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "7"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "65")) (ifInst ""  (formula "7")))
                                                         (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "64"))
                                                         (rule "allLeft" (formula "24") (inst "t=i_207"))
                                                         (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "24"))
                                                         (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "24") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "24"))
                                                         (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "24"))
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "2"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                         (rule "add_literals" (formula "2") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "2") (term "1,0"))
                                                         (rule "add_zero_right" (formula "2") (term "0"))
                                                         (rule "leq_literals" (formula "2"))
                                                         (rule "closeFalse" (formula "2"))
                                                      )
                                                      (branch "Case 2"
                                                         (rule "allRight" (formula "78") (inst "sk=i_206"))
                                                         (rule "orRight" (formula "78"))
                                                         (rule "orRight" (formula "78"))
                                                         (rule "notRight" (formula "80"))
                                                         (rule "inEqSimp_geqRight" (formula "80"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "inEqSimp_leqRight" (formula "80"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_206"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "66")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                         (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "8"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "66")) (ifInst ""  (formula "8")))
                                                         (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "65"))
                                                         (rule "allLeft" (formula "26") (inst "t=i_206"))
                                                         (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "26") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "26"))
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "2"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                         (rule "add_literals" (formula "2") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "2") (term "1,0"))
                                                         (rule "add_zero_right" (formula "2") (term "0"))
                                                         (rule "leq_literals" (formula "2"))
                                                         (rule "closeFalse" (formula "2"))
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                      (rule "allRight" (formula "78") (inst "sk=i_205"))
                                                      (rule "orRight" (formula "78"))
                                                      (rule "orRight" (formula "78"))
                                                      (rule "notRight" (formula "80"))
                                                      (rule "inEqSimp_geqRight" (formula "80"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_leqRight" (formula "80"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_205"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "6"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")) (ifInst ""  (formula "6")))
                                                      (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "66"))
                                                      (rule "allLeft" (formula "28") (inst "t=i_205"))
                                                      (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "28") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "28"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0"))
                                                      (rule "leq_literals" (formula "2"))
                                                      (rule "closeFalse" (formula "2"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "allRight" (formula "78") (inst "sk=i_204"))
                                                   (rule "orRight" (formula "78"))
                                                   (rule "orRight" (formula "78"))
                                                   (rule "notRight" (formula "80"))
                                                   (rule "inEqSimp_leqRight" (formula "79"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_geqRight" (formula "80"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_204"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                   (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")) (ifInst ""  (formula "5")))
                                                   (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "67"))
                                                   (rule "allLeft" (formula "30") (inst "t=i_204"))
                                                   (rule "replace_known_left" (formula "30") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "30") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "30"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0"))
                                                   (rule "leq_literals" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "78") (inst "sk=i_203"))
                                                (rule "orRight" (formula "78"))
                                                (rule "orRight" (formula "78"))
                                                (rule "notRight" (formula "80"))
                                                (rule "inEqSimp_geqRight" (formula "80"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_leqRight" (formula "80"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_203"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "9"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")) (ifInst ""  (formula "9")))
                                                (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "68"))
                                                (rule "allLeft" (formula "32") (inst "t=i_203"))
                                                (rule "replace_known_left" (formula "32") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "32") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "32"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "2"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0"))
                                                (rule "add_zero_right" (formula "2") (term "0"))
                                                (rule "leq_literals" (formula "2"))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "allRight" (formula "78") (inst "sk=i_202"))
                                             (rule "orRight" (formula "78"))
                                             (rule "orRight" (formula "78"))
                                             (rule "notRight" (formula "80"))
                                             (rule "inEqSimp_geqRight" (formula "80"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_leqRight" (formula "80"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_202"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "70")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "10"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "70")) (ifInst ""  (formula "10")))
                                             (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "69"))
                                             (rule "allLeft" (formula "34") (inst "t=i_202"))
                                             (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "34") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "34"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "2"))
                                             (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0"))
                                             (rule "add_zero_right" (formula "2") (term "0"))
                                             (rule "leq_literals" (formula "2"))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: verif.selectvoting.system.core.MixServer.MalformedData::instance(exc_3) = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "58"))
                                    (rule "cut_direct" (formula "35") (term "0"))
                                    (branch "CUT: result_0.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "true_left" (formula "36"))
                                       (rule "cut_direct" (formula "51") (term "0,0"))
                                       (branch "CUT: exc_3.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "52"))
                                          (rule "true_left" (formula "52"))
                                          (rule "andRight" (formula "77"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "77"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "77"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "77"))
                                                   (branch "Case 1"
                                                      (rule "andRight" (formula "77"))
                                                      (branch "Case 1"
                                                         (rule "allRight" (formula "77") (inst "sk=i_201"))
                                                         (rule "orRight" (formula "77"))
                                                         (rule "orRight" (formula "77"))
                                                         (rule "notRight" (formula "79"))
                                                         (rule "inEqSimp_leqRight" (formula "78"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_geqRight" (formula "79"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_201"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "64")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                         (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "7"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "64")) (ifInst ""  (formula "7")))
                                                         (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "63"))
                                                         (rule "allLeft" (formula "24") (inst "t=i_201"))
                                                         (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "24"))
                                                         (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                                         (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "24") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "24"))
                                                         (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "2"))
                                                         (rule "qeq_literals" (formula "24") (term "0"))
                                                         (builtin "One Step Simplification" (formula "24"))
                                                         (rule "closeFalse" (formula "24"))
                                                      )
                                                      (branch "Case 2"
                                                         (rule "allRight" (formula "77") (inst "sk=i_200"))
                                                         (rule "orRight" (formula "77"))
                                                         (rule "orRight" (formula "77"))
                                                         (rule "notRight" (formula "79"))
                                                         (rule "inEqSimp_leqRight" (formula "78"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_geqRight" (formula "79"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_200"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "65")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                         (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "8"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "65")) (ifInst ""  (formula "8")))
                                                         (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "64"))
                                                         (rule "allLeft" (formula "26") (inst "t=i_200"))
                                                         (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                                         (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "26") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "26") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "inEqSimp_contradInEq1" (formula "26") (ifseqformula "2"))
                                                         (rule "qeq_literals" (formula "26") (term "0"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "closeFalse" (formula "26"))
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                      (rule "allRight" (formula "77") (inst "sk=i_199"))
                                                      (rule "orRight" (formula "77"))
                                                      (rule "orRight" (formula "77"))
                                                      (rule "notRight" (formula "79"))
                                                      (rule "inEqSimp_geqRight" (formula "79"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_leqRight" (formula "79"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_199"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "66")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "6"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "66")) (ifInst ""  (formula "6")))
                                                      (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "65"))
                                                      (rule "allLeft" (formula "28") (inst "t=i_199"))
                                                      (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "28") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "28"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0"))
                                                      (rule "leq_literals" (formula "2"))
                                                      (rule "closeFalse" (formula "2"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "allRight" (formula "77") (inst "sk=i_198"))
                                                   (rule "orRight" (formula "77"))
                                                   (rule "orRight" (formula "77"))
                                                   (rule "notRight" (formula "79"))
                                                   (rule "inEqSimp_leqRight" (formula "78"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_geqRight" (formula "79"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_198"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                   (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")) (ifInst ""  (formula "5")))
                                                   (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "66"))
                                                   (rule "allLeft" (formula "30") (inst "t=i_198"))
                                                   (rule "replace_known_left" (formula "30") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                                                   (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "30") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "30") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "inEqSimp_contradInEq1" (formula "30") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "30") (term "0"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "closeFalse" (formula "30"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "77") (inst "sk=i_197"))
                                                (rule "orRight" (formula "77"))
                                                (rule "orRight" (formula "77"))
                                                (rule "notRight" (formula "79"))
                                                (rule "inEqSimp_geqRight" (formula "79"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_leqRight" (formula "79"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_197"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "9"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")) (ifInst ""  (formula "9")))
                                                (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "67"))
                                                (rule "allLeft" (formula "32") (inst "t=i_197"))
                                                (rule "replace_known_left" (formula "32") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                                                (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "32") (term "0,0,1"))
                                                (rule "leq_literals" (formula "32") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "inEqSimp_contradInEq1" (formula "32") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "32") (term "0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "closeFalse" (formula "32"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "allRight" (formula "77") (inst "sk=i_196"))
                                             (rule "orRight" (formula "77"))
                                             (rule "orRight" (formula "77"))
                                             (rule "notRight" (formula "79"))
                                             (rule "inEqSimp_leqRight" (formula "78"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_geqRight" (formula "79"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_196"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "10"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")) (ifInst ""  (formula "10")))
                                             (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "68"))
                                             (rule "allLeft" (formula "34") (inst "t=i_196"))
                                             (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                             (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                             (rule "leq_literals" (formula "34") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "34"))
                                             (rule "qeq_literals" (formula "2") (term "0"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                       )
                                       (branch "CUT: exc_3.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "51"))
                                          (rule "andRight" (formula "78"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "78"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "78"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "78"))
                                                   (branch "Case 1"
                                                      (rule "andRight" (formula "78"))
                                                      (branch "Case 1"
                                                         (rule "allRight" (formula "78") (inst "sk=i_195"))
                                                         (rule "orRight" (formula "78"))
                                                         (rule "notRight" (formula "79"))
                                                         (rule "orRight" (formula "79"))
                                                         (rule "inEqSimp_leqRight" (formula "79"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_geqRight" (formula "80"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_195"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "65")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                         (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "7"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "65")) (ifInst ""  (formula "7")))
                                                         (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "64"))
                                                         (rule "allLeft" (formula "24") (inst "t=i_195"))
                                                         (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "24"))
                                                         (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                                         (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "24") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "24"))
                                                         (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "24"))
                                                         (rule "qeq_literals" (formula "2") (term "0"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "closeFalse" (formula "2"))
                                                      )
                                                      (branch "Case 2"
                                                         (rule "allRight" (formula "78") (inst "sk=i_194"))
                                                         (rule "orRight" (formula "78"))
                                                         (rule "notRight" (formula "79"))
                                                         (rule "orRight" (formula "79"))
                                                         (rule "inEqSimp_leqRight" (formula "79"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_geqRight" (formula "80"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_194"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "66")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                         (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "8"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "66")) (ifInst ""  (formula "8")))
                                                         (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "65"))
                                                         (rule "allLeft" (formula "26") (inst "t=i_194"))
                                                         (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                                         (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "26") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "26") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "26"))
                                                         (rule "qeq_literals" (formula "2") (term "0"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "closeFalse" (formula "2"))
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                      (rule "allRight" (formula "78") (inst "sk=i_193"))
                                                      (rule "orRight" (formula "78"))
                                                      (rule "notRight" (formula "79"))
                                                      (rule "orRight" (formula "79"))
                                                      (rule "inEqSimp_geqRight" (formula "80"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_leqRight" (formula "80"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_193"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "6"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")) (ifInst ""  (formula "6")))
                                                      (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "66"))
                                                      (rule "allLeft" (formula "28") (inst "t=i_193"))
                                                      (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                                                      (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "28") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "28") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "inEqSimp_contradInEq1" (formula "28") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "28") (term "0"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "closeFalse" (formula "28"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "allRight" (formula "78") (inst "sk=i_192"))
                                                   (rule "orRight" (formula "78"))
                                                   (rule "notRight" (formula "79"))
                                                   (rule "orRight" (formula "79"))
                                                   (rule "inEqSimp_geqRight" (formula "80"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_leqRight" (formula "80"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_192"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                   (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")) (ifInst ""  (formula "5")))
                                                   (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "67"))
                                                   (rule "allLeft" (formula "30") (inst "t=i_192"))
                                                   (rule "replace_known_left" (formula "30") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                                                   (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "30") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "30") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "inEqSimp_contradInEq1" (formula "30") (ifseqformula "1"))
                                                   (rule "qeq_literals" (formula "30") (term "0"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "closeFalse" (formula "30"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "78") (inst "sk=i_191"))
                                                (rule "orRight" (formula "78"))
                                                (rule "notRight" (formula "79"))
                                                (rule "orRight" (formula "79"))
                                                (rule "inEqSimp_leqRight" (formula "79"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_geqRight" (formula "80"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_191"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "9"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")) (ifInst ""  (formula "9")))
                                                (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "68"))
                                                (rule "allLeft" (formula "32") (inst "t=i_191"))
                                                (rule "replace_known_left" (formula "32") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                                                (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "32") (term "0,0,1"))
                                                (rule "leq_literals" (formula "32") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "32"))
                                                (rule "qeq_literals" (formula "2") (term "0"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "allRight" (formula "78") (inst "sk=i_190"))
                                             (rule "orRight" (formula "78"))
                                             (rule "notRight" (formula "79"))
                                             (rule "orRight" (formula "79"))
                                             (rule "inEqSimp_geqRight" (formula "80"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_leqRight" (formula "80"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_190"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "70")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "10"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "70")) (ifInst ""  (formula "10")))
                                             (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "69"))
                                             (rule "allLeft" (formula "34") (inst "t=i_190"))
                                             (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                             (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                             (rule "leq_literals" (formula "34") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "inEqSimp_contradInEq1" (formula "34") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "34") (term "0"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "closeFalse" (formula "34"))
                                          )
                                       )
                                    )
                                    (branch "CUT: result_0.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "cut_direct" (formula "51") (term "0,0"))
                                       (branch "CUT: exc_3.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "52"))
                                          (rule "true_left" (formula "52"))
                                          (rule "andRight" (formula "78"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "78"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "78"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "78"))
                                                   (branch "Case 1"
                                                      (rule "andRight" (formula "78"))
                                                      (branch "Case 1"
                                                         (rule "allRight" (formula "78") (inst "sk=i_189"))
                                                         (rule "orRight" (formula "78"))
                                                         (rule "orRight" (formula "78"))
                                                         (rule "notRight" (formula "80"))
                                                         (rule "inEqSimp_geqRight" (formula "80"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "inEqSimp_leqRight" (formula "80"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_189"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "65")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                         (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "7"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "65")) (ifInst ""  (formula "7")))
                                                         (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "64"))
                                                         (rule "allLeft" (formula "24") (inst "t=i_189"))
                                                         (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "24"))
                                                         (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "24") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "24"))
                                                         (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "2"))
                                                         (rule "andLeft" (formula "24"))
                                                         (rule "inEqSimp_homoInEq1" (formula "24"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                                         (rule "add_literals" (formula "24") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "24") (term "1,0"))
                                                         (rule "add_zero_right" (formula "24") (term "0"))
                                                         (rule "leq_literals" (formula "24"))
                                                         (rule "closeFalse" (formula "24"))
                                                      )
                                                      (branch "Case 2"
                                                         (rule "allRight" (formula "78") (inst "sk=i_188"))
                                                         (rule "orRight" (formula "78"))
                                                         (rule "orRight" (formula "78"))
                                                         (rule "notRight" (formula "80"))
                                                         (rule "inEqSimp_geqRight" (formula "80"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "inEqSimp_leqRight" (formula "80"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_188"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "66")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                         (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "8"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "66")) (ifInst ""  (formula "8")))
                                                         (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "65"))
                                                         (rule "allLeft" (formula "26") (inst "t=i_188"))
                                                         (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "26") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "inEqSimp_contradInEq1" (formula "26") (ifseqformula "2"))
                                                         (rule "andLeft" (formula "26"))
                                                         (rule "inEqSimp_homoInEq1" (formula "26"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                                         (rule "add_literals" (formula "26") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "26") (term "1,0"))
                                                         (rule "add_zero_right" (formula "26") (term "0"))
                                                         (rule "leq_literals" (formula "26"))
                                                         (rule "closeFalse" (formula "26"))
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                      (rule "allRight" (formula "78") (inst "sk=i_187"))
                                                      (rule "orRight" (formula "78"))
                                                      (rule "orRight" (formula "78"))
                                                      (rule "notRight" (formula "80"))
                                                      (rule "inEqSimp_leqRight" (formula "79"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_geqRight" (formula "80"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_187"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "6"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")) (ifInst ""  (formula "6")))
                                                      (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "66"))
                                                      (rule "allLeft" (formula "28") (inst "t=i_187"))
                                                      (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "2"))
                                                      (rule "qeq_literals" (formula "28") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "28"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0"))
                                                      (rule "leq_literals" (formula "1"))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "allRight" (formula "78") (inst "sk=i_186"))
                                                   (rule "orRight" (formula "78"))
                                                   (rule "orRight" (formula "78"))
                                                   (rule "notRight" (formula "80"))
                                                   (rule "inEqSimp_geqRight" (formula "80"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_leqRight" (formula "80"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_186"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                   (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")) (ifInst ""  (formula "5")))
                                                   (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "67"))
                                                   (rule "allLeft" (formula "30") (inst "t=i_186"))
                                                   (rule "replace_known_left" (formula "30") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "1"))
                                                   (rule "qeq_literals" (formula "30") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "30"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0"))
                                                   (rule "add_zero_right" (formula "2") (term "0"))
                                                   (rule "leq_literals" (formula "2"))
                                                   (rule "closeFalse" (formula "2"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "78") (inst "sk=i_185"))
                                                (rule "orRight" (formula "78"))
                                                (rule "orRight" (formula "78"))
                                                (rule "notRight" (formula "80"))
                                                (rule "inEqSimp_leqRight" (formula "79"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_geqRight" (formula "80"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_185"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "9"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")) (ifInst ""  (formula "9")))
                                                (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "68"))
                                                (rule "allLeft" (formula "32") (inst "t=i_185"))
                                                (rule "replace_known_left" (formula "32") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                                                (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "32") (term "0,0,1"))
                                                (rule "leq_literals" (formula "32") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "inEqSimp_contradInEq1" (formula "32") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "32") (term "0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "closeFalse" (formula "32"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "allRight" (formula "78") (inst "sk=i_184"))
                                             (rule "orRight" (formula "78"))
                                             (rule "orRight" (formula "78"))
                                             (rule "notRight" (formula "80"))
                                             (rule "inEqSimp_leqRight" (formula "79"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_geqRight" (formula "80"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_184"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "70")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "10"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "70")) (ifInst ""  (formula "10")))
                                             (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "69"))
                                             (rule "allLeft" (formula "34") (inst "t=i_184"))
                                             (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "34") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "inEqSimp_contradInEq1" (formula "34") (ifseqformula "1"))
                                             (rule "andLeft" (formula "34"))
                                             (rule "inEqSimp_homoInEq1" (formula "34"))
                                             (rule "polySimp_pullOutFactor1b" (formula "34") (term "0"))
                                             (rule "add_literals" (formula "34") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "34") (term "1,0"))
                                             (rule "add_zero_right" (formula "34") (term "0"))
                                             (rule "leq_literals" (formula "34"))
                                             (rule "closeFalse" (formula "34"))
                                          )
                                       )
                                       (branch "CUT: exc_3.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "51"))
                                          (rule "andRight" (formula "79"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "79"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "79"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "79"))
                                                   (branch "Case 1"
                                                      (rule "andRight" (formula "79"))
                                                      (branch "Case 1"
                                                         (rule "allRight" (formula "79") (inst "sk=i_183"))
                                                         (rule "orRight" (formula "79"))
                                                         (rule "notRight" (formula "80"))
                                                         (rule "orRight" (formula "80"))
                                                         (rule "inEqSimp_leqRight" (formula "80"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_geqRight" (formula "81"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_183"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "66")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                         (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "7"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "66")) (ifInst ""  (formula "7")))
                                                         (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "65"))
                                                         (rule "allLeft" (formula "24") (inst "t=i_183"))
                                                         (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "24"))
                                                         (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "2"))
                                                         (rule "qeq_literals" (formula "24") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "24"))
                                                         (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "1"))
                                                         (rule "andLeft" (formula "24"))
                                                         (rule "inEqSimp_homoInEq1" (formula "24"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                                         (rule "add_literals" (formula "24") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "24") (term "1,0"))
                                                         (rule "add_zero_right" (formula "24") (term "0"))
                                                         (rule "leq_literals" (formula "24"))
                                                         (rule "closeFalse" (formula "24"))
                                                      )
                                                      (branch "Case 2"
                                                         (rule "allRight" (formula "79") (inst "sk=i_182"))
                                                         (rule "orRight" (formula "79"))
                                                         (rule "notRight" (formula "80"))
                                                         (rule "orRight" (formula "80"))
                                                         (rule "inEqSimp_leqRight" (formula "80"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_geqRight" (formula "81"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_182"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                         (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "8"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "67")) (ifInst ""  (formula "8")))
                                                         (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "66"))
                                                         (rule "allLeft" (formula "26") (inst "t=i_182"))
                                                         (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "2"))
                                                         (rule "qeq_literals" (formula "26") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "inEqSimp_contradInEq1" (formula "26") (ifseqformula "1"))
                                                         (rule "andLeft" (formula "26"))
                                                         (rule "inEqSimp_homoInEq1" (formula "26"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                                         (rule "add_literals" (formula "26") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "26") (term "1,0"))
                                                         (rule "add_zero_right" (formula "26") (term "0"))
                                                         (rule "leq_literals" (formula "26"))
                                                         (rule "closeFalse" (formula "26"))
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                      (rule "allRight" (formula "79") (inst "sk=i_181"))
                                                      (rule "orRight" (formula "79"))
                                                      (rule "notRight" (formula "80"))
                                                      (rule "orRight" (formula "80"))
                                                      (rule "inEqSimp_leqRight" (formula "80"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_geqRight" (formula "81"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_181"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "6"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "68")) (ifInst ""  (formula "6")))
                                                      (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "67"))
                                                      (rule "allLeft" (formula "28") (inst "t=i_181"))
                                                      (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "2"))
                                                      (rule "qeq_literals" (formula "28") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "28"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0"))
                                                      (rule "leq_literals" (formula "1"))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "allRight" (formula "79") (inst "sk=i_180"))
                                                   (rule "orRight" (formula "79"))
                                                   (rule "notRight" (formula "80"))
                                                   (rule "orRight" (formula "80"))
                                                   (rule "inEqSimp_leqRight" (formula "80"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_geqRight" (formula "81"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_180"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                   (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "69")) (ifInst ""  (formula "5")))
                                                   (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "68"))
                                                   (rule "allLeft" (formula "30") (inst "t=i_180"))
                                                   (rule "replace_known_left" (formula "30") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "inEqSimp_commuteGeq" (formula "30") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                                                   (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "30") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "30") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "inEqSimp_contradInEq1" (formula "30") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "30") (term "0"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "closeFalse" (formula "30"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "79") (inst "sk=i_179"))
                                                (rule "orRight" (formula "79"))
                                                (rule "notRight" (formula "80"))
                                                (rule "orRight" (formula "80"))
                                                (rule "inEqSimp_geqRight" (formula "81"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_leqRight" (formula "81"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_179"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "70")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "9"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "70")) (ifInst ""  (formula "9")))
                                                (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "69"))
                                                (rule "allLeft" (formula "32") (inst "t=i_179"))
                                                (rule "replace_known_left" (formula "32") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "inEqSimp_commuteGeq" (formula "32") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "32") (term "0") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "32") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "inEqSimp_contradInEq1" (formula "32") (ifseqformula "2"))
                                                (rule "andLeft" (formula "32"))
                                                (rule "inEqSimp_homoInEq1" (formula "32"))
                                                (rule "polySimp_pullOutFactor1b" (formula "32") (term "0"))
                                                (rule "add_literals" (formula "32") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "32") (term "1,0"))
                                                (rule "add_zero_right" (formula "32") (term "0"))
                                                (rule "leq_literals" (formula "32"))
                                                (rule "closeFalse" (formula "32"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "allRight" (formula "79") (inst "sk=i_178"))
                                             (rule "orRight" (formula "79"))
                                             (rule "notRight" (formula "80"))
                                             (rule "orRight" (formula "80"))
                                             (rule "inEqSimp_geqRight" (formula "81"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_leqRight" (formula "81"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_178"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "54"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "71")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "37"))
                                             (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "10"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "71")) (ifInst ""  (formula "10")))
                                             (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "48") (ifseqformula "70"))
                                             (rule "allLeft" (formula "34") (inst "t=i_178"))
                                             (rule "replace_known_left" (formula "34") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "inEqSimp_commuteGeq" (formula "34") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "34") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "inEqSimp_contradInEq1" (formula "34") (ifseqformula "2"))
                                             (rule "andLeft" (formula "34"))
                                             (rule "inEqSimp_homoInEq1" (formula "34"))
                                             (rule "polySimp_pullOutFactor1b" (formula "34") (term "0"))
                                             (rule "add_literals" (formula "34") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "34") (term "1,0"))
                                             (rule "add_zero_right" (formula "34") (term "0"))
                                             (rule "leq_literals" (formula "34"))
                                             (rule "closeFalse" (formula "34"))
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "Case 2"
                                 (rule "allRight" (formula "76") (inst "sk=f_12"))
                                 (rule "allRight" (formula "76") (inst "sk=o_12"))
                                 (rule "orRight" (formula "76"))
                                 (rule "pullOutSelect" (formula "77") (term "0") (inst "selectSK=f_12_0"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "51"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "34"))
                                 (rule "eqSymm" (formula "78"))
                                 (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_12_1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "78")))
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "cut_direct" (formula "59") (term "1"))
                                 (branch "CUT: verif.selectvoting.system.core.MixServer.MalformedData::instance(exc_3) = TRUE TRUE"
                                    (rule "instanceof_not_compatible_5" (formula "60") (term "1,0") (ifseqformula "59"))
                                    (rule "instanceof_not_compatible_5" (formula "60") (term "0,0") (ifseqformula "59"))
                                    (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "75")) (ifInst ""  (formula "75")))
                                    (rule "true_left" (formula "60"))
                                    (rule "cut_direct" (formula "36") (term "0"))
                                    (branch "CUT: result_0.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "true_left" (formula "37"))
                                       (rule "cut_direct" (formula "52") (term "0,0"))
                                       (branch "CUT: exc_3.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "53"))
                                          (rule "true_left" (formula "53"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch " ¬o_12 = null ∧ ¬( o_12.<created> = TRUE ∨ o_12.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "notLeft" (formula "2"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "orRight" (formula "61"))
                                             (rule "applyEqReverse" (formula "81") (term "1") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "eqSymm" (formula "80"))
                                             (rule "replace_known_right" (formula "79") (term "0,0") (ifseqformula "59"))
                                             (builtin "One Step Simplification" (formula "79") (ifInst ""  (formula "60")))
                                             (rule "closeTrue" (formula "79"))
                                          )
                                          (branch " ¬o_12 = null ∧ ¬( o_12.<created> = TRUE ∨ o_12.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) FALSE"
                                             (rule "close" (formula "79") (ifseqformula "1"))
                                          )
                                       )
                                       (branch "CUT: exc_3.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "52"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch " ¬o_12 = null ∧ ¬( o_12.<created> = TRUE ∨ o_12.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "notLeft" (formula "2"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "orRight" (formula "61"))
                                             (rule "applyEqReverse" (formula "82") (term "1") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "eqSymm" (formula "81"))
                                             (rule "replace_known_right" (formula "80") (term "0,0") (ifseqformula "59"))
                                             (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "60")))
                                             (rule "closeTrue" (formula "80"))
                                          )
                                          (branch " ¬o_12 = null ∧ ¬( o_12.<created> = TRUE ∨ o_12.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) FALSE"
                                             (rule "close" (formula "80") (ifseqformula "1"))
                                          )
                                       )
                                    )
                                    (branch "CUT: result_0.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "cut_direct" (formula "52") (term "0,0"))
                                       (branch "CUT: exc_3.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "53"))
                                          (rule "true_left" (formula "53"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch " ¬o_12 = null ∧ ¬( o_12.<created> = TRUE ∨ o_12.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "notLeft" (formula "2"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "orRight" (formula "61"))
                                             (rule "applyEqReverse" (formula "82") (term "1") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "eqSymm" (formula "81"))
                                             (rule "replace_known_right" (formula "80") (term "0,1") (ifseqformula "60"))
                                             (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "59")))
                                             (rule "closeTrue" (formula "80"))
                                          )
                                          (branch " ¬o_12 = null ∧ ¬( o_12.<created> = TRUE ∨ o_12.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) FALSE"
                                             (rule "close" (formula "80") (ifseqformula "1"))
                                          )
                                       )
                                       (branch "CUT: exc_3.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "52"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch " ¬o_12 = null ∧ ¬( o_12.<created> = TRUE ∨ o_12.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "orRight" (formula "60"))
                                             (rule "applyEqReverse" (formula "83") (term "1") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "eqSymm" (formula "82"))
                                             (rule "replace_known_right" (formula "81") (term "0,0") (ifseqformula "61"))
                                             (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "59")))
                                             (rule "closeTrue" (formula "81"))
                                          )
                                          (branch " ¬o_12 = null ∧ ¬( o_12.<created> = TRUE ∨ o_12.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) FALSE"
                                             (rule "close" (formula "81") (ifseqformula "1"))
                                          )
                                       )
                                    )
                                 )
                                 (branch "CUT: verif.selectvoting.system.core.MixServer.MalformedData::instance(exc_3) = TRUE FALSE"
                                    (builtin "One Step Simplification" (formula "59"))
                                    (rule "cut_direct" (formula "36") (term "0"))
                                    (branch "CUT: result_0.<created> = TRUE TRUE"
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "true_left" (formula "37"))
                                       (rule "cut_direct" (formula "52") (term "0,0"))
                                       (branch "CUT: exc_3.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "53"))
                                          (rule "true_left" (formula "53"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch " ¬o_12 = null ∧ ¬( o_12.<created> = TRUE ∨ o_12.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "notLeft" (formula "2"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "orRight" (formula "61"))
                                             (rule "applyEqReverse" (formula "82") (term "1") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "eqSymm" (formula "81"))
                                             (rule "replace_known_right" (formula "80") (term "0,1") (ifseqformula "60"))
                                             (builtin "One Step Simplification" (formula "80") (ifInst ""  (formula "59")))
                                             (rule "closeTrue" (formula "80"))
                                          )
                                          (branch " ¬o_12 = null ∧ ¬( o_12.<created> = TRUE ∨ o_12.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) FALSE"
                                             (rule "close" (formula "80") (ifseqformula "1"))
                                          )
                                       )
                                       (branch "CUT: exc_3.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "52"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch " ¬o_12 = null ∧ ¬( o_12.<created> = TRUE ∨ o_12.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "orRight" (formula "60"))
                                             (rule "applyEqReverse" (formula "83") (term "1") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "eqSymm" (formula "82"))
                                             (rule "replace_known_right" (formula "81") (term "0,0") (ifseqformula "61"))
                                             (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "59")))
                                             (rule "closeTrue" (formula "81"))
                                          )
                                          (branch " ¬o_12 = null ∧ ¬( o_12.<created> = TRUE ∨ o_12.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) FALSE"
                                             (rule "close" (formula "81") (ifseqformula "1"))
                                          )
                                       )
                                    )
                                    (branch "CUT: result_0.<created> = TRUE FALSE"
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "cut_direct" (formula "52") (term "0,0"))
                                       (branch "CUT: exc_3.<created> = TRUE TRUE"
                                          (builtin "One Step Simplification" (formula "53"))
                                          (rule "true_left" (formula "53"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch " ¬o_12 = null ∧ ¬( o_12.<created> = TRUE ∨ o_12.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "orRight" (formula "60"))
                                             (rule "applyEqReverse" (formula "83") (term "1") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "eqSymm" (formula "82"))
                                             (rule "replace_known_right" (formula "81") (term "0,0") (ifseqformula "61"))
                                             (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "59")))
                                             (rule "closeTrue" (formula "81"))
                                          )
                                          (branch " ¬o_12 = null ∧ ¬( o_12.<created> = TRUE ∨ o_12.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) FALSE"
                                             (rule "close" (formula "81") (ifseqformula "1"))
                                          )
                                       )
                                       (branch "CUT: exc_3.<created> = TRUE FALSE"
                                          (builtin "One Step Simplification" (formula "52"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch " ¬o_12 = null ∧ ¬( o_12.<created> = TRUE ∨ o_12.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "orRight" (formula "60"))
                                             (rule "applyEqReverse" (formula "84") (term "1") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "eqSymm" (formula "83"))
                                             (rule "replace_known_right" (formula "82") (term "0,1") (ifseqformula "59"))
                                             (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "61")))
                                             (rule "closeTrue" (formula "82"))
                                          )
                                          (branch " ¬o_12 = null ∧ ¬( o_12.<created> = TRUE ∨ o_12.<created>@anon_heap_getPayLoad«anonHeapFunction» = TRUE) FALSE"
                                             (rule "close" (formula "82") (ifseqformula "1"))
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                        (branch "ClassCastException (!(exc_3 instanceof java.lang.Throwable))"
                           (builtin "One Step Simplification" (formula "81"))
                           (rule "closeTrue" (formula "81"))
                        )
                     )
                     (branch "if exc_3 instanceof java.lang.Throwable false"
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "79")))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
               )
               (branch "Pre (getSignature)"
                  (builtin "One Step Simplification" (formula "5"))
                  (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "2")) (ifInst ""  (formula "8")) (ifInst ""  (formula "8")))
                  (rule "andLeft" (formula "7"))
                  (rule "andLeft" (formula "3"))
                  (rule "andLeft" (formula "6"))
                  (rule "wellFormedAnonEQ" (formula "12") (term "0,1") (ifseqformula "6"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "1,1") (ifseqformula "6"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "7") (term "1,1,0") (ifseqformula "6"))
                  (rule "andLeft" (formula "10"))
                  (rule "andLeft" (formula "4"))
                  (rule "andLeft" (formula "3"))
                  (rule "andLeft" (formula "9"))
                  (rule "notLeft" (formula "5"))
                  (rule "andLeft" (formula "5"))
                  (rule "andLeft" (formula "3"))
                  (rule "andLeft" (formula "10"))
                  (rule "typeEqDerived" (formula "12") (term "0,1,1,1,1") (ifseqformula "10"))
                  (rule "typeEqDerived" (formula "12") (term "0,0,0,1,1,1") (ifseqformula "10"))
                  (rule "typeEqDerived" (formula "12") (term "0,1,0,1,1,1") (ifseqformula "10"))
                  (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "10")) (ifInst ""  (formula "10")))
                  (rule "notLeft" (formula "7"))
                  (rule "andLeft" (formula "3"))
                  (rule "andLeft" (formula "12"))
                  (rule "andLeft" (formula "3"))
                  (rule "andLeft" (formula "14"))
                  (rule "andLeft" (formula "3"))
                  (rule "notLeft" (formula "15"))
                  (rule "notLeft" (formula "3"))
                  (rule "eqSymm" (formula "16"))
                  (rule "eqSymm" (formula "12"))
                  (rule "eqSymm" (formula "16") (term "0,0"))
                  (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "20"))
                  (builtin "One Step Simplification" (formula "5"))
                  (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "18"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "replace_known_left" (formula "21") (term "0,0,1") (ifseqformula "14"))
                  (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "13")) (ifInst ""  (formula "8")) (ifInst ""  (formula "5")))
                  (rule "closeTrue" (formula "21"))
               )
            )
            (branch
               (builtin "One Step Simplification" (formula "6"))
               (builtin "One Step Simplification" (formula "4"))
               (rule "andLeft" (formula "2"))
               (rule "andLeft" (formula "7"))
               (rule "andLeft" (formula "5"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "6") (term "1,1,0") (ifseqformula "5"))
               (rule "andLeft" (formula "2"))
               (rule "andLeft" (formula "4"))
               (rule "andLeft" (formula "11"))
               (rule "andLeft" (formula "8"))
               (rule "andLeft" (formula "2"))
               (rule "andLeft" (formula "6"))
               (rule "notLeft" (formula "5"))
               (rule "andLeft" (formula "10"))
               (rule "andLeft" (formula "9"))
               (rule "typeEqDerived" (formula "12") (term "0,1,1,1") (ifseqformula "9"))
               (rule "typeEqDerived" (formula "12") (term "0,1,0,1,1") (ifseqformula "9"))
               (rule "typeEqDerived" (formula "12") (term "0,0,0,1,1") (ifseqformula "9"))
               (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "9")))
               (rule "true_left" (formula "12"))
               (rule "andLeft" (formula "2"))
               (rule "notLeft" (formula "7"))
               (rule "andLeft" (formula "2"))
               (rule "andLeft" (formula "2"))
               (rule "notLeft" (formula "2"))
               (rule "eqSymm" (formula "14") (term "0,1"))
               (rule "eqSymm" (formula "11") (term "0,1"))
               (rule "eqSymm" (formula "14"))
               (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "9"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "andLeft" (formula "12"))
               (rule "notLeft" (formula "13"))
               (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "19"))
               (builtin "One Step Simplification" (formula "4"))
               (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "16"))
               (builtin "One Step Simplification" (formula "10"))
               (rule "apply_eq_boolean" (formula "15") (term "1") (ifseqformula "20"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "notLeft" (formula "15"))
               (rule "array2seqDef" (formula "11") (term "0,0") (inst "u=u"))
               (rule "array2seqDef" (formula "11") (term "1") (inst "u=u"))
               (rule "equalityToSeqGetAndSeqLenRight" (formula "15") (inst "iv=iv"))
               (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1"))
               (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1"))
               (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1"))
               (rule "eqSeqDef" (formula "11") (inst "iv=iv"))
               (rule "andLeft" (formula "11"))
               (rule "getOfSeqDef" (formula "12") (term "1,1,0"))
               (rule "castDel" (formula "12") (term "1,1,1,0"))
               (rule "castDel" (formula "12") (term "2,1,1,0"))
               (rule "add_zero_right" (formula "12") (term "0,2,1,1,1,0"))
               (rule "polySimp_elimSub" (formula "12") (term "1,1,0,1,1,0"))
               (rule "times_zero_2" (formula "12") (term "1,1,1,0,1,1,0"))
               (rule "add_zero_right" (formula "12") (term "1,1,0,1,1,0"))
               (rule "lenOfSeqDef" (formula "11") (term "1"))
               (rule "polySimp_elimSub" (formula "11") (term "1,1"))
               (rule "times_zero_2" (formula "11") (term "1,1,1"))
               (rule "add_zero_right" (formula "11") (term "1,1"))
               (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
               (rule "polySimp_addComm1" (formula "12") (term "0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "11") (term "0,1"))
               (rule "add_zero_right" (formula "11") (term "0,0,1"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,1,1,0"))
               (rule "apply_eq_monomials" (formula "12") (term "1,0,1,0,0") (ifseqformula "11"))
               (rule "polySimp_rightDist" (formula "12") (term "0,1,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,1,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "12") (term "1,0,1,0,0"))
               (rule "add_literals" (formula "12") (term "1,1,1,0,1,0,0"))
               (rule "times_zero_1" (formula "12") (term "1,1,0,1,0,0"))
               (rule "add_zero_right" (formula "12") (term "1,0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,0,0"))
               (rule "polySimp_addComm1" (formula "12") (term "0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "12") (term "1,1,0,1,1,0"))
               (rule "mul_literals" (formula "12") (term "0,1,1,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,1,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "11") (term "0,0,1"))
               (rule "polySimp_elimOne" (formula "11") (term "0,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,0,1,0,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,1,0,0,1,0,0"))
               (rule "polySimp_elimOne" (formula "12") (term "0,0,0,1,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
               (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
               (rule "array2seqDef" (formula "16") (term "0,1,1,0,1") (inst "u=u"))
               (rule "eqSymm" (formula "16") (term "1,0,1"))
               (rule "getOfSeqDef" (formula "16") (term "0,1,0,1"))
               (rule "castDel" (formula "16") (term "1,0,1,0,1"))
               (rule "castDel" (formula "16") (term "2,0,1,0,1"))
               (rule "add_zero_right" (formula "16") (term "0,2,1,0,1,0,1"))
               (rule "polySimp_elimSub" (formula "16") (term "1,1,0,0,1,0,1"))
               (rule "times_zero_2" (formula "16") (term "1,1,1,0,0,1,0,1"))
               (rule "add_zero_right" (formula "16") (term "1,1,0,0,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,1,0,1"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,1,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,1,0,1"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,1,0,1"))
               (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,1,0,1"))
               (rule "mul_literals" (formula "16") (term "0,1,1,0,0,1,0,1"))
               (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,1,0,1"))
               (rule "array2seqDef" (formula "16") (term "0,0,0") (inst "u=u"))
               (rule "lenOfSeqDef" (formula "16") (term "0,0"))
               (rule "polySimp_elimSub" (formula "16") (term "1,0,0"))
               (rule "times_zero_2" (formula "16") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "16") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
               (rule "add_zero_right" (formula "16") (term "0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,0"))
               (rule "polySimp_elimOne" (formula "16") (term "0,0,0,0"))
               (rule "array2seqDef" (formula "16") (term "0,1,0") (inst "u=u"))
               (rule "eqSymm" (formula "16") (term "0"))
               (rule "lenOfSeqDef" (formula "16") (term "0,0"))
               (rule "polySimp_elimSub" (formula "16") (term "1,0,0"))
               (rule "mul_literals" (formula "16") (term "1,1,0,0"))
               (rule "add_zero_right" (formula "16") (term "1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
               (rule "add_zero_right" (formula "16") (term "0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,0"))
               (rule "eqSymm" (formula "16") (term "0"))
               (rule "polySimp_elimOne" (formula "16") (term "0,0,1,0"))
               (rule "array2seqDef" (formula "16") (term "0,1,1,1,0,0,1") (inst "u=u"))
               (rule "lenOfSeqDef" (formula "16") (term "1,1,1,0,0,1"))
               (rule "polySimp_elimSub" (formula "16") (term "1,1,1,1,0,0,1"))
               (rule "mul_literals" (formula "16") (term "1,1,1,1,1,0,0,1"))
               (rule "add_zero_right" (formula "16") (term "1,1,1,1,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1,1,1,0,0,1"))
               (rule "add_zero_right" (formula "16") (term "0,0,1,1,1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,1,1,0,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,1,1,1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "16") (term "0,0,1,1,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "16") (term "0,0,1,1,1,0,0,1"))
               (rule "array2seqDef" (formula "16") (term "0,1,1,0,1") (inst "u=u"))
               (rule "eqSymm" (formula "16") (term "1,0,1"))
               (rule "getOfSeqDef" (formula "16") (term "0,1,0,1"))
               (rule "castDel" (formula "16") (term "1,0,1,0,1"))
               (rule "castDel" (formula "16") (term "2,0,1,0,1"))
               (rule "add_zero_right" (formula "16") (term "0,2,1,0,1,0,1"))
               (rule "polySimp_elimSub" (formula "16") (term "1,1,0,0,1,0,1"))
               (rule "times_zero_2" (formula "16") (term "1,1,1,0,0,1,0,1"))
               (rule "add_zero_right" (formula "16") (term "1,1,0,0,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,1,0,1"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,1,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,1,0,1"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,1,0,1"))
               (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,1,0,1"))
               (rule "mul_literals" (formula "16") (term "0,1,1,0,0,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,1,0,1"))
               (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,1,0,1"))
               (rule "pullOutSelect" (formula "16") (term "0,1,0,0") (inst "selectSK=verif_selectvoting_system_core_Tag_BALLOTS_5"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "9"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "replaceKnownSelect_taclet10010_0" (formula "17") (term "0,0,0,0,0"))
               (rule "replaceKnownSelect_taclet10010_0" (formula "17") (term "1,1,0,1,0,1"))
               (rule "replaceKnownSelect_taclet10010_0" (formula "17") (term "0,1,1,1,1,0,0,1"))
               (rule "replaceKnownSelect_taclet10010_0" (formula "17") (term "0,0,0,1,1,1,0,0,1"))
               (rule "replaceKnownSelect_taclet10010_0" (formula "17") (term "0,1,1,1,0,0,1,0,1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet10010_1" (formula "16") (term "0,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10010_1" (formula "16") (term "0,0,0,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10010_1" (formula "16") (term "1,1,0,1,0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet10010_1" (formula "16") (term "0,1,1,1,1,0,0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet10010_1" (formula "16") (term "0,0,0,1,1,1,0,0,1"))
               (rule "replaceKnownAuxiliaryConstant_taclet10010_1" (formula "16") (term "0,1,1,1,0,0,1,0,1"))
               (rule "nnf_imp2or" (formula "12") (term "0"))
               (rule "nnf_imp2or" (formula "16") (term "0,1"))
               (rule "nnf_notAnd" (formula "12") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
               (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
               (rule "mul_literals" (formula "12") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "16") (term "0,0,1"))
               (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0,1"))
               (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,1"))
               (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,1"))
               (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,1"))
               (rule "add_zero_left" (formula "16") (term "0,0,1,0,0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,1"))
               (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0,1"))
               (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0,1"))
               (rule "add_literals" (formula "16") (term "0,0,0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,1"))
               (rule "mul_literals" (formula "16") (term "1,0,0,0,1"))
               (rule "throwUnfold" (formula "22") (term "1") (inst "#v0=m"))
               (rule "variableDeclarationAssign" (formula "22") (term "1"))
               (rule "variableDeclaration" (formula "22") (term "1") (newnames "m_4"))
               (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "13") (ifseqformula "3"))
               (rule "andLeft" (formula "13"))
               (rule "notLeft" (formula "14"))
               (rule "andLeft" (formula "13"))
               (rule "notLeft" (formula "14"))
               (rule "andLeft" (formula "13"))
               (rule "notLeft" (formula "14"))
               (rule "andLeft" (formula "13"))
               (rule "notLeft" (formula "14"))
               (rule "andLeft" (formula "13"))
               (rule "andLeft" (formula "13"))
               (rule "andLeft" (formula "13"))
               (rule "andLeft" (formula "13"))
               (rule "andLeft" (formula "13"))
               (rule "andLeft" (formula "13"))
               (rule "andLeft" (formula "13"))
               (rule "notLeft" (formula "14"))
               (rule "notLeft" (formula "13"))
               (rule "nonNull" (formula "18") (inst "i=i"))
               (rule "sub_literals" (formula "18") (term "2,1,0,1,1"))
               (builtin "One Step Simplification" (formula "18"))
               (rule "greater_literals" (formula "18") (term "0,1"))
               (builtin "One Step Simplification" (formula "18"))
               (rule "andLeft" (formula "18"))
               (rule "notLeft" (formula "18"))
               (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "17") (inst "i=i"))
               (rule "sub_literals" (formula "17") (term "2,1,0,1,1"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "greater_literals" (formula "17") (term "0,1"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "andLeft" (formula "17"))
               (rule "notLeft" (formula "17"))
               (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "16") (inst "i=i"))
               (rule "greater_literals" (formula "16") (term "0,1"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "sub_literals" (formula "16") (term "2,1,0,1"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "andLeft" (formula "16"))
               (rule "notLeft" (formula "16"))
               (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
               (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "15") (inst "i=i"))
               (rule "greater_literals" (formula "15") (term "0,1"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "sub_literals" (formula "15") (term "2,1,0,1"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "andLeft" (formula "15"))
               (rule "notLeft" (formula "15"))
               (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
               (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "14") (inst "i=i"))
               (rule "sub_literals" (formula "14") (term "2,1,0,1,1"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "greater_literals" (formula "14") (term "0,1"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "andLeft" (formula "14"))
               (rule "notLeft" (formula "14"))
               (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
               (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "13") (inst "i=i"))
               (rule "sub_literals" (formula "13") (term "2,1,0,1,1"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "greater_literals" (formula "13") (term "0,1"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "andLeft" (formula "13"))
               (rule "notLeft" (formula "13"))
               (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
               (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
               (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_5"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "9"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")) (ifInst ""  (formula "3")))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet10010_3" (formula "32") (term "0"))
               (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_5"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "9"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")) (ifInst ""  (formula "3")))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet10010_5" (formula "31") (term "0"))
               (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_5"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "9"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")) (ifInst ""  (formula "3")))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet10010_7" (formula "30") (term "0"))
               (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_5"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "9"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")) (ifInst ""  (formula "3")))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet10010_9" (formula "29") (term "0"))
               (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_5"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "9"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")) (ifInst ""  (formula "3")))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet10010_11" (formula "28") (term "0"))
               (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_5"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "9"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")) (ifInst ""  (formula "3")))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet10010_13" (formula "27") (term "0"))
               (rule "pullOutSelect" (formula "18") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_5"))
               (rule "simplifySelectOfAnonEQ" (formula "18") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "36")) (ifInst ""  (formula "2")))
               (rule "replaceKnownSelect_taclet10010_14" (formula "27") (term "0"))
               (rule "replaceKnownSelect_taclet10010_14" (formula "19") (term "0,1,1,1,0,0"))
               (rule "hideAuxiliaryEq" (formula "18"))
               (rule "replaceKnownAuxiliaryConstant_taclet10010_15" (formula "26") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10010_15" (formula "18") (term "1,0,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10010_15" (formula "18") (term "0,1,1,1,0,0"))
               (rule "pullOutSelect" (formula "17") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_5"))
               (rule "simplifySelectOfAnonEQ" (formula "17") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "36")) (ifInst ""  (formula "2")))
               (rule "replaceKnownSelect_taclet10010_16" (formula "26") (term "0"))
               (rule "replaceKnownSelect_taclet10010_16" (formula "18") (term "0,1,1,1,0,0"))
               (rule "hideAuxiliaryEq" (formula "17"))
               (rule "replaceKnownAuxiliaryConstant_taclet10010_17" (formula "25") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10010_17" (formula "17") (term "1,0,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10010_17" (formula "17") (term "0,1,1,1,0,0"))
               (rule "pullOutSelect" (formula "16") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_5"))
               (rule "simplifySelectOfAnonEQ" (formula "16") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "36")) (ifInst ""  (formula "2")))
               (rule "replaceKnownSelect_taclet10010_18" (formula "25") (term "0"))
               (rule "replaceKnownSelect_taclet10010_18" (formula "17") (term "0,1,1,1,0,0"))
               (rule "hideAuxiliaryEq" (formula "16"))
               (rule "replaceKnownAuxiliaryConstant_taclet10010_19" (formula "24") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10010_19" (formula "16") (term "1,0,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10010_19" (formula "16") (term "0,1,1,1,0,0"))
               (rule "pullOutSelect" (formula "15") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_5"))
               (rule "simplifySelectOfAnonEQ" (formula "15") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "36")) (ifInst ""  (formula "2")))
               (rule "replaceKnownSelect_taclet10010_20" (formula "24") (term "0"))
               (rule "replaceKnownSelect_taclet10010_20" (formula "16") (term "0,1,1,1,0,0"))
               (rule "hideAuxiliaryEq" (formula "15"))
               (rule "replaceKnownAuxiliaryConstant_taclet10010_21" (formula "23") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10010_21" (formula "15") (term "1,0,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10010_21" (formula "15") (term "0,1,1,1,0,0"))
               (rule "pullOutSelect" (formula "14") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_5"))
               (rule "simplifySelectOfAnonEQ" (formula "14") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "36")) (ifInst ""  (formula "2")))
               (rule "replaceKnownSelect_taclet10010_22" (formula "23") (term "0"))
               (rule "replaceKnownSelect_taclet10010_22" (formula "15") (term "0,1,1,1,0,0"))
               (rule "hideAuxiliaryEq" (formula "14"))
               (rule "replaceKnownAuxiliaryConstant_taclet10010_23" (formula "22") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10010_23" (formula "14") (term "1,0,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10010_23" (formula "14") (term "0,1,1,1,0,0"))
               (rule "pullOutSelect" (formula "13") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_5"))
               (rule "simplifySelectOfAnonEQ" (formula "13") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "36")) (ifInst ""  (formula "2")))
               (rule "replaceKnownSelect_taclet10010_24" (formula "22") (term "0"))
               (rule "replaceKnownSelect_taclet10010_24" (formula "14") (term "0,1,1,1,0,0"))
               (rule "hideAuxiliaryEq" (formula "13"))
               (rule "replaceKnownAuxiliaryConstant_taclet10010_25" (formula "21") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10010_25" (formula "13") (term "1,0,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10010_25" (formula "13") (term "0,1,1,1,0,0"))
               (rule "nnf_imp2or" (formula "18") (term "0"))
               (rule "nnf_imp2or" (formula "17") (term "0"))
               (rule "nnf_imp2or" (formula "16") (term "0"))
               (rule "nnf_imp2or" (formula "15") (term "0"))
               (rule "nnf_imp2or" (formula "14") (term "0"))
               (rule "nnf_imp2or" (formula "13") (term "0"))
               (rule "nnf_notAnd" (formula "18") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
               (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
               (rule "mul_literals" (formula "18") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "17") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
               (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
               (rule "mul_literals" (formula "17") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "16") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
               (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
               (rule "mul_literals" (formula "16") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "15") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
               (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
               (rule "mul_literals" (formula "15") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "14") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
               (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
               (rule "mul_literals" (formula "14") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "13") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
               (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
               (rule "mul_literals" (formula "13") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
               (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "6") (ifseqformula "3"))
               (rule "andLeft" (formula "6"))
               (rule "notLeft" (formula "7"))
               (rule "andLeft" (formula "6"))
               (rule "notLeft" (formula "7"))
               (rule "andLeft" (formula "6"))
               (rule "andLeft" (formula "6"))
               (rule "notLeft" (formula "8"))
               (rule "andLeft" (formula "6"))
               (rule "notLeft" (formula "8"))
               (rule "andLeft" (formula "6"))
               (rule "andLeft" (formula "6"))
               (rule "andLeft" (formula "6"))
               (rule "andLeft" (formula "6"))
               (rule "andLeft" (formula "6"))
               (rule "andLeft" (formula "6"))
               (rule "notLeft" (formula "6"))
               (rule "notLeft" (formula "6"))
               (rule "nonNull" (formula "11") (inst "i=i"))
               (rule "greater_literals" (formula "11") (term "0,1"))
               (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "31")))
               (rule "sub_literals" (formula "11") (term "2,1,0"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "24") (ifseqformula "31"))
               (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
               (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "10") (inst "i=i"))
               (rule "greater_literals" (formula "10") (term "0,1"))
               (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "30")))
               (rule "sub_literals" (formula "10") (term "2,1,0"))
               (builtin "One Step Simplification" (formula "10"))
               (rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "24") (ifseqformula "30"))
               (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
               (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "9") (inst "i=i"))
               (rule "greater_literals" (formula "9") (term "0,1"))
               (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "29")))
               (rule "sub_literals" (formula "9") (term "2,1,0"))
               (builtin "One Step Simplification" (formula "9"))
               (rule "narrowSelectArrayType" (formula "9") (term "0,0,1,0") (ifseqformula "24") (ifseqformula "29"))
               (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
               (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "8") (inst "i=i"))
               (rule "sub_literals" (formula "8") (term "2,1,0,1,1"))
               (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "28")))
               (rule "greater_literals" (formula "8") (term "0"))
               (builtin "One Step Simplification" (formula "8"))
               (rule "narrowSelectArrayType" (formula "8") (term "0,0,1,0") (ifseqformula "24") (ifseqformula "28"))
               (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
               (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "7") (inst "i=i"))
               (rule "sub_literals" (formula "7") (term "2,1,0,1,1"))
               (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "27")))
               (rule "greater_literals" (formula "7") (term "0"))
               (builtin "One Step Simplification" (formula "7"))
               (rule "narrowSelectArrayType" (formula "7") (term "0,0,1,0") (ifseqformula "24") (ifseqformula "27"))
               (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
               (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "6") (inst "i=i"))
               (rule "sub_literals" (formula "6") (term "2,1,0,1,1"))
               (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "26")))
               (rule "greater_literals" (formula "6") (term "0"))
               (builtin "One Step Simplification" (formula "6"))
               (rule "narrowSelectArrayType" (formula "6") (term "0,0,1,0") (ifseqformula "24") (ifseqformula "26"))
               (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0"))
               (rule "mul_literals" (formula "6") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0"))
               (rule "commute_or_2" (formula "17") (term "0"))
               (rule "nnf_imp2or" (formula "11") (term "0"))
               (rule "nnf_imp2or" (formula "10") (term "0"))
               (rule "nnf_imp2or" (formula "9") (term "0"))
               (rule "nnf_imp2or" (formula "8") (term "0"))
               (rule "nnf_imp2or" (formula "7") (term "0"))
               (rule "nnf_imp2or" (formula "6") (term "0"))
               (rule "nnf_notAnd" (formula "11") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
               (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
               (rule "mul_literals" (formula "11") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "10") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
               (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
               (rule "mul_literals" (formula "10") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "9") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
               (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "9") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
               (rule "mul_literals" (formula "9") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "8") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
               (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
               (rule "mul_literals" (formula "8") (term "1,0,0,0"))
               (rule "nnf_notAnd" (formula "7") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
               (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "7") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
               (rule "mul_literals" (formula "7") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "6") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "6") (term "0,0,0"))
               (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "6") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
               (rule "mul_literals" (formula "6") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "6") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "6") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0"))
               (rule "lenNonNegative" (formula "16") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "16"))
               (rule "arrayLengthNotNegative" (formula "17") (term "1,1"))
               (rule "arrayLengthIsAShort" (formula "18") (term "1,1"))
               (builtin "One Step Simplification" (formula "18"))
               (rule "true_left" (formula "18"))
               (rule "commute_or_2" (formula "25") (term "0"))
               (rule "instanceCreationAssignmentUnfoldArguments" (formula "46") (term "1"))
               (rule "variableDeclarationAssign" (formula "46") (term "1"))
               (rule "variableDeclaration" (formula "46") (term "1") (newnames "var_12"))
               (rule "assignment" (formula "46") (term "1"))
               (builtin "One Step Simplification" (formula "46"))
               (rule "variableDeclarationAssign" (formula "46") (term "1"))
               (rule "variableDeclaration" (formula "46") (term "1") (newnames "var_13"))
               (rule "stringAssignment" (formula "46") (term "1"))
               (builtin "One Step Simplification" (formula "47"))
               (builtin "One Step Simplification" (formula "46"))
               (rule "eqSymm" (formula "46"))
               (rule "commute_or_2" (formula "24") (term "0"))
               (rule "commute_or_2" (formula "23") (term "0"))
               (rule "commute_or_2" (formula "22") (term "0"))
               (rule "commute_or_2" (formula "21") (term "0"))
               (rule "arrayLengthNotNegative" (formula "40") (term "1,0,0"))
               (rule "arrayLengthIsAShort" (formula "41") (term "1,0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "commute_or_2" (formula "21") (term "0"))
               (rule "commute_or" (formula "20") (term "0,0"))
               (rule "commute_or_2" (formula "12") (term "0"))
               (rule "commute_or_2" (formula "11") (term "0"))
               (rule "commute_or_2" (formula "10") (term "0"))
               (rule "commute_or_2" (formula "9") (term "0"))
               (rule "commute_or_2" (formula "8") (term "0"))
               (rule "commute_or_2" (formula "7") (term "0"))
               (rule "commute_or" (formula "26") (term "0,0"))
               (rule "commute_or" (formula "25") (term "0,0"))
               (rule "commute_or" (formula "24") (term "0,0"))
               (rule "commute_or" (formula "23") (term "0,0"))
               (rule "commute_or" (formula "22") (term "0,0"))
               (rule "commute_or" (formula "21") (term "0,0"))
               (rule "commute_or" (formula "12") (term "0,0"))
               (rule "commute_or" (formula "11") (term "0,0"))
               (rule "commute_or" (formula "10") (term "0,0"))
               (rule "commute_or" (formula "9") (term "0,0"))
               (rule "commute_or" (formula "8") (term "0,0"))
               (rule "commute_or" (formula "7") (term "0,0"))
               (rule "ifthenelse_to_or_right" (formula "20") (term "0,0,0"))
               (rule "nnf_notAnd" (formula "20") (term "0,0,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0,0,0,0"))
               (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,0,0,0"))
               (rule "add_literals" (formula "20") (term "0,0,0,1,0,0,0,0,0"))
               (rule "add_zero_left" (formula "20") (term "0,0,1,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0,0,0,0"))
               (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0,0,0,0"))
               (rule "add_literals" (formula "20") (term "0,0,0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,0,0,0"))
               (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0,0"))
               (rule "commute_or" (formula "20") (term "0,0"))
               (rule "commute_or_2" (formula "20") (term "0"))
               (rule "commute_or_2" (formula "20") (term "0,1,0"))
               (rule "commute_or" (formula "20") (term "1,1,0"))
               (rule "commute_or" (formula "20") (term "0,0,1,0"))
               (rule "cnf_rightDist" (formula "20") (term "1,1,0"))
               (rule "cnf_rightDist" (formula "20") (term "0"))
               (rule "distr_forallAnd" (formula "20"))
               (rule "andLeft" (formula "20"))
               (rule "commute_or" (formula "21") (term "0"))
               (rule "commute_or_2" (formula "20") (term "0"))
               (rule "commute_or" (formula "21") (term "1,1,0"))
               (rule "shift_paren_or" (formula "20") (term "0,0"))
               (rule "cnf_rightDist" (formula "21") (term "0"))
               (rule "distr_forallAnd" (formula "21"))
               (rule "andLeft" (formula "21"))
               (rule "commute_or_2" (formula "21") (term "0"))
               (rule "shift_paren_or" (formula "22") (term "0"))
               (rule "commute_or_2" (formula "22") (term "0,0"))
               (rule "shift_paren_or" (formula "21") (term "0,0"))
               (rule "commute_or" (formula "21") (term "0,0,0"))
               (rule "inEqSimp_or_tautInEq1" (formula "21") (term "0,0"))
               (rule "add_zero_right" (formula "21") (term "1,1,0,0"))
               (rule "qeq_literals" (formula "21") (term "1,0,0"))
               (builtin "One Step Simplification" (formula "21"))
               (rule "true_left" (formula "21"))
               (rule "shift_paren_or" (formula "20") (term "0,0,0"))
               (rule "commute_or" (formula "20") (term "0,0,0,0"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "45") (term "0") (ifseqformula "28"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "46"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "arrayLengthNotNegative" (formula "28") (term "1,1,0"))
               (rule "arrayLengthIsAShort" (formula "29") (term "1,1,0"))
               (builtin "One Step Simplification" (formula "29"))
               (rule "true_left" (formula "29"))
               (rule "arrayLengthIsAShort" (formula "27") (term "1,1,0"))
               (builtin "One Step Simplification" (formula "27"))
               (rule "true_left" (formula "27"))
               (rule "arrayLengthNotNegative" (formula "27") (term "1,1,0"))
               (rule "arrayLengthIsAShort" (formula "26") (term "1,1,0"))
               (builtin "One Step Simplification" (formula "26"))
               (rule "true_left" (formula "26"))
               (rule "arrayLengthNotNegative" (formula "26") (term "1,1,0"))
               (rule "arrayLengthIsAShort" (formula "25") (term "1,1,0"))
               (builtin "One Step Simplification" (formula "25"))
               (rule "true_left" (formula "25"))
               (rule "arrayLengthNotNegative" (formula "25") (term "1,1,0"))
               (rule "arrayLengthIsAShort" (formula "24") (term "1,1,0"))
               (builtin "One Step Simplification" (formula "24"))
               (rule "true_left" (formula "24"))
               (rule "arrayLengthNotNegative" (formula "24") (term "1,1,0"))
               (rule "arrayLengthIsAShort" (formula "23") (term "1,1,0"))
               (builtin "One Step Simplification" (formula "23"))
               (rule "true_left" (formula "23"))
               (rule "arrayLengthNotNegative" (formula "23") (term "1,1,0"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "48") (term "0") (ifseqformula "35"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "49"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "48") (term "0") (ifseqformula "36"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "49"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "48") (term "0") (ifseqformula "37"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "49"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "47") (term "0") (ifseqformula "38"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "48"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "49") (term "0") (ifseqformula "39"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "50"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "48") (term "0") (ifseqformula "40"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "49"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "48") (term "0") (ifseqformula "41"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "49"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "47") (term "0") (ifseqformula "42"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "48"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "49") (term "0") (ifseqformula "43"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "50"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "47") (term "0") (ifseqformula "44"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "48"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "47") (term "0") (ifseqformula "45"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "48"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "0") (ifseqformula "46"))
               (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "51"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "instanceCreationAssignment" (formula "68") (term "1") (inst "#v0=m_5"))
               (rule "variableDeclarationAssign" (formula "68") (term "1"))
               (rule "variableDeclaration" (formula "68") (term "1") (newnames "m_5"))
               (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "68") (term "1") (inst "#v0=m_6"))
               (rule "variableDeclaration" (formula "68") (term "1") (newnames "m_6"))
               (rule "methodBodyExpand" (formula "68") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
               (builtin "One Step Simplification" (formula "68"))
               (rule "variableDeclaration" (formula "68") (term "1") (newnames "__NEW__"))
               (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "68") (term "1") (inst "#v0=m_7"))
               (rule "variableDeclaration" (formula "68") (term "1") (newnames "m_7"))
               (rule "allocateInstance" (formula "68"))
               (builtin "One Step Simplification" (formula "69"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "wellFormedCreate" (formula "1") (term "0,1,0"))
               (rule "wellFormedAnonEQ" (formula "1") (term "0,1,0") (ifseqformula "28"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "replace_known_left" (formula "1") (term "1,0") (ifseqformula "28"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
               (rule "notLeft" (formula "1"))
               (rule "blockEmpty" (formula "71") (term "1"))
               (rule "assignment" (formula "71") (term "1"))
               (builtin "One Step Simplification" (formula "71"))
               (rule "pullOutSelect" (formula "50") (term "0") (inst "selectSK=java_lang_Object_created__0"))
               (rule "simplifySelectOfCreate" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "castDel" (formula "1") (term "1,0"))
               (rule "eqSymm" (formula "1") (term "0,1,0,0"))
               (rule "eqSymm" (formula "1") (term "0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,1,0,0") (ifseqformula "71"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
               (rule "eqSymm" (formula "1") (term "1,0,0"))
               (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "71"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
               (rule "ifthenelse_negated" (formula "1") (term "0"))
               (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "51"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "ifEqualsTRUE" (formula "50"))
               (builtin "One Step Simplification" (formula "50"))
               (rule "orRight" (formula "50"))
               (rule "replace_known_right" (formula "51") (term "0,0") (ifseqformula "50"))
               (builtin "One Step Simplification" (formula "51"))
               (rule "hideAuxiliaryEqConcrete2" (formula "52"))
               (rule "methodBodyExpand" (formula "72") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
               (builtin "One Step Simplification" (formula "72"))
               (rule "assignment_write_attribute_this" (formula "72") (term "1"))
               (builtin "One Step Simplification" (formula "72"))
               (rule "methodCallWithinClass" (formula "72") (term "1"))
               (rule "methodBodyExpand" (formula "72") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
               (builtin "One Step Simplification" (formula "72"))
               (rule "methodCallSuper" (formula "72") (term "1"))
               (rule "methodBodyExpand" (formula "72") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
               (builtin "One Step Simplification" (formula "72"))
               (rule "methodCallSuper" (formula "72") (term "1"))
               (rule "methodBodyExpand" (formula "72") (term "1") (newnames "heapBefore_<prepare>_0,savedHeapBefore_<prepare>_0"))
               (builtin "One Step Simplification" (formula "72"))
               (rule "methodCallSuper" (formula "72") (term "1"))
               (rule "methodBodyExpand" (formula "72") (term "1") (newnames "heapBefore_<prepare>_1,savedHeapBefore_<prepare>_1"))
               (builtin "One Step Simplification" (formula "72"))
               (rule "methodCallEmpty" (formula "72") (term "1"))
               (rule "blockEmpty" (formula "72") (term "1"))
               (rule "assignment_write_attribute_this" (formula "72") (term "1"))
               (builtin "One Step Simplification" (formula "72"))
               (rule "castDel" (formula "72") (term "1,0,1,0"))
               (rule "assignment_write_attribute_this" (formula "72") (term "1"))
               (builtin "One Step Simplification" (formula "72"))
               (rule "castDel" (formula "72") (term "1,0,1,0"))
               (rule "methodCallEmpty" (formula "72") (term "1"))
               (rule "methodCallEmpty" (formula "72") (term "1"))
               (rule "blockEmpty" (formula "72") (term "1"))
               (rule "assignment_write_attribute_this" (formula "72") (term "1"))
               (builtin "One Step Simplification" (formula "72"))
               (rule "assignment_write_attribute_this" (formula "72") (term "1"))
               (builtin "One Step Simplification" (formula "72"))
               (rule "methodCallEmpty" (formula "72") (term "1"))
               (rule "blockEmpty" (formula "72") (term "1"))
               (rule "methodCallReturnIgnoreResult" (formula "72") (term "1"))
               (rule "methodCallReturn" (formula "72") (term "1"))
               (rule "assignment" (formula "72") (term "1"))
               (builtin "One Step Simplification" (formula "72"))
               (rule "methodCallEmpty" (formula "72") (term "1"))
               (rule "blockEmpty" (formula "72") (term "1"))
               (rule "assignment" (formula "72") (term "1"))
               (builtin "One Step Simplification" (formula "72"))
               (rule "variableDeclarationAssign" (formula "72") (term "1"))
               (rule "variableDeclaration" (formula "72") (term "1") (newnames "var_14"))
               (rule "assignment" (formula "72") (term "1"))
               (builtin "One Step Simplification" (formula "72"))
               (rule "variableDeclarationAssign" (formula "72") (term "1"))
               (rule "variableDeclaration" (formula "72") (term "1") (newnames "var_15"))
               (rule "assignment" (formula "72") (term "1"))
               (builtin "One Step Simplification" (formula "72"))
               (rule "methodBodyExpand" (formula "72") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
               (builtin "One Step Simplification" (formula "72"))
               (rule "methodCallSuper" (formula "72") (term "1"))
               (rule "methodBodyExpand" (formula "72") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
               (builtin "One Step Simplification" (formula "72"))
               (rule "methodCallSuper" (formula "72") (term "1"))
               (rule "methodBodyExpand" (formula "72") (term "1") (newnames "heapBefore_<init>_1,savedHeapBefore_<init>_1"))
               (builtin "One Step Simplification" (formula "72"))
               (rule "methodCallSuper" (formula "72") (term "1"))
               (rule "methodBodyExpand" (formula "72") (term "1") (newnames "heapBefore_<init>_2,savedHeapBefore_<init>_2"))
               (builtin "One Step Simplification" (formula "72"))
               (rule "methodCallEmpty" (formula "72") (term "1"))
               (rule "blockEmpty" (formula "72") (term "1"))
               (rule "assignment_write_attribute_this" (formula "72") (term "1"))
               (builtin "One Step Simplification" (formula "72"))
               (rule "castDel" (formula "72") (term "1,0,1,0"))
               (builtin "One Step Simplification" (formula "72"))
               (rule "assignment_write_attribute_this" (formula "72") (term "1"))
               (builtin "One Step Simplification" (formula "72"))
               (rule "castDel" (formula "72") (term "1,0,1,0"))
               (builtin "One Step Simplification" (formula "72"))
               (rule "methodCallEmpty" (formula "72") (term "1"))
               (rule "methodCallEmpty" (formula "72") (term "1"))
               (rule "blockEmpty" (formula "72") (term "1"))
               (rule "assignment_write_attribute_this" (formula "72") (term "1"))
               (builtin "One Step Simplification" (formula "72"))
               (rule "assignment_write_attribute_this" (formula "72") (term "1"))
               (builtin "One Step Simplification" (formula "72"))
               (rule "methodCallEmpty" (formula "72") (term "1"))
               (rule "blockEmpty" (formula "72") (term "1"))
               (rule "assignment_write_attribute" (formula "72") (term "1"))
               (branch "Normal Execution (m_5 != null)"
                  (builtin "One Step Simplification" (formula "73"))
                  (builtin "One Step Simplification" (formula "72") (ifInst ""  (formula "52")))
                  (rule "false_right" (formula "72"))
                  (rule "assignment" (formula "72") (term "1"))
                  (builtin "One Step Simplification" (formula "72"))
                  (rule "blockEmpty" (formula "72") (term "1"))
                  (rule "methodCallParamThrow" (formula "72") (term "1"))
                  (builtin "One Step Simplification" (formula "72"))
                  (rule "tryCatchThrow" (formula "72") (term "1"))
                  (rule "ifElseUnfold" (formula "72") (term "1") (inst "#boolv=x"))
                  (rule "variableDeclaration" (formula "72") (term "1") (newnames "x_6"))
                  (rule "equality_comparison_simple" (formula "72") (term "1"))
                  (builtin "One Step Simplification" (formula "72"))
                  (rule "replace_known_right" (formula "72") (term "0,0,1,0") (ifseqformula "52"))
                  (builtin "One Step Simplification" (formula "72"))
                  (rule "ifElseSplit" (formula "72"))
                  (branch "if x_6 true"
                     (builtin "One Step Simplification" (formula "73"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "if x_6 false"
                     (builtin "One Step Simplification" (formula "73"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "ifElseSplit" (formula "72"))
                     (branch "if m_4 instanceof java.lang.Throwable true"
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                        (rule "true_left" (formula "1"))
                        (rule "variableDeclaration" (formula "72") (term "1") (newnames "e"))
                        (rule "reference_type_cast" (formula "72") (term "1"))
                        (branch "Normal Execution (m_4 instanceof java.lang.Throwable)"
                           (builtin "One Step Simplification" (formula "73"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "assignment" (formula "72") (term "1"))
                           (builtin "One Step Simplification" (formula "72"))
                           (rule "emptyModality" (formula "72") (term "1"))
                           (builtin "One Step Simplification" (formula "72") (ifInst ""  (formula "52")) (ifInst ""  (formula "52")) (ifInst ""  (formula "52")) (ifInst ""  (formula "52")))
                           (rule "eqSymm" (formula "72") (term "1,0,0,1"))
                           (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "72") (term "0") (ifseqformula "18"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "1,1,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "1,1,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "1,1,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "1,1,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "1,1,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "1,1,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "1,1,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "1,1,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "1,1,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "1,1,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "1,1,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "1,1,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "1,1,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "1,1,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "1,1,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "1,1,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "1,1,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "1,1,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "1,1,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "1,1,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,0"))
                           (rule "nonNull" (formula "72") (term "1,0,0,0,0,0,0,0,0") (inst "i=i"))
                           (rule "greater_literals" (formula "72") (term "0,1,1,0,0,0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "72"))
                           (rule "sub_literals" (formula "72") (term "2,1,0,1,1,0,0,0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "72"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "72") (term "1,0,0,1,1,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "72") (term "0,0,0,1,1,0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "1,0,0,1,1,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "72") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "72") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "72") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "72") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "72") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
                           (rule "nonNull" (formula "72") (term "1,0,0,0,0,0") (inst "i=i"))
                           (rule "sub_literals" (formula "72") (term "2,1,0,1,1,1,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "72"))
                           (rule "greater_literals" (formula "72") (term "0,1,1,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "72"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,1,1,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,1,1,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,1,1,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,1,1,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,1,1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "72") (term "1,0,0,1,1,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,1,0,0,1,1,0,0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "72") (term "0,0,0,1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "1,0,0,1,1,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "72") (term "1,1,0,0,1,1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "72") (term "1,1,0,0,1,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "72") (term "1,1,1,0,0,1,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "72") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "72") (term "1,1,1,0,0,1,1,0,0,0,0,0"))
                           (rule "nonNull" (formula "72") (term "1,0,0,0,0,0,0,0") (inst "i=i"))
                           (rule "greater_literals" (formula "72") (term "0,1,1,0,0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "72"))
                           (rule "sub_literals" (formula "72") (term "2,1,0,1,1,0,0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "72"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,1,1,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,1,1,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,1,1,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,1,1,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,1,1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "72") (term "1,0,0,1,1,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "72") (term "0,0,0,1,1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "1,0,0,1,1,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "72") (term "1,1,0,0,1,1,0,0,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "72") (term "1,1,0,0,1,1,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "72") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "72") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "72") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0"))
                           (rule "nonNull" (formula "72") (term "1,0,0,0,0,0,0") (inst "i=i"))
                           (rule "sub_literals" (formula "72") (term "2,1,0,1,1,1,0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "72"))
                           (rule "greater_literals" (formula "72") (term "0,1,1,0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "72"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,1,1,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,1,1,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,1,1,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,1,1,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,1,1,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "72") (term "1,0,0,1,1,0,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "72") (term "0,0,0,1,1,0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "1,0,0,1,1,0,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "72") (term "1,1,0,0,1,1,0,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "72") (term "1,1,0,0,1,1,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "72") (term "0,1,1,0,0,1,1,0,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "72") (term "1,1,1,0,0,1,1,0,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "72") (term "1,1,1,0,0,1,1,0,0,0,0,0,0"))
                           (rule "nonNull" (formula "72") (term "1,0,0,0,0,0,0,0,0,0,0") (inst "i=i"))
                           (rule "greater_literals" (formula "72") (term "0,1,1,0,0,0,0,0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "72"))
                           (rule "sub_literals" (formula "72") (term "2,1,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "72"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "72") (term "1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "72") (term "0,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "72") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "72") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "72") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "72") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "72") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0"))
                           (rule "nonNull" (formula "72") (term "1,0,0,0,0,0,0,0,0,0") (inst "i=i"))
                           (rule "greater_literals" (formula "72") (term "0,1,1,0,0,0,0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "72"))
                           (rule "sub_literals" (formula "72") (term "2,1,0,1,1,0,0,0,0,0,0,0,0,0"))
                           (builtin "One Step Simplification" (formula "72"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "72") (term "0,0,1,0,1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "72") (term "1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "72") (term "0,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "72") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "72") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "72") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "72") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "72") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0"))
                           (rule "pullOutSelect" (formula "72") (term "0,0,0,1,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_6"))
                           (rule "applyEq" (formula "73") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "73") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "replaceKnownSelect_taclet10010_18" (formula "1") (term "0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet10010_19" (formula "1") (term "0"))
                           (rule "applyEqReverse" (formula "73") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "73") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "73") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "72") (term "0,0,1,0,0,0,0,0,0,0") (ifseqformula "56"))
                           (builtin "One Step Simplification" (formula "72"))
                           (rule "pullOutSelect" (formula "72") (term "0,0,1,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_6"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "replaceKnownSelect_taclet10010_4" (formula "1") (term "0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet10010_5" (formula "1") (term "0"))
                           (rule "applyEqReverse" (formula "73") (term "0,0,1,0,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "72") (term "0,1,0,0") (ifseqformula "63"))
                           (builtin "One Step Simplification" (formula "72"))
                           (rule "pullOutSelect" (formula "72") (term "1,0,0,1,0,1,1,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_6"))
                           (rule "applyEq" (formula "73") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "73") (term "0,1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "1"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "replaceKnownSelect_taclet10010_16" (formula "1") (term "0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet10010_17" (formula "1") (term "0"))
                           (rule "applyEqReverse" (formula "73") (term "1,0,0,1,0,1,1,0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "73") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "73") (term "0,1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "72") (term "0,0,1,0,0,0,0,0") (ifseqformula "57"))
                           (builtin "One Step Simplification" (formula "72"))
                           (rule "pullOutSelect" (formula "72") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_6"))
                           (rule "applyEq" (formula "73") (term "0,0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "73") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "replaceKnownSelect_taclet10010_24" (formula "1") (term "0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet10010_25" (formula "1") (term "0"))
                           (rule "applyEqReverse" (formula "73") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "73") (term "0,0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "73") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "72") (term "0,0,1,0,0,0,0,0,0,0,0,0") (ifseqformula "53"))
                           (builtin "One Step Simplification" (formula "72"))
                           (rule "pullOutSelect" (formula "72") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_6"))
                           (rule "applyEq" (formula "73") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "73") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "replaceKnownSelect_taclet10010_20" (formula "1") (term "0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet10010_21" (formula "1") (term "0"))
                           (rule "applyEqReverse" (formula "73") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "73") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "73") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "72") (term "0,0,1,0,0,0,0,0,0,0") (ifseqformula "55"))
                           (builtin "One Step Simplification" (formula "72"))
                           (rule "pullOutSelect" (formula "72") (term "0,0,0,0,0,0,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_6"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "replaceKnownSelect_taclet10010_12" (formula "1") (term "0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet10010_13" (formula "1") (term "0"))
                           (rule "applyEqReverse" (formula "73") (term "0,0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "72") (term "0,0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "59"))
                           (builtin "One Step Simplification" (formula "72"))
                           (rule "pullOutSelect" (formula "72") (term "0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_6"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "replaceKnownSelect_taclet10010_2" (formula "1") (term "0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet10010_3" (formula "1") (term "0"))
                           (rule "applyEqReverse" (formula "73") (term "0,0,1,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "72") (term "0,1,0") (ifseqformula "64"))
                           (builtin "One Step Simplification" (formula "72"))
                           (rule "pullOutSelect" (formula "72") (term "0,0,0,1,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_6"))
                           (rule "applyEq" (formula "73") (term "0,1,1,1,0,0,1,1,0,0,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "73") (term "1,0,0,1,0,1,1,0,0,0") (ifseqformula "1"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "replaceKnownSelect_taclet10010_14" (formula "1") (term "0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet10010_15" (formula "1") (term "0"))
                           (rule "applyEqReverse" (formula "73") (term "0,0,0,1,0,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "73") (term "0,1,1,1,0,0,1,1,0,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "73") (term "1,0,0,1,0,1,1,0,0,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "72") (term "0,0,1,0,0,0") (ifseqformula "58"))
                           (builtin "One Step Simplification" (formula "72"))
                           (rule "pullOutSelect" (formula "72") (term "0,0,0,1,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_6"))
                           (rule "applyEq" (formula "73") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEq" (formula "73") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "replaceKnownSelect_taclet10010_22" (formula "1") (term "0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet10010_23" (formula "1") (term "0"))
                           (rule "applyEqReverse" (formula "73") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "73") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "applyEqReverse" (formula "73") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "72") (term "0,0,1,0,0,0,0,0,0,0") (ifseqformula "54"))
                           (builtin "One Step Simplification" (formula "72"))
                           (rule "pullOutSelect" (formula "72") (term "0,0,0,0,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_6"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "replaceKnownSelect_taclet10010_10" (formula "1") (term "0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet10010_11" (formula "1") (term "0"))
                           (rule "applyEqReverse" (formula "73") (term "0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "72") (term "0,0,0,0,0,0,0,0,0,0") (ifseqformula "60"))
                           (builtin "One Step Simplification" (formula "72"))
                           (rule "pullOutSelect" (formula "72") (term "0,0,1,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_6"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "replaceKnownSelect_taclet10010_8" (formula "1") (term "0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet10010_9" (formula "1") (term "0"))
                           (rule "applyEqReverse" (formula "73") (term "0,0,1,0,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "72") (term "0,1,0,0") (ifseqformula "61"))
                           (builtin "One Step Simplification" (formula "72"))
                           (rule "pullOutSelect" (formula "72") (term "0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_6"))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                           (rule "simplifySelectOfCreate" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "replaceKnownSelect_taclet10010_6" (formula "1") (term "0"))
                           (rule "replaceKnownAuxiliaryConstant_taclet10010_7" (formula "1") (term "0"))
                           (rule "applyEqReverse" (formula "73") (term "0,0,1,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "72") (term "0,1,0") (ifseqformula "62"))
                           (builtin "One Step Simplification" (formula "72"))
                           (rule "nnf_imp2or" (formula "72") (term "0,1,0"))
                           (rule "nnf_imp2or" (formula "72") (term "0,1,0,0"))
                           (rule "nnf_notAnd" (formula "72") (term "0,0,1,0"))
                           (rule "inEqSimp_notGeq" (formula "72") (term "0,0,0,1,0"))
                           (rule "times_zero_1" (formula "72") (term "1,0,0,0,0,0,1,0"))
                           (rule "add_zero_right" (formula "72") (term "0,0,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "0,0,0,1,0"))
                           (rule "mul_literals" (formula "72") (term "1,0,0,0,1,0"))
                           (rule "inEqSimp_notLeq" (formula "72") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "72") (term "1,0,0,1,0,0,1,0"))
                           (rule "mul_literals" (formula "72") (term "0,1,0,0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "72") (term "0,0,1,0,0,1,0"))
                           (rule "add_literals" (formula "72") (term "0,0,0,1,0,0,1,0"))
                           (rule "add_zero_left" (formula "72") (term "0,0,1,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "72") (term "1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "72") (term "1,1,0,0,1,0"))
                           (rule "nnf_imp2or" (formula "72") (term "0,1,0,0,0"))
                           (rule "nnf_notAnd" (formula "72") (term "0,0,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "72") (term "0,0,0,1,0,0"))
                           (rule "times_zero_1" (formula "72") (term "1,0,0,0,0,0,1,0,0"))
                           (rule "add_literals" (formula "72") (term "0,0,0,0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "0,0,0,1,0,0"))
                           (rule "mul_literals" (formula "72") (term "1,0,0,0,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "72") (term "1,0,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "72") (term "1,0,0,1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "72") (term "0,1,0,0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "72") (term "0,0,1,0,0,1,0,0"))
                           (rule "add_literals" (formula "72") (term "0,0,0,1,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "72") (term "0,0,1,0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "72") (term "1,0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "72") (term "1,1,0,0,1,0,0"))
                           (rule "nnf_imp2or" (formula "72") (term "0,1,0,0,0,0"))
                           (rule "nnf_imp2or" (formula "72") (term "0,0,0,0,0,0,0"))
                           (rule "nnf_imp2or" (formula "72") (term "0,1,0,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "72") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "72") (term "1,0,0,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "72") (term "1,0,0,1,0,0,1,0,0,0"))
                           (rule "mul_literals" (formula "72") (term "0,1,0,0,1,0,0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "72") (term "0,0,1,0,0,1,0,0,0"))
                           (rule "add_literals" (formula "72") (term "0,0,0,1,0,0,1,0,0,0"))
                           (rule "add_zero_left" (formula "72") (term "0,0,1,0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "72") (term "1,0,0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,0,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "72") (term "1,1,0,0,1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "72") (term "0,0,0,1,0,0,0"))
                           (rule "times_zero_1" (formula "72") (term "1,0,0,0,0,0,1,0,0,0"))
                           (rule "add_zero_right" (formula "72") (term "0,0,0,0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "0,0,0,1,0,0,0"))
                           (rule "mul_literals" (formula "72") (term "1,0,0,0,1,0,0,0"))
                           (rule "nnf_notAnd" (formula "72") (term "0,0,1,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "72") (term "0,0,0,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "72") (term "1,0,0,0,0,0,1,0,0,0,0"))
                           (rule "add_zero_right" (formula "72") (term "0,0,0,0,0,1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "0,0,0,1,0,0,0,0"))
                           (rule "mul_literals" (formula "72") (term "1,0,0,0,1,0,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "72") (term "1,0,0,1,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "72") (term "1,0,0,1,0,0,1,0,0,0,0"))
                           (rule "mul_literals" (formula "72") (term "0,1,0,0,1,0,0,1,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "72") (term "0,0,1,0,0,1,0,0,0,0"))
                           (rule "add_literals" (formula "72") (term "0,0,0,1,0,0,1,0,0,0,0"))
                           (rule "add_zero_left" (formula "72") (term "0,0,1,0,0,1,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "72") (term "1,0,0,1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,0,1,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "72") (term "1,1,0,0,1,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "72") (term "0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "72") (term "1,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "72") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "72") (term "0,1,0,0,1,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "72") (term "0,0,1,0,0,0,0,0,0,0,0"))
                           (rule "add_literals" (formula "72") (term "0,0,0,1,0,0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "72") (term "0,0,1,0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "72") (term "1,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,0,0,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "72") (term "1,1,0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "72") (term "0,0,0,0,0,0,0,0,0"))
                           (rule "times_zero_1" (formula "72") (term "1,0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "72") (term "0,0,0,0,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "0,0,0,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "72") (term "1,0,0,0,0,0,0,0,0,0"))
                           (rule "nnf_notAnd" (formula "72") (term "0,0,1,0,0,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "72") (term "0,0,0,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "72") (term "1,0,0,0,0,0,1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "72") (term "0,0,0,0,0,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "72") (term "0,0,0,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "72") (term "1,0,0,0,1,0,0,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "72") (term "1,0,0,1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "72") (term "1,0,0,1,0,0,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "72") (term "0,1,0,0,1,0,0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "72") (term "0,0,1,0,0,1,0,0,0,0,0"))
                           (rule "add_literals" (formula "72") (term "0,0,0,1,0,0,1,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "72") (term "0,0,1,0,0,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "72") (term "1,0,0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "72") (term "1,1,0,0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "72") (term "1,1,0,0,1,0,0,0,0,0"))
                           (rule "ifthenelse_split" (formula "33") (term "1"))
                           (branch "result_0.length ≥ 1 TRUE"
                              (rule "replace_known_left" (formula "35") (term "0,1,1,0") (ifseqformula "33"))
                              (builtin "One Step Simplification" (formula "35"))
                              (rule "replace_known_left" (formula "36") (term "0,1,1,0") (ifseqformula "33"))
                              (builtin "One Step Simplification" (formula "36"))
                              (rule "replace_known_left" (formula "66") (term "0,1,0") (ifseqformula "33"))
                              (builtin "One Step Simplification" (formula "66"))
                              (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "33"))
                              (rule "leq_literals" (formula "32") (term "0"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "true_left" (formula "32"))
                              (rule "inEqSimp_or_tautInEq1" (formula "35") (term "0"))
                              (rule "inEqSimp_homoInEq1" (formula "35") (term "1,0"))
                              (rule "polySimp_pullOutFactor1" (formula "35") (term "0,1,0"))
                              (rule "add_literals" (formula "35") (term "1,0,1,0"))
                              (rule "times_zero_1" (formula "35") (term "0,1,0"))
                              (rule "leq_literals" (formula "35") (term "1,0"))
                              (builtin "One Step Simplification" (formula "35"))
                              (rule "true_left" (formula "35"))
                              (rule "cut_direct" (formula "30") (term "0"))
                              (branch "CUT: result_0.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "true_left" (formula "31"))
                                 (rule "andRight" (formula "71"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "71"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "71"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "71"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "71"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "71"))
                                                (branch "Case 1"
                                                   (rule "allRight" (formula "71") (inst "sk=i_23"))
                                                   (rule "orRight" (formula "71"))
                                                   (rule "orRight" (formula "71"))
                                                   (rule "notRight" (formula "73"))
                                                   (rule "inEqSimp_leqRight" (formula "72"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_geqRight" (formula "73"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_23"))
                                                   (rule "simplifySelectOfCreate" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "55")))
                                                   (rule "simplifySelectOfCreate" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "56")) (ifInst ""  (formula "7")))
                                                   (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "50") (ifseqformula "55"))
                                                   (rule "allLeft" (formula "24") (inst "t=i_23"))
                                                   (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                                   (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "24") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "24") (term "0"))
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (rule "closeFalse" (formula "24"))
                                                )
                                                (branch "Case 2"
                                                   (rule "allRight" (formula "71") (inst "sk=i_22"))
                                                   (rule "orRight" (formula "71"))
                                                   (rule "orRight" (formula "71"))
                                                   (rule "notRight" (formula "73"))
                                                   (rule "inEqSimp_leqRight" (formula "72"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_geqRight" (formula "73"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_22"))
                                                   (rule "simplifySelectOfCreate" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "55")))
                                                   (rule "simplifySelectOfCreate" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "57")) (ifInst ""  (formula "8")))
                                                   (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "50") (ifseqformula "56"))
                                                   (rule "allLeft" (formula "25") (inst "t=i_22"))
                                                   (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "25"))
                                                   (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                                   (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "25") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "25"))
                                                   (rule "inEqSimp_contradInEq1" (formula "25") (ifseqformula "2"))
                                                   (rule "qeq_literals" (formula "25") (term "0"))
                                                   (builtin "One Step Simplification" (formula "25"))
                                                   (rule "closeFalse" (formula "25"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "71") (inst "sk=i_21"))
                                                (rule "orRight" (formula "71"))
                                                (rule "orRight" (formula "71"))
                                                (rule "notRight" (formula "73"))
                                                (rule "inEqSimp_geqRight" (formula "73"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_leqRight" (formula "73"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_21"))
                                                (rule "simplifySelectOfCreate" (formula "3"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "55")))
                                                (rule "simplifySelectOfCreate" (formula "3"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "58")) (ifInst ""  (formula "6")))
                                                (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "50") (ifseqformula "57"))
                                                (rule "allLeft" (formula "26") (inst "t=i_21"))
                                                (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "26") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "26"))
                                                (rule "andLeft" (formula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "2"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0"))
                                                (rule "add_zero_right" (formula "2") (term "0"))
                                                (rule "leq_literals" (formula "2"))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "allRight" (formula "71") (inst "sk=i_20"))
                                             (rule "orRight" (formula "71"))
                                             (rule "orRight" (formula "71"))
                                             (rule "notRight" (formula "73"))
                                             (rule "inEqSimp_leqRight" (formula "72"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_geqRight" (formula "73"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_20"))
                                             (rule "simplifySelectOfCreate" (formula "3"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "55")))
                                             (rule "simplifySelectOfCreate" (formula "3"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "59")) (ifInst ""  (formula "10")))
                                             (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "50") (ifseqformula "58"))
                                             (rule "allLeft" (formula "27") (inst "t=i_20"))
                                             (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "27") (term "0,0,1"))
                                             (rule "leq_literals" (formula "27") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "2"))
                                             (rule "qeq_literals" (formula "27") (term "0"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "closeFalse" (formula "27"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "allRight" (formula "71") (inst "sk=i_19"))
                                          (rule "orRight" (formula "71"))
                                          (rule "orRight" (formula "71"))
                                          (rule "notRight" (formula "73"))
                                          (rule "inEqSimp_geqRight" (formula "73"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "73"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_19"))
                                          (rule "simplifySelectOfCreate" (formula "3"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "55")))
                                          (rule "simplifySelectOfCreate" (formula "3"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "60")) (ifInst ""  (formula "9")))
                                          (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "50") (ifseqformula "59"))
                                          (rule "allLeft" (formula "28") (inst "t=i_19"))
                                          (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "28") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "inEqSimp_contradInEq1" (formula "28") (ifseqformula "2"))
                                          (rule "andLeft" (formula "28"))
                                          (rule "inEqSimp_homoInEq1" (formula "28"))
                                          (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                          (rule "add_literals" (formula "28") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "28") (term "1,0"))
                                          (rule "add_zero_right" (formula "28") (term "0"))
                                          (rule "leq_literals" (formula "28"))
                                          (rule "closeFalse" (formula "28"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "71") (inst "sk=i_18"))
                                       (rule "orRight" (formula "71"))
                                       (rule "orRight" (formula "71"))
                                       (rule "notRight" (formula "73"))
                                       (rule "inEqSimp_leqRight" (formula "72"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_geqRight" (formula "73"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_18"))
                                       (rule "simplifySelectOfCreate" (formula "3"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "55")))
                                       (rule "simplifySelectOfCreate" (formula "3"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "61")) (ifInst ""  (formula "11")))
                                       (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "50") (ifseqformula "60"))
                                       (rule "allLeft" (formula "29") (inst "t=i_18"))
                                       (rule "replace_known_left" (formula "29") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                                       (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "29") (term "0,0,1"))
                                       (rule "leq_literals" (formula "29") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "29"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "71") (inst "sk=f_3"))
                                    (rule "allRight" (formula "71") (inst "sk=o_3"))
                                    (rule "orRight" (formula "71"))
                                    (rule "pullOutSelect" (formula "72") (term "0") (inst "selectSK=f_3_0"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "73"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_3_1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_3_2"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_3_3"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_3_4"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_3_5"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "57"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_3_6"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "77"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_3_7"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "79")))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "commute_and" (formula "7") (term "0,0"))
                                    (rule "commute_and" (formula "6") (term "0,0"))
                                    (rule "commute_and" (formula "5") (term "0,0"))
                                    (rule "commute_and" (formula "4") (term "0,0"))
                                    (rule "commute_and" (formula "3") (term "0,0"))
                                    (rule "commute_and" (formula "2") (term "0,0"))
                                    (rule "commute_and" (formula "1") (term "0,0"))
                                    (rule "ifthenelse_split" (formula "71") (term "0,0"))
                                    (branch "verif.selectvoting.system.core.Tag.BALLOTS.length ≥ 1 TRUE"
                                       (rule "replace_known_left" (formula "72") (term "0,1,1,0,0,1") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "72"))
                                       (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "1"))
                                       (rule "leq_literals" (formula "23") (term "0"))
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "true_left" (formula "23"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch " f_3 = java.lang.Object::<created> ∧ o_3 = strPool(\"Wrong tag\") TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "2")))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEq" (formula "4") (term "0,0,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEq" (formula "5") (term "0,0,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "applyEqRigid" (formula "6") (term "0,0,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "77") (term "1") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "applyEqRigid" (formula "5") (term "0,1,0,0") (ifseqformula "3"))
                                          (rule "eqSymm" (formula "5") (term "1,0,0"))
                                          (rule "sortsDisjointModuloNull" (formula "5") (term "1,0,0"))
                                          (rule "eqSymm" (formula "5") (term "1,1,0,0"))
                                          (rule "replace_known_right" (formula "5") (term "1,1,0,0") (ifseqformula "74"))
                                          (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "55")))
                                          (rule "applyEqReverse" (formula "76") (term "1") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "3"))
                                          (rule "eqSymm" (formula "4") (term "1,0,0"))
                                          (rule "sortsDisjointModuloNull" (formula "4") (term "1,0,0"))
                                          (rule "eqSymm" (formula "4") (term "1,1,0,0"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "54"))
                                          (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "73")))
                                          (rule "applyEqReverse" (formula "75") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEqRigid" (formula "73") (term "0,0,0") (ifseqformula "3"))
                                          (rule "eqSymm" (formula "73") (term "0,0"))
                                          (rule "replace_known_right" (formula "73") (term "0,0") (ifseqformula "72"))
                                          (builtin "One Step Simplification" (formula "73"))
                                          (rule "notRight" (formula "73"))
                                          (rule "applyEq" (formula "74") (term "2,0") (ifseqformula "3"))
                                          (rule "castTrueImpliesOriginalTrue" (formula "74") (ifseqformula "1"))
                                          (rule "closeTrue" (formula "74"))
                                       )
                                       (branch " f_3 = java.lang.Object::<created> ∧ o_3 = strPool(\"Wrong tag\") FALSE"
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_3 = java.lang.Object::<created> ∧ o_3 = m_7 TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "replace_known_left" (formula "56") (term "0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "56"))
                                             (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEq" (formula "78") (term "1,0,0,1") (ifseqformula "3"))
                                             (rule "replace_known_right" (formula "78") (term "0,1") (ifseqformula "56"))
                                             (builtin "One Step Simplification" (formula "78"))
                                             (rule "notRight" (formula "78"))
                                             (rule "applyEqRigid" (formula "79") (term "2,0") (ifseqformula "3"))
                                             (rule "narrowSelectType" (formula "79") (term "0") (ifseqformula "54"))
                                             (rule "eqSymm" (formula "79"))
                                             (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "applyEqReverse" (formula "77") (term "0") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "eqSymm" (formula "75"))
                                             (rule "applyEq" (formula "52") (term "0") (ifseqformula "4"))
                                             (rule "sortsDisjointModuloNull" (formula "52"))
                                             (rule "eqSymm" (formula "52") (term "1"))
                                             (rule "replace_known_right" (formula "52") (term "1") (ifseqformula "74"))
                                             (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "55")))
                                             (rule "false_right" (formula "52"))
                                             (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "4"))
                                             (rule "close" (formula "54") (ifseqformula "4"))
                                          )
                                          (branch "f_3 = java.lang.Object::<created> ∧ o_3 = m_7 FALSE"
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_3 = Throwable::$cause ∧ o_3 = m_7 TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "3")))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "54"))
                                                (rule "replace_known_right" (formula "55") (term "0") (ifseqformula "54"))
                                                (builtin "One Step Simplification" (formula "55"))
                                                (rule "false_right" (formula "55"))
                                                (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEq" (formula "76") (term "0,0,0") (ifseqformula "3"))
                                                (rule "replace_known_right" (formula "76") (term "0,0") (ifseqformula "56"))
                                                (builtin "One Step Simplification" (formula "76"))
                                                (rule "notRight" (formula "76"))
                                                (rule "applyEq" (formula "77") (term "2,0") (ifseqformula "3"))
                                                (rule "narrowSelectType" (formula "77") (term "0") (ifseqformula "52"))
                                                (rule "eqSymm" (formula "77"))
                                                (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "76") (term "0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "eqSymm" (formula "75"))
                                                (rule "applyEq" (formula "52") (term "0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "52"))
                                                (rule "false_right" (formula "52"))
                                                (rule "applyEq" (formula "74") (term "1,0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                (rule "close" (formula "52") (ifseqformula "1"))
                                             )
                                             (branch "f_3 = Throwable::$cause ∧ o_3 = m_7 FALSE"
                                                (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "cut_direct" (formula "78") (term "0,0"))
                                                (branch "CUT: o_3 = null TRUE"
                                                   (builtin "One Step Simplification" (formula "79"))
                                                   (rule "false_right" (formula "79"))
                                                   (rule "applyEq" (formula "5") (term "0,1,0,0") (ifseqformula "1"))
                                                   (rule "eqSymm" (formula "5") (term "1,0,0"))
                                                   (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "59"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                                   (rule "eqSymm" (formula "4") (term "1,0,0"))
                                                   (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "58"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEq" (formula "52") (term "0,1") (ifseqformula "1"))
                                                   (rule "eqSymm" (formula "52") (term "1"))
                                                   (rule "replace_known_right" (formula "52") (term "1") (ifseqformula "57"))
                                                   (builtin "One Step Simplification" (formula "52"))
                                                   (rule "false_right" (formula "52"))
                                                   (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                                   (rule "eqSymm" (formula "4") (term "1,0,0"))
                                                   (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "56"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "76") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEqRigid" (formula "75") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEqRigid" (formula "52") (term "0,1") (ifseqformula "1"))
                                                   (rule "replace_known_right" (formula "52") (term "1") (ifseqformula "74"))
                                                   (builtin "One Step Simplification" (formula "52"))
                                                   (rule "false_right" (formula "52"))
                                                   (rule "applyEq" (formula "51") (term "0,1") (ifseqformula "1"))
                                                   (rule "eqSymm" (formula "51") (term "1"))
                                                   (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "54"))
                                                   (builtin "One Step Simplification" (formula "51"))
                                                   (rule "false_right" (formula "51"))
                                                   (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                                   (rule "eqSymm" (formula "3") (term "1,0,0"))
                                                   (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "53"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "73")))
                                                   (rule "closeFalse" (formula "3"))
                                                )
                                                (branch "CUT: o_3 = null FALSE"
                                                   (builtin "One Step Simplification" (formula "79"))
                                                   (rule "notRight" (formula "79"))
                                                   (rule "ifthenelse_split" (formula "3") (term "0"))
                                                   (branch "f_3 = Throwable::$message ∧ o_3 = m_7 TRUE"
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "55"))
                                                      (rule "replace_known_left" (formula "56") (term "1") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "56"))
                                                      (rule "replace_known_right" (formula "57") (term "0") (ifseqformula "56"))
                                                      (builtin "One Step Simplification" (formula "57"))
                                                      (rule "false_right" (formula "57"))
                                                      (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "applyEq" (formula "79") (term "1,0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "55") (term "0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "55"))
                                                      (rule "false_right" (formula "55"))
                                                      (rule "applyEqRigid" (formula "54") (term "0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "54"))
                                                      (rule "false_right" (formula "54"))
                                                      (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEqReverse" (formula "77") (term "1") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "applyEq" (formula "76") (term "2,0") (ifseqformula "3"))
                                                      (rule "narrowSelectType" (formula "76") (term "0") (ifseqformula "51"))
                                                      (rule "eqSymm" (formula "76"))
                                                      (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "76") (term "0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "eqSymm" (formula "75"))
                                                      (rule "applyEq" (formula "74") (term "0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                      (rule "close" (formula "52") (ifseqformula "1"))
                                                   )
                                                   (branch "f_3 = Throwable::$message ∧ o_3 = m_7 FALSE"
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "ifthenelse_split" (formula "3") (term "0"))
                                                      (branch "f_3 = MalformedData::$errCode ∧ o_3 = m_7 TRUE"
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "replace_known_left" (formula "56") (term "1") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "56"))
                                                         (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "55"))
                                                         (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "54"))
                                                         (rule "replace_known_right" (formula "57") (term "0") (ifseqformula "56"))
                                                         (builtin "One Step Simplification" (formula "57"))
                                                         (rule "false_right" (formula "57"))
                                                         (rule "applyEq" (formula "54") (term "0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "54"))
                                                         (rule "false_right" (formula "54"))
                                                         (rule "applyEqRigid" (formula "55") (term "0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "55"))
                                                         (rule "false_right" (formula "55"))
                                                         (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "applyEqReverse" (formula "78") (term "1") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "applyEq" (formula "53") (term "0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "53"))
                                                         (rule "false_right" (formula "53"))
                                                         (rule "applyEq" (formula "76") (term "2,0") (ifseqformula "3"))
                                                         (rule "narrowSelectType" (formula "76") (term "0") (ifseqformula "51"))
                                                         (rule "eqSymm" (formula "76"))
                                                         (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                         (rule "close" (formula "53") (ifseqformula "1"))
                                                      )
                                                      (branch "f_3 = MalformedData::$errCode ∧ o_3 = m_7 FALSE"
                                                         (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "ifthenelse_split" (formula "3") (term "0"))
                                                         (branch "f_3 = MalformedData::$description ∧ o_3 = m_7 TRUE"
                                                            (rule "andLeft" (formula "3"))
                                                            (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                            (rule "hideAuxiliaryEq" (formula "5"))
                                                            (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "replace_known_left" (formula "56") (term "1") (ifseqformula "4"))
                                                            (builtin "One Step Simplification" (formula "56"))
                                                            (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "4"))
                                                            (builtin "One Step Simplification" (formula "55"))
                                                            (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "4"))
                                                            (builtin "One Step Simplification" (formula "54"))
                                                            (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "4"))
                                                            (builtin "One Step Simplification" (formula "53"))
                                                            (rule "replace_known_right" (formula "57") (term "0") (ifseqformula "56"))
                                                            (builtin "One Step Simplification" (formula "57"))
                                                            (rule "false_right" (formula "57"))
                                                            (rule "applyEq" (formula "53") (term "0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "53"))
                                                            (rule "false_right" (formula "53"))
                                                            (rule "applyEq" (formula "53") (term "0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "53"))
                                                            (rule "false_right" (formula "53"))
                                                            (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "applyEqReverse" (formula "78") (term "1") (ifseqformula "5"))
                                                            (rule "hideAuxiliaryEq" (formula "5"))
                                                            (rule "applyEq" (formula "52") (term "0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "52"))
                                                            (rule "false_right" (formula "52"))
                                                            (rule "applyEqRigid" (formula "52") (term "0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "52"))
                                                            (rule "false_right" (formula "52"))
                                                            (rule "applyEqRigid" (formula "75") (term "2,0") (ifseqformula "3"))
                                                            (rule "narrowSelectType" (formula "75") (term "0") (ifseqformula "50"))
                                                            (rule "applyEq" (formula "74") (term "0") (ifseqformula "4"))
                                                            (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                            (rule "close" (formula "52") (ifseqformula "1"))
                                                         )
                                                         (branch "f_3 = MalformedData::$description ∧ o_3 = m_7 FALSE"
                                                            (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "ifthenelse_split" (formula "3") (term "0"))
                                                            (branch "f_3 = java.lang.Object::<initialized> ∧ o_3 = m_7 TRUE"
                                                               (rule "andLeft" (formula "3"))
                                                               (rule "applyEqReverse" (formula "82") (term "1") (ifseqformula "5"))
                                                               (rule "hideAuxiliaryEq" (formula "5"))
                                                               (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "54"))
                                                               (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "55"))
                                                               (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "52"))
                                                               (rule "replace_known_left" (formula "56") (term "1") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "56"))
                                                               (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "53"))
                                                               (rule "replace_known_right" (formula "57") (term "0") (ifseqformula "56"))
                                                               (builtin "One Step Simplification" (formula "57"))
                                                               (rule "false_right" (formula "57"))
                                                               (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                               (rule "close" (formula "57") (ifseqformula "1"))
                                                            )
                                                            (branch "f_3 = java.lang.Object::<initialized> ∧ o_3 = m_7 FALSE"
                                                               (rule "close" (formula "81") (ifseqformula "3"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch "verif.selectvoting.system.core.Tag.BALLOTS.length ≥ 1 FALSE"
                                       (rule "eqSymm" (formula "72") (term "0"))
                                       (rule "replace_known_right" (formula "72") (term "0,1,1,0,0,1") (ifseqformula "71"))
                                       (builtin "One Step Simplification" (formula "72"))
                                       (rule "inEqSimp_geqRight" (formula "71"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_contradEq7" (formula "72") (term "0") (ifseqformula "40"))
                                       (rule "times_zero_1" (formula "72") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "72") (term "0,0,0"))
                                       (rule "leq_literals" (formula "72") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "72"))
                                       (rule "false_right" (formula "72"))
                                       (rule "inEqSimp_antiSymm" (formula "23") (ifseqformula "1"))
                                       (rule "applyEq" (formula "1") (term "0") (ifseqformula "23"))
                                       (rule "leq_literals" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "applyEq" (formula "23") (term "0") (ifseqformula "22"))
                                       (rule "qeq_literals" (formula "23"))
                                       (rule "true_left" (formula "23"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch " f_3 = java.lang.Object::<created> ∧ o_3 = strPool(\"Wrong tag\") TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "1")))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "applyEqRigid" (formula "4") (term "0,0,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEqRigid" (formula "77") (term "1,0") (ifseqformula "2"))
                                          (rule "applyEq" (formula "77") (term "2,0") (ifseqformula "1"))
                                          (rule "narrowSelectType" (formula "77") (term "0") (ifseqformula "53"))
                                          (rule "eqSymm" (formula "77"))
                                          (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "2"))
                                          (rule "eqSymm" (formula "3") (term "1,0,0"))
                                          (rule "sortsDisjointModuloNull" (formula "3") (term "1,0,0"))
                                          (rule "eqSymm" (formula "3") (term "1,1,0,0"))
                                          (rule "replace_known_right" (formula "3") (term "1,1,0,0") (ifseqformula "75"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "57")))
                                          (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "applyEq" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "applyEqRigid" (formula "74") (term "0,0,0") (ifseqformula "2"))
                                          (rule "eqSymm" (formula "74") (term "0,0"))
                                          (rule "replace_known_right" (formula "74") (term "0,0") (ifseqformula "73"))
                                          (builtin "One Step Simplification" (formula "74"))
                                          (rule "notRight" (formula "74"))
                                          (rule "applyEqRigid" (formula "4") (term "0,1,0,0") (ifseqformula "3"))
                                          (rule "eqSymm" (formula "4") (term "1,0,0"))
                                          (rule "sortsDisjointModuloNull" (formula "4") (term "1,0,0"))
                                          (rule "eqSymm" (formula "4") (term "1,1,0,0"))
                                          (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "56"))
                                          (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "74")))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "75") (term "0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "eqSymm" (formula "73"))
                                          (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                          (rule "close" (formula "73") (ifseqformula "1"))
                                       )
                                       (branch " f_3 = java.lang.Object::<created> ∧ o_3 = strPool(\"Wrong tag\") FALSE"
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "cut_direct" (formula "77") (term "0,0"))
                                          (branch "CUT: o_3 = null TRUE"
                                             (builtin "One Step Simplification" (formula "78"))
                                             (rule "false_right" (formula "78"))
                                             (rule "applyEqRigid" (formula "5") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "5") (term "1,0,0"))
                                             (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "59"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "applyEq" (formula "77") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "3") (term "1,0,0"))
                                             (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "58"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "applyEqRigid" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "4") (term "1,0,0"))
                                             (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "57"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "3") (term "1,0,0"))
                                             (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "56"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "applyEq" (formula "52") (term "0,1") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "52") (term "1") (ifseqformula "73"))
                                             (builtin "One Step Simplification" (formula "52"))
                                             (rule "false_right" (formula "52"))
                                             (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "2") (term "1,0,0"))
                                             (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "54"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "2") (term "1,0,0"))
                                             (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "53"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "72") (term "1") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "eqSymm" (formula "71"))
                                             (rule "applyEqRigid" (formula "71") (term "1,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "71"))
                                             (rule "closeTrue" (formula "71"))
                                          )
                                          (branch "CUT: o_3 = null FALSE"
                                             (builtin "One Step Simplification" (formula "78"))
                                             (rule "notRight" (formula "78"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_3 = java.lang.Object::<created> ∧ o_3 = m_7 TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "57") (term "0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "57"))
                                                (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "78") (term "1") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "close" (formula "54") (ifseqformula "1"))
                                             )
                                             (branch "f_3 = java.lang.Object::<created> ∧ o_3 = m_7 FALSE"
                                                (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "f_3 = Throwable::$cause ∧ o_3 = m_7 TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "3")))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "55"))
                                                   (rule "replace_known_right" (formula "56") (term "0") (ifseqformula "55"))
                                                   (builtin "One Step Simplification" (formula "56"))
                                                   (rule "false_right" (formula "56"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                   (rule "close" (formula "56") (ifseqformula "1"))
                                                )
                                                (branch "f_3 = Throwable::$cause ∧ o_3 = m_7 FALSE"
                                                   (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "ifthenelse_split" (formula "2") (term "0"))
                                                   (branch "f_3 = Throwable::$message ∧ o_3 = m_7 TRUE"
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "55"))
                                                      (rule "replace_known_left" (formula "56") (term "1") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "56"))
                                                      (rule "replace_known_right" (formula "57") (term "0") (ifseqformula "56"))
                                                      (builtin "One Step Simplification" (formula "57"))
                                                      (rule "false_right" (formula "57"))
                                                      (rule "applyEq" (formula "56") (term "0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "56"))
                                                      (rule "false_right" (formula "56"))
                                                      (rule "applyEq" (formula "55") (term "0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "55"))
                                                      (rule "false_right" (formula "55"))
                                                      (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "applyEqRigid" (formula "76") (term "2,0") (ifseqformula "2"))
                                                      (rule "narrowSelectType" (formula "76") (term "0") (ifseqformula "52"))
                                                      (rule "eqSymm" (formula "76"))
                                                      (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "75") (term "0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "eqSymm" (formula "74"))
                                                      (rule "applyEq" (formula "73") (term "0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                      (rule "close" (formula "52") (ifseqformula "1"))
                                                   )
                                                   (branch "f_3 = Throwable::$message ∧ o_3 = m_7 FALSE"
                                                      (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "ifthenelse_split" (formula "2") (term "0"))
                                                      (branch "f_3 = MalformedData::$errCode ∧ o_3 = m_7 TRUE"
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "replace_known_left" (formula "56") (term "1") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "56"))
                                                         (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "55"))
                                                         (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "54"))
                                                         (rule "replace_known_right" (formula "57") (term "0") (ifseqformula "56"))
                                                         (builtin "One Step Simplification" (formula "57"))
                                                         (rule "false_right" (formula "57"))
                                                         (rule "applyEqRigid" (formula "55") (term "0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "55"))
                                                         (rule "false_right" (formula "55"))
                                                         (rule "applyEq" (formula "55") (term "0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "55"))
                                                         (rule "false_right" (formula "55"))
                                                         (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "applyEq" (formula "76") (term "2,0") (ifseqformula "2"))
                                                         (rule "narrowSelectType" (formula "76") (term "0") (ifseqformula "51"))
                                                         (rule "eqSymm" (formula "76"))
                                                         (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "applyEqReverse" (formula "76") (term "0") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "eqSymm" (formula "75"))
                                                         (rule "applyEq" (formula "74") (term "0") (ifseqformula "3"))
                                                         (rule "applyEqRigid" (formula "52") (term "0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "52"))
                                                         (rule "false_right" (formula "52"))
                                                         (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                         (rule "close" (formula "52") (ifseqformula "1"))
                                                      )
                                                      (branch "f_3 = MalformedData::$errCode ∧ o_3 = m_7 FALSE"
                                                         (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                         (rule "hideAuxiliaryEq" (formula "2"))
                                                         (rule "ifthenelse_split" (formula "2") (term "0"))
                                                         (branch "f_3 = MalformedData::$description ∧ o_3 = m_7 TRUE"
                                                            (rule "andLeft" (formula "2"))
                                                            (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "55"))
                                                            (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "54"))
                                                            (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "53"))
                                                            (rule "replace_known_left" (formula "56") (term "1") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "56"))
                                                            (rule "replace_known_right" (formula "57") (term "0") (ifseqformula "56"))
                                                            (builtin "One Step Simplification" (formula "57"))
                                                            (rule "false_right" (formula "57"))
                                                            (rule "applyEqRigid" (formula "55") (term "0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "55"))
                                                            (rule "false_right" (formula "55"))
                                                            (rule "applyEq" (formula "78") (term "2,0") (ifseqformula "2"))
                                                            (rule "narrowSelectType" (formula "78") (term "0") (ifseqformula "51"))
                                                            (rule "eqSymm" (formula "78"))
                                                            (rule "applyEqRigid" (formula "54") (term "0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "54"))
                                                            (rule "false_right" (formula "54"))
                                                            (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "applyEqReverse" (formula "77") (term "0") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "eqSymm" (formula "76"))
                                                            (rule "applyEq" (formula "75") (term "0") (ifseqformula "3"))
                                                            (rule "applyEq" (formula "52") (term "0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "52"))
                                                            (rule "false_right" (formula "52"))
                                                            (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                            (rule "close" (formula "53") (ifseqformula "1"))
                                                         )
                                                         (branch "f_3 = MalformedData::$description ∧ o_3 = m_7 FALSE"
                                                            (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                            (rule "hideAuxiliaryEq" (formula "2"))
                                                            (rule "ifthenelse_split" (formula "2") (term "0"))
                                                            (branch "f_3 = java.lang.Object::<initialized> ∧ o_3 = m_7 TRUE"
                                                               (rule "andLeft" (formula "2"))
                                                               (rule "applyEqReverse" (formula "81") (term "1") (ifseqformula "4"))
                                                               (rule "hideAuxiliaryEq" (formula "4"))
                                                               (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "55"))
                                                               (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "54"))
                                                               (rule "replace_known_left" (formula "56") (term "1") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "56"))
                                                               (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "53"))
                                                               (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "52"))
                                                               (rule "replace_known_right" (formula "57") (term "0") (ifseqformula "56"))
                                                               (builtin "One Step Simplification" (formula "57"))
                                                               (rule "false_right" (formula "57"))
                                                               (rule "applyEq" (formula "55") (term "0") (ifseqformula "2"))
                                                               (builtin "One Step Simplification" (formula "55"))
                                                               (rule "false_right" (formula "55"))
                                                               (rule "applyEqRigid" (formula "78") (term "2,0") (ifseqformula "2"))
                                                               (rule "narrowSelectType" (formula "78") (term "0") (ifseqformula "50"))
                                                               (rule "applyEq" (formula "77") (term "0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                               (rule "close" (formula "56") (ifseqformula "1"))
                                                            )
                                                            (branch "f_3 = java.lang.Object::<initialized> ∧ o_3 = m_7 FALSE"
                                                               (rule "close" (formula "80") (ifseqformula "2"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "CUT: result_0.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "andRight" (formula "72"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "72"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "72"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "72"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "72"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "72"))
                                                (branch "Case 1"
                                                   (rule "allRight" (formula "72") (inst "sk=i_17"))
                                                   (rule "orRight" (formula "72"))
                                                   (rule "notRight" (formula "73"))
                                                   (rule "orRight" (formula "73"))
                                                   (rule "inEqSimp_geqRight" (formula "74"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_leqRight" (formula "74"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_17"))
                                                   (rule "simplifySelectOfCreate" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "56")))
                                                   (rule "simplifySelectOfCreate" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "57")) (ifInst ""  (formula "7")))
                                                   (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "50") (ifseqformula "56"))
                                                   (rule "allLeft" (formula "24") (inst "t=i_17"))
                                                   (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                                   (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "24") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "24") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "1"))
                                                   (rule "qeq_literals" (formula "24") (term "0"))
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (rule "closeFalse" (formula "24"))
                                                )
                                                (branch "Case 2"
                                                   (rule "allRight" (formula "72") (inst "sk=i_16"))
                                                   (rule "orRight" (formula "72"))
                                                   (rule "notRight" (formula "73"))
                                                   (rule "orRight" (formula "73"))
                                                   (rule "inEqSimp_geqRight" (formula "74"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_leqRight" (formula "74"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_16"))
                                                   (rule "simplifySelectOfCreate" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "56")))
                                                   (rule "simplifySelectOfCreate" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "58")) (ifInst ""  (formula "8")))
                                                   (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "50") (ifseqformula "57"))
                                                   (rule "allLeft" (formula "25") (inst "t=i_16"))
                                                   (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "25"))
                                                   (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                                   (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "25") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "25") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "25"))
                                                   (rule "inEqSimp_contradInEq1" (formula "25") (ifseqformula "1"))
                                                   (rule "qeq_literals" (formula "25") (term "0"))
                                                   (builtin "One Step Simplification" (formula "25"))
                                                   (rule "closeFalse" (formula "25"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "72") (inst "sk=i_15"))
                                                (rule "orRight" (formula "72"))
                                                (rule "notRight" (formula "73"))
                                                (rule "orRight" (formula "73"))
                                                (rule "inEqSimp_leqRight" (formula "73"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_geqRight" (formula "74"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_15"))
                                                (rule "simplifySelectOfCreate" (formula "3"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "56")))
                                                (rule "simplifySelectOfCreate" (formula "3"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "59")) (ifInst ""  (formula "6")))
                                                (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "50") (ifseqformula "58"))
                                                (rule "allLeft" (formula "26") (inst "t=i_15"))
                                                (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "26") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "inEqSimp_contradInEq1" (formula "26") (ifseqformula "1"))
                                                (rule "andLeft" (formula "26"))
                                                (rule "inEqSimp_homoInEq1" (formula "26"))
                                                (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                                (rule "add_literals" (formula "26") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "26") (term "1,0"))
                                                (rule "add_zero_right" (formula "26") (term "0"))
                                                (rule "leq_literals" (formula "26"))
                                                (rule "closeFalse" (formula "26"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "allRight" (formula "72") (inst "sk=i_14"))
                                             (rule "orRight" (formula "72"))
                                             (rule "notRight" (formula "73"))
                                             (rule "orRight" (formula "73"))
                                             (rule "inEqSimp_leqRight" (formula "73"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_geqRight" (formula "74"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_14"))
                                             (rule "simplifySelectOfCreate" (formula "3"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "56")))
                                             (rule "simplifySelectOfCreate" (formula "3"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "60")) (ifInst ""  (formula "10")))
                                             (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "50") (ifseqformula "59"))
                                             (rule "allLeft" (formula "27") (inst "t=i_14"))
                                             (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "27") (term "0,0,1"))
                                             (rule "leq_literals" (formula "27") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "27"))
                                             (rule "qeq_literals" (formula "2") (term "0"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "allRight" (formula "72") (inst "sk=i_13"))
                                          (rule "orRight" (formula "72"))
                                          (rule "notRight" (formula "73"))
                                          (rule "orRight" (formula "73"))
                                          (rule "inEqSimp_leqRight" (formula "73"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_geqRight" (formula "74"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_13"))
                                          (rule "simplifySelectOfCreate" (formula "3"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "56")))
                                          (rule "simplifySelectOfCreate" (formula "3"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "61")) (ifInst ""  (formula "9")))
                                          (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "50") (ifseqformula "60"))
                                          (rule "allLeft" (formula "28") (inst "t=i_13"))
                                          (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "28") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "28"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0"))
                                          (rule "add_zero_right" (formula "1") (term "0"))
                                          (rule "leq_literals" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "72") (inst "sk=i_12"))
                                       (rule "orRight" (formula "72"))
                                       (rule "notRight" (formula "73"))
                                       (rule "orRight" (formula "73"))
                                       (rule "inEqSimp_leqRight" (formula "73"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_geqRight" (formula "74"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_12"))
                                       (rule "simplifySelectOfCreate" (formula "3"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "56")))
                                       (rule "simplifySelectOfCreate" (formula "3"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "62")) (ifInst ""  (formula "11")))
                                       (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "50") (ifseqformula "61"))
                                       (rule "allLeft" (formula "29") (inst "t=i_12"))
                                       (rule "replace_known_left" (formula "29") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                                       (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "29") (term "0,0,1"))
                                       (rule "leq_literals" (formula "29") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "inEqSimp_contradInEq1" (formula "29") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "29") (term "0"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "closeFalse" (formula "29"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "72") (inst "sk=f_2"))
                                    (rule "allRight" (formula "72") (inst "sk=o_2"))
                                    (rule "orRight" (formula "72"))
                                    (rule "pullOutSelect" (formula "73") (term "0") (inst "selectSK=f_2_0"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "74"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_2"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_3"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_4"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_5"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "58"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_6"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "78"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_7"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "80")))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "commute_and" (formula "7") (term "0,0"))
                                    (rule "commute_and" (formula "6") (term "0,0"))
                                    (rule "commute_and" (formula "5") (term "0,0"))
                                    (rule "commute_and" (formula "4") (term "0,0"))
                                    (rule "commute_and" (formula "3") (term "0,0"))
                                    (rule "commute_and" (formula "2") (term "0,0"))
                                    (rule "commute_and" (formula "1") (term "0,0"))
                                    (rule "ifthenelse_split" (formula "72") (term "0,0"))
                                    (branch "verif.selectvoting.system.core.Tag.BALLOTS.length ≥ 1 TRUE"
                                       (rule "replace_known_left" (formula "73") (term "0,1,1,0,0,1") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "73"))
                                       (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "1"))
                                       (rule "leq_literals" (formula "23") (term "0"))
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "true_left" (formula "23"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch " f_2 = java.lang.Object::<created> ∧ o_2 = strPool(\"Wrong tag\") TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "2")))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEq" (formula "79") (term "1,0,0,1") (ifseqformula "3"))
                                          (rule "applyEqRigid" (formula "79") (term "0,0,0") (ifseqformula "3"))
                                          (rule "eqSymm" (formula "79") (term "0,0"))
                                          (rule "replace_known_right" (formula "79") (term "0,0") (ifseqformula "78"))
                                          (builtin "One Step Simplification" (formula "79"))
                                          (rule "notRight" (formula "79"))
                                          (rule "applyEqRigid" (formula "7") (term "0,0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                          (rule "hideAuxiliaryEq" (formula "7"))
                                          (rule "applyEq" (formula "6") (term "0,1,0,0") (ifseqformula "4"))
                                          (rule "eqSymm" (formula "6") (term "1,0,0"))
                                          (rule "sortsDisjointModuloNull" (formula "6") (term "1,0,0"))
                                          (rule "eqSymm" (formula "6") (term "1,1,0,0"))
                                          (rule "replace_known_right" (formula "6") (term "1,1,0,0") (ifseqformula "78"))
                                          (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "59")))
                                          (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "applyEqRigid" (formula "78") (term "1,0") (ifseqformula "4"))
                                          (rule "applyEqRigid" (formula "6") (term "0,1,0,0") (ifseqformula "4"))
                                          (rule "eqSymm" (formula "6") (term "1,0,0"))
                                          (rule "sortsDisjointModuloNull" (formula "6") (term "1,0,0"))
                                          (rule "eqSymm" (formula "6") (term "1,1,0,0"))
                                          (rule "replace_known_right" (formula "6") (term "0,1,0,0") (ifseqformula "58"))
                                          (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "77")))
                                          (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "applyEq" (formula "6") (term "0,0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "77") (term "1") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "applyEq" (formula "5") (term "0,1,0,0") (ifseqformula "4"))
                                          (rule "eqSymm" (formula "5") (term "1,0,0"))
                                          (rule "sortsDisjointModuloNull" (formula "5") (term "1,0,0"))
                                          (rule "eqSymm" (formula "5") (term "1,1,0,0"))
                                          (rule "replace_known_right" (formula "5") (term "1,1,0,0") (ifseqformula "75"))
                                          (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "56")))
                                          (rule "applyEqReverse" (formula "76") (term "1") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "applyEqRigid" (formula "75") (term "2,0") (ifseqformula "3"))
                                          (rule "castTrueImpliesOriginalTrue" (formula "75") (ifseqformula "1"))
                                          (rule "closeTrue" (formula "75"))
                                       )
                                       (branch " f_2 = java.lang.Object::<created> ∧ o_2 = strPool(\"Wrong tag\") FALSE"
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch "f_2 = java.lang.Object::<created> ∧ o_2 = m_7 TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "replace_known_left" (formula "56") (term "0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "56"))
                                             (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                             (rule "hideAuxiliaryEq" (formula "7"))
                                             (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "applyEqReverse" (formula "80") (term "1") (ifseqformula "7"))
                                             (rule "hideAuxiliaryEq" (formula "7"))
                                             (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "78") (term "1") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "applyEq" (formula "76") (term "0,0,0") (ifseqformula "3"))
                                             (rule "replace_known_right" (formula "76") (term "0,0") (ifseqformula "56"))
                                             (builtin "One Step Simplification" (formula "76"))
                                             (rule "notRight" (formula "76"))
                                             (rule "applyEq" (formula "77") (term "2,0") (ifseqformula "3"))
                                             (rule "narrowSelectType" (formula "77") (term "0") (ifseqformula "51"))
                                             (rule "eqSymm" (formula "77"))
                                             (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "77") (term "0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "eqSymm" (formula "76"))
                                             (rule "close" (formula "76") (ifseqformula "1"))
                                          )
                                          (branch "f_2 = java.lang.Object::<created> ∧ o_2 = m_7 FALSE"
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_2 = Throwable::$cause ∧ o_2 = m_7 TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "3")))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "54"))
                                                (rule "replace_known_right" (formula "55") (term "0") (ifseqformula "54"))
                                                (builtin "One Step Simplification" (formula "55"))
                                                (rule "false_right" (formula "55"))
                                                (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEqRigid" (formula "77") (term "2,0") (ifseqformula "2"))
                                                (rule "narrowSelectType" (formula "77") (term "0") (ifseqformula "50"))
                                                (rule "eqSymm" (formula "77"))
                                                (rule "applyEq" (formula "76") (term "0,0,0") (ifseqformula "3"))
                                                (rule "replace_known_right" (formula "76") (term "0,0") (ifseqformula "56"))
                                                (builtin "One Step Simplification" (formula "76"))
                                                (rule "notRight" (formula "76"))
                                                (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "77") (term "0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "eqSymm" (formula "76"))
                                                (rule "applyEq" (formula "52") (term "0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "52"))
                                                (rule "false_right" (formula "52"))
                                                (rule "applyEq" (formula "75") (term "1,0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                (rule "close" (formula "53") (ifseqformula "1"))
                                             )
                                             (branch "f_2 = Throwable::$cause ∧ o_2 = m_7 FALSE"
                                                (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "cut_direct" (formula "79") (term "0,0"))
                                                (branch "CUT: o_2 = null TRUE"
                                                   (builtin "One Step Simplification" (formula "80"))
                                                   (rule "false_right" (formula "80"))
                                                   (rule "applyEqRigid" (formula "54") (term "0,1") (ifseqformula "1"))
                                                   (rule "eqSymm" (formula "54") (term "1"))
                                                   (rule "replace_known_right" (formula "54") (term "1") (ifseqformula "60"))
                                                   (builtin "One Step Simplification" (formula "54"))
                                                   (rule "false_right" (formula "54"))
                                                   (rule "applyEqRigid" (formula "6") (term "0,1,0,0") (ifseqformula "1"))
                                                   (rule "eqSymm" (formula "6") (term "1,0,0"))
                                                   (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "59"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "79") (term "1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                                   (rule "eqSymm" (formula "3") (term "1,0,0"))
                                                   (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "58"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "applyEqRigid" (formula "53") (term "0,1") (ifseqformula "1"))
                                                   (rule "replace_known_right" (formula "53") (term "1") (ifseqformula "76"))
                                                   (builtin "One Step Simplification" (formula "53"))
                                                   (rule "false_right" (formula "53"))
                                                   (rule "applyEq" (formula "76") (term "1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                                   (rule "eqSymm" (formula "4") (term "1,0,0"))
                                                   (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "56"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "76") (term "1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEq" (formula "51") (term "0,1") (ifseqformula "1"))
                                                   (rule "eqSymm" (formula "51") (term "1"))
                                                   (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "55"))
                                                   (builtin "One Step Simplification" (formula "51"))
                                                   (rule "false_right" (formula "51"))
                                                   (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                                   (rule "eqSymm" (formula "3") (term "1,0,0"))
                                                   (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "54"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "applyEqReverse" (formula "74") (term "1") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "eqSymm" (formula "73"))
                                                   (rule "applyEq" (formula "73") (term "1,0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "73"))
                                                   (rule "closeTrue" (formula "73"))
                                                )
                                                (branch "CUT: o_2 = null FALSE"
                                                   (builtin "One Step Simplification" (formula "80"))
                                                   (rule "notRight" (formula "80"))
                                                   (rule "ifthenelse_split" (formula "3") (term "0"))
                                                   (branch "f_2 = Throwable::$message ∧ o_2 = m_7 TRUE"
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "replace_known_left" (formula "56") (term "1") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "56"))
                                                      (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "55"))
                                                      (rule "replace_known_right" (formula "57") (term "0") (ifseqformula "56"))
                                                      (builtin "One Step Simplification" (formula "57"))
                                                      (rule "false_right" (formula "57"))
                                                      (rule "applyEq" (formula "56") (term "0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "56"))
                                                      (rule "false_right" (formula "56"))
                                                      (rule "applyEqRigid" (formula "55") (term "0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "55"))
                                                      (rule "false_right" (formula "55"))
                                                      (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "applyEq" (formula "77") (term "1,0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "77") (term "2,0") (ifseqformula "3"))
                                                      (rule "narrowSelectType" (formula "77") (term "0") (ifseqformula "51"))
                                                      (rule "eqSymm" (formula "77"))
                                                      (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "77") (term "0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "eqSymm" (formula "76"))
                                                      (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                      (rule "close" (formula "53") (ifseqformula "1"))
                                                   )
                                                   (branch "f_2 = Throwable::$message ∧ o_2 = m_7 FALSE"
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "ifthenelse_split" (formula "3") (term "0"))
                                                      (branch "f_2 = MalformedData::$errCode ∧ o_2 = m_7 TRUE"
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "54"))
                                                         (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "55"))
                                                         (rule "replace_known_left" (formula "56") (term "1") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "56"))
                                                         (rule "replace_known_right" (formula "57") (term "0") (ifseqformula "56"))
                                                         (builtin "One Step Simplification" (formula "57"))
                                                         (rule "false_right" (formula "57"))
                                                         (rule "applyEqRigid" (formula "55") (term "0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "55"))
                                                         (rule "false_right" (formula "55"))
                                                         (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "applyEqReverse" (formula "80") (term "1") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "applyEq" (formula "78") (term "0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                         (rule "close" (formula "56") (ifseqformula "1"))
                                                      )
                                                      (branch "f_2 = MalformedData::$errCode ∧ o_2 = m_7 FALSE"
                                                         (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "ifthenelse_split" (formula "3") (term "0"))
                                                         (branch "f_2 = MalformedData::$description ∧ o_2 = m_7 TRUE"
                                                            (rule "andLeft" (formula "3"))
                                                            (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                            (rule "hideAuxiliaryEq" (formula "5"))
                                                            (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "4"))
                                                            (builtin "One Step Simplification" (formula "55"))
                                                            (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "4"))
                                                            (builtin "One Step Simplification" (formula "53"))
                                                            (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "4"))
                                                            (builtin "One Step Simplification" (formula "54"))
                                                            (rule "replace_known_left" (formula "56") (term "1") (ifseqformula "4"))
                                                            (builtin "One Step Simplification" (formula "56"))
                                                            (rule "replace_known_right" (formula "57") (term "0") (ifseqformula "56"))
                                                            (builtin "One Step Simplification" (formula "57"))
                                                            (rule "false_right" (formula "57"))
                                                            (rule "applyEq" (formula "53") (term "0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "53"))
                                                            (rule "false_right" (formula "53"))
                                                            (rule "applyEqRigid" (formula "53") (term "0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "53"))
                                                            (rule "false_right" (formula "53"))
                                                            (rule "applyEqRigid" (formula "53") (term "0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "53"))
                                                            (rule "false_right" (formula "53"))
                                                            (rule "applyEqRigid" (formula "78") (term "2,0") (ifseqformula "3"))
                                                            (rule "narrowSelectType" (formula "78") (term "0") (ifseqformula "51"))
                                                            (rule "eqSymm" (formula "78"))
                                                            (rule "applyEqRigid" (formula "53") (term "0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "53"))
                                                            (rule "false_right" (formula "53"))
                                                            (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "applyEqReverse" (formula "77") (term "0") (ifseqformula "5"))
                                                            (rule "hideAuxiliaryEq" (formula "5"))
                                                            (rule "eqSymm" (formula "76"))
                                                            (rule "applyEq" (formula "75") (term "0") (ifseqformula "4"))
                                                            (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                            (rule "close" (formula "53") (ifseqformula "1"))
                                                         )
                                                         (branch "f_2 = MalformedData::$description ∧ o_2 = m_7 FALSE"
                                                            (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "ifthenelse_split" (formula "3") (term "0"))
                                                            (branch "f_2 = java.lang.Object::<initialized> ∧ o_2 = m_7 TRUE"
                                                               (rule "andLeft" (formula "3"))
                                                               (rule "applyEqReverse" (formula "83") (term "1") (ifseqformula "5"))
                                                               (rule "hideAuxiliaryEq" (formula "5"))
                                                               (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "55"))
                                                               (rule "replace_known_left" (formula "56") (term "1") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "56"))
                                                               (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "53"))
                                                               (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "52"))
                                                               (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "54"))
                                                               (rule "replace_known_right" (formula "57") (term "0") (ifseqformula "56"))
                                                               (builtin "One Step Simplification" (formula "57"))
                                                               (rule "false_right" (formula "57"))
                                                               (rule "applyEqRigid" (formula "55") (term "0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "55"))
                                                               (rule "false_right" (formula "55"))
                                                               (rule "applyEq" (formula "55") (term "0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "55"))
                                                               (rule "false_right" (formula "55"))
                                                               (rule "applyEq" (formula "52") (term "0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "52"))
                                                               (rule "false_right" (formula "52"))
                                                               (rule "applyEqRigid" (formula "53") (term "0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "53"))
                                                               (rule "false_right" (formula "53"))
                                                               (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                               (rule "close" (formula "54") (ifseqformula "1"))
                                                            )
                                                            (branch "f_2 = java.lang.Object::<initialized> ∧ o_2 = m_7 FALSE"
                                                               (rule "close" (formula "82") (ifseqformula "3"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch "verif.selectvoting.system.core.Tag.BALLOTS.length ≥ 1 FALSE"
                                       (rule "eqSymm" (formula "73") (term "0"))
                                       (rule "replace_known_right" (formula "73") (term "0,1,1,0,0,1") (ifseqformula "72"))
                                       (builtin "One Step Simplification" (formula "73"))
                                       (rule "inEqSimp_geqRight" (formula "72"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_contradEq7" (formula "73") (term "0") (ifseqformula "40"))
                                       (rule "times_zero_1" (formula "73") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "73") (term "0,0,0"))
                                       (rule "leq_literals" (formula "73") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "73"))
                                       (rule "false_right" (formula "73"))
                                       (rule "inEqSimp_antiSymm" (formula "23") (ifseqformula "1"))
                                       (rule "applyEq" (formula "24") (term "0") (ifseqformula "23"))
                                       (rule "qeq_literals" (formula "24"))
                                       (rule "true_left" (formula "24"))
                                       (rule "applyEq" (formula "1") (term "0") (ifseqformula "23"))
                                       (rule "leq_literals" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch " f_2 = java.lang.Object::<created> ∧ o_2 = strPool(\"Wrong tag\") TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "1")))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "applyEqRigid" (formula "7") (term "0,0,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "applyEqReverse" (formula "79") (term "1") (ifseqformula "7"))
                                          (rule "hideAuxiliaryEq" (formula "7"))
                                          (rule "applyEq" (formula "5") (term "0,0,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "applyEqRigid" (formula "4") (term "0,1,0,0") (ifseqformula "2"))
                                          (rule "eqSymm" (formula "4") (term "1,0,0"))
                                          (rule "sortsDisjointModuloNull" (formula "4") (term "1,0,0"))
                                          (rule "eqSymm" (formula "4") (term "1,1,0,0"))
                                          (rule "replace_known_right" (formula "4") (term "1,1,0,0") (ifseqformula "75"))
                                          (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "57")))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEq" (formula "76") (term "2,0") (ifseqformula "1"))
                                          (rule "narrowSelectType" (formula "76") (term "0") (ifseqformula "51"))
                                          (rule "eqSymm" (formula "76"))
                                          (rule "applyEqRigid" (formula "4") (term "0,1,0,0") (ifseqformula "2"))
                                          (rule "eqSymm" (formula "4") (term "1,0,0"))
                                          (rule "sortsDisjointModuloNull" (formula "4") (term "1,0,0"))
                                          (rule "eqSymm" (formula "4") (term "1,1,0,0"))
                                          (rule "replace_known_right" (formula "4") (term "1,1,0,0") (ifseqformula "74"))
                                          (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "56")))
                                          (rule "applyEqReverse" (formula "76") (term "0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEq" (formula "74") (term "0,0,0") (ifseqformula "2"))
                                          (rule "eqSymm" (formula "74") (term "0,0"))
                                          (rule "replace_known_right" (formula "74") (term "0,0") (ifseqformula "73"))
                                          (builtin "One Step Simplification" (formula "74"))
                                          (rule "notRight" (formula "74"))
                                          (rule "applyEq" (formula "4") (term "0,0,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "75") (term "0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "eqSymm" (formula "74"))
                                          (rule "close" (formula "74") (ifseqformula "1"))
                                       )
                                       (branch " f_2 = java.lang.Object::<created> ∧ o_2 = strPool(\"Wrong tag\") FALSE"
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "cut_direct" (formula "78") (term "0,0"))
                                          (branch "CUT: o_2 = null TRUE"
                                             (builtin "One Step Simplification" (formula "79"))
                                             (rule "false_right" (formula "79"))
                                             (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "2") (term "1,0,0"))
                                             (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "60"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "applyEq" (formula "6") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "6") (term "1,0,0"))
                                             (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "59"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "applyEqReverse" (formula "78") (term "1") (ifseqformula "6"))
                                             (rule "hideAuxiliaryEq" (formula "6"))
                                             (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "3") (term "1,0,0"))
                                             (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "58"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "applyEqRigid" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "4") (term "1,0,0"))
                                             (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "57"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "76") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "3") (term "1,0,0"))
                                             (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "56"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "75") (term "1") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "applyEqRigid" (formula "74") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "51") (term "0,1") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "51") (term "1") (ifseqformula "73"))
                                             (builtin "One Step Simplification" (formula "51"))
                                             (rule "false_right" (formula "51"))
                                             (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "2") (term "1,0,0"))
                                             (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "54"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "73") (term "1") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "eqSymm" (formula "72"))
                                             (rule "applyEq" (formula "72") (term "1,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "72"))
                                             (rule "closeTrue" (formula "72"))
                                          )
                                          (branch "CUT: o_2 = null FALSE"
                                             (builtin "One Step Simplification" (formula "79"))
                                             (rule "notRight" (formula "79"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "f_2 = java.lang.Object::<created> ∧ o_2 = m_7 TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "replace_known_left" (formula "57") (term "0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "57"))
                                                (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                (rule "hideAuxiliaryEq" (formula "7"))
                                                (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEq" (formula "54") (term "0") (ifseqformula "3"))
                                                (rule "sortsDisjointModuloNull" (formula "54"))
                                                (rule "eqSymm" (formula "54") (term "1"))
                                                (rule "replace_known_right" (formula "54") (term "1") (ifseqformula "76"))
                                                (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "58")))
                                                (rule "false_right" (formula "54"))
                                                (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "77") (term "1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "close" (formula "54") (ifseqformula "1"))
                                             )
                                             (branch "f_2 = java.lang.Object::<created> ∧ o_2 = m_7 FALSE"
                                                (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "ifthenelse_split" (formula "2") (term "0"))
                                                (branch "f_2 = Throwable::$cause ∧ o_2 = m_7 TRUE"
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "3")))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "55"))
                                                   (rule "replace_known_right" (formula "56") (term "0") (ifseqformula "55"))
                                                   (builtin "One Step Simplification" (formula "56"))
                                                   (rule "false_right" (formula "56"))
                                                   (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "applyEq" (formula "77") (term "1,0") (ifseqformula "3"))
                                                   (rule "applyEqRigid" (formula "77") (term "2,0") (ifseqformula "2"))
                                                   (rule "narrowSelectType" (formula "77") (term "0") (ifseqformula "51"))
                                                   (rule "eqSymm" (formula "77"))
                                                   (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "77") (term "0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "eqSymm" (formula "76"))
                                                   (rule "applyEq" (formula "52") (term "0") (ifseqformula "2"))
                                                   (builtin "One Step Simplification" (formula "52"))
                                                   (rule "false_right" (formula "52"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                   (rule "close" (formula "53") (ifseqformula "1"))
                                                )
                                                (branch "f_2 = Throwable::$cause ∧ o_2 = m_7 FALSE"
                                                   (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "ifthenelse_split" (formula "2") (term "0"))
                                                   (branch "f_2 = Throwable::$message ∧ o_2 = m_7 TRUE"
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "55"))
                                                      (rule "replace_known_left" (formula "56") (term "1") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "56"))
                                                      (rule "replace_known_right" (formula "57") (term "0") (ifseqformula "56"))
                                                      (builtin "One Step Simplification" (formula "57"))
                                                      (rule "false_right" (formula "57"))
                                                      (rule "applyEqRigid" (formula "55") (term "0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "55"))
                                                      (rule "false_right" (formula "55"))
                                                      (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                      (rule "close" (formula "56") (ifseqformula "1"))
                                                   )
                                                   (branch "f_2 = Throwable::$message ∧ o_2 = m_7 FALSE"
                                                      (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "ifthenelse_split" (formula "2") (term "0"))
                                                      (branch "f_2 = MalformedData::$errCode ∧ o_2 = m_7 TRUE"
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "replace_known_left" (formula "56") (term "1") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "56"))
                                                         (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "54"))
                                                         (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "55"))
                                                         (rule "replace_known_right" (formula "57") (term "0") (ifseqformula "56"))
                                                         (builtin "One Step Simplification" (formula "57"))
                                                         (rule "false_right" (formula "57"))
                                                         (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "applyEq" (formula "55") (term "0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "55"))
                                                         (rule "false_right" (formula "55"))
                                                         (rule "applyEqRigid" (formula "54") (term "0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "54"))
                                                         (rule "false_right" (formula "54"))
                                                         (rule "applyEqRigid" (formula "53") (term "0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "53"))
                                                         (rule "false_right" (formula "53"))
                                                         (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "applyEqReverse" (formula "76") (term "1") (ifseqformula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                         (rule "close" (formula "53") (ifseqformula "1"))
                                                      )
                                                      (branch "f_2 = MalformedData::$errCode ∧ o_2 = m_7 FALSE"
                                                         (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                         (rule "hideAuxiliaryEq" (formula "2"))
                                                         (rule "ifthenelse_split" (formula "2") (term "0"))
                                                         (branch "f_2 = MalformedData::$description ∧ o_2 = m_7 TRUE"
                                                            (rule "andLeft" (formula "2"))
                                                            (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "54"))
                                                            (rule "replace_known_left" (formula "56") (term "1") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "56"))
                                                            (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "53"))
                                                            (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "55"))
                                                            (rule "replace_known_right" (formula "57") (term "0") (ifseqformula "56"))
                                                            (builtin "One Step Simplification" (formula "57"))
                                                            (rule "false_right" (formula "57"))
                                                            (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "applyEqReverse" (formula "80") (term "1") (ifseqformula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "4"))
                                                            (rule "applyEq" (formula "52") (term "0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "52"))
                                                            (rule "false_right" (formula "52"))
                                                            (rule "applyEqRigid" (formula "54") (term "0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "54"))
                                                            (rule "false_right" (formula "54"))
                                                            (rule "applyEq" (formula "76") (term "0") (ifseqformula "3"))
                                                            (rule "applyEq" (formula "52") (term "0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "52"))
                                                            (rule "false_right" (formula "52"))
                                                            (rule "applyEqRigid" (formula "52") (term "0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "52"))
                                                            (rule "false_right" (formula "52"))
                                                            (rule "applyEq" (formula "74") (term "2,0") (ifseqformula "2"))
                                                            (rule "narrowSelectType" (formula "74") (term "0") (ifseqformula "50"))
                                                            (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                            (rule "close" (formula "53") (ifseqformula "1"))
                                                         )
                                                         (branch "f_2 = MalformedData::$description ∧ o_2 = m_7 FALSE"
                                                            (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                            (rule "hideAuxiliaryEq" (formula "2"))
                                                            (rule "ifthenelse_split" (formula "2") (term "0"))
                                                            (branch "f_2 = java.lang.Object::<initialized> ∧ o_2 = m_7 TRUE"
                                                               (rule "andLeft" (formula "2"))
                                                               (rule "applyEqReverse" (formula "82") (term "1") (ifseqformula "4"))
                                                               (rule "hideAuxiliaryEq" (formula "4"))
                                                               (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "52"))
                                                               (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "55"))
                                                               (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "53"))
                                                               (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "54"))
                                                               (rule "replace_known_left" (formula "56") (term "1") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "56"))
                                                               (rule "replace_known_right" (formula "57") (term "0") (ifseqformula "56"))
                                                               (builtin "One Step Simplification" (formula "57"))
                                                               (rule "false_right" (formula "57"))
                                                               (rule "applyEq" (formula "52") (term "0") (ifseqformula "2"))
                                                               (builtin "One Step Simplification" (formula "52"))
                                                               (rule "false_right" (formula "52"))
                                                               (rule "applyEq" (formula "79") (term "2,0") (ifseqformula "2"))
                                                               (rule "narrowSelectType" (formula "79") (term "0") (ifseqformula "50"))
                                                               (rule "applyEq" (formula "54") (term "0") (ifseqformula "2"))
                                                               (builtin "One Step Simplification" (formula "54"))
                                                               (rule "false_right" (formula "54"))
                                                               (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                               (rule "close" (formula "56") (ifseqformula "1"))
                                                            )
                                                            (branch "f_2 = java.lang.Object::<initialized> ∧ o_2 = m_7 FALSE"
                                                               (rule "close" (formula "81") (ifseqformula "2"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                           (branch "result_0.length ≥ 1 FALSE"
                              (rule "replace_known_right" (formula "34") (term "0,1,1,0") (ifseqformula "50"))
                              (builtin "One Step Simplification" (formula "34"))
                              (rule "replace_known_right" (formula "35") (term "0,1,1,0") (ifseqformula "50"))
                              (builtin "One Step Simplification" (formula "35"))
                              (rule "replace_known_right" (formula "66") (term "0,1,0") (ifseqformula "50"))
                              (builtin "One Step Simplification" (formula "66"))
                              (rule "inEqSimp_geqRight" (formula "50"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_antiSymm" (formula "33") (ifseqformula "1"))
                              (rule "applyEq" (formula "36") (term "1,1,0,0") (ifseqformula "33"))
                              (builtin "One Step Simplification" (formula "36"))
                              (rule "applyEq" (formula "37") (term "1,1,1,0,0") (ifseqformula "33"))
                              (rule "add_zero_right" (formula "37") (term "1,1,0,0"))
                              (builtin "One Step Simplification" (formula "37"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "33"))
                              (rule "leq_literals" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "applyEq" (formula "33") (term "0") (ifseqformula "32"))
                              (rule "qeq_literals" (formula "33"))
                              (rule "true_left" (formula "33"))
                              (rule "applyEq" (formula "65") (term "1,1,1,0,1,1,0,1") (ifseqformula "32"))
                              (rule "add_literals" (formula "65") (term "1,1,0,1,1,0,1"))
                              (rule "inEqSimp_notGeq" (formula "65") (term "0,0"))
                              (rule "mul_literals" (formula "65") (term "1,0,0,0,0"))
                              (rule "add_literals" (formula "65") (term "0,0,0,0"))
                              (rule "add_zero_left" (formula "65") (term "0,0,0"))
                              (rule "inEqSimp_or_tautInEq1" (formula "34") (term "0"))
                              (rule "add_literals" (formula "34") (term "1,1,0"))
                              (rule "qeq_literals" (formula "34") (term "1,0"))
                              (builtin "One Step Simplification" (formula "34"))
                              (rule "true_left" (formula "34"))
                              (rule "inEqSimp_or_tautInEq1" (formula "34") (term "0"))
                              (rule "add_literals" (formula "34") (term "1,1,0"))
                              (rule "qeq_literals" (formula "34") (term "1,0"))
                              (builtin "One Step Simplification" (formula "34"))
                              (rule "true_left" (formula "34"))
                              (rule "cut_direct" (formula "30") (term "0"))
                              (branch "CUT: result_0.<created> = TRUE TRUE"
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "true_left" (formula "31"))
                                 (rule "andRight" (formula "70"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "70"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "70"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "70"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "70"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "70"))
                                                (branch "Case 1"
                                                   (rule "allRight" (formula "70") (inst "sk=i_11"))
                                                   (rule "orRight" (formula "70"))
                                                   (rule "orRight" (formula "70"))
                                                   (rule "notRight" (formula "72"))
                                                   (rule "inEqSimp_geqRight" (formula "72"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_leqRight" (formula "72"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_11"))
                                                   (rule "simplifySelectOfCreate" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "54")))
                                                   (rule "simplifySelectOfCreate" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "55")) (ifInst ""  (formula "7")))
                                                   (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "49") (ifseqformula "54"))
                                                   (rule "ifthenelse_split" (formula "66") (term "1,1,0,0,1"))
                                                   (branch "verif.selectvoting.system.core.Tag.BALLOTS.length ≥ 1 TRUE"
                                                      (rule "inEqSimp_contradEq7" (formula "67") (term "1,0") (ifseqformula "1"))
                                                      (rule "times_zero_1" (formula "67") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "67") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "67") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "67"))
                                                      (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "1"))
                                                      (rule "leq_literals" (formula "19") (term "0"))
                                                      (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "inEqSimp_contradInEq1" (formula "66") (term "0") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "66") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "66"))
                                                      (rule "false_right" (formula "66"))
                                                      (rule "allLeft" (formula "24") (inst "t=i_11"))
                                                      (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "24"))
                                                      (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                                      (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "24") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "24") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "24"))
                                                      (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "24"))
                                                      (rule "qeq_literals" (formula "2") (term "0"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "closeFalse" (formula "2"))
                                                   )
                                                   (branch "verif.selectvoting.system.core.Tag.BALLOTS.length ≥ 1 FALSE"
                                                      (rule "inEqSimp_geqRight" (formula "66"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "replace_known_left" (formula "67") (term "0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "67"))
                                                      (rule "allRight" (formula "67") (inst "sk=iv_13"))
                                                      (rule "orRight" (formula "67"))
                                                      (rule "orRight" (formula "67"))
                                                      (rule "replace_known_right" (formula "69") (term "0,0,1") (ifseqformula "68"))
                                                      (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "68")) (ifInst ""  (formula "67")))
                                                      (rule "closeTrue" (formula "69"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "allRight" (formula "70") (inst "sk=i_10"))
                                                   (rule "orRight" (formula "70"))
                                                   (rule "orRight" (formula "70"))
                                                   (rule "notRight" (formula "72"))
                                                   (rule "inEqSimp_geqRight" (formula "72"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_leqRight" (formula "72"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_10"))
                                                   (rule "simplifySelectOfCreate" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "54")))
                                                   (rule "simplifySelectOfCreate" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "56")) (ifInst ""  (formula "8")))
                                                   (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "49") (ifseqformula "55"))
                                                   (rule "ifthenelse_split" (formula "66") (term "1,1,0,0,1"))
                                                   (branch "verif.selectvoting.system.core.Tag.BALLOTS.length ≥ 1 TRUE"
                                                      (rule "inEqSimp_contradEq7" (formula "67") (term "1,0") (ifseqformula "1"))
                                                      (rule "times_zero_1" (formula "67") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "67") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "67") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "67"))
                                                      (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "1"))
                                                      (rule "leq_literals" (formula "19") (term "0"))
                                                      (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "inEqSimp_contradInEq1" (formula "66") (term "0") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "66") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "66"))
                                                      (rule "false_right" (formula "66"))
                                                      (rule "allLeft" (formula "25") (inst "t=i_10"))
                                                      (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                                      (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "25") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "25") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "25"))
                                                      (rule "qeq_literals" (formula "2") (term "0"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "closeFalse" (formula "2"))
                                                   )
                                                   (branch "verif.selectvoting.system.core.Tag.BALLOTS.length ≥ 1 FALSE"
                                                      (rule "inEqSimp_geqRight" (formula "66"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "replace_known_left" (formula "67") (term "0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "67"))
                                                      (rule "allRight" (formula "67") (inst "sk=iv_12"))
                                                      (rule "orRight" (formula "67"))
                                                      (rule "orRight" (formula "67"))
                                                      (rule "replace_known_right" (formula "69") (term "0,0,1") (ifseqformula "68"))
                                                      (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "68")) (ifInst ""  (formula "67")))
                                                      (rule "closeTrue" (formula "69"))
                                                   )
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "70") (inst "sk=i_9"))
                                                (rule "orRight" (formula "70"))
                                                (rule "orRight" (formula "70"))
                                                (rule "notRight" (formula "72"))
                                                (rule "inEqSimp_leqRight" (formula "71"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_geqRight" (formula "72"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_9"))
                                                (rule "simplifySelectOfCreate" (formula "3"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "54")))
                                                (rule "simplifySelectOfCreate" (formula "3"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "57")) (ifInst ""  (formula "6")))
                                                (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "49") (ifseqformula "56"))
                                                (rule "ifthenelse_split" (formula "66") (term "1,1,0,0,1"))
                                                (branch "verif.selectvoting.system.core.Tag.BALLOTS.length ≥ 1 TRUE"
                                                   (rule "inEqSimp_contradEq7" (formula "67") (term "1,0") (ifseqformula "1"))
                                                   (rule "times_zero_1" (formula "67") (term "1,0,0,1,0"))
                                                   (rule "add_literals" (formula "67") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "67") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "67"))
                                                   (rule "inEqSimp_contradInEq1" (formula "67") (term "0") (ifseqformula "1"))
                                                   (rule "qeq_literals" (formula "67") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "67"))
                                                   (rule "false_right" (formula "67"))
                                                   (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "1"))
                                                   (rule "leq_literals" (formula "19") (term "0"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "true_left" (formula "19"))
                                                   (rule "allLeft" (formula "26") (inst "t=i_9"))
                                                   (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "26"))
                                                   (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                                   (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "26") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "26") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "26"))
                                                   (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "26"))
                                                   (rule "qeq_literals" (formula "3") (term "0"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "closeFalse" (formula "3"))
                                                )
                                                (branch "verif.selectvoting.system.core.Tag.BALLOTS.length ≥ 1 FALSE"
                                                   (rule "inEqSimp_geqRight" (formula "66"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "replace_known_left" (formula "67") (term "0,0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "67"))
                                                   (rule "allRight" (formula "67") (inst "sk=iv_11"))
                                                   (rule "orRight" (formula "67"))
                                                   (rule "orRight" (formula "67"))
                                                   (rule "replace_known_right" (formula "69") (term "0,0,1") (ifseqformula "68"))
                                                   (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "68")) (ifInst ""  (formula "67")))
                                                   (rule "closeTrue" (formula "69"))
                                                )
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "allRight" (formula "70") (inst "sk=i_8"))
                                             (rule "orRight" (formula "70"))
                                             (rule "orRight" (formula "70"))
                                             (rule "notRight" (formula "72"))
                                             (rule "inEqSimp_geqRight" (formula "72"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_leqRight" (formula "72"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_8"))
                                             (rule "simplifySelectOfCreate" (formula "3"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "54")))
                                             (rule "simplifySelectOfCreate" (formula "3"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "58")) (ifInst ""  (formula "10")))
                                             (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "49") (ifseqformula "57"))
                                             (rule "ifthenelse_split" (formula "66") (term "1,1,0,0,1"))
                                             (branch "verif.selectvoting.system.core.Tag.BALLOTS.length ≥ 1 TRUE"
                                                (rule "inEqSimp_contradEq7" (formula "67") (term "1,0") (ifseqformula "1"))
                                                (rule "times_zero_1" (formula "67") (term "1,0,0,1,0"))
                                                (rule "add_literals" (formula "67") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "67") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "67"))
                                                (rule "inEqSimp_contradInEq1" (formula "67") (term "0") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "67") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "67"))
                                                (rule "false_right" (formula "67"))
                                                (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "1"))
                                                (rule "leq_literals" (formula "19") (term "0"))
                                                (builtin "One Step Simplification" (formula "19"))
                                                (rule "true_left" (formula "19"))
                                                (rule "allLeft" (formula "27") (inst "t=i_8"))
                                                (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "27"))
                                                (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                                (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "27") (term "0,0,1"))
                                                (rule "leq_literals" (formula "27") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "27"))
                                                (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "27"))
                                                (rule "qeq_literals" (formula "2") (term "0"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                             (branch "verif.selectvoting.system.core.Tag.BALLOTS.length ≥ 1 FALSE"
                                                (rule "inEqSimp_geqRight" (formula "66"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "replace_known_left" (formula "67") (term "0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "67"))
                                                (rule "allRight" (formula "67") (inst "sk=iv_10"))
                                                (rule "orRight" (formula "67"))
                                                (rule "orRight" (formula "67"))
                                                (rule "replace_known_right" (formula "69") (term "0,0,1") (ifseqformula "68"))
                                                (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "68")) (ifInst ""  (formula "67")))
                                                (rule "closeTrue" (formula "69"))
                                             )
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "allRight" (formula "70") (inst "sk=i_7"))
                                          (rule "orRight" (formula "70"))
                                          (rule "orRight" (formula "70"))
                                          (rule "notRight" (formula "72"))
                                          (rule "inEqSimp_geqRight" (formula "72"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "72"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_7"))
                                          (rule "simplifySelectOfCreate" (formula "3"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "54")))
                                          (rule "simplifySelectOfCreate" (formula "3"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "59")) (ifInst ""  (formula "9")))
                                          (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "49") (ifseqformula "58"))
                                          (rule "ifthenelse_split" (formula "66") (term "1,1,0,0,1"))
                                          (branch "verif.selectvoting.system.core.Tag.BALLOTS.length ≥ 1 TRUE"
                                             (rule "inEqSimp_contradEq7" (formula "67") (term "1,0") (ifseqformula "1"))
                                             (rule "times_zero_1" (formula "67") (term "1,0,0,1,0"))
                                             (rule "add_literals" (formula "67") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "67") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "67"))
                                             (rule "inEqSimp_contradInEq1" (formula "67") (term "0") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "67") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "67"))
                                             (rule "false_right" (formula "67"))
                                             (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "1"))
                                             (rule "leq_literals" (formula "19") (term "0"))
                                             (builtin "One Step Simplification" (formula "19"))
                                             (rule "true_left" (formula "19"))
                                             (rule "allLeft" (formula "28") (inst "t=i_7"))
                                             (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "4"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                                             (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "28") (term "0,0,1"))
                                             (rule "leq_literals" (formula "28") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "28"))
                                             (rule "qeq_literals" (formula "2") (term "0"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "verif.selectvoting.system.core.Tag.BALLOTS.length ≥ 1 FALSE"
                                             (rule "inEqSimp_geqRight" (formula "66"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "replace_known_left" (formula "67") (term "0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "67"))
                                             (rule "allRight" (formula "67") (inst "sk=iv_9"))
                                             (rule "orRight" (formula "67"))
                                             (rule "orRight" (formula "67"))
                                             (rule "replace_known_right" (formula "69") (term "0,0,1") (ifseqformula "68"))
                                             (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "68")) (ifInst ""  (formula "67")))
                                             (rule "closeTrue" (formula "69"))
                                          )
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "70") (inst "sk=i_6"))
                                       (rule "orRight" (formula "70"))
                                       (rule "orRight" (formula "70"))
                                       (rule "notRight" (formula "72"))
                                       (rule "inEqSimp_leqRight" (formula "71"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_geqRight" (formula "72"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_6"))
                                       (rule "simplifySelectOfCreate" (formula "3"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "54")))
                                       (rule "simplifySelectOfCreate" (formula "3"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "60")) (ifInst ""  (formula "11")))
                                       (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "49") (ifseqformula "59"))
                                       (rule "ifthenelse_split" (formula "66") (term "1,1,0,0,1"))
                                       (branch "verif.selectvoting.system.core.Tag.BALLOTS.length ≥ 1 TRUE"
                                          (rule "inEqSimp_contradEq7" (formula "67") (term "1,0") (ifseqformula "1"))
                                          (rule "times_zero_1" (formula "67") (term "1,0,0,1,0"))
                                          (rule "add_literals" (formula "67") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "67") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "67"))
                                          (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "19") (term "0"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "true_left" (formula "19"))
                                          (rule "inEqSimp_contradInEq1" (formula "66") (term "0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "66") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "66"))
                                          (rule "false_right" (formula "66"))
                                          (rule "allLeft" (formula "29") (inst "t=i_6"))
                                          (rule "replace_known_left" (formula "29") (term "0,0,0") (ifseqformula "4"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "29") (term "1") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,1"))
                                          (rule "add_literals" (formula "29") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "29") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "29") (term "0,0,1"))
                                          (rule "leq_literals" (formula "29") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "29"))
                                          (rule "qeq_literals" (formula "3") (term "0"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "closeFalse" (formula "3"))
                                       )
                                       (branch "verif.selectvoting.system.core.Tag.BALLOTS.length ≥ 1 FALSE"
                                          (rule "inEqSimp_geqRight" (formula "66"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "replace_known_left" (formula "67") (term "0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "67"))
                                          (rule "allRight" (formula "67") (inst "sk=iv_8"))
                                          (rule "orRight" (formula "67"))
                                          (rule "orRight" (formula "67"))
                                          (rule "replace_known_right" (formula "69") (term "0,0,1") (ifseqformula "68"))
                                          (builtin "One Step Simplification" (formula "69") (ifInst ""  (formula "68")) (ifInst ""  (formula "67")))
                                          (rule "closeTrue" (formula "69"))
                                       )
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "70") (inst "sk=f_1"))
                                    (rule "allRight" (formula "70") (inst "sk=o_1"))
                                    (rule "orRight" (formula "70"))
                                    (rule "pullOutSelect" (formula "71") (term "0") (inst "selectSK=f_1_0"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "72"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_2"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_3"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_4"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_5"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "56"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_6"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "76"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_7"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "78")))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "commute_and" (formula "7") (term "0,0"))
                                    (rule "commute_and" (formula "6") (term "0,0"))
                                    (rule "commute_and" (formula "5") (term "0,0"))
                                    (rule "commute_and" (formula "4") (term "0,0"))
                                    (rule "commute_and" (formula "3") (term "0,0"))
                                    (rule "commute_and" (formula "2") (term "0,0"))
                                    (rule "commute_and" (formula "1") (term "0,0"))
                                    (rule "ifthenelse_split" (formula "70") (term "1,1,0,0,1"))
                                    (branch "verif.selectvoting.system.core.Tag.BALLOTS.length ≥ 1 TRUE"
                                       (rule "inEqSimp_contradEq7" (formula "71") (term "1,0") (ifseqformula "1"))
                                       (rule "times_zero_1" (formula "71") (term "1,0,0,1,0"))
                                       (rule "add_literals" (formula "71") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "71") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "71"))
                                       (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "1"))
                                       (rule "leq_literals" (formula "23") (term "0"))
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "true_left" (formula "23"))
                                       (rule "inEqSimp_contradInEq1" (formula "70") (term "0") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "70") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "70"))
                                       (rule "false_right" (formula "70"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch " f_1 = java.lang.Object::<created> ∧ o_1 = strPool(\"Wrong tag\") TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "2")))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEq" (formula "4") (term "0,0,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEqRigid" (formula "7") (term "0,1,0,0") (ifseqformula "3"))
                                          (rule "eqSymm" (formula "7") (term "1,0,0"))
                                          (rule "sortsDisjointModuloNull" (formula "7") (term "1,0,0"))
                                          (rule "eqSymm" (formula "7") (term "1,1,0,0"))
                                          (rule "replace_known_right" (formula "7") (term "1,1,0,0") (ifseqformula "74"))
                                          (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "56")))
                                          (rule "applyEqReverse" (formula "76") (term "1") (ifseqformula "7"))
                                          (rule "hideAuxiliaryEq" (formula "7"))
                                          (rule "applyEqRigid" (formula "74") (term "1,0,0,1") (ifseqformula "3"))
                                          (rule "applyEqRigid" (formula "75") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEqRigid" (formula "6") (term "0,1,0,0") (ifseqformula "3"))
                                          (rule "eqSymm" (formula "6") (term "1,0,0"))
                                          (rule "sortsDisjointModuloNull" (formula "6") (term "1,0,0"))
                                          (rule "eqSymm" (formula "6") (term "1,1,0,0"))
                                          (rule "replace_known_right" (formula "6") (term "1,1,0,0") (ifseqformula "73"))
                                          (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "55")))
                                          (rule "applyEqReverse" (formula "75") (term "1") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "applyEq" (formula "73") (term "0,0,0") (ifseqformula "3"))
                                          (rule "eqSymm" (formula "73") (term "0,0"))
                                          (rule "replace_known_right" (formula "73") (term "0,0") (ifseqformula "72"))
                                          (builtin "One Step Simplification" (formula "73"))
                                          (rule "notRight" (formula "73"))
                                          (rule "applyEqRigid" (formula "74") (term "2,0") (ifseqformula "3"))
                                          (rule "narrowSelectType" (formula "74") (term "0") (ifseqformula "51"))
                                          (rule "eqSymm" (formula "74"))
                                          (rule "applyEq" (formula "6") (term "0,1,0,0") (ifseqformula "4"))
                                          (rule "eqSymm" (formula "6") (term "1,0,0"))
                                          (rule "sortsDisjointModuloNull" (formula "6") (term "1,0,0"))
                                          (rule "eqSymm" (formula "6") (term "1,1,0,0"))
                                          (rule "replace_known_right" (formula "6") (term "0,1,0,0") (ifseqformula "55"))
                                          (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "73")))
                                          (rule "applyEqReverse" (formula "74") (term "0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "applyEq" (formula "5") (term "0,1,0,0") (ifseqformula "4"))
                                          (rule "eqSymm" (formula "5") (term "1,0,0"))
                                          (rule "sortsDisjointModuloNull" (formula "5") (term "1,0,0"))
                                          (rule "eqSymm" (formula "5") (term "1,1,0,0"))
                                          (rule "replace_known_right" (formula "5") (term "1,1,0,0") (ifseqformula "72"))
                                          (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "54")))
                                          (rule "applyEqReverse" (formula "73") (term "0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "eqSymm" (formula "72"))
                                          (rule "close" (formula "72") (ifseqformula "1"))
                                       )
                                       (branch " f_1 = java.lang.Object::<created> ∧ o_1 = strPool(\"Wrong tag\") FALSE"
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "cut_direct" (formula "76") (term "0,0"))
                                          (branch "CUT: o_1 = null TRUE"
                                             (builtin "One Step Simplification" (formula "77"))
                                             (rule "false_right" (formula "77"))
                                             (rule "applyEqRigid" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "4") (term "1,0,0"))
                                             (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "58"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEqRigid" (formula "7") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "7") (term "1,0,0"))
                                             (rule "replace_known_right" (formula "7") (term "1,0,0") (ifseqformula "57"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "applyEqReverse" (formula "76") (term "1") (ifseqformula "7"))
                                             (rule "hideAuxiliaryEq" (formula "7"))
                                             (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "3") (term "1,0,0"))
                                             (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "56"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "applyEq" (formula "52") (term "0,1") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "52") (term "1") (ifseqformula "73"))
                                             (builtin "One Step Simplification" (formula "52"))
                                             (rule "false_right" (formula "52"))
                                             (rule "applyEqRigid" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "4") (term "1,0,0"))
                                             (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "54"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "3") (term "1,0,0"))
                                             (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "53"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "3") (term "1,0,0"))
                                             (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "52"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "71")))
                                             (rule "closeFalse" (formula "3"))
                                          )
                                          (branch "CUT: o_1 = null FALSE"
                                             (builtin "One Step Simplification" (formula "77"))
                                             (rule "notRight" (formula "77"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_1 = java.lang.Object::<created> ∧ o_1 = m_7 TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "56") (term "0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "56"))
                                                (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEq" (formula "53") (term "0") (ifseqformula "4"))
                                                (rule "sortsDisjointModuloNull" (formula "53"))
                                                (rule "eqSymm" (formula "53") (term "1"))
                                                (rule "replace_known_right" (formula "53") (term "1") (ifseqformula "74"))
                                                (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "56")))
                                                (rule "false_right" (formula "53"))
                                                (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqReverse" (formula "75") (term "1") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "74") (term "1") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "applyEq" (formula "72") (term "0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "72") (term "1,0") (ifseqformula "4"))
                                                (rule "applyEq" (formula "72") (term "2,0") (ifseqformula "3"))
                                                (rule "narrowSelectType" (formula "72") (term "0") (ifseqformula "49"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                (rule "close" (formula "51") (ifseqformula "1"))
                                             )
                                             (branch "f_1 = java.lang.Object::<created> ∧ o_1 = m_7 FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_1 = Throwable::$cause ∧ o_1 = m_7 TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "4")))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "54"))
                                                   (rule "replace_known_right" (formula "55") (term "0") (ifseqformula "54"))
                                                   (builtin "One Step Simplification" (formula "55"))
                                                   (rule "false_right" (formula "55"))
                                                   (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "75") (term "1") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEq" (formula "51") (term "0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "51"))
                                                   (rule "false_right" (formula "51"))
                                                   (rule "applyEq" (formula "73") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "73") (term "0") (ifseqformula "49"))
                                                   (rule "applyEq" (formula "72") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                   (rule "close" (formula "51") (ifseqformula "1"))
                                                )
                                                (branch "f_1 = Throwable::$cause ∧ o_1 = m_7 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "ifthenelse_split" (formula "3") (term "0"))
                                                   (branch "f_1 = Throwable::$message ∧ o_1 = m_7 TRUE"
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "55"))
                                                      (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "54"))
                                                      (rule "replace_known_right" (formula "56") (term "0") (ifseqformula "55"))
                                                      (builtin "One Step Simplification" (formula "56"))
                                                      (rule "false_right" (formula "56"))
                                                      (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "applyEqReverse" (formula "78") (term "1") (ifseqformula "7"))
                                                      (rule "hideAuxiliaryEq" (formula "7"))
                                                      (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "applyEqReverse" (formula "77") (term "1") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "applyEq" (formula "76") (term "1,0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "76") (term "2,0") (ifseqformula "3"))
                                                      (rule "narrowSelectType" (formula "76") (term "0") (ifseqformula "50"))
                                                      (rule "eqSymm" (formula "76"))
                                                      (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                      (rule "close" (formula "54") (ifseqformula "1"))
                                                   )
                                                   (branch "f_1 = Throwable::$message ∧ o_1 = m_7 FALSE"
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "ifthenelse_split" (formula "3") (term "0"))
                                                      (branch "f_1 = MalformedData::$errCode ∧ o_1 = m_7 TRUE"
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "53"))
                                                         (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "55"))
                                                         (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "54"))
                                                         (rule "replace_known_right" (formula "56") (term "0") (ifseqformula "55"))
                                                         (builtin "One Step Simplification" (formula "56"))
                                                         (rule "false_right" (formula "56"))
                                                         (rule "applyEqRigid" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "applyEqReverse" (formula "78") (term "1") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "applyEq" (formula "54") (term "0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "54"))
                                                         (rule "false_right" (formula "54"))
                                                         (rule "applyEqRigid" (formula "53") (term "0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "53"))
                                                         (rule "false_right" (formula "53"))
                                                         (rule "applyEq" (formula "52") (term "0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "52"))
                                                         (rule "false_right" (formula "52"))
                                                         (rule "applyEq" (formula "73") (term "0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "73") (term "1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                         (rule "close" (formula "52") (ifseqformula "1"))
                                                      )
                                                      (branch "f_1 = MalformedData::$errCode ∧ o_1 = m_7 FALSE"
                                                         (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "ifthenelse_split" (formula "3") (term "0"))
                                                         (branch "f_1 = MalformedData::$description ∧ o_1 = m_7 TRUE"
                                                            (rule "andLeft" (formula "3"))
                                                            (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                            (rule "hideAuxiliaryEq" (formula "5"))
                                                            (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "4"))
                                                            (builtin "One Step Simplification" (formula "52"))
                                                            (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "4"))
                                                            (builtin "One Step Simplification" (formula "54"))
                                                            (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "4"))
                                                            (builtin "One Step Simplification" (formula "53"))
                                                            (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "4"))
                                                            (builtin "One Step Simplification" (formula "55"))
                                                            (rule "replace_known_right" (formula "56") (term "0") (ifseqformula "55"))
                                                            (builtin "One Step Simplification" (formula "56"))
                                                            (rule "false_right" (formula "56"))
                                                            (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "applyEqReverse" (formula "78") (term "1") (ifseqformula "5"))
                                                            (rule "hideAuxiliaryEq" (formula "5"))
                                                            (rule "applyEqRigid" (formula "53") (term "0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "53"))
                                                            (rule "false_right" (formula "53"))
                                                            (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                            (rule "close" (formula "54") (ifseqformula "1"))
                                                         )
                                                         (branch "f_1 = MalformedData::$description ∧ o_1 = m_7 FALSE"
                                                            (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "ifthenelse_split" (formula "3") (term "0"))
                                                            (branch "f_1 = java.lang.Object::<initialized> ∧ o_1 = m_7 TRUE"
                                                               (rule "andLeft" (formula "3"))
                                                               (rule "applyEqReverse" (formula "80") (term "1") (ifseqformula "5"))
                                                               (rule "hideAuxiliaryEq" (formula "5"))
                                                               (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "51"))
                                                               (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "55"))
                                                               (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "54"))
                                                               (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "53"))
                                                               (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "52"))
                                                               (rule "replace_known_right" (formula "56") (term "0") (ifseqformula "55"))
                                                               (builtin "One Step Simplification" (formula "56"))
                                                               (rule "false_right" (formula "56"))
                                                               (rule "applyEq" (formula "54") (term "0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "54"))
                                                               (rule "false_right" (formula "54"))
                                                               (rule "applyEq" (formula "53") (term "0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "53"))
                                                               (rule "false_right" (formula "53"))
                                                               (rule "applyEqRigid" (formula "52") (term "0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "52"))
                                                               (rule "false_right" (formula "52"))
                                                               (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "51"))
                                                               (rule "false_right" (formula "51"))
                                                               (rule "applyEqRigid" (formula "74") (term "2,0") (ifseqformula "3"))
                                                               (rule "narrowSelectType" (formula "74") (term "0") (ifseqformula "49"))
                                                               (rule "applyEq" (formula "73") (term "0") (ifseqformula "4"))
                                                               (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "51"))
                                                               (rule "false_right" (formula "51"))
                                                               (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                               (rule "close" (formula "51") (ifseqformula "1"))
                                                            )
                                                            (branch "f_1 = java.lang.Object::<initialized> ∧ o_1 = m_7 FALSE"
                                                               (rule "close" (formula "79") (ifseqformula "3"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch "verif.selectvoting.system.core.Tag.BALLOTS.length ≥ 1 FALSE"
                                       (rule "inEqSimp_geqRight" (formula "70"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "replace_known_left" (formula "71") (term "0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "71"))
                                       (rule "allRight" (formula "71") (inst "sk=iv_7"))
                                       (rule "orRight" (formula "71"))
                                       (rule "orRight" (formula "71"))
                                       (rule "replace_known_right" (formula "73") (term "1,0,1") (ifseqformula "71"))
                                       (builtin "One Step Simplification" (formula "73") (ifInst ""  (formula "72")) (ifInst ""  (formula "72")))
                                       (rule "closeTrue" (formula "73"))
                                    )
                                 )
                              )
                              (branch "CUT: result_0.<created> = TRUE FALSE"
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "andRight" (formula "71"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "71"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "71"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "71"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "71"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "71"))
                                                (branch "Case 1"
                                                   (rule "allRight" (formula "71") (inst "sk=i_5"))
                                                   (rule "orRight" (formula "71"))
                                                   (rule "notRight" (formula "72"))
                                                   (rule "orRight" (formula "72"))
                                                   (rule "inEqSimp_leqRight" (formula "72"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_geqRight" (formula "73"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_5"))
                                                   (rule "simplifySelectOfCreate" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "55")))
                                                   (rule "simplifySelectOfCreate" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "56")) (ifInst ""  (formula "7")))
                                                   (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "49") (ifseqformula "55"))
                                                   (rule "ifthenelse_split" (formula "67") (term "1,1,0,0,1"))
                                                   (branch "verif.selectvoting.system.core.Tag.BALLOTS.length ≥ 1 TRUE"
                                                      (rule "inEqSimp_contradEq7" (formula "68") (term "1,0") (ifseqformula "1"))
                                                      (rule "times_zero_1" (formula "68") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "68") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "68") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "68"))
                                                      (rule "inEqSimp_contradInEq1" (formula "68") (term "0") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "68") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "68"))
                                                      (rule "false_right" (formula "68"))
                                                      (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "1"))
                                                      (rule "leq_literals" (formula "19") (term "0"))
                                                      (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "allLeft" (formula "24") (inst "t=i_5"))
                                                      (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "24"))
                                                      (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "24") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "24"))
                                                      (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "2"))
                                                      (rule "andLeft" (formula "24"))
                                                      (rule "inEqSimp_homoInEq1" (formula "24"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                                      (rule "add_literals" (formula "24") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "24") (term "1,0"))
                                                      (rule "add_zero_right" (formula "24") (term "0"))
                                                      (rule "leq_literals" (formula "24"))
                                                      (rule "closeFalse" (formula "24"))
                                                   )
                                                   (branch "verif.selectvoting.system.core.Tag.BALLOTS.length ≥ 1 FALSE"
                                                      (rule "inEqSimp_geqRight" (formula "67"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "replace_known_left" (formula "68") (term "0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "68"))
                                                      (rule "allRight" (formula "68") (inst "sk=iv_6"))
                                                      (rule "orRight" (formula "68"))
                                                      (rule "orRight" (formula "68"))
                                                      (rule "replace_known_right" (formula "70") (term "1,0,1") (ifseqformula "68"))
                                                      (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "69")) (ifInst ""  (formula "69")))
                                                      (rule "closeTrue" (formula "70"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "allRight" (formula "71") (inst "sk=i_4"))
                                                   (rule "orRight" (formula "71"))
                                                   (rule "notRight" (formula "72"))
                                                   (rule "orRight" (formula "72"))
                                                   (rule "inEqSimp_leqRight" (formula "72"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_geqRight" (formula "73"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_4"))
                                                   (rule "simplifySelectOfCreate" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "55")))
                                                   (rule "simplifySelectOfCreate" (formula "3"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "57")) (ifInst ""  (formula "8")))
                                                   (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "49") (ifseqformula "56"))
                                                   (rule "ifthenelse_split" (formula "67") (term "1,1,0,0,1"))
                                                   (branch "verif.selectvoting.system.core.Tag.BALLOTS.length ≥ 1 TRUE"
                                                      (rule "inEqSimp_contradEq7" (formula "68") (term "1,0") (ifseqformula "1"))
                                                      (rule "times_zero_1" (formula "68") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "68") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "68") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "68"))
                                                      (rule "inEqSimp_contradInEq1" (formula "68") (term "0") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "68") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "68"))
                                                      (rule "false_right" (formula "68"))
                                                      (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "1"))
                                                      (rule "leq_literals" (formula "19") (term "0"))
                                                      (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "allLeft" (formula "25") (inst "t=i_4"))
                                                      (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "25") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "inEqSimp_contradInEq1" (formula "25") (ifseqformula "2"))
                                                      (rule "andLeft" (formula "25"))
                                                      (rule "inEqSimp_homoInEq1" (formula "25"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                                                      (rule "add_literals" (formula "25") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "25") (term "1,0"))
                                                      (rule "add_zero_right" (formula "25") (term "0"))
                                                      (rule "leq_literals" (formula "25"))
                                                      (rule "closeFalse" (formula "25"))
                                                   )
                                                   (branch "verif.selectvoting.system.core.Tag.BALLOTS.length ≥ 1 FALSE"
                                                      (rule "inEqSimp_geqRight" (formula "67"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "replace_known_left" (formula "68") (term "0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "68"))
                                                      (rule "allRight" (formula "68") (inst "sk=iv_5"))
                                                      (rule "orRight" (formula "68"))
                                                      (rule "orRight" (formula "68"))
                                                      (rule "replace_known_right" (formula "70") (term "1,0,1") (ifseqformula "68"))
                                                      (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "69")) (ifInst ""  (formula "69")))
                                                      (rule "closeTrue" (formula "70"))
                                                   )
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "71") (inst "sk=i_3"))
                                                (rule "orRight" (formula "71"))
                                                (rule "notRight" (formula "72"))
                                                (rule "orRight" (formula "72"))
                                                (rule "inEqSimp_leqRight" (formula "72"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_geqRight" (formula "73"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_3"))
                                                (rule "simplifySelectOfCreate" (formula "3"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "55")))
                                                (rule "simplifySelectOfCreate" (formula "3"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                                                (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "58")) (ifInst ""  (formula "6")))
                                                (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "49") (ifseqformula "57"))
                                                (rule "ifthenelse_split" (formula "67") (term "1,1,0,0,1"))
                                                (branch "verif.selectvoting.system.core.Tag.BALLOTS.length ≥ 1 TRUE"
                                                   (rule "inEqSimp_contradEq7" (formula "68") (term "1,0") (ifseqformula "1"))
                                                   (rule "times_zero_1" (formula "68") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "68") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "68") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "68"))
                                                   (rule "inEqSimp_contradInEq1" (formula "68") (term "0") (ifseqformula "1"))
                                                   (rule "qeq_literals" (formula "68") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "68"))
                                                   (rule "false_right" (formula "68"))
                                                   (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "1"))
                                                   (rule "leq_literals" (formula "19") (term "0"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "true_left" (formula "19"))
                                                   (rule "allLeft" (formula "26") (inst "t=i_3"))
                                                   (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "26"))
                                                   (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                                   (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "26") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "26") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "26"))
                                                   (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "26"))
                                                   (rule "qeq_literals" (formula "3") (term "0"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "closeFalse" (formula "3"))
                                                )
                                                (branch "verif.selectvoting.system.core.Tag.BALLOTS.length ≥ 1 FALSE"
                                                   (rule "inEqSimp_geqRight" (formula "67"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "replace_known_left" (formula "68") (term "0,0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "68"))
                                                   (rule "allRight" (formula "68") (inst "sk=iv_4"))
                                                   (rule "orRight" (formula "68"))
                                                   (rule "orRight" (formula "68"))
                                                   (rule "replace_known_right" (formula "70") (term "1,0,1") (ifseqformula "68"))
                                                   (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "69")) (ifInst ""  (formula "69")))
                                                   (rule "closeTrue" (formula "70"))
                                                )
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "allRight" (formula "71") (inst "sk=i_2"))
                                             (rule "orRight" (formula "71"))
                                             (rule "notRight" (formula "72"))
                                             (rule "orRight" (formula "72"))
                                             (rule "inEqSimp_geqRight" (formula "73"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_leqRight" (formula "73"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_2"))
                                             (rule "simplifySelectOfCreate" (formula "3"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "55")))
                                             (rule "simplifySelectOfCreate" (formula "3"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "59")) (ifInst ""  (formula "10")))
                                             (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "49") (ifseqformula "58"))
                                             (rule "ifthenelse_split" (formula "67") (term "1,1,0,0,1"))
                                             (branch "verif.selectvoting.system.core.Tag.BALLOTS.length ≥ 1 TRUE"
                                                (rule "inEqSimp_contradEq7" (formula "68") (term "1,0") (ifseqformula "1"))
                                                (rule "times_zero_1" (formula "68") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "68") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "68") (term "0,1,0"))
                                                (builtin "One Step Simplification" (formula "68"))
                                                (rule "inEqSimp_contradInEq1" (formula "68") (term "0") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "68") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "68"))
                                                (rule "false_right" (formula "68"))
                                                (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "1"))
                                                (rule "leq_literals" (formula "19") (term "0"))
                                                (builtin "One Step Simplification" (formula "19"))
                                                (rule "true_left" (formula "19"))
                                                (rule "allLeft" (formula "27") (inst "t=i_2"))
                                                (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "27"))
                                                (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                                (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "27") (term "0,0,1"))
                                                (rule "leq_literals" (formula "27") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "27"))
                                                (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "2"))
                                                (rule "qeq_literals" (formula "27") (term "0"))
                                                (builtin "One Step Simplification" (formula "27"))
                                                (rule "closeFalse" (formula "27"))
                                             )
                                             (branch "verif.selectvoting.system.core.Tag.BALLOTS.length ≥ 1 FALSE"
                                                (rule "inEqSimp_geqRight" (formula "67"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "replace_known_left" (formula "68") (term "0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "68"))
                                                (rule "allRight" (formula "68") (inst "sk=iv_3"))
                                                (rule "orRight" (formula "68"))
                                                (rule "orRight" (formula "68"))
                                                (rule "replace_known_right" (formula "70") (term "1,0,1") (ifseqformula "68"))
                                                (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "69")) (ifInst ""  (formula "69")))
                                                (rule "closeTrue" (formula "70"))
                                             )
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "allRight" (formula "71") (inst "sk=i_1"))
                                          (rule "orRight" (formula "71"))
                                          (rule "notRight" (formula "72"))
                                          (rule "orRight" (formula "72"))
                                          (rule "inEqSimp_leqRight" (formula "72"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_geqRight" (formula "73"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_1"))
                                          (rule "simplifySelectOfCreate" (formula "3"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "55")))
                                          (rule "simplifySelectOfCreate" (formula "3"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "60")) (ifInst ""  (formula "9")))
                                          (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "49") (ifseqformula "59"))
                                          (rule "ifthenelse_split" (formula "67") (term "1,1,0,0,1"))
                                          (branch "verif.selectvoting.system.core.Tag.BALLOTS.length ≥ 1 TRUE"
                                             (rule "inEqSimp_contradEq7" (formula "68") (term "1,0") (ifseqformula "1"))
                                             (rule "times_zero_1" (formula "68") (term "1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "68") (term "0,0,1,0"))
                                             (rule "leq_literals" (formula "68") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "68"))
                                             (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "1"))
                                             (rule "leq_literals" (formula "19") (term "0"))
                                             (builtin "One Step Simplification" (formula "19"))
                                             (rule "true_left" (formula "19"))
                                             (rule "inEqSimp_contradInEq1" (formula "67") (term "0") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "67") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "67"))
                                             (rule "false_right" (formula "67"))
                                             (rule "allLeft" (formula "28") (inst "t=i_1"))
                                             (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "4"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "3"))
                                             (rule "qeq_literals" (formula "28") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "28"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "2"))
                                             (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                             (rule "add_literals" (formula "2") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0"))
                                             (rule "add_zero_right" (formula "2") (term "0"))
                                             (rule "leq_literals" (formula "2"))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "verif.selectvoting.system.core.Tag.BALLOTS.length ≥ 1 FALSE"
                                             (rule "inEqSimp_geqRight" (formula "67"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "replace_known_left" (formula "68") (term "0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "68"))
                                             (rule "allRight" (formula "68") (inst "sk=iv_2"))
                                             (rule "orRight" (formula "68"))
                                             (rule "orRight" (formula "68"))
                                             (rule "replace_known_right" (formula "70") (term "1,0,1") (ifseqformula "68"))
                                             (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "69")) (ifInst ""  (formula "69")))
                                             (rule "closeTrue" (formula "70"))
                                          )
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "71") (inst "sk=i_0"))
                                       (rule "orRight" (formula "71"))
                                       (rule "notRight" (formula "72"))
                                       (rule "orRight" (formula "72"))
                                       (rule "inEqSimp_leqRight" (formula "72"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_geqRight" (formula "73"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_0"))
                                       (rule "simplifySelectOfCreate" (formula "3"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "55")))
                                       (rule "simplifySelectOfCreate" (formula "3"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "61")) (ifInst ""  (formula "11")))
                                       (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "49") (ifseqformula "60"))
                                       (rule "ifthenelse_split" (formula "67") (term "1,1,0,0,1"))
                                       (branch "verif.selectvoting.system.core.Tag.BALLOTS.length ≥ 1 TRUE"
                                          (rule "inEqSimp_contradEq7" (formula "68") (term "1,0") (ifseqformula "1"))
                                          (rule "times_zero_1" (formula "68") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "68") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "68") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "68"))
                                          (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "19") (term "0"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "true_left" (formula "19"))
                                          (rule "inEqSimp_contradInEq1" (formula "67") (term "0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "67") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "67"))
                                          (rule "false_right" (formula "67"))
                                          (rule "allLeft" (formula "29") (inst "t=i_0"))
                                          (rule "replace_known_left" (formula "29") (term "0,0,0") (ifseqformula "4"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "inEqSimp_commuteGeq" (formula "29") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "3"))
                                          (rule "qeq_literals" (formula "29") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "inEqSimp_contradInEq1" (formula "29") (ifseqformula "2"))
                                          (rule "andLeft" (formula "29"))
                                          (rule "inEqSimp_homoInEq1" (formula "29"))
                                          (rule "polySimp_pullOutFactor1b" (formula "29") (term "0"))
                                          (rule "add_literals" (formula "29") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "29") (term "1,0"))
                                          (rule "add_zero_right" (formula "29") (term "0"))
                                          (rule "leq_literals" (formula "29"))
                                          (rule "closeFalse" (formula "29"))
                                       )
                                       (branch "verif.selectvoting.system.core.Tag.BALLOTS.length ≥ 1 FALSE"
                                          (rule "inEqSimp_geqRight" (formula "67"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "replace_known_left" (formula "68") (term "0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "68"))
                                          (rule "allRight" (formula "68") (inst "sk=iv_1"))
                                          (rule "orRight" (formula "68"))
                                          (rule "orRight" (formula "68"))
                                          (rule "replace_known_right" (formula "70") (term "1,0,1") (ifseqformula "68"))
                                          (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "69")) (ifInst ""  (formula "69")))
                                          (rule "closeTrue" (formula "70"))
                                       )
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "71") (inst "sk=f_0"))
                                    (rule "allRight" (formula "71") (inst "sk=o_0"))
                                    (rule "orRight" (formula "71"))
                                    (rule "pullOutSelect" (formula "72") (term "0") (inst "selectSK=f_0_0"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "73"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_3"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_4"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_5"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "57"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_6"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,1,0,0,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "77"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_7"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "79")))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "commute_and" (formula "7") (term "0,0"))
                                    (rule "commute_and" (formula "6") (term "0,0"))
                                    (rule "commute_and" (formula "5") (term "0,0"))
                                    (rule "commute_and" (formula "4") (term "0,0"))
                                    (rule "commute_and" (formula "3") (term "0,0"))
                                    (rule "commute_and" (formula "2") (term "0,0"))
                                    (rule "commute_and" (formula "1") (term "0,0"))
                                    (rule "ifthenelse_split" (formula "71") (term "1,1,0,0,1"))
                                    (branch "verif.selectvoting.system.core.Tag.BALLOTS.length ≥ 1 TRUE"
                                       (rule "inEqSimp_contradEq7" (formula "72") (term "1,0") (ifseqformula "1"))
                                       (rule "times_zero_1" (formula "72") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "72") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "72") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "72"))
                                       (rule "inEqSimp_contradInEq1" (formula "72") (term "0") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "72") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "72"))
                                       (rule "false_right" (formula "72"))
                                       (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "1"))
                                       (rule "leq_literals" (formula "23") (term "0"))
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "true_left" (formula "23"))
                                       (rule "ifthenelse_split" (formula "2") (term "0"))
                                       (branch " f_0 = java.lang.Object::<created> ∧ o_0 = strPool(\"Wrong tag\") TRUE"
                                          (rule "andLeft" (formula "2"))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "2")))
                                          (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEq" (formula "78") (term "2,0") (ifseqformula "2"))
                                          (rule "narrowSelectType" (formula "78") (term "0") (ifseqformula "53"))
                                          (rule "eqSymm" (formula "78"))
                                          (rule "applyEq" (formula "77") (term "1,0,0,1") (ifseqformula "3"))
                                          (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "3"))
                                          (rule "eqSymm" (formula "4") (term "1,0,0"))
                                          (rule "sortsDisjointModuloNull" (formula "4") (term "1,0,0"))
                                          (rule "eqSymm" (formula "4") (term "1,1,0,0"))
                                          (rule "replace_known_right" (formula "4") (term "1,1,0,0") (ifseqformula "76"))
                                          (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "58")))
                                          (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "applyEq" (formula "7") (term "0,0,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "applyEqReverse" (formula "77") (term "0") (ifseqformula "7"))
                                          (rule "hideAuxiliaryEq" (formula "7"))
                                          (rule "applyEqRigid" (formula "6") (term "0,0,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "76") (term "0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "applyEq" (formula "74") (term "0,0,0") (ifseqformula "3"))
                                          (rule "eqSymm" (formula "74") (term "0,0"))
                                          (rule "replace_known_right" (formula "74") (term "0,0") (ifseqformula "73"))
                                          (builtin "One Step Simplification" (formula "74"))
                                          (rule "notRight" (formula "74"))
                                          (rule "applyEqRigid" (formula "6") (term "0,1,0,0") (ifseqformula "4"))
                                          (rule "eqSymm" (formula "6") (term "1,0,0"))
                                          (rule "sortsDisjointModuloNull" (formula "6") (term "1,0,0"))
                                          (rule "eqSymm" (formula "6") (term "1,1,0,0"))
                                          (rule "replace_known_right" (formula "6") (term "0,1,0,0") (ifseqformula "56"))
                                          (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "74")))
                                          (rule "applyEqReverse" (formula "75") (term "0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "applyEq" (formula "5") (term "0,0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "74") (term "0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "eqSymm" (formula "73"))
                                          (rule "applyEqRigid" (formula "73") (term "1,0") (ifseqformula "4"))
                                          (rule "close" (formula "73") (ifseqformula "1"))
                                       )
                                       (branch " f_0 = java.lang.Object::<created> ∧ o_0 = strPool(\"Wrong tag\") FALSE"
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "cut_direct" (formula "77") (term "0,0"))
                                          (branch "CUT: o_0 = null TRUE"
                                             (builtin "One Step Simplification" (formula "78"))
                                             (rule "false_right" (formula "78"))
                                             (rule "applyEqRigid" (formula "7") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "7") (term "1,0,0"))
                                             (rule "replace_known_right" (formula "7") (term "1,0,0") (ifseqformula "59"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                             (rule "hideAuxiliaryEq" (formula "7"))
                                             (rule "applyEqRigid" (formula "5") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "5") (term "1,0,0"))
                                             (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "58"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "3") (term "1,0,0"))
                                             (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "57"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "applyEqRigid" (formula "75") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEqRigid" (formula "52") (term "0,1") (ifseqformula "1"))
                                             (rule "replace_known_right" (formula "52") (term "1") (ifseqformula "74"))
                                             (builtin "One Step Simplification" (formula "52"))
                                             (rule "false_right" (formula "52"))
                                             (rule "applyEq" (formula "5") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "5") (term "1,0,0"))
                                             (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "55"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "74") (term "1") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "applyEq" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "4") (term "1,0,0"))
                                             (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "54"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "73") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "applyEq" (formula "3") (term "0,1,0,0") (ifseqformula "1"))
                                             (rule "eqSymm" (formula "3") (term "1,0,0"))
                                             (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "53"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "72") (term "1") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "eqSymm" (formula "71"))
                                             (rule "applyEq" (formula "71") (term "1,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "71"))
                                             (rule "closeTrue" (formula "71"))
                                          )
                                          (branch "CUT: o_0 = null FALSE"
                                             (builtin "One Step Simplification" (formula "78"))
                                             (rule "notRight" (formula "78"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_0 = java.lang.Object::<created> ∧ o_0 = m_7 TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "5"))
                                                (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "replace_known_left" (formula "9") (term "1,0,0") (ifseqformula "4"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "replace_known_left" (formula "56") (term "0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "56"))
                                                (rule "applyEq" (formula "56") (term "0") (ifseqformula "4"))
                                                (rule "sortsDisjointModuloNull" (formula "56"))
                                                (rule "eqSymm" (formula "56") (term "1"))
                                                (rule "replace_known_right" (formula "56") (term "1") (ifseqformula "78"))
                                                (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "60")))
                                                (rule "false_right" (formula "56"))
                                                (rule "applyEqRigid" (formula "9") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "applyEqReverse" (formula "79") (term "1") (ifseqformula "9"))
                                                (rule "hideAuxiliaryEq" (formula "9"))
                                                (rule "applyEqRigid" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                (rule "hideAuxiliaryEq" (formula "7"))
                                                (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "applyEqReverse" (formula "77") (term "1") (ifseqformula "7"))
                                                (rule "hideAuxiliaryEq" (formula "7"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                (rule "close" (formula "54") (ifseqformula "1"))
                                             )
                                             (branch "f_0 = java.lang.Object::<created> ∧ o_0 = m_7 FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "f_0 = Throwable::$cause ∧ o_0 = m_7 TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "4")))
                                                   (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "54"))
                                                   (rule "replace_known_right" (formula "55") (term "0") (ifseqformula "54"))
                                                   (builtin "One Step Simplification" (formula "55"))
                                                   (rule "false_right" (formula "55"))
                                                   (rule "applyEqRigid" (formula "78") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectType" (formula "78") (term "0") (ifseqformula "52"))
                                                   (rule "eqSymm" (formula "78"))
                                                   (rule "applyEq" (formula "77") (term "0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "applyEqReverse" (formula "77") (term "0") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "5"))
                                                   (rule "applyEqReverse" (formula "75") (term "0") (ifseqformula "5"))
                                                   (rule "hideAuxiliaryEq" (formula "5"))
                                                   (rule "eqSymm" (formula "74"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                   (rule "close" (formula "53") (ifseqformula "1"))
                                                )
                                                (branch "f_0 = Throwable::$cause ∧ o_0 = m_7 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "ifthenelse_split" (formula "3") (term "0"))
                                                   (branch "f_0 = Throwable::$message ∧ o_0 = m_7 TRUE"
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "7"))
                                                      (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "55"))
                                                      (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "4"))
                                                      (builtin "One Step Simplification" (formula "54"))
                                                      (rule "replace_known_right" (formula "56") (term "0") (ifseqformula "55"))
                                                      (builtin "One Step Simplification" (formula "56"))
                                                      (rule "false_right" (formula "56"))
                                                      (rule "applyEq" (formula "54") (term "0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "54"))
                                                      (rule "false_right" (formula "54"))
                                                      (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "applyEqRigid" (formula "53") (term "0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "53"))
                                                      (rule "false_right" (formula "53"))
                                                      (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "75") (term "1") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "applyEq" (formula "74") (term "1,0") (ifseqformula "4"))
                                                      (rule "applyEqRigid" (formula "74") (term "2,0") (ifseqformula "3"))
                                                      (rule "narrowSelectType" (formula "74") (term "0") (ifseqformula "49"))
                                                      (rule "applyEq" (formula "73") (term "0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                      (rule "close" (formula "52") (ifseqformula "1"))
                                                   )
                                                   (branch "f_0 = Throwable::$message ∧ o_0 = m_7 FALSE"
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "ifthenelse_split" (formula "3") (term "0"))
                                                      (branch "f_0 = MalformedData::$errCode ∧ o_0 = m_7 TRUE"
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "53"))
                                                         (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "54"))
                                                         (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "55"))
                                                         (rule "replace_known_right" (formula "56") (term "0") (ifseqformula "55"))
                                                         (builtin "One Step Simplification" (formula "56"))
                                                         (rule "false_right" (formula "56"))
                                                         (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "6"))
                                                         (rule "applyEqReverse" (formula "79") (term "1") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "applyEq" (formula "52") (term "0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "52"))
                                                         (rule "false_right" (formula "52"))
                                                         (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "applyEqReverse" (formula "77") (term "1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "applyEqRigid" (formula "76") (term "2,0") (ifseqformula "3"))
                                                         (rule "narrowSelectType" (formula "76") (term "0") (ifseqformula "49"))
                                                         (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "51"))
                                                         (rule "false_right" (formula "51"))
                                                         (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                         (rule "close" (formula "53") (ifseqformula "1"))
                                                      )
                                                      (branch "f_0 = MalformedData::$errCode ∧ o_0 = m_7 FALSE"
                                                         (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "ifthenelse_split" (formula "3") (term "0"))
                                                         (branch "f_0 = MalformedData::$description ∧ o_0 = m_7 TRUE"
                                                            (rule "andLeft" (formula "3"))
                                                            (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                            (rule "hideAuxiliaryEq" (formula "5"))
                                                            (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "4"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "4"))
                                                            (builtin "One Step Simplification" (formula "52"))
                                                            (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "4"))
                                                            (builtin "One Step Simplification" (formula "53"))
                                                            (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "4"))
                                                            (builtin "One Step Simplification" (formula "55"))
                                                            (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "4"))
                                                            (builtin "One Step Simplification" (formula "54"))
                                                            (rule "replace_known_right" (formula "56") (term "0") (ifseqformula "55"))
                                                            (builtin "One Step Simplification" (formula "56"))
                                                            (rule "false_right" (formula "56"))
                                                            (rule "applyEqRigid" (formula "5") (term "0,0,0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "5"))
                                                            (rule "applyEqReverse" (formula "79") (term "1") (ifseqformula "5"))
                                                            (rule "hideAuxiliaryEq" (formula "5"))
                                                            (rule "applyEq" (formula "52") (term "0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "52"))
                                                            (rule "false_right" (formula "52"))
                                                            (rule "applyEq" (formula "52") (term "0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "52"))
                                                            (rule "false_right" (formula "52"))
                                                            (rule "applyEqRigid" (formula "52") (term "0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "52"))
                                                            (rule "false_right" (formula "52"))
                                                            (rule "applyEq" (formula "51") (term "0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "51"))
                                                            (rule "false_right" (formula "51"))
                                                            (rule "applyEq" (formula "73") (term "0") (ifseqformula "4"))
                                                            (rule "applyEq" (formula "73") (term "2,0") (ifseqformula "3"))
                                                            (rule "narrowSelectType" (formula "73") (term "0") (ifseqformula "49"))
                                                            (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                            (rule "close" (formula "52") (ifseqformula "1"))
                                                         )
                                                         (branch "f_0 = MalformedData::$description ∧ o_0 = m_7 FALSE"
                                                            (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "ifthenelse_split" (formula "3") (term "0"))
                                                            (branch "f_0 = java.lang.Object::<initialized> ∧ o_0 = m_7 TRUE"
                                                               (rule "andLeft" (formula "3"))
                                                               (rule "applyEqReverse" (formula "81") (term "1") (ifseqformula "5"))
                                                               (rule "hideAuxiliaryEq" (formula "5"))
                                                               (rule "replace_known_left" (formula "52") (term "1") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "52"))
                                                               (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "51"))
                                                               (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "53"))
                                                               (rule "replace_known_left" (formula "54") (term "1") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "54"))
                                                               (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "4"))
                                                               (builtin "One Step Simplification" (formula "55"))
                                                               (rule "replace_known_right" (formula "56") (term "0") (ifseqformula "55"))
                                                               (builtin "One Step Simplification" (formula "56"))
                                                               (rule "false_right" (formula "56"))
                                                               (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "51"))
                                                               (rule "false_right" (formula "51"))
                                                               (rule "applyEqRigid" (formula "53") (term "0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "53"))
                                                               (rule "false_right" (formula "53"))
                                                               (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "51"))
                                                               (rule "false_right" (formula "51"))
                                                               (rule "applyEq" (formula "75") (term "0") (ifseqformula "4"))
                                                               (rule "applyEq" (formula "52") (term "0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "52"))
                                                               (rule "false_right" (formula "52"))
                                                               (rule "applyEqRigid" (formula "51") (term "0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "51"))
                                                               (rule "false_right" (formula "51"))
                                                               (rule "applyEq" (formula "73") (term "2,0") (ifseqformula "3"))
                                                               (rule "narrowSelectType" (formula "73") (term "0") (ifseqformula "49"))
                                                               (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "4"))
                                                               (rule "close" (formula "52") (ifseqformula "1"))
                                                            )
                                                            (branch "f_0 = java.lang.Object::<initialized> ∧ o_0 = m_7 FALSE"
                                                               (rule "close" (formula "80") (ifseqformula "3"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch "verif.selectvoting.system.core.Tag.BALLOTS.length ≥ 1 FALSE"
                                       (rule "inEqSimp_geqRight" (formula "71"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "replace_known_left" (formula "72") (term "0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "72"))
                                       (rule "allRight" (formula "72") (inst "sk=iv_0"))
                                       (rule "orRight" (formula "72"))
                                       (rule "orRight" (formula "72"))
                                       (rule "replace_known_right" (formula "74") (term "0,0,1") (ifseqformula "73"))
                                       (builtin "One Step Simplification" (formula "74") (ifInst ""  (formula "73")) (ifInst ""  (formula "72")))
                                       (rule "closeTrue" (formula "74"))
                                    )
                                 )
                              )
                           )
                        )
                        (branch "ClassCastException (!(m_4 instanceof java.lang.Throwable))"
                           (builtin "One Step Simplification" (formula "73"))
                           (builtin "One Step Simplification" (formula "72"))
                           (rule "closeTrue" (formula "72"))
                        )
                     )
                     (branch "if m_4 instanceof java.lang.Throwable false"
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
               )
               (branch "Null Reference (m_5 = null)"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
         (branch "Exceptional Post (equal)"
            (builtin "One Step Simplification" (formula "6"))
            (builtin "One Step Simplification" (formula "4"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "andLeft" (formula "2"))
            (rule "andLeft" (formula "7"))
            (rule "andLeft" (formula "5"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "8") (term "1") (ifseqformula "5"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "6") (term "1,1,0") (ifseqformula "5"))
            (rule "andLeft" (formula "3"))
            (rule "andLeft" (formula "2"))
            (rule "andLeft" (formula "11"))
            (rule "andLeft" (formula "10"))
            (rule "andLeft" (formula "8"))
            (rule "andLeft" (formula "5"))
            (rule "notLeft" (formula "4"))
            (rule "andLeft" (formula "2"))
            (rule "notLeft" (formula "12"))
            (rule "close" (formula "15") (ifseqformula "14"))
         )
         (branch "Pre (equal)"
            (builtin "One Step Simplification" (formula "4"))
            (builtin "One Step Simplification" (formula "6"))
            (rule "andLeft" (formula "2"))
            (rule "andLeft" (formula "5"))
            (rule "wellFormedAnonEQ" (formula "8") (term "0,0,1") (ifseqformula "5"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "8") (term "1,1,1") (ifseqformula "5"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "6") (term "1,1,0") (ifseqformula "5"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "8") (term "1,1,0,1") (ifseqformula "5"))
            (rule "andLeft" (formula "2"))
            (rule "andLeft" (formula "4"))
            (rule "andLeft" (formula "8"))
            (rule "andLeft" (formula "2"))
            (rule "andLeft" (formula "6"))
            (rule "notLeft" (formula "5"))
            (rule "andLeft" (formula "9"))
            (rule "typeEqDerived" (formula "11") (term "0,1,1,1,1") (ifseqformula "9"))
            (rule "typeEqDerived" (formula "11") (term "0,0,0,1,1,1") (ifseqformula "9"))
            (rule "typeEqDerived" (formula "11") (term "0,1,0,1,1,1") (ifseqformula "9"))
            (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "9")) (ifInst ""  (formula "9")))
            (rule "andLeft" (formula "2"))
            (rule "notLeft" (formula "7"))
            (rule "andLeft" (formula "11"))
            (rule "andLeft" (formula "2"))
            (rule "andLeft" (formula "13"))
            (rule "andLeft" (formula "2"))
            (rule "notLeft" (formula "15"))
            (rule "notLeft" (formula "3"))
            (rule "eqSymm" (formula "12"))
            (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "17"))
            (builtin "One Step Simplification" (formula "5"))
            (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "15"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "replace_known_right" (formula "18") (term "0,1,0,1") (ifseqformula "15"))
            (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "15")) (ifInst ""  (formula "2")) (ifInst ""  (formula "8")) (ifInst ""  (formula "11")))
            (rule "array2seqDef" (formula "12") (term "0,0") (inst "u=u"))
            (rule "array2seqDef" (formula "12") (term "1") (inst "u=u"))
            (rule "eqSeqDef" (formula "12") (inst "iv=iv"))
            (rule "andLeft" (formula "12"))
            (rule "lenOfSeqDef" (formula "12") (term "1"))
            (rule "polySimp_elimSub" (formula "12") (term "1,1"))
            (rule "times_zero_2" (formula "12") (term "1,1,1"))
            (rule "add_zero_right" (formula "12") (term "1,1"))
            (rule "getOfSeqDef" (formula "13") (term "1,1,0"))
            (rule "castDel" (formula "13") (term "1,1,1,0"))
            (rule "castDel" (formula "13") (term "2,1,1,0"))
            (rule "add_zero_right" (formula "13") (term "0,2,1,1,1,0"))
            (rule "polySimp_elimSub" (formula "13") (term "1,1,0,1,1,0"))
            (rule "times_zero_2" (formula "13") (term "1,1,1,0,1,1,0"))
            (rule "add_zero_right" (formula "13") (term "1,1,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
            (rule "polySimp_addComm1" (formula "13") (term "0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "12") (term "0,1"))
            (rule "add_zero_right" (formula "12") (term "0,0,1"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,1,1,0"))
            (rule "apply_eq_monomials" (formula "13") (term "1,0,1,0,0") (ifseqformula "12"))
            (rule "polySimp_rightDist" (formula "13") (term "0,1,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,1,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "13") (term "1,0,1,0,0"))
            (rule "add_literals" (formula "13") (term "1,1,1,0,1,0,0"))
            (rule "times_zero_1" (formula "13") (term "1,1,0,1,0,0"))
            (rule "add_zero_right" (formula "13") (term "1,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,0,0"))
            (rule "polySimp_addComm1" (formula "13") (term "0,1,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "12") (term "0,0,1"))
            (rule "polySimp_elimOne" (formula "12") (term "0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "13") (term "1,1,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,1,1,0"))
            (rule "mul_literals" (formula "13") (term "0,1,1,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,1,1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0,1,0,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,1,0,0,1,0,0"))
            (rule "polySimp_elimOne" (formula "13") (term "0,0,0,1,0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
            (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
            (rule "pullOutSelect" (formula "19") (term "0,0,1") (inst "selectSK=verif_selectvoting_system_core_Tag_BALLOTS_7"))
            (rule "applyEq" (formula "20") (term "1,0,0,1,1") (ifseqformula "1"))
            (rule "applyEq" (formula "20") (term "0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "20") (term "1,0,1,1,1") (ifseqformula "1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "20") (term "0,0,1") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "20") (term "1,0,0,1,1") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "20") (term "0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "20") (term "1,0,1,1,1") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_right" (formula "19") (term "0,1") (ifseqformula "17"))
            (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "17")))
            (rule "orRight" (formula "19"))
            (rule "referencedObjectIsCreatedRight" (formula "19") (ifseqformula "17"))
            (rule "close" (formula "19") (ifseqformula "2"))
         )
      )
      (branch "Exceptional Post (getPayLoad)"
         (builtin "One Step Simplification" (formula "4"))
         (builtin "One Step Simplification" (formula "6"))
         (rule "andLeft" (formula "2"))
         (rule "andLeft" (formula "5"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "6") (term "1,0") (ifseqformula "5"))
         (rule "andLeft" (formula "2"))
         (rule "andLeft" (formula "4"))
         (rule "andLeft" (formula "8"))
         (rule "andLeft" (formula "2"))
         (rule "andLeft" (formula "6"))
         (rule "notLeft" (formula "5"))
         (rule "andLeft" (formula "9"))
         (rule "andLeft" (formula "11"))
         (rule "andLeft" (formula "2"))
         (rule "notLeft" (formula "7"))
         (rule "notLeft" (formula "9"))
         (rule "andLeft" (formula "2"))
         (rule "andLeft" (formula "2"))
         (rule "notLeft" (formula "3"))
         (rule "eqSymm" (formula "11") (term "0,1"))
         (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "16"))
         (builtin "One Step Simplification" (formula "5"))
         (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "14"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "true_left" (formula "11"))
         (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "13"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "andLeft" (formula "11"))
         (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "11") (ifseqformula "4"))
         (rule "andLeft" (formula "11"))
         (rule "andLeft" (formula "11"))
         (rule "notLeft" (formula "13"))
         (rule "notLeft" (formula "12"))
         (rule "andLeft" (formula "11"))
         (rule "andLeft" (formula "11"))
         (rule "notLeft" (formula "13"))
         (rule "andLeft" (formula "11"))
         (rule "notLeft" (formula "13"))
         (rule "andLeft" (formula "11"))
         (rule "andLeft" (formula "11"))
         (rule "andLeft" (formula "11"))
         (rule "andLeft" (formula "11"))
         (rule "andLeft" (formula "11"))
         (rule "andLeft" (formula "11"))
         (rule "notLeft" (formula "12"))
         (rule "notLeft" (formula "11"))
         (rule "nonNull" (formula "16") (inst "i=i"))
         (rule "sub_literals" (formula "16") (term "2,1,0,1,1"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "greater_literals" (formula "16") (term "0,1"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "andLeft" (formula "16"))
         (rule "notLeft" (formula "16"))
         (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
         (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "15") (inst "i=i"))
         (rule "sub_literals" (formula "15") (term "2,1,0,1,1"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "greater_literals" (formula "15") (term "0,1"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "andLeft" (formula "15"))
         (rule "notLeft" (formula "15"))
         (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
         (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "14") (inst "i=i"))
         (rule "greater_literals" (formula "14") (term "0,1"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "sub_literals" (formula "14") (term "2,1,0,1"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "andLeft" (formula "14"))
         (rule "notLeft" (formula "14"))
         (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
         (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "13") (inst "i=i"))
         (rule "greater_literals" (formula "13") (term "0,1"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "sub_literals" (formula "13") (term "2,1,0,1"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "andLeft" (formula "13"))
         (rule "notLeft" (formula "13"))
         (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "12") (inst "i=i"))
         (rule "sub_literals" (formula "12") (term "2,1,0,1,1"))
         (builtin "One Step Simplification" (formula "12"))
         (rule "greater_literals" (formula "12") (term "0,1"))
         (builtin "One Step Simplification" (formula "12"))
         (rule "andLeft" (formula "12"))
         (rule "notLeft" (formula "12"))
         (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
         (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "11") (inst "i=i"))
         (rule "greater_literals" (formula "11") (term "0,1"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "sub_literals" (formula "11") (term "2,1,0,1"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "andLeft" (formula "11"))
         (rule "notLeft" (formula "11"))
         (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
         (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_9"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")) (ifInst ""  (formula "4")))
         (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "pullOutSelect" (formula "28") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_9"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")) (ifInst ""  (formula "4")))
         (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_9"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")) (ifInst ""  (formula "4")))
         (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "pullOutSelect" (formula "26") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_9"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")) (ifInst ""  (formula "4")))
         (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_9"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")) (ifInst ""  (formula "4")))
         (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_unsigned_9"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")) (ifInst ""  (formula "4")))
         (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "pullOutSelect" (formula "16") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_9"))
         (rule "applyEq" (formula "24") (term "0") (ifseqformula "16"))
         (rule "applyEq" (formula "17") (term "0,1,1,1,0,0") (ifseqformula "16"))
         (rule "simplifySelectOfAnonEQ" (formula "16") (ifseqformula "9"))
         (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "31")) (ifInst ""  (formula "3")))
         (rule "applyEqReverse" (formula "17") (term "1,0,0,1,0") (ifseqformula "16"))
         (rule "applyEqReverse" (formula "24") (term "0") (ifseqformula "16"))
         (rule "applyEqReverse" (formula "17") (term "0,1,1,1,0,0") (ifseqformula "16"))
         (rule "hideAuxiliaryEq" (formula "16"))
         (rule "pullOutSelect" (formula "15") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_9"))
         (rule "applyEq" (formula "23") (term "0") (ifseqformula "15"))
         (rule "applyEq" (formula "16") (term "0,1,1,1,0,0") (ifseqformula "15"))
         (rule "simplifySelectOfAnonEQ" (formula "15") (ifseqformula "9"))
         (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "31")) (ifInst ""  (formula "3")))
         (rule "applyEqReverse" (formula "16") (term "1,0,0,1,0") (ifseqformula "15"))
         (rule "applyEqReverse" (formula "23") (term "0") (ifseqformula "15"))
         (rule "applyEqReverse" (formula "16") (term "0,1,1,1,0,0") (ifseqformula "15"))
         (rule "hideAuxiliaryEq" (formula "15"))
         (rule "pullOutSelect" (formula "14") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_9"))
         (rule "applyEq" (formula "22") (term "0") (ifseqformula "14"))
         (rule "applyEq" (formula "15") (term "0,1,1,1,0,0") (ifseqformula "14"))
         (rule "simplifySelectOfAnonEQ" (formula "14") (ifseqformula "9"))
         (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "31")) (ifInst ""  (formula "3")))
         (rule "applyEqReverse" (formula "15") (term "1,0,0,1,0") (ifseqformula "14"))
         (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "14"))
         (rule "applyEqReverse" (formula "15") (term "0,1,1,1,0,0") (ifseqformula "14"))
         (rule "hideAuxiliaryEq" (formula "14"))
         (rule "pullOutSelect" (formula "13") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_chosen_9"))
         (rule "applyEq" (formula "14") (term "0,1,1,1,0,0") (ifseqformula "13"))
         (rule "applyEq" (formula "21") (term "0") (ifseqformula "13"))
         (rule "simplifySelectOfAnonEQ" (formula "13") (ifseqformula "9"))
         (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "31")) (ifInst ""  (formula "3")))
         (rule "applyEqReverse" (formula "14") (term "1,0,0,1,0") (ifseqformula "13"))
         (rule "applyEqReverse" (formula "14") (term "0,1,1,1,0,0") (ifseqformula "13"))
         (rule "applyEqReverse" (formula "21") (term "0") (ifseqformula "13"))
         (rule "hideAuxiliaryEq" (formula "13"))
         (rule "pullOutSelect" (formula "12") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_encrypted_9"))
         (rule "applyEq" (formula "20") (term "0") (ifseqformula "12"))
         (rule "applyEq" (formula "13") (term "0,1,1,1,0,0") (ifseqformula "12"))
         (rule "simplifySelectOfAnonEQ" (formula "12") (ifseqformula "9"))
         (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "31")) (ifInst ""  (formula "3")))
         (rule "applyEqReverse" (formula "13") (term "1,0,0,1,0") (ifseqformula "12"))
         (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "12"))
         (rule "applyEqReverse" (formula "13") (term "0,1,1,1,0,0") (ifseqformula "12"))
         (rule "hideAuxiliaryEq" (formula "12"))
         (rule "pullOutSelect" (formula "11") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_9"))
         (rule "applyEq" (formula "19") (term "0") (ifseqformula "11"))
         (rule "applyEq" (formula "12") (term "0,1,1,1,0,0") (ifseqformula "11"))
         (rule "simplifySelectOfAnonEQ" (formula "11") (ifseqformula "9"))
         (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "31")) (ifInst ""  (formula "3")))
         (rule "applyEqReverse" (formula "12") (term "1,0,0,1,0") (ifseqformula "11"))
         (rule "applyEqReverse" (formula "19") (term "0") (ifseqformula "11"))
         (rule "applyEqReverse" (formula "12") (term "0,1,1,1,0,0") (ifseqformula "11"))
         (rule "hideAuxiliaryEq" (formula "11"))
         (rule "nnf_imp2or" (formula "16") (term "0"))
         (rule "nnf_imp2or" (formula "15") (term "0"))
         (rule "nnf_imp2or" (formula "14") (term "0"))
         (rule "nnf_imp2or" (formula "13") (term "0"))
         (rule "nnf_imp2or" (formula "12") (term "0"))
         (rule "nnf_imp2or" (formula "11") (term "0"))
         (rule "nnf_notAnd" (formula "16") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
         (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
         (rule "mul_literals" (formula "16") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "15") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
         (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
         (rule "mul_literals" (formula "15") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "14") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
         (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
         (rule "mul_literals" (formula "14") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "13") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
         (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
         (rule "mul_literals" (formula "13") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "12") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
         (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
         (rule "mul_literals" (formula "12") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "11") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
         (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "11") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
         (rule "mul_literals" (formula "11") (term "1,0,0,0"))
         (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "7") (ifseqformula "4"))
         (rule "andLeft" (formula "7"))
         (rule "notLeft" (formula "8"))
         (rule "andLeft" (formula "7"))
         (rule "notLeft" (formula "8"))
         (rule "andLeft" (formula "7"))
         (rule "notLeft" (formula "8"))
         (rule "andLeft" (formula "7"))
         (rule "notLeft" (formula "8"))
         (rule "andLeft" (formula "7"))
         (rule "andLeft" (formula "7"))
         (rule "andLeft" (formula "7"))
         (rule "andLeft" (formula "7"))
         (rule "andLeft" (formula "7"))
         (rule "andLeft" (formula "7"))
         (rule "andLeft" (formula "7"))
         (rule "notLeft" (formula "8"))
         (rule "notLeft" (formula "7"))
         (rule "nonNull" (formula "12") (inst "i=i"))
         (rule "sub_literals" (formula "12") (term "2,1,0,1,1"))
         (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "28")))
         (rule "greater_literals" (formula "12") (term "0"))
         (builtin "One Step Simplification" (formula "12"))
         (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "28"))
         (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "11") (inst "i=i"))
         (rule "sub_literals" (formula "11") (term "2,1,0,1,1"))
         (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "27")))
         (rule "greater_literals" (formula "11") (term "0"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "27"))
         (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "10") (inst "i=i"))
         (rule "sub_literals" (formula "10") (term "2,1,0,1,1"))
         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "26")))
         (rule "greater_literals" (formula "10") (term "0"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "26"))
         (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "9") (inst "i=i"))
         (rule "greater_literals" (formula "9") (term "0,1"))
         (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "25")))
         (rule "sub_literals" (formula "9") (term "2,1,0"))
         (builtin "One Step Simplification" (formula "9"))
         (rule "narrowSelectArrayType" (formula "9") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "25"))
         (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "8") (inst "i=i"))
         (rule "greater_literals" (formula "8") (term "0,1"))
         (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "24")))
         (rule "sub_literals" (formula "8") (term "2,1,0"))
         (builtin "One Step Simplification" (formula "8"))
         (rule "narrowSelectArrayType" (formula "8") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "24"))
         (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "7") (inst "i=i"))
         (rule "sub_literals" (formula "7") (term "2,1,0,1,1"))
         (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "23")))
         (rule "greater_literals" (formula "7") (term "0"))
         (builtin "One Step Simplification" (formula "7"))
         (rule "narrowSelectArrayType" (formula "7") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "23"))
         (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
         (rule "nnf_imp2or" (formula "12") (term "0"))
         (rule "nnf_imp2or" (formula "11") (term "0"))
         (rule "nnf_imp2or" (formula "10") (term "0"))
         (rule "methodCallParamThrow" (formula "39") (term "1"))
         (builtin "One Step Simplification" (formula "39"))
         (rule "nnf_imp2or" (formula "9") (term "0"))
         (rule "nnf_imp2or" (formula "8") (term "0"))
         (rule "nnf_imp2or" (formula "7") (term "0"))
         (rule "nnf_notAnd" (formula "12") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
         (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
         (rule "mul_literals" (formula "12") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "11") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
         (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "11") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
         (rule "mul_literals" (formula "11") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "10") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
         (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "10") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
         (rule "mul_literals" (formula "10") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "9") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
         (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
         (rule "mul_literals" (formula "9") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "8") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
         (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
         (rule "mul_literals" (formula "8") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "7") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
         (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "7") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
         (rule "mul_literals" (formula "7") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
         (rule "commute_or_2" (formula "21") (term "0"))
         (rule "commute_or_2" (formula "20") (term "0"))
         (rule "commute_or_2" (formula "19") (term "0"))
         (rule "commute_or_2" (formula "18") (term "0"))
         (rule "commute_or_2" (formula "17") (term "0"))
         (rule "commute_or_2" (formula "16") (term "0"))
         (rule "commute_or_2" (formula "12") (term "0"))
         (rule "commute_or_2" (formula "11") (term "0"))
         (rule "commute_or_2" (formula "10") (term "0"))
         (rule "commute_or_2" (formula "9") (term "0"))
         (rule "commute_or_2" (formula "8") (term "0"))
         (rule "commute_or_2" (formula "7") (term "0"))
         (rule "commute_or" (formula "21") (term "0,0"))
         (rule "commute_or" (formula "20") (term "0,0"))
         (rule "commute_or" (formula "19") (term "0,0"))
         (rule "commute_or" (formula "18") (term "0,0"))
         (rule "commute_or" (formula "17") (term "0,0"))
         (rule "commute_or" (formula "16") (term "0,0"))
         (rule "commute_or" (formula "12") (term "0,0"))
         (rule "commute_or" (formula "11") (term "0,0"))
         (rule "commute_or" (formula "10") (term "0,0"))
         (rule "commute_or" (formula "9") (term "0,0"))
         (rule "commute_or" (formula "8") (term "0,0"))
         (rule "commute_or" (formula "7") (term "0,0"))
         (rule "tryCatchThrow" (formula "39") (term "1"))
         (rule "ifElseUnfold" (formula "39") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "39") (term "1") (newnames "x_8"))
         (rule "equality_comparison_simple" (formula "39") (term "1"))
         (builtin "One Step Simplification" (formula "39"))
         (rule "replace_known_right" (formula "39") (term "0,0,1,0") (ifseqformula "36"))
         (builtin "One Step Simplification" (formula "39"))
         (rule "ifElseSplit" (formula "39"))
         (branch "if x_8 true"
            (builtin "One Step Simplification" (formula "40"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch "if x_8 false"
            (builtin "One Step Simplification" (formula "40"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "ifElseSplit" (formula "39"))
            (branch "if exc_0 instanceof java.lang.Throwable true"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
               (rule "true_left" (formula "1"))
               (rule "variableDeclaration" (formula "39") (term "1") (newnames "e_2"))
               (rule "reference_type_cast" (formula "39") (term "1"))
               (branch "Normal Execution (exc_0 instanceof java.lang.Throwable)"
                  (builtin "One Step Simplification" (formula "40"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "assignment" (formula "39") (term "1"))
                  (builtin "One Step Simplification" (formula "39"))
                  (rule "emptyModality" (formula "39") (term "1"))
                  (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "36")) (ifInst ""  (formula "36")) (ifInst ""  (formula "22")))
                  (rule "eqSymm" (formula "39") (term "1,0,0,1"))
                  (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "39") (term "0") (ifseqformula "4"))
                  (rule "replaceKnownSelect_taclet110_0" (formula "39") (term "0,0,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110_1" (formula "39") (term "0,0,1,0"))
                  (rule "replaceKnownSelect_taclet110_2" (formula "39") (term "0,0,1,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110_3" (formula "39") (term "0,0,1,0,0"))
                  (rule "replaceKnownSelect_taclet110_4" (formula "39") (term "0,0,1,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110_5" (formula "39") (term "0,0,1,0,0,0"))
                  (rule "replaceKnownSelect_taclet110_6" (formula "39") (term "0,0,1,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet110_12" (formula "39") (term "1,1,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110_7" (formula "39") (term "0,0,1,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110_13" (formula "39") (term "1,1,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet110_14" (formula "39") (term "1,1,0,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet110_16" (formula "39") (term "1,1,0,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110_15" (formula "39") (term "1,1,0,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet110_18" (formula "39") (term "1,1,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110_17" (formula "39") (term "1,1,0,0,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet110_20" (formula "39") (term "1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110_19" (formula "39") (term "1,1,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet110_22" (formula "39") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110_21" (formula "39") (term "1,1,0,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110_23" (formula "39") (term "1,1,0,0,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet110_8" (formula "39") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownSelect_taclet110_10" (formula "39") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110_9" (formula "39") (term "0,0,1,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet110_11" (formula "39") (term "0,0,0,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "replace_known_right" (formula "39") (term "0,1,0") (ifseqformula "34"))
                  (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "29")) (ifInst ""  (formula "30")) (ifInst ""  (formula "31")) (ifInst ""  (formula "32")) (ifInst ""  (formula "33")))
                  (rule "nonNull" (formula "39") (term "1,0,0,0,0,0") (inst "i=i"))
                  (rule "greater_literals" (formula "39") (term "0,1,1,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "24")))
                  (rule "sub_literals" (formula "39") (term "2,1,0,1,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "39"))
                  (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "39") (term "0,1,1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,1,0,0,0,0,0"))
                  (rule "nonNull" (formula "39") (term "1,0,0") (inst "i=i"))
                  (rule "sub_literals" (formula "39") (term "2,1,0,1,1,1,0,0"))
                  (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "27")))
                  (rule "greater_literals" (formula "39") (term "0,1,0,0"))
                  (builtin "One Step Simplification" (formula "39"))
                  (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "39") (term "0,1,1,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,1,0,0"))
                  (rule "nonNull" (formula "39") (term "1,0,0,0") (inst "i=i"))
                  (rule "greater_literals" (formula "39") (term "0,1,1,0,0,0"))
                  (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "26")))
                  (rule "sub_literals" (formula "39") (term "2,1,0,1,0,0,0"))
                  (builtin "One Step Simplification" (formula "39"))
                  (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,1,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "39") (term "0,1,1,0,0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,1,0,0,0"))
                  (rule "nonNull" (formula "39") (term "1,0") (inst "i=i"))
                  (rule "sub_literals" (formula "39") (term "2,1,0,1,1,1,0"))
                  (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "28")))
                  (rule "greater_literals" (formula "39") (term "0,1,0"))
                  (builtin "One Step Simplification" (formula "39"))
                  (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "39") (term "0,1,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,1,0"))
                  (rule "nonNull" (formula "39") (term "1,0,0,0,0") (inst "i=i"))
                  (rule "greater_literals" (formula "39") (term "0,1,1,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "25")))
                  (rule "sub_literals" (formula "39") (term "2,1,0,1,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "39"))
                  (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,1,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,1,0,0,0,0"))
                  (rule "mul_literals" (formula "39") (term "0,1,1,0,0,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,1,0,0,0,0"))
                  (rule "nonNull" (formula "39") (term "0,0,0,0,0,0") (inst "i=i"))
                  (rule "greater_literals" (formula "39") (term "0,1,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "23")))
                  (rule "sub_literals" (formula "39") (term "2,1,0,0,0,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "39"))
                  (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,0,0,0,0,0,0"))
                  (rule "nnf_imp2or" (formula "39") (term "0,1,0"))
                  (rule "nnf_imp2or" (formula "39") (term "0,1,0,0"))
                  (rule "nnf_imp2or" (formula "39") (term "0,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "39") (term "0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,1,0"))
                  (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,1,0"))
                  (rule "add_zero_left" (formula "39") (term "0,0,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0,1,0"))
                  (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0,1,0"))
                  (rule "add_zero_right" (formula "39") (term "0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,1,0"))
                  (rule "mul_literals" (formula "39") (term "1,0,0,0,1,0"))
                  (rule "nnf_imp2or" (formula "39") (term "0,1,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "39") (term "0,0,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0,1,0,0"))
                  (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "39") (term "0,0,0,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,1,0,0"))
                  (rule "mul_literals" (formula "39") (term "1,0,0,0,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0,1,0,0"))
                  (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,1,0,0"))
                  (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "39") (term "0,0,1,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,1,0,0"))
                  (rule "nnf_imp2or" (formula "39") (term "0,1,0,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "39") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,1,0,0,0"))
                  (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,1,0,0,0"))
                  (rule "add_zero_left" (formula "39") (term "0,0,1,0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,1,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0,1,0,0,0"))
                  (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0,1,0,0,0"))
                  (rule "add_zero_right" (formula "39") (term "0,0,0,0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "39") (term "1,0,0,0,1,0,0,0"))
                  (rule "nnf_imp2or" (formula "39") (term "0,0,0,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "39") (term "0,0,1,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0,1,0,0,0,0"))
                  (rule "mul_literals" (formula "39") (term "1,0,0,0,0,0,1,0,0,0,0"))
                  (rule "add_zero_right" (formula "39") (term "0,0,0,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,1,0,0,0,0"))
                  (rule "mul_literals" (formula "39") (term "1,0,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0,1,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,1,0,0,0,0"))
                  (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,1,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,1,0,0,0,0"))
                  (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,1,0,0,0,0"))
                  (rule "add_zero_left" (formula "39") (term "0,0,1,0,0,1,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0,1,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,1,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "39") (term "0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0,1,0,0,0,0,0"))
                  (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0,1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "39") (term "0,0,0,0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "39") (term "1,0,0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,1,0,0,0,0,0"))
                  (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,1,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "39") (term "0,0,1,0,0,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,1,0,0,0,0,0"))
                  (rule "nnf_notAnd" (formula "39") (term "0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0,0,0,0,0,0,0"))
                  (rule "add_literals" (formula "39") (term "0,0,0,1,0,0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "39") (term "0,0,1,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0,0,0,0,0,0,0"))
                  (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "39") (term "0,0,0,0,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "39") (term "1,0,0,0,0,0,0,0,0,0"))
                  (rule "arrayLengthNotNegative" (formula "21") (term "1,1,0"))
                  (rule "arrayLengthIsAShort" (formula "22") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "true_left" (formula "22"))
                  (rule "arrayLengthNotNegative" (formula "20") (term "1,1,0"))
                  (rule "arrayLengthIsAShort" (formula "21") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "true_left" (formula "21"))
                  (rule "arrayLengthNotNegative" (formula "19") (term "1,1,0"))
                  (rule "arrayLengthIsAShort" (formula "20") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "true_left" (formula "20"))
                  (rule "arrayLengthIsAShort" (formula "18") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "18"))
                  (rule "true_left" (formula "18"))
                  (rule "arrayLengthNotNegative" (formula "18") (term "1,1,0"))
                  (rule "arrayLengthIsAShort" (formula "17") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "true_left" (formula "17"))
                  (rule "arrayLengthNotNegative" (formula "17") (term "1,1,0"))
                  (rule "arrayLengthIsAShort" (formula "16") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "true_left" (formula "16"))
                  (rule "cut_direct" (formula "27") (term "0,0"))
                  (branch "CUT: java.lang.Error::instance(exc_0) = TRUE TRUE"
                     (rule "instanceof_not_compatible_5" (formula "28") (term "1") (ifseqformula "27"))
                     (rule "instanceof_not_compatible_5" (formula "28") (term "1,0") (ifseqformula "27"))
                     (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "42")) (ifInst ""  (formula "42")))
                     (rule "true_left" (formula "28"))
                     (rule "cut_direct" (formula "15") (term "0"))
                     (branch "CUT: exc_0.<created> = TRUE TRUE"
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "true_left" (formula "16"))
                        (rule "arrayLengthNotNegative" (formula "16") (term "1,1,0"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "0") (ifseqformula "2"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "44"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "40") (term "0") (ifseqformula "3"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "41"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0") (ifseqformula "4"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "43"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "0") (ifseqformula "5"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "42"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "0") (ifseqformula "6"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "42"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "0") (ifseqformula "7"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "42"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "40") (term "0") (ifseqformula "8"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "41"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0") (ifseqformula "9"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "43"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "40") (term "0") (ifseqformula "10"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "41"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0") (ifseqformula "11"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "43"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "40") (term "0") (ifseqformula "12"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "41"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0") (ifseqformula "13"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "43"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "0") (ifseqformula "14"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "42"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "andRight" (formula "58"))
                        (branch "Case 1"
                           (rule "andRight" (formula "58"))
                           (branch "Case 1"
                              (rule "andRight" (formula "58"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "58"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "58"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "58"))
                                       (branch "Case 1"
                                          (rule "allRight" (formula "58") (inst "sk=i_82"))
                                          (rule "orRight" (formula "58"))
                                          (rule "notRight" (formula "59"))
                                          (rule "orRight" (formula "59"))
                                          (rule "inEqSimp_geqRight" (formula "60"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "60"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_82"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "31"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "46")) (ifInst ""  (formula "5")))
                                          (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "18") (ifseqformula "45"))
                                          (rule "allLeft" (formula "23") (inst "t=i_82"))
                                          (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "23") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "23"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "2"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0"))
                                          (rule "add_literals" (formula "2") (term "0"))
                                          (rule "leq_literals" (formula "2"))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                       (branch "Case 2"
                                          (rule "allRight" (formula "58") (inst "sk=i_81"))
                                          (rule "orRight" (formula "58"))
                                          (rule "notRight" (formula "59"))
                                          (rule "orRight" (formula "59"))
                                          (rule "inEqSimp_geqRight" (formula "60"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "60"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_81"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "31"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "47")) (ifInst ""  (formula "7")))
                                          (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "18") (ifseqformula "46"))
                                          (rule "allLeft" (formula "24") (inst "t=i_81"))
                                          (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "24") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "2"))
                                          (rule "andLeft" (formula "24"))
                                          (rule "inEqSimp_homoInEq1" (formula "24"))
                                          (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                          (rule "add_literals" (formula "24") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "24") (term "1,0"))
                                          (rule "add_literals" (formula "24") (term "0"))
                                          (rule "leq_literals" (formula "24"))
                                          (rule "closeFalse" (formula "24"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "58") (inst "sk=i_80"))
                                       (rule "orRight" (formula "58"))
                                       (rule "notRight" (formula "59"))
                                       (rule "orRight" (formula "59"))
                                       (rule "inEqSimp_geqRight" (formula "60"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_leqRight" (formula "60"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_80"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "31"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "48")) (ifInst ""  (formula "6")))
                                       (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "18") (ifseqformula "47"))
                                       (rule "allLeft" (formula "25") (inst "t=i_80"))
                                       (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "25") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "inEqSimp_contradInEq1" (formula "25") (ifseqformula "2"))
                                       (rule "andLeft" (formula "25"))
                                       (rule "inEqSimp_homoInEq1" (formula "25"))
                                       (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                                       (rule "add_literals" (formula "25") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "25") (term "1,0"))
                                       (rule "add_literals" (formula "25") (term "0"))
                                       (rule "leq_literals" (formula "25"))
                                       (rule "closeFalse" (formula "25"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "58") (inst "sk=i_79"))
                                    (rule "orRight" (formula "58"))
                                    (rule "notRight" (formula "59"))
                                    (rule "orRight" (formula "59"))
                                    (rule "inEqSimp_geqRight" (formula "60"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "60"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_79"))
                                    (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "31"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "49")) (ifInst ""  (formula "9")))
                                    (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "18") (ifseqformula "48"))
                                    (rule "allLeft" (formula "26") (inst "t=i_79"))
                                    (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                    (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "26") (term "0,0,1"))
                                    (rule "leq_literals" (formula "26") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "inEqSimp_contradInEq1" (formula "26") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "26") (term "0"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "closeFalse" (formula "26"))
                                 )
                              )
                              (branch "Case 2"
                                 (rule "allRight" (formula "58") (inst "sk=i_78"))
                                 (rule "orRight" (formula "58"))
                                 (rule "notRight" (formula "59"))
                                 (rule "orRight" (formula "59"))
                                 (rule "inEqSimp_geqRight" (formula "60"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "60"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_78"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "31"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "50")) (ifInst ""  (formula "8")))
                                 (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "18") (ifseqformula "49"))
                                 (rule "allLeft" (formula "27") (inst "t=i_78"))
                                 (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "27") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "2"))
                                 (rule "andLeft" (formula "27"))
                                 (rule "inEqSimp_homoInEq1" (formula "27"))
                                 (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                 (rule "add_literals" (formula "27") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "27") (term "1,0"))
                                 (rule "add_literals" (formula "27") (term "0"))
                                 (rule "leq_literals" (formula "27"))
                                 (rule "closeFalse" (formula "27"))
                              )
                           )
                           (branch "Case 2"
                              (rule "allRight" (formula "58") (inst "sk=i_77"))
                              (rule "orRight" (formula "58"))
                              (rule "notRight" (formula "59"))
                              (rule "orRight" (formula "59"))
                              (rule "inEqSimp_geqRight" (formula "60"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_leqRight" (formula "60"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_77"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "31"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "51")) (ifInst ""  (formula "11")))
                              (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "18") (ifseqformula "50"))
                              (rule "allLeft" (formula "28") (inst "t=i_77"))
                              (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "28") (term "0,0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "inEqSimp_contradInEq1" (formula "28") (ifseqformula "2"))
                              (rule "andLeft" (formula "28"))
                              (rule "inEqSimp_homoInEq1" (formula "28"))
                              (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                              (rule "add_literals" (formula "28") (term "1,1,0"))
                              (rule "times_zero_1" (formula "28") (term "1,0"))
                              (rule "add_literals" (formula "28") (term "0"))
                              (rule "leq_literals" (formula "28"))
                              (rule "closeFalse" (formula "28"))
                           )
                        )
                        (branch "Case 2"
                           (rule "allRight" (formula "58") (inst "sk=f_8"))
                           (rule "allRight" (formula "58") (inst "sk=o_8"))
                           (rule "orRight" (formula "58"))
                           (rule "pullOutSelect" (formula "59") (term "0") (inst "selectSK=f_8_0"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")))
                           (rule "applyEqReverse" (formula "60") (term "0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "60"))
                           (rule "closeTrue" (formula "60"))
                        )
                     )
                     (branch "CUT: exc_0.<created> = TRUE FALSE"
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "arrayLengthNotNegative" (formula "16") (term "1,1,0"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "44") (term "0") (ifseqformula "2"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "45"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "0") (ifseqformula "3"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "42"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "0") (ifseqformula "4"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "44"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "0") (ifseqformula "5"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "42"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "0") (ifseqformula "6"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "44"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0") (ifseqformula "7"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "43"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0") (ifseqformula "8"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "43"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0") (ifseqformula "9"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "43"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "0") (ifseqformula "10"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "42"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "0") (ifseqformula "11"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "44"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0") (ifseqformula "12"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "43"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0") (ifseqformula "13"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "43"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0") (ifseqformula "14"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "43"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "andRight" (formula "59"))
                        (branch "Case 1"
                           (rule "andRight" (formula "59"))
                           (branch "Case 1"
                              (rule "andRight" (formula "59"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "59"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "59"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "59"))
                                       (branch "Case 1"
                                          (rule "allRight" (formula "59") (inst "sk=i_76"))
                                          (rule "orRight" (formula "59"))
                                          (rule "notRight" (formula "60"))
                                          (rule "orRight" (formula "60"))
                                          (rule "inEqSimp_geqRight" (formula "61"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "61"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_76"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "31"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "47")) (ifInst ""  (formula "5")))
                                          (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "18") (ifseqformula "46"))
                                          (rule "allLeft" (formula "23") (inst "t=i_76"))
                                          (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "23") (term "0,0,1"))
                                          (rule "leq_literals" (formula "23") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "23") (term "0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "closeFalse" (formula "23"))
                                       )
                                       (branch "Case 2"
                                          (rule "allRight" (formula "59") (inst "sk=i_75"))
                                          (rule "orRight" (formula "59"))
                                          (rule "notRight" (formula "60"))
                                          (rule "orRight" (formula "60"))
                                          (rule "inEqSimp_geqRight" (formula "61"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "61"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_75"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "31"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "48")) (ifInst ""  (formula "6")))
                                          (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "18") (ifseqformula "47"))
                                          (rule "allLeft" (formula "24") (inst "t=i_75"))
                                          (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                          (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                          (rule "add_literals" (formula "24") (term "0,0,1"))
                                          (rule "leq_literals" (formula "24") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "24"))
                                          (rule "qeq_literals" (formula "1") (term "0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "59") (inst "sk=i_74"))
                                       (rule "orRight" (formula "59"))
                                       (rule "notRight" (formula "60"))
                                       (rule "orRight" (formula "60"))
                                       (rule "inEqSimp_leqRight" (formula "60"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_geqRight" (formula "61"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_74"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "31"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "49")) (ifInst ""  (formula "7")))
                                       (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "18") (ifseqformula "48"))
                                       (rule "allLeft" (formula "25") (inst "t=i_74"))
                                       (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "25") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "inEqSimp_contradInEq1" (formula "25") (ifseqformula "1"))
                                       (rule "andLeft" (formula "25"))
                                       (rule "inEqSimp_homoInEq1" (formula "25"))
                                       (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                                       (rule "add_literals" (formula "25") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "25") (term "1,0"))
                                       (rule "add_zero_right" (formula "25") (term "0"))
                                       (rule "leq_literals" (formula "25"))
                                       (rule "closeFalse" (formula "25"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "59") (inst "sk=i_73"))
                                    (rule "orRight" (formula "59"))
                                    (rule "notRight" (formula "60"))
                                    (rule "orRight" (formula "60"))
                                    (rule "inEqSimp_geqRight" (formula "61"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "61"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_73"))
                                    (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "31"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "50")) (ifInst ""  (formula "9")))
                                    (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "18") (ifseqformula "49"))
                                    (rule "allLeft" (formula "26") (inst "t=i_73"))
                                    (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                    (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "26") (term "0,0,1"))
                                    (rule "leq_literals" (formula "26") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "26"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                              (branch "Case 2"
                                 (rule "allRight" (formula "59") (inst "sk=i_72"))
                                 (rule "orRight" (formula "59"))
                                 (rule "orRight" (formula "59"))
                                 (rule "notRight" (formula "61"))
                                 (rule "inEqSimp_leqRight" (formula "60"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_geqRight" (formula "61"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_72"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "31"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "51")) (ifInst ""  (formula "8")))
                                 (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "18") (ifseqformula "50"))
                                 (rule "allLeft" (formula "27") (inst "t=i_72"))
                                 (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                 (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                 (rule "add_literals" (formula "27") (term "0,0,1"))
                                 (rule "leq_literals" (formula "27") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "27") (term "0"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "closeFalse" (formula "27"))
                              )
                           )
                           (branch "Case 2"
                              (rule "allRight" (formula "59") (inst "sk=i_71"))
                              (rule "orRight" (formula "59"))
                              (rule "notRight" (formula "60"))
                              (rule "orRight" (formula "60"))
                              (rule "inEqSimp_leqRight" (formula "60"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_geqRight" (formula "61"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_71"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "31"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "52")) (ifInst ""  (formula "10")))
                              (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "18") (ifseqformula "51"))
                              (rule "allLeft" (formula "28") (inst "t=i_71"))
                              (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                              (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                              (rule "add_literals" (formula "28") (term "0,0,1"))
                              (rule "leq_literals" (formula "28") (term "0,1"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "28"))
                              (rule "qeq_literals" (formula "2") (term "0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "closeFalse" (formula "2"))
                           )
                        )
                        (branch "Case 2"
                           (rule "allRight" (formula "59") (inst "sk=f_7"))
                           (rule "allRight" (formula "59") (inst "sk=o_7"))
                           (rule "orRight" (formula "59"))
                           (rule "pullOutSelect" (formula "60") (term "0") (inst "selectSK=f_7_0"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
                           (rule "applyEqReverse" (formula "61") (term "0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "61"))
                           (rule "closeTrue" (formula "61"))
                        )
                     )
                  )
                  (branch "CUT: java.lang.Error::instance(exc_0) = TRUE FALSE"
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "cut_direct" (formula "15") (term "0"))
                     (branch "CUT: exc_0.<created> = TRUE TRUE"
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "true_left" (formula "16"))
                        (rule "arrayLengthNotNegative" (formula "16") (term "1,1,0"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "44") (term "0") (ifseqformula "2"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "45"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "0") (ifseqformula "3"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "42"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "0") (ifseqformula "4"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "44"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "40") (term "0") (ifseqformula "5"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "41"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0") (ifseqformula "6"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "43"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "44") (term "0") (ifseqformula "7"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "45"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "0") (ifseqformula "8"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "42"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "0") (ifseqformula "9"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "44"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "0") (ifseqformula "10"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "42"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "0") (ifseqformula "11"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "44"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "0") (ifseqformula "12"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "42"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "0") (ifseqformula "13"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "44"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0") (ifseqformula "14"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "43"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "andRight" (formula "59"))
                        (branch "Case 1"
                           (rule "andRight" (formula "59"))
                           (branch "Case 1"
                              (rule "andRight" (formula "59"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "59"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "59"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "59"))
                                       (branch "Case 1"
                                          (rule "allRight" (formula "59") (inst "sk=i_70"))
                                          (rule "orRight" (formula "59"))
                                          (rule "orRight" (formula "59"))
                                          (rule "notRight" (formula "61"))
                                          (rule "inEqSimp_leqRight" (formula "60"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_geqRight" (formula "61"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_70"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "31"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "47")) (ifInst ""  (formula "5")))
                                          (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "18") (ifseqformula "46"))
                                          (rule "allLeft" (formula "23") (inst "t=i_70"))
                                          (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "23") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "23"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "1") (term "1,0"))
                                          (rule "add_zero_right" (formula "1") (term "0"))
                                          (rule "leq_literals" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "Case 2"
                                          (rule "allRight" (formula "59") (inst "sk=i_69"))
                                          (rule "orRight" (formula "59"))
                                          (rule "orRight" (formula "59"))
                                          (rule "notRight" (formula "61"))
                                          (rule "inEqSimp_leqRight" (formula "60"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_geqRight" (formula "61"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_69"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "31"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "48")) (ifInst ""  (formula "7")))
                                          (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "18") (ifseqformula "47"))
                                          (rule "allLeft" (formula "24") (inst "t=i_69"))
                                          (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                          (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                          (rule "leq_literals" (formula "24") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "24") (term "0"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "closeFalse" (formula "24"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "59") (inst "sk=i_68"))
                                       (rule "orRight" (formula "59"))
                                       (rule "orRight" (formula "59"))
                                       (rule "notRight" (formula "61"))
                                       (rule "inEqSimp_geqRight" (formula "61"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_leqRight" (formula "61"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_68"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "31"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "49")) (ifInst ""  (formula "6")))
                                       (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "18") (ifseqformula "48"))
                                       (rule "allLeft" (formula "25") (inst "t=i_68"))
                                       (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "25") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "inEqSimp_contradInEq1" (formula "25") (ifseqformula "2"))
                                       (rule "andLeft" (formula "25"))
                                       (rule "inEqSimp_homoInEq1" (formula "25"))
                                       (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                                       (rule "add_literals" (formula "25") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "25") (term "1,0"))
                                       (rule "add_zero_right" (formula "25") (term "0"))
                                       (rule "leq_literals" (formula "25"))
                                       (rule "closeFalse" (formula "25"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "59") (inst "sk=i_67"))
                                    (rule "orRight" (formula "59"))
                                    (rule "orRight" (formula "59"))
                                    (rule "notRight" (formula "61"))
                                    (rule "inEqSimp_leqRight" (formula "60"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_geqRight" (formula "61"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_67"))
                                    (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "31"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "50")) (ifInst ""  (formula "9")))
                                    (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "18") (ifseqformula "49"))
                                    (rule "allLeft" (formula "26") (inst "t=i_67"))
                                    (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                    (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "26") (term "0,0,1"))
                                    (rule "leq_literals" (formula "26") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "inEqSimp_contradInEq1" (formula "26") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "26") (term "0"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "closeFalse" (formula "26"))
                                 )
                              )
                              (branch "Case 2"
                                 (rule "allRight" (formula "59") (inst "sk=i_66"))
                                 (rule "orRight" (formula "59"))
                                 (rule "orRight" (formula "59"))
                                 (rule "notRight" (formula "61"))
                                 (rule "inEqSimp_geqRight" (formula "61"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "61"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_66"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "31"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "51")) (ifInst ""  (formula "8")))
                                 (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "18") (ifseqformula "50"))
                                 (rule "allLeft" (formula "27") (inst "t=i_66"))
                                 (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "27") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "27"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "2"))
                                 (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0"))
                                 (rule "add_zero_right" (formula "2") (term "0"))
                                 (rule "leq_literals" (formula "2"))
                                 (rule "closeFalse" (formula "2"))
                              )
                           )
                           (branch "Case 2"
                              (rule "allRight" (formula "59") (inst "sk=i_65"))
                              (rule "orRight" (formula "59"))
                              (rule "orRight" (formula "59"))
                              (rule "notRight" (formula "61"))
                              (rule "inEqSimp_geqRight" (formula "61"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_leqRight" (formula "61"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_65"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "31"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "52")) (ifInst ""  (formula "11")))
                              (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "18") (ifseqformula "51"))
                              (rule "allLeft" (formula "28") (inst "t=i_65"))
                              (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "28") (term "0,0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "28"))
                              (rule "andLeft" (formula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "2"))
                              (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "1,1,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0"))
                              (rule "add_zero_right" (formula "2") (term "0"))
                              (rule "leq_literals" (formula "2"))
                              (rule "closeFalse" (formula "2"))
                           )
                        )
                        (branch "Case 2"
                           (rule "allRight" (formula "59") (inst "sk=f_6"))
                           (rule "allRight" (formula "59") (inst "sk=o_6"))
                           (rule "orRight" (formula "59"))
                           (rule "pullOutSelect" (formula "60") (term "0") (inst "selectSK=f_6_0"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
                           (rule "applyEqReverse" (formula "61") (term "0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "61"))
                           (rule "closeTrue" (formula "61"))
                        )
                     )
                     (branch "CUT: exc_0.<created> = TRUE FALSE"
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "arrayLengthNotNegative" (formula "16") (term "1,1,0"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "45") (term "0") (ifseqformula "2"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "46"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0") (ifseqformula "3"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "43"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "44") (term "0") (ifseqformula "4"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "45"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "0") (ifseqformula "5"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "42"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "0") (ifseqformula "6"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "44"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "45") (term "0") (ifseqformula "7"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "46"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "0") (ifseqformula "8"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "44"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "0") (ifseqformula "9"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "44"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "0") (ifseqformula "10"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "44"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "0") (ifseqformula "11"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "44"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0") (ifseqformula "12"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "43"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "44") (term "0") (ifseqformula "13"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "45"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "0") (ifseqformula "14"))
                        (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "44"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "andRight" (formula "60"))
                        (branch "Case 1"
                           (rule "andRight" (formula "60"))
                           (branch "Case 1"
                              (rule "andRight" (formula "60"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "60"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "60"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "60"))
                                       (branch "Case 1"
                                          (rule "allRight" (formula "60") (inst "sk=i_64"))
                                          (rule "orRight" (formula "60"))
                                          (rule "orRight" (formula "60"))
                                          (rule "notRight" (formula "62"))
                                          (rule "inEqSimp_geqRight" (formula "62"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "62"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_64"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "31"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "48")) (ifInst ""  (formula "5")))
                                          (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "18") (ifseqformula "47"))
                                          (rule "allLeft" (formula "23") (inst "t=i_64"))
                                          (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "23") (term "0,0,1"))
                                          (rule "leq_literals" (formula "23") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "23") (term "0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "closeFalse" (formula "23"))
                                       )
                                       (branch "Case 2"
                                          (rule "allRight" (formula "60") (inst "sk=i_63"))
                                          (rule "orRight" (formula "60"))
                                          (rule "orRight" (formula "60"))
                                          (rule "notRight" (formula "62"))
                                          (rule "inEqSimp_geqRight" (formula "62"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "62"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_63"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "31"))
                                          (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "49")) (ifInst ""  (formula "7")))
                                          (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                          (rule "hideAuxiliaryEq" (formula "3"))
                                          (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "18") (ifseqformula "48"))
                                          (rule "allLeft" (formula "24") (inst "t=i_63"))
                                          (rule "replace_known_left" (formula "24") (term "0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "inEqSimp_commuteGeq" (formula "24") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "24") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "24"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "2"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0"))
                                          (rule "add_zero_right" (formula "2") (term "0"))
                                          (rule "leq_literals" (formula "2"))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "60") (inst "sk=i_62"))
                                       (rule "orRight" (formula "60"))
                                       (rule "orRight" (formula "60"))
                                       (rule "notRight" (formula "62"))
                                       (rule "inEqSimp_geqRight" (formula "62"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "inEqSimp_leqRight" (formula "62"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                       (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_62"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "31"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "50")) (ifInst ""  (formula "6")))
                                       (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "18") (ifseqformula "49"))
                                       (rule "allLeft" (formula "25") (inst "t=i_62"))
                                       (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "inEqSimp_commuteGeq" (formula "25") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                       (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                       (rule "leq_literals" (formula "25") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "inEqSimp_contradInEq1" (formula "25") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "25") (term "0"))
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "closeFalse" (formula "25"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "60") (inst "sk=i_61"))
                                    (rule "orRight" (formula "60"))
                                    (rule "notRight" (formula "61"))
                                    (rule "orRight" (formula "61"))
                                    (rule "inEqSimp_leqRight" (formula "61"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_geqRight" (formula "62"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_61"))
                                    (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "31"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "51")) (ifInst ""  (formula "8")))
                                    (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "18") (ifseqformula "50"))
                                    (rule "allLeft" (formula "26") (inst "t=i_61"))
                                    (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "inEqSimp_commuteGeq" (formula "26") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "2"))
                                    (rule "qeq_literals" (formula "26") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "inEqSimp_contradInEq1" (formula "26") (ifseqformula "1"))
                                    (rule "andLeft" (formula "26"))
                                    (rule "inEqSimp_homoInEq1" (formula "26"))
                                    (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                    (rule "add_literals" (formula "26") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "26") (term "1,0"))
                                    (rule "add_zero_right" (formula "26") (term "0"))
                                    (rule "leq_literals" (formula "26"))
                                    (rule "closeFalse" (formula "26"))
                                 )
                              )
                              (branch "Case 2"
                                 (rule "allRight" (formula "60") (inst "sk=i_60"))
                                 (rule "orRight" (formula "60"))
                                 (rule "orRight" (formula "60"))
                                 (rule "notRight" (formula "62"))
                                 (rule "inEqSimp_geqRight" (formula "62"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "62"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_60"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "31"))
                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "52")) (ifInst ""  (formula "9")))
                                 (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "18") (ifseqformula "51"))
                                 (rule "allLeft" (formula "27") (inst "t=i_60"))
                                 (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                 (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "27") (term "0,0,1"))
                                 (rule "leq_literals" (formula "27") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "1"))
                                 (rule "qeq_literals" (formula "27") (term "0"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "closeFalse" (formula "27"))
                              )
                           )
                           (branch "Case 2"
                              (rule "allRight" (formula "60") (inst "sk=i_59"))
                              (rule "orRight" (formula "60"))
                              (rule "orRight" (formula "60"))
                              (rule "notRight" (formula "62"))
                              (rule "inEqSimp_geqRight" (formula "62"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_leqRight" (formula "62"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_59"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "31"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "53")) (ifInst ""  (formula "10")))
                              (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "18") (ifseqformula "52"))
                              (rule "allLeft" (formula "28") (inst "t=i_59"))
                              (rule "replace_known_left" (formula "28") (term "0,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                              (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "28") (term "0,0,1"))
                              (rule "leq_literals" (formula "28") (term "0,1"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "inEqSimp_contradInEq1" (formula "28") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "28") (term "0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "closeFalse" (formula "28"))
                           )
                        )
                        (branch "Case 2"
                           (rule "allRight" (formula "60") (inst "sk=f_5"))
                           (rule "allRight" (formula "60") (inst "sk=o_5"))
                           (rule "orRight" (formula "60"))
                           (rule "pullOutSelect" (formula "61") (term "0") (inst "selectSK=f_5_0"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "61")))
                           (rule "applyEqReverse" (formula "62") (term "0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "62"))
                           (rule "closeTrue" (formula "62"))
                        )
                     )
                  )
               )
               (branch "ClassCastException (!(exc_0 instanceof java.lang.Throwable))"
                  (builtin "One Step Simplification" (formula "39"))
                  (rule "closeTrue" (formula "39"))
               )
            )
            (branch "if exc_0 instanceof java.lang.Throwable false"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
      (branch "Pre (getPayLoad)"
         (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "1")) (ifInst ""  (formula "3")) (ifInst ""  (formula "3")))
         (rule "andLeft" (formula "2"))
         (rule "andLeft" (formula "3"))
         (rule "andLeft" (formula "2"))
         (rule "notLeft" (formula "4"))
         (rule "andLeft" (formula "4"))
         (rule "andLeft" (formula "2"))
         (rule "notLeft" (formula "6"))
         (rule "andLeft" (formula "2"))
         (rule "andLeft" (formula "2"))
         (rule "andLeft" (formula "2"))
         (rule "notLeft" (formula "3"))
         (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "10"))
         (builtin "One Step Simplification" (formula "5"))
         (rule "replace_known_left" (formula "11") (term "0,1") (ifseqformula "2"))
         (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "7")) (ifInst ""  (formula "5")))
         (rule "closeTrue" (formula "11"))
      )
   )
)
(branch "Null Reference (_tagged_payload = null)"
   (builtin "One Step Simplification" (formula "1"))
   (rule "throwUnfold" (formula "3") (term "1") (inst "#v0=n"))
   (rule "variableDeclarationAssign" (formula "3") (term "1"))
   (rule "variableDeclaration" (formula "3") (term "1") (newnames "n"))
   (rule "andLeft" (formula "2"))
   (rule "andLeft" (formula "2"))
   (rule "andLeft" (formula "4"))
   (rule "andLeft" (formula "2"))
   (rule "notLeft" (formula "5"))
   (rule "andLeft" (formula "5"))
   (rule "andLeft" (formula "2"))
   (rule "notLeft" (formula "7"))
   (rule "close" (formula "7") (ifseqformula "1"))
)
)

}
