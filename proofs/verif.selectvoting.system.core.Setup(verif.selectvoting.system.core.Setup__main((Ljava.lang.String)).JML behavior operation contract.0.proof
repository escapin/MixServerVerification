\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Tue Jul 11 20:10:32 CEST 2017
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=5000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , permissions-permissions\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Tue Jul 11 20:10:32 CEST 2017
name=verif.selectvoting.system.core.Setup[verif.selectvoting.system.core.Setup\\:\\:main([Ljava.lang.String)].JML behavior operation contract.0
contract=verif.selectvoting.system.core.Setup[verif.selectvoting.system.core.Setup\\:\\:main([Ljava.lang.String)].JML behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mihai" ) (keyVersion "0814267c8a184b1e7da1309b7a9875095ca72975"))

(autoModeTime "1776")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "a,exc,heapAtPre,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "assignment" (formula "5") (term "1"))
(builtin "One Step Simplification" (formula "5"))
(rule "nonNull" (formula "4") (inst "i=i"))
(rule "sub_literals" (formula "4") (term "2,1,0,1,1"))
(builtin "One Step Simplification" (formula "4"))
(rule "greater_literals" (formula "4") (term "0,1"))
(builtin "One Step Simplification" (formula "4"))
(rule "andLeft" (formula "4"))
(rule "notLeft" (formula "4"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "5"))
(builtin "One Step Simplification" (formula "2"))
(rule "narrowSelectArrayType" (formula "4") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "5"))
(rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "4") (term "1,1,0,0"))
(rule "mul_literals" (formula "4") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0"))
(rule "nnf_imp2or" (formula "4") (term "0"))
(rule "nnf_notAnd" (formula "4") (term "0,0"))
(rule "inEqSimp_notLeq" (formula "4") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "4") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "4") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "4") (term "0,0,1,0,0"))
(rule "add_literals" (formula "4") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "4") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "4") (term "1,1,0,0"))
(rule "inEqSimp_notGeq" (formula "4") (term "0,0,0"))
(rule "times_zero_1" (formula "4") (term "1,0,0,0,0,0"))
(rule "add_literals" (formula "4") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0"))
(rule "mul_literals" (formula "4") (term "1,0,0,0"))
(rule "commute_or_2" (formula "4") (term "0"))
(rule "commute_or" (formula "4") (term "0,0"))
(rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_main,savedHeapBefore_main"))
(builtin "One Step Simplification" (formula "6"))
(rule "variableDeclarationAssign" (formula "6") (term "1"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "electionID"))
(builtin "Use Operation Contract" (formula "6") (newnames "heapBefore_untrustedInputMessage,result,exc_0,heapAfter_untrustedInputMessage,anon_heap_untrustedInputMessage") (contract "verif.environment.Environment[verif.environment.Environment::untrustedInputMessage()].JML behavior operation contract.0"))
(branch "Post (untrustedInputMessage)"
   (builtin "One Step Simplification" (formula "8"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "7") (term "1,1,0") (ifseqformula "6"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "7"))
   (rule "typeEqDerived" (formula "9") (term "0,0,1") (ifseqformula "7"))
   (rule "typeEqDerived" (formula "9") (term "0,1,1") (ifseqformula "7"))
   (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "7")))
   (rule "true_left" (formula "9"))
   (rule "assignment" (formula "10") (term "1"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "variableDeclarationAssign" (formula "10") (term "1"))
   (rule "variableDeclaration" (formula "10") (term "1") (newnames "mixDecr"))
   (rule "shift_paren_or" (formula "8"))
   (builtin "Use Operation Contract" (formula "10") (newnames "heapBefore_Decryptor,self,exc_1,heapAfter_Decryptor,anon_heap_Decryptor") (contract "verif.functionalities.pkienc.Decryptor[verif.functionalities.pkienc.Decryptor::Decryptor()].JML behavior operation contract.0"))
   (branch "Post (Decryptor)"
      (builtin "One Step Simplification" (formula "12"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "10") (term "0,0,1,0,1,1") (ifseqformula "6"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "10") (term "0,0,1,0,1,0,1") (ifseqformula "6"))
      (rule "andLeft" (formula "10"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "1,1,0,1,0") (ifseqformula "10"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "0,1,1,0,1,0") (ifseqformula "6"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "11"))
      (rule "typeEqDerived" (formula "13") (term "0,0,1,1") (ifseqformula "11"))
      (rule "typeEqDerived" (formula "13") (term "0,1,1,1") (ifseqformula "11"))
      (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "11")) (ifInst ""  (formula "11")))
      (rule "andLeft" (formula "12"))
      (rule "andLeft" (formula "14"))
      (rule "andLeft" (formula "12"))
      (rule "notLeft" (formula "14"))
      (rule "notLeft" (formula "14"))
      (rule "andLeft" (formula "12"))
      (rule "orRight" (formula "16"))
      (rule "notLeft" (formula "12"))
      (rule "orRight" (formula "14"))
      (rule "replace_known_right" (formula "12") (term "1,0") (ifseqformula "16"))
      (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "15")))
      (rule "assignment" (formula "18") (term "1"))
      (builtin "One Step Simplification" (formula "18"))
      (rule "variableDeclarationAssign" (formula "18") (term "1"))
      (rule "variableDeclaration" (formula "18") (term "1") (newnames "mixEncr"))
      (builtin "Use Operation Contract" (formula "18") (newnames "heapBefore_getEncryptor,result_0,exc_2,heapAfter_getEncryptor,anon_heap_getEncryptor") (contract "verif.functionalities.pkienc.Decryptor[verif.functionalities.pkienc.Decryptor::getEncryptor()].JML behavior operation contract.0"))
      (branch "Post (getEncryptor)"
         (builtin "One Step Simplification" (formula "20"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "0,0,1,0,1,1") (ifseqformula "10"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "0,0,0,1,0,1,1") (ifseqformula "6"))
         (rule "andLeft" (formula "15"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "1,1,0") (ifseqformula "15"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "0,1,1,0") (ifseqformula "10"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "0,0,1,1,0") (ifseqformula "6"))
         (rule "andLeft" (formula "16"))
         (rule "andLeft" (formula "17"))
         (rule "andLeft" (formula "16"))
         (rule "typeEqDerived" (formula "19") (term "0,0,1") (ifseqformula "16"))
         (rule "typeEqDerived" (formula "19") (term "0,1,1") (ifseqformula "16"))
         (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "16")))
         (rule "true_left" (formula "19"))
         (rule "replace_known_left" (formula "18") (term "0") (ifseqformula "16"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "andLeft" (formula "18"))
         (rule "notLeft" (formula "19"))
         (rule "notLeft" (formula "18"))
         (rule "orRight" (formula "18"))
         (rule "orRight" (formula "18"))
         (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "21"))
         (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "18")) (ifInst ""  (formula "19")) (ifInst ""  (formula "20")))
         (rule "assignment" (formula "26") (term "1"))
         (builtin "One Step Simplification" (formula "26"))
         (rule "variableDeclarationAssign" (formula "26") (term "1"))
         (rule "variableDeclaration" (formula "26") (term "1") (newnames "mixSign"))
         (builtin "Use Operation Contract" (formula "26") (newnames "heapBefore_Signer,self_0,exc_3,heapAfter_Signer,anon_heap_Signer") (contract "verif.functionalities.pkisig.Signer[verif.functionalities.pkisig.Signer::Signer()].JML behavior operation contract.0"))
         (branch "Post (Signer)"
            (builtin "One Step Simplification" (formula "19"))
            (builtin "One Step Simplification" (formula "28"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "0,0,1,0,1,1") (ifseqformula "15"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "0,0,0,1,0,1,1") (ifseqformula "10"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "0,0,1,0,1,0,1") (ifseqformula "15"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "0,0,0,1,0,1,0,1") (ifseqformula "10"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "0,0,0,0,1,0,1,1") (ifseqformula "6"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "0,0,0,0,1,0,1,0,1") (ifseqformula "6"))
            (rule "andLeft" (formula "19"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "1,1,0,1,0") (ifseqformula "19"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "0,1,1,0,1,0") (ifseqformula "15"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "0,0,1,1,0,1,0") (ifseqformula "10"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "0,0,0,1,1,0,1,0") (ifseqformula "6"))
            (rule "andLeft" (formula "20"))
            (rule "andLeft" (formula "21"))
            (rule "andLeft" (formula "20"))
            (rule "typeEqDerived" (formula "23") (term "0,0,1") (ifseqformula "20"))
            (rule "typeEqDerived" (formula "23") (term "0,1,1") (ifseqformula "20"))
            (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "20")))
            (rule "true_left" (formula "23"))
            (rule "andLeft" (formula "21"))
            (rule "andLeft" (formula "21"))
            (rule "notLeft" (formula "21"))
            (rule "andLeft" (formula "21"))
            (rule "notLeft" (formula "21"))
            (rule "orRight" (formula "24"))
            (rule "orRight" (formula "24"))
            (rule "orRight" (formula "24"))
            (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "20"))
            (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "24")) (ifInst ""  (formula "25")) (ifInst ""  (formula "26")) (ifInst ""  (formula "27")) (ifInst ""  (formula "28")))
            (rule "true_left" (formula "23"))
            (rule "replace_known_right" (formula "21") (term "1,0") (ifseqformula "26"))
            (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "23")) (ifInst ""  (formula "24")) (ifInst ""  (formula "25")))
            (rule "assignment" (formula "36") (term "1"))
            (builtin "One Step Simplification" (formula "36"))
            (rule "variableDeclarationAssign" (formula "36") (term "1"))
            (rule "variableDeclaration" (formula "36") (term "1") (newnames "precServSign"))
            (builtin "Use Operation Contract" (formula "36") (newnames "heapBefore_Signer_0,self_1,exc_4,heapAfter_Signer_0,anon_heap_Signer_0") (contract "verif.functionalities.pkisig.Signer[verif.functionalities.pkisig.Signer::Signer()].JML behavior operation contract.0"))
            (branch "Post (Signer)"
               (builtin "One Step Simplification" (formula "38"))
               (builtin "One Step Simplification" (formula "24"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,0,1,0,1,1") (ifseqformula "19"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,0,0,1,0,1,1") (ifseqformula "15"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,0,1,0,1,0,1") (ifseqformula "19"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,0,0,1,0,1,0,1") (ifseqformula "15"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,0,0,0,1,0,1,1") (ifseqformula "10"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,0,0,0,0,1,0,1,1") (ifseqformula "6"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,0,0,0,1,0,1,0,1") (ifseqformula "10"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,0,0,0,0,1,0,1,0,1") (ifseqformula "6"))
               (rule "andLeft" (formula "24"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "1,1,0,1,0") (ifseqformula "24"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,1,1,0,1,0") (ifseqformula "19"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,0,1,1,0,1,0") (ifseqformula "15"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,0,0,1,1,0,1,0") (ifseqformula "10"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,0,0,0,1,1,0,1,0") (ifseqformula "6"))
               (rule "andLeft" (formula "25"))
               (rule "andLeft" (formula "25"))
               (rule "typeEqDerived" (formula "27") (term "0,1,1,1") (ifseqformula "25"))
               (rule "typeEqDerived" (formula "27") (term "0,0,1,1") (ifseqformula "25"))
               (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "25")) (ifInst ""  (formula "25")))
               (rule "andLeft" (formula "26"))
               (rule "andLeft" (formula "28"))
               (rule "andLeft" (formula "26"))
               (rule "notLeft" (formula "28"))
               (rule "notLeft" (formula "28"))
               (rule "andLeft" (formula "26"))
               (rule "orRight" (formula "30"))
               (rule "notLeft" (formula "26"))
               (rule "orRight" (formula "30"))
               (rule "orRight" (formula "28"))
               (rule "orRight" (formula "30"))
               (rule "orRight" (formula "28"))
               (rule "orRight" (formula "30"))
               (rule "orRight" (formula "28"))
               (rule "orRight" (formula "28"))
               (rule "replace_known_right" (formula "26") (term "1,0,0,0,0") (ifseqformula "30"))
               (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "29")) (ifInst ""  (formula "31")) (ifInst ""  (formula "32")) (ifInst ""  (formula "33")))
               (rule "assignment" (formula "47") (term "1"))
               (builtin "One Step Simplification" (formula "47"))
               (rule "variableDeclarationAssign" (formula "47") (term "1"))
               (rule "variableDeclaration" (formula "47") (term "1") (newnames "precServVerif"))
               (rule "arrayLengthIsAShort" (formula "4") (term "1,1,0"))
               (builtin "One Step Simplification" (formula "4"))
               (rule "true_left" (formula "4"))
               (rule "arrayLengthNotNegative" (formula "4") (term "1,1,0"))
               (builtin "Use Operation Contract" (formula "48") (newnames "heapBefore_getVerifier,result_1,exc_5,heapAfter_getVerifier,anon_heap_getVerifier") (contract "verif.functionalities.pkisig.Signer[verif.functionalities.pkisig.Signer::getVerifier()].JML behavior operation contract.0"))
               (branch "Post (getVerifier)"
                  (builtin "One Step Simplification" (formula "50"))
                  (builtin "One Step Simplification" (formula "30"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,0,1,0,1,1") (ifseqformula "25"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,0,0,1,0,1,1") (ifseqformula "20"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,0,0,0,1,0,1,1") (ifseqformula "16"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,0,0,0,0,1,0,1,1") (ifseqformula "11"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,0,0,0,0,0,1,0,1,1") (ifseqformula "7"))
                  (rule "andLeft" (formula "30"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "1,1,0") (ifseqformula "30"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0,1,1,0") (ifseqformula "25"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0,0,1,1,0") (ifseqformula "20"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0,0,0,1,1,0") (ifseqformula "16"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0,0,0,0,1,1,0") (ifseqformula "11"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0,0,0,0,0,1,1,0") (ifseqformula "7"))
                  (rule "andLeft" (formula "31"))
                  (rule "andLeft" (formula "32"))
                  (rule "andLeft" (formula "31"))
                  (rule "typeEqDerived" (formula "34") (term "0,0,1") (ifseqformula "31"))
                  (rule "typeEqDerived" (formula "34") (term "0,1,1") (ifseqformula "31"))
                  (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "31")))
                  (rule "true_left" (formula "34"))
                  (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "31"))
                  (builtin "One Step Simplification" (formula "33"))
                  (rule "andLeft" (formula "33"))
                  (rule "notLeft" (formula "34"))
                  (rule "notLeft" (formula "33"))
                  (rule "orRight" (formula "33"))
                  (rule "orRight" (formula "33"))
                  (rule "orRight" (formula "33"))
                  (rule "orRight" (formula "33"))
                  (rule "orRight" (formula "33"))
                  (rule "replace_known_right" (formula "32") (term "1,0,0,0,1") (ifseqformula "36"))
                  (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "39")) (ifInst ""  (formula "33")) (ifInst ""  (formula "34")) (ifInst ""  (formula "35")) (ifInst ""  (formula "37")) (ifInst ""  (formula "38")))
                  (rule "assignment" (formula "59") (term "1"))
                  (builtin "One Step Simplification" (formula "59"))
                  (rule "ifUnfold" (formula "59") (term "1") (inst "#boolv=x"))
                  (rule "variableDeclaration" (formula "59") (term "1") (newnames "x_6"))
                  (rule "compound_assignment_5_nonsimple" (formula "59") (term "1"))
                  (rule "ifElseUnfold" (formula "59") (term "1") (inst "#boolv=x_7"))
                  (rule "variableDeclaration" (formula "59") (term "1") (newnames "x_7"))
                  (rule "equality_comparison_simple" (formula "59") (term "1"))
                  (builtin "One Step Simplification" (formula "59"))
                  (rule "ifElseSplit" (formula "59"))
                  (branch "if x_7 true"
                     (builtin "One Step Simplification" (formula "60"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "ifEnterThen" (formula "59") (term "1"))
                     (rule "assignment" (formula "59") (term "1"))
                     (builtin "One Step Simplification" (formula "59"))
                     (rule "blockThrow" (formula "59") (term "1"))
                     (rule "throwUnfold" (formula "59") (term "1") (inst "#v0=t"))
                     (rule "variableDeclarationAssign" (formula "59") (term "1"))
                     (rule "variableDeclaration" (formula "59") (term "1") (newnames "t_1"))
                     (builtin "Use Operation Contract" (formula "59") (newnames "heapBefore_Throwable_0,self_3,exc_8,heapAfter_Throwable_0,anon_heap_Throwable_0") (contract "java.lang.Throwable[java.lang.Throwable::Throwable()].JML normal_behavior operation contract.0"))
                     (branch "Post (Throwable)"
                        (builtin "One Step Simplification" (formula "34"))
                        (builtin "One Step Simplification" (formula "61"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "0,0,1,0,1,0,1") (ifseqformula "30"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "0,0,0,1,0,1,0,1") (ifseqformula "25"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "0,0,0,0,1,0,1,0,1") (ifseqformula "20"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "0,0,0,0,0,1,0,1,0,1") (ifseqformula "16"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "0,0,0,0,0,0,1,0,1,0,1") (ifseqformula "11"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "0,0,0,0,0,0,0,1,0,1,0,1") (ifseqformula "8"))
                        (rule "andLeft" (formula "34"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "1,1,0,1,0") (ifseqformula "34"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,1,1,0,1,0") (ifseqformula "30"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,1,1,0,1,0") (ifseqformula "25"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,0,1,1,0,1,0") (ifseqformula "20"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,0,0,1,1,0,1,0") (ifseqformula "16"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,0,0,0,1,1,0,1,0") (ifseqformula "11"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,0,0,0,0,1,1,0,1,0") (ifseqformula "8"))
                        (rule "andLeft" (formula "35"))
                        (rule "andLeft" (formula "36"))
                        (rule "andLeft" (formula "35"))
                        (rule "andLeft" (formula "36"))
                        (rule "andLeft" (formula "35"))
                        (rule "andLeft" (formula "37"))
                        (rule "andLeft" (formula "35"))
                        (rule "notLeft" (formula "35"))
                        (rule "andLeft" (formula "35"))
                        (rule "notLeft" (formula "35"))
                        (rule "orRight" (formula "41"))
                        (rule "orRight" (formula "41"))
                        (rule "orRight" (formula "41"))
                        (rule "orRight" (formula "41"))
                        (rule "orRight" (formula "41"))
                        (rule "orRight" (formula "41"))
                        (rule "replace_known_right" (formula "35") (term "1,0,0,0") (ifseqformula "45"))
                        (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "41")) (ifInst ""  (formula "42")) (ifInst ""  (formula "43")) (ifInst ""  (formula "44")) (ifInst ""  (formula "46")) (ifInst ""  (formula "47")))
                        (rule "assignment" (formula "75") (term "1"))
                        (builtin "One Step Simplification" (formula "75"))
                        (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=java_lang_Throwable_cause_1"))
                        (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "34"))
                        (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "49")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "0,1,0,0") (ifseqformula "30"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "0,0,1,0,0") (ifseqformula "25"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "0,0,0,1,0,0") (ifseqformula "20"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "0,0,0,0,1,0,0") (ifseqformula "16"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "0,0,0,0,0,1,0,0") (ifseqformula "11"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "0,0,0,0,0,0,1,0,0") (ifseqformula "8"))
                        (rule "replace_known_right" (formula "38") (term "1,0,0,1,0,0") (ifseqformula "47"))
                        (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "42")) (ifInst ""  (formula "43")) (ifInst ""  (formula "44")) (ifInst ""  (formula "45")) (ifInst ""  (formula "46")) (ifInst ""  (formula "48")))
                        (rule "hideAuxiliaryEq" (formula "38"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00000000_1" (formula "38") (term "0"))
                        (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=java_lang_Throwable_message_1"))
                        (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "34"))
                        (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "49")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,1,0,0") (ifseqformula "30"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,0,1,0,0") (ifseqformula "25"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,0,0,1,0,0") (ifseqformula "20"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,0,0,0,1,0,0") (ifseqformula "16"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,0,0,0,0,1,0,0") (ifseqformula "11"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,0,0,0,0,0,1,0,0") (ifseqformula "8"))
                        (rule "replace_known_right" (formula "37") (term "1,0,0,1,0,0") (ifseqformula "47"))
                        (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "42")) (ifInst ""  (formula "43")) (ifInst ""  (formula "44")) (ifInst ""  (formula "45")) (ifInst ""  (formula "46")) (ifInst ""  (formula "48")))
                        (rule "hideAuxiliaryEq" (formula "37"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00000000_3" (formula "37") (term "0"))
                        (rule "commuteUnion" (formula "34") (term "1,0"))
                        (rule "methodCallThrow" (formula "75") (term "1"))
                        (builtin "One Step Simplification" (formula "75"))
                        (rule "tryCatchThrow" (formula "75") (term "1"))
                        (rule "ifElseUnfold" (formula "75") (term "1") (inst "#boolv=x"))
                        (rule "variableDeclaration" (formula "75") (term "1") (newnames "x_10"))
                        (rule "equality_comparison_simple" (formula "75") (term "1"))
                        (builtin "One Step Simplification" (formula "75"))
                        (rule "replace_known_right" (formula "75") (term "0,0,1,0") (ifseqformula "48"))
                        (builtin "One Step Simplification" (formula "75"))
                        (rule "ifElseSplit" (formula "75"))
                        (branch "if x_10 true"
                           (builtin "One Step Simplification" (formula "76"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "if x_10 false"
                           (builtin "One Step Simplification" (formula "76"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "ifElseSplit" (formula "75"))
                           (branch "if t_1 instanceof java.lang.Throwable true"
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                              (rule "true_left" (formula "1"))
                              (rule "variableDeclaration" (formula "75") (term "1") (newnames "e_8"))
                              (rule "reference_type_cast" (formula "75") (term "1"))
                              (branch "Normal Execution (t_1 instanceof java.lang.Throwable)"
                                 (builtin "One Step Simplification" (formula "76"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "assignment" (formula "75") (term "1"))
                                 (builtin "One Step Simplification" (formula "75"))
                                 (rule "emptyModality" (formula "75"))
                                 (rule "closeTrue" (formula "75"))
                              )
                              (branch "ClassCastException (!(t_1 instanceof java.lang.Throwable))"
                                 (builtin "One Step Simplification" (formula "76"))
                                 (builtin "One Step Simplification" (formula "75"))
                                 (rule "closeTrue" (formula "75"))
                              )
                           )
                           (branch "if t_1 instanceof java.lang.Throwable false"
                              (builtin "One Step Simplification" (formula "76"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                     )
                     (branch "Exceptional Post (Throwable)"
                        (builtin "One Step Simplification" (formula "61"))
                        (builtin "One Step Simplification" (formula "34"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "0,0,1,0,1,0,1") (ifseqformula "30"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "0,0,0,1,0,1,0,1") (ifseqformula "25"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "0,0,0,0,1,0,1,0,1") (ifseqformula "20"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "0,0,0,0,0,1,0,1,0,1") (ifseqformula "16"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "0,0,0,0,0,0,1,0,1,0,1") (ifseqformula "11"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "0,0,0,0,0,0,0,1,0,1,0,1") (ifseqformula "8"))
                        (rule "andLeft" (formula "34"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "1,0,0") (ifseqformula "34"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,1,0,0") (ifseqformula "30"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,1,0,0") (ifseqformula "25"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "1,1,0,1,0") (ifseqformula "34"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,1,1,0,1,0") (ifseqformula "30"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,0,1,0,0") (ifseqformula "20"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,0,0,1,0,0") (ifseqformula "16"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,1,1,0,1,0") (ifseqformula "25"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,0,1,1,0,1,0") (ifseqformula "20"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,0,0,0,1,0,0") (ifseqformula "11"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,0,0,1,1,0,1,0") (ifseqformula "16"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,0,0,0,0,1,0,0") (ifseqformula "8"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,0,0,0,1,1,0,1,0") (ifseqformula "11"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,0,0,0,0,1,1,0,1,0") (ifseqformula "8"))
                        (rule "andLeft" (formula "35"))
                        (rule "andLeft" (formula "35"))
                        (rule "andLeft" (formula "37"))
                        (rule "andLeft" (formula "36"))
                        (rule "andLeft" (formula "35"))
                        (rule "andLeft" (formula "39"))
                        (rule "andLeft" (formula "37"))
                        (rule "notLeft" (formula "35"))
                        (rule "close" (formula "42") (ifseqformula "41"))
                     )
                     (branch "Pre (Throwable)"
                        (builtin "One Step Simplification" (formula "59"))
                        (rule "wellFormedAnonEQ" (formula "59") (ifseqformula "30"))
                        (rule "wellFormedAnonEQ" (formula "59") (term "0") (ifseqformula "25"))
                        (rule "wellFormedAnonEQ" (formula "59") (term "0,0") (ifseqformula "20"))
                        (rule "wellFormedAnonEQ" (formula "59") (term "0,0,0") (ifseqformula "16"))
                        (rule "wellFormedAnonEQ" (formula "59") (term "0,0,0,0") (ifseqformula "11"))
                        (rule "wellFormedAnonEQ" (formula "59") (term "0,0,0,0,0") (ifseqformula "8"))
                        (rule "replace_known_left" (formula "59") (term "1") (ifseqformula "29"))
                        (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "2")) (ifInst ""  (formula "7")) (ifInst ""  (formula "10")) (ifInst ""  (formula "15")) (ifInst ""  (formula "19")) (ifInst ""  (formula "24")))
                        (rule "closeTrue" (formula "59"))
                     )
                  )
                  (branch "if x_7 false"
                     (builtin "One Step Simplification" (formula "60"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "replace_known_right" (formula "9") (term "0,0") (ifseqformula "33"))
                     (builtin "One Step Simplification" (formula "9"))
                     (rule "compound_equality_comparison_1" (formula "60") (term "1") (inst "#v0=x_arr"))
                     (rule "variableDeclarationAssign" (formula "60") (term "1"))
                     (rule "variableDeclaration" (formula "60") (term "1") (newnames "x_arr"))
                     (rule "activeUseStaticFieldReadAccess" (formula "60") (term "1"))
                     (rule "assignment_read_static_attribute" (formula "60") (term "1"))
                     (builtin "One Step Simplification" (formula "60"))
                     (rule "pullOutSelect" (formula "60") (term "0,1,0") (inst "selectSK=verif_selectvoting_system_core_Tag_BALLOTS_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet1000000_1" (formula "60") (term "0,1,0"))
                     (rule "equality_comparison_simple" (formula "60") (term "1"))
                     (builtin "One Step Simplification" (formula "60"))
                     (rule "blockEmpty" (formula "60") (term "1"))
                     (rule "ifSplit" (formula "60"))
                     (branch "if x_6 true"
                        (builtin "One Step Simplification" (formula "61"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "blockThrow" (formula "61") (term "1"))
                        (rule "throwUnfold" (formula "61") (term "1") (inst "#v0=t"))
                        (rule "variableDeclarationAssign" (formula "61") (term "1"))
                        (rule "variableDeclaration" (formula "61") (term "1") (newnames "t"))
                        (builtin "Use Operation Contract" (formula "61") (newnames "heapBefore_Throwable,self_2,exc_7,heapAfter_Throwable,anon_heap_Throwable") (contract "java.lang.Throwable[java.lang.Throwable::Throwable()].JML normal_behavior operation contract.0"))
                        (branch "Post (Throwable)"
                           (builtin "One Step Simplification" (formula "63"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,1,0,1,0,1") (ifseqformula "31"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,0,1,0,1,0,1") (ifseqformula "26"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,0,0,1,0,1,0,1") (ifseqformula "21"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,0,0,0,1,0,1,0,1") (ifseqformula "17"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,0,0,0,0,1,0,1,0,1") (ifseqformula "12"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,0,0,0,0,0,1,0,1,0,1") (ifseqformula "8"))
                           (rule "andLeft" (formula "35"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "1,1,0,1,0") (ifseqformula "35"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "0,1,1,0,1,0") (ifseqformula "31"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "0,0,1,1,0,1,0") (ifseqformula "26"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "0,0,0,1,1,0,1,0") (ifseqformula "21"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "0,0,0,0,1,1,0,1,0") (ifseqformula "17"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "0,0,0,0,0,1,1,0,1,0") (ifseqformula "12"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "0,0,0,0,0,0,1,1,0,1,0") (ifseqformula "8"))
                           (rule "andLeft" (formula "36"))
                           (rule "andLeft" (formula "37"))
                           (rule "andLeft" (formula "36"))
                           (rule "andLeft" (formula "37"))
                           (rule "andLeft" (formula "36"))
                           (rule "andLeft" (formula "38"))
                           (rule "andLeft" (formula "36"))
                           (rule "notLeft" (formula "36"))
                           (rule "andLeft" (formula "36"))
                           (rule "notLeft" (formula "36"))
                           (rule "orRight" (formula "42"))
                           (rule "orRight" (formula "42"))
                           (rule "orRight" (formula "42"))
                           (rule "orRight" (formula "42"))
                           (rule "orRight" (formula "42"))
                           (rule "orRight" (formula "42"))
                           (rule "replace_known_right" (formula "36") (term "1,0,0") (ifseqformula "47"))
                           (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "42")) (ifInst ""  (formula "43")) (ifInst ""  (formula "44")) (ifInst ""  (formula "45")) (ifInst ""  (formula "46")) (ifInst ""  (formula "48")))
                           (rule "assignment" (formula "77") (term "1"))
                           (builtin "One Step Simplification" (formula "77"))
                           (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=java_lang_Throwable_cause_0"))
                           (rule "simplifySelectOfAnonEQ" (formula "39") (ifseqformula "35"))
                           (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "50")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "0,1,0,0") (ifseqformula "31"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "0,0,1,0,0") (ifseqformula "26"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "0,0,0,1,0,0") (ifseqformula "21"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "0,0,0,0,1,0,0") (ifseqformula "17"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "0,0,0,0,0,1,0,0") (ifseqformula "12"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "0,0,0,0,0,0,1,0,0") (ifseqformula "8"))
                           (rule "replace_known_right" (formula "39") (term "1,0,1,0,0") (ifseqformula "49"))
                           (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "43")) (ifInst ""  (formula "44")) (ifInst ""  (formula "45")) (ifInst ""  (formula "46")) (ifInst ""  (formula "47")) (ifInst ""  (formula "48")))
                           (rule "hideAuxiliaryEq" (formula "39"))
                           (rule "replaceKnownAuxiliaryConstant_taclet001000000_3" (formula "39") (term "0"))
                           (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=java_lang_Throwable_message_0"))
                           (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "35"))
                           (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "50")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "0,1,0,0") (ifseqformula "31"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "0,0,1,0,0") (ifseqformula "26"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "0,0,0,1,0,0") (ifseqformula "21"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "0,0,0,0,1,0,0") (ifseqformula "17"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "0,0,0,0,0,1,0,0") (ifseqformula "12"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "0,0,0,0,0,0,1,0,0") (ifseqformula "8"))
                           (rule "replace_known_right" (formula "38") (term "1,0,1,0,0") (ifseqformula "49"))
                           (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "43")) (ifInst ""  (formula "44")) (ifInst ""  (formula "45")) (ifInst ""  (formula "46")) (ifInst ""  (formula "47")) (ifInst ""  (formula "48")))
                           (rule "hideAuxiliaryEq" (formula "38"))
                           (rule "replaceKnownAuxiliaryConstant_taclet001000000_5" (formula "38") (term "0"))
                           (rule "commuteUnion" (formula "35") (term "1,0"))
                           (rule "methodCallThrow" (formula "77") (term "1"))
                           (builtin "One Step Simplification" (formula "77"))
                           (rule "tryCatchThrow" (formula "77") (term "1"))
                           (rule "ifElseUnfold" (formula "77") (term "1") (inst "#boolv=x"))
                           (rule "variableDeclaration" (formula "77") (term "1") (newnames "x_9"))
                           (rule "equality_comparison_simple" (formula "77") (term "1"))
                           (builtin "One Step Simplification" (formula "77"))
                           (rule "replace_known_right" (formula "77") (term "0,0,1,0") (ifseqformula "49"))
                           (builtin "One Step Simplification" (formula "77"))
                           (rule "ifElseSplit" (formula "77"))
                           (branch "if x_9 true"
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "if x_9 false"
                              (builtin "One Step Simplification" (formula "78"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "ifElseSplit" (formula "77"))
                              (branch "if t instanceof java.lang.Throwable true"
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")))
                                 (rule "true_left" (formula "1"))
                                 (rule "variableDeclaration" (formula "77") (term "1") (newnames "e_7"))
                                 (rule "reference_type_cast" (formula "77") (term "1"))
                                 (branch "Normal Execution (t instanceof java.lang.Throwable)"
                                    (builtin "One Step Simplification" (formula "78"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "assignment" (formula "77") (term "1"))
                                    (builtin "One Step Simplification" (formula "77"))
                                    (rule "emptyModality" (formula "77"))
                                    (rule "closeTrue" (formula "77"))
                                 )
                                 (branch "ClassCastException (!(t instanceof java.lang.Throwable))"
                                    (builtin "One Step Simplification" (formula "78"))
                                    (builtin "One Step Simplification" (formula "77"))
                                    (rule "closeTrue" (formula "77"))
                                 )
                              )
                              (branch "if t instanceof java.lang.Throwable false"
                                 (builtin "One Step Simplification" (formula "78"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                        )
                        (branch "Exceptional Post (Throwable)"
                           (builtin "One Step Simplification" (formula "35"))
                           (builtin "One Step Simplification" (formula "63"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,1,0,1,0,1") (ifseqformula "31"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,0,1,0,1,0,1") (ifseqformula "26"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,0,0,1,0,1,0,1") (ifseqformula "21"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,0,0,0,1,0,1,0,1") (ifseqformula "17"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,0,0,0,0,1,0,1,0,1") (ifseqformula "12"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,0,0,0,0,0,1,0,1,0,1") (ifseqformula "8"))
                           (rule "andLeft" (formula "35"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "1,0,0") (ifseqformula "35"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "0,1,0,0") (ifseqformula "31"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "0,0,1,0,0") (ifseqformula "26"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "1,1,0,1,0") (ifseqformula "35"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "0,1,1,0,1,0") (ifseqformula "31"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "0,0,0,1,0,0") (ifseqformula "21"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "0,0,0,0,1,0,0") (ifseqformula "17"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "0,0,1,1,0,1,0") (ifseqformula "26"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "0,0,0,0,0,1,0,0") (ifseqformula "12"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "0,0,0,1,1,0,1,0") (ifseqformula "21"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "0,0,0,0,0,0,1,0,0") (ifseqformula "8"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "0,0,0,0,1,1,0,1,0") (ifseqformula "17"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "0,0,0,0,0,1,1,0,1,0") (ifseqformula "12"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "0,0,0,0,0,0,1,1,0,1,0") (ifseqformula "8"))
                           (rule "andLeft" (formula "36"))
                           (rule "andLeft" (formula "37"))
                           (rule "andLeft" (formula "36"))
                           (rule "andLeft" (formula "38"))
                           (rule "andLeft" (formula "37"))
                           (rule "andLeft" (formula "36"))
                           (rule "andLeft" (formula "40"))
                           (rule "andLeft" (formula "38"))
                           (rule "notLeft" (formula "36"))
                           (rule "close" (formula "44") (ifseqformula "43"))
                        )
                        (branch "Pre (Throwable)"
                           (builtin "One Step Simplification" (formula "61"))
                           (rule "wellFormedAnonEQ" (formula "61") (ifseqformula "31"))
                           (rule "wellFormedAnonEQ" (formula "61") (term "0") (ifseqformula "26"))
                           (rule "wellFormedAnonEQ" (formula "61") (term "0,0") (ifseqformula "21"))
                           (rule "wellFormedAnonEQ" (formula "61") (term "0,0,0") (ifseqformula "17"))
                           (rule "wellFormedAnonEQ" (formula "61") (term "0,0,0,0") (ifseqformula "12"))
                           (rule "wellFormedAnonEQ" (formula "61") (term "0,0,0,0,0") (ifseqformula "8"))
                           (rule "replace_known_left" (formula "61") (term "1,0") (ifseqformula "25"))
                           (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "2")) (ifInst ""  (formula "7")) (ifInst ""  (formula "11")) (ifInst ""  (formula "16")) (ifInst ""  (formula "20")) (ifInst ""  (formula "30")))
                           (rule "closeTrue" (formula "61"))
                        )
                     )
                     (branch "if x_6 false"
                        (builtin "One Step Simplification" (formula "61"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (builtin "Use Operation Contract" (formula "61") (newnames "heapBefore_main2,exc_6,heapAfter_main2,anon_heap_main2") (contract "verif.selectvoting.system.core.Setup[verif.selectvoting.system.core.Setup::main2(verif.functionalities.pkienc.Decryptor,verif.functionalities.pkienc.Encryptor,verif.functionalities.pkisig.Signer,verif.functionalities.pkisig.Signer,verif.functionalities.pkisig.Verifier,[B)].JML behavior operation contract.0"))
                        (branch "Post (main2)"
                           (builtin "One Step Simplification" (formula "34"))
                           (builtin "One Step Simplification" (formula "63"))
                           (rule "andLeft" (formula "34"))
                           (rule "commuteUnion" (formula "34") (term "0,0,1,0"))
                           (rule "commuteUnion_2" (formula "34") (term "0,1,0"))
                           (rule "commuteUnion_2" (formula "34") (term "1,0"))
                           (rule "methodCallEmpty" (formula "64") (term "1"))
                           (rule "tryEmpty" (formula "64") (term "1"))
                           (builtin "One Step Simplification" (formula "64"))
                           (rule "emptyModality" (formula "64"))
                           (rule "closeTrue" (formula "64"))
                        )
                        (branch "Exceptional Post (main2)"
                           (builtin "One Step Simplification" (formula "34"))
                           (builtin "One Step Simplification" (formula "63"))
                           (rule "andLeft" (formula "34"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "1") (ifseqformula "34"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,1") (ifseqformula "30"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,1") (ifseqformula "25"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,0,1") (ifseqformula "20"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,0,0,1") (ifseqformula "16"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,0,0,0,1") (ifseqformula "11"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,0,0,0,0,1") (ifseqformula "7"))
                           (rule "andLeft" (formula "35"))
                           (rule "notLeft" (formula "35"))
                           (rule "commuteUnion" (formula "34") (term "0,0,1,0"))
                           (rule "commuteUnion_2" (formula "34") (term "0,1,0"))
                           (rule "commuteUnion_2" (formula "34") (term "1,0"))
                           (rule "commute_or_2" (formula "35") (term "0,0,0"))
                           (rule "commute_or_2" (formula "35") (term "0,0"))
                           (rule "commute_or_2" (formula "35") (term "0,0,0,0,0"))
                           (rule "commute_or_2" (formula "35") (term "0,0,0,0"))
                           (rule "commute_or_2" (formula "35") (term "0,0,0"))
                           (rule "commute_or_2" (formula "35") (term "0,0"))
                           (rule "commute_or_2" (formula "35") (term "0"))
                           (rule "commute_or_2" (formula "35"))
                           (rule "methodCallThrow" (formula "65") (term "1"))
                           (rule "tryCatchThrow" (formula "65") (term "1"))
                           (rule "ifElseUnfold" (formula "65") (term "1") (inst "#boolv=x"))
                           (rule "variableDeclaration" (formula "65") (term "1") (newnames "x_8"))
                           (rule "equality_comparison_simple" (formula "65") (term "1"))
                           (builtin "One Step Simplification" (formula "65"))
                           (rule "replace_known_right" (formula "65") (term "0,0,1,0") (ifseqformula "36"))
                           (builtin "One Step Simplification" (formula "65"))
                           (rule "ifElseSplit" (formula "65"))
                           (branch "if x_8 true"
                              (builtin "One Step Simplification" (formula "66"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "if x_8 false"
                              (builtin "One Step Simplification" (formula "66"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "ifElseSplit" (formula "65"))
                              (branch "if exc_6 instanceof java.lang.Throwable true"
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                                 (rule "true_left" (formula "1"))
                                 (rule "variableDeclaration" (formula "65") (term "1") (newnames "e_6"))
                                 (rule "reference_type_cast" (formula "65") (term "1"))
                                 (branch "Normal Execution (exc_6 instanceof java.lang.Throwable)"
                                    (builtin "One Step Simplification" (formula "66"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "assignment" (formula "65") (term "1"))
                                    (builtin "One Step Simplification" (formula "65"))
                                    (rule "emptyModality" (formula "65"))
                                    (rule "closeTrue" (formula "65"))
                                 )
                                 (branch "ClassCastException (!(exc_6 instanceof java.lang.Throwable))"
                                    (builtin "One Step Simplification" (formula "65"))
                                    (rule "closeTrue" (formula "65"))
                                 )
                              )
                              (branch "if exc_6 instanceof java.lang.Throwable false"
                                 (builtin "One Step Simplification" (formula "66"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                        )
                        (branch "Pre (main2)"
                           (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "57")) (ifInst ""  (formula "56")) (ifInst ""  (formula "52")) (ifInst ""  (formula "42")) (ifInst ""  (formula "41")) (ifInst ""  (formula "34")) (ifInst ""  (formula "57")) (ifInst ""  (formula "56")) (ifInst ""  (formula "52")) (ifInst ""  (formula "42")) (ifInst ""  (formula "41")) (ifInst ""  (formula "34")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "61") (term "1,1") (ifseqformula "30"))
                           (rule "replaceKnownSelect_taclet1000000_0" (formula "61") (term "0,0,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "61") (term "0,1,1") (ifseqformula "25"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "61") (term "1,0,1") (ifseqformula "30"))
                           (rule "replaceKnownAuxiliaryConstant_taclet1000000_1" (formula "61") (term "0,0,0"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "61") (term "1,0,0,1") (ifseqformula "30"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "61") (term "0,1,0,1") (ifseqformula "25"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "61") (term "0,0,1,1") (ifseqformula "20"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "61") (term "1,0,0,0,1") (ifseqformula "30"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "61") (term "0,0,1,0,1") (ifseqformula "20"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "61") (term "0,0,0,1,1") (ifseqformula "16"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "61") (term "0,1,0,0,1") (ifseqformula "25"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "61") (term "0,0,0,1,0,1") (ifseqformula "16"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "61") (term "1,0,0,0,0,1") (ifseqformula "30"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "61") (term "0,0,0,0,1,1") (ifseqformula "11"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "61") (term "0,0,1,0,0,1") (ifseqformula "20"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "61") (term "0,1,0,0,0,1") (ifseqformula "25"))
                           (rule "wellFormedAnonEQ" (formula "61") (term "0,0,0,0,0,0,1") (ifseqformula "30"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "61") (term "1,0,0,0,0,0,1") (ifseqformula "30"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "61") (term "0,0,0,0,1,0,1") (ifseqformula "11"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "61") (term "0,1,0,0,0,0,1") (ifseqformula "25"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "61") (term "0,0,1,0,0,0,1") (ifseqformula "20"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "61") (term "0,0,0,1,0,0,1") (ifseqformula "16"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "61") (term "0,0,0,0,0,1,1") (ifseqformula "7"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "61") (term "0,0,0,0,0,1,0,1") (ifseqformula "7"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "61") (term "0,0,1,0,0,0,0,1") (ifseqformula "20"))
                           (rule "wellFormedAnonEQ" (formula "61") (term "0,0,0,0,0,0,0,1") (ifseqformula "25"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "61") (term "0,0,0,1,0,0,0,1") (ifseqformula "16"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "61") (term "0,1,0,0,0,0,0,1") (ifseqformula "25"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "61") (term "0,0,0,0,1,0,0,1") (ifseqformula "11"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "61") (term "0,0,0,1,0,0,0,0,1") (ifseqformula "16"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "61") (term "0,0,0,0,0,1,0,0,1") (ifseqformula "7"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "61") (term "0,0,1,0,0,0,0,0,1") (ifseqformula "20"))
                           (rule "wellFormedAnonEQ" (formula "61") (term "0,0,0,0,0,0,0,0,1") (ifseqformula "20"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "61") (term "0,0,0,0,1,0,0,0,1") (ifseqformula "11"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "61") (term "0,0,0,0,1,0,0,0,0,1") (ifseqformula "11"))
                           (rule "wellFormedAnonEQ" (formula "61") (term "0,0,0,0,0,0,0,0,0,1") (ifseqformula "16"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "61") (term "0,0,0,0,0,1,0,0,0,1") (ifseqformula "7"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "61") (term "0,0,0,1,0,0,0,0,0,1") (ifseqformula "16"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "61") (term "0,0,0,0,0,1,0,0,0,0,1") (ifseqformula "7"))
                           (rule "wellFormedAnonEQ" (formula "61") (term "0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "11"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "61") (term "0,0,0,0,1,0,0,0,0,0,1") (ifseqformula "11"))
                           (rule "wellFormedAnonEQ" (formula "61") (term "0,0,0,0,0,0,0,0,0,0,0,1") (ifseqformula "7"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "61") (term "0,0,0,0,0,1,0,0,0,0,0,1") (ifseqformula "7"))
                           (rule "replace_known_right" (formula "61") (term "0,0") (ifseqformula "33"))
                           (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "1")) (ifInst ""  (formula "6")) (ifInst ""  (formula "10")) (ifInst ""  (formula "15")) (ifInst ""  (formula "19")) (ifInst ""  (formula "24")) (ifInst ""  (formula "29")) (ifInst ""  (formula "58")) (ifInst ""  (formula "59")) (ifInst ""  (formula "13")) (ifInst ""  (formula "53")) (ifInst ""  (formula "54")) (ifInst ""  (formula "55")) (ifInst ""  (formula "18")) (ifInst ""  (formula "48")) (ifInst ""  (formula "49")) (ifInst ""  (formula "50")) (ifInst ""  (formula "51")) (ifInst ""  (formula "22")) (ifInst ""  (formula "43")) (ifInst ""  (formula "44")) (ifInst ""  (formula "45")) (ifInst ""  (formula "46")) (ifInst ""  (formula "47")) (ifInst ""  (formula "27")) (ifInst ""  (formula "35")) (ifInst ""  (formula "36")) (ifInst ""  (formula "37")) (ifInst ""  (formula "38")) (ifInst ""  (formula "39")) (ifInst ""  (formula "40")) (ifInst ""  (formula "32")) (ifInst ""  (formula "9")))
                           (rule "closeTrue" (formula "61"))
                        )
                     )
                  )
               )
               (branch "Exceptional Post (getVerifier)"
                  (builtin "One Step Simplification" (formula "50"))
                  (builtin "One Step Simplification" (formula "30"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,0,1,0,1,1") (ifseqformula "25"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,0,0,1,0,1,1") (ifseqformula "20"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,0,0,0,1,0,1,1") (ifseqformula "16"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,0,0,0,0,1,0,1,1") (ifseqformula "11"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,0,0,0,0,0,1,0,1,1") (ifseqformula "7"))
                  (rule "andLeft" (formula "30"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "1,0") (ifseqformula "30"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0,1,0") (ifseqformula "25"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0,0,1,0") (ifseqformula "20"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0,0,0,1,0") (ifseqformula "16"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0,0,0,0,1,0") (ifseqformula "11"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0,0,0,0,0,1,0") (ifseqformula "7"))
                  (rule "andLeft" (formula "31"))
                  (rule "andLeft" (formula "31"))
                  (rule "andLeft" (formula "33"))
                  (rule "notLeft" (formula "31"))
                  (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "34"))
                  (builtin "One Step Simplification" (formula "32"))
                  (rule "true_left" (formula "32"))
                  (rule "replace_known_right" (formula "32") (term "0,0") (ifseqformula "33"))
                  (builtin "One Step Simplification" (formula "32"))
                  (rule "commute_or_2" (formula "31") (term "0,0"))
                  (rule "commute_or_2" (formula "31") (term "0"))
                  (rule "commute_or_2" (formula "31") (term "0,0,0,0"))
                  (rule "commute_or_2" (formula "31") (term "0,0,0"))
                  (rule "commute_or_2" (formula "31") (term "0,0"))
                  (rule "commute_or_2" (formula "31") (term "0"))
                  (rule "commute_or_2" (formula "31"))
                  (rule "methodCallThrow" (formula "53") (term "1"))
                  (builtin "One Step Simplification" (formula "53"))
                  (rule "tryCatchThrow" (formula "53") (term "1"))
                  (rule "ifElseUnfold" (formula "53") (term "1") (inst "#boolv=x"))
                  (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_5"))
                  (rule "equality_comparison_simple" (formula "53") (term "1"))
                  (builtin "One Step Simplification" (formula "53"))
                  (rule "replace_known_right" (formula "53") (term "0,0,1,0") (ifseqformula "33"))
                  (builtin "One Step Simplification" (formula "53"))
                  (rule "ifElseSplit" (formula "53"))
                  (branch "if x_5 true"
                     (builtin "One Step Simplification" (formula "54"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "if x_5 false"
                     (builtin "One Step Simplification" (formula "54"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "ifElseSplit" (formula "53"))
                     (branch "if exc_5 instanceof java.lang.Throwable true"
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                        (rule "true_left" (formula "1"))
                        (rule "variableDeclaration" (formula "53") (term "1") (newnames "e_5"))
                        (rule "reference_type_cast" (formula "53") (term "1"))
                        (branch "Normal Execution (exc_5 instanceof java.lang.Throwable)"
                           (builtin "One Step Simplification" (formula "54"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "assignment" (formula "53") (term "1"))
                           (builtin "One Step Simplification" (formula "53"))
                           (rule "emptyModality" (formula "53"))
                           (rule "closeTrue" (formula "53"))
                        )
                        (branch "ClassCastException (!(exc_5 instanceof java.lang.Throwable))"
                           (builtin "One Step Simplification" (formula "53"))
                           (rule "closeTrue" (formula "53"))
                        )
                     )
                     (branch "if exc_5 instanceof java.lang.Throwable false"
                        (builtin "One Step Simplification" (formula "54"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
               )
               (branch "Pre (getVerifier)"
                  (builtin "One Step Simplification" (formula "48"))
                  (rule "wellFormedAnonEQ" (formula "48") (ifseqformula "25"))
                  (rule "wellFormedAnonEQ" (formula "48") (term "0") (ifseqformula "20"))
                  (rule "wellFormedAnonEQ" (formula "48") (term "0,0") (ifseqformula "16"))
                  (rule "wellFormedAnonEQ" (formula "48") (term "0,0,0") (ifseqformula "11"))
                  (rule "wellFormedAnonEQ" (formula "48") (term "0,0,0,0") (ifseqformula "7"))
                  (rule "replace_known_left" (formula "48") (term "1,0") (ifseqformula "19"))
                  (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "1")) (ifInst ""  (formula "6")) (ifInst ""  (formula "10")) (ifInst ""  (formula "15")) (ifInst ""  (formula "24")))
                  (rule "closeTrue" (formula "48"))
               )
               (branch "Null reference (precServSign = null)"
                  (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "29")))
                  (rule "closeTrue" (formula "48"))
               )
            )
            (branch "Exceptional Post (Signer)"
               (builtin "One Step Simplification" (formula "38"))
               (builtin "One Step Simplification" (formula "24"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,0,1,0,1,1") (ifseqformula "19"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,0,0,1,0,1,1") (ifseqformula "15"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,0,1,0,1,0,1") (ifseqformula "19"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,0,0,1,0,1,0,1") (ifseqformula "15"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,0,0,0,1,0,1,1") (ifseqformula "10"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,0,0,0,0,1,0,1,1") (ifseqformula "6"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,0,0,0,1,0,1,0,1") (ifseqformula "10"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,0,0,0,0,1,0,1,0,1") (ifseqformula "6"))
               (rule "andLeft" (formula "24"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "1,0,0") (ifseqformula "24"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,1,0,0") (ifseqformula "19"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,0,1,0,0") (ifseqformula "15"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "1,1,0,1,0") (ifseqformula "24"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,0,0,1,0,0") (ifseqformula "10"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,1,1,0,1,0") (ifseqformula "19"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,0,1,1,0,1,0") (ifseqformula "15"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,0,0,0,1,0,0") (ifseqformula "6"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,0,0,1,1,0,1,0") (ifseqformula "10"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,0,0,0,1,1,0,1,0") (ifseqformula "6"))
               (rule "andLeft" (formula "25"))
               (rule "andLeft" (formula "26"))
               (rule "andLeft" (formula "25"))
               (rule "andLeft" (formula "26"))
               (rule "andLeft" (formula "25"))
               (rule "andLeft" (formula "27"))
               (rule "notLeft" (formula "25"))
               (rule "andLeft" (formula "27"))
               (rule "notLeft" (formula "26"))
               (rule "notLeft" (formula "26"))
               (rule "orRight" (formula "30"))
               (rule "orRight" (formula "30"))
               (rule "orRight" (formula "30"))
               (rule "orRight" (formula "30"))
               (rule "replace_known_right" (formula "28") (term "1,0,0,0,0,1") (ifseqformula "32"))
               (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "36")) (ifInst ""  (formula "30")) (ifInst ""  (formula "31")) (ifInst ""  (formula "33")) (ifInst ""  (formula "34")) (ifInst ""  (formula "35")))
               (rule "true_left" (formula "28"))
               (rule "replace_known_right" (formula "28") (term "0,0") (ifseqformula "35"))
               (builtin "One Step Simplification" (formula "28"))
               (rule "replace_known_right" (formula "26") (term "1,0,0,0,0") (ifseqformula "30"))
               (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "29")) (ifInst ""  (formula "31")) (ifInst ""  (formula "32")) (ifInst ""  (formula "33")))
               (rule "commute_or_2" (formula "25") (term "0"))
               (rule "commute_or_2" (formula "25"))
               (rule "commute_or_2" (formula "25") (term "0,0,0"))
               (rule "commute_or_2" (formula "25") (term "0,0"))
               (rule "commute_or_2" (formula "25") (term "0"))
               (rule "commute_or_2" (formula "25"))
               (rule "methodCallThrow" (formula "49") (term "1"))
               (builtin "One Step Simplification" (formula "49"))
               (rule "tryCatchThrow" (formula "49") (term "1"))
               (rule "arrayLengthIsAShort" (formula "4") (term "1,1,0"))
               (builtin "One Step Simplification" (formula "4"))
               (rule "true_left" (formula "4"))
               (rule "arrayLengthNotNegative" (formula "4") (term "1,1,0"))
               (rule "ifElseUnfold" (formula "50") (term "1") (inst "#boolv=x"))
               (rule "variableDeclaration" (formula "50") (term "1") (newnames "x_4"))
               (rule "equality_comparison_simple" (formula "50") (term "1"))
               (builtin "One Step Simplification" (formula "50"))
               (rule "replace_known_right" (formula "50") (term "0,0,1,0") (ifseqformula "36"))
               (builtin "One Step Simplification" (formula "50"))
               (rule "ifElseSplit" (formula "50"))
               (branch "if x_4 true"
                  (builtin "One Step Simplification" (formula "51"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "if x_4 false"
                  (builtin "One Step Simplification" (formula "51"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "ifElseSplit" (formula "50"))
                  (branch "if exc_4 instanceof java.lang.Throwable true"
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                     (rule "true_left" (formula "1"))
                     (rule "variableDeclaration" (formula "50") (term "1") (newnames "e_4"))
                     (rule "reference_type_cast" (formula "50") (term "1"))
                     (branch "Normal Execution (exc_4 instanceof java.lang.Throwable)"
                        (builtin "One Step Simplification" (formula "1"))
                        (builtin "One Step Simplification" (formula "51"))
                        (rule "true_left" (formula "1"))
                        (rule "assignment" (formula "50") (term "1"))
                        (builtin "One Step Simplification" (formula "50"))
                        (rule "emptyModality" (formula "50"))
                        (rule "closeTrue" (formula "50"))
                     )
                     (branch "ClassCastException (!(exc_4 instanceof java.lang.Throwable))"
                        (builtin "One Step Simplification" (formula "50"))
                        (rule "closeTrue" (formula "50"))
                     )
                  )
                  (branch "if exc_4 instanceof java.lang.Throwable false"
                     (builtin "One Step Simplification" (formula "51"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                     (rule "closeFalse" (formula "1"))
                  )
               )
            )
            (branch "Pre (Signer)"
               (builtin "One Step Simplification" (formula "36"))
               (rule "wellFormedAnonEQ" (formula "36") (ifseqformula "19"))
               (rule "wellFormedAnonEQ" (formula "36") (term "0") (ifseqformula "15"))
               (rule "wellFormedAnonEQ" (formula "36") (term "0,0") (ifseqformula "10"))
               (rule "wellFormedAnonEQ" (formula "36") (term "0,0,0") (ifseqformula "6"))
               (rule "replace_known_left" (formula "36") (term "1,0") (ifseqformula "14"))
               (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "1")) (ifInst ""  (formula "5")) (ifInst ""  (formula "9")) (ifInst ""  (formula "18")))
               (rule "closeTrue" (formula "36"))
            )
         )
         (branch "Exceptional Post (Signer)"
            (builtin "One Step Simplification" (formula "28"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "0,0,1,0,1,1") (ifseqformula "15"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "0,0,0,1,0,1,1") (ifseqformula "10"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "0,0,1,0,1,0,1") (ifseqformula "15"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "0,0,0,1,0,1,0,1") (ifseqformula "10"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "0,0,0,0,1,0,1,1") (ifseqformula "6"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "0,0,0,0,1,0,1,0,1") (ifseqformula "6"))
            (rule "andLeft" (formula "19"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "1,0,0") (ifseqformula "19"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "0,1,0,0") (ifseqformula "15"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "0,0,1,0,0") (ifseqformula "10"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "1,1,0,1,0") (ifseqformula "19"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "0,0,0,1,0,0") (ifseqformula "6"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "0,1,1,0,1,0") (ifseqformula "15"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "0,0,1,1,0,1,0") (ifseqformula "10"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "0,0,0,1,1,0,1,0") (ifseqformula "6"))
            (rule "andLeft" (formula "20"))
            (rule "andLeft" (formula "20"))
            (rule "andLeft" (formula "22"))
            (rule "andLeft" (formula "20"))
            (rule "andLeft" (formula "22"))
            (rule "notLeft" (formula "20"))
            (rule "andLeft" (formula "21"))
            (rule "notLeft" (formula "21"))
            (rule "andLeft" (formula "21"))
            (rule "notLeft" (formula "21"))
            (rule "orRight" (formula "25"))
            (rule "orRight" (formula "25"))
            (rule "orRight" (formula "25"))
            (rule "replace_known_right" (formula "23") (term "1,0,0,1") (ifseqformula "28"))
            (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "30")) (ifInst ""  (formula "25")) (ifInst ""  (formula "26")) (ifInst ""  (formula "27")) (ifInst ""  (formula "29")))
            (rule "true_left" (formula "23"))
            (rule "replace_known_right" (formula "23") (term "0,0") (ifseqformula "29"))
            (builtin "One Step Simplification" (formula "23"))
            (rule "replace_known_right" (formula "21") (term "1,0,0") (ifseqformula "26"))
            (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "24")) (ifInst ""  (formula "25")) (ifInst ""  (formula "27")))
            (rule "commute_or_2" (formula "20"))
            (rule "commute_or_2" (formula "20") (term "0,0"))
            (rule "commute_or_2" (formula "20") (term "0"))
            (rule "commute_or_2" (formula "20"))
            (rule "methodCallThrow" (formula "38") (term "1"))
            (builtin "One Step Simplification" (formula "38"))
            (rule "tryCatchThrow" (formula "38") (term "1"))
            (rule "arrayLengthIsAShort" (formula "4") (term "1,1,0"))
            (builtin "One Step Simplification" (formula "4"))
            (rule "true_left" (formula "4"))
            (rule "arrayLengthNotNegative" (formula "4") (term "1,1,0"))
            (rule "ifElseUnfold" (formula "39") (term "1") (inst "#boolv=x"))
            (rule "variableDeclaration" (formula "39") (term "1") (newnames "x_3"))
            (rule "equality_comparison_simple" (formula "39") (term "1"))
            (builtin "One Step Simplification" (formula "39"))
            (rule "replace_known_right" (formula "39") (term "0,0,1,0") (ifseqformula "30"))
            (builtin "One Step Simplification" (formula "39"))
            (rule "ifElseSplit" (formula "39"))
            (branch "if x_3 true"
               (builtin "One Step Simplification" (formula "40"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "if x_3 false"
               (builtin "One Step Simplification" (formula "40"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "ifElseSplit" (formula "39"))
               (branch "if exc_3 instanceof java.lang.Throwable true"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                  (rule "true_left" (formula "1"))
                  (rule "variableDeclaration" (formula "39") (term "1") (newnames "e_3"))
                  (rule "reference_type_cast" (formula "39") (term "1"))
                  (branch "Normal Execution (exc_3 instanceof java.lang.Throwable)"
                     (builtin "One Step Simplification" (formula "1"))
                     (builtin "One Step Simplification" (formula "40"))
                     (rule "true_left" (formula "1"))
                     (rule "assignment" (formula "39") (term "1"))
                     (builtin "One Step Simplification" (formula "39"))
                     (rule "emptyModality" (formula "39"))
                     (rule "closeTrue" (formula "39"))
                  )
                  (branch "ClassCastException (!(exc_3 instanceof java.lang.Throwable))"
                     (builtin "One Step Simplification" (formula "39"))
                     (rule "closeTrue" (formula "39"))
                  )
               )
               (branch "if exc_3 instanceof java.lang.Throwable false"
                  (builtin "One Step Simplification" (formula "40"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
         (branch "Pre (Signer)"
            (builtin "One Step Simplification" (formula "26"))
            (rule "wellFormedAnonEQ" (formula "26") (ifseqformula "15"))
            (rule "wellFormedAnonEQ" (formula "26") (term "0") (ifseqformula "10"))
            (rule "wellFormedAnonEQ" (formula "26") (term "0,0") (ifseqformula "6"))
            (rule "replace_known_left" (formula "26") (term "1,0") (ifseqformula "9"))
            (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "1")) (ifInst ""  (formula "5")) (ifInst ""  (formula "14")))
            (rule "closeTrue" (formula "26"))
         )
      )
      (branch "Exceptional Post (getEncryptor)"
         (builtin "One Step Simplification" (formula "20"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "0,0,1,0,1,1") (ifseqformula "10"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "0,0,0,1,0,1,1") (ifseqformula "6"))
         (rule "andLeft" (formula "15"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "1,0") (ifseqformula "15"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "0,1,0") (ifseqformula "10"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "0,0,1,0") (ifseqformula "6"))
         (rule "andLeft" (formula "16"))
         (rule "andLeft" (formula "17"))
         (rule "andLeft" (formula "16"))
         (rule "notLeft" (formula "16"))
         (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "19"))
         (builtin "One Step Simplification" (formula "17"))
         (rule "true_left" (formula "17"))
         (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "18"))
         (builtin "One Step Simplification" (formula "17"))
         (rule "commute_or_2" (formula "16") (term "0"))
         (rule "commute_or_2" (formula "16"))
         (rule "methodCallThrow" (formula "23") (term "1"))
         (builtin "One Step Simplification" (formula "23"))
         (rule "tryCatchThrow" (formula "23") (term "1"))
         (rule "ifElseUnfold" (formula "23") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "23") (term "1") (newnames "x_2"))
         (rule "equality_comparison_simple" (formula "23") (term "1"))
         (builtin "One Step Simplification" (formula "23"))
         (rule "replace_known_right" (formula "23") (term "0,0,1,0") (ifseqformula "18"))
         (builtin "One Step Simplification" (formula "23"))
         (rule "arrayLengthIsAShort" (formula "4") (term "1,1,0"))
         (builtin "One Step Simplification" (formula "4"))
         (rule "true_left" (formula "4"))
         (rule "arrayLengthNotNegative" (formula "4") (term "1,1,0"))
         (rule "ifElseSplit" (formula "24"))
         (branch "if x_2 true"
            (builtin "One Step Simplification" (formula "25"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch "if x_2 false"
            (builtin "One Step Simplification" (formula "25"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "ifElseSplit" (formula "24"))
            (branch "if exc_2 instanceof java.lang.Throwable true"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
               (rule "true_left" (formula "1"))
               (rule "variableDeclaration" (formula "24") (term "1") (newnames "e_2"))
               (rule "reference_type_cast" (formula "24") (term "1"))
               (branch "Normal Execution (exc_2 instanceof java.lang.Throwable)"
                  (builtin "One Step Simplification" (formula "25"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "assignment" (formula "24") (term "1"))
                  (builtin "One Step Simplification" (formula "24"))
                  (rule "emptyModality" (formula "24"))
                  (rule "closeTrue" (formula "24"))
               )
               (branch "ClassCastException (!(exc_2 instanceof java.lang.Throwable))"
                  (builtin "One Step Simplification" (formula "24"))
                  (rule "closeTrue" (formula "24"))
               )
            )
            (branch "if exc_2 instanceof java.lang.Throwable false"
               (builtin "One Step Simplification" (formula "25"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
      (branch "Pre (getEncryptor)"
         (builtin "One Step Simplification" (formula "18"))
         (rule "wellFormedAnonEQ" (formula "18") (ifseqformula "10"))
         (rule "wellFormedAnonEQ" (formula "18") (term "0") (ifseqformula "6"))
         (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "9"))
         (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "1")) (ifInst ""  (formula "5")))
         (rule "closeTrue" (formula "18"))
      )
      (branch "Null reference (mixDecr = null)"
         (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "14")))
         (rule "closeTrue" (formula "18"))
      )
   )
   (branch "Exceptional Post (Decryptor)"
      (builtin "One Step Simplification" (formula "12"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "10") (term "0,0,1,0,1,1") (ifseqformula "6"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "10") (term "0,0,1,0,1,0,1") (ifseqformula "6"))
      (rule "andLeft" (formula "10"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "1,0,0") (ifseqformula "10"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "0,1,0,0") (ifseqformula "6"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "1,1,0,1,0") (ifseqformula "10"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "0,1,1,0,1,0") (ifseqformula "6"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "12"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "13"))
      (rule "notLeft" (formula "11"))
      (rule "andLeft" (formula "12"))
      (rule "notLeft" (formula "12"))
      (rule "andLeft" (formula "12"))
      (rule "notLeft" (formula "12"))
      (rule "orRight" (formula "16"))
      (rule "replace_known_right" (formula "14") (term "1,0,0,1") (ifseqformula "17"))
      (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "19")) (ifInst ""  (formula "16")) (ifInst ""  (formula "18")))
      (rule "true_left" (formula "14"))
      (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "18"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "replace_known_right" (formula "12") (term "1,0") (ifseqformula "16"))
      (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "15")))
      (rule "commute_or_2" (formula "11"))
      (rule "methodCallThrow" (formula "20") (term "1"))
      (builtin "One Step Simplification" (formula "20"))
      (rule "tryCatchThrow" (formula "20") (term "1"))
      (rule "ifElseUnfold" (formula "20") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_1"))
      (rule "equality_comparison_simple" (formula "20") (term "1"))
      (builtin "One Step Simplification" (formula "20"))
      (rule "replace_known_right" (formula "20") (term "0,0,1,0") (ifseqformula "18"))
      (builtin "One Step Simplification" (formula "20"))
      (rule "arrayLengthIsAShort" (formula "4") (term "1,1,0"))
      (builtin "One Step Simplification" (formula "4"))
      (rule "true_left" (formula "4"))
      (rule "arrayLengthNotNegative" (formula "4") (term "1,1,0"))
      (rule "ifElseSplit" (formula "21"))
      (branch "if x_1 true"
         (builtin "One Step Simplification" (formula "22"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
      (branch "if x_1 false"
         (builtin "One Step Simplification" (formula "22"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "ifElseSplit" (formula "21"))
         (branch "if exc_1 instanceof java.lang.Throwable true"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
            (rule "true_left" (formula "1"))
            (rule "variableDeclaration" (formula "21") (term "1") (newnames "e_1"))
            (rule "reference_type_cast" (formula "21") (term "1"))
            (branch "Normal Execution (exc_1 instanceof java.lang.Throwable)"
               (builtin "One Step Simplification" (formula "1"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "true_left" (formula "1"))
               (rule "assignment" (formula "21") (term "1"))
               (builtin "One Step Simplification" (formula "21"))
               (rule "emptyModality" (formula "21"))
               (rule "closeTrue" (formula "21"))
            )
            (branch "ClassCastException (!(exc_1 instanceof java.lang.Throwable))"
               (builtin "One Step Simplification" (formula "21"))
               (rule "closeTrue" (formula "21"))
            )
         )
         (branch "if exc_1 instanceof java.lang.Throwable false"
            (builtin "One Step Simplification" (formula "22"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
   (branch "Pre (Decryptor)"
      (builtin "One Step Simplification" (formula "10"))
      (rule "wellFormedAnonEQ" (formula "10") (ifseqformula "6"))
      (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "1"))
      (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "5")))
      (rule "closeTrue" (formula "10"))
   )
)
(branch "Exceptional Post (untrustedInputMessage)"
   (builtin "One Step Simplification" (formula "8"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "7") (term "1,0") (ifseqformula "6"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "7"))
   (rule "notLeft" (formula "7"))
   (rule "replace_known_right" (formula "8") (term "0,0") (ifseqformula "9"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "methodCallThrow" (formula "11") (term "1"))
   (rule "tryCatchThrow" (formula "11") (term "1"))
   (rule "ifElseUnfold" (formula "11") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "11") (term "1") (newnames "x"))
   (rule "equality_comparison_simple" (formula "11") (term "1"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "replace_known_right" (formula "11") (term "0,0,1,0") (ifseqformula "9"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "ifElseSplit" (formula "11"))
   (branch "if x true"
      (builtin "One Step Simplification" (formula "12"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch "if x false"
      (builtin "One Step Simplification" (formula "12"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "ifElseSplit" (formula "11"))
      (branch "if exc_0 instanceof java.lang.Throwable true"
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")))
         (rule "true_left" (formula "1"))
         (rule "variableDeclaration" (formula "11") (term "1") (newnames "e"))
         (rule "reference_type_cast" (formula "11") (term "1"))
         (branch "Normal Execution (exc_0 instanceof java.lang.Throwable)"
            (builtin "One Step Simplification" (formula "12"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "assignment" (formula "11") (term "1"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "emptyModality" (formula "11"))
            (rule "closeTrue" (formula "11"))
         )
         (branch "ClassCastException (!(exc_0 instanceof java.lang.Throwable))"
            (builtin "One Step Simplification" (formula "11"))
            (rule "closeTrue" (formula "11"))
         )
      )
      (branch "if exc_0 instanceof java.lang.Throwable false"
         (builtin "One Step Simplification" (formula "12"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")))
         (rule "closeFalse" (formula "1"))
      )
   )
)
(branch "Pre (untrustedInputMessage)"
   (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "1")))
   (rule "closeTrue" (formula "6"))
)
)

}
