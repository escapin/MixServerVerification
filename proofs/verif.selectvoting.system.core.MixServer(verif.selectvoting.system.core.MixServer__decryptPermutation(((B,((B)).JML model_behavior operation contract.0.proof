\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sun Jul 09 12:34:43 CEST 2017
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=\\#begexpand_inByte\\#end,\\#begexpand_inChar\\#end,\\#begexpand_inShort\\#end,\\#begexpand_inInt\\#end,\\#begexpand_inLong\\#end
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=5000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Sun Jul 09 12:34:43 CEST 2017
name=verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer\\:\\:decryptPermutation([[B,[[B)].JML model_behavior operation contract.0
contract=verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer\\:\\:decryptPermutation([[B,[[B)].JML model_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mihai" ) (keyVersion "0814267c8a184b1e7da1309b7a9875095ca72975"))

(autoModeTime "13157")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "msg,res,self,result,heapAtPre,heapBefore,o,f") (userinteraction))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "12"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "12"))
(builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "11")))
(rule "Definition_axiom_for_ghostFieldsPre_in_verif_selectvoting_system_core_MixServer" (formula "7") (term "0") (inst "i=i") (userinteraction))
(builtin "One Step Simplification" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "seqPermDef" (formula "21") (inst "s=s") (inst "iv=iv") (userinteraction))
(rule "andRight" (formula "21") (userinteraction))
(branch "Case 1"
   (rule "array2seq2dDef" (formula "21") (term "0,0") (inst "u=u") (userinteraction))
   (rule "array2seq2dDef" (formula "21") (term "0,1") (inst "u=u") (userinteraction))
   (rule "lenOfSeqDef" (formula "21") (term "0") (userinteraction))
   (rule "lenOfSeqDef" (formula "21") (term "1") (userinteraction))
   (rule "equalityToSeqGetAndSeqLenLeft" (formula "15") (inst "iv=iv") (userinteraction))
   (rule "andLeft" (formula "15") (userinteraction))
   (rule "array2seq2dDef" (formula "15") (term "0,0") (inst "u=u") (userinteraction))
   (rule "array2seq2dDef" (formula "15") (term "0,1") (inst "u=u") (userinteraction))
   (rule "lenOfSeqDef" (formula "15") (term "0") (userinteraction))
   (rule "lenOfSeqDef" (formula "15") (term "1") (userinteraction))
   (builtin "One Step Simplification" (formula "18"))
   (rule "eqSymm" (formula "8") (term "1,0"))
   (rule "eqSymm" (formula "10"))
   (rule "eqSymm" (formula "13"))
   (rule "eqSymm" (formula "23"))
   (rule "eqSymm" (formula "12"))
   (rule "eqSymm" (formula "16") (term "1,0"))
   (rule "eqSymm" (formula "15"))
   (rule "eqSymm" (formula "11"))
   (rule "eqSymm" (formula "14"))
   (rule "eqSymm" (formula "17"))
   (rule "polySimp_elimSub" (formula "23") (term "1,0"))
   (rule "mul_literals" (formula "23") (term "1,1,0"))
   (rule "add_zero_right" (formula "23") (term "1,0"))
   (rule "polySimp_elimSub" (formula "23") (term "1,1"))
   (rule "times_zero_2" (formula "23") (term "1,1,1"))
   (rule "add_zero_right" (formula "23") (term "1,1"))
   (rule "polySimp_elimSub" (formula "15") (term "1,1"))
   (rule "times_zero_2" (formula "15") (term "1,1,1"))
   (rule "add_zero_right" (formula "15") (term "1,1"))
   (rule "polySimp_elimSub" (formula "15") (term "1,0"))
   (rule "times_zero_2" (formula "15") (term "1,1,0"))
   (rule "add_zero_right" (formula "15") (term "1,0"))
   (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0"))
   (rule "add_zero_right" (formula "23") (term "0,0,0"))
   (rule "eqSymm" (formula "23"))
   (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1"))
   (rule "add_zero_right" (formula "15") (term "0,0,1"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0"))
   (rule "add_zero_right" (formula "15") (term "0,0,0"))
   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0"))
   (rule "add_zero_right" (formula "23") (term "0,0,0"))
   (rule "eqSymm" (formula "23"))
   (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
   (rule "applyEq" (formula "16") (term "0,0,1,0") (ifseqformula "17"))
   (builtin "One Step Simplification" (formula "16"))
   (rule "true_left" (formula "16"))
   (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "13"))
   (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "16"))
   (rule "applyEq" (formula "9") (term "0") (ifseqformula "16"))
   (rule "applyEq" (formula "15") (term "0,1,0,0,0") (ifseqformula "13"))
   (rule "applyEq" (formula "10") (term "0,0,0") (ifseqformula "13"))
   (rule "applyEq" (formula "13") (term "1") (ifseqformula "12"))
   (rule "applyEq" (formula "8") (term "0,1,0,0,1,0,0") (ifseqformula "12"))
   (rule "applyEq" (formula "22") (term "1,1") (ifseqformula "14"))
   (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "12"))
   (rule "applyEq" (formula "15") (term "0,1,0,0,0") (ifseqformula "12"))
   (rule "applyEq" (formula "10") (term "0,0,0") (ifseqformula "12"))
   (rule "applyEq" (formula "22") (term "0,1,0,0,1") (ifseqformula "14"))
   (rule "close" (formula "22") (ifseqformula "15"))
)
(branch "Case 2"
   (rule "seqPermDef" (formula "9") (inst "s=s") (inst "iv=iv") (userinteraction))
   (rule "andLeft" (formula "9") (userinteraction))
   (rule "exLeft" (formula "10") (inst "sk=s_0") (userinteraction))
   (rule "andLeft" (formula "10"))
   (rule "andLeft" (formula "10"))
   (rule "array2seq2dDef" (formula "9") (term "0,0") (inst "u=u") (userinteraction))
   (rule "array2seq2dDef" (formula "9") (term "0,1") (inst "u=u") (userinteraction))
   (rule "lenOfSeqDef" (formula "9") (term "0") (userinteraction))
   (rule "lenOfSeqDef" (formula "9") (term "1") (userinteraction))
   (rule "array2seq2dDef" (formula "10") (term "0,1") (inst "u=u") (userinteraction))
   (rule "lenOfSeqDef" (formula "10") (term "1") (userinteraction))
   (rule "exRightHide" (formula "24") (inst "t=s_0") (userinteraction))
   (rule "andRight" (formula "24") (userinteraction))
   (branch "Case 1"
      (rule "replace_known_left" (formula "24") (term "1") (ifseqformula "11") (userinteraction))
      (builtin "One Step Simplification" (formula "24"))
      (rule "array2seq2dDef" (formula "24") (term "0,1") (inst "u=u") (userinteraction))
      (rule "lenOfSeqDef" (formula "24") (term "1") (userinteraction))
      (rule "array2seq2dDef" (formula "18") (term "0") (inst "u=u") (userinteraction))
      (rule "array2seq2dDef" (formula "18") (term "1") (inst "u=u") (userinteraction))
      (rule "equalityToSeqGetAndSeqLen" (formula "18") (inst "iv=iv") (userinteraction))
      (rule "andLeft" (formula "18") (userinteraction))
      (rule "lenOfSeqDef" (formula "18") (term "0") (userinteraction))
      (rule "lenOfSeqDef" (formula "18") (term "1") (userinteraction))
      (builtin "One Step Simplification" (formula "20"))
      (rule "eqSymm" (formula "13"))
      (rule "eqSymm" (formula "19") (term "1,0"))
      (rule "eqSymm" (formula "18"))
      (rule "eqSymm" (formula "8") (term "1,0"))
      (rule "eqSymm" (formula "14"))
      (rule "eqSymm" (formula "15"))
      (rule "eqSymm" (formula "17"))
      (rule "eqSymm" (formula "25"))
      (rule "eqSymm" (formula "10"))
      (rule "eqSymm" (formula "16"))
      (rule "polySimp_elimSub" (formula "9") (term "1,1"))
      (rule "times_zero_2" (formula "9") (term "1,1,1"))
      (rule "add_zero_right" (formula "9") (term "1,1"))
      (rule "polySimp_elimSub" (formula "9") (term "1,0"))
      (rule "times_zero_2" (formula "9") (term "1,1,0"))
      (rule "add_zero_right" (formula "9") (term "1,0"))
      (rule "polySimp_elimSub" (formula "18") (term "1,1"))
      (rule "times_zero_2" (formula "18") (term "1,1,1"))
      (rule "add_zero_right" (formula "18") (term "1,1"))
      (rule "polySimp_elimSub" (formula "18") (term "1,0"))
      (rule "times_zero_2" (formula "18") (term "1,1,0"))
      (rule "add_zero_right" (formula "18") (term "1,0"))
      (rule "polySimp_elimSub" (formula "25") (term "1,0"))
      (rule "times_zero_2" (formula "25") (term "1,1,0"))
      (rule "add_zero_right" (formula "25") (term "1,0"))
      (rule "polySimp_elimSub" (formula "10") (term "1,0"))
      (rule "times_zero_2" (formula "10") (term "1,1,0"))
      (rule "add_zero_right" (formula "10") (term "1,0"))
      (rule "lenOfSeqDef" (formula "19") (term "1,1,0,0"))
      (rule "polySimp_elimSub" (formula "19") (term "1,1,1,0,0"))
      (rule "times_zero_2" (formula "19") (term "1,1,1,1,0,0"))
      (rule "add_zero_right" (formula "19") (term "1,1,1,0,0"))
      (rule "getOfSeqDef" (formula "19") (term "0,1,0"))
      (rule "castDel" (formula "19") (term "1,0,1,0"))
      (rule "castDel" (formula "19") (term "2,0,1,0"))
      (rule "add_zero_right" (formula "19") (term "0,2,1,1,0,1,0"))
      (rule "eqSymm" (formula "19") (term "1,0"))
      (rule "polySimp_elimSub" (formula "19") (term "1,1,0,1,1,0"))
      (rule "times_zero_2" (formula "19") (term "1,1,1,0,1,1,0"))
      (rule "add_zero_right" (formula "19") (term "1,1,0,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0"))
      (rule "add_zero_right" (formula "9") (term "0,0,0"))
      (rule "eqSymm" (formula "9"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0"))
      (rule "add_zero_right" (formula "18") (term "0,0,0"))
      (rule "eqSymm" (formula "18"))
      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0"))
      (rule "add_zero_right" (formula "25") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0"))
      (rule "add_zero_right" (formula "10") (term "0,0,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
      (rule "getOfSeqDef" (formula "19") (term "0,1,0"))
      (rule "castDel" (formula "19") (term "2,0,1,0"))
      (rule "castDel" (formula "19") (term "1,0,1,0"))
      (rule "add_zero_right" (formula "19") (term "0,2,1,1,0,1,0"))
      (rule "eqSymm" (formula "19") (term "1,0"))
      (rule "polySimp_elimSub" (formula "19") (term "1,1,0,1,1,0"))
      (rule "times_zero_2" (formula "19") (term "1,1,1,0,1,1,0"))
      (rule "add_zero_right" (formula "19") (term "1,1,0,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1,1,0,0"))
      (rule "add_zero_right" (formula "19") (term "0,0,1,1,0,0"))
      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0"))
      (rule "add_zero_right" (formula "9") (term "0,0,0"))
      (rule "eqSymm" (formula "9"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0"))
      (rule "add_zero_right" (formula "18") (term "0,0,0"))
      (rule "eqSymm" (formula "18"))
      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,1,0"))
      (rule "eqSymm" (formula "19") (term "1,0"))
      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,1,0"))
      (rule "eqSymm" (formula "19") (term "1,0"))
      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,1,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,1,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,1,0"))
      (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "16"))
      (rule "applyEq" (formula "9") (term "0,1,0,0,0") (ifseqformula "16"))
      (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "16"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "true_left" (formula "9"))
      (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "15"))
      (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "16"))
      (rule "applyEq" (formula "9") (term "0,1,0,0,0") (ifseqformula "15"))
      (rule "applyEq" (formula "17") (term "0,1,0,0,0") (ifseqformula "15"))
      (rule "applyEq" (formula "24") (term "0,1,0,0,0") (ifseqformula "16"))
      (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "15"))
      (rule "applyEq" (formula "15") (term "1") (ifseqformula "14"))
      (rule "applyEq" (formula "8") (term "0,1,0,0,1,0,0") (ifseqformula "14"))
      (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "14"))
      (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "14"))
      (rule "applyEq" (formula "9") (term "0,1,0,0,0") (ifseqformula "14"))
      (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "14"))
      (rule "applyEq" (formula "17") (term "0,1,0,0,0") (ifseqformula "14"))
      (rule "applyEq" (formula "9") (term "0") (ifseqformula "17"))
      (rule "close" (formula "24") (ifseqformula "9"))
   )
   (branch "Case 2"
      (rule "allRight" (formula "24") (inst "sk=iv_0") (userinteraction))
      (rule "impRight" (formula "24") (userinteraction))
      (rule "pullOut" (formula "25") (term "1,1") (inst "sk=intseqGet_0") (userinteraction))
      (rule "array2seq2dDef" (formula "26") (term "0,0") (inst "u=u") (userinteraction))
      (rule "array2seq2dDef" (formula "26") (term "0,1") (inst "u=u") (userinteraction))
      (rule "getOfSeqDef" (formula "26") (term "0") (userinteraction))
      (rule "getOfSeqDef" (formula "26") (term "1") (userinteraction))
      (rule "ifthenelse_split" (formula "26") (term "0") (userinteraction))
      (branch "0 ≤ iv_0 ∧ iv_0 < res.length - 0 TRUE"
         (rule "castDel" (formula "27") (term "0") (userinteraction))
         (rule "add_zero_right" (formula "27") (term "0,2,1,0") (userinteraction))
         (rule "ifthenelse_split" (formula "27") (term "1") (userinteraction))
         (branch "0 ≤ intseqGet_0 ∧ intseqGet_0 < self.chosen.length - 0 TRUE"
            (rule "castDel" (formula "28") (term "1") (userinteraction))
            (rule "add_zero_right" (formula "28") (term "0,2,1,1") (userinteraction))
            (rule "allLeftHide" (formula "23") (inst "t=iv_0") (userinteraction))
            (rule "impLeft" (formula "23") (userinteraction))
            (branch "Case 1"
               (builtin "One Step Simplification" (formula "26"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "3"))
               (rule "andLeft" (formula "6"))
               (rule "eqSymm" (formula "14") (term "1,0"))
               (rule "eqSymm" (formula "19"))
               (rule "eqSymm" (formula "16"))
               (rule "eqSymm" (formula "20"))
               (rule "eqSymm" (formula "21"))
               (rule "eqSymm" (formula "22"))
               (rule "eqSymm" (formula "23"))
               (rule "eqSymm" (formula "24"))
               (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "3"))
               (builtin "One Step Simplification" (formula "28"))
               (rule "polySimp_elimSub" (formula "15") (term "1,0"))
               (rule "mul_literals" (formula "15") (term "1,1,0"))
               (rule "add_zero_right" (formula "15") (term "1,0"))
               (rule "polySimp_elimSub" (formula "15") (term "1,1"))
               (rule "times_zero_2" (formula "15") (term "1,1,1"))
               (rule "add_zero_right" (formula "15") (term "1,1"))
               (rule "polySimp_elimSub" (formula "2") (term "1"))
               (rule "times_zero_2" (formula "2") (term "1,1"))
               (rule "add_zero_right" (formula "2") (term "1"))
               (rule "polySimp_elimSub" (formula "4") (term "1"))
               (rule "mul_literals" (formula "4") (term "1,1"))
               (rule "add_zero_right" (formula "4") (term "1"))
               (rule "polySimp_elimSub" (formula "16") (term "1,0"))
               (rule "mul_literals" (formula "16") (term "1,1,0"))
               (rule "add_zero_right" (formula "16") (term "1,0"))
               (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1"))
               (rule "add_zero_right" (formula "15") (term "0,0,1"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0"))
               (rule "add_zero_right" (formula "15") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
               (rule "inEqSimp_ltRight" (formula "28"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
               (rule "polySimp_addComm0" (formula "1") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "7"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "7") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0"))
               (rule "add_zero_right" (formula "17") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "3"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "5"))
               (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "5") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "2"))
               (rule "inEqSimp_commuteLeq" (formula "4"))
               (rule "applyEq" (formula "5") (term "0,1,0") (ifseqformula "24"))
               (rule "applyEq" (formula "16") (term "0,1,0,0,0") (ifseqformula "23"))
               (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "23"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "true_left" (formula "16"))
               (rule "applyEq" (formula "16") (term "0,1,0,0,0") (ifseqformula "22"))
               (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "24"))
               (rule "applyEq" (formula "18") (term "0,0,1,0") (ifseqformula "24"))
               (rule "eqSymm" (formula "18") (term "1,0"))
               (rule "applyEq" (formula "19") (term "0,0,0") (ifseqformula "22"))
               (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "22"))
               (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "21"))
               (rule "applyEq" (formula "22") (term "1") (ifseqformula "21"))
               (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "21"))
               (rule "applyEq" (formula "19") (term "0,0,0") (ifseqformula "21"))
               (rule "applyEq" (formula "16") (term "0,1,0,0,0") (ifseqformula "21"))
               (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "7"))
               (rule "polySimp_mulLiterals" (formula "7") (term "0"))
               (rule "polySimp_elimOne" (formula "7") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "3"))
               (rule "polySimp_mulLiterals" (formula "3") (term "0"))
               (rule "polySimp_elimOne" (formula "3") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "5"))
               (rule "polySimp_mulLiterals" (formula "5") (term "0"))
               (rule "polySimp_elimOne" (formula "5") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
               (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0"))
               (rule "polySimp_elimOne" (formula "16") (term "0,0,0"))
               (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "5"))
               (rule "andLeft" (formula "1"))
               (rule "inEqSimp_homoInEq1" (formula "1"))
               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "1,1,0"))
               (rule "times_zero_1" (formula "1") (term "1,0"))
               (rule "add_literals" (formula "1") (term "0"))
               (rule "leq_literals" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "Case 2"
               (rule "equalityToSeqGetAndSeqLen" (formula "22") (inst "iv=iv") (userinteraction))
               (rule "andLeft" (formula "22") (userinteraction))
               (rule "array2seq2dDef" (formula "22") (term "0,0") (inst "u=u") (userinteraction))
               (rule "array2seq2dDef" (formula "22") (term "0,1") (inst "u=u") (userinteraction))
               (rule "lenOfSeqDef" (formula "22") (term "0") (userinteraction))
               (rule "lenOfSeqDef" (formula "22") (term "1") (userinteraction))
               (rule "sub_zero_2" (formula "22") (term "1,0") (userinteraction))
               (rule "sub_zero_2" (formula "22") (term "1,1") (userinteraction))
               (rule "allLeftHide" (formula "23") (inst "t=iv_0") (userinteraction))
               (rule "impLeft" (formula "23") (userinteraction))
               (branch "Case 1"
                  (rule "array2seq2dDef" (formula "27") (term "0,1,1") (inst "u=u") (userinteraction))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "3"))
                  (rule "andLeft" (formula "6"))
                  (rule "eqSymm" (formula "14") (term "1,0"))
                  (rule "eqSymm" (formula "19"))
                  (rule "eqSymm" (formula "20"))
                  (rule "eqSymm" (formula "16"))
                  (rule "eqSymm" (formula "21"))
                  (rule "eqSymm" (formula "22"))
                  (rule "eqSymm" (formula "23"))
                  (rule "eqSymm" (formula "24"))
                  (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "3"))
                  (builtin "One Step Simplification" (formula "29"))
                  (rule "polySimp_elimSub" (formula "15") (term "1,0"))
                  (rule "mul_literals" (formula "15") (term "1,1,0"))
                  (rule "add_zero_right" (formula "15") (term "1,0"))
                  (rule "polySimp_elimSub" (formula "15") (term "1,1"))
                  (rule "times_zero_2" (formula "15") (term "1,1,1"))
                  (rule "add_zero_right" (formula "15") (term "1,1"))
                  (rule "polySimp_elimSub" (formula "2") (term "1"))
                  (rule "mul_literals" (formula "2") (term "1,1"))
                  (rule "add_zero_right" (formula "2") (term "1"))
                  (rule "polySimp_elimSub" (formula "4") (term "1"))
                  (rule "mul_literals" (formula "4") (term "1,1"))
                  (rule "add_zero_right" (formula "4") (term "1"))
                  (rule "polySimp_elimSub" (formula "16") (term "1,0"))
                  (rule "mul_literals" (formula "16") (term "1,1,0"))
                  (rule "add_zero_right" (formula "16") (term "1,0"))
                  (rule "lenOfSeqDef" (formula "29") (term "1"))
                  (rule "polySimp_elimSub" (formula "29") (term "1,1"))
                  (rule "mul_literals" (formula "29") (term "1,1,1"))
                  (rule "add_zero_right" (formula "29") (term "1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0"))
                  (rule "add_zero_right" (formula "15") (term "0,0,0"))
                  (rule "eqSymm" (formula "15"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "6"))
                  (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "6") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0"))
                  (rule "add_zero_right" (formula "16") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0"))
                  (rule "add_zero_right" (formula "24") (term "0,0,0"))
                  (rule "eqSymm" (formula "24"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "inEqSimp_ltRight" (formula "29"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "5"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "5") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0"))
                  (rule "add_zero_right" (formula "16") (term "0,0,0"))
                  (rule "eqSymm" (formula "16"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "2"))
                  (rule "inEqSimp_commuteLeq" (formula "4"))
                  (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0"))
                  (rule "add_zero_right" (formula "25") (term "0,0,0"))
                  (rule "eqSymm" (formula "25"))
                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,1,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,0"))
                  (rule "applyEq" (formula "17") (term "0,1,0,0,0") (ifseqformula "23"))
                  (rule "applyEq" (formula "31") (term "0") (ifseqformula "26"))
                  (rule "applyEq" (formula "5") (term "0,1,0") (ifseqformula "24"))
                  (rule "applyEq" (formula "16") (term "0") (ifseqformula "25"))
                  (rule "eqSymm" (formula "16"))
                  (rule "applyEq" (formula "25") (term "0,1,0,0,0") (ifseqformula "23"))
                  (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "23"))
                  (rule "applyEq" (formula "20") (term "0,0,0") (ifseqformula "23"))
                  (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "23"))
                  (rule "applyEq" (formula "17") (term "0,1,0,0,0") (ifseqformula "22"))
                  (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "22"))
                  (rule "applyEq" (formula "23") (term "1") (ifseqformula "22"))
                  (rule "applyEq" (formula "16") (term "0,1,0,0,0") (ifseqformula "22"))
                  (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "22"))
                  (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "22"))
                  (rule "applyEq" (formula "20") (term "0,0,0") (ifseqformula "22"))
                  (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
                  (rule "eqSymm" (formula "16"))
                  (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "16"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                  (rule "polySimp_elimOne" (formula "7") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                  (rule "polySimp_elimOne" (formula "5") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "1"))
                  (rule "andLeft" (formula "7"))
                  (rule "inEqSimp_homoInEq1" (formula "7"))
                  (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                  (rule "add_literals" (formula "7") (term "1,1,0"))
                  (rule "times_zero_1" (formula "7") (term "1,0"))
                  (rule "add_literals" (formula "7") (term "0"))
                  (rule "leq_literals" (formula "7"))
                  (rule "closeFalse" (formula "7"))
               )
               (branch "Case 2"
                  (rule "array2seq2dDef" (formula "23") (term "0,0") (inst "u=u") (userinteraction))
                  (rule "array2seq2dDef" (formula "23") (term "0,1") (inst "u=u") (userinteraction))
                  (rule "getOfSeqDef" (formula "23") (term "0") (userinteraction))
                  (rule "getOfSeqDef" (formula "23") (term "1") (userinteraction))
                  (rule "ifthenelse_split" (formula "23") (term "0") (userinteraction))
                  (branch "0 ≤ iv_0 ∧ iv_0 < msg.length - 0 TRUE"
                     (rule "castDel" (formula "24") (term "0") (userinteraction))
                     (rule "add_zero_right" (formula "24") (term "0,2,1,0") (userinteraction))
                     (rule "ifthenelse_split" (formula "24") (term "1") (userinteraction))
                     (branch "0 ≤ iv_0 ∧ iv_0 < self.sorted.length - 0 TRUE"
                        (rule "castDel" (formula "25") (term "1") (userinteraction))
                        (rule "add_zero_right" (formula "25") (term "0,2,1,1") (userinteraction))
                        (rule "applyEq" (formula "26") (term "0,0,1") (ifseqformula "25") (userinteraction))
                        (rule "allLeftHide" (formula "16") (inst "t=iv_0") (userinteraction))
                        (rule "impLeft" (formula "16") (userinteraction))
                        (branch "Case 1"
                           (rule "close" (formula "29") (ifseqformula "4") (userinteraction))
                        )
                        (branch "Case 2"
                           (rule "array2seq2dDef" (formula "16") (term "0,0") (inst "u=u") (userinteraction))
                           (rule "array2seq2dDef" (formula "16") (term "0,1") (inst "u=u") (userinteraction))
                           (rule "getOfSeqDef" (formula "16") (term "0") (userinteraction))
                           (rule "applyEqRigid" (formula "16") (term "1,1") (ifseqformula "3") (userinteraction))
                           (rule "getOfSeqDef" (formula "16") (term "1") (userinteraction))
                           (rule "ifthenelse_split" (formula "16") (term "0") (userinteraction))
                           (branch "0 ≤ iv_0 ∧ iv_0 < self.sorted.length - 0 TRUE"
                              (rule "castDel" (formula "16") (term "0") (userinteraction))
                              (rule "add_zero_right" (formula "16") (term "0,2,1,0") (userinteraction))
                              (rule "ifthenelse_split" (formula "16") (term "1") (userinteraction))
                              (branch " 0 ≤ intseqGet_0 ∧ intseqGet_0 < self.encrypted.length - 0 TRUE"
                                 (rule "castDel" (formula "17") (term "1") (userinteraction))
                                 (rule "add_zero_right" (formula "17") (term "0,2,1,1") (userinteraction))
                                 (rule "applyEq" (formula "27") (term "0,0,1") (ifseqformula "17") (userinteraction))
                                 (rule "instAll" (formula "27") (term "0,2,1,0,0,1") (ifseqformula "12") (userinteraction))
                                 (rule "impLeft" (formula "27") (userinteraction))
                                 (branch "Case 1"
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "17"))
                                    (rule "andLeft" (formula "26"))
                                    (rule "andLeft" (formula "25"))
                                    (rule "andLeft" (formula "3"))
                                    (rule "andLeft" (formula "5"))
                                    (rule "eqSymm" (formula "13") (term "1,0"))
                                    (rule "eqSymm" (formula "19"))
                                    (rule "eqSymm" (formula "20"))
                                    (rule "eqSymm" (formula "15"))
                                    (rule "eqSymm" (formula "22"))
                                    (rule "eqSymm" (formula "24"))
                                    (rule "eqSymm" (formula "21"))
                                    (rule "eqSymm" (formula "23"))
                                    (rule "eqSymm" (formula "28"))
                                    (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "polySimp_elimSub" (formula "14") (term "1,0"))
                                    (rule "times_zero_2" (formula "14") (term "1,1,0"))
                                    (rule "add_zero_right" (formula "14") (term "1,0"))
                                    (rule "polySimp_elimSub" (formula "14") (term "1,1"))
                                    (rule "times_zero_2" (formula "14") (term "1,1,1"))
                                    (rule "add_zero_right" (formula "14") (term "1,1"))
                                    (rule "polySimp_elimSub" (formula "2") (term "1"))
                                    (rule "times_zero_2" (formula "2") (term "1,1"))
                                    (rule "add_zero_right" (formula "2") (term "1"))
                                    (rule "polySimp_elimSub" (formula "17") (term "1"))
                                    (rule "times_zero_2" (formula "17") (term "1,1"))
                                    (rule "add_zero_right" (formula "17") (term "1"))
                                    (rule "close" (formula "33") (ifseqformula "17"))
                                 )
                                 (branch "Case 2"
                                    (rule "applyEq" (formula "28") (term "0,0,1") (ifseqformula "27") (userinteraction))
                                    (rule "mEncryptLemma" (formula "28") (term "0,1") (userinteraction))
                                    (rule "mSecondofmConcat" (formula "28") (term "1") (userinteraction))
                                    (rule "closeAntec" (formula "28") (ifseqformula "33") (userinteraction))
                                 )
                              )
                              (branch " 0 ≤ intseqGet_0 ∧ intseqGet_0 < self.encrypted.length - 0 FALSE"
                                 (rule "castDel" (formula "16") (term "1"))
                                 (rule "andLeft" (formula "23"))
                                 (rule "andLeft" (formula "25"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "andLeft" (formula "5"))
                                 (rule "eqSymm" (formula "23"))
                                 (rule "eqSymm" (formula "27"))
                                 (rule "eqSymm" (formula "22"))
                                 (rule "eqSymm" (formula "20"))
                                 (rule "eqSymm" (formula "28"))
                                 (rule "eqSymm" (formula "15"))
                                 (rule "eqSymm" (formula "19"))
                                 (rule "eqSymm" (formula "13") (term "1,0"))
                                 (rule "eqSymm" (formula "21"))
                                 (rule "eqSymm" (formula "18"))
                                 (rule "eqSymm" (formula "17"))
                                 (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "polySimp_elimSub" (formula "14") (term "1,1"))
                                 (rule "times_zero_2" (formula "14") (term "1,1,1"))
                                 (rule "add_zero_right" (formula "14") (term "1,1"))
                                 (rule "polySimp_elimSub" (formula "14") (term "1,0"))
                                 (rule "mul_literals" (formula "14") (term "1,1,0"))
                                 (rule "add_zero_right" (formula "14") (term "1,0"))
                                 (rule "polySimp_elimSub" (formula "25") (term "1"))
                                 (rule "times_zero_2" (formula "25") (term "1,1"))
                                 (rule "add_zero_right" (formula "25") (term "1"))
                                 (rule "polySimp_elimSub" (formula "26") (term "1"))
                                 (rule "times_zero_2" (formula "26") (term "1,1"))
                                 (rule "add_zero_right" (formula "26") (term "1"))
                                 (rule "polySimp_elimSub" (formula "2") (term "1"))
                                 (rule "times_zero_2" (formula "2") (term "1,1"))
                                 (rule "add_zero_right" (formula "2") (term "1"))
                                 (rule "polySimp_elimSub" (formula "3") (term "1"))
                                 (rule "times_zero_2" (formula "3") (term "1,1"))
                                 (rule "add_zero_right" (formula "3") (term "1"))
                                 (rule "polySimp_elimSub" (formula "15") (term "1,0"))
                                 (rule "mul_literals" (formula "15") (term "1,1,0"))
                                 (rule "add_zero_right" (formula "15") (term "1,0"))
                                 (rule "polySimp_elimSub" (formula "32") (term "1"))
                                 (rule "mul_literals" (formula "32") (term "1,1"))
                                 (rule "add_zero_right" (formula "32") (term "1"))
                                 (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0"))
                                 (rule "add_zero_right" (formula "14") (term "0,0,0"))
                                 (rule "eqSymm" (formula "14"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0"))
                                 (rule "add_zero_right" (formula "23") (term "0,0,0"))
                                 (rule "eqSymm" (formula "23"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0"))
                                 (rule "add_zero_right" (formula "15") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "25"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "25") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "26"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "26") (term "0"))
                                 (rule "inEqSimp_ltRight" (formula "32"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "25"))
                                 (rule "inEqSimp_commuteLeq" (formula "2"))
                                 (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0"))
                                 (rule "add_zero_right" (formula "15") (term "0,0,0"))
                                 (rule "eqSymm" (formula "15"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0"))
                                 (rule "add_zero_right" (formula "24") (term "0,0,0"))
                                 (rule "eqSymm" (formula "24"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
                                 (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "24") (term "0,1,0,0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "19") (term "0,0,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "27") (term "0,1,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "23"))
                                 (rule "applyEq" (formula "15") (term "0,1,0,0,0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "17") (term "1") (ifseqformula "27"))
                                 (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "20"))
                                 (rule "applyEq" (formula "14") (term "0,1,0,0,0") (ifseqformula "21"))
                                 (builtin "One Step Simplification" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "applyEq" (formula "27") (term "0,0,0") (ifseqformula "26"))
                                 (rule "eqSymm" (formula "27"))
                                 (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "19"))
                                 (rule "applyEq" (formula "20") (term "1") (ifseqformula "19"))
                                 (rule "applyEq" (formula "13") (term "0,1,0,0,1,0,0") (ifseqformula "19"))
                                 (rule "applyEq" (formula "25") (term "0,1,0") (ifseqformula "19"))
                                 (rule "applyEq" (formula "22") (term "0,1,0,0,0") (ifseqformula "19"))
                                 (rule "applyEq" (formula "17") (term "0,0,0") (ifseqformula "19"))
                                 (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "19"))
                                 (rule "applyEq" (formula "32") (term "0") (ifseqformula "27"))
                                 (rule "applyEq" (formula "14") (term "0,1,0,0,0") (ifseqformula "19"))
                                 (rule "applyEq" (formula "22") (term "0") (ifseqformula "14"))
                                 (rule "eqSymm" (formula "22"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                 (rule "polySimp_elimOne" (formula "24") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "0,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0"))
                                 (rule "add_literals" (formula "1") (term "0"))
                                 (rule "leq_literals" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                           (branch "0 ≤ iv_0 ∧ iv_0 < self.sorted.length - 0 FALSE"
                              (rule "close" (formula "30") (ifseqformula "24"))
                           )
                        )
                     )
                     (branch "0 ≤ iv_0 ∧ iv_0 < self.sorted.length - 0 FALSE"
                        (rule "castDel" (formula "24") (term "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "3"))
                        (rule "andLeft" (formula "25"))
                        (rule "andLeft" (formula "6"))
                        (rule "eqSymm" (formula "19"))
                        (rule "eqSymm" (formula "20"))
                        (rule "eqSymm" (formula "21"))
                        (rule "eqSymm" (formula "24"))
                        (rule "eqSymm" (formula "14") (term "1,0"))
                        (rule "eqSymm" (formula "23"))
                        (rule "eqSymm" (formula "22"))
                        (rule "eqSymm" (formula "16"))
                        (rule "eqSymm" (formula "26"))
                        (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "31"))
                        (rule "polySimp_elimSub" (formula "15") (term "1,0"))
                        (rule "mul_literals" (formula "15") (term "1,1,0"))
                        (rule "add_zero_right" (formula "15") (term "1,0"))
                        (rule "polySimp_elimSub" (formula "15") (term "1,1"))
                        (rule "times_zero_2" (formula "15") (term "1,1,1"))
                        (rule "add_zero_right" (formula "15") (term "1,1"))
                        (rule "polySimp_elimSub" (formula "2") (term "1"))
                        (rule "times_zero_2" (formula "2") (term "1,1"))
                        (rule "add_zero_right" (formula "2") (term "1"))
                        (rule "polySimp_elimSub" (formula "4") (term "1"))
                        (rule "times_zero_2" (formula "4") (term "1,1"))
                        (rule "add_zero_right" (formula "4") (term "1"))
                        (rule "polySimp_elimSub" (formula "25") (term "1"))
                        (rule "times_zero_2" (formula "25") (term "1,1"))
                        (rule "add_zero_right" (formula "25") (term "1"))
                        (rule "polySimp_elimSub" (formula "16") (term "1,0"))
                        (rule "mul_literals" (formula "16") (term "1,1,0"))
                        (rule "add_zero_right" (formula "16") (term "1,0"))
                        (rule "polySimp_elimSub" (formula "31") (term "1"))
                        (rule "mul_literals" (formula "31") (term "1,1"))
                        (rule "add_zero_right" (formula "31") (term "1"))
                        (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0"))
                        (rule "add_zero_right" (formula "15") (term "0,0,0"))
                        (rule "eqSymm" (formula "15"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "6"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "6") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0"))
                        (rule "add_zero_right" (formula "24") (term "0,0,0"))
                        (rule "eqSymm" (formula "24"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0"))
                        (rule "add_zero_right" (formula "16") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "inEqSimp_ltRight" (formula "31"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "5"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "5") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "26"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "26") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0"))
                        (rule "add_zero_right" (formula "16") (term "0,0,0"))
                        (rule "eqSymm" (formula "16"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "2"))
                        (rule "inEqSimp_commuteLeq" (formula "4"))
                        (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0"))
                        (rule "add_zero_right" (formula "25") (term "0,0,0"))
                        (rule "eqSymm" (formula "25"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                        (rule "applyEq" (formula "16") (term "0") (ifseqformula "25"))
                        (rule "eqSymm" (formula "16"))
                        (rule "applyEq" (formula "25") (term "0") (ifseqformula "17"))
                        (rule "eqSymm" (formula "25"))
                        (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "23"))
                        (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "23"))
                        (rule "applyEq" (formula "5") (term "0,1,0") (ifseqformula "24"))
                        (rule "applyEq" (formula "16") (term "0,1,0,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "32") (term "0") (ifseqformula "27"))
                        (rule "applyEq" (formula "19") (term "0,0,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "21"))
                        (rule "applyEq" (formula "22") (term "1") (ifseqformula "21"))
                        (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "21"))
                        (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "21"))
                        (rule "applyEq" (formula "15") (term "0,1,0,0,0") (ifseqformula "21"))
                        (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "21"))
                        (rule "applyEq" (formula "19") (term "0,0,0") (ifseqformula "21"))
                        (rule "applyEq" (formula "16") (term "0,1,0,0,0") (ifseqformula "21"))
                        (rule "applyEq" (formula "15") (term "1") (ifseqformula "24"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                        (rule "polySimp_elimOne" (formula "6") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                        (rule "polySimp_elimOne" (formula "24") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "23") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "0,0,0"))
                        (rule "array2seqDef" (formula "26") (term "0") (inst "u=u"))
                        (rule "nonNull" (formula "29") (inst "i=i"))
                        (rule "sub_literals" (formula "29") (term "2,1,0,1,1"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "greater_literals" (formula "29") (term "0,1"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "andLeft" (formula "29"))
                        (rule "notLeft" (formula "29"))
                        (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "30"))
                        (builtin "One Step Simplification" (formula "11"))
                        (rule "narrowSelectArrayType" (formula "29") (term "0,0,1,0") (ifseqformula "7") (ifseqformula "30"))
                        (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                        (rule "applyEq" (formula "29") (term "0,1,0,0,1,0,0") (ifseqformula "22"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                        (rule "nonNull" (formula "28") (inst "i=i"))
                        (rule "greater_literals" (formula "28") (term "0,1"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "sub_literals" (formula "28") (term "2,1,0,1"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "andLeft" (formula "28"))
                        (rule "notLeft" (formula "28"))
                        (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "30"))
                        (builtin "One Step Simplification" (formula "10"))
                        (rule "narrowSelectArrayType" (formula "28") (term "0,0,1,0") (ifseqformula "7") (ifseqformula "30"))
                        (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                        (rule "array2seqDef" (formula "26") (term "0,0,1") (inst "u=u"))
                        (rule "array2seqDef" (formula "33") (term "1") (inst "u=u"))
                        (rule "eqSymm" (formula "33"))
                        (rule "array2seqDef" (formula "18") (term "1") (inst "u=u"))
                        (rule "eqSymm" (formula "18"))
                        (rule "array2seqDef" (formula "19") (term "0,0") (inst "u=u"))
                        (rule "array2seqDef" (formula "19") (term "1") (inst "u=u"))
                        (rule "array2seqDef" (formula "19") (term "0,1,0") (inst "u=u"))
                        (rule "array2seqDef" (formula "19") (term "1,1,0") (inst "u=u"))
                        (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "18"))
                        (rule "array2seqDef" (formula "14") (term "1,1,0") (inst "u=u"))
                        (rule "eqSymm" (formula "14") (term "1,0"))
                        (rule "array2seqDef" (formula "25") (term "1") (inst "u=u"))
                        (rule "eqSymm" (formula "25"))
                        (rule "applyEq" (formula "26") (term "0,0,1") (ifseqformula "25"))
                        (rule "array2seqDef" (formula "33") (term "0,0,1") (inst "u=u"))
                        (rule "eqSymm" (formula "33"))
                        (rule "applyEq" (formula "33") (term "0,0,0") (ifseqformula "25"))
                        (rule "eqSymm" (formula "33"))
                        (rule "eqSeqDef" (formula "19") (inst "iv=iv"))
                        (rule "andLeft" (formula "19"))
                        (rule "getOfSeqDef" (formula "20") (term "1,1,0"))
                        (rule "castDel" (formula "20") (term "1,1,1,0"))
                        (rule "castDel" (formula "20") (term "2,1,1,0"))
                        (rule "add_zero_right" (formula "20") (term "0,2,1,1,1,0"))
                        (rule "polySimp_elimSub" (formula "20") (term "1,1,0,1,1,0"))
                        (rule "mul_literals" (formula "20") (term "1,1,1,0,1,1,0"))
                        (rule "add_zero_right" (formula "20") (term "1,1,0,1,1,0"))
                        (rule "lenOfSeqDef" (formula "19") (term "1"))
                        (rule "polySimp_elimSub" (formula "19") (term "1,1"))
                        (rule "mul_literals" (formula "19") (term "1,1,1"))
                        (rule "add_zero_right" (formula "19") (term "1,1"))
                        (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                        (rule "polySimp_addComm1" (formula "20") (term "0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1"))
                        (rule "add_zero_right" (formula "19") (term "0,0,1"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,1,1,0"))
                        (rule "applyEq" (formula "20") (term "0,1,0,1,0,0") (ifseqformula "19"))
                        (rule "polySimp_addComm1" (formula "20") (term "0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "1,1,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,1,1,0"))
                        (rule "mul_literals" (formula "20") (term "0,1,1,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,1,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1"))
                        (rule "polySimp_elimOne" (formula "19") (term "0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,1,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "0,0,1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "20") (term "0,0,1,1,1,0,0"))
                        (rule "array2seqDef" (formula "14") (term "1,0,1,1,0") (inst "u=u"))
                        (rule "array2seqDef" (formula "14") (term "0,0,1,1,0") (inst "u=u"))
                        (rule "equalityToSeqGetAndSeqLenRight" (formula "34") (inst "iv=iv"))
                        (rule "lenOfSeqDef" (formula "34") (term "1,1,0,0,1"))
                        (rule "polySimp_elimSub" (formula "34") (term "1,1,1,0,0,1"))
                        (rule "times_zero_2" (formula "34") (term "1,1,1,1,0,0,1"))
                        (rule "add_zero_right" (formula "34") (term "1,1,1,0,0,1"))
                        (rule "getOfSeqDef" (formula "34") (term "0,1,0,1"))
                        (rule "castDel" (formula "34") (term "1,0,1,0,1"))
                        (rule "castDel" (formula "34") (term "2,0,1,0,1"))
                        (rule "add_zero_right" (formula "34") (term "0,2,1,0,1,0,1"))
                        (rule "polySimp_elimSub" (formula "34") (term "1,1,0,0,1,0,1"))
                        (rule "times_zero_2" (formula "34") (term "1,1,1,0,0,1,0,1"))
                        (rule "add_zero_right" (formula "34") (term "1,1,0,0,1,0,1"))
                        (rule "lenOfSeqDef" (formula "34") (term "0,0"))
                        (rule "polySimp_elimSub" (formula "34") (term "1,0,0"))
                        (rule "times_zero_2" (formula "34") (term "1,1,0,0"))
                        (rule "add_zero_right" (formula "34") (term "1,0,0"))
                        (rule "lenOfSeqDefEQ" (formula "34") (term "1,0") (ifseqformula "27"))
                        (rule "polySimp_elimSub" (formula "34") (term "1,1,0"))
                        (rule "times_zero_2" (formula "34") (term "1,1,1,0"))
                        (rule "add_zero_right" (formula "34") (term "1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "34") (term "0,1,1,0,0,1"))
                        (rule "add_zero_right" (formula "34") (term "0,0,1,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,1,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,1,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,0"))
                        (rule "add_zero_right" (formula "34") (term "0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,1,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "34") (term "0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,1,0,1"))
                        (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,1,0,1"))
                        (rule "mul_literals" (formula "34") (term "0,1,1,0,0,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,1,0,1"))
                        (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,1,0,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0,0"))
                        (rule "eqSymm" (formula "34") (term "0"))
                        (rule "polySimp_elimOne" (formula "34") (term "0,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,0,1,0,0,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0,1,0,0,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "34") (term "0,0,0,1,0,0,1,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,1"))
                        (rule "mul_literals" (formula "34") (term "0,1,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,1"))
                        (rule "eqSeqDef2" (formula "18") (inst "iv=iv") (ifseqformula "18"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "true_left" (formula "18"))
                        (rule "eqSeqDef2" (formula "26") (inst "iv=iv") (ifseqformula "26"))
                        (builtin "One Step Simplification" (formula "26"))
                        (rule "true_left" (formula "26"))
                        (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                        (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                        (rule "mul_literals" (formula "3") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1"))
                        (rule "polySimp_rightDist" (formula "3") (term "1"))
                        (rule "mul_literals" (formula "3") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                        (rule "nnf_imp2or" (formula "18") (term "0"))
                        (rule "nnf_imp2or" (formula "29") (term "0"))
                        (rule "nnf_imp2or" (formula "28") (term "0"))
                        (rule "nnf_imp2or" (formula "20") (term "0"))
                        (rule "nnf_imp2or" (formula "15") (term "0"))
                        (rule "Definition_axiom_for_ghostFieldsNonNull_in_verif_selectvoting_system_core_MixServer" (formula "14") (term "0") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "andLeft" (formula "14"))
                        (rule "andLeft" (formula "14"))
                        (rule "andLeft" (formula "14"))
                        (rule "andLeft" (formula "14"))
                        (rule "andLeft" (formula "14"))
                        (rule "notLeft" (formula "16"))
                        (rule "notLeft" (formula "15"))
                        (rule "andLeft" (formula "14"))
                        (rule "andLeft" (formula "14"))
                        (rule "notLeft" (formula "16"))
                        (rule "notLeft" (formula "14"))
                        (rule "notLeft" (formula "14"))
                        (rule "narrowSelectArrayType" (formula "22") (term "1,1,1,0") (ifseqformula "8") (ifseqformula "36"))
                        (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                        (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "24"))
                        (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "23"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                        (rule "nnf_imp2or" (formula "40") (term "0,1"))
                        (rule "nnf_notAnd" (formula "20") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
                        (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                        (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "31") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
                        (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "31") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                        (rule "mul_literals" (formula "31") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "30") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
                        (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "30") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                        (rule "mul_literals" (formula "30") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "22") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
                        (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                        (rule "mul_literals" (formula "22") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "17") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                        (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                        (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                        (rule "nnf_imp2or" (formula "14") (term "0"))
                        (rule "nnf_imp2or" (formula "16") (term "0"))
                        (rule "nnf_imp2or" (formula "15") (term "0"))
                        (rule "nnf_notAnd" (formula "40") (term "0,0,1"))
                        (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0,1"))
                        (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0,1"))
                        (rule "add_literals" (formula "40") (term "0,0,0,1,0,0,1"))
                        (rule "add_zero_left" (formula "40") (term "0,0,1,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,1"))
                        (rule "inEqSimp_notGeq" (formula "40") (term "0,0,0,1"))
                        (rule "times_zero_1" (formula "40") (term "1,0,0,0,0,0,1"))
                        (rule "add_literals" (formula "40") (term "0,0,0,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,1"))
                        (rule "mul_literals" (formula "40") (term "1,0,0,0,1"))
                        (rule "nnf_notAnd" (formula "14") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                        (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                        (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "16") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                        (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                        (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "15") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                        (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                        (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                        (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "29") (ifseqformula "10"))
                        (rule "andLeft" (formula "29"))
                        (rule "notLeft" (formula "30"))
                        (rule "andLeft" (formula "29"))
                        (rule "andLeft" (formula "29"))
                        (rule "notLeft" (formula "31"))
                        (rule "andLeft" (formula "29"))
                        (rule "notLeft" (formula "31"))
                        (rule "notLeft" (formula "30"))
                        (rule "andLeft" (formula "29"))
                        (rule "andLeft" (formula "29"))
                        (rule "andLeft" (formula "29"))
                        (rule "andLeft" (formula "29"))
                        (rule "notLeft" (formula "30"))
                        (rule "notLeft" (formula "29"))
                        (rule "narrowSelectArrayType" (formula "17") (term "2,0,0,1,1,0") (ifseqformula "8") (ifseqformula "37"))
                        (rule "narrowSelectArrayType" (formula "21") (term "2,0,1,0,0") (ifseqformula "8") (ifseqformula "37"))
                        (rule "narrowSelectArrayType" (formula "22") (term "2,0,1,0,0,1,0") (ifseqformula "8") (ifseqformula "37"))
                        (rule "nonNull" (formula "31") (inst "i=i"))
                        (rule "greater_literals" (formula "31") (term "0,1"))
                        (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "39")))
                        (rule "sub_literals" (formula "31") (term "2,1,0"))
                        (builtin "One Step Simplification" (formula "31"))
                        (rule "narrowSelectArrayType" (formula "31") (term "0,0,1,0") (ifseqformula "8") (ifseqformula "39"))
                        (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                        (rule "nonNull" (formula "30") (inst "i=i"))
                        (rule "greater_literals" (formula "30") (term "0,1"))
                        (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "38")))
                        (rule "sub_literals" (formula "30") (term "2,1,0"))
                        (builtin "One Step Simplification" (formula "30"))
                        (rule "narrowSelectArrayType" (formula "30") (term "0,0,1,0") (ifseqformula "8") (ifseqformula "38"))
                        (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                        (rule "applyEq" (formula "30") (term "0,1,0,0,1,0,0") (ifseqformula "23"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                        (rule "nonNull" (formula "29") (inst "i=i"))
                        (rule "sub_literals" (formula "29") (term "2,1,0,1,1"))
                        (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "40")))
                        (rule "greater_literals" (formula "29") (term "0"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "narrowSelectArrayType" (formula "29") (term "0,0,1,0") (ifseqformula "8") (ifseqformula "40"))
                        (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                        (rule "applyEq" (formula "29") (term "0,1,0,0,1,0,0") (ifseqformula "24"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                        (rule "nnf_imp2or" (formula "31") (term "0"))
                        (rule "nnf_imp2or" (formula "30") (term "0"))
                        (rule "nnf_imp2or" (formula "29") (term "0"))
                        (rule "nnf_notAnd" (formula "31") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
                        (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "31") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                        (rule "mul_literals" (formula "31") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "30") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
                        (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "30") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                        (rule "mul_literals" (formula "30") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "29") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0"))
                        (rule "mul_literals" (formula "29") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "29") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                        (rule "mul_literals" (formula "29") (term "1,0,0,0"))
                        (rule "seqGetAlphaCast" (formula "6") (term "0"))
                        (rule "castedGetAny" (formula "6") (term "0"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "true_left" (formula "6"))
                        (rule "arrayLengthNotNegative" (formula "23") (term "1"))
                        (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "1"))
                        (rule "mul_literals" (formula "23") (term "0,0"))
                        (rule "add_zero_left" (formula "23") (term "0"))
                        (rule "arrayLengthNotNegative" (formula "24") (term "0"))
                        (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                        (rule "arrayLengthIsAShort" (formula "24") (term "0"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "true_left" (formula "24"))
                        (rule "arrayLengthIsAShort" (formula "24") (term "1"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "true_left" (formula "24"))
                        (rule "arrayLengthIsAShort" (formula "26") (term "1"))
                        (builtin "One Step Simplification" (formula "26"))
                        (rule "true_left" (formula "26"))
                        (rule "arrayLengthNotNegative" (formula "26") (term "0"))
                        (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                        (rule "arrayLengthNotNegative" (formula "27") (term "1"))
                        (rule "arrayLengthIsAShort" (formula "27") (term "0"))
                        (builtin "One Step Simplification" (formula "27"))
                        (rule "true_left" (formula "27"))
                        (rule "arrayLengthIsAShort" (formula "25") (term "0"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "true_left" (formula "25"))
                        (rule "arrayLengthNotNegative" (formula "25") (term "0"))
                        (rule "applyEq" (formula "25") (term "0") (ifseqformula "26"))
                        (rule "lenNonNegative" (formula "18") (term "1"))
                        (rule "inEqSimp_commuteLeq" (formula "18"))
                        (rule "commute_or_2" (formula "21") (term "0"))
                        (rule "ifthenelse_split" (formula "29") (term "0"))
                        (branch "msg.length ≥ 1 TRUE"
                           (rule "eqSymm" (formula "30"))
                           (rule "applyEq" (formula "7") (term "0") (ifseqformula "30"))
                           (rule "applyEq" (formula "17") (term "0") (ifseqformula "29"))
                           (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "28"))
                           (rule "applyEq" (formula "17") (term "1") (ifseqformula "28"))
                           (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "27"))
                           (rule "leq_literals" (formula "25") (term "0"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "true_left" (formula "25"))
                           (rule "commute_or_2" (formula "31") (term "0"))
                           (rule "ifthenelse_split" (formula "17") (term "0"))
                           (branch "self.chosen.length ≥ 1 TRUE"
                              (rule "applyEq" (formula "15") (term "1,1,0,0") (ifseqformula "18"))
                              (rule "applyEq" (formula "13") (term "1,1,0,0") (ifseqformula "18"))
                              (rule "applyEq" (formula "21") (term "0,0,1,1,0,0") (ifseqformula "18"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "18"))
                              (rule "applyEq" (formula "14") (term "1,1,0,0") (ifseqformula "18"))
                              (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "17"))
                              (rule "applyEq" (formula "21") (term "0,0,1,1,0,0,1,0") (ifseqformula "17"))
                              (rule "applyEq" (formula "22") (term "0") (ifseqformula "17"))
                              (rule "applyEq" (formula "16") (term "1,1,0,0") (ifseqformula "17"))
                              (rule "applyEq" (formula "23") (term "1") (ifseqformula "17"))
                              (rule "applyEq" (formula "24") (term "1") (ifseqformula "17"))
                              (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "26"))
                              (rule "leq_literals" (formula "22") (term "0"))
                              (builtin "One Step Simplification" (formula "22"))
                              (rule "true_left" (formula "22"))
                              (rule "inEqSimp_contradInEq0" (formula "27") (ifseqformula "1"))
                              (rule "andLeft" (formula "27"))
                              (rule "inEqSimp_homoInEq1" (formula "27"))
                              (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                              (rule "add_literals" (formula "27") (term "1,1,0"))
                              (rule "times_zero_1" (formula "27") (term "1,0"))
                              (rule "add_zero_right" (formula "27") (term "0"))
                              (rule "leq_literals" (formula "27"))
                              (rule "closeFalse" (formula "27"))
                           )
                           (branch "self.chosen.length ≥ 1 FALSE"
                              (rule "eqSymm" (formula "17"))
                              (rule "inEqSimp_geqRight" (formula "32"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "applyEq" (formula "31") (term "1,1,0,0") (ifseqformula "18"))
                              (rule "applyEq" (formula "29") (term "0") (ifseqformula "18"))
                              (rule "inEqSimp_homoInEq1" (formula "29"))
                              (rule "times_zero_2" (formula "29") (term "1,0"))
                              (rule "add_zero_right" (formula "29") (term "0"))
                              (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "18"))
                              (rule "applyEq" (formula "27") (term "0") (ifseqformula "18"))
                              (rule "qeq_literals" (formula "27"))
                              (rule "closeFalse" (formula "27"))
                           )
                        )
                        (branch "msg.length ≥ 1 FALSE"
                           (rule "eqSymm" (formula "29"))
                           (rule "inEqSimp_geqRight" (formula "34"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "30"))
                           (rule "applyEqRigid" (formula "19") (term "0") (ifseqformula "30"))
                           (rule "qeq_literals" (formula "19"))
                           (rule "true_left" (formula "19"))
                           (rule "applyEq" (formula "8") (term "0") (ifseqformula "29"))
                           (rule "inEqSimp_homoInEq1" (formula "8"))
                           (rule "mul_literals" (formula "8") (term "1,0"))
                           (rule "add_zero_right" (formula "8") (term "0"))
                           (rule "applyEq" (formula "19") (term "1") (ifseqformula "29"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                           (rule "mul_literals" (formula "8") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "8") (ifseqformula "6"))
                           (rule "qeq_literals" (formula "8") (term "0"))
                           (builtin "One Step Simplification" (formula "8"))
                           (rule "closeFalse" (formula "8"))
                        )
                     )
                  )
                  (branch "0 ≤ iv_0 ∧ iv_0 < msg.length - 0 FALSE"
                     (rule "castDel" (formula "23") (term "0"))
                     (rule "castDel" (formula "23") (term "1,1"))
                     (rule "castDel" (formula "23") (term "2,1"))
                     (rule "add_zero_right" (formula "23") (term "0,2,1,1,1"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "3"))
                     (rule "andLeft" (formula "6"))
                     (rule "eqSymm" (formula "19"))
                     (rule "eqSymm" (formula "20"))
                     (rule "eqSymm" (formula "21"))
                     (rule "eqSymm" (formula "16"))
                     (rule "eqSymm" (formula "14") (term "1,0"))
                     (rule "eqSymm" (formula "22"))
                     (rule "eqSymm" (formula "23"))
                     (rule "eqSymm" (formula "24"))
                     (rule "eqSymm" (formula "25"))
                     (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "3")))
                     (rule "eqSymm" (formula "25") (term "1"))
                     (rule "replace_known_left" (formula "30") (term "0") (ifseqformula "3"))
                     (builtin "One Step Simplification" (formula "30"))
                     (rule "polySimp_elimSub" (formula "15") (term "1,0"))
                     (rule "times_zero_2" (formula "15") (term "1,1,0"))
                     (rule "add_zero_right" (formula "15") (term "1,0"))
                     (rule "polySimp_elimSub" (formula "15") (term "1,1"))
                     (rule "times_zero_2" (formula "15") (term "1,1,1"))
                     (rule "add_zero_right" (formula "15") (term "1,1"))
                     (rule "polySimp_elimSub" (formula "2") (term "1"))
                     (rule "times_zero_2" (formula "2") (term "1,1"))
                     (rule "add_zero_right" (formula "2") (term "1"))
                     (rule "polySimp_elimSub" (formula "4") (term "1"))
                     (rule "times_zero_2" (formula "4") (term "1,1"))
                     (rule "add_zero_right" (formula "4") (term "1"))
                     (rule "polySimp_elimSub" (formula "16") (term "1,0"))
                     (rule "times_zero_2" (formula "16") (term "1,1,0"))
                     (rule "add_zero_right" (formula "16") (term "1,0"))
                     (rule "polySimp_elimSub" (formula "25") (term "1,0,0"))
                     (rule "times_zero_2" (formula "25") (term "1,1,0,0"))
                     (rule "add_zero_right" (formula "25") (term "1,0,0"))
                     (rule "polySimp_elimSub" (formula "30") (term "1"))
                     (rule "times_zero_2" (formula "30") (term "1,1"))
                     (rule "add_zero_right" (formula "30") (term "1"))
                     (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0"))
                     (rule "add_zero_right" (formula "15") (term "0,0,0"))
                     (rule "eqSymm" (formula "15"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "6"))
                     (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "6") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0"))
                     (rule "add_zero_right" (formula "16") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "24") (term "0,1"))
                     (rule "add_zero_right" (formula "24") (term "0,0,1"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0"))
                     (rule "add_zero_right" (formula "24") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "inEqSimp_ltRight" (formula "30"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "5"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "5") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "26") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0"))
                     (rule "add_zero_right" (formula "16") (term "0,0,0"))
                     (rule "eqSymm" (formula "16"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "2"))
                     (rule "inEqSimp_commuteLeq" (formula "4"))
                     (rule "applyEq" (formula "25") (term "0,1,0,0,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "32") (term "0") (ifseqformula "27"))
                     (rule "applyEq" (formula "20") (term "0,0,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "5") (term "0,1,0") (ifseqformula "24"))
                     (rule "applyEq" (formula "26") (term "0,1,0,0,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "16") (term "0,1,0,0,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "23"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "true_left" (formula "16"))
                     (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "22"))
                     (rule "applyEq" (formula "16") (term "0,1,0,0,0") (ifseqformula "22"))
                     (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "22"))
                     (rule "applyEq" (formula "22") (term "1") (ifseqformula "21"))
                     (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "21"))
                     (rule "applyEq" (formula "24") (term "0,1,0,0,0") (ifseqformula "21"))
                     (rule "applyEq" (formula "25") (term "0,1,0,0,0") (ifseqformula "21"))
                     (rule "applyEq" (formula "19") (term "0,0,0") (ifseqformula "21"))
                     (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "21"))
                     (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "21"))
                     (rule "applyEq" (formula "16") (term "0,1,0,0,0") (ifseqformula "21"))
                     (rule "applyEq" (formula "16") (term "0") (ifseqformula "24"))
                     (rule "applyEq" (formula "24") (term "1") (ifseqformula "16"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                     (rule "polySimp_elimOne" (formula "7") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                     (rule "polySimp_elimOne" (formula "5") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0"))
                     (rule "polySimp_elimOne" (formula "24") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0"))
                     (rule "polySimp_elimOne" (formula "25") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0"))
                     (rule "polySimp_elimOne" (formula "16") (term "0,0,0"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "5"))
                     (rule "andLeft" (formula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "1"))
                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "1,1,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0"))
                     (rule "add_literals" (formula "1") (term "0"))
                     (rule "leq_literals" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
            )
         )
         (branch "0 ≤ intseqGet_0 ∧ intseqGet_0 < self.chosen.length - 0 FALSE"
            (rule "seqNPermRange" (formula "14") (inst "iv=iv") (userinteraction))
            (rule "equalityToSeqGetAndSeqLen" (formula "22") (inst "iv=iv") (userinteraction))
            (rule "andLeft" (formula "22") (userinteraction))
            (rule "array2seq2dDef" (formula "22") (term "0,0") (inst "u=u") (userinteraction))
            (rule "array2seq2dDef" (formula "22") (term "0,1") (inst "u=u") (userinteraction))
            (builtin "One Step Simplification" (formula "24"))
            (rule "castDel" (formula "30") (term "1"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "4"))
            (rule "eqSymm" (formula "12") (term "1,0"))
            (rule "eqSymm" (formula "20"))
            (rule "eqSymm" (formula "22"))
            (rule "eqSymm" (formula "18"))
            (rule "eqSymm" (formula "24") (term "1,0"))
            (rule "eqSymm" (formula "23"))
            (rule "eqSymm" (formula "21"))
            (rule "eqSymm" (formula "14"))
            (rule "eqSymm" (formula "19"))
            (rule "eqSymm" (formula "31"))
            (rule "polySimp_elimSub" (formula "13") (term "1,0"))
            (rule "times_zero_2" (formula "13") (term "1,1,0"))
            (rule "add_zero_right" (formula "13") (term "1,0"))
            (rule "polySimp_elimSub" (formula "30") (term "1,1"))
            (rule "times_zero_2" (formula "30") (term "1,1,1"))
            (rule "add_zero_right" (formula "30") (term "1,1"))
            (rule "polySimp_elimSub" (formula "13") (term "1,1"))
            (rule "times_zero_2" (formula "13") (term "1,1,1"))
            (rule "add_zero_right" (formula "13") (term "1,1"))
            (rule "polySimp_elimSub" (formula "2") (term "1"))
            (rule "times_zero_2" (formula "2") (term "1,1"))
            (rule "add_zero_right" (formula "2") (term "1"))
            (rule "polySimp_elimSub" (formula "14") (term "1,0"))
            (rule "times_zero_2" (formula "14") (term "1,1,0"))
            (rule "add_zero_right" (formula "14") (term "1,0"))
            (rule "lenOfSeqDef" (formula "23") (term "0"))
            (rule "eqSymm" (formula "23"))
            (rule "polySimp_elimSub" (formula "23") (term "1,1"))
            (rule "times_zero_2" (formula "23") (term "1,1,1"))
            (rule "add_zero_right" (formula "23") (term "1,1"))
            (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "15") (term "1,1,0"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0"))
            (rule "add_zero_right" (formula "13") (term "0,0,0"))
            (rule "eqSymm" (formula "13"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "4"))
            (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "4") (term "0"))
            (rule "lenOfSeqDef" (formula "23") (term "0"))
            (rule "eqSymm" (formula "23"))
            (rule "polySimp_elimSub" (formula "23") (term "1,1"))
            (rule "mul_literals" (formula "23") (term "1,1,1"))
            (rule "add_zero_right" (formula "23") (term "1,1"))
            (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0"))
            (rule "add_zero_right" (formula "14") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "30") (term "1"))
            (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1"))
            (rule "polySimp_addComm1" (formula "30") (term "0,1"))
            (rule "inEqSimp_ltToLeq" (formula "2"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "2") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "15") (term "0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "30") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "1"))
            (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0"))
            (rule "add_zero_right" (formula "13") (term "0,0,0"))
            (rule "eqSymm" (formula "13"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0"))
            (rule "add_zero_right" (formula "23") (term "0,0,0"))
            (rule "eqSymm" (formula "23"))
            (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0"))
            (rule "add_zero_right" (formula "23") (term "0,0,0"))
            (rule "eqSymm" (formula "23"))
            (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
            (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "21"))
            (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "22"))
            (rule "applyEq" (formula "14") (term "0") (ifseqformula "13"))
            (rule "applyEq" (formula "23") (term "0,1,0,0,0") (ifseqformula "21"))
            (rule "applyEq" (formula "13") (term "0,1,0,0,0") (ifseqformula "21"))
            (rule "applyEq" (formula "18") (term "0,0,0") (ifseqformula "21"))
            (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "21"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "true_left" (formula "13"))
            (rule "applyEq" (formula "20") (term "1") (ifseqformula "19"))
            (rule "applyEq" (formula "12") (term "0,1,0,0,1,0,0") (ifseqformula "19"))
            (rule "applyEq" (formula "22") (term "0,1,0,0,0") (ifseqformula "19"))
            (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "19"))
            (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "19"))
            (rule "applyEq" (formula "13") (term "0,1,0,0,0") (ifseqformula "19"))
            (rule "applyEq" (formula "17") (term "0,0,0") (ifseqformula "19"))
            (rule "applyEq" (formula "13") (term "0") (ifseqformula "22"))
            (rule "applyEq" (formula "22") (term "1") (ifseqformula "13"))
            (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
            (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,1,0"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,1,1,0"))
            (rule "polySimp_rightDist" (formula "14") (term "1,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,1,0"))
            (rule "mul_literals" (formula "14") (term "0,1,1,1,0"))
            (rule "polySimp_elimOne" (formula "14") (term "1,1,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
            (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
            (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "4"))
            (rule "polySimp_mulLiterals" (formula "4") (term "0"))
            (rule "polySimp_elimOne" (formula "4") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "29") (term "1"))
            (rule "polySimp_mulLiterals" (formula "29") (term "0,1"))
            (rule "polySimp_elimOne" (formula "29") (term "0,1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
            (rule "polySimp_elimOne" (formula "2") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
            (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0"))
            (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0"))
            (rule "polySimp_elimOne" (formula "22") (term "0,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0"))
            (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0"))
            (rule "polySimp_elimOne" (formula "13") (term "0,0,0"))
            (rule "nonNull" (formula "27") (inst "i=i"))
            (rule "sub_literals" (formula "27") (term "2,1,0,1,1"))
            (builtin "One Step Simplification" (formula "27"))
            (rule "greater_literals" (formula "27") (term "0,1"))
            (builtin "One Step Simplification" (formula "27"))
            (rule "andLeft" (formula "27"))
            (rule "notLeft" (formula "27"))
            (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "28"))
            (builtin "One Step Simplification" (formula "9"))
            (rule "narrowSelectArrayType" (formula "27") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "28"))
            (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
            (rule "applyEq" (formula "27") (term "0,1,0,0,1,0,0") (ifseqformula "21"))
            (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "26") (inst "i=i"))
            (rule "sub_literals" (formula "26") (term "2,1,0,1,1"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "greater_literals" (formula "26") (term "0,1"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "andLeft" (formula "26"))
            (rule "notLeft" (formula "26"))
            (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "28"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "narrowSelectArrayType" (formula "26") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "28"))
            (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
            (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
            (rule "array2seqDef" (formula "24") (term "0,0,1,1,0") (inst "u=u"))
            (rule "eqSymm" (formula "24") (term "1,0"))
            (rule "array2seqDef" (formula "12") (term "0,0,0,1,0") (inst "u=u"))
            (rule "array2seqDef" (formula "12") (term "1,0,0,1,0") (inst "u=u"))
            (rule "array2seqDef" (formula "12") (term "1,1,0") (inst "u=u"))
            (rule "eqSymm" (formula "12") (term "1,0"))
            (rule "array2seqDef" (formula "17") (term "1") (inst "u=u"))
            (rule "eqSymm" (formula "17"))
            (rule "array2seqDef" (formula "18") (term "0,0") (inst "u=u"))
            (rule "array2seqDef" (formula "18") (term "0,1,0") (inst "u=u"))
            (rule "array2seqDef" (formula "18") (term "1,1,0") (inst "u=u"))
            (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "17"))
            (rule "array2seqDef" (formula "18") (term "1") (inst "u=u"))
            (rule "array2seqDef" (formula "32") (term "1") (inst "u=u"))
            (rule "eqSymm" (formula "32"))
            (rule "array2seqDef" (formula "24") (term "1,1,0") (inst "u=u"))
            (rule "eqSymm" (formula "24") (term "1,0"))
            (rule "eqSeqDef" (formula "18") (inst "iv=iv"))
            (rule "andLeft" (formula "18"))
            (rule "lenOfSeqDef" (formula "18") (term "1"))
            (rule "polySimp_elimSub" (formula "18") (term "1,1"))
            (rule "times_zero_2" (formula "18") (term "1,1,1"))
            (rule "add_zero_right" (formula "18") (term "1,1"))
            (rule "getOfSeqDef" (formula "19") (term "1,1,0"))
            (rule "castDel" (formula "19") (term "1,1,1,0"))
            (rule "castDel" (formula "19") (term "2,1,1,0"))
            (rule "add_zero_right" (formula "19") (term "0,2,1,1,1,0"))
            (rule "polySimp_elimSub" (formula "19") (term "1,1,0,1,1,0"))
            (rule "times_zero_2" (formula "19") (term "1,1,1,0,1,1,0"))
            (rule "add_zero_right" (formula "19") (term "1,1,0,1,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
            (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1"))
            (rule "add_zero_right" (formula "18") (term "0,0,1"))
            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,1,1,0"))
            (rule "applyEq" (formula "19") (term "0,1,0,1,0,0") (ifseqformula "18"))
            (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "18") (term "0,0,1"))
            (rule "polySimp_elimOne" (formula "18") (term "0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,1,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,1,1,0"))
            (rule "mul_literals" (formula "19") (term "0,1,1,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,1,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "19") (term "0,0,1,1,1,0,0"))
            (rule "eqSeqDef2" (formula "17") (inst "iv=iv") (ifseqformula "17"))
            (builtin "One Step Simplification" (formula "17"))
            (rule "true_left" (formula "17"))
            (rule "nnf_imp2or" (formula "16") (term "0"))
            (rule "nnf_imp2or" (formula "14") (term "0"))
            (rule "nnf_imp2or" (formula "23") (term "0"))
            (rule "nnf_imp2or" (formula "27") (term "0"))
            (rule "nnf_imp2or" (formula "26") (term "0"))
            (rule "nnf_imp2or" (formula "12") (term "0"))
            (rule "nnf_imp2or" (formula "24") (term "0"))
            (rule "Definition_axiom_for_ghostFieldsNonNull_in_verif_selectvoting_system_core_MixServer" (formula "11") (term "0") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "andLeft" (formula "11"))
            (rule "andLeft" (formula "11"))
            (rule "andLeft" (formula "11"))
            (rule "andLeft" (formula "11"))
            (rule "notLeft" (formula "12"))
            (rule "andLeft" (formula "11"))
            (rule "andLeft" (formula "11"))
            (rule "notLeft" (formula "13"))
            (rule "andLeft" (formula "11"))
            (rule "notLeft" (formula "13"))
            (rule "notLeft" (formula "11"))
            (rule "notLeft" (formula "11"))
            (rule "narrowSelectArrayType" (formula "20") (term "1,1,1,0") (ifseqformula "5") (ifseqformula "34"))
            (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
            (rule "applyEq" (formula "13") (term "0,1,0,0,1,0,0") (ifseqformula "22"))
            (rule "applyEq" (formula "12") (term "0,1,0,0,1,0,0") (ifseqformula "21"))
            (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
            (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
            (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
            (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
            (rule "nnf_notAnd" (formula "18") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
            (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
            (rule "mul_literals" (formula "18") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "16") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
            (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
            (rule "mul_literals" (formula "16") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "25") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
            (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "25") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
            (rule "mul_literals" (formula "25") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "29") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0"))
            (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "29") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
            (rule "mul_literals" (formula "29") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "28") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
            (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "28") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
            (rule "mul_literals" (formula "28") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "14") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
            (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
            (rule "mul_literals" (formula "14") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "26") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
            (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "26") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
            (rule "mul_literals" (formula "26") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
            (rule "nnf_imp2or" (formula "20") (term "0"))
            (rule "nnf_imp2or" (formula "11") (term "0"))
            (rule "nnf_imp2or" (formula "13") (term "0"))
            (rule "nnf_imp2or" (formula "12") (term "0"))
            (rule "nnf_notAnd" (formula "20") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
            (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
            (rule "mul_literals" (formula "20") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "11") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
            (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
            (rule "mul_literals" (formula "11") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "13") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
            (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
            (rule "mul_literals" (formula "13") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "12") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
            (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
            (rule "mul_literals" (formula "12") (term "1,0,0,0"))
            (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "27") (ifseqformula "7"))
            (rule "andLeft" (formula "27"))
            (rule "notLeft" (formula "28"))
            (rule "andLeft" (formula "27"))
            (rule "notLeft" (formula "28"))
            (rule "andLeft" (formula "27"))
            (rule "notLeft" (formula "28"))
            (rule "andLeft" (formula "27"))
            (rule "notLeft" (formula "28"))
            (rule "andLeft" (formula "27"))
            (rule "andLeft" (formula "27"))
            (rule "andLeft" (formula "27"))
            (rule "andLeft" (formula "27"))
            (rule "notLeft" (formula "28"))
            (rule "notLeft" (formula "27"))
            (rule "narrowSelectArrayType" (formula "14") (term "2,0,0,1,1,0") (ifseqformula "5") (ifseqformula "35"))
            (rule "narrowSelectArrayType" (formula "19") (term "2,0,1,0,0") (ifseqformula "5") (ifseqformula "35"))
            (rule "narrowSelectArrayType" (formula "20") (term "2,0,1,0,0,1,0") (ifseqformula "5") (ifseqformula "35"))
            (rule "nonNull" (formula "29") (inst "i=i"))
            (rule "sub_literals" (formula "29") (term "2,1,0,1,1"))
            (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "37")))
            (rule "greater_literals" (formula "29") (term "0"))
            (builtin "One Step Simplification" (formula "29"))
            (rule "narrowSelectArrayType" (formula "29") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "37"))
            (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
            (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "28") (inst "i=i"))
            (rule "sub_literals" (formula "28") (term "2,1,0,1,1"))
            (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "36")))
            (rule "greater_literals" (formula "28") (term "0"))
            (builtin "One Step Simplification" (formula "28"))
            (rule "narrowSelectArrayType" (formula "28") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "36"))
            (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
            (rule "applyEq" (formula "28") (term "0,1,0,0,1,0,0") (ifseqformula "21"))
            (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
            (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "27") (inst "i=i"))
            (rule "greater_literals" (formula "27") (term "0,1"))
            (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "38")))
            (rule "sub_literals" (formula "27") (term "2,1,0"))
            (builtin "One Step Simplification" (formula "27"))
            (rule "narrowSelectArrayType" (formula "27") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "38"))
            (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
            (rule "applyEq" (formula "27") (term "0,1,0,0,1,0,0") (ifseqformula "22"))
            (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
            (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
            (rule "nnf_imp2or" (formula "29") (term "0"))
            (rule "nnf_imp2or" (formula "28") (term "0"))
            (rule "nnf_imp2or" (formula "27") (term "0"))
            (rule "nnf_notAnd" (formula "29") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0"))
            (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "29") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
            (rule "mul_literals" (formula "29") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "28") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
            (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "28") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
            (rule "mul_literals" (formula "28") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "27") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
            (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "27") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
            (rule "mul_literals" (formula "27") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
            (rule "commute_or_2" (formula "18") (term "0"))
            (rule "seqGetAlphaCast" (formula "3") (term "0"))
            (rule "castedGetAny" (formula "3") (term "0"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "true_left" (formula "3"))
            (rule "arrayLengthIsAShort" (formula "21") (term "0"))
            (builtin "One Step Simplification" (formula "21"))
            (rule "true_left" (formula "21"))
            (rule "arrayLengthNotNegative" (formula "21") (term "0"))
            (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
            (rule "arrayLengthIsAShort" (formula "22") (term "1"))
            (builtin "One Step Simplification" (formula "22"))
            (rule "true_left" (formula "22"))
            (rule "arrayLengthNotNegative" (formula "22") (term "1"))
            (rule "arrayLengthNotNegative" (formula "24") (term "0"))
            (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
            (rule "arrayLengthIsAShort" (formula "25") (term "0"))
            (builtin "One Step Simplification" (formula "25"))
            (rule "true_left" (formula "25"))
            (rule "arrayLengthNotNegative" (formula "25") (term "1"))
            (rule "arrayLengthIsAShort" (formula "25") (term "1"))
            (builtin "One Step Simplification" (formula "25"))
            (rule "true_left" (formula "25"))
            (rule "arrayLengthNotNegative" (formula "23") (term "0"))
            (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
            (rule "arrayLengthIsAShort" (formula "23") (term "0"))
            (builtin "One Step Simplification" (formula "23"))
            (rule "true_left" (formula "23"))
            (rule "lenNonNegative" (formula "15") (term "1"))
            (rule "inEqSimp_commuteLeq" (formula "15"))
            (rule "commute_or_2" (formula "28") (term "0"))
            (rule "commute_or_2" (formula "31") (term "0"))
            (rule "commute_or_2" (formula "30") (term "0"))
            (rule "cnf_rightDist" (formula "17") (term "0"))
            (rule "cut_direct" (formula "44") (term "0"))
            (branch "CUT: intseqGet_0 ≥ 0 TRUE"
               (builtin "One Step Simplification" (formula "45"))
               (rule "inEqSimp_geqRight" (formula "45"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0"))
               (rule "add_zero_left" (formula "1") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1"))
               (rule "polySimp_elimOne" (formula "1") (term "1"))
               (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "1"))
               (rule "times_zero_1" (formula "24") (term "0,0"))
               (rule "add_zero_left" (formula "24") (term "0"))
               (rule "ifthenelse_split" (formula "29") (term "0"))
               (branch "self.chosen.length ≥ 1 TRUE"
                  (rule "eqSymm" (formula "30"))
                  (rule "applyEq" (formula "19") (term "1,1,1,1,0") (ifseqformula "30"))
                  (rule "applyEq" (formula "19") (term "1,1,0,0,0") (ifseqformula "30"))
                  (rule "applyEq" (formula "6") (term "0") (ifseqformula "30"))
                  (rule "applyEq" (formula "17") (term "0") (ifseqformula "30"))
                  (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "29"))
                  (rule "applyEq" (formula "18") (term "1,1,0,1,0") (ifseqformula "29"))
                  (rule "applyEq" (formula "17") (term "1") (ifseqformula "29"))
                  (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "28"))
                  (rule "leq_literals" (formula "23") (term "0"))
                  (builtin "One Step Simplification" (formula "23"))
                  (rule "true_left" (formula "23"))
                  (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "1"))
                  (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                  (rule "mul_literals" (formula "6") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "6") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                  (rule "polySimp_elimOne" (formula "6") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "1"))
                  (rule "mul_literals" (formula "28") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                  (rule "mul_literals" (formula "28") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "28"))
                  (rule "leq_literals" (formula "2") (term "0"))
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "5"))
                  (rule "times_zero_1" (formula "2") (term "0,0"))
                  (rule "add_zero_left" (formula "2") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "mul_literals" (formula "2") (term "1"))
                  (rule "ifthenelse_split" (formula "17") (term "0"))
                  (branch "msg.length ≥ 1 TRUE"
                     (rule "eqSymm" (formula "18"))
                     (rule "applyEq" (formula "14") (term "1,1,0,0") (ifseqformula "18"))
                     (rule "applyEq" (formula "23") (term "0,0,1,1,0,0,1,0") (ifseqformula "18"))
                     (rule "applyEq" (formula "6") (term "0") (ifseqformula "18"))
                     (rule "applyEq" (formula "14") (term "1,1,0,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "12") (term "1,1,0,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "21") (term "0,0,1,1,0,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "18") (term "1,1,0,0,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "17"))
                     (rule "applyEq" (formula "18") (term "1,1,1,1,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "15") (term "1,1,0,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "18") (term "1,1,0,1,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "28") (term "0") (ifseqformula "17"))
                     (rule "applyEq" (formula "23") (term "1") (ifseqformula "17"))
                     (rule "applyEq" (formula "24") (term "1") (ifseqformula "17"))
                     (rule "applyEq" (formula "28") (term "1") (ifseqformula "17"))
                     (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "16"))
                     (rule "leq_literals" (formula "25") (term "0"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "true_left" (formula "25"))
                     (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "1"))
                     (rule "mul_literals" (formula "16") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                     (rule "mul_literals" (formula "16") (term "1"))
                     (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                     (rule "mul_literals" (formula "3") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "commute_or_2" (formula "29") (term "0"))
                     (rule "ifthenelse_split" (formula "21") (term "1"))
                     (branch "self.unsigned.length ≥ 1 TRUE"
                        (rule "replace_known_left" (formula "23") (term "0,1,1,0,0") (ifseqformula "21"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "arrayLengthNotNegative" (formula "45") (term "1,0"))
                        (rule "arrayLengthIsAShort" (formula "46") (term "1,0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "arrayLengthNotNegative" (formula "23") (term "1,0,1,0,0"))
                        (rule "arrayLengthNotNegative" (formula "24") (term "1,0,0,0"))
                        (rule "arrayLengthIsAShort" (formula "25") (term "1,0,1,0,0"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "true_left" (formula "25"))
                        (rule "arrayLengthIsAShort" (formula "25") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "true_left" (formula "25"))
                        (rule "commute_or" (formula "21") (term "0,0"))
                        (rule "distr_forallAnd" (formula "19"))
                        (rule "andLeft" (formula "19"))
                        (rule "commute_or" (formula "33") (term "0,0"))
                        (rule "commute_or" (formula "36") (term "0,0"))
                        (rule "commute_or" (formula "35") (term "0,0"))
                        (rule "commute_or_2" (formula "14") (term "0"))
                        (rule "commute_or_2" (formula "15") (term "0"))
                        (rule "commute_or_2" (formula "13") (term "0"))
                        (rule "commute_or_2" (formula "16") (term "0"))
                        (rule "commute_or_2" (formula "27") (term "0"))
                        (rule "commute_or" (formula "20") (term "0"))
                        (rule "commute_or" (formula "34") (term "0,0"))
                        (rule "commute_or" (formula "14") (term "0,0"))
                        (rule "commute_or" (formula "15") (term "0,0"))
                        (rule "commute_or" (formula "13") (term "0,0"))
                        (rule "commute_or" (formula "16") (term "0,0"))
                        (rule "commute_or" (formula "27") (term "0,0"))
                        (rule "ifthenelse_to_or_right" (formula "27") (term "0,0,0"))
                        (rule "nnf_notAnd" (formula "27") (term "0,0,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "27") (term "0,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,0,0,0"))
                        (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0,0,0"))
                        (rule "commute_or" (formula "27") (term "0,0"))
                        (rule "commute_or_2" (formula "27") (term "0"))
                        (rule "commute_or" (formula "27") (term "1,1,0"))
                        (rule "commute_or_2" (formula "27") (term "0,1,0"))
                        (rule "commute_or" (formula "27") (term "0,0,1,0"))
                        (rule "cnf_rightDist" (formula "27") (term "1,1,0"))
                        (rule "cnf_rightDist" (formula "27") (term "0"))
                        (rule "distr_forallAnd" (formula "27"))
                        (rule "andLeft" (formula "27"))
                        (rule "commute_or" (formula "28") (term "0"))
                        (rule "shift_paren_or" (formula "27") (term "0"))
                        (rule "commute_or_2" (formula "27") (term "0,0"))
                        (builtin "One Step Simplification" (formula "27"))
                        (rule "commute_or" (formula "28") (term "1,1,0"))
                        (rule "shift_paren_or" (formula "27") (term "0,0"))
                        (rule "commute_or" (formula "27") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "27"))
                        (rule "cnf_rightDist" (formula "28") (term "0"))
                        (rule "distr_forallAnd" (formula "28"))
                        (rule "andLeft" (formula "28"))
                        (rule "commute_or_2" (formula "28") (term "0"))
                        (rule "shift_paren_or" (formula "29") (term "0"))
                        (rule "commute_or_2" (formula "29") (term "0,0"))
                        (rule "inEqSimp_or_tautInEq1" (formula "29") (term "0"))
                        (rule "inEqSimp_homoInEq1" (formula "29") (term "1,0"))
                        (rule "polySimp_pullOutFactor1" (formula "29") (term "0,1,0"))
                        (rule "add_literals" (formula "29") (term "1,0,1,0"))
                        (rule "times_zero_1" (formula "29") (term "0,1,0"))
                        (rule "leq_literals" (formula "29") (term "1,0"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "true_left" (formula "29"))
                        (rule "shift_paren_or" (formula "28") (term "0,0"))
                        (rule "commute_or" (formula "28") (term "0,0,0"))
                        (rule "inEqSimp_or_tautInEq1" (formula "28") (term "0,0"))
                        (rule "add_zero_right" (formula "28") (term "1,1,0,0"))
                        (rule "qeq_literals" (formula "28") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "true_left" (formula "28"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "28") (term "0,0") (ifseqformula "7"))
                        (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "42"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "30") (term "0,0") (ifseqformula "7"))
                        (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "45"))
                        (builtin "One Step Simplification" (formula "30"))
                        (rule "lenNonNegative" (formula "35") (term "1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "35"))
                        (rule "lenNonNegative" (formula "26") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "26"))
                        (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                        (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "23"))
                        (rule "leq_literals" (formula "26") (term "0"))
                        (builtin "One Step Simplification" (formula "26"))
                        (rule "true_left" (formula "26"))
                        (rule "arrayLengthNotNegative" (formula "23") (term "0"))
                        (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "24"))
                        (rule "leq_literals" (formula "23") (term "0"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "true_left" (formula "23"))
                        (rule "arrayLengthIsAShort" (formula "23") (term "0"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "true_left" (formula "23"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "1,2,0") (ifseqformula "7"))
                        (rule "allLeft" (formula "23") (inst "t=iv_0"))
                        (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
                        (rule "applyEq" (formula "23") (term "1,1,0,0") (ifseqformula "6"))
                        (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "5"))
                        (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                        (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                        (rule "add_literals" (formula "23") (term "0,0,1"))
                        (rule "leq_literals" (formula "23") (term "0,1"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "4"))
                        (rule "qeq_literals" (formula "23") (term "0,1"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "allLeft" (formula "21") (inst "t=iv_0"))
                        (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0"))
                        (rule "applyEq" (formula "21") (term "0,1") (ifseqformula "6"))
                        (rule "inEqSimp_homoInEq0" (formula "21") (term "1"))
                        (rule "polySimp_addComm1" (formula "21") (term "0,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "21") (term "1,1"))
                        (rule "mul_literals" (formula "21") (term "0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1"))
                        (rule "polySimp_elimOne" (formula "21") (term "1,1,1"))
                        (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "5"))
                        (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0"))
                        (rule "add_literals" (formula "21") (term "1,1,0,0,1,0"))
                        (rule "times_zero_1" (formula "21") (term "1,0,0,1,0"))
                        (rule "add_zero_right" (formula "21") (term "0,0,1,0"))
                        (rule "leq_literals" (formula "21") (term "0,1,0"))
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "inEqSimp_contradInEq0" (formula "21") (term "1") (ifseqformula "3"))
                        (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                        (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                        (rule "add_literals" (formula "21") (term "0,0,1"))
                        (rule "leq_literals" (formula "21") (term "0,1"))
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "21"))
                        (rule "qeq_literals" (formula "4") (term "0"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "closeFalse" (formula "4"))
                     )
                     (branch "self.unsigned.length ≥ 1 FALSE"
                        (rule "replace_known_right" (formula "22") (term "0,1,1,0,0") (ifseqformula "32"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "inEqSimp_geqRight" (formula "32"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_or_tautInEq0" (formula "23") (term "0,0"))
                        (rule "add_zero_right" (formula "23") (term "1,1,0,0"))
                        (rule "qeq_literals" (formula "23") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "true_left" (formula "23"))
                        (rule "arrayLengthNotNegative" (formula "44") (term "1,0"))
                        (rule "arrayLengthIsAShort" (formula "45") (term "1,0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "arrayLengthIsAShort" (formula "23") (term "1,0,1,0,0"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "true_left" (formula "23"))
                        (rule "arrayLengthNotNegative" (formula "23") (term "1,0,0,0"))
                        (rule "arrayLengthNotNegative" (formula "24") (term "1,0,1,0,0"))
                        (rule "arrayLengthIsAShort" (formula "25") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "true_left" (formula "25"))
                        (rule "commute_or" (formula "22") (term "0,0"))
                        (rule "distr_forallAnd" (formula "20"))
                        (rule "andLeft" (formula "20"))
                        (rule "commute_or" (formula "32") (term "0,0"))
                        (rule "commute_or" (formula "35") (term "0,0"))
                        (rule "commute_or" (formula "34") (term "0,0"))
                        (rule "commute_or_2" (formula "15") (term "0"))
                        (rule "commute_or_2" (formula "16") (term "0"))
                        (rule "commute_or_2" (formula "14") (term "0"))
                        (rule "commute_or_2" (formula "17") (term "0"))
                        (rule "commute_or" (formula "33") (term "0,0"))
                        (rule "commute_or" (formula "21") (term "0"))
                        (rule "commute_or" (formula "15") (term "0,0"))
                        (rule "commute_or" (formula "16") (term "0,0"))
                        (rule "commute_or" (formula "14") (term "0,0"))
                        (rule "commute_or" (formula "17") (term "0,0"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "27") (term "0,0") (ifseqformula "8"))
                        (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "41"))
                        (builtin "One Step Simplification" (formula "27"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "29") (term "0,0") (ifseqformula "8"))
                        (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "44"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "lenNonNegative" (formula "34") (term "1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "34"))
                        (rule "allLeft" (formula "20") (inst "t=iv_0"))
                        (rule "inEqSimp_commuteGeq" (formula "20") (term "1,0"))
                        (rule "applyEq" (formula "20") (term "0,1") (ifseqformula "6"))
                        (rule "inEqSimp_subsumption1" (formula "20") (term "1") (ifseqformula "33"))
                        (rule "leq_literals" (formula "20") (term "0,1"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "true_left" (formula "20"))
                        (rule "allLeft" (formula "17") (inst "t=iv_0"))
                        (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "4"))
                        (rule "qeq_literals" (formula "17") (term "0,1,0"))
                        (builtin "One Step Simplification" (formula "17"))
                        (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "5"))
                        (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                        (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                        (rule "add_literals" (formula "17") (term "0,0,1"))
                        (rule "leq_literals" (formula "17") (term "0,1"))
                        (builtin "One Step Simplification" (formula "17"))
                        (rule "eqSeqDef2" (formula "17") (inst "iv=iv") (ifseqformula "17"))
                        (builtin "One Step Simplification" (formula "17"))
                        (rule "true_left" (formula "17"))
                        (rule "allLeft" (formula "36") (inst "t=iv_0"))
                        (rule "inEqSimp_commuteGeq" (formula "36") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "5"))
                        (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1"))
                        (rule "add_literals" (formula "36") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "36") (term "1,0,0,1"))
                        (rule "add_literals" (formula "36") (term "0,0,1"))
                        (rule "leq_literals" (formula "36") (term "0,1"))
                        (builtin "One Step Simplification" (formula "36"))
                        (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "4"))
                        (rule "qeq_literals" (formula "36") (term "0,1"))
                        (builtin "One Step Simplification" (formula "36"))
                        (rule "applyEq" (formula "52") (term "0") (ifseqformula "36"))
                        (rule "eqSeqDef2" (formula "36") (inst "iv=iv") (ifseqformula "36"))
                        (builtin "One Step Simplification" (formula "36"))
                        (rule "true_left" (formula "36"))
                        (rule "allLeft" (formula "14") (inst "t=iv_0"))
                        (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "14") (term "1") (ifseqformula "5"))
                        (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1"))
                        (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
                        (rule "add_literals" (formula "14") (term "0,0,1"))
                        (rule "leq_literals" (formula "14") (term "0,1"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "inEqSimp_contradInEq1" (formula "14") (term "1") (ifseqformula "4"))
                        (rule "qeq_literals" (formula "14") (term "0,1"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "notLeft" (formula "14"))
                        (rule "allLeft" (formula "15") (inst "t=iv_0"))
                        (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "5"))
                        (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                        (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                        (rule "add_literals" (formula "15") (term "0,0,1"))
                        (rule "leq_literals" (formula "15") (term "0,1"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "4"))
                        (rule "qeq_literals" (formula "15") (term "0,1"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "notLeft" (formula "15"))
                        (rule "allLeft" (formula "16") (inst "t=iv_0"))
                        (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "16") (term "1,0") (ifseqformula "4"))
                        (rule "qeq_literals" (formula "16") (term "0,1,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "5"))
                        (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                        (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "16") (term "0,0,1"))
                        (rule "leq_literals" (formula "16") (term "0,1"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "notLeft" (formula "16"))
                        (rule "allLeft" (formula "21") (inst "t=iv_0"))
                        (rule "inEqSimp_commuteGeq" (formula "21") (term "1,0"))
                        (rule "applyEqRigid" (formula "21") (term "0,1") (ifseqformula "6"))
                        (rule "inEqSimp_homoInEq0" (formula "21") (term "1"))
                        (rule "polySimp_addComm1" (formula "21") (term "0,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "21") (term "1,1"))
                        (rule "mul_literals" (formula "21") (term "0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1"))
                        (rule "polySimp_elimOne" (formula "21") (term "1,1,1"))
                        (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "5"))
                        (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0"))
                        (rule "add_literals" (formula "21") (term "1,1,0,0,1,0"))
                        (rule "times_zero_1" (formula "21") (term "1,0,0,1,0"))
                        (rule "add_zero_right" (formula "21") (term "0,0,1,0"))
                        (rule "leq_literals" (formula "21") (term "0,1,0"))
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "inEqSimp_contradInEq0" (formula "21") (term "1") (ifseqformula "3"))
                        (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                        (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "21") (term "0,0,1"))
                        (rule "leq_literals" (formula "21") (term "0,1"))
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "inEqSimp_contradInEq1" (formula "21") (ifseqformula "4"))
                        (rule "qeq_literals" (formula "21") (term "0"))
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "closeFalse" (formula "21"))
                     )
                  )
                  (branch "msg.length ≥ 1 FALSE"
                     (rule "eqSymm" (formula "17"))
                     (rule "inEqSimp_geqRight" (formula "34"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "applyEq" (formula "7") (term "0") (ifseqformula "18"))
                     (rule "inEqSimp_homoInEq1" (formula "7"))
                     (rule "mul_literals" (formula "7") (term "1,0"))
                     (rule "add_zero_right" (formula "7") (term "0"))
                     (rule "applyEq" (formula "14") (term "1,1,0,0") (ifseqformula "18"))
                     (rule "applyEq" (formula "29") (term "0") (ifseqformula "18"))
                     (rule "qeq_literals" (formula "29"))
                     (rule "closeFalse" (formula "29"))
                  )
               )
               (branch "self.chosen.length ≥ 1 FALSE"
                  (rule "eqSymm" (formula "29"))
                  (rule "inEqSimp_geqRight" (formula "34"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "applyEq" (formula "18") (term "0") (ifseqformula "30"))
                  (rule "qeq_literals" (formula "18"))
                  (rule "true_left" (formula "18"))
                  (rule "applyEqRigid" (formula "19") (term "1,1,1,1,0") (ifseqformula "29"))
                  (rule "applyEq" (formula "19") (term "1,1,0,0,0") (ifseqformula "29"))
                  (rule "applyEq" (formula "7") (term "0") (ifseqformula "29"))
                  (rule "inEqSimp_homoInEq1" (formula "7"))
                  (rule "times_zero_2" (formula "7") (term "1,0"))
                  (rule "add_zero_right" (formula "7") (term "0"))
                  (rule "applyEq" (formula "19") (term "1,1,0,1,0") (ifseqformula "29"))
                  (rule "add_literals" (formula "19") (term "1,0,1,0"))
                  (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "29"))
                  (rule "applyEqRigid" (formula "18") (term "1") (ifseqformula "29"))
                  (builtin "One Step Simplification" (formula "18"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                  (rule "mul_literals" (formula "7") (term "1"))
                  (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "4"))
                  (rule "qeq_literals" (formula "7") (term "0"))
                  (builtin "One Step Simplification" (formula "7"))
                  (rule "closeFalse" (formula "7"))
               )
            )
            (branch "CUT: intseqGet_0 ≥ 0 FALSE"
               (builtin "One Step Simplification" (formula "45"))
               (rule "false_right" (formula "45"))
               (rule "inEqSimp_geqRight" (formula "44"))
               (rule "times_zero_1" (formula "1") (term "1,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "ifthenelse_split" (formula "28") (term "0"))
               (branch "self.chosen.length ≥ 1 TRUE"
                  (rule "eqSymm" (formula "29"))
                  (rule "applyEq" (formula "18") (term "1,1,0,0,0") (ifseqformula "29"))
                  (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "29"))
                  (rule "applyEq" (formula "5") (term "0") (ifseqformula "29"))
                  (rule "applyEq" (formula "16") (term "0") (ifseqformula "29"))
                  (rule "applyEq" (formula "17") (term "1,1,0,1,0") (ifseqformula "28"))
                  (rule "applyEq" (formula "17") (term "1,1,1,1,0") (ifseqformula "28"))
                  (rule "applyEq" (formula "16") (term "1") (ifseqformula "28"))
                  (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "27"))
                  (rule "leq_literals" (formula "22") (term "0"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "true_left" (formula "22"))
                  (rule "ifthenelse_split" (formula "16") (term "0"))
                  (branch "msg.length ≥ 1 TRUE"
                     (rule "eqSymm" (formula "17"))
                     (rule "applyEq" (formula "5") (term "0") (ifseqformula "17"))
                     (rule "applyEq" (formula "13") (term "1,1,0,0") (ifseqformula "16"))
                     (rule "applyEq" (formula "21") (term "0,0,1,1,0,0,1,0") (ifseqformula "16"))
                     (rule "applyEq" (formula "17") (term "1,1,0,0,0") (ifseqformula "16"))
                     (rule "applyEq" (formula "20") (term "0,0,1,1,0,0") (ifseqformula "16"))
                     (rule "applyEq" (formula "26") (term "0") (ifseqformula "16"))
                     (rule "applyEq" (formula "11") (term "1,1,0,0") (ifseqformula "16"))
                     (rule "applyEq" (formula "14") (term "1,1,0,0") (ifseqformula "16"))
                     (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "16"))
                     (rule "applyEq" (formula "12") (term "1,1,0,0") (ifseqformula "16"))
                     (rule "applyEq" (formula "17") (term "1,1,0,1,0") (ifseqformula "16"))
                     (rule "applyEq" (formula "17") (term "1,1,1,1,0") (ifseqformula "16"))
                     (rule "applyEq" (formula "26") (term "1") (ifseqformula "16"))
                     (rule "applyEq" (formula "22") (term "1") (ifseqformula "16"))
                     (rule "applyEq" (formula "23") (term "1") (ifseqformula "16"))
                     (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "15"))
                     (rule "leq_literals" (formula "24") (term "0"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "true_left" (formula "24"))
                     (rule "commute_or_2" (formula "27") (term "0"))
                     (rule "ifthenelse_split" (formula "20") (term "1"))
                     (branch "self.unsigned.length ≥ 1 TRUE"
                        (rule "replace_known_left" (formula "22") (term "0,1,1,0,0") (ifseqformula "20"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "arrayLengthNotNegative" (formula "43") (term "1,0"))
                        (rule "arrayLengthIsAShort" (formula "44") (term "1,0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "arrayLengthNotNegative" (formula "22") (term "1,0,0,0"))
                        (rule "arrayLengthIsAShort" (formula "23") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "true_left" (formula "23"))
                        (rule "arrayLengthIsAShort" (formula "23") (term "1,0,1,0,0"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "true_left" (formula "23"))
                        (rule "arrayLengthNotNegative" (formula "23") (term "1,0,1,0,0"))
                        (rule "distr_forallAnd" (formula "18"))
                        (rule "andLeft" (formula "18"))
                        (rule "commute_or" (formula "21") (term "0,0"))
                        (rule "commute_or" (formula "31") (term "0,0"))
                        (rule "commute_or" (formula "34") (term "0,0"))
                        (rule "commute_or" (formula "33") (term "0,0"))
                        (rule "commute_or_2" (formula "14") (term "0"))
                        (rule "commute_or_2" (formula "12") (term "0"))
                        (rule "commute_or_2" (formula "15") (term "0"))
                        (rule "commute_or_2" (formula "13") (term "0"))
                        (rule "commute_or_2" (formula "26") (term "0"))
                        (rule "commute_or" (formula "19") (term "0"))
                        (rule "commute_or" (formula "32") (term "0,0"))
                        (rule "commute_or" (formula "14") (term "0,0"))
                        (rule "commute_or" (formula "12") (term "0,0"))
                        (rule "commute_or" (formula "15") (term "0,0"))
                        (rule "commute_or" (formula "13") (term "0,0"))
                        (rule "commute_or" (formula "26") (term "0,0"))
                        (rule "ifthenelse_to_or_right" (formula "26") (term "0,0,0"))
                        (rule "nnf_notAnd" (formula "26") (term "0,0,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,0,0,0"))
                        (rule "add_literals" (formula "26") (term "0,0,0,1,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "26") (term "0,0,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0,0,0,0"))
                        (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "26") (term "0,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "26") (term "1,0,0,0,0,0,0"))
                        (rule "commute_or" (formula "26") (term "0,0"))
                        (rule "commute_or_2" (formula "26") (term "0"))
                        (rule "commute_or" (formula "26") (term "1,1,0"))
                        (rule "commute_or_2" (formula "26") (term "0,1,0"))
                        (rule "commute_or" (formula "26") (term "0,0,1,0"))
                        (rule "cnf_rightDist" (formula "26") (term "1,1,0"))
                        (rule "cnf_rightDist" (formula "26") (term "0"))
                        (rule "distr_forallAnd" (formula "26"))
                        (rule "andLeft" (formula "26"))
                        (rule "commute_or" (formula "27") (term "0"))
                        (rule "shift_paren_or" (formula "26") (term "0"))
                        (rule "commute_or_2" (formula "26") (term "0,0"))
                        (builtin "One Step Simplification" (formula "26"))
                        (rule "commute_or" (formula "27") (term "1,1,0"))
                        (rule "shift_paren_or" (formula "26") (term "0,0"))
                        (rule "commute_or" (formula "26") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "26"))
                        (rule "cnf_rightDist" (formula "27") (term "0"))
                        (rule "distr_forallAnd" (formula "27"))
                        (rule "andLeft" (formula "27"))
                        (rule "commute_or_2" (formula "27") (term "0"))
                        (rule "shift_paren_or" (formula "28") (term "0"))
                        (rule "commute_or_2" (formula "28") (term "0,0"))
                        (rule "inEqSimp_or_tautInEq1" (formula "28") (term "0"))
                        (rule "inEqSimp_homoInEq1" (formula "28") (term "1,0"))
                        (rule "polySimp_pullOutFactor1" (formula "28") (term "0,1,0"))
                        (rule "add_literals" (formula "28") (term "1,0,1,0"))
                        (rule "times_zero_1" (formula "28") (term "0,1,0"))
                        (rule "leq_literals" (formula "28") (term "1,0"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "true_left" (formula "28"))
                        (rule "shift_paren_or" (formula "27") (term "0,0"))
                        (rule "commute_or" (formula "27") (term "0,0,0"))
                        (rule "inEqSimp_or_tautInEq1" (formula "27") (term "0,0"))
                        (rule "add_zero_right" (formula "27") (term "1,1,0,0"))
                        (rule "qeq_literals" (formula "27") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "27"))
                        (rule "true_left" (formula "27"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "27") (term "0,0") (ifseqformula "6"))
                        (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "40"))
                        (builtin "One Step Simplification" (formula "27"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "29") (term "0,0") (ifseqformula "6"))
                        (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "43"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "lenNonNegative" (formula "33") (term "1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "33"))
                        (rule "lenNonNegative" (formula "25") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "25"))
                        (rule "applyEq" (formula "25") (term "0") (ifseqformula "26"))
                        (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "22"))
                        (rule "leq_literals" (formula "25") (term "0"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "true_left" (formula "25"))
                        (rule "allLeft" (formula "35") (inst "t=iv_0"))
                        (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                        (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                        (rule "add_literals" (formula "35") (term "0,0,1"))
                        (rule "leq_literals" (formula "35") (term "0,1"))
                        (builtin "One Step Simplification" (formula "35"))
                        (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "3"))
                        (rule "qeq_literals" (formula "35") (term "0,1"))
                        (builtin "One Step Simplification" (formula "35"))
                        (rule "applyEq" (formula "51") (term "0") (ifseqformula "35"))
                        (rule "eqSeqDef2" (formula "35") (inst "iv=iv") (ifseqformula "35"))
                        (builtin "One Step Simplification" (formula "35"))
                        (rule "true_left" (formula "35"))
                        (rule "allLeft" (formula "19") (inst "t=iv_0"))
                        (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0"))
                        (rule "applyEq" (formula "19") (term "0,1") (ifseqformula "5"))
                        (rule "inEqSimp_homoInEq0" (formula "19") (term "1"))
                        (rule "polySimp_addComm1" (formula "19") (term "0,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1"))
                        (rule "polySimp_mulComm0" (formula "19") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "19") (term "1,1"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1"))
                        (rule "mul_literals" (formula "19") (term "0,1,1"))
                        (rule "polySimp_elimOne" (formula "19") (term "1,1,1"))
                        (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0"))
                        (rule "add_literals" (formula "19") (term "1,1,0,0,1,0"))
                        (rule "times_zero_1" (formula "19") (term "1,0,0,1,0"))
                        (rule "add_zero_right" (formula "19") (term "0,0,1,0"))
                        (rule "leq_literals" (formula "19") (term "0,1,0"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "3"))
                        (rule "qeq_literals" (formula "19") (term "0,0"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "allLeft" (formula "38") (inst "t=iv_0"))
                        (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "38") (term "1,0") (ifseqformula "3"))
                        (rule "qeq_literals" (formula "38") (term "0,1,0"))
                        (builtin "One Step Simplification" (formula "38"))
                        (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                        (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                        (rule "add_literals" (formula "38") (term "0,0,1"))
                        (rule "leq_literals" (formula "38") (term "0,1"))
                        (builtin "One Step Simplification" (formula "38"))
                        (rule "notLeft" (formula "38"))
                        (rule "allLeft" (formula "22") (inst "t=iv_0"))
                        (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                        (rule "applyEqRigid" (formula "22") (term "1,1,0,0") (ifseqformula "5"))
                        (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "3"))
                        (rule "qeq_literals" (formula "22") (term "0,1,0"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                        (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                        (rule "add_literals" (formula "22") (term "0,0,1"))
                        (rule "leq_literals" (formula "22") (term "0,1"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "allLeft" (formula "38") (inst "t=iv_0"))
                        (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "38") (term "1,0") (ifseqformula "3"))
                        (rule "qeq_literals" (formula "38") (term "0,1,0"))
                        (builtin "One Step Simplification" (formula "38"))
                        (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                        (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                        (rule "add_literals" (formula "38") (term "0,0,1"))
                        (rule "leq_literals" (formula "38") (term "0,1"))
                        (builtin "One Step Simplification" (formula "38"))
                        (rule "notLeft" (formula "38"))
                        (rule "narrowSelectArrayType" (formula "54") (term "2,0,0,0") (ifseqformula "6") (ifseqformula "40"))
                        (rule "allLeft" (formula "18") (inst "t=iv_0"))
                        (rule "inEqSimp_commuteGeq" (formula "18") (term "1,0"))
                        (rule "applyEqRigid" (formula "18") (term "0,1") (ifseqformula "5"))
                        (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1,0"))
                        (rule "add_literals" (formula "18") (term "1,1,0,0,1,0"))
                        (rule "times_zero_1" (formula "18") (term "1,0,0,1,0"))
                        (rule "add_zero_right" (formula "18") (term "0,0,1,0"))
                        (rule "leq_literals" (formula "18") (term "0,1,0"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "3"))
                        (rule "qeq_literals" (formula "18") (term "0,0"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "inEqSimp_contradInEq0" (formula "18") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "18") (term "0"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "closeFalse" (formula "18"))
                     )
                     (branch "self.unsigned.length ≥ 1 FALSE"
                        (rule "replace_known_right" (formula "21") (term "0,1,1,0,0") (ifseqformula "30"))
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "inEqSimp_geqRight" (formula "30"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_or_tautInEq0" (formula "22") (term "0,0"))
                        (rule "add_zero_right" (formula "22") (term "1,1,0,0"))
                        (rule "qeq_literals" (formula "22") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "true_left" (formula "22"))
                        (rule "arrayLengthNotNegative" (formula "42") (term "1,0"))
                        (rule "arrayLengthIsAShort" (formula "43") (term "1,0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "arrayLengthNotNegative" (formula "22") (term "1,0,0,0"))
                        (rule "arrayLengthIsAShort" (formula "23") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "true_left" (formula "23"))
                        (rule "arrayLengthNotNegative" (formula "23") (term "1,0,1,0,0"))
                        (rule "arrayLengthIsAShort" (formula "24") (term "1,0,1,0,0"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "true_left" (formula "24"))
                        (rule "distr_forallAnd" (formula "19"))
                        (rule "andLeft" (formula "19"))
                        (rule "commute_or" (formula "22") (term "0,0"))
                        (rule "commute_or" (formula "30") (term "0,0"))
                        (rule "commute_or" (formula "33") (term "0,0"))
                        (rule "commute_or" (formula "32") (term "0,0"))
                        (rule "commute_or_2" (formula "15") (term "0"))
                        (rule "commute_or_2" (formula "13") (term "0"))
                        (rule "commute_or_2" (formula "16") (term "0"))
                        (rule "commute_or_2" (formula "14") (term "0"))
                        (rule "commute_or" (formula "31") (term "0,0"))
                        (rule "commute_or" (formula "20") (term "0"))
                        (rule "commute_or" (formula "15") (term "0,0"))
                        (rule "commute_or" (formula "13") (term "0,0"))
                        (rule "commute_or" (formula "16") (term "0,0"))
                        (rule "commute_or" (formula "14") (term "0,0"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "26") (term "0,0") (ifseqformula "7"))
                        (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "39"))
                        (builtin "One Step Simplification" (formula "26"))
                        (rule "onlyCreatedObjectsAreReferenced" (formula "28") (term "0,0") (ifseqformula "7"))
                        (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "42"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "allLeft" (formula "22") (inst "t=iv_0"))
                        (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
                        (rule "applyEq" (formula "22") (term "1,1,0,0") (ifseqformula "6"))
                        (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "5"))
                        (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                        (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                        (rule "add_literals" (formula "22") (term "0,0,1"))
                        (rule "leq_literals" (formula "22") (term "0,1"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "4"))
                        (rule "qeq_literals" (formula "22") (term "0,1"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "allLeft" (formula "19") (inst "t=iv_0"))
                        (rule "inEqSimp_commuteGeq" (formula "19") (term "1,0"))
                        (rule "applyEq" (formula "19") (term "0,1") (ifseqformula "6"))
                        (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0") (ifseqformula "4"))
                        (rule "qeq_literals" (formula "19") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "inEqSimp_contradInEq0" (formula "19") (term "1") (ifseqformula "3"))
                        (rule "qeq_literals" (formula "19") (term "0,1"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "inEqSimp_contradInEq1" (formula "19") (ifseqformula "5"))
                        (rule "andLeft" (formula "19"))
                        (rule "inEqSimp_homoInEq1" (formula "19"))
                        (rule "polySimp_pullOutFactor1b" (formula "19") (term "0"))
                        (rule "add_literals" (formula "19") (term "1,1,0"))
                        (rule "times_zero_1" (formula "19") (term "1,0"))
                        (rule "add_zero_right" (formula "19") (term "0"))
                        (rule "leq_literals" (formula "19"))
                        (rule "closeFalse" (formula "19"))
                     )
                  )
                  (branch "msg.length ≥ 1 FALSE"
                     (rule "eqSymm" (formula "16"))
                     (rule "inEqSimp_geqRight" (formula "32"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "applyEq" (formula "18") (term "1,1,0,1,0") (ifseqformula "17"))
                     (rule "add_zero_right" (formula "18") (term "1,0,1,0"))
                     (rule "applyEq" (formula "18") (term "1,1,1,1,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "6") (term "0") (ifseqformula "17"))
                     (rule "inEqSimp_homoInEq1" (formula "6"))
                     (rule "times_zero_2" (formula "6") (term "1,0"))
                     (rule "add_zero_right" (formula "6") (term "0"))
                     (rule "applyEq" (formula "16") (term "1,1,0,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "13") (term "1,1,0,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "14") (term "1,1,0,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "18") (term "1,1,0,0,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "22") (term "0,0,1,1,0,0,1,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "15") (term "1,1,0,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "21") (term "0,0,1,1,0,0") (ifseqformula "17"))
                     (rule "applyEq" (formula "27") (term "0") (ifseqformula "17"))
                     (rule "qeq_literals" (formula "27"))
                     (rule "closeFalse" (formula "27"))
                  )
               )
               (branch "self.chosen.length ≥ 1 FALSE"
                  (rule "eqSymm" (formula "28"))
                  (rule "inEqSimp_geqRight" (formula "33"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "applyEqRigid" (formula "17") (term "0") (ifseqformula "29"))
                  (rule "qeq_literals" (formula "17"))
                  (rule "true_left" (formula "17"))
                  (rule "applyEq" (formula "18") (term "1,1,1,1,0") (ifseqformula "28"))
                  (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "28"))
                  (rule "inEqSimp_homoInEq1" (formula "6"))
                  (rule "mul_literals" (formula "6") (term "1,0"))
                  (rule "add_zero_right" (formula "6") (term "0"))
                  (rule "applyEqRigid" (formula "18") (term "1,1,0,0,0") (ifseqformula "28"))
                  (rule "applyEqRigid" (formula "18") (term "1,1,0,1,0") (ifseqformula "28"))
                  (rule "add_zero_right" (formula "18") (term "1,0,1,0"))
                  (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "28"))
                  (rule "applyEqRigid" (formula "17") (term "1") (ifseqformula "28"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                  (rule "mul_literals" (formula "6") (term "1"))
                  (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "6"))
                  (rule "qeq_literals" (formula "3") (term "0"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "closeFalse" (formula "3"))
               )
            )
         )
      )
      (branch "Case 2"
         (rule "seqNPermRange" (formula "13") (inst "iv=iv") (userinteraction))
         (rule "equalityToSeqGetAndSeqLen" (formula "21") (inst "iv=iv") (userinteraction))
         (rule "andLeft" (formula "21") (userinteraction))
         (rule "array2seq2dDef" (formula "21") (term "0,0") (inst "u=u") (userinteraction))
         (rule "array2seq2dDef" (formula "21") (term "0,1") (inst "u=u") (userinteraction))
         (builtin "One Step Simplification" (formula "23"))
         (rule "castDel" (formula "29") (term "1,1"))
         (rule "castDel" (formula "29") (term "0"))
         (rule "castDel" (formula "29") (term "2,1"))
         (rule "add_zero_right" (formula "29") (term "0,2,1,1,1"))
         (rule "andLeft" (formula "2"))
         (rule "eqSymm" (formula "11") (term "1,0"))
         (rule "eqSymm" (formula "18"))
         (rule "eqSymm" (formula "23") (term "1,0"))
         (rule "eqSymm" (formula "22"))
         (rule "eqSymm" (formula "19"))
         (rule "eqSymm" (formula "20"))
         (rule "eqSymm" (formula "21"))
         (rule "eqSymm" (formula "17"))
         (rule "eqSymm" (formula "13"))
         (rule "eqSymm" (formula "30"))
         (builtin "One Step Simplification" (formula "30"))
         (rule "orRight" (formula "30"))
         (rule "notRight" (formula "30"))
         (rule "andLeft" (formula "1"))
         (rule "eqSymm" (formula "32"))
         (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "4"))
         (builtin "One Step Simplification" (formula "31"))
         (rule "polySimp_elimSub" (formula "14") (term "1,1"))
         (rule "mul_literals" (formula "14") (term "1,1,1"))
         (rule "add_zero_right" (formula "14") (term "1,1"))
         (rule "polySimp_elimSub" (formula "14") (term "1,0"))
         (rule "times_zero_2" (formula "14") (term "1,1,0"))
         (rule "add_zero_right" (formula "14") (term "1,0"))
         (rule "polySimp_elimSub" (formula "15") (term "1,0"))
         (rule "times_zero_2" (formula "15") (term "1,1,0"))
         (rule "add_zero_right" (formula "15") (term "1,0"))
         (rule "polySimp_elimSub" (formula "2") (term "1"))
         (rule "times_zero_2" (formula "2") (term "1,1"))
         (rule "add_zero_right" (formula "2") (term "1"))
         (rule "polySimp_elimSub" (formula "31") (term "1"))
         (rule "times_zero_2" (formula "31") (term "1,1"))
         (rule "add_zero_right" (formula "31") (term "1"))
         (rule "lenOfSeqDef" (formula "24") (term "0"))
         (rule "eqSymm" (formula "24"))
         (rule "polySimp_elimSub" (formula "24") (term "1,1"))
         (rule "mul_literals" (formula "24") (term "1,1,1"))
         (rule "add_zero_right" (formula "24") (term "1,1"))
         (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "16") (term "1,1,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0"))
         (rule "add_zero_right" (formula "14") (term "0,0,0"))
         (rule "eqSymm" (formula "14"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "5"))
         (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "5") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0"))
         (rule "add_zero_right" (formula "15") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
         (rule "lenOfSeqDef" (formula "24") (term "0"))
         (rule "eqSymm" (formula "24"))
         (rule "polySimp_elimSub" (formula "24") (term "1,1"))
         (rule "mul_literals" (formula "24") (term "1,1,1"))
         (rule "add_zero_right" (formula "24") (term "1,1"))
         (rule "inEqSimp_ltRight" (formula "31"))
         (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
         (rule "polySimp_addComm0" (formula "1") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "3"))
         (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "3") (term "0"))
         (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "17") (term "0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "5"))
         (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0"))
         (rule "add_zero_right" (formula "15") (term "0,0,0"))
         (rule "eqSymm" (formula "15"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "2"))
         (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1"))
         (rule "add_zero_right" (formula "25") (term "0,0,1"))
         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0"))
         (rule "add_zero_right" (formula "25") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
         (rule "applyEq" (formula "25") (term "0") (ifseqformula "15"))
         (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "23"))
         (rule "applyEq" (formula "15") (term "0,1,0,0,0") (ifseqformula "23"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "true_left" (formula "15"))
         (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "22"))
         (rule "applyEq" (formula "15") (term "0,1,0,0,0") (ifseqformula "22"))
         (rule "applyEq" (formula "19") (term "0,0,0") (ifseqformula "22"))
         (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "23"))
         (rule "applyEq" (formula "24") (term "0,1,0,0,0") (ifseqformula "21"))
         (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "21"))
         (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "21"))
         (rule "applyEq" (formula "22") (term "1") (ifseqformula "21"))
         (rule "applyEq" (formula "15") (term "0,1,0,0,0") (ifseqformula "21"))
         (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "21"))
         (rule "applyEq" (formula "19") (term "0,0,0") (ifseqformula "21"))
         (rule "applyEq" (formula "24") (term "0") (ifseqformula "15"))
         (rule "eqSymm" (formula "24"))
         (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
         (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
         (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,1,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,1,1,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,1,1,0"))
         (rule "mul_literals" (formula "16") (term "0,1,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,1,0"))
         (rule "polySimp_elimOne" (formula "16") (term "1,1,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
         (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "6"))
         (rule "polySimp_mulLiterals" (formula "6") (term "0"))
         (rule "polySimp_elimOne" (formula "6") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "3"))
         (rule "polySimp_mulLiterals" (formula "3") (term "0"))
         (rule "polySimp_elimOne" (formula "3") (term "0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
         (rule "polySimp_elimOne" (formula "1") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
         (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0"))
         (rule "polySimp_elimOne" (formula "15") (term "0,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0"))
         (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0"))
         (rule "polySimp_elimOne" (formula "24") (term "0,0,0"))
         (rule "nonNull" (formula "29") (inst "i=i"))
         (rule "greater_literals" (formula "29") (term "0,1"))
         (builtin "One Step Simplification" (formula "29"))
         (rule "sub_literals" (formula "29") (term "2,1,0,1"))
         (builtin "One Step Simplification" (formula "29"))
         (rule "andLeft" (formula "29"))
         (rule "notLeft" (formula "29"))
         (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "30"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "narrowSelectArrayType" (formula "29") (term "0,0,1,0") (ifseqformula "7") (ifseqformula "30"))
         (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
         (rule "applyEq" (formula "29") (term "0,1,0,0,1,0,0") (ifseqformula "23"))
         (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "28") (inst "i=i"))
         (rule "greater_literals" (formula "28") (term "0,1"))
         (builtin "One Step Simplification" (formula "28"))
         (rule "sub_literals" (formula "28") (term "2,1,0,1"))
         (builtin "One Step Simplification" (formula "28"))
         (rule "andLeft" (formula "28"))
         (rule "notLeft" (formula "28"))
         (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "30"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "narrowSelectArrayType" (formula "28") (term "0,0,1,0") (ifseqformula "7") (ifseqformula "30"))
         (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
         (rule "array2seqDef" (formula "26") (term "0,0,1,1,0") (inst "u=u"))
         (rule "eqSymm" (formula "26") (term "1,0"))
         (rule "array2seqDef" (formula "14") (term "0,0,0,1,0") (inst "u=u"))
         (rule "array2seqDef" (formula "14") (term "1,1,0") (inst "u=u"))
         (rule "eqSymm" (formula "14") (term "1,0"))
         (rule "array2seqDef" (formula "20") (term "0,1,0") (inst "u=u"))
         (rule "array2seqDef" (formula "20") (term "1") (inst "u=u"))
         (rule "eqSymm" (formula "20"))
         (rule "array2seqDef" (formula "19") (term "1") (inst "u=u"))
         (rule "eqSymm" (formula "19"))
         (rule "array2seqDef" (formula "33") (term "1") (inst "u=u"))
         (rule "eqSymm" (formula "33"))
         (rule "array2seqDef" (formula "26") (term "1,1,0") (inst "u=u"))
         (rule "eqSymm" (formula "26") (term "1,0"))
         (rule "array2seqDef" (formula "14") (term "1,0,1,1,0") (inst "u=u"))
         (rule "array2seqDef" (formula "20") (term "0,1") (inst "u=u"))
         (rule "eqSymm" (formula "20"))
         (rule "eqSeqDef" (formula "20") (inst "iv=iv"))
         (rule "andLeft" (formula "20"))
         (rule "getOfSeqDef" (formula "21") (term "1,1,0"))
         (rule "castDel" (formula "21") (term "2,1,1,0"))
         (rule "castDel" (formula "21") (term "1,1,1,0"))
         (rule "add_zero_right" (formula "21") (term "0,2,1,1,1,0"))
         (rule "polySimp_elimSub" (formula "21") (term "1,1,0,1,1,0"))
         (rule "times_zero_2" (formula "21") (term "1,1,1,0,1,1,0"))
         (rule "add_zero_right" (formula "21") (term "1,1,0,1,1,0"))
         (rule "lenOfSeqDef" (formula "20") (term "1"))
         (rule "polySimp_elimSub" (formula "20") (term "1,1"))
         (rule "times_zero_2" (formula "20") (term "1,1,1"))
         (rule "add_zero_right" (formula "20") (term "1,1"))
         (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
         (rule "polySimp_addComm1" (formula "21") (term "0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "20") (term "0,1"))
         (rule "add_zero_right" (formula "20") (term "0,0,1"))
         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,1,1,0"))
         (rule "applyEq" (formula "21") (term "0,1,0,1,0,0") (ifseqformula "20"))
         (rule "polySimp_addComm1" (formula "21") (term "0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "21") (term "1,1,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,1,1,0"))
         (rule "mul_literals" (formula "21") (term "0,1,1,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,1,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "20") (term "0,0,1"))
         (rule "polySimp_elimOne" (formula "20") (term "0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0,1,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "21") (term "0,0,1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "21") (term "0,0,1,1,1,0,0"))
         (rule "eqSeqDef2" (formula "19") (inst "iv=iv") (ifseqformula "19"))
         (builtin "One Step Simplification" (formula "19"))
         (rule "true_left" (formula "19"))
         (rule "array2seqDef" (formula "20") (term "1,1,0,0,1,0") (inst "u=u"))
         (rule "array2seqDef" (formula "19") (term "1,1,0,0") (inst "u=u"))
         (rule "nnf_imp2or" (formula "25") (term "0"))
         (rule "nnf_imp2or" (formula "18") (term "0"))
         (rule "nnf_imp2or" (formula "16") (term "0"))
         (rule "nnf_imp2or" (formula "29") (term "0"))
         (rule "nnf_imp2or" (formula "28") (term "0"))
         (rule "nnf_imp2or" (formula "26") (term "0"))
         (rule "nnf_imp2or" (formula "14") (term "0"))
         (rule "Definition_axiom_for_ghostFieldsNonNull_in_verif_selectvoting_system_core_MixServer" (formula "13") (term "0") (inst "i=i") (inst "i_0=i_0") (inst "i_1=i_1"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "andLeft" (formula "13"))
         (rule "andLeft" (formula "13"))
         (rule "andLeft" (formula "13"))
         (rule "andLeft" (formula "13"))
         (rule "notLeft" (formula "14"))
         (rule "andLeft" (formula "13"))
         (rule "andLeft" (formula "13"))
         (rule "notLeft" (formula "15"))
         (rule "notLeft" (formula "14"))
         (rule "andLeft" (formula "13"))
         (rule "notLeft" (formula "14"))
         (rule "notLeft" (formula "13"))
         (rule "narrowSelectArrayType" (formula "21") (term "2,1,1,0,0") (ifseqformula "7") (ifseqformula "35"))
         (rule "narrowSelectArrayType" (formula "22") (term "1,1,1,0") (ifseqformula "7") (ifseqformula "36"))
         (rule "narrowSelectArrayType" (formula "22") (term "2,1,1,0,0,1,0") (ifseqformula "7") (ifseqformula "35"))
         (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
         (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "24"))
         (rule "applyEq" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "23"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
         (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
         (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
         (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
         (rule "nnf_notAnd" (formula "27") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
         (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "27") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
         (rule "mul_literals" (formula "27") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "20") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
         (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
         (rule "mul_literals" (formula "20") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "18") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
         (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
         (rule "mul_literals" (formula "18") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "31") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
         (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "31") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
         (rule "mul_literals" (formula "31") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "30") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
         (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "30") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
         (rule "mul_literals" (formula "30") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "28") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
         (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "28") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
         (rule "mul_literals" (formula "28") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "16") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
         (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
         (rule "mul_literals" (formula "16") (term "1,0,0,0"))
         (rule "nnf_imp2or" (formula "22") (term "0"))
         (rule "nnf_imp2or" (formula "13") (term "0"))
         (rule "nnf_imp2or" (formula "15") (term "0"))
         (rule "nnf_imp2or" (formula "14") (term "0"))
         (rule "nnf_notAnd" (formula "22") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
         (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "22") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
         (rule "mul_literals" (formula "22") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "13") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
         (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
         (rule "mul_literals" (formula "13") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "15") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
         (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
         (rule "mul_literals" (formula "15") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "14") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
         (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
         (rule "mul_literals" (formula "14") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
         (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "29") (ifseqformula "9"))
         (rule "andLeft" (formula "29"))
         (rule "notLeft" (formula "30"))
         (rule "andLeft" (formula "29"))
         (rule "andLeft" (formula "29"))
         (rule "notLeft" (formula "31"))
         (rule "andLeft" (formula "29"))
         (rule "notLeft" (formula "31"))
         (rule "notLeft" (formula "30"))
         (rule "andLeft" (formula "29"))
         (rule "andLeft" (formula "29"))
         (rule "andLeft" (formula "29"))
         (rule "andLeft" (formula "29"))
         (rule "notLeft" (formula "30"))
         (rule "notLeft" (formula "29"))
         (rule "narrowSelectArrayType" (formula "22") (term "2,0,1,0,0,1,0") (ifseqformula "7") (ifseqformula "37"))
         (rule "narrowSelectArrayType" (formula "16") (term "2,0,0,1,1,0") (ifseqformula "7") (ifseqformula "37"))
         (rule "narrowSelectArrayType" (formula "21") (term "2,0,1,0,0") (ifseqformula "7") (ifseqformula "37"))
         (rule "nonNull" (formula "31") (inst "i=i"))
         (rule "greater_literals" (formula "31") (term "0,1"))
         (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "38")))
         (rule "sub_literals" (formula "31") (term "2,1,0"))
         (builtin "One Step Simplification" (formula "31"))
         (rule "narrowSelectArrayType" (formula "31") (term "0,0,1,0") (ifseqformula "7") (ifseqformula "38"))
         (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "30") (inst "i=i"))
         (rule "sub_literals" (formula "30") (term "2,1,0,1,1"))
         (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "39")))
         (rule "greater_literals" (formula "30") (term "0"))
         (builtin "One Step Simplification" (formula "30"))
         (rule "narrowSelectArrayType" (formula "30") (term "0,0,1,0") (ifseqformula "7") (ifseqformula "39"))
         (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
         (rule "applyEq" (formula "30") (term "0,1,0,0,1,0,0") (ifseqformula "23"))
         (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "29") (inst "i=i"))
         (rule "greater_literals" (formula "29") (term "0,1"))
         (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "40")))
         (rule "sub_literals" (formula "29") (term "2,1,0"))
         (builtin "One Step Simplification" (formula "29"))
         (rule "narrowSelectArrayType" (formula "29") (term "0,0,1,0") (ifseqformula "7") (ifseqformula "40"))
         (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
         (rule "applyEq" (formula "29") (term "0,1,0,0,1,0,0") (ifseqformula "24"))
         (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
         (rule "nnf_imp2or" (formula "31") (term "0"))
         (rule "nnf_imp2or" (formula "30") (term "0"))
         (rule "nnf_imp2or" (formula "29") (term "0"))
         (rule "nnf_notAnd" (formula "31") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
         (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "31") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
         (rule "mul_literals" (formula "31") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "30") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
         (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "30") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
         (rule "mul_literals" (formula "30") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "29") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0"))
         (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "29") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
         (rule "mul_literals" (formula "29") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
         (rule "seqGetAlphaCast" (formula "4") (term "0"))
         (rule "castedGetAny" (formula "4") (term "0"))
         (builtin "One Step Simplification" (formula "4"))
         (rule "true_left" (formula "4"))
         (rule "commute_or_2" (formula "27") (term "0"))
         (rule "arrayLengthIsAShort" (formula "23") (term "0"))
         (builtin "One Step Simplification" (formula "23"))
         (rule "true_left" (formula "23"))
         (rule "arrayLengthNotNegative" (formula "23") (term "1"))
         (rule "arrayLengthNotNegative" (formula "24") (term "0"))
         (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
         (rule "arrayLengthIsAShort" (formula "24") (term "1"))
         (builtin "One Step Simplification" (formula "24"))
         (rule "true_left" (formula "24"))
         (rule "arrayLengthNotNegative" (formula "25") (term "0"))
         (rule "applyEq" (formula "25") (term "0") (ifseqformula "26"))
         (rule "arrayLengthIsAShort" (formula "25") (term "0"))
         (builtin "One Step Simplification" (formula "25"))
         (rule "true_left" (formula "25"))
         (rule "arrayLengthIsAShort" (formula "26") (term "1"))
         (builtin "One Step Simplification" (formula "26"))
         (rule "true_left" (formula "26"))
         (rule "arrayLengthNotNegative" (formula "26") (term "0"))
         (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
         (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "1"))
         (rule "times_zero_1" (formula "26") (term "0,0"))
         (rule "add_zero_left" (formula "26") (term "0"))
         (rule "arrayLengthIsAShort" (formula "27") (term "0"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "true_left" (formula "27"))
         (rule "arrayLengthNotNegative" (formula "27") (term "1"))
         (rule "lenNonNegative" (formula "17") (term "1"))
         (rule "inEqSimp_commuteLeq" (formula "17"))
         (rule "commute_or_2" (formula "21") (term "0"))
         (rule "commute_or_2" (formula "33") (term "0"))
         (rule "commute_or_2" (formula "32") (term "0"))
         (rule "commute_or_2" (formula "31") (term "0"))
         (rule "cnf_rightDist" (formula "19") (term "0"))
         (rule "ifthenelse_split" (formula "18") (term "0"))
         (branch "self.chosen.length ≥ 1 TRUE"
            (rule "eqSymm" (formula "19"))
            (rule "applyEq" (formula "20") (term "1,1,0,0,0") (ifseqformula "19"))
            (rule "applyEq" (formula "6") (term "0") (ifseqformula "19"))
            (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "19"))
            (rule "applyEq" (formula "20") (term "1,1,0,1,0") (ifseqformula "19"))
            (rule "applyEq" (formula "20") (term "1,1,1,1,0") (ifseqformula "19"))
            (rule "applyEq" (formula "17") (term "0") (ifseqformula "19"))
            (rule "applyEq" (formula "29") (term "1") (ifseqformula "18"))
            (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "17"))
            (rule "leq_literals" (formula "24") (term "0"))
            (builtin "One Step Simplification" (formula "24"))
            (rule "true_left" (formula "24"))
            (rule "ifthenelse_split" (formula "28") (term "0"))
            (branch "msg.length ≥ 1 TRUE"
               (rule "eqSymm" (formula "29"))
               (rule "applyEq" (formula "19") (term "1,1,0,1,0") (ifseqformula "29"))
               (rule "applyEq" (formula "14") (term "1,1,0,0") (ifseqformula "29"))
               (rule "applyEq" (formula "3") (term "0") (ifseqformula "29"))
               (rule "applyEq" (formula "13") (term "1,1,0,0") (ifseqformula "29"))
               (rule "applyEq" (formula "17") (term "0") (ifseqformula "29"))
               (rule "applyEq" (formula "18") (term "1,1,0,0,0") (ifseqformula "28"))
               (rule "applyEq" (formula "6") (term "0") (ifseqformula "28"))
               (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "28"))
               (rule "applyEq" (formula "16") (term "1,1,0,0") (ifseqformula "28"))
               (rule "applyEq" (formula "15") (term "1,1,0,0") (ifseqformula "28"))
               (rule "applyEq" (formula "18") (term "1,1,1,1,0") (ifseqformula "28"))
               (rule "applyEq" (formula "23") (term "1") (ifseqformula "28"))
               (rule "applyEq" (formula "24") (term "1") (ifseqformula "28"))
               (rule "applyEq" (formula "17") (term "1") (ifseqformula "28"))
               (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "6"))
               (rule "andLeft" (formula "1"))
               (rule "inEqSimp_homoInEq1" (formula "1"))
               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "1,1,0"))
               (rule "times_zero_1" (formula "1") (term "1,0"))
               (rule "add_zero_right" (formula "1") (term "0"))
               (rule "leq_literals" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "msg.length ≥ 1 FALSE"
               (rule "eqSymm" (formula "28"))
               (rule "inEqSimp_geqRight" (formula "33"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "applyEq" (formula "15") (term "1,1,0,0") (ifseqformula "29"))
               (rule "applyEq" (formula "20") (term "1,1,0,0,0") (ifseqformula "29"))
               (rule "applyEq" (formula "20") (term "1,1,0,1,0") (ifseqformula "29"))
               (rule "add_zero_right" (formula "20") (term "1,0,1,0"))
               (rule "applyEq" (formula "4") (term "0") (ifseqformula "29"))
               (rule "inEqSimp_homoInEq1" (formula "4"))
               (rule "times_zero_2" (formula "4") (term "1,0"))
               (rule "add_zero_right" (formula "4") (term "0"))
               (rule "applyEq" (formula "20") (term "1,1,1,1,0") (ifseqformula "29"))
               (rule "applyEq" (formula "14") (term "1,1,0,0") (ifseqformula "29"))
               (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "29"))
               (rule "applyEq" (formula "18") (term "0") (ifseqformula "29"))
               (rule "qeq_literals" (formula "18"))
               (rule "closeFalse" (formula "18"))
            )
         )
         (branch "self.chosen.length ≥ 1 FALSE"
            (rule "eqSymm" (formula "18"))
            (rule "inEqSimp_geqRight" (formula "34"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "applyEqRigid" (formula "20") (term "1,1,0,1,0") (ifseqformula "19"))
            (rule "add_zero_right" (formula "20") (term "1,0,1,0"))
            (rule "applyEqRigid" (formula "18") (term "0") (ifseqformula "19"))
            (rule "qeq_literals" (formula "18"))
            (rule "true_left" (formula "18"))
            (rule "applyEq" (formula "19") (term "1,1,1,1,0") (ifseqformula "18"))
            (rule "applyEqRigid" (formula "19") (term "1,1,0,0,0") (ifseqformula "18"))
            (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "18"))
            (rule "applyEq" (formula "7") (term "0") (ifseqformula "18"))
            (rule "inEqSimp_homoInEq1" (formula "7"))
            (rule "times_zero_2" (formula "7") (term "1,0"))
            (rule "add_zero_right" (formula "7") (term "0"))
            (rule "applyEqRigid" (formula "29") (term "1") (ifseqformula "18"))
            (builtin "One Step Simplification" (formula "29"))
            (rule "inEqSimp_sepPosMonomial0" (formula "7"))
            (rule "mul_literals" (formula "7") (term "1"))
            (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "6"))
            (rule "qeq_literals" (formula "7") (term "0"))
            (builtin "One Step Simplification" (formula "7"))
            (rule "closeFalse" (formula "7"))
         )
      )
   )
)
)

}
