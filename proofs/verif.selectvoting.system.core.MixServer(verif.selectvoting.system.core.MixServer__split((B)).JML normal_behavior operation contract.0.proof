\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Nov 28 17:53:50 CET 2016
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_NONE
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=80000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , permissions-permissions\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Mon Nov 28 17:53:50 CET 2016
name=verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer\\:\\:split([B)].JML normal_behavior operation contract.0
contract=verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer\\:\\:split([B)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mihai" ) (keyVersion "09f735064ff7095c3fc50fbed0305eab50b24aa5"))

(autoModeTime "7693")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "ballots,self,result,exc,heapAtPre,o,f") (userinteraction))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "7"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "assignment" (formula "10") (term "1") (userinteraction))
(rule "methodBodyExpand" (formula "10") (term "1,1") (newnames "heapBefore_split,savedHeapBefore_split,_ballotsBefore_split") (userinteraction))
(builtin "One Step Simplification" (formula "10"))
(rule "eqSymm" (formula "10") (term "0,0,0,0,1"))
(rule "eqSymm" (formula "10") (term "1,0,0,1,0,1"))
(rule "variableDeclarationAssign" (formula "10") (term "1"))
(rule "variableDeclaration" (formula "10") (term "1") (newnames "messages"))
(rule "nonNull" (formula "10") (term "1,1,0,0,0,1") (inst "i=i"))
(rule "greater_literals" (formula "10") (term "0,1,1,1,0,0,0,1"))
(builtin "One Step Simplification" (formula "10"))
(rule "sub_literals" (formula "10") (term "2,1,0,1,1,1,0,0,0,1"))
(builtin "One Step Simplification" (formula "10"))
(rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,1,1,0,0,0,1"))
(rule "nnf_imp2or" (formula "10") (term "0,1,1,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "10") (term "0,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "10") (term "0,0,0,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "10") (term "1,0,0,0,0,0,1,1,1,0,0,0,1"))
(rule "add_zero_right" (formula "10") (term "0,0,0,0,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "10") (term "1,0,0,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0,1,1,1,0,0,0,1"))
(rule "add_literals" (formula "10") (term "0,0,0,1,0,0,1,1,1,0,0,0,1"))
(rule "add_zero_left" (formula "10") (term "0,0,1,0,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,1,1,1,0,0,0,1"))
(rule "arrayCreation" (formula "10") (term "1") (inst "#v0=x_arr_arr"))
(rule "variableDeclaration" (formula "10") (term "1") (newnames "x_arr_arr"))
(rule "variableDeclarationAssign" (formula "10") (term "1"))
(rule "variableDeclaration" (formula "10") (term "1") (newnames "dim0"))
(rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,1,1,1,0,0,0,1"))
(rule "assignment" (formula "10") (term "1"))
(builtin "One Step Simplification" (formula "10"))
(rule "ifUnfold" (formula "10") (term "1") (inst "#boolv=x"))
(rule "variableDeclaration" (formula "10") (term "1") (newnames "x"))
(rule "less_than_comparison_simple" (formula "10") (term "1"))
(builtin "One Step Simplification" (formula "10"))
(rule "less_literals" (formula "10") (term "0,0,1,0"))
(builtin "One Step Simplification" (formula "10"))
(rule "ifSplit" (formula "10"))
(branch "if x true"
   (builtin "One Step Simplification" (formula "1"))
   (rule "closeFalse" (formula "1"))
)
(branch "if x false"
   (builtin "One Step Simplification" (formula "1"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "true_left" (formula "1"))
   (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "10") (term "1") (inst "#v0=x_arr_arr_1"))
   (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_arr_arr_1"))
   (rule "variableDeclarationAssign" (formula "10") (term "1"))
   (rule "variableDeclaration" (formula "10") (term "1") (newnames "length_1"))
   (rule "assignment" (formula "10") (term "1"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "methodBodyExpand" (formula "10") (term "1") (newnames "heapBefore_<createArray>,savedHeapBefore_<createArray>"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "variableDeclaration" (formula "10") (term "1") (newnames "newObject"))
   (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "10") (term "1") (inst "#v0=x_arr_arr_2"))
   (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_arr_arr_2"))
   (rule "variableDeclarationAssign" (formula "10") (term "1"))
   (rule "variableDeclaration" (formula "10") (term "1") (newnames "length_2"))
   (rule "assignment" (formula "10") (term "1"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "allocateInstanceWithLength" (formula "10"))
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
   (builtin "One Step Simplification" (formula "11"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "2"))
   (rule "notLeft" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "blockEmpty" (formula "14") (term "1"))
   (rule "assignment" (formula "14") (term "1"))
   (builtin "One Step Simplification" (formula "14"))
   (rule "arrayLengthNotNegative" (formula "1") (term "0"))
   (rule "arrayLengthIsAShort" (formula "2") (term "0"))
   (builtin "One Step Simplification" (formula "2"))
   (rule "true_left" (formula "2"))
   (rule "methodCall" (formula "15") (term "1"))
   (branch "Normal Execution (newObject != null )"
      (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "12")))
      (rule "false_right" (formula "15"))
      (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_<createArrayHelper>,savedHeapBefore_<createArrayHelper>"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "assignment_write_attribute_this" (formula "15") (term "1"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "methodCallWithinClass" (formula "15") (term "1"))
      (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "arrayInitialisation" (formula "15") (term "1"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "polySimp_elimSub" (formula "15") (term "2,1,0,1,0"))
      (rule "mul_literals" (formula "15") (term "1,2,1,0,1,0"))
      (rule "polySimp_addComm0" (formula "15") (term "2,1,0,1,0"))
      (rule "methodCallEmpty" (formula "15") (term "1"))
      (rule "blockEmpty" (formula "15") (term "1"))
      (rule "assignment_write_attribute_this" (formula "15") (term "1"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "methodCallReturnIgnoreResult" (formula "15") (term "1"))
      (rule "blockEmpty" (formula "15") (term "1"))
      (rule "methodCallReturn" (formula "15") (term "1"))
      (rule "assignment" (formula "15") (term "1"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "methodCallEmpty" (formula "15") (term "1"))
      (rule "blockEmpty" (formula "15") (term "1"))
      (rule "assignment" (formula "15") (term "1"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "blockEmpty" (formula "15") (term "1"))
      (rule "assignment" (formula "15") (term "1"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "variableDeclarationAssign" (formula "15") (term "1"))
      (rule "variableDeclaration" (formula "15") (term "1") (newnames "bal"))
      (rule "assignment" (formula "15") (term "1"))
      (builtin "One Step Simplification" (formula "15"))
      (builtin "Loop Invariant" (formula "15") (newnames "variant,b,heapBefore_LOOP,messagesBefore_LOOP,balBefore_LOOP,messages_0,bal_0,heap_After_LOOP,anon_heap_LOOP,o,f"))
      (branch "Invariant Initially Valid"
         (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "11")) (ifInst ""  (formula "12")))
         (rule "andRight" (formula "15") (userinteraction))
         (branch "Case 1"
            (rule "andRight" (formula "15") (userinteraction))
            (branch "Case 1"
               (rule "allRight" (formula "15") (inst "sk=i_0"))
               (rule "impRight" (formula "15"))
               (rule "andLeft" (formula "1"))
               (rule "eqSymm" (formula "11"))
               (rule "eqSymm" (formula "17"))
               (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "16"))
               (builtin "One Step Simplification" (formula "9"))
               (rule "dismissNonSelectedField" (formula "17") (term "1,1"))
               (rule "dismissNonSelectedField" (formula "17") (term "1,0"))
               (rule "dismissNonSelectedField" (formula "17") (term "1,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "1"))
               (rule "applyEq" (formula "17") (term "1,2,1,0,1,1,0") (ifseqformula "4"))
               (rule "add_literals" (formula "17") (term "2,1,0,1,1,0"))
               (rule "applyEq" (formula "17") (term "1,2,1,0,1,0") (ifseqformula "4"))
               (rule "add_zero_right" (formula "17") (term "2,1,0,1,0"))
               (rule "eqSymm" (formula "17"))
               (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "4"))
               (rule "mul_literals" (formula "2") (term "1,0"))
               (rule "add_zero_right" (formula "2") (term "0"))
               (rule "applyEq" (formula "3") (term "0") (ifseqformula "4"))
               (rule "qeq_literals" (formula "3"))
               (rule "true_left" (formula "3"))
               (rule "applyEq" (formula "16") (term "1,2,1,0,0,0") (ifseqformula "3"))
               (rule "add_zero_right" (formula "16") (term "2,1,0,0,0"))
               (rule "eqSymm" (formula "16"))
               (rule "applyEq" (formula "16") (term "1,2,1,0,0,0") (ifseqformula "3"))
               (rule "add_zero_right" (formula "16") (term "2,1,0,0,0"))
               (rule "eqSymm" (formula "16"))
               (rule "applyEq" (formula "16") (term "1,2,1,0,1,0") (ifseqformula "3"))
               (rule "add_zero_right" (formula "16") (term "2,1,0,1,0"))
               (rule "eqSymm" (formula "16"))
               (rule "inEqSimp_sepPosMonomial0" (formula "2"))
               (rule "mul_literals" (formula "2") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
               (rule "qeq_literals" (formula "2") (term "0"))
               (builtin "One Step Simplification" (formula "2"))
               (rule "closeFalse" (formula "2"))
            )
            (branch
               (rule "applyEq" (formula "15") (term "0,1") (ifseqformula "2") (userinteraction))
               (rule "cut" (inst "cutFormula=  array2seq(heap, ballots)
= array2seq(store(memset(store(store(store(create(heap,
                                                  x_arr_arr_2),
                                           x_arr_arr_2,
                                           java.lang.Object::<transient>,
                                           Z(0(#))),
                                     x_arr_arr_2,
                                     java.lang.Object::<transactionConditionallyUpdated>,
                                     FALSE),
                               x_arr_arr_2,
                               java.lang.Object::<initialized>,
                               FALSE),
                         arrayRange(x_arr_arr_2,
                                    Z(0(#)),
                                    add(Z(neglit(1(#))),
                                        length(x_arr_arr_2))),
                         null),
                  x_arr_arr_2,
                  java.lang.Object::<initialized>,
                  TRUE),
            ballots)") (userinteraction))
               (branch "CUT: array2seq(heap, ballots) = array2seq(heap[create(x_arr_arr_2)] [x_arr_arr_2.<transient> := 0] [x_arr_arr_2.<transactionConditionallyUpdated> := FALSE] [x_arr_arr_2.<initialized> := FALSE] [memset(arrayRange(x_arr_arr_2, 0, -1 + x_arr_arr_2.length), null)] [x_arr_arr_2.<initialized> := TRUE], ballots) TRUE"
                  (rule "cut" (inst "cutFormula=  array2seq2d(heap,
              byte[][]::select(heap,
                               self,
                               verif.selectvoting.system.core.MixServer::$sorted))
= array2seq2d(store(memset(store(store(store(create(heap,
                                                    x_arr_arr_2),
                                             x_arr_arr_2,
                                             java.lang.Object::<transient>,
                                             Z(0(#))),
                                       x_arr_arr_2,
                                       java.lang.Object::<transactionConditionallyUpdated>,
                                       FALSE),
                                 x_arr_arr_2,
                                 java.lang.Object::<initialized>,
                                 FALSE),
                           arrayRange(x_arr_arr_2,
                                      Z(0(#)),
                                      add(Z(neglit(1(#))),
                                          length(x_arr_arr_2))),
                           null),
                    x_arr_arr_2,
                    java.lang.Object::<initialized>,
                    TRUE),
              byte[][]::select(store(memset(store(store(store(create(heap,
                                                                     x_arr_arr_2),
                                                              x_arr_arr_2,
                                                              java.lang.Object::<transient>,
                                                              Z(0(#))),
                                                        x_arr_arr_2,
                                                        java.lang.Object::<transactionConditionallyUpdated>,
                                                        FALSE),
                                                  x_arr_arr_2,
                                                  java.lang.Object::<initialized>,
                                                  FALSE),
                                            arrayRange(x_arr_arr_2,
                                                       Z(0(#)),
                                                       add(Z(neglit(1(#))),
                                                           length(x_arr_arr_2))),
                                            null),
                                     x_arr_arr_2,
                                     java.lang.Object::<initialized>,
                                     TRUE),
                               self,
                               verif.selectvoting.system.core.MixServer::$sorted))") (userinteraction))
                  (branch
                     (rule "applyEqReverse" (formula "17") (term "0") (ifseqformula "2") (userinteraction))
                     (rule "applyEqReverse" (formula "17") (term "1,1") (ifseqformula "1") (userinteraction))
                     (rule "close" (formula "17") (ifseqformula "11") (userinteraction))
                  )
                  (branch "CUT: array2seq2d(heap, self.sorted) = array2seq2d(heap[create(x_arr_arr_2)] [x_arr_arr_2.<transient> := 0] [x_arr_arr_2.<transactionConditionallyUpdated> := FALSE] [x_arr_arr_2.<initialized> := FALSE] [memset(arrayRange(x_arr_arr_2, 0, -1 + x_arr_arr_2.length), null)] [x_arr_arr_2.<initialized> := TRUE], self.sorted@heap[create(x_arr_arr_2)] [x_arr_arr_2.<transient> := 0] [x_arr_arr_2.<transactionConditionallyUpdated> := FALSE] [x_arr_arr_2.<initialized> := FALSE] [memset(arrayRange(x_arr_arr_2, 0, -1 + x_arr_arr_2.length), null)] [x_arr_arr_2.<initialized> := TRUE]) FALSE"
                     (rule "hide_right" (formula "17") (userinteraction))
                     (rule "array2seq2dDef" (formula "12") (term "0") (inst "u=u") (userinteraction))
                     (rule "array2seq2dDef" (formula "12") (term "1") (inst "u=u") (userinteraction))
                     (rule "eqSymm" (formula "10"))
                     (rule "eqSymm" (formula "12"))
                     (rule "eqSymm" (formula "1"))
                     (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "16"))
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "dismissNonSelectedField" (formula "12") (term "1,2,0"))
                     (rule "dismissNonSelectedField" (formula "12") (term "0,1,0"))
                     (rule "dismissNonSelectedField" (formula "12") (term "1,1,2,0"))
                     (rule "applyEq" (formula "12") (term "1,2,1,0,0,1,0") (ifseqformula "3"))
                     (rule "add_zero_right" (formula "12") (term "2,1,0,0,1,0"))
                     (rule "applyEq" (formula "1") (term "1,2,1,0,0,0") (ifseqformula "3"))
                     (rule "add_zero_right" (formula "1") (term "2,1,0,0,0"))
                     (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                     (rule "qeq_literals" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "applyEq" (formula "11") (term "1,2,1,0,1,1,2,0") (ifseqformula "2"))
                     (rule "add_zero_right" (formula "11") (term "2,1,0,1,1,2,0"))
                     (rule "applyEq" (formula "11") (term "1,2,1,0,0,2,0") (ifseqformula "2"))
                     (rule "add_zero_right" (formula "11") (term "2,1,0,0,2,0"))
                     (rule "applyEq" (formula "11") (term "1,2,1,0,1,2,0") (ifseqformula "2"))
                     (rule "add_zero_right" (formula "11") (term "2,1,0,1,2,0"))
                     (rule "array2seqDef" (formula "9") (term "1") (inst "u=u"))
                     (rule "eqSymm" (formula "9"))
                     (rule "narrowSelectArrayType" (formula "9") (term "2,0") (ifseqformula "4") (ifseqformula "15"))
                     (rule "array2seqDef" (formula "11") (term "2,1") (inst "u=u_1"))
                     (rule "eqSymm" (formula "11"))
                     (rule "array2seqDef" (formula "1") (term "1") (inst "u=u"))
                     (rule "eqSymm" (formula "1"))
                     (rule "narrowSelectArrayType" (formula "1") (term "2,0") (ifseqformula "4") (ifseqformula "15"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "9"))
                     (rule "eqSymm" (formula "1"))
                     (rule "equalityToSeqGetAndSeqLenRight" (formula "11") (inst "iv=iv"))
                     (rule "getOfSeqDef" (formula "11") (term "0,1,0,1"))
                     (rule "castDel" (formula "11") (term "2,0,1,0,1"))
                     (rule "castDel" (formula "11") (term "1,0,1,0,1"))
                     (rule "add_zero_right" (formula "11") (term "0,2,1,2,1,0,1,0,1"))
                     (rule "add_zero_right" (formula "11") (term "0,2,0,1,1,0,1,0,1"))
                     (rule "polySimp_elimSub" (formula "11") (term "1,1,0,0,1,0,1"))
                     (rule "times_zero_2" (formula "11") (term "1,1,1,0,0,1,0,1"))
                     (rule "add_zero_right" (formula "11") (term "1,1,0,0,1,0,1"))
                     (rule "lenOfSeqDef" (formula "11") (term "0,0"))
                     (rule "eqSymm" (formula "11") (term "0"))
                     (rule "polySimp_elimSub" (formula "11") (term "1,1,0"))
                     (rule "times_zero_2" (formula "11") (term "1,1,1,0"))
                     (rule "add_zero_right" (formula "11") (term "1,1,0"))
                     (rule "getOfSeqDef" (formula "11") (term "1,1,0,1"))
                     (rule "castDel" (formula "11") (term "2,1,1,0,1"))
                     (rule "castDel" (formula "11") (term "1,1,1,0,1"))
                     (rule "add_zero_right" (formula "11") (term "0,2,1,1,1,1,0,1"))
                     (rule "polySimp_elimSub" (formula "11") (term "1,1,0,1,1,0,1"))
                     (rule "mul_literals" (formula "11") (term "1,1,1,0,1,1,0,1"))
                     (rule "add_zero_right" (formula "11") (term "1,1,0,1,1,0,1"))
                     (rule "lenOfSeqDef" (formula "11") (term "1,1,0,0,1"))
                     (rule "polySimp_elimSub" (formula "11") (term "1,1,1,0,0,1"))
                     (rule "times_zero_2" (formula "11") (term "1,1,1,1,0,0,1"))
                     (rule "add_zero_right" (formula "11") (term "1,1,1,0,0,1"))
                     (rule "lenOfSeqDef" (formula "11") (term "0,0"))
                     (rule "polySimp_elimSub" (formula "11") (term "1,0,0"))
                     (rule "times_zero_2" (formula "11") (term "1,1,0,0"))
                     (rule "add_zero_right" (formula "11") (term "1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,1,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "11") (term "0,1,0"))
                     (rule "add_zero_right" (formula "11") (term "0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,1,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,1,1,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "11") (term "0,1,1,0,0,1"))
                     (rule "add_zero_right" (formula "11") (term "0,0,1,1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,1,0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                     (rule "add_zero_right" (formula "11") (term "0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,1,0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,1,1,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,1,0,1"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,1,0,1"))
                     (rule "mul_literals" (formula "11") (term "0,1,1,0,0,1,0,1"))
                     (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,1,0,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "11") (term "0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,1,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,1,1,0,1"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,1,0,1,1,0,1"))
                     (rule "mul_literals" (formula "11") (term "0,1,1,0,1,1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,1,1,0,1"))
                     (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,1,1,0,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "11") (term "0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0,0,1,0,0,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0,1,0,0,1,0,0,1"))
                     (rule "polySimp_elimOne" (formula "11") (term "0,0,0,1,0,0,1,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,1"))
                     (rule "mul_literals" (formula "11") (term "0,1,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,1"))
                     (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,1"))
                     (rule "array2seqDef" (formula "1") (term "0") (inst "u=u"))
                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                     (rule "eqSeqDef2" (formula "9") (inst "iv=iv") (ifseqformula "9"))
                     (builtin "One Step Simplification" (formula "9"))
                     (rule "true_left" (formula "9"))
                     (rule "array2seqDef" (formula "10") (term "1,1,1,0,1") (inst "u=u"))
                     (rule "dismissNonSelectedField" (formula "10") (term "2,1,1,1,0,1"))
                     (rule "eqSeqDef2" (formula "1") (inst "iv=iv") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "pullOutSelect" (formula "9") (term "0,1,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_2"))
                     (rule "applyEq" (formula "10") (term "1,0,1,1,1,1,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "10") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "10") (term "1,1,2,1,1,1,0,1") (ifseqformula "1"))
                     (rule "applyEq" (formula "10") (term "0,0,0,0,0") (ifseqformula "1"))
                     (rule "simplifySelectOfMemset" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "eqSymm" (formula "10") (term "0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                     (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
                     (rule "applyEqReverse" (formula "10") (term "0,0,0,1,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "10") (term "1,1,2,1,1,1,0,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "10") (term "0,1,1,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "allRight" (formula "10") (inst "sk=iv_4"))
                     (rule "impRight" (formula "10"))
                     (rule "andLeft" (formula "1"))
                     (rule "applyEqReverse" (formula "12") (term "0,1,1,1,0,1") (ifseqformula "3"))
                     (rule "applyEqReverse" (formula "12") (term "1,0,1,1,1") (ifseqformula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "replace_known_left" (formula "11") (term "0,0,1") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "1")))
                     (rule "inEqSimp_homoInEq0" (formula "2"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "inEqSimp_homoInEq0" (formula "11") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "11") (term "0,1"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1"))
                     (rule "polySimp_rightDist" (formula "2") (term "1"))
                     (rule "mul_literals" (formula "2") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                     (rule "mul_literals" (formula "11") (term "0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0,1"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,1"))
                     (rule "mul_literals" (formula "11") (term "0,1,0,1"))
                     (rule "polySimp_elimOne" (formula "11") (term "1,1,0,1"))
                     (rule "pullOutSelect" (formula "11") (term "1,2,1,1") (inst "selectSK=arr_3"))
                     (rule "applyEq" (formula "12") (term "0,1,1,1") (ifseqformula "1"))
                     (rule "simplifySelectOfMemset" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                     (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,0"))
                     (rule "replace_known_left" (formula "1") (term "1,0,0,0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (term "1,0,0") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "1") (term "0,1,0,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
                     (rule "applyEqReverse" (formula "12") (term "0,1,1,1") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "12") (term "1,2,1,1") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "10") (ifseqformula "7"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "notLeft" (formula "12"))
                     (rule "notLeft" (formula "11"))
                     (rule "andLeft" (formula "10"))
                     (rule "notLeft" (formula "11"))
                     (rule "andLeft" (formula "10"))
                     (rule "notLeft" (formula "11"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "notLeft" (formula "10"))
                     (rule "nonNull" (formula "13") (inst "i=i"))
                     (rule "sub_literals" (formula "13") (term "2,1,0,1,1"))
                     (builtin "One Step Simplification" (formula "13"))
                     (rule "greater_literals" (formula "13") (term "0,1"))
                     (builtin "One Step Simplification" (formula "13"))
                     (rule "andLeft" (formula "13"))
                     (rule "notLeft" (formula "13"))
                     (rule "narrowSelectArrayType" (formula "13") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "14"))
                     (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "12") (inst "i=i"))
                     (rule "sub_literals" (formula "12") (term "2,1,0,1,1"))
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "greater_literals" (formula "12") (term "0,1"))
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "andLeft" (formula "12"))
                     (rule "notLeft" (formula "12"))
                     (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "14"))
                     (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "11") (inst "i=i"))
                     (rule "sub_literals" (formula "11") (term "2,1,0,1,1"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "greater_literals" (formula "11") (term "0,1"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "andLeft" (formula "11"))
                     (rule "notLeft" (formula "11"))
                     (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "14"))
                     (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "10") (inst "i=i"))
                     (rule "greater_literals" (formula "10") (term "0,1"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "sub_literals" (formula "10") (term "2,1,0,1"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "andLeft" (formula "10"))
                     (rule "notLeft" (formula "10"))
                     (rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "14"))
                     (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                     (rule "nnf_imp2or" (formula "13") (term "0"))
                     (rule "nnf_imp2or" (formula "12") (term "0"))
                     (rule "nnf_imp2or" (formula "11") (term "0"))
                     (rule "nnf_imp2or" (formula "10") (term "0"))
                     (rule "nnf_notAnd" (formula "13") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                     (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                     (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "12") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                     (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                     (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "11") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
                     (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                     (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "10") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                     (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                     (rule "commute_or_2" (formula "13") (term "0"))
                     (rule "commute_or_2" (formula "12") (term "0"))
                     (rule "commute_or_2" (formula "11") (term "0"))
                     (rule "commute_or_2" (formula "10") (term "0"))
                     (rule "commute_or" (formula "13") (term "0,0"))
                     (rule "commute_or" (formula "12") (term "0,0"))
                     (rule "commute_or" (formula "11") (term "0,0"))
                     (rule "commute_or" (formula "10") (term "0,0"))
                     (rule "ifthenelse_split" (formula "2") (term "0"))
                     (branch "self.sorted.length >= 1 TRUE"
                        (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "3")))
                        (rule "equalityToSeqGetAndSeqLenRight" (formula "24") (inst "iv=iv"))
                        (rule "lenOfSeqDef" (formula "24") (term "1,0"))
                        (rule "polySimp_elimSub" (formula "24") (term "1,1,0"))
                        (rule "times_zero_2" (formula "24") (term "1,1,1,0"))
                        (rule "add_zero_right" (formula "24") (term "1,1,0"))
                        (rule "getOfSeqDef" (formula "24") (term "1,1,0,1"))
                        (rule "castDel" (formula "24") (term "2,1,1,0,1"))
                        (rule "castDel" (formula "24") (term "1,1,1,0,1"))
                        (rule "add_zero_right" (formula "24") (term "0,2,1,1,1,0,1"))
                        (rule "polySimp_elimSub" (formula "24") (term "1,1,0,1,1,0,1"))
                        (rule "times_zero_2" (formula "24") (term "1,1,1,0,1,1,0,1"))
                        (rule "add_zero_right" (formula "24") (term "1,1,0,1,1,0,1"))
                        (rule "lenOfSeqDef" (formula "24") (term "0,0"))
                        (rule "polySimp_elimSub" (formula "24") (term "1,0,0"))
                        (rule "mul_literals" (formula "24") (term "1,1,0,0"))
                        (rule "add_zero_right" (formula "24") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "allRight" (formula "24") (inst "sk=iv_5"))
                        (rule "impRight" (formula "24"))
                        (rule "andLeft" (formula "1"))
                        (rule "replace_known_left" (formula "26") (term "0,0,1") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "26"))
                        (rule "lenOfSeqDef" (formula "2") (term "1"))
                        (rule "polySimp_elimSub" (formula "2") (term "1,1"))
                        (rule "times_zero_2" (formula "2") (term "1,1,1"))
                        (rule "add_zero_right" (formula "2") (term "1,1"))
                        (rule "getOfSeqDef" (formula "26") (term "0"))
                        (rule "castDel" (formula "26") (term "1,0"))
                        (rule "castDel" (formula "26") (term "2,0"))
                        (rule "add_zero_right" (formula "26") (term "0,2,1,0"))
                        (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "26"))
                        (rule "polySimp_elimSub" (formula "26") (term "1,0,0"))
                        (rule "times_zero_2" (formula "26") (term "1,1,0,0"))
                        (rule "add_zero_right" (formula "26") (term "1,0,0"))
                        (rule "eqSymm" (formula "26"))
                        (rule "inEqSimp_ltToLeq" (formula "2") (term "0,1"))
                        (rule "add_zero_right" (formula "2") (term "0,0,1"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0"))
                        (rule "eqSymm" (formula "26"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1"))
                        (rule "polySimp_addComm1" (formula "26") (term "0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0"))
                        (rule "eqSymm" (formula "26"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1"))
                        (rule "eqSymm" (formula "26"))
                        (rule "polySimp_addComm1" (formula "26") (term "0,0,0"))
                        (rule "eqSymm" (formula "26"))
                        (rule "inEqSimp_commuteLeq" (formula "1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0,0,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0"))
                        (rule "eqSymm" (formula "26"))
                        (rule "polySimp_elimOne" (formula "26") (term "0,0,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "26") (term "0,0,0"))
                        (rule "eqSymm" (formula "26"))
                        (rule "pullOutSelect" (formula "26") (term "1,0") (inst "selectSK=arr_4"))
                        (rule "simplifySelectOfMemset" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "eqSymm" (formula "27"))
                        (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0,0"))
                        (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "29"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfCreate" (formula "1"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                        (rule "applyEqReverse" (formula "27") (term "1,1") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "27"))
                        (rule "closeTrue" (formula "27"))
                     )
                     (branch "self.sorted.length >= 1 FALSE"
                        (rule "inEqSimp_geqRight" (formula "14"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_homoInEq1" (formula "3"))
                        (rule "mul_literals" (formula "3") (term "1,0"))
                        (rule "add_zero_right" (formula "3") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                        (rule "mul_literals" (formula "3") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "3") (term "0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "closeFalse" (formula "3"))
                     )
                  )
               )
               (branch "CUT: array2seq(heap, ballots) = array2seq(heap[create(x_arr_arr_2)] [x_arr_arr_2.<transient> := 0] [x_arr_arr_2.<transactionConditionallyUpdated> := FALSE] [x_arr_arr_2.<initialized> := FALSE] [memset(arrayRange(x_arr_arr_2, 0, -1 + x_arr_arr_2.length), null)] [x_arr_arr_2.<initialized> := TRUE], ballots) FALSE"
                  (rule "equalityToSeqGetAndSeqLenRight" (formula "11") (inst "iv=iv") (userinteraction))
                  (rule "hide_right" (formula "16") (userinteraction))
                  (rule "andRight" (formula "11") (userinteraction))
                  (branch "Case 1"
                     (rule "eqSymm" (formula "9"))
                     (rule "eqSymm" (formula "11"))
                     (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "15"))
                     (builtin "One Step Simplification" (formula "7"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "applyEq" (formula "10") (term "1,2,1,0,0,0,0") (ifseqformula "1"))
                     (rule "add_zero_right" (formula "10") (term "2,1,0,0,0,0"))
                     (rule "array2seqDef" (formula "8") (term "1") (inst "u=u"))
                     (rule "eqSymm" (formula "8"))
                     (rule "narrowSelectArrayType" (formula "8") (term "2,0") (ifseqformula "3") (ifseqformula "14"))
                     (rule "array2seqDef" (formula "10") (term "0,1") (inst "u=u"))
                     (rule "eqSymm" (formula "10"))
                     (rule "lenOfSeqDef" (formula "10") (term "0"))
                     (rule "polySimp_elimSub" (formula "10") (term "1,0"))
                     (rule "times_zero_2" (formula "10") (term "1,1,0"))
                     (rule "add_zero_right" (formula "10") (term "1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0"))
                     (rule "add_zero_right" (formula "10") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,0,0"))
                     (rule "array2seqDef" (formula "10") (term "0,1") (inst "u=u"))
                     (rule "eqSymm" (formula "10"))
                     (rule "lenOfSeqDef" (formula "10") (term "0"))
                     (rule "polySimp_elimSub" (formula "10") (term "1,0"))
                     (rule "times_zero_2" (formula "10") (term "1,1,0"))
                     (rule "add_zero_right" (formula "10") (term "1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0"))
                     (rule "add_zero_right" (formula "10") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0"))
                     (rule "polySimp_elimOne" (formula "10") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "closeTrue" (formula "10"))
                  )
                  (branch "Case 2"
                     (rule "allRight" (formula "11") (inst "sk=iv_2"))
                     (rule "impRight" (formula "11"))
                     (rule "andLeft" (formula "1"))
                     (rule "eqSymm" (formula "11"))
                     (rule "eqSymm" (formula "13"))
                     (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "17"))
                     (builtin "One Step Simplification" (formula "9"))
                     (rule "inEqSimp_ltToLeq" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "1"))
                     (rule "applyEq" (formula "3") (term "0") (ifseqformula "4"))
                     (rule "qeq_literals" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "applyEq" (formula "12") (term "1,2,1,0,0,0,0") (ifseqformula "3"))
                     (rule "add_literals" (formula "12") (term "2,1,0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "array2seqDef" (formula "10") (term "1") (inst "u=u"))
                     (rule "eqSymm" (formula "10"))
                     (rule "narrowSelectArrayType" (formula "10") (term "2,0") (ifseqformula "5") (ifseqformula "16"))
                     (rule "array2seqDef" (formula "12") (term "0,1") (inst "u=u"))
                     (rule "eqSymm" (formula "12"))
                     (rule "getOfSeqDef" (formula "12") (term "0"))
                     (rule "castDel" (formula "12") (term "1,0"))
                     (rule "castDel" (formula "12") (term "2,0"))
                     (rule "add_zero_right" (formula "12") (term "0,2,1,0"))
                     (rule "polySimp_elimSub" (formula "12") (term "1,1,0,0"))
                     (rule "times_zero_2" (formula "12") (term "1,1,1,0,0"))
                     (rule "add_zero_right" (formula "12") (term "1,1,0,0"))
                     (rule "narrowSelectArrayType" (formula "12") (term "1,0") (ifseqformula "5") (ifseqformula "16"))
                     (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                     (rule "polySimp_addComm1" (formula "12") (term "0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                     (rule "replace_known_left" (formula "12") (term "0,0,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0"))
                     (rule "polySimp_elimOne" (formula "12") (term "0,0,0"))
                     (rule "array2seqDef" (formula "2") (term "0,0") (inst "u=u"))
                     (rule "lenOfSeqDef" (formula "2") (term "0"))
                     (rule "polySimp_elimSub" (formula "2") (term "1,0"))
                     (rule "times_zero_2" (formula "2") (term "1,1,0"))
                     (rule "add_zero_right" (formula "2") (term "1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0"))
                     (rule "add_zero_right" (formula "2") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                     (rule "array2seqDef" (formula "12") (term "0,1") (inst "u=u"))
                     (rule "eqSymm" (formula "12"))
                     (rule "getOfSeqDef" (formula "12") (term "0"))
                     (rule "castDel" (formula "12") (term "1,0"))
                     (rule "castDel" (formula "12") (term "2,0"))
                     (rule "add_zero_right" (formula "12") (term "0,2,1,0"))
                     (rule "polySimp_elimSub" (formula "12") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "12") (term "1,1,1,0,0"))
                     (rule "add_zero_right" (formula "12") (term "1,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "12") (term "1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                     (rule "polySimp_addComm1" (formula "12") (term "0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                     (rule "replace_known_left" (formula "12") (term "0,0,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0"))
                     (rule "polySimp_elimOne" (formula "12") (term "0,0,0"))
                     (rule "eqSeqDef2" (formula "10") (inst "iv=iv") (ifseqformula "10"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "pullOutSelect" (formula "11") (term "1,0") (inst "selectSK=arr_1"))
                     (rule "simplifySelectOfMemset" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                     (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "16"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
                     (rule "applyEqReverse" (formula "12") (term "1,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "narrowSelectArrayType" (formula "11") (term "1,0") (ifseqformula "5") (ifseqformula "15"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "closeTrue" (formula "11"))
                  )
               )
            )
         )
         (branch "Case 2"
            (rule "wellFormedStorePrimitive" (formula "15"))
            (rule "eqSymm" (formula "9"))
            (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "7"))
            (rule "applyEq" (formula "15") (term "1,2,1,0") (ifseqformula "2"))
            (rule "add_zero_right" (formula "15") (term "2,1,0"))
            (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
            (rule "qeq_literals" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "array2seqDef" (formula "8") (term "1") (inst "u=u"))
            (rule "eqSymm" (formula "8"))
            (rule "narrowSelectArrayType" (formula "8") (term "2,0") (ifseqformula "3") (ifseqformula "13"))
            (rule "wellFormedMemsetArrayObject" (formula "14"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "wellFormedStorePrimitive" (formula "14") (term "0"))
            (rule "wellFormedStorePrimitive" (formula "14") (term "0"))
            (rule "wellFormedStorePrimitive" (formula "14") (term "0"))
            (rule "wellFormedCreate" (formula "14") (term "0"))
            (rule "orRight" (formula "14"))
            (rule "close" (formula "14") (ifseqformula "3"))
         )
      )
      (branch "Body Preserves Invariant"
         (opengoal " ")
      )
      (branch "Use Case"
         (builtin "One Step Simplification" (formula "12"))
         (builtin "One Step Simplification" (formula "17"))
         (rule "andLeft" (formula "12"))
         (rule "andLeft" (formula "12"))
         (rule "andLeft" (formula "14"))
         (rule "andLeft" (formula "12"))
         (rule "andLeft" (formula "13"))
         (rule "notLeft" (formula "14"))
         (rule "notLeft" (formula "13"))
         (rule "eqSymm" (formula "9"))
         (rule "eqSymm" (formula "13"))
         (rule "eqSymm" (formula "12") (term "1,0"))
         (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "21"))
         (builtin "One Step Simplification" (formula "7"))
         (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "17"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "dismissNonSelectedField" (formula "15") (term "0,0,1"))
         (rule "dismissNonSelectedField" (formula "14") (term "0,0"))
         (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
         (rule "variableDeclarationAssign" (formula "22") (term "1"))
         (rule "variableDeclaration" (formula "22") (term "1") (newnames "b_1"))
         (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
         (rule "qeq_literals" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "applyEq" (formula "13") (term "1,2,1,0,0,0") (ifseqformula "1"))
         (rule "add_zero_right" (formula "13") (term "2,1,0,0,0"))
         (rule "applyEq" (formula "11") (term "1,2,1,0,0,0,0,1,0") (ifseqformula "1"))
         (rule "add_literals" (formula "11") (term "2,1,0,0,0,0,1,0"))
         (rule "eqSymm" (formula "11") (term "1,0"))
         (rule "applyEq" (formula "14") (term "1,2,1,0,0,0,1") (ifseqformula "1"))
         (rule "add_zero_right" (formula "14") (term "2,1,0,0,0,1"))
         (rule "applyEq" (formula "12") (term "1,2,1,0,0,0,1,1,0") (ifseqformula "1"))
         (rule "add_literals" (formula "12") (term "2,1,0,0,0,1,1,0"))
         (rule "applyEq" (formula "21") (term "1,2,1,0,0,0,1,1,0") (ifseqformula "1"))
         (rule "add_zero_right" (formula "21") (term "2,1,0,0,0,1,1,0"))
         (rule "applyEq" (formula "12") (term "1,2,1,0,0,0,1,0") (ifseqformula "1"))
         (rule "add_literals" (formula "12") (term "2,1,0,0,0,1,0"))
         (rule "eqSymm" (formula "12"))
         (rule "applyEq" (formula "12") (term "1,2,1,0,0,0,0") (ifseqformula "1"))
         (rule "add_literals" (formula "12") (term "2,1,0,0,0,0"))
         (rule "eqSymm" (formula "12"))
         (rule "applyEq" (formula "11") (term "1,2,1,0,0,0,0,1,0") (ifseqformula "1"))
         (rule "add_zero_right" (formula "11") (term "2,1,0,0,0,0,1,0"))
         (rule "eqSymm" (formula "11") (term "1,0"))
         (rule "applyEq" (formula "11") (term "1,2,1,0,0,0,1,0,1,0") (ifseqformula "1"))
         (rule "add_literals" (formula "11") (term "2,1,0,0,0,1,0,1,0"))
         (rule "eqSymm" (formula "11") (term "1,0"))
         (rule "applyEq" (formula "11") (term "1,2,1,0,0,0,1,0,1,0") (ifseqformula "1"))
         (rule "add_zero_right" (formula "11") (term "2,1,0,0,0,1,0,1,0"))
         (rule "eqSymm" (formula "11") (term "1,0"))
         (rule "applyEq" (formula "11") (term "1,2,1,0,0,0,1,1,0,1,0") (ifseqformula "1"))
         (rule "add_zero_right" (formula "11") (term "2,1,0,0,0,1,1,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
         (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
         (rule "array2seqDef" (formula "8") (term "1") (inst "u=u"))
         (rule "eqSymm" (formula "8"))
         (rule "narrowSelectArrayType" (formula "8") (term "2,0") (ifseqformula "3") (ifseqformula "20"))
         (rule "array2seqDef" (formula "12") (term "1") (inst "u=u"))
         (rule "eqSymm" (formula "12"))
         (rule "array2seqDef" (formula "11") (term "1,1,0") (inst "u=u"))
         (rule "eqSymm" (formula "11") (term "1,0"))
         (rule "array2seqDef" (formula "11") (term "1,1,0") (inst "u=u"))
         (rule "eqSymm" (formula "11") (term "1,0"))
         (rule "eqSeqDef2" (formula "12") (inst "iv=iv") (ifseqformula "12"))
         (builtin "One Step Simplification" (formula "12"))
         (rule "true_left" (formula "12"))
         (rule "eqSeqDef2" (formula "8") (inst "iv=iv") (ifseqformula "8"))
         (builtin "One Step Simplification" (formula "8"))
         (rule "true_left" (formula "8"))
         (rule "eqSeqDef" (formula "10") (term "1,0") (inst "iv=iv"))
         (rule "lenOfSeqDef" (formula "10") (term "1,0,1,0"))
         (rule "polySimp_elimSub" (formula "10") (term "1,1,0,1,0"))
         (rule "times_zero_2" (formula "10") (term "1,1,1,0,1,0"))
         (rule "add_zero_right" (formula "10") (term "1,1,0,1,0"))
         (rule "lenOfSeqDef" (formula "10") (term "0,0,1,0"))
         (rule "polySimp_elimSub" (formula "10") (term "1,0,0,1,0"))
         (rule "times_zero_2" (formula "10") (term "1,1,0,0,1,0"))
         (rule "add_zero_right" (formula "10") (term "1,0,0,1,0"))
         (rule "lenOfSeqDef" (formula "10") (term "1,1,0,0,1,1,0"))
         (rule "polySimp_elimSub" (formula "10") (term "1,1,1,0,0,1,1,0"))
         (rule "times_zero_2" (formula "10") (term "1,1,1,1,0,0,1,1,0"))
         (rule "add_zero_right" (formula "10") (term "1,1,1,0,0,1,1,0"))
         (rule "getOfSeqDef" (formula "10") (term "0,1,0,1,1,0"))
         (rule "castDel" (formula "10") (term "1,0,1,0,1,1,0"))
         (rule "castDel" (formula "10") (term "2,0,1,0,1,1,0"))
         (rule "add_zero_right" (formula "10") (term "0,2,1,0,1,0,1,1,0"))
         (rule "eqSymm" (formula "10") (term "1,0,1,1,0"))
         (rule "polySimp_elimSub" (formula "10") (term "1,1,0,1,1,0,1,1,0"))
         (rule "times_zero_2" (formula "10") (term "1,1,1,0,1,1,0,1,1,0"))
         (rule "add_zero_right" (formula "10") (term "1,1,0,1,1,0,1,1,0"))
         (rule "getOfSeqDef" (formula "10") (term "0,1,0,1,1,0"))
         (rule "castDel" (formula "10") (term "1,0,1,0,1,1,0"))
         (rule "castDel" (formula "10") (term "2,0,1,0,1,1,0"))
         (rule "add_zero_right" (formula "10") (term "0,2,1,0,1,0,1,1,0"))
         (rule "eqSymm" (formula "10") (term "1,0,1,1,0"))
         (rule "polySimp_elimSub" (formula "10") (term "1,1,0,1,1,0,1,1,0"))
         (rule "mul_literals" (formula "10") (term "1,1,1,0,1,1,0,1,1,0"))
         (rule "add_zero_right" (formula "10") (term "1,1,0,1,1,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "10") (term "0,1,0,1,0"))
         (rule "add_zero_right" (formula "10") (term "0,0,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,1,0"))
         (rule "add_zero_right" (formula "10") (term "0,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "10") (term "0,1,1,0,0,1,1,0"))
         (rule "add_zero_right" (formula "10") (term "0,0,1,1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,1,0,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0,1,1,0"))
         (rule "eqSymm" (formula "10") (term "1,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,1,1,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0,1,1,0"))
         (rule "eqSymm" (formula "10") (term "1,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,1,1,0,1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,1,1,0,1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,0,1,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "0,0,1,0,1,0"))
         (rule "polySimp_elimOne" (formula "10") (term "0,0,1,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "10") (term "0,0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,0,1,0,0,1,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "10") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,0,1,1,0"))
         (rule "eqSymm" (formula "10") (term "1,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,1,1,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "10") (term "1,1,0,1,1,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,1,1,0,1,1,0"))
         (rule "mul_literals" (formula "10") (term "0,1,1,0,1,1,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,1,1,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,1,0"))
         (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,0,1,1,0"))
         (rule "eqSymm" (formula "10") (term "1,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,1,1,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "10") (term "1,1,0,1,1,0,1,1,0"))
         (rule "mul_literals" (formula "10") (term "0,1,1,0,1,1,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,1,1,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,1,1,0,1,1,0"))
         (rule "pullOutSelect" (formula "11") (term "0,0") (inst "selectSK=java_lang_Object_created__0"))
         (rule "simplifySelectOfMemset" (formula "11"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "simplifySelectOfStore" (formula "11"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "simplifySelectOfStore" (formula "11"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "simplifySelectOfStore" (formula "11"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "simplifySelectOfCreate" (formula "11"))
         (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "17")))
         (rule "castDel" (formula "11") (term "1,0"))
         (rule "apply_eq_boolean" (formula "11") (term "2,0") (ifseqformula "14"))
         (rule "pullOutSelect" (formula "13") (term "0,0,1") (inst "selectSK=java_lang_Object_created__1"))
         (rule "simplifySelectOfMemset" (formula "13"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "simplifySelectOfStore" (formula "13"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "simplifySelectOfStore" (formula "13"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "simplifySelectOfStore" (formula "13"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "simplifySelectOfCreate" (formula "13"))
         (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "18")))
         (rule "castDel" (formula "13") (term "1,0"))
         (rule "eqSymm" (formula "13") (term "0,0"))
         (rule "sortsDisjointModuloNull" (formula "13") (term "0,0"))
         (rule "replace_known_right" (formula "13") (term "1,0,0") (ifseqformula "18"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "applyEqReverse" (formula "14") (term "0,0,1") (ifseqformula "13"))
         (rule "hideAuxiliaryEq" (formula "13"))
         (rule "pullOutSelect" (formula "10") (term "1,0,1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_3"))
         (rule "applyEq" (formula "11") (term "1,0,1,1,1,1,0,0,1,1,0") (ifseqformula "10"))
         (rule "applyEq" (formula "11") (term "1,0,0,0,1,1,1,0,0,1,1,0") (ifseqformula "10"))
         (rule "applyEq" (formula "11") (term "1,0,0,0,0,0,1,0") (ifseqformula "10"))
         (rule "applyEq" (formula "11") (term "1,1,1,0,1,0,1,1,0") (ifseqformula "10"))
         (rule "applyEq" (formula "11") (term "1,0,1,1,1,0,0,1,0,1,1,0") (ifseqformula "10"))
         (rule "simplifySelectOfAnon" (formula "10"))
         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "19")))
         (rule "dismissNonSelectedField" (formula "10") (term "2,0"))
         (rule "dismissNonSelectedField" (formula "10") (term "0,0,0,0"))
         (rule "ifthenelse_negated" (formula "10") (term "0"))
         (rule "pullOutSelect" (formula "10") (term "1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_4"))
         (rule "simplifySelectOfMemset" (formula "10"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "dismissNonSelectedField" (formula "10") (term "2,0"))
         (rule "dismissNonSelectedField" (formula "10") (term "2,0"))
         (rule "dismissNonSelectedField" (formula "10") (term "2,0"))
         (rule "elementOfArrayRange" (formula "10") (term "0,0") (inst "iv=iv"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "simplifySelectOfCreate" (formula "10"))
         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "19")))
         (rule "applyEqReverse" (formula "11") (term "1,0") (ifseqformula "10"))
         (rule "hideAuxiliaryEq" (formula "10"))
         (rule "pullOutSelect" (formula "10") (term "0,0,0") (inst "selectSK=java_lang_Object_created__2"))
         (rule "simplifySelectOfMemset" (formula "10"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "simplifySelectOfStore" (formula "10"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "simplifySelectOfStore" (formula "10"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "simplifySelectOfStore" (formula "10"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "simplifySelectOfCreate" (formula "10"))
         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "19")))
         (rule "castDel" (formula "10") (term "1,0"))
         (rule "eqSymm" (formula "10") (term "0,0"))
         (rule "sortsDisjointModuloNull" (formula "10") (term "0,0"))
         (rule "replace_known_right" (formula "10") (term "1,0,0") (ifseqformula "19"))
         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "20")))
         (rule "applyEqReverse" (formula "11") (term "0,0,0") (ifseqformula "10"))
         (rule "hideAuxiliaryEq" (formula "10"))
         (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "4"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "applyEqReverse" (formula "11") (term "1,1,1,0,1,0,1,1,0") (ifseqformula "10"))
         (rule "applyEqReverse" (formula "11") (term "1,0,1,1,1,0,0,1,0,1,1,0") (ifseqformula "10"))
         (rule "applyEqReverse" (formula "11") (term "1,0,0,0,0,0,1,0") (ifseqformula "10"))
         (rule "applyEqReverse" (formula "11") (term "1,0,1,0,0,1,0") (ifseqformula "10"))
         (rule "applyEqReverse" (formula "11") (term "1,0,1,1,1,1,0,0,1,1,0") (ifseqformula "10"))
         (rule "applyEqReverse" (formula "11") (term "1,0,0,0,1,1,1,0,0,1,1,0") (ifseqformula "10"))
         (rule "hideAuxiliaryEq" (formula "10"))
         (rule "nnf_imp2or" (formula "10") (term "0"))
         (rule "nnf_notAnd" (formula "10") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
         (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
         (rule "mul_literals" (formula "10") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
         (rule "nnf_imp2or" (formula "10") (term "0,1,1,0"))
         (rule "nnf_notAnd" (formula "10") (term "0,0,1,1,0"))
         (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0,1,1,0"))
         (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,1,1,0"))
         (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,1,1,0"))
         (rule "mul_literals" (formula "10") (term "1,0,0,0,1,1,0"))
         (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0,1,1,0"))
         (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0,1,1,0"))
         (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0,1,1,0"))
         (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,1,1,0"))
         (rule "add_zero_left" (formula "10") (term "0,0,1,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,1,1,0"))
         (rule "compound_greater_equal_than_comparison_1" (formula "20") (term "1") (inst "#v0=x"))
         (rule "variableDeclarationAssign" (formula "20") (term "1"))
         (rule "variableDeclaration" (formula "20") (term "1") (newnames "x_1"))
         (rule "assignment_read_length" (formula "20") (term "1"))
         (branch "Normal Execution (bal != null)"
            (builtin "One Step Simplification" (formula "21"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "20"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "8") (ifseqformula "5"))
            (rule "andLeft" (formula "8"))
            (rule "notLeft" (formula "9"))
            (rule "andLeft" (formula "8"))
            (rule "notLeft" (formula "9"))
            (rule "andLeft" (formula "8"))
            (rule "notLeft" (formula "9"))
            (rule "andLeft" (formula "8"))
            (rule "andLeft" (formula "8"))
            (rule "notLeft" (formula "10"))
            (rule "andLeft" (formula "8"))
            (rule "andLeft" (formula "8"))
            (rule "andLeft" (formula "8"))
            (rule "notLeft" (formula "8"))
            (rule "nonNull" (formula "11") (inst "i=i"))
            (rule "greater_literals" (formula "11") (term "0,1"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "sub_literals" (formula "11") (term "2,1,0,1"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "andLeft" (formula "11"))
            (rule "notLeft" (formula "11"))
            (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "3") (ifseqformula "17"))
            (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
            (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "10") (inst "i=i"))
            (rule "sub_literals" (formula "10") (term "2,1,0,1,1"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "greater_literals" (formula "10") (term "0,1"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "andLeft" (formula "10"))
            (rule "notLeft" (formula "10"))
            (rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "3") (ifseqformula "17"))
            (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "9") (inst "i=i"))
            (rule "greater_literals" (formula "9") (term "0,1"))
            (builtin "One Step Simplification" (formula "9"))
            (rule "sub_literals" (formula "9") (term "2,1,0,1"))
            (builtin "One Step Simplification" (formula "9"))
            (rule "andLeft" (formula "9"))
            (rule "notLeft" (formula "9"))
            (rule "narrowSelectArrayType" (formula "9") (term "0,0,1,0") (ifseqformula "3") (ifseqformula "17"))
            (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
            (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "8") (inst "i=i"))
            (rule "greater_literals" (formula "8") (term "0,1"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "sub_literals" (formula "8") (term "2,1,0,1"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "andLeft" (formula "8"))
            (rule "notLeft" (formula "8"))
            (rule "narrowSelectArrayType" (formula "8") (term "0,0,1,0") (ifseqformula "3") (ifseqformula "17"))
            (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
            (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
            (rule "nnf_imp2or" (formula "11") (term "0"))
            (rule "nnf_imp2or" (formula "10") (term "0"))
            (rule "nnf_imp2or" (formula "9") (term "0"))
            (rule "nnf_imp2or" (formula "8") (term "0"))
            (rule "nnf_notAnd" (formula "11") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
            (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
            (rule "mul_literals" (formula "11") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "10") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
            (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
            (rule "mul_literals" (formula "10") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "9") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
            (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "9") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
            (rule "mul_literals" (formula "9") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "8") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
            (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
            (rule "mul_literals" (formula "8") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
            (rule "commute_or_2" (formula "13") (term "0,1,1,0"))
            (rule "commute_or_2" (formula "11") (term "0"))
            (rule "ifthenelse_to_or_right" (formula "13") (term "0,1,0"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "inEqSimp_notGeq" (formula "13") (term "0,1,1,0,1,0"))
            (rule "mul_literals" (formula "13") (term "1,0,0,0,1,1,0,1,0"))
            (rule "add_literals" (formula "13") (term "0,0,0,1,1,0,1,0"))
            (rule "add_zero_left" (formula "13") (term "0,0,1,1,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0,1,0"))
            (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0,1,0"))
            (rule "add_literals" (formula "13") (term "0,0,0,0,0,1,0"))
            (rule "add_zero_left" (formula "13") (term "0,0,0,0,1,0"))
            (rule "commute_or_2" (formula "10") (term "0"))
            (rule "greater_equal_than_comparison_simple" (formula "33") (term "1"))
            (builtin "One Step Simplification" (formula "33"))
            (rule "commute_or_2" (formula "9") (term "0"))
            (rule "commute_or_2" (formula "8") (term "0"))
            (rule "commute_or" (formula "11") (term "0,0"))
            (rule "commute_or" (formula "10") (term "0,0"))
            (rule "commute_or" (formula "9") (term "0,0"))
            (rule "commute_or" (formula "8") (term "0,0"))
            (rule "commute_or" (formula "13") (term "0,0,1,1,0"))
            (rule "shift_paren_or" (formula "13") (term "1,0,1,0"))
            (rule "methodCallEmpty" (formula "33") (term "1"))
            (rule "emptyModality" (formula "33") (term "1"))
            (builtin "One Step Simplification" (formula "33"))
            (rule "impRight" (formula "33"))
            (rule "notLeft" (formula "1"))
            (rule "inEqSimp_geqRight" (formula "17"))
            (rule "times_zero_1" (formula "1") (term "1,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "mul_literals" (formula "1") (term "1"))
            (rule "methodCallReturn" (formula "34") (term "1"))
            (rule "assignment" (formula "34") (term "1"))
            (builtin "One Step Simplification" (formula "34"))
            (rule "methodCallEmpty" (formula "34") (term "1"))
            (rule "tryEmpty" (formula "34") (term "1"))
            (rule "emptyModality" (formula "34") (term "1"))
            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "28")))
            (rule "replaceKnownSelect_taclet201_11" (formula "34") (term "1,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet201_21" (formula "34") (term "1,0,0,0"))
            (rule "eqSymm" (formula "34") (term "1,0,0,1"))
            (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "34") (term "0,1,0") (ifseqformula "6"))
            (rule "replaceKnownSelect_taclet201_11" (formula "34") (term "1,1,0,0,0,0,0,0,0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet201_21" (formula "34") (term "1,1,0,0,0,0,0,0,0,0,1,0"))
            (rule "nonNull" (formula "34") (term "1,0,0,0,0,0,0,1,0") (inst "i=i"))
            (rule "greater_literals" (formula "34") (term "0,1,1,0,0,0,0,0,0,1,0"))
            (builtin "One Step Simplification" (formula "34"))
            (rule "sub_literals" (formula "34") (term "2,1,0,1,1,0,0,0,0,0,0,1,0"))
            (builtin "One Step Simplification" (formula "34"))
            (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,1,1,0,0,0,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,1,1,0,0,0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,1,1,0,0,0,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,1,1,0,0,0,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,1,1,0,0,0,0,0,0,1,0"))
            (rule "mul_literals" (formula "34") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,1,0"))
            (rule "nonNull" (formula "34") (term "1,0,0,0,0,0,1,0") (inst "i=i"))
            (rule "greater_literals" (formula "34") (term "0,1,1,0,0,0,0,0,1,0"))
            (builtin "One Step Simplification" (formula "34"))
            (rule "sub_literals" (formula "34") (term "2,1,0,1,1,0,0,0,0,0,1,0"))
            (builtin "One Step Simplification" (formula "34"))
            (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,1,1,0,0,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,1,1,0,0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,1,1,0,0,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,1,1,0,0,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,1,1,0,0,0,0,0,1,0"))
            (rule "mul_literals" (formula "34") (term "0,1,1,0,0,1,1,0,0,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,1,1,0,0,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,1,1,0,0,0,0,0,1,0"))
            (rule "nonNull" (formula "34") (term "1,0,0,0,0,0,0,0,1,0") (inst "i=i"))
            (rule "sub_literals" (formula "34") (term "2,1,0,1,1,1,0,0,0,0,0,0,0,1,0"))
            (builtin "One Step Simplification" (formula "34"))
            (rule "greater_literals" (formula "34") (term "0,1,1,0,0,0,0,0,0,0,1,0"))
            (builtin "One Step Simplification" (formula "34"))
            (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,1,1,0,0,0,0,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,1,1,0,0,0,0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,1,1,0,0,0,0,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,1,0"))
            (rule "mul_literals" (formula "34") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,1,0"))
            (rule "nonNull" (formula "34") (term "1,0,0,0,0,0,0,0,0,1,0") (inst "i=i"))
            (rule "greater_literals" (formula "34") (term "0,1,1,0,0,0,0,0,0,0,0,1,0"))
            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "18")))
            (rule "sub_literals" (formula "34") (term "2,1,0,1,0,0,0,0,0,0,0,0,1,0"))
            (builtin "One Step Simplification" (formula "34"))
            (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,1,0,0,0,0,0,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,1,0,0,0,0,0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,1,0,0,0,0,0,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,1,0,0,0,0,0,0,0,0,1,0"))
            (rule "mul_literals" (formula "34") (term "0,1,1,0,0,1,0,0,0,0,0,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,1,0,0,0,0,0,0,0,0,1,0"))
            (rule "pullOutSelect" (formula "34") (term "0,0,1,0,0,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_0"))
            (rule "simplifySelectOfAnon" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
            (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
            (rule "replaceKnownSelect_taclet201_15" (formula "1") (term "0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet201_20" (formula "1") (term "0,0,0,0"))
            (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "6"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfStore" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfMemset" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfCreate" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
            (rule "applyEqReverse" (formula "35") (term "0,0,1,0,0,0,0,1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_right" (formula "34") (term "0,1,0,0,0,0,1,0") (ifseqformula "23"))
            (builtin "One Step Simplification" (formula "34"))
            (rule "pullOutSelect" (formula "34") (term "0,0,1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_0"))
            (rule "simplifySelectOfAnon" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
            (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
            (rule "replaceKnownSelect_taclet201_15" (formula "1") (term "0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet201_20" (formula "1") (term "0,0,0,0"))
            (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "6"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfStore" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfMemset" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfCreate" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
            (rule "applyEqReverse" (formula "35") (term "0,0,1,0,0,1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_right" (formula "34") (term "0,1,0,0,1,0") (ifseqformula "25"))
            (builtin "One Step Simplification" (formula "34"))
            (rule "pullOutSelect" (formula "34") (term "1,0,0,1,0,1,1,0,0,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_0"))
            (rule "applyEq" (formula "35") (term "0,1,1,1,0,0,1,1,0,0,0,0,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "35") (term "0,0,0,1,0,0,0,0,1,0") (ifseqformula "1"))
            (rule "simplifySelectOfAnon" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
            (rule "ifthenelse_negated" (formula "1") (term "0"))
            (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
            (rule "replaceKnownSelect_taclet201_15" (formula "1") (term "0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet201_20" (formula "1") (term "0,0,0"))
            (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "6"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfStore" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfMemset" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfCreate" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
            (rule "applyEqReverse" (formula "35") (term "0,1,1,1,0,0,1,1,0,0,0,0,1,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "35") (term "1,0,0,1,0,1,1,0,0,0,0,1,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "35") (term "0,0,0,1,0,0,0,0,1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_right" (formula "34") (term "0,0,1,0,0,0,0,1,0") (ifseqformula "20"))
            (builtin "One Step Simplification" (formula "34"))
            (rule "pullOutSelect" (formula "34") (term "0,0,0,1,0,0,0,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_0"))
            (rule "applyEq" (formula "35") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "35") (term "1,0,0,1,0,1,1,0,0,0,0,0,1,0") (ifseqformula "1"))
            (rule "simplifySelectOfAnon" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
            (rule "ifthenelse_negated" (formula "1") (term "0"))
            (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
            (rule "replaceKnownSelect_taclet201_15" (formula "1") (term "0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet201_20" (formula "1") (term "0,0,0"))
            (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "6"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfStore" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfMemset" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfCreate" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
            (rule "applyEqReverse" (formula "35") (term "0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "35") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,1,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "35") (term "1,0,0,1,0,1,1,0,0,0,0,0,1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_right" (formula "34") (term "0,0,1,0,0,0,0,0,1,0") (ifseqformula "19"))
            (builtin "One Step Simplification" (formula "34"))
            (rule "pullOutSelect" (formula "34") (term "0,1,1,1,0,0,1,1,0,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_0"))
            (rule "applyEq" (formula "35") (term "0,0,0,1,0,0,0,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "35") (term "1,0,0,1,0,1,1,0,0,0,1,0") (ifseqformula "1"))
            (rule "simplifySelectOfAnon" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
            (rule "ifthenelse_negated" (formula "1") (term "0"))
            (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
            (rule "replaceKnownSelect_taclet201_15" (formula "1") (term "0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet201_20" (formula "1") (term "0,0,0"))
            (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "6"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfMemset" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfCreate" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
            (rule "applyEqReverse" (formula "35") (term "0,1,1,1,0,0,1,1,0,0,0,1,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "35") (term "1,0,0,1,0,1,1,0,0,0,1,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "35") (term "0,0,0,1,0,0,0,1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_right" (formula "34") (term "0,0,1,0,0,0,1,0") (ifseqformula "21"))
            (builtin "One Step Simplification" (formula "34"))
            (rule "pullOutSelect" (formula "34") (term "0,0,0,0,0,0,0,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_0"))
            (rule "simplifySelectOfAnon" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
            (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
            (rule "replaceKnownSelect_taclet201_15" (formula "1") (term "0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet201_20" (formula "1") (term "0,0,0,0"))
            (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "6"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfStore" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfMemset" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfCreate" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
            (rule "applyEqReverse" (formula "35") (term "0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_right" (formula "34") (term "0,0,0,0,0,0,0,0,1,0") (ifseqformula "22"))
            (builtin "One Step Simplification" (formula "34"))
            (rule "pullOutSelect" (formula "34") (term "0,0,1,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_0"))
            (rule "simplifySelectOfAnon" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
            (rule "ifthenelse_negated" (formula "1") (term "0"))
            (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
            (rule "replaceKnownSelect_taclet201_15" (formula "1") (term "0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet201_20" (formula "1") (term "0,0,0"))
            (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "6"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfMemset" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfCreate" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
            (rule "applyEqReverse" (formula "35") (term "0,0,1,0,1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_right" (formula "34") (term "0,1,0,1,0") (ifseqformula "26"))
            (builtin "One Step Simplification" (formula "34"))
            (rule "pullOutSelect" (formula "34") (term "0,0,1,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_0"))
            (rule "simplifySelectOfAnon" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
            (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
            (rule "replaceKnownSelect_taclet201_15" (formula "1") (term "0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet201_20" (formula "1") (term "0,0,0,0"))
            (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "6"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfStore" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfMemset" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfCreate" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
            (rule "applyEqReverse" (formula "35") (term "0,0,1,0,1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_right" (formula "34") (term "0,1,0,1,0") (ifseqformula "24"))
            (builtin "One Step Simplification" (formula "34"))
            (rule "nnf_imp2or" (formula "34") (term "0,1,0,1,0"))
            (rule "nnf_imp2or" (formula "34") (term "0,1,0,0,1,0"))
            (rule "nnf_notAnd" (formula "34") (term "0,0,1,0,1,0"))
            (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0,1,0,1,0"))
            (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0,1,0,1,0"))
            (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0,1,0,1,0"))
            (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0,1,0,1,0"))
            (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,1,0,1,0"))
            (rule "add_zero_left" (formula "34") (term "0,0,1,0,0,1,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0,1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,1,0,1,0"))
            (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,1,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0,1,0,1,0"))
            (rule "mul_literals" (formula "34") (term "1,0,0,0,0,0,1,0,1,0"))
            (rule "add_zero_right" (formula "34") (term "0,0,0,0,0,1,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0,1,0,1,0"))
            (rule "mul_literals" (formula "34") (term "1,0,0,0,1,0,1,0"))
            (rule "nnf_imp2or" (formula "34") (term "0,1,0,0,0,1,0"))
            (rule "nnf_imp2or" (formula "34") (term "0,0,0,0,0,1,0"))
            (rule "nnf_notAnd" (formula "34") (term "0,0,1,0,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0,1,0,0,1,0"))
            (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0,1,0,0,1,0"))
            (rule "add_zero_right" (formula "34") (term "0,0,0,0,0,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0,1,0,0,1,0"))
            (rule "mul_literals" (formula "34") (term "1,0,0,0,1,0,0,1,0"))
            (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0,1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0,1,0,0,1,0"))
            (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0,1,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0,1,0,0,1,0"))
            (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,1,0,0,1,0"))
            (rule "add_zero_left" (formula "34") (term "0,0,1,0,0,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0,1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,1,0,0,1,0"))
            (rule "nnf_notAnd" (formula "34") (term "0,0,1,0,0,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0,1,0,0,0,1,0"))
            (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0,1,0,0,0,1,0"))
            (rule "add_zero_right" (formula "34") (term "0,0,0,0,0,1,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "34") (term "1,0,0,0,1,0,0,0,1,0"))
            (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0,1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0,1,0,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0,1,0,0,0,1,0"))
            (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,1,0,0,0,1,0"))
            (rule "add_zero_left" (formula "34") (term "0,0,1,0,0,1,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0,1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,1,0,0,0,1,0"))
            (rule "nnf_notAnd" (formula "34") (term "0,0,0,0,0,0,1,0"))
            (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0,0,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0,0,0,0,0,1,0"))
            (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0,0,0,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0,0,0,0,0,1,0"))
            (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,0,0,0,0,1,0"))
            (rule "add_zero_left" (formula "34") (term "0,0,1,0,0,0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0,0,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,0,0,0,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0,0,0,0,0,1,0"))
            (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0,0,0,0,0,1,0"))
            (rule "add_zero_right" (formula "34") (term "0,0,0,0,0,0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0,0,0,0,0,1,0"))
            (rule "mul_literals" (formula "34") (term "1,0,0,0,0,0,0,0,1,0"))
            (rule "ifthenelse_to_or_left" (formula "14") (term "1,0,0,1,0"))
            (rule "eqSymm" (formula "14") (term "1,1,1,0,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "14") (term "0,0,1,0,0,1,0"))
            (rule "mul_literals" (formula "14") (term "1,0,0,0,0,1,0,0,1,0"))
            (rule "add_literals" (formula "14") (term "0,0,0,0,1,0,0,1,0"))
            (rule "add_zero_left" (formula "14") (term "0,0,0,1,0,0,1,0"))
            (rule "cut_direct" (formula "17") (term "0"))
            (branch "CUT: bal_0.<created> = TRUE TRUE"
               (builtin "One Step Simplification" (formula "18"))
               (rule "true_left" (formula "18"))
               (rule "ifthenelse_to_or_left" (formula "14") (term "0,0,0,1,1,0"))
               (rule "eqSymm" (formula "14") (term "1,0,0,0,0,1,1,0"))
               (rule "eqSymm" (formula "14") (term "1,1,0,0,0,1,1,0"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "nnf_notAnd" (formula "14") (term "0,0,0,0,0,1,1,0"))
               (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
               (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0,0,1,1,0"))
               (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,0,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0,0,0,1,1,0"))
               (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
               (rule "add_zero_left" (formula "14") (term "0,0,1,0,0,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,0,0,1,1,0"))
               (rule "nnf_notAnd" (formula "14") (term "0,1,1,0,0,0,1,1,0"))
               (rule "inEqSimp_notGeq" (formula "14") (term "0,0,1,1,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
               (rule "add_zero_right" (formula "14") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,1,1,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "14") (term "1,0,0,1,1,0,0,0,1,1,0"))
               (rule "inEqSimp_notLeq" (formula "14") (term "1,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
               (rule "add_literals" (formula "14") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
               (rule "add_zero_left" (formula "14") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "14") (term "1,1,0,1,1,0,0,0,1,1,0"))
               (rule "ifthenelse_split" (formula "15") (term "0"))
               (branch "x_arr_arr_2 = messages_0 TRUE"
                  (rule "applyEqReverse" (formula "17") (term "0,0") (ifseqformula "16"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "true_left" (formula "17"))
                  (rule "hideAuxiliaryEq" (formula "16"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,1,1,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "33") (term "1,0,0,0,0,0,0,0,0") (ifseqformula "15"))
                  (rule "eqSymm" (formula "33") (term "0,0"))
                  (rule "applyEq" (formula "14") (term "0,1,0,0,0,0,1,1,1,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "33") (term "0,1,0,0,0,0,0,1,0,1,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "33") (term "0,1,0,0,0,0,0,1,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0") (ifseqformula "15"))
                  (rule "eqSymm" (formula "14") (term "1,0,1,0,0,1,0"))
                  (rule "applyEq" (formula "14") (term "0,1,0,0,0,0,1,1,0,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "33") (term "0,1,0,0,0,0,0,1,0,1,0,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,1,0,1,1,1,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "0,1,0,0,0,0,0,0,1,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,1,1,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,1,1,1,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,1,1,1,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "33") (term "1,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,1,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "33") (term "1,0,0,0,0,0,0,1,0,1,0,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,1,0,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "33") (term "1,0,0,0,0,0,0,0,1,0,1,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "33") (term "1,0,0,0,0,0,0,0,1,0,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "0,1,0,0,0,0,0,0,0,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,1,0,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,1,1,0,1,1,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "33") (term "0,1,0,0,0,0,0,1,0,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,1,1,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,1,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,1,1,1,0,0,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,1,1,1,0,1,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,1,1,1,0,0,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,1,1,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,1,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,1,1,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "33") (term "1,0,0,0,0,0,0,0,0,1,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "0,1,0,0,0,0,1,1,0,1,1,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,1,0,1,1,1,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "0,1,0,0,0,1,0,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,1,1,1,0,1,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,1,1,1,0,0,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "0,1,0,0,0,1,0,1,1,1,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,1,1,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,1,1,1,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "33") (term "1,0,0,0,0,1,0,1,0,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,1,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "0,1,0,0,0,0,0,0,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "33") (term "1,0,0,0,0,0,0,1,0,0,1") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,1,0,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,1,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "0,1,0,0,0,0,0,1,1,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,1,0,1,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "33") (term "1,0,0,0,0,1,0,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,1,1,1,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,1,1,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "33") (term "1,0,0,0,0,0,1,0,0,1") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "0,1,0,0,0,0,0,0,1,1,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,1,1,1,0,0,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,1,1,0,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,1,1,0,1,1,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "33") (term "1,0,0,0,0,0,0,0,0,0,1,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,1,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,1,1,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,1,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "33") (term "1,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "33") (term "1,0,0,0,0,1,0,1,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "33") (term "1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,1,1,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "33") (term "1,0,0,0,0,0,0,0,1,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,1,0,1,1,1,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "29") (term "0") (ifseqformula "15"))
                  (rule "applyEq" (formula "32") (term "1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "0,1,0,0,0,1,1,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,1,1,0,1,1,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "0,1,0,0,0,0,1,1,1,0,1,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "0,1,0,0,0,0,1,1,1,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "32") (term "1,0,0,0,0,0,0,0,0,1,0,0,1") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,1,0,1,1,1,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,1,0,1,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "0,1,0,0,0,1,1,0,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "32") (term "1,0,0,0,0,0,0,0,0,1,0,1,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "32") (term "1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "32") (term "1,0,0,0,1,0,0,1") (ifseqformula "15"))
                  (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "31") (term "0,1,0,0,0,0,1,0,0,1") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,1,1,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,1,0,1,1,1,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,1,0,1,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,1,1,0,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,1,1,0,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,1,1,0,1,1,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,1,1,1,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,1,1,0,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,1,1,1,0,1,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "0,1,0,0,0,0,1,1,1,0,0,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,1,0,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,1,1,1,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,1,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "31") (term "1,0,0,0,0,0,0,1,0,1,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "0,1,0,0,0,0,0,1,0,1,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "31") (term "1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,1,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,1,1,1,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,1,1,1,0,1,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,1,1,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "31") (term "1,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "0,1,0,0,0,0,0,1,1,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,1,1,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,1,1,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "31") (term "0,1,0,0,0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "0,1,0,0,0,0,0,0,0,1,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,1,1,1,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,0,1,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,1,1,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,1,1,1,0,1,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,1,1,1,0,0,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,1,1,0,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,1,1,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,1,1,1,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "31") (term "1,0,0,0,0,0,0,1,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "31") (term "1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "31") (term "1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,1,0,1,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,1,1,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "31") (term "1,0,0,0,0,0,0,1,0,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "31") (term "1,0,0,0,0,1,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,1,1,0,1,1,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "31") (term "1,0,0,0,0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,1,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "31") (term "1,0,0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,1,1,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "0,1,0,0,0,1,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "31") (term "1,0,0,0,0,0,0,0,1,0,0,1") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0") (ifseqformula "15"))
                  (rule "eqSymm" (formula "14") (term "1,0,1,0,0,1,0"))
                  (rule "applyEq" (formula "31") (term "1,0,0,0,0,0,0,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "31") (term "1,0,0,0,0,0,0,1,0,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "31") (term "1,0,0,0,0,1,0,0") (ifseqformula "15"))
                  (rule "applyEqRigid" (formula "31") (term "1,1,0,0,1,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "31") (term "1,0,0,0,0,0,0,0,1,0,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "31") (term "1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "31") (term "1,0,0,1,0,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "31") (term "0,1,0,0,0,1,0,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "31") (term "1,0,0,0,0,0,0,0,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "31") (term "1,0,0,0,0,0,0,0,0,0") (ifseqformula "15"))
                  (rule "applyEqRigid" (formula "14") (term "1,1,0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "31") (term "0,1,0,0,0,0,0,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "31") (term "1,0,0,0,0,0") (ifseqformula "15"))
                  (rule "eqSymm" (formula "31") (term "0,0"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0") (ifseqformula "15"))
                  (rule "eqSymm" (formula "14") (term "1,0,1,0,0,1,0"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,1,1,0,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,1,0,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,1,1,0,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "0,1,0,0,0,0,1,1,0,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,1,1,0,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,1,0,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,1,0,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "0,1,0,0,0,0,0,1,0,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0") (ifseqformula "15"))
                  (rule "eqSymm" (formula "14") (term "1,0,1,0,0,1,0"))
                  (rule "inEqSimp_or_tautInEq0" (formula "31") (term "0,0,1,1,0"))
                  (rule "add_literals" (formula "31") (term "1,1,0,0,1,1,0"))
                  (rule "qeq_literals" (formula "31") (term "1,0,0,1,1,0"))
                  (builtin "One Step Simplification" (formula "31"))
                  (rule "inEqSimp_or_tautInEq0" (formula "14") (term "0,0"))
                  (rule "add_literals" (formula "14") (term "1,1,0,0"))
                  (rule "qeq_literals" (formula "14") (term "1,0,0"))
                  (builtin "One Step Simplification" (formula "14"))
                  (rule "true_left" (formula "14"))
                  (rule "arrayLengthNotNegative" (formula "12") (term "1,1,0"))
                  (rule "arrayLengthIsAShort" (formula "13") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "true_left" (formula "13"))
                  (rule "arrayLengthIsAShort" (formula "11") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "true_left" (formula "11"))
                  (rule "arrayLengthNotNegative" (formula "11") (term "1,1,0"))
                  (rule "arrayLengthIsAShort" (formula "10") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "true_left" (formula "10"))
                  (rule "arrayLengthNotNegative" (formula "10") (term "1,1,0"))
                  (rule "arrayLengthIsAShort" (formula "9") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "true_left" (formula "9"))
                  (rule "arrayLengthNotNegative" (formula "9") (term "1,1,0"))
                  (rule "arrayLengthNotNegative" (formula "1") (term "0"))
                  (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                  (rule "qeq_literals" (formula "1") (term "0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "x_arr_arr_2 = messages_0 FALSE"
                  (rule "applyEqReverse" (formula "16") (term "0,0") (ifseqformula "15"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "hideAuxiliaryEq" (formula "15"))
                  (rule "arrayLengthNotNegative" (formula "12") (term "1,1,0"))
                  (rule "arrayLengthIsAShort" (formula "13") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "true_left" (formula "13"))
                  (rule "arrayLengthNotNegative" (formula "11") (term "1,1,0"))
                  (rule "arrayLengthIsAShort" (formula "12") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "arrayLengthIsAShort" (formula "10") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "true_left" (formula "10"))
                  (rule "arrayLengthNotNegative" (formula "10") (term "1,1,0"))
                  (rule "arrayLengthIsAShort" (formula "9") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "true_left" (formula "9"))
                  (rule "arrayLengthNotNegative" (formula "9") (term "1,1,0"))
                  (rule "arrayLengthNotNegative" (formula "1") (term "0"))
                  (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                  (rule "qeq_literals" (formula "1") (term "0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "CUT: bal_0.<created> = TRUE FALSE"
               (builtin "One Step Simplification" (formula "17"))
               (rule "ifthenelse_to_or_left" (formula "14") (term "0,0,0,1,1,0"))
               (rule "eqSymm" (formula "14") (term "1,0,0,0,0,1,1,0"))
               (rule "eqSymm" (formula "14") (term "1,1,0,0,0,1,1,0"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "nnf_notAnd" (formula "14") (term "0,0,0,0,0,1,1,0"))
               (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,0,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0,0,0,1,1,0"))
               (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
               (rule "add_zero_left" (formula "14") (term "0,0,1,0,0,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,0,0,1,1,0"))
               (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
               (rule "add_literals" (formula "14") (term "0,0,0,0,0,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0,0,1,1,0"))
               (rule "nnf_notAnd" (formula "14") (term "0,1,1,0,0,0,1,1,0"))
               (rule "inEqSimp_notLeq" (formula "14") (term "1,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
               (rule "add_literals" (formula "14") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
               (rule "add_zero_left" (formula "14") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "14") (term "1,1,0,1,1,0,0,0,1,1,0"))
               (rule "inEqSimp_notGeq" (formula "14") (term "0,0,1,1,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
               (rule "add_literals" (formula "14") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,1,1,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "14") (term "1,0,0,1,1,0,0,0,1,1,0"))
               (rule "ifthenelse_split" (formula "15") (term "0"))
               (branch "x_arr_arr_2 = messages_0 TRUE"
                  (rule "applyEqReverse" (formula "17") (term "0,0") (ifseqformula "16"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "true_left" (formula "17"))
                  (rule "hideAuxiliaryEq" (formula "16"))
                  (rule "applyEq" (formula "14") (term "1,0,0,1,1,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "34") (term "1,0,0,0,0,0,0,0,1,0,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,1,1,0,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "0,1,0,0,0,1,1,0,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,1,1,0,1,1,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "34") (term "1,0,0,0,0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0") (ifseqformula "15"))
                  (rule "eqSymm" (formula "14") (term "1,0,1,0,0,1,0"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,1,1,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,1,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,1,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "34") (term "1,0,0,0,0,1,0,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "34") (term "1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,1,1,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "0,1,0,0,0,0,1,1,1,0,1,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "34") (term "1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "34") (term "1,0,0,0,0,0,0,0,1,0,1,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,1,1,1,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "34") (term "1,0,0,0,0,0,0,1,0,1,0,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "0,1,0,0,0,0,0,0,0,1,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,1,1,0,1,1,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "34") (term "0,1,0,0,0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,1,1,1,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "0,1,0,0,0,0,1,1,0,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,1,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "34") (term "1,0,0,0,0,0,0,0,0") (ifseqformula "15"))
                  (rule "eqSymm" (formula "34") (term "0,0"))
                  (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,1,0,1,1,1,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "30") (term "0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,1,1,1,0,0,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "33") (term "1,0,0,0,0,0,1,0,0,1") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,1,1,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "33") (term "1,0,0,0,1,0,0,1") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "0,1,0,0,0,0,0,0,0,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "33") (term "1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,1,1,1,0,1,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "33") (term "1,0,0,0,0,0,0,1,0,0,1") (ifseqformula "15"))
                  (rule "applyEq" (formula "33") (term "1,0,0,0,0,1,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,1,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,1,1,1,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,1,1,1,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "0,1,0,0,0,0,0,0,1,1,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,1,0,1,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,1,1,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,1,1,0,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "33") (term "1,0,0,0,0,1,0,1,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,1,1,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "33") (term "0,1,0,0,0,0,0,1,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "0,1,0,0,0,0,0,1,1,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "33") (term "1,0,0,0,0,0,0,1,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "33") (term "1,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "0,1,0,0,0,0,0,0,1,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "0,1,0,0,0,0,1,1,0,1,1,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,1,1,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "33") (term "1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "0,1,0,0,0,0,1,1,1,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,1,1,1,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,1,1,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,1,1,1,0,0,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,1,0,1,1,1,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,1,1,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "33") (term "0,1,0,0,0,0,0,1,0,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "33") (term "1,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,1,1,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,1,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,1,0,1,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,1,0,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,1,1,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,1,0,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "33") (term "1,0,0,0,0,0,0,0,0,1,0,1,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,1,1,1,0,0,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "33") (term "1,0,0,0,0,0,0,1,0,1,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,1,1,0,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,1,1,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,1,0,1,1,1,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "33") (term "1,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,1,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "0,1,0,0,0,0,0,1,1,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "33") (term "0,1,0,0,0,0,1,0,0,1") (ifseqformula "15"))
                  (rule "applyEq" (formula "33") (term "1,0,0,0,0,1,0,1,0,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "0,1,0,0,0,0,1,1,1,0,0,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,1,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,1,0,1,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,1,1,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,1,1,1,0,1,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "0,1,0,0,0,1,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "33") (term "0,1,0,0,0,0,0,1,0,1,0,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,1,1,1,0,0,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,1,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "33") (term "1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "0,1,0,0,0,0,0,1,0,1,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,1,1,1,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,1,1,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "0,1,0,0,0,0,0,0,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,1,0,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "0,1,0,0,0,1,1,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,1,1,1,0,1,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,1,0,1,1,1,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,1,1,1,0,1,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,1,1,0,1,1,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "33") (term "1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,1,0,1,1,1,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,1,1,0,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,1,0,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,1,1,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "33") (term "1,0,0,0,0,1,0,0,0,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,1,1,0,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "33") (term "1,0,0,0,0,0,0,1,0,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "33") (term "1,0,0,0,0,0,0,0,1,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,1,1,1,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,1,1,0,1,1,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,1,1,1,0,0,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,1,0,1,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "33") (term "1,0,0,0,0,0,0,0,0,0,1,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,1,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "0,1,0,0,0,0,1,1,1,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "32") (term "1,0,0,0,0,0,0,0,0,1,0,0,1") (ifseqformula "15"))
                  (rule "applyEq" (formula "32") (term "1,0,0,0,0,0,0,0,0,1,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,0,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "32") (term "0,1,0,0,0,0,0,1,0,1,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "0,1,0,0,0,1,0,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,1,1,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,1,1,0,1,1,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "0,1,0,0,0,1,0,1,1,1,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "32") (term "1,0,0,0,0,0,0,0,1,0,0,1") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,0,1,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,1,1,1,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,1,1,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,1,1,0,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,1,1,1,0,1,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,1,1,1,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,1,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "32") (term "1,0,0,0,0,0,0,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "32") (term "1,0,0,0,0,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "0,1,0,0,0,0,0,1,0,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "0,1,0,0,0,0,1,1,0,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "32") (term "0,1,0,0,0,1,0,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,1,0,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "32") (term "1,0,0,0,0,0,0,0,1,0,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "32") (term "1,0,0,0,0,0,0,1,0,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,1,0,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "32") (term "1,0,0,0,0,0,0,0,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "32") (term "1,0,0,0,0,0,0,0,0,0,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,1,0,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "32") (term "1,0,0,1,0,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,1,1,0,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,1,1,0,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "32") (term "1,0,0,0,0,0,0,0,0,0") (ifseqformula "15"))
                  (rule "eqSymm" (formula "32") (term "0,0"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,1,1,0,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "32") (term "1,1,0,0,1,1,0") (ifseqformula "2"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,1,1,0,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "14") (term "1,0,0,0,0,0,0,0,1,0,1,0,0,1,0") (ifseqformula "15"))
                  (rule "eqSymm" (formula "14") (term "1,0,1,0,0,1,0"))
                  (rule "applyEq" (formula "32") (term "0,1,0,0,0,1,0,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "32") (term "1,0,0,0,0,0,0,0") (ifseqformula "15"))
                  (rule "inEqSimp_or_tautInEq0" (formula "14") (term "0,0"))
                  (rule "add_literals" (formula "14") (term "1,1,0,0"))
                  (rule "qeq_literals" (formula "14") (term "1,0,0"))
                  (builtin "One Step Simplification" (formula "14"))
                  (rule "true_left" (formula "14"))
                  (rule "inEqSimp_or_tautInEq0" (formula "31") (term "0,0,1,1,0"))
                  (rule "add_zero_right" (formula "31") (term "1,1,0,0,1,1,0"))
                  (rule "qeq_literals" (formula "31") (term "1,0,0,1,1,0"))
                  (builtin "One Step Simplification" (formula "31"))
                  (rule "arrayLengthIsAShort" (formula "12") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "arrayLengthNotNegative" (formula "12") (term "1,1,0"))
                  (rule "arrayLengthIsAShort" (formula "11") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "true_left" (formula "11"))
                  (rule "arrayLengthNotNegative" (formula "11") (term "1,1,0"))
                  (rule "arrayLengthIsAShort" (formula "10") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "true_left" (formula "10"))
                  (rule "arrayLengthNotNegative" (formula "10") (term "1,1,0"))
                  (rule "arrayLengthIsAShort" (formula "9") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "true_left" (formula "9"))
                  (rule "arrayLengthNotNegative" (formula "9") (term "1,1,0"))
                  (rule "arrayLengthIsAShort" (formula "1") (term "0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "arrayLengthNotNegative" (formula "1") (term "0"))
                  (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                  (rule "qeq_literals" (formula "1") (term "0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "x_arr_arr_2 = messages_0 FALSE"
                  (rule "applyEqReverse" (formula "16") (term "0,0") (ifseqformula "15"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "hideAuxiliaryEq" (formula "15"))
                  (rule "arrayLengthNotNegative" (formula "12") (term "1,1,0"))
                  (rule "arrayLengthIsAShort" (formula "13") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "true_left" (formula "13"))
                  (rule "arrayLengthNotNegative" (formula "11") (term "1,1,0"))
                  (rule "arrayLengthIsAShort" (formula "12") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "true_left" (formula "12"))
                  (rule "arrayLengthIsAShort" (formula "10") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "true_left" (formula "10"))
                  (rule "arrayLengthNotNegative" (formula "10") (term "1,1,0"))
                  (rule "arrayLengthIsAShort" (formula "9") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "true_left" (formula "9"))
                  (rule "arrayLengthNotNegative" (formula "9") (term "1,1,0"))
                  (rule "arrayLengthIsAShort" (formula "1") (term "0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "arrayLengthNotNegative" (formula "1") (term "0"))
                  (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                  (rule "qeq_literals" (formula "1") (term "0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
         (branch "Null Reference (bal = null)"
            (builtin "One Step Simplification" (formula "21"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "1"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "true_left" (formula "14"))
            (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "9") (ifseqformula "6"))
            (rule "andLeft" (formula "9"))
            (rule "notLeft" (formula "10"))
            (rule "andLeft" (formula "9"))
            (rule "andLeft" (formula "9"))
            (rule "notLeft" (formula "11"))
            (rule "andLeft" (formula "9"))
            (rule "notLeft" (formula "11"))
            (rule "notLeft" (formula "10"))
            (rule "andLeft" (formula "9"))
            (rule "andLeft" (formula "9"))
            (rule "andLeft" (formula "9"))
            (rule "andLeft" (formula "9"))
            (rule "notLeft" (formula "9"))
            (rule "nonNull" (formula "12") (inst "i=i"))
            (rule "sub_literals" (formula "12") (term "2,1,0,1,1"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "greater_literals" (formula "12") (term "0,1"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "andLeft" (formula "12"))
            (rule "notLeft" (formula "12"))
            (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "17"))
            (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
            (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "11") (inst "i=i"))
            (rule "sub_literals" (formula "11") (term "2,1,0,1,1"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "greater_literals" (formula "11") (term "0,1"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "andLeft" (formula "11"))
            (rule "notLeft" (formula "11"))
            (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "17"))
            (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
            (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "10") (inst "i=i"))
            (rule "greater_literals" (formula "10") (term "0,1"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "sub_literals" (formula "10") (term "2,1,0,1"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "andLeft" (formula "10"))
            (rule "notLeft" (formula "10"))
            (rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "17"))
            (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
            (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "9") (inst "i=i"))
            (rule "greater_literals" (formula "9") (term "0,1"))
            (builtin "One Step Simplification" (formula "9"))
            (rule "sub_literals" (formula "9") (term "2,1,0,1"))
            (builtin "One Step Simplification" (formula "9"))
            (rule "andLeft" (formula "9"))
            (rule "notLeft" (formula "9"))
            (rule "narrowSelectArrayType" (formula "9") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "17"))
            (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
            (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
            (rule "nnf_imp2or" (formula "12") (term "0"))
            (rule "nnf_imp2or" (formula "11") (term "0"))
            (rule "nnf_imp2or" (formula "10") (term "0"))
            (rule "nnf_imp2or" (formula "9") (term "0"))
            (rule "nnf_notAnd" (formula "12") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
            (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
            (rule "mul_literals" (formula "12") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "11") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
            (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "11") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
            (rule "mul_literals" (formula "11") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "10") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
            (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
            (rule "mul_literals" (formula "10") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "9") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
            (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "9") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
            (rule "mul_literals" (formula "9") (term "1,0,0,0"))
            (rule "commute_or_2" (formula "14") (term "0,1,1,0"))
            (rule "ifthenelse_to_or_right" (formula "14") (term "0,1,0"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "inEqSimp_notGeq" (formula "14") (term "0,1,1,0,1,0"))
            (rule "mul_literals" (formula "14") (term "1,0,0,0,1,1,0,1,0"))
            (rule "add_literals" (formula "14") (term "0,0,0,1,1,0,1,0"))
            (rule "add_zero_left" (formula "14") (term "0,0,1,1,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0,1,0"))
            (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0,1,0"))
            (rule "add_literals" (formula "14") (term "0,0,0,0,0,1,0"))
            (rule "add_zero_left" (formula "14") (term "0,0,0,0,1,0"))
            (rule "commute_or_2" (formula "12") (term "0"))
            (rule "commute_or_2" (formula "11") (term "0"))
            (rule "commute_or_2" (formula "10") (term "0"))
            (rule "commute_or_2" (formula "9") (term "0"))
            (rule "commute_or" (formula "12") (term "0,0"))
            (rule "commute_or" (formula "11") (term "0,0"))
            (rule "commute_or" (formula "10") (term "0,0"))
            (rule "commute_or" (formula "9") (term "0,0"))
            (rule "commute_or" (formula "14") (term "0,0,1,1,0"))
            (rule "shift_paren_or" (formula "14") (term "1,0,1,0"))
            (rule "ifthenelse_to_or_left" (formula "14") (term "1,0,0,1,0"))
            (rule "eqSymm" (formula "14") (term "1,1,1,0,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "14") (term "0,0,1,0,0,1,0"))
            (rule "mul_literals" (formula "14") (term "1,0,0,0,0,1,0,0,1,0"))
            (rule "add_literals" (formula "14") (term "0,0,0,0,1,0,0,1,0"))
            (rule "add_zero_left" (formula "14") (term "0,0,0,1,0,0,1,0"))
            (rule "commute_or" (formula "14") (term "1,1,0,0,1,0"))
            (rule "cnf_rightDist" (formula "14") (term "0,0,1,0"))
            (rule "commute_or_2" (formula "14") (term "1,0,0,1,0"))
            (rule "inEqSimp_or_subsumption4" (formula "14") (term "0,1,0,0,1,0"))
            (rule "greater_literals" (formula "14") (term "0,0,0,1,0,0,1,0"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "shift_paren_or" (formula "14") (term "0,0,0,1,0"))
            (rule "ifthenelse_to_or_right" (formula "14") (term "0,0,0,1,1,0"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "nnf_notAnd" (formula "14") (term "0,0,0,0,0,1,1,0"))
            (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0,0,0,0,1,1,0"))
            (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
            (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,0,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,0,0,0,1,1,0"))
            (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0,0,1,1,0"))
            (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,0,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
            (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
            (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,0,0,0,1,1,0"))
            (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
            (rule "add_zero_left" (formula "14") (term "0,0,1,0,0,0,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,0,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0,0,0,1,1,0"))
            (rule "nnf_notAnd" (formula "14") (term "0,1,1,0,0,0,1,1,0"))
            (rule "inEqSimp_notLeq" (formula "14") (term "1,0,1,1,0,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
            (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
            (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
            (rule "add_literals" (formula "14") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
            (rule "add_zero_left" (formula "14") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,1,1,0,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,1,1,0,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "14") (term "1,1,0,1,1,0,0,0,1,1,0"))
            (rule "inEqSimp_notGeq" (formula "14") (term "0,0,1,1,0,0,0,1,1,0"))
            (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
            (rule "add_zero_right" (formula "14") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,1,1,0,0,0,1,1,0"))
            (rule "mul_literals" (formula "14") (term "1,0,0,1,1,0,0,0,1,1,0"))
            (rule "commute_or" (formula "14") (term "0,0,1,1,0"))
            (rule "commute_or_2" (formula "14") (term "0,1,1,0"))
            (rule "commute_or" (formula "14") (term "1,1,0,1,1,0"))
            (rule "commute_or_2" (formula "14") (term "0,1,0,1,1,0"))
            (rule "commute_or_2" (formula "14") (term "0,1,1,0,1,1,0"))
            (rule "commute_or" (formula "14") (term "0,0,1,0,1,1,0"))
            (rule "commute_or" (formula "14") (term "0,0,1,1,0,1,1,0"))
            (rule "cnf_rightDist" (formula "14") (term "1,1,0,1,1,0"))
            (rule "commute_or_2" (formula "14") (term "0,1,1,0,1,1,0"))
            (rule "inEqSimp_or_tautInEq1" (formula "14") (term "0,0,1,1,0,1,1,0"))
            (rule "add_zero_right" (formula "14") (term "1,1,0,0,1,1,0,1,1,0"))
            (rule "qeq_literals" (formula "14") (term "1,0,0,1,1,0,1,1,0"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "shift_paren_or" (formula "14") (term "1,1,0,1,1,0"))
            (rule "commute_or" (formula "14") (term "0,1,1,0,1,1,0"))
            (rule "cnf_rightDist" (formula "14") (term "0,1,1,0"))
            (rule "commute_or_2" (formula "14") (term "0,0,1,1,0"))
            (rule "shift_paren_or" (formula "14") (term "1,0,1,1,0"))
            (rule "commute_or_2" (formula "14") (term "0,1,0,1,1,0"))
            (rule "shift_paren_or" (formula "14") (term "0,0,0,1,1,0"))
            (rule "commute_or_2" (formula "14") (term "0,0,1,0,1,1,0"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "shift_paren_or" (formula "14") (term "0,0,0,0,1,1,0"))
            (rule "commute_or" (formula "14") (term "0,0,0,0,0,1,1,0"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "methodCallReturn" (formula "32") (term "1,0,1"))
            (rule "assignment" (formula "32") (term "1,0,1"))
            (rule "all_pull_out1" (formula "14") (term "1,0"))
            (rule "shift_paren_and" (formula "14") (term "0,1,0"))
            (rule "all_pull_out3" (formula "14") (term "0"))
            (rule "cnf_rightDist" (formula "14") (term "0,0"))
            (rule "distr_forallAnd" (formula "14") (term "0"))
            (rule "distr_forallAnd" (formula "14"))
            (rule "andLeft" (formula "14"))
            (rule "commute_or_2" (formula "15") (term "0,0"))
            (rule "commute_or_2" (formula "15") (term "0,0,0"))
            (rule "commute_or_2" (formula "15") (term "0,0,0,0"))
            (rule "cnf_rightDist" (formula "14") (term "0,0"))
            (rule "distr_forallAnd" (formula "14") (term "0"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "distr_forallAnd" (formula "14"))
            (rule "andLeft" (formula "14"))
            (rule "commute_or_2" (formula "15") (term "0,0"))
            (rule "commute_or_2" (formula "15") (term "0,0,0"))
            (rule "cnf_rightDist" (formula "14") (term "0"))
            (rule "distr_forallAnd" (formula "14"))
            (rule "andLeft" (formula "14"))
            (rule "commute_or_2" (formula "15") (term "0"))
            (rule "commute_or_2" (formula "15") (term "0,0"))
            (rule "commute_or" (formula "15") (term "0,0,0"))
            (rule "cnf_rightDist" (formula "14") (term "0"))
            (rule "distr_forallAnd" (formula "14"))
            (rule "andLeft" (formula "14"))
            (rule "commute_or_2" (formula "15") (term "0"))
            (rule "shift_paren_or" (formula "14") (term "0"))
            (rule "commute_or" (formula "15") (term "0,0"))
            (rule "shift_paren_or" (formula "14") (term "0,0"))
            (rule "commute_or_2" (formula "17") (term "0,0,0,0"))
            (rule "commute_or_2" (formula "18") (term "0,0,0,0,0"))
            (rule "shift_paren_or" (formula "17") (term "0,0,0,0,0"))
            (rule "shift_paren_or" (formula "18") (term "0,0,0,0,0,0"))
            (rule "arrayLengthNotNegative" (formula "12") (term "1,1,0"))
            (rule "arrayLengthIsAShort" (formula "13") (term "1,1,0"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "true_left" (formula "13"))
            (rule "arrayLengthNotNegative" (formula "11") (term "1,1,0"))
            (rule "arrayLengthIsAShort" (formula "12") (term "1,1,0"))
            (builtin "One Step Simplification" (formula "12"))
            (rule "true_left" (formula "12"))
            (rule "arrayLengthNotNegative" (formula "10") (term "1,1,0"))
            (rule "arrayLengthIsAShort" (formula "11") (term "1,1,0"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "true_left" (formula "11"))
            (rule "arrayLengthNotNegative" (formula "9") (term "1,1,0"))
            (rule "arrayLengthIsAShort" (formula "10") (term "1,1,0"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "true_left" (formula "10"))
            (rule "ifthenelse_to_or_left" (formula "21") (term "0,0,0,0,0,0,0"))
            (rule "eqSymm" (formula "21") (term "1,1,0,0,0,0,0,0,0"))
            (rule "nnf_notAnd" (formula "21") (term "0,0,0,0,0,0,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0,0,0,0,0,0,0,0"))
            (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "add_literals" (formula "21") (term "0,0,0,0,0,0,0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,0,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0,0,0,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,0,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,0,0,0,0,0,0,0"))
            (rule "add_literals" (formula "21") (term "0,0,0,1,0,0,0,0,0,0,0,0,0"))
            (rule "add_zero_left" (formula "21") (term "0,0,1,0,0,0,0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,0,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,0,0,0,0,0,0"))
            (rule "commute_or" (formula "21") (term "0,0,0,0,0,0"))
            (rule "commute_or_2" (formula "21") (term "0,0,0,0,0"))
            (rule "commute_or_2" (formula "21") (term "0,0,0,0"))
            (rule "commute_or_2" (formula "21") (term "0,0,0"))
            (rule "commute_or_2" (formula "21") (term "0,0"))
            (rule "commute_or_2" (formula "21") (term "0,1,0,0"))
            (rule "commute_or" (formula "21") (term "1,1,0,0"))
            (rule "commute_or" (formula "21") (term "0,0,1,0,0"))
            (rule "cnf_rightDist" (formula "21") (term "1,1,0,0"))
            (rule "cnf_rightDist" (formula "21") (term "0,0"))
            (rule "distr_forallAnd" (formula "21") (term "0"))
            (rule "distr_forallAnd" (formula "21"))
            (rule "andLeft" (formula "21"))
            (rule "commute_or" (formula "22") (term "0,0"))
            (rule "commute_or_2" (formula "21") (term "0,0"))
            (rule "commute_or" (formula "22") (term "1,1,0,0"))
            (rule "shift_paren_or" (formula "21") (term "0,0,0"))
            (rule "commute_or_2" (formula "21") (term "0,0,0,0"))
            (rule "cnf_rightDist" (formula "22") (term "0,0"))
            (rule "distr_forallAnd" (formula "22") (term "0"))
            (rule "distr_forallAnd" (formula "22"))
            (rule "andLeft" (formula "22"))
            (rule "commute_or_2" (formula "22") (term "0,0"))
            (rule "shift_paren_or" (formula "23") (term "0,0"))
            (rule "commute_or_2" (formula "22") (term "0,0,0"))
            (rule "commute_or_2" (formula "23") (term "0,0,0"))
            (rule "shift_paren_or" (formula "22") (term "0,0,0,0"))
            (rule "shift_paren_or" (formula "23") (term "0,0,0,0"))
            (rule "commute_or_2" (formula "22") (term "0,0,0,0,0"))
            (rule "inEqSimp_or_tautInEq1" (formula "22") (term "0,0,0,0"))
            (rule "add_zero_right" (formula "22") (term "1,1,0,0,0,0"))
            (rule "qeq_literals" (formula "22") (term "1,0,0,0,0"))
            (builtin "One Step Simplification" (formula "22"))
            (rule "true_left" (formula "22"))
            (rule "shift_paren_or" (formula "21") (term "0,0,0,0,0"))
            (rule "shift_paren_or" (formula "22") (term "0,0,0,0,0"))
            (rule "commute_or_2" (formula "21") (term "0,0,0,0,0,0"))
            (builtin "One Step Simplification" (formula "21"))
            (rule "commute_or_2" (formula "21") (term "0,0,0,0,0,0"))
            (rule "shift_paren_or" (formula "22") (term "0,0,0,0,0,0"))
            (rule "commute_or" (formula "21") (term "0,0,0,0,0,0,0"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "29") (term "0") (ifseqformula "4"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "30"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "29") (term "0") (ifseqformula "5"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "30"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "33") (term "0") (ifseqformula "6"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "34"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "36") (term "0") (ifseqformula "7"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "37"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "38") (term "0") (ifseqformula "8"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "39"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "37") (term "0") (ifseqformula "9"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "38"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "36") (term "0") (ifseqformula "10"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "37"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "34") (term "0") (ifseqformula "11"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "35"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "34") (term "0") (ifseqformula "12"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "35"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "arrayLengthIsAShort" (formula "29") (term "1,1,0,0,0,0"))
            (builtin "One Step Simplification" (formula "29"))
            (rule "true_left" (formula "29"))
            (rule "arrayLengthNotNegative" (formula "29") (term "1,1,0,0,0,0"))
            (rule "methodCallEmpty" (formula "51") (term "1,1,0,1"))
            (rule "tryEmpty" (formula "51") (term "1,1,0,1"))
            (rule "emptyModality" (formula "51") (term "1,1,0,1"))
            (builtin "One Step Simplification" (formula "51"))
            (rule "throwUnfold" (formula "51") (term "1") (inst "#v0=n"))
            (rule "variableDeclarationAssign" (formula "51") (term "1"))
            (rule "variableDeclaration" (formula "51") (term "1") (newnames "n"))
            (builtin "Use Operation Contract" (formula "51") (newnames "heapBefore_NullPointerException,self_0,exc_0,heapAfter_NullPointerException,anon_heap_NullPointerException") (contract "java.lang.NullPointerException[java.lang.NullPointerException::NullPointerException()].JML normal_behavior operation contract.0"))
            (branch "Post (NullPointerException)"
               (builtin "One Step Simplification" (formula "53"))
               (builtin "One Step Simplification" (formula "37"))
               (rule "andLeft" (formula "37"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "1,1,0,1,0") (ifseqformula "37"))
               (builtin "One Step Simplification" (formula "38"))
               (rule "andLeft" (formula "38"))
               (rule "andLeft" (formula "38"))
               (rule "andLeft" (formula "40"))
               (rule "andLeft" (formula "39"))
               (rule "andLeft" (formula "41"))
               (rule "andLeft" (formula "39"))
               (rule "andLeft" (formula "42"))
               (rule "andLeft" (formula "40"))
               (rule "notLeft" (formula "39"))
               (rule "notLeft" (formula "39"))
               (rule "orRight" (formula "44"))
               (rule "replace_known_right" (formula "39") (term "0,0") (ifseqformula "44"))
               (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "45")))
               (rule "dismissNonSelectedField" (formula "44") (term "0"))
               (rule "assignment" (formula "62") (term "1"))
               (builtin "One Step Simplification" (formula "62"))
               (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=java_lang_Throwable_cause_0"))
               (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "37"))
               (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "47")) (ifInst ""  (formula "46")))
               (rule "dismissNonSelectedField" (formula "42") (term "0,0,1,0,0"))
               (rule "replace_known_right" (formula "42") (term "0,1,0,0") (ifseqformula "45"))
               (builtin "One Step Simplification" (formula "42"))
               (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "42"))
               (rule "hideAuxiliaryEq" (formula "42"))
               (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=java_lang_Throwable_message_0"))
               (rule "simplifySelectOfAnonEQ" (formula "41") (ifseqformula "37"))
               (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "47")) (ifInst ""  (formula "46")))
               (rule "dismissNonSelectedField" (formula "41") (term "0,0,1,0,0"))
               (rule "replace_known_right" (formula "41") (term "0,1,0,0") (ifseqformula "45"))
               (builtin "One Step Simplification" (formula "41"))
               (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "41"))
               (rule "hideAuxiliaryEq" (formula "41"))
               (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=java_lang_Object_created__3"))
               (rule "simplifySelectOfMemset" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfStore" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfCreate" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
               (rule "castDel" (formula "1") (term "1,0"))
               (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
               (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "47"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
               (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "commuteUnion" (formula "37") (term "1,0"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "41") (term "0") (ifseqformula "36"))
               (rule "replace_known_left" (formula "41") (term "0") (ifseqformula "42"))
               (builtin "One Step Simplification" (formula "41"))
               (rule "true_left" (formula "41"))
               (rule "onlyCreatedObjectsAreReferenced" (formula "42") (term "0") (ifseqformula "36"))
               (rule "replace_known_left" (formula "42") (term "0") (ifseqformula "43"))
               (builtin "One Step Simplification" (formula "42"))
               (rule "true_left" (formula "42"))
               (rule "methodCallThrow" (formula "62") (term "1"))
               (rule "throwBox" (formula "62") (term "1"))
               (rule "closeTrue" (formula "62"))
            )
            (branch "Exceptional Post (NullPointerException)"
               (builtin "One Step Simplification" (formula "53"))
               (builtin "One Step Simplification" (formula "37"))
               (rule "andLeft" (formula "37"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "1,0,0") (ifseqformula "37"))
               (builtin "One Step Simplification" (formula "38"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "1,1,0,1,0") (ifseqformula "37"))
               (builtin "One Step Simplification" (formula "38"))
               (rule "andLeft" (formula "38"))
               (rule "andLeft" (formula "39"))
               (rule "andLeft" (formula "38"))
               (rule "andLeft" (formula "40"))
               (rule "andLeft" (formula "38"))
               (rule "andLeft" (formula "40"))
               (rule "andLeft" (formula "42"))
               (rule "notLeft" (formula "38"))
               (rule "close" (formula "45") (ifseqformula "44"))
            )
            (branch "Pre (NullPointerException)"
               (builtin "One Step Simplification" (formula "51"))
               (rule "wellFormedAnon" (formula "51"))
               (rule "wellFormedStorePrimitive" (formula "51") (term "0"))
               (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "26"))
               (builtin "One Step Simplification" (formula "51"))
               (rule "wellFormedMemsetArrayObject" (formula "51"))
               (builtin "One Step Simplification" (formula "51"))
               (rule "wellFormedStorePrimitive" (formula "51") (term "0"))
               (rule "wellFormedStorePrimitive" (formula "51") (term "0"))
               (rule "wellFormedStorePrimitive" (formula "51") (term "0"))
               (rule "wellFormedCreate" (formula "51") (term "0"))
               (rule "orRight" (formula "51"))
               (rule "close" (formula "51") (ifseqformula "13"))
            )
         )
      )
   )
   (branch "Null Reference (newObject = null)"
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
      (rule "closeFalse" (formula "1"))
   )
)
)

}
