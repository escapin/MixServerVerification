\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Dec 05 21:09:05 CET 2016
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=\\#begexpand_inByte\\#end,\\#begexpand_inChar\\#end,\\#begexpand_inShort\\#end,\\#begexpand_inInt\\#end,\\#begexpand_inLong\\#end
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_NONE
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=5000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Mon Dec 05 21:09:05 CET 2016
name=verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer\\:\\:split([B)].JML normal_behavior operation contract.0
contract=verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer\\:\\:split([B)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mihai" ) (keyVersion "467f4054054b19a48d0d06e2e8bae6f9716b2959"))
(keyLog "1" (keyUser "mihai" ) (keyVersion "467f4054054b19a48d0d06e2e8bae6f9716b2959"))
(keyLog "2" (keyUser "mihai" ) (keyVersion "467f4054054b19a48d0d06e2e8bae6f9716b2959"))
(keyLog "3" (keyUser "mihai" ) (keyVersion "467f4054054b19a48d0d06e2e8bae6f9716b2959"))

(autoModeTime "3978")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "ballots,self,result,exc,heapAtPre,o,f") (userinteraction))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "7"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "assignment" (formula "10") (term "1") (userinteraction))
(builtin "One Step Simplification" (formula "10"))
(rule "eqSymm" (formula "10") (term "0,0,0,0,1"))
(rule "eqSymm" (formula "10") (term "1,0,0,1,0,1"))
(rule "nonNull" (formula "10") (term "1,1,1,0,0,0,1") (inst "i=i"))
(rule "greater_literals" (formula "10") (term "0,1,1,1,1,0,0,0,1"))
(builtin "One Step Simplification" (formula "10"))
(rule "sub_literals" (formula "10") (term "2,1,0,1,1,1,1,0,0,0,1"))
(builtin "One Step Simplification" (formula "10"))
(rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,1,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,1,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,1,1,1,0,0,0,1"))
(rule "nnf_imp2or" (formula "10") (term "0,1,1,1,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "10") (term "0,0,1,1,1,1,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "10") (term "0,0,0,1,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "10") (term "1,0,0,0,0,0,1,1,1,1,0,0,0,1"))
(rule "add_zero_right" (formula "10") (term "0,0,0,0,0,1,1,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,1,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "10") (term "1,0,0,0,1,1,1,1,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0,1,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0,1,1,1,1,0,0,0,1"))
(rule "add_literals" (formula "10") (term "0,0,0,1,0,0,1,1,1,1,0,0,0,1"))
(rule "add_zero_left" (formula "10") (term "0,0,1,0,0,1,1,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,1,1,1,1,0,0,0,1"))
(rule "methodBodyExpand" (formula "10") (term "1") (newnames "heapBefore_split,savedHeapBefore_split,_ballotsBefore_split"))
(builtin "One Step Simplification" (formula "10"))
(rule "variableDeclarationAssign" (formula "10") (term "1"))
(rule "variableDeclaration" (formula "10") (term "1") (newnames "messages"))
(rule "arrayCreation" (formula "10") (term "1") (inst "#v0=x_arr_arr"))
(rule "variableDeclaration" (formula "10") (term "1") (newnames "x_arr_arr"))
(rule "variableDeclarationAssign" (formula "10") (term "1"))
(rule "variableDeclaration" (formula "10") (term "1") (newnames "dim0"))
(rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,1,1,1,1,0,0,0,1"))
(rule "assignment" (formula "10") (term "1"))
(builtin "One Step Simplification" (formula "10"))
(rule "ifUnfold" (formula "10") (term "1") (inst "#boolv=x"))
(rule "variableDeclaration" (formula "10") (term "1") (newnames "x"))
(rule "less_than_comparison_simple" (formula "10") (term "1"))
(builtin "One Step Simplification" (formula "10"))
(rule "less_literals" (formula "10") (term "0,0,1,0"))
(builtin "One Step Simplification" (formula "10"))
(rule "ifSplit" (formula "10"))
(branch "if x true"
   (builtin "One Step Simplification" (formula "1"))
   (rule "closeFalse" (formula "1"))
)
(branch "if x false"
   (builtin "One Step Simplification" (formula "1"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "true_left" (formula "1"))
   (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "10") (term "1") (inst "#v0=x_arr_arr_1"))
   (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_arr_arr_1"))
   (rule "variableDeclarationAssign" (formula "10") (term "1"))
   (rule "variableDeclaration" (formula "10") (term "1") (newnames "length_1"))
   (rule "assignment" (formula "10") (term "1"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "methodBodyExpand" (formula "10") (term "1") (newnames "heapBefore_<createArray>,savedHeapBefore_<createArray>"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "variableDeclaration" (formula "10") (term "1") (newnames "newObject"))
   (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "10") (term "1") (inst "#v0=x_arr_arr_2"))
   (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_arr_arr_2"))
   (rule "variableDeclarationAssign" (formula "10") (term "1"))
   (rule "variableDeclaration" (formula "10") (term "1") (newnames "length_2"))
   (rule "assignment" (formula "10") (term "1"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "allocateInstanceWithLength" (formula "10"))
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
   (builtin "One Step Simplification" (formula "11"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "2"))
   (rule "notLeft" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "blockEmpty" (formula "14") (term "1"))
   (rule "assignment" (formula "14") (term "1"))
   (builtin "One Step Simplification" (formula "14"))
   (rule "arrayLengthIsAShort" (formula "1") (term "0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "true_left" (formula "1"))
   (rule "arrayLengthNotNegative" (formula "1") (term "0"))
   (rule "methodCall" (formula "15") (term "1"))
   (branch "Normal Execution (newObject != null )"
      (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "12")))
      (rule "false_right" (formula "15"))
      (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_<createArrayHelper>,savedHeapBefore_<createArrayHelper>"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "assignment_write_attribute_this" (formula "15") (term "1"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "methodCallWithinClass" (formula "15") (term "1"))
      (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "arrayInitialisation" (formula "15") (term "1"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "polySimp_elimSub" (formula "15") (term "2,1,0,1,0"))
      (rule "mul_literals" (formula "15") (term "1,2,1,0,1,0"))
      (rule "polySimp_addComm0" (formula "15") (term "2,1,0,1,0"))
      (rule "methodCallEmpty" (formula "15") (term "1"))
      (rule "blockEmpty" (formula "15") (term "1"))
      (rule "assignment_write_attribute_this" (formula "15") (term "1"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "methodCallReturnIgnoreResult" (formula "15") (term "1"))
      (rule "blockEmpty" (formula "15") (term "1"))
      (rule "methodCallReturn" (formula "15") (term "1"))
      (rule "assignment" (formula "15") (term "1"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "methodCallEmpty" (formula "15") (term "1"))
      (rule "blockEmpty" (formula "15") (term "1"))
      (rule "assignment" (formula "15") (term "1"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "blockEmpty" (formula "15") (term "1"))
      (rule "assignment" (formula "15") (term "1"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "variableDeclarationAssign" (formula "15") (term "1"))
      (rule "variableDeclaration" (formula "15") (term "1") (newnames "bal"))
      (rule "assignment" (formula "15") (term "1"))
      (builtin "One Step Simplification" (formula "15"))
      (builtin "Loop Invariant" (formula "15") (newnames "variant,b,heapBefore_LOOP,balBefore_LOOP,messagesBefore_LOOP,bal_0,messages_0,heap_After_LOOP,anon_heap_LOOP,o,f"))
      (branch "Invariant Initially Valid"
         (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "11")) (ifInst ""  (formula "12")) (ifInst ""  (formula "14")))
         (rule "andRight" (formula "15") (userinteraction))
         (branch "Case 1"
            (rule "andRight" (formula "15") (userinteraction))
            (branch "Case 1"
               (rule "andRight" (formula "15") (userinteraction))
               (branch "Case 1"
                  (rule "andRight" (formula "15") (userinteraction))
                  (branch "Case 1"
                     (rule "allRight" (formula "15") (inst "sk=i_4"))
                     (rule "impRight" (formula "15"))
                     (rule "andLeft" (formula "1"))
                     (rule "eqSymm" (formula "11"))
                     (rule "eqSymm" (formula "17"))
                     (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "16"))
                     (builtin "One Step Simplification" (formula "9"))
                     (rule "dismissNonSelectedField" (formula "17") (term "1,0"))
                     (rule "eqSymm" (formula "17"))
                     (rule "dismissNonSelectedField" (formula "17") (term "1,0"))
                     (rule "eqSymm" (formula "17"))
                     (rule "dismissNonSelectedField" (formula "17") (term "1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "1"))
                     (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "4"))
                     (rule "times_zero_2" (formula "2") (term "1,0"))
                     (rule "add_zero_right" (formula "2") (term "0"))
                     (rule "applyEq" (formula "17") (term "1,2,1,0,0,0") (ifseqformula "4"))
                     (rule "add_zero_right" (formula "17") (term "2,1,0,0,0"))
                     (rule "eqSymm" (formula "17"))
                     (rule "applyEq" (formula "3") (term "0") (ifseqformula "4"))
                     (rule "qeq_literals" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "applyEq" (formula "16") (term "1,2,1,0,0,0") (ifseqformula "3"))
                     (rule "add_zero_right" (formula "16") (term "2,1,0,0,0"))
                     (rule "eqSymm" (formula "16"))
                     (rule "applyEq" (formula "16") (term "1,2,1,0,1,0") (ifseqformula "3"))
                     (rule "add_zero_right" (formula "16") (term "2,1,0,1,0"))
                     (rule "eqSymm" (formula "16"))
                     (rule "applyEq" (formula "16") (term "1,2,1,0,1,0") (ifseqformula "3"))
                     (rule "add_zero_right" (formula "16") (term "2,1,0,1,0"))
                     (rule "eqSymm" (formula "16"))
                     (rule "applyEq" (formula "16") (term "1,2,1,0,1,1,0") (ifseqformula "3"))
                     (rule "add_literals" (formula "16") (term "2,1,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                     (rule "mul_literals" (formula "2") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "2") (term "0"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "closeFalse" (formula "2"))
                  )
                  (branch
                     (rule "applyEq" (formula "15") (term "0,1") (ifseqformula "2") (userinteraction))
                     (rule "cut" (inst "cutFormula=  array2seq(heap, ballots)
= array2seq(store(memset(store(store(store(create(heap,
                                                  x_arr_arr_2),
                                           x_arr_arr_2,
                                           java.lang.Object::<transient>,
                                           Z(0(#))),
                                     x_arr_arr_2,
                                     java.lang.Object::<transactionConditionallyUpdated>,
                                     FALSE),
                               x_arr_arr_2,
                               java.lang.Object::<initialized>,
                               FALSE),
                         arrayRange(x_arr_arr_2,
                                    Z(0(#)),
                                    add(Z(neglit(1(#))),
                                        length(x_arr_arr_2))),
                         null),
                  x_arr_arr_2,
                  java.lang.Object::<initialized>,
                  TRUE),
            ballots)") (userinteraction))
                     (branch
                        (rule "cut" (inst "cutFormula=  array2seq2d(heap,
              byte[][]::select(heap,
                               self,
                               verif.selectvoting.system.core.MixServer::$sorted))
= array2seq2d(store(memset(store(store(store(create(heap,
                                                    x_arr_arr_2),
                                             x_arr_arr_2,
                                             java.lang.Object::<transient>,
                                             Z(0(#))),
                                       x_arr_arr_2,
                                       java.lang.Object::<transactionConditionallyUpdated>,
                                       FALSE),
                                 x_arr_arr_2,
                                 java.lang.Object::<initialized>,
                                 FALSE),
                           arrayRange(x_arr_arr_2,
                                      Z(0(#)),
                                      add(Z(neglit(1(#))),
                                          length(x_arr_arr_2))),
                           null),
                    x_arr_arr_2,
                    java.lang.Object::<initialized>,
                    TRUE),
              byte[][]::select(store(memset(store(store(store(create(heap,
                                                                     x_arr_arr_2),
                                                              x_arr_arr_2,
                                                              java.lang.Object::<transient>,
                                                              Z(0(#))),
                                                        x_arr_arr_2,
                                                        java.lang.Object::<transactionConditionallyUpdated>,
                                                        FALSE),
                                                  x_arr_arr_2,
                                                  java.lang.Object::<initialized>,
                                                  FALSE),
                                            arrayRange(x_arr_arr_2,
                                                       Z(0(#)),
                                                       add(Z(neglit(1(#))),
                                                           length(x_arr_arr_2))),
                                            null),
                                     x_arr_arr_2,
                                     java.lang.Object::<initialized>,
                                     TRUE),
                               self,
                               verif.selectvoting.system.core.MixServer::$sorted))") (userinteraction))
                        (branch "CUT: array2seq2d(heap, self.sorted) = array2seq2d(heap[create(x_arr_arr_2)] [x_arr_arr_2.<transient> := 0] [x_arr_arr_2.<transactionConditionallyUpdated> := FALSE] [x_arr_arr_2.<initialized> := FALSE] [memset(arrayRange(x_arr_arr_2, 0, -1 + x_arr_arr_2.length), null)] [x_arr_arr_2.<initialized> := TRUE], self.sorted@heap[create(x_arr_arr_2)] [x_arr_arr_2.<transient> := 0] [x_arr_arr_2.<transactionConditionallyUpdated> := FALSE] [x_arr_arr_2.<initialized> := FALSE] [memset(arrayRange(x_arr_arr_2, 0, -1 + x_arr_arr_2.length), null)] [x_arr_arr_2.<initialized> := TRUE]) TRUE"
                           (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "1") (userinteraction))
                           (rule "applyEqReverse" (formula "17") (term "0") (ifseqformula "2") (userinteraction))
                           (rule "close" (formula "17") (ifseqformula "11") (userinteraction))
                        )
                        (branch "CUT: array2seq2d(heap, self.sorted) = array2seq2d(heap[create(x_arr_arr_2)] [x_arr_arr_2.<transient> := 0] [x_arr_arr_2.<transactionConditionallyUpdated> := FALSE] [x_arr_arr_2.<initialized> := FALSE] [memset(arrayRange(x_arr_arr_2, 0, -1 + x_arr_arr_2.length), null)] [x_arr_arr_2.<initialized> := TRUE], self.sorted@heap[create(x_arr_arr_2)] [x_arr_arr_2.<transient> := 0] [x_arr_arr_2.<transactionConditionallyUpdated> := FALSE] [x_arr_arr_2.<initialized> := FALSE] [memset(arrayRange(x_arr_arr_2, 0, -1 + x_arr_arr_2.length), null)] [x_arr_arr_2.<initialized> := TRUE]) FALSE"
                           (rule "hide_right" (formula "17") (userinteraction))
                           (rule "array2seq2dDef" (formula "12") (term "1") (inst "u=u") (userinteraction))
                           (rule "array2seq2dDef" (formula "12") (term "0") (inst "u=u") (userinteraction))
                           (rule "equalityToSeqGetAndSeqLenRight" (formula "12") (inst "iv=iv") (userinteraction))
                           (rule "andRight" (formula "12") (userinteraction))
                           (branch "Case 1"
                              (rule "eqSymm" (formula "12"))
                              (rule "eqSymm" (formula "1"))
                              (rule "eqSymm" (formula "10"))
                              (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "16"))
                              (builtin "One Step Simplification" (formula "8"))
                              (rule "dismissNonSelectedField" (formula "12") (term "1,2,0,0"))
                              (rule "lenOfSeqDef" (formula "12") (term "1"))
                              (rule "polySimp_elimSub" (formula "12") (term "1,1"))
                              (rule "mul_literals" (formula "12") (term "1,1,1"))
                              (rule "add_zero_right" (formula "12") (term "1,1"))
                              (rule "dismissNonSelectedField" (formula "12") (term "0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "12") (term "1,1,2,0,0"))
                              (rule "lenOfSeqDef" (formula "12") (term "0"))
                              (rule "polySimp_elimSub" (formula "12") (term "1,0"))
                              (rule "times_zero_2" (formula "12") (term "1,1,0"))
                              (rule "add_zero_right" (formula "12") (term "1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "12") (term "0,1"))
                              (rule "add_zero_right" (formula "12") (term "0,0,1"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0"))
                              (rule "add_zero_right" (formula "12") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                              (rule "applyEq" (formula "12") (term "1,2,1,0,0,0,1,0,0,0") (ifseqformula "3"))
                              (rule "add_zero_right" (formula "12") (term "2,1,0,0,0,1,0,0,0"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                              (rule "qeq_literals" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "applyEq" (formula "1") (term "1,2,1,0,0,0") (ifseqformula "2"))
                              (rule "add_literals" (formula "1") (term "2,1,0,0,0"))
                              (rule "applyEq" (formula "11") (term "1,2,1,0,0,1,0") (ifseqformula "2"))
                              (rule "add_literals" (formula "11") (term "2,1,0,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "0,0,1"))
                              (rule "polySimp_elimOne" (formula "11") (term "0,0,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0"))
                              (rule "polySimp_elimOne" (formula "11") (term "0,0,0"))
                              (rule "array2seqDef" (formula "1") (term "1") (inst "u=u"))
                              (rule "eqSymm" (formula "1"))
                              (rule "narrowSelectArrayType" (formula "1") (term "2,0") (ifseqformula "4") (ifseqformula "15"))
                              (rule "array2seqDef" (formula "9") (term "1") (inst "u=u"))
                              (rule "eqSymm" (formula "9"))
                              (rule "narrowSelectArrayType" (formula "9") (term "2,0") (ifseqformula "4") (ifseqformula "15"))
                              (rule "applyEq" (formula "9") (term "0") (ifseqformula "1"))
                              (rule "applyEq" (formula "1") (term "1") (ifseqformula "9"))
                              (rule "array2seqDef" (formula "9") (term "0") (inst "u=u"))
                              (rule "dismissNonSelectedField" (formula "9") (term "2,0"))
                              (rule "eqSeqDef2" (formula "1") (inst "iv=iv") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "eqSeqDef2" (formula "8") (inst "iv=iv") (ifseqformula "8"))
                              (builtin "One Step Simplification" (formula "8"))
                              (rule "true_left" (formula "8"))
                              (rule "pullOutSelect" (formula "9") (term "0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_3"))
                              (rule "applyEq" (formula "10") (term "0,0,0,0") (ifseqformula "1"))
                              (rule "simplifySelectOfMemset" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "eqSymm" (formula "10"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
                              (rule "applyEqReverse" (formula "10") (term "0,1,1") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "10") (term "0,0,0,1") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "10"))
                              (rule "closeTrue" (formula "10"))
                           )
                           (branch "Case 2"
                              (rule "allRight" (formula "12") (inst "sk=iv_2"))
                              (rule "impRight" (formula "12"))
                              (rule "andLeft" (formula "1"))
                              (rule "eqSymm" (formula "3"))
                              (rule "eqSymm" (formula "12"))
                              (rule "eqSymm" (formula "14"))
                              (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "18"))
                              (builtin "One Step Simplification" (formula "10"))
                              (rule "lenOfSeqDef" (formula "2") (term "1"))
                              (rule "polySimp_elimSub" (formula "2") (term "1,1"))
                              (rule "mul_literals" (formula "2") (term "1,1,1"))
                              (rule "add_zero_right" (formula "2") (term "1,1"))
                              (rule "getOfSeqDef" (formula "14") (term "1"))
                              (rule "castDel" (formula "14") (term "2,1"))
                              (rule "castDel" (formula "14") (term "1,1"))
                              (rule "add_zero_right" (formula "14") (term "0,2,1,1,1"))
                              (rule "replace_known_left" (formula "14") (term "0,0,1") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "14"))
                              (rule "polySimp_elimSub" (formula "14") (term "1,0,1"))
                              (rule "times_zero_2" (formula "14") (term "1,1,0,1"))
                              (rule "add_zero_right" (formula "14") (term "1,0,1"))
                              (rule "getOfSeqDef" (formula "14") (term "0"))
                              (rule "castDel" (formula "14") (term "1,0"))
                              (rule "castDel" (formula "14") (term "2,0"))
                              (rule "add_zero_right" (formula "14") (term "0,2,1,1,0"))
                              (rule "replace_known_left" (formula "14") (term "0,0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "14"))
                              (rule "polySimp_elimSub" (formula "14") (term "1,0,0"))
                              (rule "times_zero_2" (formula "14") (term "1,1,0,0"))
                              (rule "add_zero_right" (formula "14") (term "1,0,0"))
                              (rule "dismissNonSelectedField" (formula "14") (term "1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "2") (term "0,1"))
                              (rule "add_zero_right" (formula "2") (term "0,0,1"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1"))
                              (rule "dismissNonSelectedField" (formula "14") (term "0,1,0,0"))
                              (rule "dismissNonSelectedField" (formula "14") (term "1,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "14") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1"))
                              (rule "polySimp_addComm1" (formula "14") (term "0,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "1"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                              (rule "qeq_literals" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "applyEq" (formula "13") (term "1,2,1,0,1,1,0") (ifseqformula "4"))
                              (rule "add_zero_right" (formula "13") (term "2,1,0,1,1,0"))
                              (rule "applyEq" (formula "13") (term "1,2,1,0,0,1,0") (ifseqformula "4"))
                              (rule "add_zero_right" (formula "13") (term "2,1,0,0,1,0"))
                              (rule "applyEq" (formula "13") (term "1,2,1,0,0,0,1,0,0,0") (ifseqformula "4"))
                              (rule "add_literals" (formula "13") (term "2,1,0,0,0,1,0,0,0"))
                              (rule "applyEq" (formula "13") (term "1,2,1,0,1,1,1,0") (ifseqformula "4"))
                              (rule "add_zero_right" (formula "13") (term "2,1,0,1,1,1,0"))
                              (rule "applyEq" (formula "3") (term "1,2,1,0,0,0") (ifseqformula "4"))
                              (rule "add_literals" (formula "3") (term "2,1,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "0,0,1"))
                              (rule "polySimp_elimOne" (formula "13") (term "0,0,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0"))
                              (rule "polySimp_elimOne" (formula "13") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                              (rule "array2seqDef" (formula "3") (term "1") (inst "u=u"))
                              (rule "eqSymm" (formula "3"))
                              (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "6") (ifseqformula "17"))
                              (rule "array2seqDef" (formula "11") (term "1") (inst "u=u"))
                              (rule "eqSymm" (formula "11"))
                              (rule "narrowSelectArrayType" (formula "11") (term "2,0") (ifseqformula "6") (ifseqformula "17"))
                              (rule "applyEq" (formula "11") (term "0") (ifseqformula "3"))
                              (rule "applyEq" (formula "3") (term "1") (ifseqformula "11"))
                              (rule "array2seqDef" (formula "13") (term "1,1") (inst "u=u"))
                              (rule "eqSymm" (formula "13"))
                              (rule "array2seqDef" (formula "11") (term "0") (inst "u=u"))
                              (rule "dismissNonSelectedField" (formula "11") (term "2,0"))
                              (rule "array2seqDef" (formula "13") (term "1,1") (inst "u=u"))
                              (rule "eqSymm" (formula "13"))
                              (rule "dismissNonSelectedField" (formula "13") (term "2,1,0"))
                              (rule "eqSeqDef2" (formula "3") (inst "iv=iv") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "eqSeqDef2" (formula "10") (inst "iv=iv") (ifseqformula "10"))
                              (builtin "One Step Simplification" (formula "10"))
                              (rule "true_left" (formula "10"))
                              (rule "pullOutSelect" (formula "11") (term "0,1,1,0") (inst "selectSK=arr_9"))
                              (rule "applyEq" (formula "12") (term "1,2,1,0") (ifseqformula "1"))
                              (rule "simplifySelectOfMemset" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,0"))
                              (rule "replace_known_left" (formula "1") (term "1,0,0,0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (term "1,0,0") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "1") (term "0,1,0,0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
                              (rule "pullOutSelect" (formula "12") (term "0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_4"))
                              (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                              (rule "simplifySelectOfMemset" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "13") (term "1,2,1,0") (ifseqformula "2"))
                              (rule "applyEqReverse" (formula "13") (term "0,1,1,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "eqSymm" (formula "12"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                              (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
                              (rule "applyEqReverse" (formula "12") (term "1,1,2,1,1") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "12") (term "0,0,0,1") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "12") (term "1,0,1,1,1") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "eqSymm" (formula "11"))
                              (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "10") (ifseqformula "7"))
                              (rule "andLeft" (formula "10"))
                              (rule "notLeft" (formula "11"))
                              (rule "andLeft" (formula "10"))
                              (rule "notLeft" (formula "11"))
                              (rule "andLeft" (formula "10"))
                              (rule "notLeft" (formula "11"))
                              (rule "andLeft" (formula "10"))
                              (rule "notLeft" (formula "11"))
                              (rule "andLeft" (formula "10"))
                              (rule "andLeft" (formula "10"))
                              (rule "andLeft" (formula "10"))
                              (rule "andLeft" (formula "10"))
                              (rule "notLeft" (formula "10"))
                              (rule "nonNull" (formula "13") (inst "i=i"))
                              (rule "sub_literals" (formula "13") (term "2,1,0,1,1"))
                              (builtin "One Step Simplification" (formula "13"))
                              (rule "greater_literals" (formula "13") (term "0,1"))
                              (builtin "One Step Simplification" (formula "13"))
                              (rule "andLeft" (formula "13"))
                              (rule "notLeft" (formula "13"))
                              (rule "narrowSelectArrayType" (formula "13") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "14"))
                              (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "12") (inst "i=i"))
                              (rule "sub_literals" (formula "12") (term "2,1,0,1,1"))
                              (builtin "One Step Simplification" (formula "12"))
                              (rule "greater_literals" (formula "12") (term "0,1"))
                              (builtin "One Step Simplification" (formula "12"))
                              (rule "andLeft" (formula "12"))
                              (rule "notLeft" (formula "12"))
                              (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "14"))
                              (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "11") (inst "i=i"))
                              (rule "sub_literals" (formula "11") (term "2,1,0,1,1"))
                              (builtin "One Step Simplification" (formula "11"))
                              (rule "greater_literals" (formula "11") (term "0,1"))
                              (builtin "One Step Simplification" (formula "11"))
                              (rule "andLeft" (formula "11"))
                              (rule "notLeft" (formula "11"))
                              (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "14"))
                              (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "10") (inst "i=i"))
                              (rule "greater_literals" (formula "10") (term "0,1"))
                              (builtin "One Step Simplification" (formula "10"))
                              (rule "sub_literals" (formula "10") (term "2,1,0,1"))
                              (builtin "One Step Simplification" (formula "10"))
                              (rule "andLeft" (formula "10"))
                              (rule "notLeft" (formula "10"))
                              (rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "14"))
                              (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                              (rule "nnf_imp2or" (formula "13") (term "0"))
                              (rule "nnf_imp2or" (formula "12") (term "0"))
                              (rule "nnf_imp2or" (formula "11") (term "0"))
                              (rule "nnf_imp2or" (formula "10") (term "0"))
                              (rule "nnf_notAnd" (formula "13") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                              (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                              (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "12") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                              (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                              (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "11") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
                              (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                              (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "10") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
                              (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                              (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
                              (rule "commute_or_2" (formula "13") (term "0"))
                              (rule "commute_or_2" (formula "12") (term "0"))
                              (rule "commute_or_2" (formula "11") (term "0"))
                              (rule "commute_or_2" (formula "10") (term "0"))
                              (rule "commute_or" (formula "13") (term "0,0"))
                              (rule "commute_or" (formula "12") (term "0,0"))
                              (rule "commute_or" (formula "11") (term "0,0"))
                              (rule "commute_or" (formula "10") (term "0,0"))
                              (rule "ifthenelse_split" (formula "2") (term "0"))
                              (branch "self.sorted.length ≥ 1 TRUE"
                                 (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "3")))
                                 (rule "equalityToSeqGetAndSeqLenRight" (formula "24") (inst "iv=iv"))
                                 (rule "getOfSeqDef" (formula "24") (term "0,1,0,1"))
                                 (rule "castDel" (formula "24") (term "1,0,1,0,1"))
                                 (rule "castDel" (formula "24") (term "2,0,1,0,1"))
                                 (rule "add_zero_right" (formula "24") (term "0,2,1,0,1,0,1"))
                                 (rule "eqSymm" (formula "24") (term "1,0,1"))
                                 (rule "polySimp_elimSub" (formula "24") (term "1,1,0,1,1,0,1"))
                                 (rule "times_zero_2" (formula "24") (term "1,1,1,0,1,1,0,1"))
                                 (rule "add_zero_right" (formula "24") (term "1,1,0,1,1,0,1"))
                                 (rule "lenOfSeqDef" (formula "24") (term "1,0"))
                                 (rule "polySimp_elimSub" (formula "24") (term "1,1,0"))
                                 (rule "times_zero_2" (formula "24") (term "1,1,1,0"))
                                 (rule "add_zero_right" (formula "24") (term "1,1,0"))
                                 (rule "lenOfSeqDef" (formula "24") (term "0,0"))
                                 (rule "polySimp_elimSub" (formula "24") (term "1,0,0"))
                                 (rule "times_zero_2" (formula "24") (term "1,1,0,0"))
                                 (rule "add_zero_right" (formula "24") (term "1,0,0"))
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "allRight" (formula "24") (inst "sk=iv_3"))
                                 (rule "impRight" (formula "24"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "replace_known_left" (formula "26") (term "0,0,1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "lenOfSeqDef" (formula "2") (term "1"))
                                 (rule "polySimp_elimSub" (formula "2") (term "1,1"))
                                 (rule "times_zero_2" (formula "2") (term "1,1,1"))
                                 (rule "add_zero_right" (formula "2") (term "1,1"))
                                 (rule "getOfSeqDef" (formula "26") (term "0"))
                                 (rule "castDel" (formula "26") (term "1,0"))
                                 (rule "castDel" (formula "26") (term "2,0"))
                                 (rule "add_zero_right" (formula "26") (term "0,2,1,0"))
                                 (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "polySimp_elimSub" (formula "26") (term "1,0,0"))
                                 (rule "times_zero_2" (formula "26") (term "1,1,0,0"))
                                 (rule "add_zero_right" (formula "26") (term "1,0,0"))
                                 (rule "eqSymm" (formula "26"))
                                 (rule "inEqSimp_ltToLeq" (formula "2") (term "0,1"))
                                 (rule "add_zero_right" (formula "2") (term "0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0"))
                                 (rule "eqSymm" (formula "26"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1"))
                                 (rule "polySimp_addComm1" (formula "26") (term "0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0"))
                                 (rule "eqSymm" (formula "26"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1"))
                                 (rule "eqSymm" (formula "26"))
                                 (rule "polySimp_addComm1" (formula "26") (term "0,0,0"))
                                 (rule "eqSymm" (formula "26"))
                                 (rule "inEqSimp_commuteLeq" (formula "1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0"))
                                 (rule "eqSymm" (formula "26"))
                                 (rule "polySimp_elimOne" (formula "26") (term "0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "26") (term "0,0,0"))
                                 (rule "eqSymm" (formula "26"))
                                 (rule "pullOutSelect" (formula "26") (term "1,0") (inst "selectSK=arr_10"))
                                 (rule "simplifySelectOfMemset" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "eqSymm" (formula "27"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "29"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfCreate" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                                 (rule "applyEqReverse" (formula "27") (term "1,1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "closeTrue" (formula "27"))
                              )
                              (branch "self.sorted.length ≥ 1 FALSE"
                                 (rule "inEqSimp_geqRight" (formula "14"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "3"))
                                 (rule "mul_literals" (formula "3") (term "1,0"))
                                 (rule "add_zero_right" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                 (rule "mul_literals" (formula "3") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "3") (term "0"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "closeFalse" (formula "3"))
                              )
                           )
                        )
                     )
                     (branch "CUT: array2seq(heap, ballots) = array2seq(heap[create(x_arr_arr_2)] [x_arr_arr_2.<transient> := 0] [x_arr_arr_2.<transactionConditionallyUpdated> := FALSE] [x_arr_arr_2.<initialized> := FALSE] [memset(arrayRange(x_arr_arr_2, 0, -1 + x_arr_arr_2.length), null)] [x_arr_arr_2.<initialized> := TRUE], ballots) FALSE"
                        (rule "hide_right" (formula "16") (userinteraction))
                        (rule "equalityToSeqGetAndSeqLenRight" (formula "11") (inst "iv=iv") (userinteraction))
                        (rule "eqSymm" (formula "9"))
                        (rule "eqSymm" (formula "11") (term "1,0,1"))
                        (rule "eqSymm" (formula "11") (term "0"))
                        (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "15"))
                        (builtin "One Step Simplification" (formula "7"))
                        (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,1"))
                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "applyEq" (formula "10") (term "1,2,1,0,0,0,0,1,0,1") (ifseqformula "1"))
                        (rule "add_zero_right" (formula "10") (term "2,1,0,0,0,0,1,0,1"))
                        (rule "applyEq" (formula "10") (term "1,2,1,0,0,0,0,0") (ifseqformula "1"))
                        (rule "add_zero_right" (formula "10") (term "2,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1"))
                        (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1"))
                        (rule "array2seqDef" (formula "8") (term "1") (inst "u=u"))
                        (rule "eqSymm" (formula "8"))
                        (rule "narrowSelectArrayType" (formula "8") (term "2,0") (ifseqformula "3") (ifseqformula "14"))
                        (rule "array2seqDef" (formula "10") (term "0,1,1,0,1") (inst "u=u"))
                        (rule "eqSymm" (formula "10") (term "1,0,1"))
                        (rule "getOfSeqDef" (formula "10") (term "0,1,0,1"))
                        (rule "castDel" (formula "10") (term "1,0,1,0,1"))
                        (rule "castDel" (formula "10") (term "2,0,1,0,1"))
                        (rule "add_zero_right" (formula "10") (term "0,2,1,0,1,0,1"))
                        (rule "polySimp_elimSub" (formula "10") (term "1,1,0,0,1,0,1"))
                        (rule "times_zero_2" (formula "10") (term "1,1,1,0,0,1,0,1"))
                        (rule "add_zero_right" (formula "10") (term "1,1,0,0,1,0,1"))
                        (rule "narrowSelectArrayType" (formula "10") (term "1,0,1,0,1") (ifseqformula "3") (ifseqformula "14"))
                        (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,0,1"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,0,1"))
                        (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,0,1"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,0,1"))
                        (rule "array2seqDef" (formula "10") (term "0,1,0") (inst "u=u"))
                        (rule "eqSymm" (formula "10") (term "0"))
                        (rule "lenOfSeqDef" (formula "10") (term "0,0"))
                        (rule "polySimp_elimSub" (formula "10") (term "1,0,0"))
                        (rule "times_zero_2" (formula "10") (term "1,1,0,0"))
                        (rule "add_zero_right" (formula "10") (term "1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                        (rule "add_zero_right" (formula "10") (term "0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "10") (term "0,0,0,0"))
                        (rule "array2seqDef" (formula "10") (term "0,1,1,1,0,0,1") (inst "u=u"))
                        (rule "lenOfSeqDef" (formula "10") (term "1,1,1,0,0,1"))
                        (rule "polySimp_elimSub" (formula "10") (term "1,1,1,1,0,0,1"))
                        (rule "times_zero_2" (formula "10") (term "1,1,1,1,1,0,0,1"))
                        (rule "add_zero_right" (formula "10") (term "1,1,1,1,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "10") (term "0,1,1,1,0,0,1"))
                        (rule "add_zero_right" (formula "10") (term "0,0,1,1,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,1,1,0,0,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,1,1,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "0,0,1,1,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "10") (term "0,0,1,1,1,0,0,1"))
                        (rule "array2seqDef" (formula "10") (term "0,1,1,0,1") (inst "u=u"))
                        (rule "eqSymm" (formula "10") (term "1,0,1"))
                        (rule "dismissNonSelectedField" (formula "10") (term "2,0,0,1,0,1"))
                        (rule "getOfSeqDef" (formula "10") (term "0,1,0,1"))
                        (rule "castDel" (formula "10") (term "2,0,1,0,1"))
                        (rule "castDel" (formula "10") (term "1,0,1,0,1"))
                        (rule "add_zero_right" (formula "10") (term "0,2,1,0,1,0,1"))
                        (rule "polySimp_elimSub" (formula "10") (term "1,1,0,0,1,0,1"))
                        (rule "times_zero_2" (formula "10") (term "1,1,1,0,0,1,0,1"))
                        (rule "add_zero_right" (formula "10") (term "1,1,0,0,1,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,0,1"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,0,1"))
                        (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,0,1"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,0,1"))
                        (rule "array2seqDef" (formula "10") (term "0,1,0") (inst "u=u"))
                        (rule "eqSymm" (formula "10") (term "0"))
                        (rule "lenOfSeqDef" (formula "10") (term "0,0"))
                        (rule "polySimp_elimSub" (formula "10") (term "1,0,0"))
                        (rule "times_zero_2" (formula "10") (term "1,1,0,0"))
                        (rule "add_zero_right" (formula "10") (term "1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                        (rule "add_zero_right" (formula "10") (term "0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "10") (term "0,0,0,0"))
                        (builtin "One Step Simplification" (formula "10"))
                        (rule "allRight" (formula "10") (inst "sk=iv_4"))
                        (rule "impRight" (formula "10"))
                        (rule "andLeft" (formula "1"))
                        (rule "replace_known_left" (formula "12") (term "0,0,1") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "1")))
                        (rule "inEqSimp_homoInEq0" (formula "2"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "inEqSimp_homoInEq0" (formula "12") (term "0,0"))
                        (rule "eqSymm" (formula "12"))
                        (rule "polySimp_addComm1" (formula "12") (term "0,0,1"))
                        (rule "inEqSimp_homoInEq0" (formula "12") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                        (rule "eqSymm" (formula "12"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1"))
                        (rule "polySimp_rightDist" (formula "2") (term "1"))
                        (rule "mul_literals" (formula "2") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,1"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "12") (term "1,0,1"))
                        (rule "mul_literals" (formula "12") (term "0,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,1"))
                        (rule "polySimp_elimOne" (formula "12") (term "1,1,0,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
                        (rule "mul_literals" (formula "12") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                        (rule "eqSeqDef2" (formula "10") (inst "iv=iv") (ifseqformula "10"))
                        (builtin "One Step Simplification" (formula "10"))
                        (rule "true_left" (formula "10"))
                        (rule "pullOutSelect" (formula "11") (term "1,0") (inst "selectSK=arr_11"))
                        (rule "simplifySelectOfMemset" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "16"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfCreate" (formula "1"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
                        (rule "applyEqReverse" (formula "12") (term "1,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "narrowSelectArrayType" (formula "11") (term "1,0") (ifseqformula "5") (ifseqformula "15"))
                        (builtin "One Step Simplification" (formula "11"))
                        (rule "closeTrue" (formula "11"))
                     )
                  )
               )
               (branch "Case 2"
                  (rule "eqSymm" (formula "9"))
                  (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "14"))
                  (builtin "One Step Simplification" (formula "7"))
                  (rule "dismissNonSelectedField" (formula "15") (term "0,1"))
                  (rule "inEqSimp_leqRight" (formula "15"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "applyEq" (formula "1") (term "1,2,1,0,0,0,1,0") (ifseqformula "3"))
                  (rule "add_literals" (formula "1") (term "2,1,0,0,0,1,0"))
                  (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                  (rule "qeq_literals" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "2"))
                  (rule "add_zero_right" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "array2seqDef" (formula "9") (term "1") (inst "u=u"))
                  (rule "eqSymm" (formula "9"))
                  (rule "narrowSelectArrayType" (formula "9") (term "2,0") (ifseqformula "4") (ifseqformula "14"))
                  (rule "eqSeqDef2" (formula "9") (inst "iv=iv") (ifseqformula "9"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "true_left" (formula "9"))
                  (rule "pullOutSelect" (formula "1") (term "0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_1"))
                  (rule "simplifySelectOfMemset" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
                  (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "9") (ifseqformula "6"))
                  (rule "andLeft" (formula "9"))
                  (rule "notLeft" (formula "10"))
                  (rule "andLeft" (formula "9"))
                  (rule "andLeft" (formula "9"))
                  (rule "notLeft" (formula "11"))
                  (rule "andLeft" (formula "9"))
                  (rule "notLeft" (formula "11"))
                  (rule "notLeft" (formula "10"))
                  (rule "andLeft" (formula "9"))
                  (rule "andLeft" (formula "9"))
                  (rule "andLeft" (formula "9"))
                  (rule "andLeft" (formula "9"))
                  (rule "notLeft" (formula "9"))
                  (rule "nonNull" (formula "12") (inst "i=i"))
                  (rule "greater_literals" (formula "12") (term "0,1"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "sub_literals" (formula "12") (term "2,1,0,1"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "andLeft" (formula "12"))
                  (rule "notLeft" (formula "12"))
                  (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "13"))
                  (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "11") (inst "i=i"))
                  (rule "sub_literals" (formula "11") (term "2,1,0,1,1"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "greater_literals" (formula "11") (term "0,1"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "andLeft" (formula "11"))
                  (rule "notLeft" (formula "11"))
                  (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "13"))
                  (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "10") (inst "i=i"))
                  (rule "greater_literals" (formula "10") (term "0,1"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "sub_literals" (formula "10") (term "2,1,0,1"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "andLeft" (formula "10"))
                  (rule "notLeft" (formula "10"))
                  (rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "13"))
                  (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "9") (inst "i=i"))
                  (rule "greater_literals" (formula "9") (term "0,1"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "sub_literals" (formula "9") (term "2,1,0,1"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "andLeft" (formula "9"))
                  (rule "notLeft" (formula "9"))
                  (rule "narrowSelectArrayType" (formula "9") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "13"))
                  (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                  (rule "nnf_imp2or" (formula "12") (term "0"))
                  (rule "nnf_imp2or" (formula "11") (term "0"))
                  (rule "nnf_imp2or" (formula "10") (term "0"))
                  (rule "nnf_imp2or" (formula "9") (term "0"))
                  (rule "nnf_notAnd" (formula "12") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                  (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                  (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "11") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
                  (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                  (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "10") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
                  (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                  (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "9") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
                  (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "9") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                  (rule "mul_literals" (formula "9") (term "1,0,0,0"))
                  (rule "commute_or_2" (formula "12") (term "0"))
                  (rule "commute_or_2" (formula "11") (term "0"))
                  (rule "commute_or_2" (formula "10") (term "0"))
                  (rule "commute_or_2" (formula "9") (term "0"))
                  (rule "commute_or" (formula "12") (term "0,0"))
                  (rule "commute_or" (formula "11") (term "0,0"))
                  (rule "commute_or" (formula "10") (term "0,0"))
                  (rule "commute_or" (formula "9") (term "0,0"))
                  (rule "arrayLengthNotNegative" (formula "2") (term "0"))
                  (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                  (rule "qeq_literals" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "arrayLengthIsAShort" (formula "2") (term "0"))
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "true_left" (formula "2"))
                  (rule "arrayLengthIsAShort" (formula "1") (term "0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "arrayLengthNotNegative" (formula "1") (term "0"))
                  (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                  (rule "qeq_literals" (formula "1") (term "0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "Case 2"
               (rule "eqSymm" (formula "9"))
               (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "14"))
               (builtin "One Step Simplification" (formula "7"))
               (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
               (rule "qeq_literals" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "applyEq" (formula "14") (term "1,2,1,0,0") (ifseqformula "1"))
               (rule "add_zero_right" (formula "14") (term "2,1,0,0"))
               (rule "array2seqDef" (formula "8") (term "1") (inst "u=u"))
               (rule "eqSymm" (formula "8"))
               (rule "narrowSelectArrayType" (formula "8") (term "2,0") (ifseqformula "3") (ifseqformula "13"))
               (rule "eqSeqDef2" (formula "8") (inst "iv=iv") (ifseqformula "8"))
               (builtin "One Step Simplification" (formula "8"))
               (rule "true_left" (formula "8"))
               (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "13") (ifseqformula "5"))
               (rule "dismissNonSelectedField" (formula "13") (term "0,0,1,0,0,0"))
               (rule "dismissNonSelectedField" (formula "13") (term "0,0,1"))
               (rule "dismissNonSelectedField" (formula "13") (term "1,1,0,0,0,0,0,0,0"))
               (rule "dismissNonSelectedField" (formula "13") (term "0,0,1,0,0"))
               (rule "dismissNonSelectedField" (formula "13") (term "1,1,0,0,0,0"))
               (rule "dismissNonSelectedField" (formula "13") (term "0,0,0,0,0,0,0,0,0,0"))
               (rule "dismissNonSelectedField" (formula "13") (term "0,0,1,0"))
               (rule "dismissNonSelectedField" (formula "13") (term "1,1,0,0,0,0,0"))
               (rule "dismissNonSelectedField" (formula "13") (term "1,1,0,0,0,0,0,0"))
               (rule "nonNull" (formula "13") (term "1,0,0,0,0,0,0,0") (inst "i=i"))
               (rule "greater_literals" (formula "13") (term "0,1,1,0,0,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "sub_literals" (formula "13") (term "2,1,0,1,1,0,0,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "dismissNonSelectedField" (formula "13") (term "0,0,1,0,1,1,0,0,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,1,0,0,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,1,0,0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,1,0,0,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1,1,0,0,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1,1,0,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0"))
               (rule "nonNull" (formula "13") (term "1,0,0,0,0,0,0") (inst "i=i"))
               (rule "greater_literals" (formula "13") (term "0,1,1,0,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "sub_literals" (formula "13") (term "2,1,0,1,1,0,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "dismissNonSelectedField" (formula "13") (term "0,0,1,0,1,1,0,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,1,0,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,1,0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,1,0,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1,1,0,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1,1,0,0,0,0,0,0"))
               (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1,1,0,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,1,0,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1,1,0,0,0,0,0,0"))
               (rule "nonNull" (formula "13") (term "1,0,0,0,0") (inst "i=i"))
               (rule "greater_literals" (formula "13") (term "0,1,1,0,0,0,0"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "sub_literals" (formula "13") (term "2,1,0,1,1,0,0,0,0"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "dismissNonSelectedField" (formula "13") (term "0,0,1,0,1,1,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,1,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,1,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,1,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1,1,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1,1,0,0,0,0"))
               (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1,1,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,1,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1,1,0,0,0,0"))
               (rule "nonNull" (formula "13") (term "1,0,0,0,0,0") (inst "i=i"))
               (rule "greater_literals" (formula "13") (term "0,1,1,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "sub_literals" (formula "13") (term "2,1,0,1,1,0,0,0,0,0"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "dismissNonSelectedField" (formula "13") (term "0,0,1,0,1,1,0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,1,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,1,0,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,1,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,1,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1,1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1,1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,1,0,0,0,0,0"))
               (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1,1,0,0,0,0,0"))
               (rule "pullOutSelect" (formula "13") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_0"))
               (rule "applyEq" (formula "14") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "14") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
               (rule "simplifySelectOfMemset" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfCreate" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
               (rule "applyEqReverse" (formula "14") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "14") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "14") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "13") (term "0,0,1") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_0"))
               (rule "simplifySelectOfMemset" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfCreate" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
               (rule "applyEqReverse" (formula "14") (term "0,0,1") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "13") (term "0,0,0,1,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_0"))
               (rule "applyEq" (formula "14") (term "1,0,0,1,0,1,1,0,0,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "14") (term "0,1,1,1,0,0,1,1,0,0,0,0") (ifseqformula "1"))
               (rule "simplifySelectOfMemset" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfCreate" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
               (rule "applyEqReverse" (formula "14") (term "0,1,1,1,0,0,1,1,0,0,0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "14") (term "0,0,0,1,0,0,0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "14") (term "1,0,0,1,0,1,1,0,0,0,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "13") (term "0,0,0,1,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_0"))
               (rule "applyEq" (formula "14") (term "1,0,0,1,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "14") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
               (rule "simplifySelectOfMemset" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfCreate" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
               (rule "applyEqReverse" (formula "14") (term "0,0,0,1,0,0,0,0,0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "14") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "14") (term "1,0,0,1,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "13") (term "0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_0"))
               (rule "simplifySelectOfMemset" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfCreate" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
               (rule "applyEqReverse" (formula "14") (term "0,0,1,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "13") (term "0,0,1,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_0"))
               (rule "simplifySelectOfMemset" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfCreate" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
               (rule "applyEqReverse" (formula "14") (term "0,0,1,0,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "13") (term "0,0,0,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_0"))
               (rule "simplifySelectOfMemset" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfCreate" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
               (rule "applyEqReverse" (formula "14") (term "0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "13") (term "0,0,1,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_0"))
               (rule "simplifySelectOfMemset" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "pullOutSelect" (formula "14") (term "0,0,0,1,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_0"))
               (rule "applyEq" (formula "15") (term "1,0,0,1,0,1,1,0,0,0,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "15") (term "0,1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "1"))
               (rule "simplifySelectOfMemset" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
               (rule "elementOfArrayRange" (formula "2") (term "0,0") (inst "iv=iv"))
               (builtin "One Step Simplification" (formula "2"))
               (rule "simplifySelectOfCreate" (formula "2"))
               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "12")))
               (rule "applyEqReverse" (formula "15") (term "0,0,1,0,0,0") (ifseqformula "2"))
               (rule "hideAuxiliaryEq" (formula "2"))
               (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "simplifySelectOfCreate" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
               (rule "applyEqReverse" (formula "14") (term "1,0,0,1,0,1,1,0,0,0,0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "14") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "14") (term "0,1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "nnf_imp2or" (formula "13") (term "0,1,1,0,0,0,0"))
               (rule "nnf_imp2or" (formula "13") (term "0,1,1,0,0,0,0,0,0,0"))
               (rule "nnf_imp2or" (formula "13") (term "0,1,1,0,0,0,0,0,0"))
               (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "8") (ifseqformula "5"))
               (rule "andLeft" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "notLeft" (formula "10"))
               (rule "andLeft" (formula "8"))
               (rule "notLeft" (formula "10"))
               (rule "notLeft" (formula "9"))
               (rule "andLeft" (formula "8"))
               (rule "notLeft" (formula "9"))
               (rule "andLeft" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "notLeft" (formula "8"))
               (rule "replace_known_right" (formula "21") (term "0,1,0") (ifseqformula "15"))
               (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "12")) (ifInst ""  (formula "13")) (ifInst ""  (formula "14")) (ifInst ""  (formula "16")))
               (rule "nonNull" (formula "11") (inst "i=i"))
               (rule "greater_literals" (formula "11") (term "0,1"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "sub_literals" (formula "11") (term "2,1,0,1"))
               (builtin "One Step Simplification" (formula "11"))
               (rule "andLeft" (formula "11"))
               (rule "notLeft" (formula "11"))
               (rule "replace_known_right" (formula "22") (term "0,0,1") (ifseqformula "12"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "3") (ifseqformula "12"))
               (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "10") (inst "i=i"))
               (rule "sub_literals" (formula "10") (term "2,1,0,1,1"))
               (builtin "One Step Simplification" (formula "10"))
               (rule "greater_literals" (formula "10") (term "0,1"))
               (builtin "One Step Simplification" (formula "10"))
               (rule "andLeft" (formula "10"))
               (rule "notLeft" (formula "10"))
               (rule "replace_known_right" (formula "23") (term "0,0,1,0") (ifseqformula "12"))
               (builtin "One Step Simplification" (formula "23"))
               (rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "3") (ifseqformula "12"))
               (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
               (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "9") (inst "i=i"))
               (rule "sub_literals" (formula "9") (term "2,1,0,1,1"))
               (builtin "One Step Simplification" (formula "9"))
               (rule "greater_literals" (formula "9") (term "0,1"))
               (builtin "One Step Simplification" (formula "9"))
               (rule "andLeft" (formula "9"))
               (rule "notLeft" (formula "9"))
               (rule "replace_known_right" (formula "24") (term "0,0,1,0,0") (ifseqformula "12"))
               (builtin "One Step Simplification" (formula "24"))
               (rule "narrowSelectArrayType" (formula "9") (term "0,0,1,0") (ifseqformula "3") (ifseqformula "12"))
               (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
               (rule "nonNull" (formula "8") (inst "i=i"))
               (rule "greater_literals" (formula "8") (term "0,1"))
               (builtin "One Step Simplification" (formula "8"))
               (rule "sub_literals" (formula "8") (term "2,1,0,1"))
               (builtin "One Step Simplification" (formula "8"))
               (rule "andLeft" (formula "8"))
               (rule "notLeft" (formula "8"))
               (rule "replace_known_right" (formula "25") (term "0,0,0,0,0") (ifseqformula "12"))
               (builtin "One Step Simplification" (formula "25"))
               (rule "narrowSelectArrayType" (formula "8") (term "0,0,1,0") (ifseqformula "3") (ifseqformula "12"))
               (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
               (rule "nnf_imp2or" (formula "11") (term "0"))
               (rule "nnf_imp2or" (formula "10") (term "0"))
               (rule "nnf_imp2or" (formula "9") (term "0"))
               (rule "nnf_imp2or" (formula "8") (term "0"))
               (rule "nnf_notAnd" (formula "25") (term "0,0,1"))
               (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0,1"))
               (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,1"))
               (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,1"))
               (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,1"))
               (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,1"))
               (rule "add_zero_left" (formula "25") (term "0,0,1,0,0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,1"))
               (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0,1"))
               (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0,1"))
               (rule "add_zero_right" (formula "25") (term "0,0,0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1"))
               (rule "mul_literals" (formula "25") (term "1,0,0,0,1"))
               (rule "nnf_imp2or" (formula "25") (term "0,1,0"))
               (rule "nnf_notAnd" (formula "11") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
               (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
               (rule "mul_literals" (formula "11") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "10") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
               (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
               (rule "mul_literals" (formula "10") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "9") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
               (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "9") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
               (rule "mul_literals" (formula "9") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "8") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
               (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
               (rule "mul_literals" (formula "8") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "25") (term "0,0,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0,0,0,0"))
               (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0,0,0,0"))
               (rule "add_zero_right" (formula "25") (term "0,0,0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,0,0,0"))
               (rule "mul_literals" (formula "25") (term "1,0,0,0,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,0,0,0"))
               (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,0,0,0"))
               (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,0,0,0"))
               (rule "add_zero_left" (formula "25") (term "0,0,1,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,0,0"))
               (rule "nnf_notAnd" (formula "25") (term "0,0,1,0,0"))
               (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,1,0,0"))
               (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,1,0,0"))
               (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,1,0,0"))
               (rule "add_zero_left" (formula "25") (term "0,0,1,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,1,0,0"))
               (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0,1,0,0"))
               (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0,1,0,0"))
               (rule "add_zero_right" (formula "25") (term "0,0,0,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,0,0"))
               (rule "mul_literals" (formula "25") (term "1,0,0,0,1,0,0"))
               (rule "nnf_notAnd" (formula "25") (term "0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,1,0"))
               (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,1,0"))
               (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,1,0"))
               (rule "add_zero_left" (formula "25") (term "0,0,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0,1,0"))
               (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0,1,0"))
               (rule "add_zero_right" (formula "25") (term "0,0,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,0"))
               (rule "mul_literals" (formula "25") (term "1,0,0,0,1,0"))
               (rule "arrayLengthIsAShort" (formula "1") (term "0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "arrayLengthNotNegative" (formula "1") (term "0"))
               (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
               (rule "qeq_literals" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "commute_or_2" (formula "11") (term "0"))
               (rule "commute_or_2" (formula "10") (term "0"))
               (rule "commute_or_2" (formula "9") (term "0"))
               (rule "commute_or_2" (formula "8") (term "0"))
               (rule "commute_or" (formula "11") (term "0,0"))
               (rule "commute_or" (formula "10") (term "0,0"))
               (rule "commute_or" (formula "9") (term "0,0"))
               (rule "commute_or" (formula "8") (term "0,0"))
               (rule "andRight" (formula "25"))
               (branch "Case 1"
                  (rule "andRight" (formula "25"))
                  (branch "Case 1"
                     (rule "andRight" (formula "25"))
                     (branch "Case 1"
                        (rule "allRight" (formula "25") (inst "sk=i_3"))
                        (rule "orRight" (formula "25"))
                        (rule "orRight" (formula "25"))
                        (rule "notRight" (formula "27"))
                        (rule "inEqSimp_leqRight" (formula "26"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "27"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_6"))
                        (rule "simplifySelectOfMemset" (formula "3"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                        (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                        (rule "inEqSimp_commuteLeq" (formula "3") (term "1,0,0,0"))
                        (rule "replace_known_left" (formula "3") (term "1,0,0,0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "inEqSimp_contradInEq1" (formula "3") (term "1,0") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "3") (term "0,1,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_7"))
                        (rule "simplifySelectOfCreate" (formula "3"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "27")))
                        (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "7") (ifseqformula "16"))
                        (rule "allLeft" (formula "12") (inst "t=i_3"))
                        (rule "replace_known_left" (formula "12") (term "0,0,0") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "12") (term "1") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1"))
                        (rule "add_literals" (formula "12") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "12") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "12") (term "0,0,1"))
                        (rule "leq_literals" (formula "12") (term "0,1"))
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "inEqSimp_contradInEq1" (formula "12") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "12") (term "0"))
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "closeFalse" (formula "12"))
                     )
                     (branch "Case 2"
                        (rule "allRight" (formula "25") (inst "sk=i_2"))
                        (rule "orRight" (formula "25"))
                        (rule "orRight" (formula "25"))
                        (rule "notRight" (formula "27"))
                        (rule "inEqSimp_leqRight" (formula "26"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "27"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_4"))
                        (rule "simplifySelectOfMemset" (formula "3"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                        (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                        (rule "inEqSimp_commuteLeq" (formula "3") (term "1,0,0,0"))
                        (rule "replace_known_left" (formula "3") (term "1,0,0,0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "inEqSimp_contradInEq1" (formula "3") (term "1,0") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "3") (term "0,1,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_5"))
                        (rule "simplifySelectOfCreate" (formula "3"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "27")))
                        (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                        (rule "hideAuxiliaryEq" (formula "3"))
                        (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "7") (ifseqformula "17"))
                        (rule "allLeft" (formula "13") (inst "t=i_2"))
                        (rule "replace_known_left" (formula "13") (term "0,0,0") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                        (rule "inEqSimp_contradInEq1" (formula "13") (term "1") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
                        (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "13") (term "0,0,1"))
                        (rule "leq_literals" (formula "13") (term "0,1"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "inEqSimp_contradInEq1" (formula "13") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "13") (term "0"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "closeFalse" (formula "13"))
                     )
                  )
                  (branch "Case 2"
                     (rule "allRight" (formula "25") (inst "sk=i_1"))
                     (rule "orRight" (formula "25"))
                     (rule "orRight" (formula "25"))
                     (rule "notRight" (formula "27"))
                     (rule "inEqSimp_leqRight" (formula "26"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "27"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_2"))
                     (rule "simplifySelectOfMemset" (formula "3"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                     (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                     (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                     (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                     (rule "inEqSimp_commuteLeq" (formula "3") (term "1,0,0,0"))
                     (rule "replace_known_left" (formula "3") (term "1,0,0,0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "inEqSimp_contradInEq1" (formula "3") (term "1,0") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "3") (term "0,1,0"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_3"))
                     (rule "simplifySelectOfCreate" (formula "3"))
                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "27")))
                     (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "7") (ifseqformula "18"))
                     (rule "allLeft" (formula "14") (inst "t=i_1"))
                     (rule "replace_known_left" (formula "14") (term "0,0,0") (ifseqformula "3"))
                     (builtin "One Step Simplification" (formula "14"))
                     (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "14") (term "1") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1"))
                     (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "14") (term "0,0,1"))
                     (rule "leq_literals" (formula "14") (term "0,1"))
                     (builtin "One Step Simplification" (formula "14"))
                     (rule "inEqSimp_contradInEq1" (formula "14") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "14") (term "0"))
                     (builtin "One Step Simplification" (formula "14"))
                     (rule "closeFalse" (formula "14"))
                  )
               )
               (branch "Case 2"
                  (rule "allRight" (formula "25") (inst "sk=i_0"))
                  (rule "orRight" (formula "25"))
                  (rule "orRight" (formula "25"))
                  (rule "notRight" (formula "27"))
                  (rule "inEqSimp_leqRight" (formula "26"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_geqRight" (formula "27"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_0"))
                  (rule "simplifySelectOfMemset" (formula "3"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                  (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                  (rule "inEqSimp_commuteLeq" (formula "3") (term "1,0,0,0"))
                  (rule "replace_known_left" (formula "3") (term "1,0,0,0") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "inEqSimp_contradInEq1" (formula "3") (term "1,0") (ifseqformula "2"))
                  (rule "qeq_literals" (formula "3") (term "0,1,0"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_1"))
                  (rule "simplifySelectOfCreate" (formula "3"))
                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "27")))
                  (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                  (rule "hideAuxiliaryEq" (formula "3"))
                  (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "7") (ifseqformula "19"))
                  (rule "allLeft" (formula "15") (inst "t=i_0"))
                  (rule "replace_known_left" (formula "15") (term "0,0,0") (ifseqformula "3"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                  (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "1"))
                  (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                  (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "15") (term "0,0,1"))
                  (rule "leq_literals" (formula "15") (term "0,1"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "inEqSimp_contradInEq1" (formula "15") (ifseqformula "2"))
                  (rule "qeq_literals" (formula "15") (term "0"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "closeFalse" (formula "15"))
               )
            )
         )
         (branch "Case 2"
            (rule "wellFormedStorePrimitive" (formula "15"))
            (rule "eqSymm" (formula "9"))
            (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "7"))
            (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
            (rule "qeq_literals" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "applyEq" (formula "14") (term "1,2,1,0") (ifseqformula "1"))
            (rule "add_zero_right" (formula "14") (term "2,1,0"))
            (rule "array2seqDef" (formula "8") (term "1") (inst "u=u"))
            (rule "eqSymm" (formula "8"))
            (rule "narrowSelectArrayType" (formula "8") (term "2,0") (ifseqformula "3") (ifseqformula "13"))
            (rule "wellFormedMemsetArrayObject" (formula "14"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "wellFormedStorePrimitive" (formula "14") (term "0"))
            (rule "wellFormedStorePrimitive" (formula "14") (term "0"))
            (rule "wellFormedStorePrimitive" (formula "14") (term "0"))
            (rule "wellFormedCreate" (formula "14") (term "0"))
            (rule "orRight" (formula "14"))
            (rule "close" (formula "14") (ifseqformula "3"))
         )
      )
      (branch "Body Preserves Invariant"
         (opengoal " ")
      )
      (branch "Use Case"
         (opengoal " ")
      )
   )
   (branch "Null Reference (newObject = null)"
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
      (rule "closeFalse" (formula "1"))
   )
)
)

}
