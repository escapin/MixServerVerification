\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Tue Jul 04 17:36:31 CEST 2017
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=5000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , permissions-permissions\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Tue Jul 04 17:36:31 CEST 2017
name=verif.selectvoting.system.core.Setup[verif.selectvoting.system.core.Setup\\:\\:addIdToMsg([B,[[B)].JML normal_behavior operation contract.0
contract=verif.selectvoting.system.core.Setup[verif.selectvoting.system.core.Setup\\:\\:addIdToMsg([B,[[B)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mihai" ) (keyVersion "777423351da3a616156ed00120c6f885d0eb8492"))
(keyLog "1" (keyUser "mihai" ) (keyVersion "777423351da3a616156ed00120c6f885d0eb8492"))
(keyLog "2" (keyUser "mihai" ) (keyVersion "777423351da3a616156ed00120c6f885d0eb8492"))

(autoModeTime "26581")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "electionID,chosen,result,exc,heapAtPre,o,f") (userinteraction))
(rule "assignment" (formula "2") (term "1") (userinteraction))
(rule "methodBodyExpand" (formula "2") (term "1,1") (newnames "heapBefore_addIdToMsg,savedHeapBefore_addIdToMsg,_chosenBefore_addIdToMsg,_electionIDBefore_addIdToMsg") (userinteraction))
(builtin "One Step Simplification" (formula "2"))
(rule "variableDeclarationAssign" (formula "2") (term "1") (userinteraction))
(rule "variableDeclaration" (formula "2") (term "1") (newnames "idMsg") (userinteraction))
(rule "arrayCreation" (formula "2") (term "1") (inst "#v0=x_arr_arr") (userinteraction))
(rule "variableDeclaration" (formula "2") (term "1") (newnames "x_arr_arr") (userinteraction))
(rule "variableDeclarationAssign" (formula "2") (term "1") (userinteraction))
(rule "variableDeclaration" (formula "2") (term "1") (newnames "dim0") (userinteraction))
(rule "assignment_read_length" (formula "2") (term "1") (userinteraction))
(branch "Normal Execution (_chosen != null)"
   (builtin "One Step Simplification" (formula "2"))
   (builtin "One Step Simplification" (formula "3"))
   (rule "ifUnfold" (formula "3") (term "1") (inst "#boolv=x") (userinteraction))
   (rule "variableDeclaration" (formula "3") (term "1") (newnames "x") (userinteraction))
   (rule "less_than_comparison_simple" (formula "3") (term "1") (userinteraction))
   (rule "if" (formula "3") (term "1,1") (userinteraction))
   (builtin "One Step Simplification" (formula "3"))
   (rule "ifthenelse_split_for" (formula "3") (userinteraction))
   (branch "chosen.length < 0 TRUE"
      (rule "andLeft" (formula "2"))
      (rule "andLeft" (formula "2"))
      (rule "andLeft" (formula "4"))
      (rule "andLeft" (formula "2"))
      (rule "notLeft" (formula "5"))
      (rule "andLeft" (formula "3"))
      (rule "eqSymm" (formula "9") (term "1,0,0,1,0,0,0,1"))
      (rule "eqSymm" (formula "9") (term "1,0,0,1,0,1"))
      (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "7"))
      (builtin "One Step Simplification" (formula "3"))
      (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "8"))
      (builtin "One Step Simplification" (formula "4"))
      (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,0,1,0,0,0,1"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,0,1,0,0,0,1"))
      (rule "inEqSimp_ltToLeq" (formula "1"))
      (rule "times_zero_1" (formula "1") (term "1,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0"))
      (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,0,1,0,0,0,1"))
      (rule "blockThrow" (formula "9") (term "1"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0,1,0,0,0,1"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,0,1,0,0,0,1"))
      (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,0,1,0,0,0,1"))
      (rule "mul_literals" (formula "9") (term "0,1,1,0,0,0,1,0,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,0,1,0,0,0,1"))
      (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,0,1,0,0,0,1"))
      (rule "nonNull" (formula "6") (inst "i=i"))
      (rule "greater_literals" (formula "6") (term "0,1"))
      (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "8")))
      (rule "sub_literals" (formula "6") (term "2,1,0"))
      (builtin "One Step Simplification" (formula "6"))
      (rule "narrowSelectArrayType" (formula "6") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "8"))
      (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "6") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0"))
      (rule "array2seqDef" (formula "9") (term "1,1,0,0,1,0,0,0,1") (inst "u=u"))
      (rule "eqSymm" (formula "9") (term "1,0,0,1,0,0,0,1"))
      (rule "nonNull" (formula "9") (term "1,1,1,0,0,0,1") (inst "i=i"))
      (rule "greater_literals" (formula "9") (term "0,1,1,1,1,0,0,0,1"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "sub_literals" (formula "9") (term "2,1,0,1,1,1,1,0,0,0,1"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,1,1,1,0,0,0,1"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1,1,1,1,0,0,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,1,1,1,0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1,1,1,1,0,0,0,1"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,1,1,1,1,0,0,0,1"))
      (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,1,1,1,1,0,0,0,1"))
      (rule "mul_literals" (formula "9") (term "0,1,1,0,0,1,1,1,1,0,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,1,1,1,1,0,0,0,1"))
      (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,1,1,1,1,0,0,0,1"))
      (rule "array2seqDef" (formula "9") (term "0,1,1,0,0,1,0,0,0,1") (inst "u=u"))
      (rule "array2seqDef" (formula "9") (term "1,1,1,0,0,1,0,0,0,1") (inst "u=u"))
      (rule "nnf_imp2or" (formula "6") (term "0"))
      (rule "nnf_notAnd" (formula "6") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "6") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "6") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "6") (term "0,0,0"))
      (rule "mul_literals" (formula "6") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "6") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
      (rule "mul_literals" (formula "6") (term "1,0,0,0"))
      (rule "nnf_imp2or" (formula "9") (term "0,0,1,0,0,0,1"))
      (rule "nnf_imp2or" (formula "9") (term "0,1,1,1,1,0,0,0,1"))
      (rule "nnf_notAnd" (formula "9") (term "0,0,0,1,0,0,0,1"))
      (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,0,1,0,0,0,1"))
      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0,0,1,0,0,0,1"))
      (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0,0,1,0,0,0,1"))
      (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,0,1,0,0,0,1"))
      (rule "add_literals" (formula "9") (term "0,0,0,1,0,0,0,1,0,0,0,1"))
      (rule "add_zero_left" (formula "9") (term "0,0,1,0,0,0,1,0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,0,1,0,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,1,0,0,0,1"))
      (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,1,0,0,0,1"))
      (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0,0,1,0,0,0,1"))
      (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0,0,1,0,0,0,1"))
      (rule "add_zero_right" (formula "9") (term "0,0,0,0,0,0,1,0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,1,0,0,0,1"))
      (rule "mul_literals" (formula "9") (term "1,0,0,0,0,1,0,0,0,1"))
      (rule "nnf_notAnd" (formula "9") (term "0,0,1,1,1,1,0,0,0,1"))
      (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0,1,1,1,1,0,0,0,1"))
      (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0,1,1,1,1,0,0,0,1"))
      (rule "add_zero_right" (formula "9") (term "0,0,0,0,0,1,1,1,1,0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,1,1,1,1,0,0,0,1"))
      (rule "mul_literals" (formula "9") (term "1,0,0,0,1,1,1,1,0,0,0,1"))
      (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,1,1,1,1,0,0,0,1"))
      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0,1,1,1,1,0,0,0,1"))
      (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0,1,1,1,1,0,0,0,1"))
      (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,1,1,1,1,0,0,0,1"))
      (rule "add_literals" (formula "9") (term "0,0,0,1,0,0,1,1,1,1,0,0,0,1"))
      (rule "add_zero_left" (formula "9") (term "0,0,1,0,0,1,1,1,1,0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,1,1,1,1,0,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,1,1,1,1,0,0,0,1"))
      (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,1,1,1,1,0,0,0,1"))
      (rule "commute_or_2" (formula "6") (term "0"))
      (rule "commute_or" (formula "6") (term "0,0"))
      (rule "throwUnfold" (formula "9") (term "1") (inst "#v0=n"))
      (rule "variableDeclarationAssign" (formula "9") (term "1"))
      (rule "variableDeclaration" (formula "9") (term "1") (newnames "n"))
      (rule "arrayLengthIsAShort" (formula "1") (term "0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "arrayLengthNotNegative" (formula "1") (term "0"))
      (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
      (rule "qeq_literals" (formula "1") (term "0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch "chosen.length < 0 FALSE"
      (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "4") (term "1") (inst "#v0=x_arr_arr_1") (userinteraction))
      (rule "variableDeclaration" (formula "4") (term "1") (newnames "x_arr_arr_1") (userinteraction))
      (rule "variableDeclarationAssign" (formula "4") (term "1") (userinteraction))
      (rule "variableDeclaration" (formula "4") (term "1") (newnames "length_1") (userinteraction))
      (rule "assignment" (formula "4") (term "1") (userinteraction))
      (rule "methodBodyExpand" (formula "4") (term "1,1") (newnames "heapBefore_<createArray>,savedHeapBefore_<createArray>") (userinteraction))
      (rule "variableDeclaration" (formula "4") (term "1,1,1") (newnames "newObject") (userinteraction))
      (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "4") (term "1,1,1") (inst "#v0=x_arr_arr_2") (userinteraction))
      (rule "variableDeclaration" (formula "4") (term "1,1,1") (newnames "x_arr_arr_2") (userinteraction))
      (rule "variableDeclarationAssign" (formula "4") (term "1,1,1") (userinteraction))
      (rule "variableDeclaration" (formula "4") (term "1,1,1") (newnames "length_2") (userinteraction))
      (rule "assignment" (formula "4") (term "1,1,1") (userinteraction))
      (builtin "One Step Simplification" (formula "4"))
      (rule "allocateInstanceWithLength" (formula "4") (userinteraction))
      (rule "blockEmpty" (formula "5") (term "1,1") (userinteraction))
      (rule "assignment" (formula "5") (term "1,1") (userinteraction))
      (rule "methodCall" (formula "5") (term "1,1,1") (userinteraction))
      (branch "Normal Execution (newObject != null )"
         (rule "methodBodyExpand" (formula "6") (term "1,1,1") (newnames "heapBefore_<createArrayHelper>,savedHeapBefore_<createArrayHelper>") (userinteraction))
         (rule "assignment_write_attribute_this" (formula "6") (term "1,1,1,1") (userinteraction))
         (rule "methodCallWithinClass" (formula "6") (term "1,1,1,1,1") (userinteraction))
         (rule "methodBodyExpand" (formula "6") (term "1,1,1,1,1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>") (userinteraction))
         (rule "arrayInitialisation" (formula "6") (term "1,1,1,1,1,1") (userinteraction))
         (rule "methodCallEmpty" (formula "6") (term "1,1,1,1,1,1,1") (userinteraction))
         (rule "blockEmpty" (formula "6") (term "1,1,1,1,1,1,1") (userinteraction))
         (rule "assignment_write_attribute_this" (formula "6") (term "1,1,1,1,1,1,1") (userinteraction))
         (rule "methodCallReturnIgnoreResult" (formula "6") (term "1,1,1,1,1,1,1,1") (userinteraction))
         (rule "blockEmpty" (formula "6") (term "1,1,1,1,1,1,1,1") (userinteraction))
         (rule "methodCallReturn" (formula "6") (term "1,1,1,1,1,1,1,1") (userinteraction))
         (rule "assignment" (formula "6") (term "1,1,1,1,1,1,1,1") (userinteraction))
         (rule "methodCallEmpty" (formula "6") (term "1,1,1,1,1,1,1,1,1") (userinteraction))
         (rule "blockEmpty" (formula "6") (term "1,1,1,1,1,1,1,1,1") (userinteraction))
         (rule "assignment" (formula "6") (term "1,1,1,1,1,1,1,1,1") (userinteraction))
         (rule "blockEmpty" (formula "6") (term "1,1,1,1,1,1,1,1,1,1") (userinteraction))
         (rule "assignment" (formula "6") (term "1,1,1,1,1,1,1,1,1,1") (userinteraction))
         (builtin "One Step Simplification" (formula "6"))
         (builtin "One Step Simplification" (formula "5"))
         (rule "for_to_while" (formula "6") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0") (userinteraction))
         (rule "variableDeclarationAssign" (formula "6") (term "1") (userinteraction))
         (rule "variableDeclaration" (formula "6") (term "1") (newnames "i") (userinteraction))
         (rule "assignment" (formula "6") (term "1") (userinteraction))
         (builtin "One Step Simplification" (formula "6"))
         (rule "elim_double_block_3" (formula "6") (term "1") (userinteraction))
         (builtin "Loop Invariant" (formula "6") (newnames "variant,b,heapBefore_LOOP,iBefore_LOOP,i_0,heap_After_LOOP,anon_heap_LOOP,o,f"))
         (branch "Invariant Initially Valid"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "5")))
            (builtin "One Step Simplification" (formula "6"))
            (rule "wellFormedStorePrimitive" (formula "6") (term "1"))
            (rule "leq_literals" (formula "6") (term "0,0,0,0,0"))
            (builtin "One Step Simplification" (formula "6"))
            (rule "andLeft" (formula "2"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "3"))
            (rule "andLeft" (formula "5"))
            (rule "andLeft" (formula "3"))
            (rule "notLeft" (formula "6"))
            (rule "andLeft" (formula "4"))
            (rule "eqSymm" (formula "12") (term "1,0,1,0,0"))
            (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "9"))
            (builtin "One Step Simplification" (formula "4"))
            (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "10"))
            (builtin "One Step Simplification" (formula "5"))
            (rule "replace_known_left" (formula "13") (term "1,0,0,0") (ifseqformula "1"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "polySimp_elimSub" (formula "13") (term "2,1,0,0,1,1,0,1,0,1,0,0"))
            (rule "mul_literals" (formula "13") (term "1,2,1,0,0,1,1,0,1,0,1,0,0"))
            (rule "polySimp_elimSub" (formula "13") (term "2,1,0,0,1,1,0,1,0,0"))
            (rule "mul_literals" (formula "13") (term "1,2,1,0,0,1,1,0,1,0,0"))
            (rule "polySimp_elimSub" (formula "13") (term "2,1,0,1"))
            (rule "mul_literals" (formula "13") (term "1,2,1,0,1"))
            (rule "polySimp_elimSub" (formula "13") (term "2,1,0,0,0,0,1,0,1,0,0"))
            (rule "mul_literals" (formula "13") (term "1,2,1,0,0,0,0,1,0,1,0,0"))
            (rule "polySimp_elimSub" (formula "13") (term "2,1,0,0,1,0,1,0,1,0,0"))
            (rule "mul_literals" (formula "13") (term "1,2,1,0,0,1,0,1,0,1,0,0"))
            (rule "polySimp_elimSub" (formula "13") (term "2,1,0,0,1,1,1,0,1,0,0"))
            (rule "mul_literals" (formula "13") (term "1,2,1,0,0,1,1,1,0,1,0,0"))
            (rule "polySimp_elimSub" (formula "13") (term "2,1,0,0,0,0,1,0,1,0"))
            (rule "mul_literals" (formula "13") (term "1,2,1,0,0,0,0,1,0,1,0"))
            (rule "polySimp_addComm0" (formula "13") (term "2,1,0,0,1,1,0,1,0,1,0,0"))
            (rule "polySimp_addComm0" (formula "13") (term "2,1,0,0,1,1,0,1,0,0"))
            (rule "polySimp_addComm0" (formula "13") (term "2,1,0,1"))
            (rule "polySimp_addComm0" (formula "13") (term "2,1,0,0,0,0,1,0,1,0,0"))
            (rule "polySimp_addComm0" (formula "13") (term "2,1,0,0,1,0,1,0,1,0,0"))
            (rule "polySimp_addComm0" (formula "13") (term "2,1,0,0,1,1,1,0,1,0,0"))
            (rule "polySimp_addComm0" (formula "13") (term "2,1,0,0,0,0,1,0,1,0"))
            (rule "inEqSimp_ltRight" (formula "11"))
            (rule "times_zero_1" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "dismissNonSelectedField" (formula "13") (term "1,1,0,1,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,0"))
            (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0,1,0"))
            (rule "add_zero_right" (formula "13") (term "0,0,1,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,0,0"))
            (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "13") (term "0,0,1,0,0,1,0,0"))
            (rule "dismissNonSelectedField" (formula "13") (term "1,1,1,0,1,0,0"))
            (rule "dismissNonSelectedField" (formula "13") (term "0,0,1,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
            (rule "replace_known_left" (formula "13") (term "0,0,0") (ifseqformula "1"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,0,0"))
            (rule "applyEq" (formula "13") (term "1,2,1,0,0,1,0,1,0,0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "13") (term "1,2,1,0,0,0,1,0,1,0") (ifseqformula "2"))
            (rule "applyEq" (formula "13") (term "1,2,1,0,1") (ifseqformula "2"))
            (rule "applyEq" (formula "13") (term "1,2,1,0,1,1,0,1,0,0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "13") (term "1,2,1,0,0,0,0,1,0,0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "13") (term "1,2,1,0,0,1,1,0,0,0") (ifseqformula "2"))
            (rule "applyEq" (formula "13") (term "1,2,1,0,1,1,1,0,0,0") (ifseqformula "2"))
            (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0,0"))
            (rule "mul_literals" (formula "13") (term "1,1,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,0"))
            (rule "mul_literals" (formula "13") (term "1,1,0,0,1,0"))
            (rule "nonNull" (formula "8") (inst "i=i_1"))
            (rule "greater_literals" (formula "8") (term "0,1"))
            (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "11")))
            (rule "sub_literals" (formula "8") (term "2,1,0"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "narrowSelectArrayType" (formula "8") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "11"))
            (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
            (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
            (rule "wellFormedMemsetArrayObject" (formula "13") (term "1"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "wellFormedStorePrimitive" (formula "13") (term "0,1"))
            (rule "wellFormedStorePrimitive" (formula "13") (term "0,1"))
            (rule "wellFormedStorePrimitive" (formula "13") (term "0,1"))
            (rule "wellFormedCreate" (formula "13") (term "0,1"))
            (rule "replace_known_left" (formula "13") (term "0,1") (ifseqformula "4"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "array2seqDef" (formula "13") (term "0,0,1,0,0") (inst "u=u"))
            (rule "dismissNonSelectedField" (formula "13") (term "2,0,0,1,0,0"))
            (rule "array2seqDef" (formula "13") (term "1,0,1,0,0") (inst "u=u"))
            (rule "dismissNonSelectedField" (formula "13") (term "2,1,0,1,0,0"))
            (rule "array2seqDef" (formula "13") (term "1,1,0,0") (inst "u=u"))
            (rule "eqSymm" (formula "13") (term "1,0,0"))
            (rule "dismissNonSelectedField" (formula "13") (term "2,0,1,0,0"))
            (rule "nnf_imp2or" (formula "8") (term "0"))
            (rule "nnf_imp2or" (formula "13") (term "0,1"))
            (rule "nnf_imp2or" (formula "13") (term "0,0"))
            (rule "nnf_notAnd" (formula "8") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
            (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
            (rule "mul_literals" (formula "8") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "13") (term "0,0,1"))
            (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0,1"))
            (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,1"))
            (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1"))
            (rule "mul_literals" (formula "13") (term "1,0,0,0,1"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "allRight" (formula "13") (inst "sk=j_0"))
            (rule "orRight" (formula "13"))
            (rule "notRight" (formula "13"))
            (rule "andLeft" (formula "1"))
            (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
            (rule "qeq_literals" (formula "2") (term "0"))
            (builtin "One Step Simplification" (formula "2"))
            (rule "closeFalse" (formula "2"))
         )
         (branch "Body Preserves Invariant"
            (builtin "One Step Simplification" (formula "4"))
            (rule "pullOut" (formula "4") (term "0,0,1,0,1,0") (inst "sk=anon_1") (userinteraction))
            (rule "applyEq" (formula "5") (term "0,1,0,1,0,1,0") (ifseqformula "4") (userinteraction))
            (rule "applyEq" (formula "5") (term "0,0,1,1,0,1,0") (ifseqformula "4") (userinteraction))
            (rule "applyEq" (formula "5") (term "0,1,1,1,0,1,0") (ifseqformula "4") (userinteraction))
            (rule "applyEq" (formula "5") (term "0,1,1,1,1,0,1,0") (ifseqformula "4") (userinteraction))
            (rule "applyEq" (formula "5") (term "0,0,0,1,0,1") (ifseqformula "4") (userinteraction))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "8")))
            (builtin "One Step Simplification" (formula "9"))
            (rule "applyEq" (formula "9") (term "0,1,1,0,0") (ifseqformula "4") (userinteraction))
            (rule "impRight" (formula "9") (userinteraction))
            (rule "variableDeclarationAssign" (formula "1") (term "1") (userinteraction))
            (rule "variableDeclaration" (formula "1") (term "1") (newnames "b_2") (userinteraction))
            (rule "compound_less_than_comparison_2" (formula "1") (term "1") (inst "#v1=x_1") (inst "#v0=x") (userinteraction))
            (rule "variableDeclarationAssign" (formula "1") (term "1") (userinteraction))
            (rule "variableDeclaration" (formula "1") (term "1") (newnames "x_4") (userinteraction))
            (rule "assignment" (formula "1") (term "1") (userinteraction))
            (rule "variableDeclarationAssign" (formula "1") (term "1,1") (userinteraction))
            (rule "variableDeclaration" (formula "1") (term "1,1") (newnames "x_5") (userinteraction))
            (rule "assignment_read_length" (formula "1") (term "1,1") (userinteraction))
            (branch "Normal Execution (_chosen != null)"
               (rule "less_than_comparison_simple" (formula "1") (term "1,1,1") (userinteraction))
               (rule "methodCallEmpty" (formula "1") (term "1,1,1,1") (userinteraction))
               (builtin "One Step Simplification" (formula "1"))
               (rule "emptyModality" (formula "1") (term "1") (userinteraction))
               (builtin "One Step Simplification" (formula "1"))
               (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "8")))
               (rule "applyEq" (formula "11") (term "0,1,0,1,1,0") (ifseqformula "5") (userinteraction))
               (rule "variableDeclarationAssign" (formula "11") (term "1") (userinteraction))
               (rule "variableDeclaration" (formula "11") (term "1") (newnames "exc_1") (userinteraction))
               (rule "assignment" (formula "11") (term "1") (userinteraction))
               (rule "variableDeclaration" (formula "11") (term "1,1") (newnames "thrownExc") (userinteraction))
               (rule "ifUnfold" (formula "11") (term "1,1") (inst "#boolv=x") (userinteraction))
               (rule "variableDeclaration" (formula "11") (term "1,1") (newnames "x_6") (userinteraction))
               (rule "compound_less_than_comparison_2" (formula "11") (term "1,1") (inst "#v1=x_8") (inst "#v0=x_7") (userinteraction))
               (rule "variableDeclarationAssign" (formula "11") (term "1,1") (userinteraction))
               (rule "variableDeclaration" (formula "11") (term "1,1") (newnames "x_7") (userinteraction))
               (rule "assignment" (formula "11") (term "1,1") (userinteraction))
               (rule "variableDeclarationAssign" (formula "11") (term "1,1,1") (userinteraction))
               (rule "variableDeclaration" (formula "11") (term "1,1,1") (newnames "x_8") (userinteraction))
               (rule "assignment_read_length" (formula "11") (term "1,1,1") (userinteraction))
               (branch "Normal Execution (_chosen != null)"
                  (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "8")))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "less_than_comparison_simple" (formula "11") (term "1") (userinteraction))
                  (rule "if" (formula "11") (term "1,1") (userinteraction))
                  (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "1")))
                  (rule "eval_order_array_access3" (formula "11") (term "1") (inst "#v1=x_arr") (inst "#v2=x") (inst "#v0=x_arr_arr") (userinteraction))
                  (rule "variableDeclarationAssign" (formula "11") (term "1") (userinteraction))
                  (rule "variableDeclaration" (formula "11") (term "1") (newnames "x_arr_arr_3") (userinteraction))
                  (rule "assignment" (formula "11") (term "1") (userinteraction))
                  (rule "variableDeclarationAssign" (formula "11") (term "1,1") (userinteraction))
                  (rule "variableDeclaration" (formula "11") (term "1,1") (newnames "x_9") (userinteraction))
                  (rule "assignment" (formula "11") (term "1,1") (userinteraction))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "ifUnfold" (formula "11") (term "1") (inst "#boolv=x_10") (userinteraction))
                  (rule "variableDeclaration" (formula "11") (term "1") (newnames "x_10") (userinteraction))
                  (rule "compound_assignment_5_nonsimple" (formula "11") (term "1") (userinteraction))
                  (rule "ifElseUnfold" (formula "11") (term "1") (inst "#boolv=x_11") (userinteraction))
                  (rule "variableDeclaration" (formula "11") (term "1") (newnames "x_11") (userinteraction))
                  (rule "compound_less_equal_than_comparison_1" (formula "11") (term "1") (inst "#v0=x_12") (userinteraction))
                  (rule "variableDeclarationAssign" (formula "11") (term "1") (userinteraction))
                  (rule "variableDeclaration" (formula "11") (term "1") (newnames "x_12") (userinteraction))
                  (rule "eval_order_access2" (formula "11") (term "1") (inst "#v0=x_arr_arr_4") (userinteraction))
                  (rule "variableDeclarationAssign" (formula "11") (term "1") (userinteraction))
                  (rule "variableDeclaration" (formula "11") (term "1") (newnames "x_arr_arr_4") (userinteraction))
                  (rule "remove_parentheses_right" (formula "11") (term "1") (userinteraction))
                  (rule "assignment" (formula "11") (term "1") (userinteraction))
                  (rule "assignment_read_length" (formula "11") (term "1,1") (userinteraction))
                  (branch "Normal Execution (x_arr_arr_4 != null)"
                     (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "10")))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "less_equal_than_comparison_simple" (formula "11") (term "1") (userinteraction))
                     (rule "ifElse" (formula "11") (term "1,1") (userinteraction))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "ifthenelse_split_for" (formula "11") (userinteraction))
                     (branch "x_arr_arr_2.length ≤ i_0 TRUE"
                        (rule "false_right" (formula "8"))
                        (rule "translateJavaSubInt" (formula "11") (term "0,1,1,1,0,1"))
                        (rule "translateJavaSubInt" (formula "11") (term "0,1,1,1,0,0,0"))
                        (rule "andLeft" (formula "4"))
                        (rule "andLeft" (formula "8"))
                        (rule "andLeft" (formula "3"))
                        (rule "andLeft" (formula "6"))
                        (rule "andLeft" (formula "5"))
                        (rule "andLeft" (formula "11"))
                        (rule "notLeft" (formula "7"))
                        (rule "andLeft" (formula "5"))
                        (rule "andLeft" (formula "11"))
                        (rule "andLeft" (formula "6"))
                        (rule "andLeft" (formula "12"))
                        (rule "eqSymm" (formula "21") (term "1,0,0,1,0,0,0,1,0,0,1"))
                        (rule "eqSymm" (formula "21") (term "1,0,0,1,0,1,1,0,1"))
                        (rule "eqSymm" (formula "21") (term "1,0,1,0,0,0,1,1,0,1"))
                        (rule "eqSymm" (formula "21") (term "1,0,0,1,0,1,0,0,1"))
                        (rule "eqSymm" (formula "15") (term "1,0"))
                        (rule "replace_known_left" (formula "3") (term "1,1") (ifseqformula "14"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "5")))
                        (rule "notLeft" (formula "3"))
                        (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "18"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "17"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "polySimp_elimSub" (formula "10") (term "2,1,0,0,0"))
                        (rule "mul_literals" (formula "10") (term "1,2,1,0,0,0"))
                        (rule "polySimp_elimSub" (formula "21") (term "2,1,0,0,0,1,0,0,0"))
                        (rule "mul_literals" (formula "21") (term "1,2,1,0,0,0,1,0,0,0"))
                        (rule "polySimp_elimSub" (formula "21") (term "0,1,1,1,0,1"))
                        (rule "polySimp_elimSub" (formula "21") (term "0,1,1,1,0,0,0"))
                        (rule "polySimp_addComm0" (formula "10") (term "2,1,0,0,0"))
                        (rule "polySimp_addComm0" (formula "21") (term "2,1,0,0,0,1,0,0,0"))
                        (rule "polySimp_addComm0" (formula "21") (term "0,1,1,1,0,1"))
                        (rule "polySimp_addComm0" (formula "21") (term "0,1,1,1,0,0,0"))
                        (rule "inEqSimp_ltRight" (formula "19"))
                        (rule "times_zero_1" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,1,0,0,0,1,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,1,0,0,0,1,1,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,1,0,0,1,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,1,0,0,1,1,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,0,1,0,0,0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,0,1,0,0,0,1,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                        (rule "ifEnterThen" (formula "21") (term "1"))
                        (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,1,0,0,1,1,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,0,0,0,1,1,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,0,1,0,0,0,1,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,1,0,0,0,1,1,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0,0,0,0,0,1,1,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "13"))
                        (rule "inEqSimp_commuteLeq" (formula "12"))
                        (rule "assignment" (formula "21") (term "1"))
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "applyEq" (formula "2") (term "0") (ifseqformula "14"))
                        (rule "applyEq" (formula "21") (term "1,2,1,0,0,0,1,0,0,0") (ifseqformula "14"))
                        (rule "applyEq" (formula "11") (term "1,2,1,0,0,0") (ifseqformula "14"))
                        (rule "blockThrow" (formula "21") (term "1,0,0,1"))
                        (rule "blockThrow" (formula "21") (term "1"))
                        (rule "blockThrow" (formula "21") (term "1"))
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,1,0,0,1,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,1,0,0,1,1,0,1"))
                        (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,1,0,0,1,1,0,1"))
                        (rule "mul_literals" (formula "21") (term "0,1,1,0,0,1,0,0,1,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,1,0,0,1,1,0,1"))
                        (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,1,0,0,1,1,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,0,1,0,0,0,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,0,1,0,0,0,1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,0,1,0,0,0,1,0,0,1"))
                        (rule "mul_literals" (formula "21") (term "0,1,1,0,0,0,1,0,0,0,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,0,1,0,0,0,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,0,1,0,0,0,1,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,1,0,0,0,1,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,1,0,0,0,1,1,0,1"))
                        (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,1,0,0,0,1,1,0,1"))
                        (rule "mul_literals" (formula "21") (term "0,1,1,0,0,1,0,0,0,1,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,1,0,0,0,1,1,0,1"))
                        (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,1,0,0,0,1,1,0,1"))
                        (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "3"))
                        (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                        (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
                        (rule "add_literals" (formula "13") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "13") (term "1,0,0"))
                        (rule "add_zero_right" (formula "13") (term "0,0"))
                        (rule "qeq_literals" (formula "13") (term "0"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "true_left" (formula "13"))
                        (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "2"))
                        (rule "andLeft" (formula "3"))
                        (rule "inEqSimp_homoInEq1" (formula "3"))
                        (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                        (rule "add_literals" (formula "3") (term "1,1,0"))
                        (rule "times_zero_1" (formula "3") (term "1,0"))
                        (rule "add_zero_right" (formula "3") (term "0"))
                        (rule "leq_literals" (formula "3"))
                        (rule "closeFalse" (formula "3"))
                     )
                     (branch "x_arr_arr_2.length ≤ i_0 FALSE"
                        (rule "less_than_comparison_simple" (formula "12") (term "1") (userinteraction))
                        (rule "blockEmpty" (formula "12") (term "1,1") (userinteraction))
                        (rule "if" (formula "12") (term "1,1") (userinteraction))
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "ifthenelse_split_for" (formula "12") (userinteraction))
                        (branch "i_0 < 0 TRUE"
                           (rule "false_right" (formula "8"))
                           (rule "translateJavaSubInt" (formula "12") (term "0,1,1,1,0,1"))
                           (rule "translateJavaSubInt" (formula "12") (term "0,1,1,1,0,0,0"))
                           (rule "andLeft" (formula "7"))
                           (rule "andLeft" (formula "3"))
                           (rule "andLeft" (formula "5"))
                           (rule "andLeft" (formula "9"))
                           (rule "andLeft" (formula "6"))
                           (rule "andLeft" (formula "5"))
                           (rule "andLeft" (formula "11"))
                           (rule "notLeft" (formula "7"))
                           (rule "andLeft" (formula "5"))
                           (rule "andLeft" (formula "11"))
                           (rule "andLeft" (formula "6"))
                           (rule "eqSymm" (formula "22") (term "1,0,0,1,0,1,0,0,1"))
                           (rule "eqSymm" (formula "22") (term "1,0,1,0,0,0,1,1,0,1"))
                           (rule "eqSymm" (formula "22") (term "1,0,0,1,0,0,0,1,0,0,1"))
                           (rule "eqSymm" (formula "22") (term "1,0,0,1,0,1,1,0,1"))
                           (rule "eqSymm" (formula "15") (term "1,0"))
                           (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "17"))
                           (builtin "One Step Simplification" (formula "6"))
                           (rule "replace_known_left" (formula "3") (term "1,1") (ifseqformula "14"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "5")))
                           (rule "notLeft" (formula "3"))
                           (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "18"))
                           (builtin "One Step Simplification" (formula "6"))
                           (rule "polySimp_elimSub" (formula "22") (term "2,1,0,0,0,1,0,0,0"))
                           (rule "mul_literals" (formula "22") (term "1,2,1,0,0,0,1,0,0,0"))
                           (rule "polySimp_elimSub" (formula "10") (term "2,1,0,0,0"))
                           (rule "mul_literals" (formula "10") (term "1,2,1,0,0,0"))
                           (rule "polySimp_elimSub" (formula "22") (term "0,1,1,1,0,1"))
                           (rule "polySimp_elimSub" (formula "22") (term "0,1,1,1,0,0,0"))
                           (rule "polySimp_addComm0" (formula "22") (term "2,1,0,0,0,1,0,0,0"))
                           (rule "polySimp_addComm0" (formula "10") (term "2,1,0,0,0"))
                           (rule "polySimp_addComm0" (formula "22") (term "0,1,1,1,0,1"))
                           (rule "polySimp_addComm0" (formula "22") (term "0,1,1,1,0,0,0"))
                           (rule "inEqSimp_ltRight" (formula "19"))
                           (rule "times_zero_1" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_leqRight" (formula "21"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,0,1,0,0,0,1,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,0,1,0,0,0,1,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1,0,0,0,1,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,1,0,0,0,1,1,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "3"))
                           (rule "mul_literals" (formula "3") (term "1,0,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1,0,0,1,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,1,0,0,1,1,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0,0,0,0,0,1,1,0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,0,1,0,0,0,1,0,0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1,0,0,1,1,0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1,0,0,0,1,1,0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,0,0,0,1,1,0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "14"))
                           (rule "inEqSimp_commuteLeq" (formula "13"))
                           (rule "applyEq" (formula "12") (term "1,2,1,0,0,0") (ifseqformula "15"))
                           (rule "applyEq" (formula "22") (term "1,2,1,0,0,0,1,0,0,0") (ifseqformula "15"))
                           (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "15"))
                           (rule "blockThrow" (formula "22") (term "1,0,0,1"))
                           (rule "blockThrow" (formula "22") (term "1"))
                           (rule "blockThrow" (formula "22") (term "1"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                           (rule "mul_literals" (formula "3") (term "1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                           (rule "polySimp_elimOne" (formula "4") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,1,0,0,1,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,1,0,0,1,1,0,1"))
                           (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,1,0,0,1,1,0,1"))
                           (rule "mul_literals" (formula "21") (term "0,1,1,0,0,1,0,0,1,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,1,0,0,1,1,0,1"))
                           (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,1,0,0,1,1,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,1,0,0,0,1,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,1,0,0,0,1,1,0,1"))
                           (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,1,0,0,0,1,1,0,1"))
                           (rule "mul_literals" (formula "21") (term "0,1,1,0,0,1,0,0,0,1,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,1,0,0,0,1,1,0,1"))
                           (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,1,0,0,0,1,1,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,0,1,0,0,0,1,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,0,1,0,0,0,1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,0,1,0,0,0,1,0,0,1"))
                           (rule "mul_literals" (formula "21") (term "0,1,1,0,0,0,1,0,0,0,1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,0,1,0,0,0,1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,0,1,0,0,0,1,0,0,1"))
                           (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "12"))
                           (rule "qeq_literals" (formula "2") (term "0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "closeFalse" (formula "2"))
                        )
                        (branch "i_0 < 0 FALSE"
                           (rule "variableDeclarationAssign" (formula "13") (term "1") (userinteraction))
                           (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_arr") (userinteraction))
                           (rule "methodCallWithAssignmentUnfoldArguments" (formula "13") (term "1") (userinteraction))
                           (rule "variableDeclarationAssign" (formula "13") (term "1") (userinteraction))
                           (rule "variableDeclaration" (formula "13") (term "1") (newnames "var") (userinteraction))
                           (rule "assignment" (formula "13") (term "1") (userinteraction))
                           (rule "variableDeclarationAssign" (formula "13") (term "1,1") (userinteraction))
                           (rule "variableDeclaration" (formula "13") (term "1,1") (newnames "var_1") (userinteraction))
                           (rule "assignment_array2" (formula "13") (term "1,1") (userinteraction))
                           (branch "Normal Execution (_chosen != null)"
                              (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "8")) (ifInst ""  (formula "12")))
                              (builtin "One Step Simplification" (formula "14"))
                              (builtin "Use Operation Contract" (formula "14") (newnames "heapBefore_concatenate,result_0,exc_2,heapAfter_concatenate,anon_heap_concatenate") (contract "verif.utils.MessageTools[verif.utils.MessageTools::concatenate([B,[B)].JML normal_behavior operation contract.0"))
                              (branch "Post (concatenate)"
                                 (builtin "One Step Simplification" (formula "8"))
                                 (rule "assignment" (formula "16") (term "1,1") (userinteraction))
                                 (rule "blockEmpty" (formula "16") (term "1,1,1") (userinteraction))
                                 (rule "assignment_to_reference_array_component" (formula "16") (term "1,1,1") (userinteraction))
                                 (branch "Normal Execution (x_arr_arr_3 != null)"
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "blockEmpty" (formula "17") (term "1") (userinteraction))
                                    (rule "preincrement" (formula "17") (term "1") (userinteraction))
                                    (rule "compound_int_cast_expression" (formula "17") (term "1") (inst "#v=x") (userinteraction))
                                    (rule "variableDeclarationAssign" (formula "17") (term "1") (userinteraction))
                                    (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_13") (userinteraction))
                                    (rule "remove_parentheses_right" (formula "17") (term "1") (userinteraction))
                                    (rule "assignmentAdditionInt" (formula "17") (term "1") (userinteraction))
                                    (rule "widening_identity_cast_5" (formula "17") (term "1,1") (userinteraction))
                                    (rule "assignment" (formula "17") (term "1,1") (userinteraction))
                                    (rule "tryEmpty" (formula "17") (term "1,1,1") (userinteraction))
                                    (rule "methodCallEmpty" (formula "17") (term "1,1,1") (userinteraction))
                                    (rule "emptyModality" (formula "17") (term "1,1,1") (userinteraction))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                                    (rule "false_right" (formula "10"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "andLeft" (formula "8"))
                                    (rule "andLeft" (formula "3"))
                                    (rule "andLeft" (formula "12"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "7"))
                                    (rule "andLeft" (formula "6"))
                                    (rule "andLeft" (formula "12"))
                                    (rule "andLeft" (formula "17"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "9"))
                                    (rule "andLeft" (formula "7"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "andLeft" (formula "20"))
                                    (rule "andLeft" (formula "19"))
                                    (rule "andLeft" (formula "8"))
                                    (rule "andLeft" (formula "14"))
                                    (rule "andLeft" (formula "22"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "notLeft" (formula "24"))
                                    (rule "notLeft" (formula "23"))
                                    (rule "andRight" (formula "33") (userinteraction))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "33") (userinteraction))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "33") (userinteraction))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "33") (userinteraction))
                                             (branch "Case 1"
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (ifseqformula "13"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "1") (ifseqformula "20"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,1") (ifseqformula "13"))
                                                (rule "translateJavaAddInt" (formula "33") (term "1,0,0"))
                                                (rule "translateJavaAddInt" (formula "33") (term "0,1,0"))
                                                (rule "orRight" (formula "24"))
                                                (rule "eqSymm" (formula "17") (term "1,0"))
                                                (rule "eqSymm" (formula "22"))
                                                (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "27"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "28"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "replace_known_left" (formula "5") (term "1,1") (ifseqformula "16"))
                                                (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "7")))
                                                (rule "notLeft" (formula "5"))
                                                (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "15"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "26"))
                                                (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "24")) (ifInst ""  (formula "25")))
                                                (rule "polySimp_elimSub" (formula "12") (term "2,1,0,0,0"))
                                                (rule "mul_literals" (formula "12") (term "1,2,1,0,0,0"))
                                                (rule "polySimp_elimSub" (formula "24") (term "2,1,0,0,0"))
                                                (rule "mul_literals" (formula "24") (term "1,2,1,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "34") (term "1,0"))
                                                (rule "polySimp_addComm0" (formula "34") (term "0,1"))
                                                (rule "polySimp_addComm0" (formula "12") (term "2,1,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "24") (term "2,1,0,0,0"))
                                                (rule "inEqSimp_leqRight" (formula "31"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_leqRight" (formula "33"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_ltRight" (formula "31"))
                                                (rule "times_zero_1" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_ltRight" (formula "33"))
                                                (rule "mul_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "7"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "4"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                                (rule "dismissNonSelectedField" (formula "27") (term "0"))
                                                (rule "array_store_known_dynamic_array_type" (formula "6") (ifseqformula "8"))
                                                (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "29")))
                                                (rule "true_left" (formula "6"))
                                                (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "15"))
                                                (rule "inEqSimp_commuteLeq" (formula "15"))
                                                (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "31") (term "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "31") (term "0"))
                                                (rule "times_zero_2" (formula "31") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "31") (term "0,0"))
                                                (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "16"))
                                                (rule "applyEq" (formula "24") (term "1,2,1,0,0") (ifseqformula "15"))
                                                (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "15"))
                                                (rule "applyEq" (formula "12") (term "1,2,1,0,0,0") (ifseqformula "14"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                (rule "mul_literals" (formula "2") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                (rule "replace_known_left" (formula "29") (term "1") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "inEqSimp_geqRight" (formula "29"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "mul_literals" (formula "1") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
                                                (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                                (rule "add_literals" (formula "13") (term "0,0"))
                                                (rule "qeq_literals" (formula "13") (term "0"))
                                                (builtin "One Step Simplification" (formula "13"))
                                                (rule "true_left" (formula "13"))
                                                (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "4") (term "0"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "closeFalse" (formula "4"))
                                             )
                                             (branch "Case 2"
                                                (rule "allRight" (formula "33") (inst "sk=j_2") (userinteraction))
                                                (rule "impRight" (formula "33") (userinteraction))
                                                (rule "andLeft" (formula "1") (userinteraction))
                                                (rule "translateJavaAddInt" (formula "2") (term "1") (userinteraction))
                                                (rule "cut" (inst "cutFormula=j_2 = i_0") (userinteraction))
                                                (branch "CUT: j_2 = i_0 TRUE"
                                                   (rule "cut" (inst "cutFormula=  array2seq(heapAfter_concatenate, result_0)
= array2seq(store(heapAfter_concatenate,
                  x_arr_arr_2,
                  arr(i_0),
                  result_0),
            byte[]::select(store(heapAfter_concatenate,
                                 x_arr_arr_2,
                                 arr(i_0),
                                 result_0),
                           x_arr_arr_2,
                           arr(j_2)))") (userinteraction))
                                                   (branch "CUT: array2seq(heapAfter_concatenate, result_0) = array2seq(heapAfter_concatenate[x_arr_arr_2[i_0] := result_0], x_arr_arr_2[j_2]@heapAfter_concatenate[x_arr_arr_2[i_0] := result_0]) TRUE"
                                                      (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "1") (userinteraction))
                                                      (rule "applyEq" (formula "37") (term "0") (ifseqformula "26") (userinteraction))
                                                      (rule "cut" (inst "cutFormula=  array2seq(heapAfter_concatenate, electionID)
= array2seq(store(heapAfter_concatenate,
                  x_arr_arr_2,
                  arr(i_0),
                  result_0),
            electionID)") (userinteraction))
                                                      (branch "CUT: array2seq(heapAfter_concatenate, electionID) = array2seq(heapAfter_concatenate[x_arr_arr_2[i_0] := result_0], electionID) TRUE"
                                                         (rule "cut" (inst "cutFormula=  array2seq(heapAfter_concatenate,
            byte[]::select(anon_1, chosen, arr(i_0)))
= array2seq(store(heapAfter_concatenate,
                  x_arr_arr_2,
                  arr(i_0),
                  result_0),
            byte[]::select(store(heapAfter_concatenate,
                                 x_arr_arr_2,
                                 arr(i_0),
                                 result_0),
                           chosen,
                           arr(j_2)))") (userinteraction))
                                                         (branch "CUT: array2seq(heapAfter_concatenate, chosen[i_0]@anon_1) = array2seq(heapAfter_concatenate[x_arr_arr_2[i_0] := result_0], chosen[j_2]@heapAfter_concatenate[x_arr_arr_2[i_0] := result_0]) TRUE"
                                                            (rule "applyEqReverse" (formula "39") (term "1,1") (ifseqformula "1") (userinteraction))
                                                            (rule "applyEqReverse" (formula "39") (term "0,1") (ifseqformula "2") (userinteraction))
                                                            (builtin "One Step Simplification" (formula "39"))
                                                            (rule "closeTrue" (formula "39") (userinteraction))
                                                         )
                                                         (branch "CUT: array2seq(heapAfter_concatenate, chosen[i_0]@anon_1) = array2seq(heapAfter_concatenate[x_arr_arr_2[i_0] := result_0], chosen[j_2]@heapAfter_concatenate[x_arr_arr_2[i_0] := result_0]) FALSE"
                                                            (rule "equalityToSeqGetAndSeqLenRight" (formula "29") (inst "iv=iv") (userinteraction))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (ifseqformula "18"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "1") (ifseqformula "25"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,1") (ifseqformula "18"))
                                                            (rule "orRight" (formula "30"))
                                                            (rule "eqSymm" (formula "1"))
                                                            (rule "eqSymm" (formula "22") (term "1,0"))
                                                            (rule "eqSymm" (formula "29") (term "1,0,1"))
                                                            (rule "eqSymm" (formula "2"))
                                                            (rule "eqSymm" (formula "29") (term "0"))
                                                            (rule "eqSymm" (formula "40"))
                                                            (rule "eqSymm" (formula "27"))
                                                            (rule "replace_known_left" (formula "10") (term "1,1") (ifseqformula "21"))
                                                            (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "12")))
                                                            (rule "notLeft" (formula "10"))
                                                            (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "34"))
                                                            (builtin "One Step Simplification" (formula "13"))
                                                            (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "33"))
                                                            (builtin "One Step Simplification" (formula "12"))
                                                            (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "32"))
                                                            (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "30")) (ifInst ""  (formula "31")))
                                                            (rule "polySimp_elimSub" (formula "17") (term "2,1,0,0,0"))
                                                            (rule "mul_literals" (formula "17") (term "1,2,1,0,0,0"))
                                                            (rule "polySimp_elimSub" (formula "30") (term "2,1,0,0,0"))
                                                            (rule "mul_literals" (formula "30") (term "1,2,1,0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "5") (term "1"))
                                                            (rule "polySimp_addComm0" (formula "17") (term "2,1,0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "30") (term "2,1,0,0,0"))
                                                            (rule "inEqSimp_leqRight" (formula "39"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "inEqSimp_ltRight" (formula "36"))
                                                            (rule "times_zero_1" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_ltRight" (formula "39"))
                                                            (rule "mul_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_leqRight" (formula "38"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,1"))
                                                            (rule "inEqSimp_ltToLeq" (formula "12"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "9"))
                                                            (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                            (rule "dismissNonSelectedField" (formula "33") (term "0"))
                                                            (rule "array_store_known_dynamic_array_type" (formula "11") (ifseqformula "13"))
                                                            (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "35")))
                                                            (rule "true_left" (formula "11"))
                                                            (rule "inEqSimp_ltToLeq" (formula "8"))
                                                            (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                            (rule "add_literals" (formula "8") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "8") (term "0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "21"))
                                                            (rule "inEqSimp_commuteLeq" (formula "7"))
                                                            (rule "inEqSimp_commuteLeq" (formula "20"))
                                                            (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "6"))
                                                            (rule "applyEqRigid" (formula "7") (term "1,0") (ifseqformula "6"))
                                                            (rule "polySimp_pullOutFactor2" (formula "7") (term "0"))
                                                            (rule "add_literals" (formula "7") (term "1,0"))
                                                            (rule "times_zero_1" (formula "7") (term "0"))
                                                            (rule "leq_literals" (formula "7"))
                                                            (rule "true_left" (formula "7"))
                                                            (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "19"))
                                                            (rule "applyEq" (formula "28") (term "1,2,1,0,0") (ifseqformula "18"))
                                                            (rule "applyEqRigid" (formula "34") (term "0,2,1,1,0") (ifseqformula "6"))
                                                            (rule "applyEq" (formula "5") (term "0,2,1,0") (ifseqformula "6"))
                                                            (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "18"))
                                                            (rule "applyEqRigid" (formula "26") (term "0,2,1,0,0,0") (ifseqformula "5"))
                                                            (rule "applyEq" (formula "26") (term "0,2,1,0,0,1,0,1") (ifseqformula "5"))
                                                            (rule "applyEq" (formula "15") (term "1,2,1,0,0,0") (ifseqformula "17"))
                                                            (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "3"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                            (rule "mul_literals" (formula "2") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,1"))
                                                            (rule "mul_literals" (formula "26") (term "0,1,1,0,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,1"))
                                                            (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,1"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                            (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                                            (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "2"))
                                                            (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
                                                            (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "15") (term "0,0"))
                                                            (rule "qeq_literals" (formula "15") (term "0"))
                                                            (builtin "One Step Simplification" (formula "15"))
                                                            (rule "true_left" (formula "15"))
                                                            (rule "nonNull" (formula "12") (inst "i=i_1"))
                                                            (rule "greater_literals" (formula "12") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "29")))
                                                            (rule "sub_literals" (formula "12") (term "2,1,0"))
                                                            (builtin "One Step Simplification" (formula "12"))
                                                            (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "8") (ifseqformula "29"))
                                                            (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                                            (rule "array2seqDef" (formula "3") (term "0") (inst "u=u"))
                                                            (rule "array2seqDef" (formula "3") (term "1") (inst "u=u"))
                                                            (rule "array2seqDef" (formula "16") (term "0,0,1,0") (inst "u=u"))
                                                            (rule "array2seqDef" (formula "16") (term "1,0,1,0") (inst "u=u"))
                                                            (rule "array2seqDef" (formula "16") (term "1,1,0") (inst "u=u"))
                                                            (rule "eqSymm" (formula "16") (term "1,0"))
                                                            (rule "array2seqDef" (formula "24") (term "0,1,1,0,1") (inst "u=u"))
                                                            (rule "eqSymm" (formula "24") (term "1,0,1"))
                                                            (rule "getOfSeqDef" (formula "24") (term "0,1,0,1"))
                                                            (rule "castDel" (formula "24") (term "1,0,1,0,1"))
                                                            (rule "castDel" (formula "24") (term "2,0,1,0,1"))
                                                            (rule "add_zero_right" (formula "24") (term "0,2,1,0,1,0,1"))
                                                            (rule "polySimp_elimSub" (formula "24") (term "1,1,0,0,1,0,1"))
                                                            (rule "times_zero_2" (formula "24") (term "1,1,1,0,0,1,0,1"))
                                                            (rule "add_zero_right" (formula "24") (term "1,1,0,0,1,0,1"))
                                                            (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,0,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1,0,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0,1"))
                                                            (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,0,1"))
                                                            (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0,1"))
                                                            (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,0,1"))
                                                            (rule "array2seqDef" (formula "4") (term "1") (inst "u=u"))
                                                            (rule "eqSymm" (formula "4"))
                                                            (rule "array2seqDef" (formula "24") (term "0,1,0") (inst "u=u"))
                                                            (rule "eqSymm" (formula "24") (term "0"))
                                                            (rule "lenOfSeqDef" (formula "24") (term "0,0"))
                                                            (rule "polySimp_elimSub" (formula "24") (term "1,0,0"))
                                                            (rule "times_zero_2" (formula "24") (term "1,1,0,0"))
                                                            (rule "add_zero_right" (formula "24") (term "1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
                                                            (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "24") (term "0,0,0,0"))
                                                            (rule "array2seqDef" (formula "31") (term "1,1") (inst "u=u"))
                                                            (rule "eqSymm" (formula "31"))
                                                            (rule "array2seqDef" (formula "21") (term "0,0") (inst "u=u"))
                                                            (rule "array2seqDef" (formula "21") (term "1,0") (inst "u=u"))
                                                            (rule "array2seqDef" (formula "21") (term "1") (inst "u=u"))
                                                            (rule "array2seqDef" (formula "24") (term "0,1,1,1,0,0,1") (inst "u=u"))
                                                            (rule "lenOfSeqDef" (formula "24") (term "1,1,1,0,0,1"))
                                                            (rule "polySimp_elimSub" (formula "24") (term "1,1,1,1,0,0,1"))
                                                            (rule "times_zero_2" (formula "24") (term "1,1,1,1,1,0,0,1"))
                                                            (rule "add_zero_right" (formula "24") (term "1,1,1,1,0,0,1"))
                                                            (rule "inEqSimp_ltToLeq" (formula "24") (term "0,1,1,1,0,0,1"))
                                                            (rule "add_zero_right" (formula "24") (term "0,0,1,1,1,0,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,1,1,0,0,1"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,1,1,1,0,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "24") (term "0,0,1,1,1,0,0,1"))
                                                            (rule "polySimp_elimOne" (formula "24") (term "0,0,1,1,1,0,0,1"))
                                                            (rule "eqSeqDef" (formula "3") (inst "iv=iv"))
                                                            (rule "andLeft" (formula "3"))
                                                            (rule "lenOfSeqDef" (formula "3") (term "0"))
                                                            (rule "eqSymm" (formula "3"))
                                                            (rule "polySimp_elimSub" (formula "3") (term "1,1"))
                                                            (rule "mul_literals" (formula "3") (term "1,1,1"))
                                                            (rule "add_zero_right" (formula "3") (term "1,1"))
                                                            (rule "getOfSeqDef" (formula "4") (term "0,1,0"))
                                                            (rule "castDel" (formula "4") (term "2,0,1,0"))
                                                            (rule "castDel" (formula "4") (term "1,0,1,0"))
                                                            (rule "add_zero_right" (formula "4") (term "0,2,1,0,1,0"))
                                                            (rule "eqSymm" (formula "4") (term "1,0"))
                                                            (rule "polySimp_elimSub" (formula "4") (term "1,1,0,1,1,0"))
                                                            (rule "mul_literals" (formula "4") (term "1,1,1,0,1,1,0"))
                                                            (rule "add_zero_right" (formula "4") (term "1,1,0,1,1,0"))
                                                            (rule "lenOfSeqDef" (formula "4") (term "1,1,0,0"))
                                                            (rule "polySimp_elimSub" (formula "4") (term "1,1,1,0,0"))
                                                            (rule "mul_literals" (formula "4") (term "1,1,1,1,0,0"))
                                                            (rule "add_zero_right" (formula "4") (term "1,1,1,0,0"))
                                                            (rule "lenOfSeqDef" (formula "3") (term "0"))
                                                            (rule "polySimp_elimSub" (formula "3") (term "1,0"))
                                                            (rule "mul_literals" (formula "3") (term "1,1,0"))
                                                            (rule "add_zero_right" (formula "3") (term "1,0"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "getOfSeqDef" (formula "3") (term "0,1,0"))
                                                            (rule "castDel" (formula "3") (term "1,0,1,0"))
                                                            (rule "castDel" (formula "3") (term "2,0,1,0"))
                                                            (rule "add_zero_right" (formula "3") (term "0,2,1,0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "3") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_2" (formula "3") (term "1,1,1,0,0,1,0"))
                                                            (rule "add_zero_right" (formula "3") (term "1,1,0,0,1,0"))
                                                            (rule "eqSymm" (formula "3") (term "1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "3") (term "0,1,1,0,0"))
                                                            (rule "add_zero_right" (formula "3") (term "0,0,1,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,1,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0,1,0"))
                                                            (rule "eqSymm" (formula "3") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,1,1,0"))
                                                            (rule "eqSymm" (formula "3") (term "1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,1,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0,1,0"))
                                                            (rule "eqSymm" (formula "3") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "1,1,0,1,1,0"))
                                                            (rule "mul_literals" (formula "3") (term "0,1,1,0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,1,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,0,1,0,0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,1,0,0,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "3") (term "0,0,0,1,0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "3") (term "0,1,1,0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0,1,0"))
                                                            (rule "eqSymm" (formula "3") (term "1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "3") (term "0,1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0"))
                                                            (rule "array2seqDef" (formula "24") (term "0,1,1,0,1") (inst "u=u"))
                                                            (rule "eqSymm" (formula "24") (term "1,0,1"))
                                                            (rule "getOfSeqDef" (formula "24") (term "0,1,0,1"))
                                                            (rule "castDel" (formula "24") (term "1,0,1,0,1"))
                                                            (rule "castDel" (formula "24") (term "2,0,1,0,1"))
                                                            (rule "add_zero_right" (formula "24") (term "0,2,1,0,1,0,1"))
                                                            (rule "polySimp_elimSub" (formula "24") (term "1,1,0,0,1,0,1"))
                                                            (rule "times_zero_2" (formula "24") (term "1,1,1,0,0,1,0,1"))
                                                            (rule "add_zero_right" (formula "24") (term "1,1,0,0,1,0,1"))
                                                            (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,0,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1,0,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0,1"))
                                                            (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,0,1"))
                                                            (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0,1"))
                                                            (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,0,1"))
                                                            (rule "array2seqDef" (formula "4") (term "1") (inst "u=u"))
                                                            (rule "eqSymm" (formula "4"))
                                                            (rule "array2seqDef" (formula "24") (term "0,1,0") (inst "u=u"))
                                                            (rule "eqSymm" (formula "24") (term "0"))
                                                            (rule "lenOfSeqDef" (formula "24") (term "0,0"))
                                                            (rule "polySimp_elimSub" (formula "24") (term "1,0,0"))
                                                            (rule "times_zero_2" (formula "24") (term "1,1,0,0"))
                                                            (rule "add_zero_right" (formula "24") (term "1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
                                                            (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "24") (term "0,0,0,0"))
                                                            (rule "equalityToSeqGetAndSeqLenRight" (formula "31") (inst "iv=iv"))
                                                            (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "31") (term "0,1,0,0,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0,1"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "1,0,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0,0,1"))
                                                            (rule "polySimp_elimOne" (formula "31") (term "0,1,0,0,1"))
                                                            (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=java_lang_Object_created__49"))
                                                            (rule "simplifySelectOfMemset" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "simplifySelectOfStore" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "simplifySelectOfStore" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "simplifySelectOfStore" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "simplifySelectOfCreate" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                                            (rule "castDel" (formula "1") (term "1,0"))
                                                            (rule "eqSymm" (formula "1") (term "0,0"))
                                                            (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                                            (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "31"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "28")))
                                                            (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "eqSeqDef" (formula "21") (inst "iv=iv"))
                                                            (rule "andLeft" (formula "21"))
                                                            (rule "getOfSeqDef" (formula "22") (term "1,1,0"))
                                                            (rule "castDel" (formula "22") (term "2,1,1,0"))
                                                            (rule "castDel" (formula "22") (term "1,1,1,0"))
                                                            (rule "add_zero_right" (formula "22") (term "0,2,1,1,1,0"))
                                                            (rule "polySimp_elimSub" (formula "22") (term "1,1,0,1,1,0"))
                                                            (rule "times_zero_2" (formula "22") (term "1,1,1,0,1,1,0"))
                                                            (rule "add_zero_right" (formula "22") (term "1,1,0,1,1,0"))
                                                            (rule "lenOfSeqDef" (formula "21") (term "1"))
                                                            (rule "polySimp_elimSub" (formula "21") (term "1,1"))
                                                            (rule "times_zero_2" (formula "21") (term "1,1,1"))
                                                            (rule "add_zero_right" (formula "21") (term "1,1"))
                                                            (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "22") (term "0,1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1"))
                                                            (rule "add_zero_right" (formula "21") (term "0,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,1,1,0"))
                                                            (rule "apply_eq_monomials" (formula "22") (term "1,0,1,0,0") (ifseqformula "21"))
                                                            (rule "polySimp_rightDist" (formula "22") (term "0,1,0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0,1,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "22") (term "1,0,1,0,0"))
                                                            (rule "add_literals" (formula "22") (term "1,1,1,0,1,0,0"))
                                                            (rule "times_zero_1" (formula "22") (term "1,1,0,1,0,0"))
                                                            (rule "add_zero_right" (formula "22") (term "1,0,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "22") (term "0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "22") (term "1,1,0,1,1,0"))
                                                            (rule "mul_literals" (formula "22") (term "0,1,1,0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,1,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "21") (term "0,0,1"))
                                                            (rule "polySimp_elimOne" (formula "21") (term "0,0,1"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,1,0,0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,1,0,0,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "22") (term "0,0,0,1,0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                                                            (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                                                            (rule "eqSeqDef" (formula "4") (inst "iv=iv"))
                                                            (rule "andLeft" (formula "4"))
                                                            (rule "lenOfSeqDef" (formula "4") (term "1"))
                                                            (rule "polySimp_elimSub" (formula "4") (term "1,1"))
                                                            (rule "times_zero_2" (formula "4") (term "1,1,1"))
                                                            (rule "add_zero_right" (formula "4") (term "1,1"))
                                                            (rule "lenOfSeqDef" (formula "4") (term "0"))
                                                            (rule "polySimp_elimSub" (formula "4") (term "1,0"))
                                                            (rule "times_zero_2" (formula "4") (term "1,1,0"))
                                                            (rule "add_zero_right" (formula "4") (term "1,0"))
                                                            (rule "getOfSeqDef" (formula "5") (term "0,1,0"))
                                                            (rule "castDel" (formula "5") (term "1,0,1,0"))
                                                            (rule "castDel" (formula "5") (term "2,0,1,0"))
                                                            (rule "add_zero_right" (formula "5") (term "0,2,1,0,1,0"))
                                                            (rule "eqSymm" (formula "5") (term "1,0"))
                                                            (rule "polySimp_elimSub" (formula "5") (term "1,1,0,1,1,0"))
                                                            (rule "times_zero_2" (formula "5") (term "1,1,1,0,1,1,0"))
                                                            (rule "add_zero_right" (formula "5") (term "1,1,0,1,1,0"))
                                                            (rule "lenOfSeqDef" (formula "5") (term "1,1,0,0"))
                                                            (rule "polySimp_elimSub" (formula "5") (term "1,1,1,0,0"))
                                                            (rule "times_zero_2" (formula "5") (term "1,1,1,1,0,0"))
                                                            (rule "add_zero_right" (formula "5") (term "1,1,1,0,0"))
                                                            (rule "getOfSeqDef" (formula "5") (term "0,1,0"))
                                                            (rule "castDel" (formula "5") (term "1,0,1,0"))
                                                            (rule "castDel" (formula "5") (term "2,0,1,0"))
                                                            (rule "add_zero_right" (formula "5") (term "0,2,1,0,1,0"))
                                                            (rule "eqSymm" (formula "5") (term "1,0"))
                                                            (rule "polySimp_elimSub" (formula "5") (term "1,1,0,1,1,0"))
                                                            (rule "mul_literals" (formula "5") (term "1,1,1,0,1,1,0"))
                                                            (rule "add_zero_right" (formula "5") (term "1,1,0,1,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "4") (term "0,1"))
                                                            (rule "add_zero_right" (formula "4") (term "0,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1"))
                                                            (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0"))
                                                            (rule "add_zero_right" (formula "4") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "5") (term "0,1,1,0,0"))
                                                            (rule "add_zero_right" (formula "5") (term "0,0,1,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0,1,0"))
                                                            (rule "eqSymm" (formula "5") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,1,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0,1,0"))
                                                            (rule "eqSymm" (formula "5") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,1,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,1,1,0"))
                                                            (rule "apply_eq_monomials" (formula "5") (term "1,0,0,1,0,0") (ifseqformula "4"))
                                                            (rule "polySimp_rightDist" (formula "5") (term "0,1,0,0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,0,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "5") (term "1,0,1,0,0,1,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "5") (term "1,0,0,1,0,0"))
                                                            (rule "add_literals" (formula "5") (term "1,1,1,0,0,1,0,0"))
                                                            (rule "times_zero_1" (formula "5") (term "1,1,0,0,1,0,0"))
                                                            (rule "add_zero_right" (formula "5") (term "1,0,0,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "4") (term "0,0,1"))
                                                            (rule "polySimp_elimOne" (formula "4") (term "0,0,1"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "4") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0,1,0"))
                                                            (rule "eqSymm" (formula "5") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "1,1,0,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "5") (term "1,1,0,1,1,0"))
                                                            (rule "mul_literals" (formula "5") (term "0,1,1,0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,1,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "0,0,1,0,0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0,1,0,0,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "5") (term "0,0,0,1,0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0,1,0"))
                                                            (rule "eqSymm" (formula "5") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "1,1,0,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "5") (term "1,1,0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,1,1,0"))
                                                            (rule "mul_literals" (formula "5") (term "0,1,1,0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,1,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "5") (term "1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,0"))
                                                            (rule "mul_literals" (formula "5") (term "0,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,0"))
                                                            (rule "pullOutSelect" (formula "26") (term "0,1,1,1,1,0,0,1") (inst "selectSK=arr_178"))
                                                            (rule "applyEq" (formula "34") (term "0,1,1,0,0,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "27") (term "1,1,1,1,0,1") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "34") (term "0,1,1,0,0,1,0,1") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "34") (term "1,2,1,0,0,1,0,0,1") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "34") (term "1,2,1,0,0,1,0,1") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "27") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "27") (term "0,1,1,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "23") (term "0,1,1,0,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "27") (term "0,0,0,1,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "34") (term "0,1,1,0,0,1,0,0,1") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "34") (term "1,2,1,0,0,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "24") (term "0,1,1,0,0,1,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "27") (term "0,0,0,1,1,1,0,0,1") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "23") (term "1,2,1,0,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "24") (term "1,2,1,0,0,1,0") (ifseqformula "1"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                                                            (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                            (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                                            (rule "array2seqDef" (formula "34") (term "1,0,1,1,0,1") (inst "u=u"))
                                                            (rule "eqSymm" (formula "34") (term "1,0,1"))
                                                            (rule "array2seqDef" (formula "34") (term "0,0,0,0") (inst "u=u"))
                                                            (rule "array2seqDef" (formula "34") (term "1,0,1,0") (inst "u=u"))
                                                            (rule "eqSymm" (formula "34") (term "0"))
                                                            (rule "array2seqDef" (formula "34") (term "0,0,0,1,0,0,1") (inst "u=u"))
                                                            (rule "pullOutSelect" (formula "27") (term "1,1,0,1,0,1") (inst "selectSK=arr_179"))
                                                            (rule "applyEq" (formula "28") (term "0,1,1,1,0,0,1,0,1") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "28") (term "0,0,0,0,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "35") (term "0,1,1,0,0,1,0,1") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "35") (term "1,2,1,0,0,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "28") (term "0,1,0,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "35") (term "1,2,1,0,0,1,0,1") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "35") (term "0,1,1,0,0,0") (ifseqformula "1"))
                                                            (rule "simplifySelectOfStore" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "castDel" (formula "1") (term "1,0"))
                                                            (rule "pullOutSelect" (formula "6") (term "0,1,0") (inst "selectSK=arr_180"))
                                                            (rule "applyEq" (formula "8") (term "1,1,0,1,0") (ifseqformula "6"))
                                                            (rule "applyEq" (formula "7") (term "0,0,0,0") (ifseqformula "6"))
                                                            (rule "applyEq" (formula "8") (term "0,1,1,1,0,0,1,0") (ifseqformula "6"))
                                                            (rule "simplifySelectOfStore" (formula "6"))
                                                            (builtin "One Step Simplification" (formula "6"))
                                                            (rule "castDel" (formula "6") (term "0"))
                                                            (rule "applyEqReverse" (formula "8") (term "1,1,0,1,0") (ifseqformula "6"))
                                                            (rule "applyEqReverse" (formula "7") (term "0,0,0,0") (ifseqformula "6"))
                                                            (rule "applyEqReverse" (formula "8") (term "0,1,1,1,0,0,1,0") (ifseqformula "6"))
                                                            (rule "applyEqReverse" (formula "7") (term "0,1,0") (ifseqformula "6"))
                                                            (builtin "One Step Simplification" (formula "7"))
                                                            (rule "true_left" (formula "7"))
                                                            (rule "hideAuxiliaryEq" (formula "6"))
                                                            (rule "array2seqDef" (formula "34") (term "0,0,0,1,0,1") (inst "u=u"))
                                                            (rule "array2seqDef" (formula "34") (term "0,0,1,1,0,1") (inst "u=u"))
                                                            (rule "array2seqDef" (formula "34") (term "0,0,0,0") (inst "u=u"))
                                                            (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=arr_181"))
                                                            (rule "simplifySelectOfMemset" (formula "2"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "elementOfArrayRangeConcrete" (formula "2") (term "0,0"))
                                                            (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                                            (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                                            (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                                            (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "2") (term "1,0,0,0"))
                                                            (rule "replace_known_left" (formula "2") (term "1,0,0,0") (ifseqformula "9"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "2") (term "0,1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0"))
                                                            (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "5"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "pullOutSelect" (formula "3") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__50"))
                                                            (rule "simplifySelectOfMemset" (formula "3"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "simplifySelectOfStore" (formula "3"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "simplifySelectOfStore" (formula "3"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "simplifySelectOfStore" (formula "3"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "simplifySelectOfCreate" (formula "3"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "35")))
                                                            (rule "castDel" (formula "3") (term "1,0"))
                                                            (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "14"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "applyEqReverse" (formula "4") (term "0,0,1,0,0") (ifseqformula "3"))
                                                            (builtin "One Step Simplification" (formula "4"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_182"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                                                            (rule "replaceKnownSelect_taclet10001000000110001010_6" (formula "1") (term "2,0"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "18"))
                                                            (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,0"))
                                                            (rule "replaceKnownSelect_taclet10001000000110001010_11" (formula "1") (term "0,0,0,0,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet10001000000110001010_16" (formula "1") (term "0,0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=arr_183"))
                                                            (rule "simplifySelectOfCreate" (formula "2"))
                                                            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "35")))
                                                            (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                            (rule "hideAuxiliaryEq" (formula "2"))
                                                            (rule "nnf_imp2or" (formula "20") (term "0"))
                                                            (rule "nnf_imp2or" (formula "15") (term "0"))
                                                            (rule "nnf_imp2or" (formula "19") (term "0"))
                                                            (rule "nnf_imp2or" (formula "6") (term "0"))
                                                            (rule "nnf_imp2or" (formula "25") (term "0"))
                                                            (rule "nnf_imp2or" (formula "28") (term "0,1"))
                                                            (rule "nnf_imp2or" (formula "7") (term "0"))
                                                            (rule "nnf_imp2or" (formula "35") (term "0,1"))
                                                            (rule "nnf_notAnd" (formula "20") (term "0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                                                            (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                                                            (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                                                            (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
                                                            (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                                            (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                                            (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                                            (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                                                            (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                                                            (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                                            (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                                            (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                                            (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                                                            (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                                            (rule "nnf_notAnd" (formula "6") (term "0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "6") (term "0,0,0"))
                                                            (rule "times_zero_1" (formula "6") (term "1,0,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "6") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "6") (term "1,0,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "6") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0"))
                                                            (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0"))
                                                            (rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
                                                            (rule "add_zero_left" (formula "6") (term "0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0"))
                                                            (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                                                            (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "25") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                                            (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                                            (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                                            (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                                                            (rule "nnf_notAnd" (formula "7") (term "0,0"))
                                                            (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
                                                            (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
                                                            (rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
                                                            (rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
                                                            (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
                                                            (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "7") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "7") (term "1,0,0,0"))
                                                            (rule "nnf_notAnd" (formula "28") (term "0,0,1"))
                                                            (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,1"))
                                                            (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,1"))
                                                            (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,1"))
                                                            (rule "add_zero_left" (formula "28") (term "0,0,1,0,0,1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,1"))
                                                            (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,1"))
                                                            (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0,1"))
                                                            (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0,1"))
                                                            (rule "add_zero_right" (formula "28") (term "0,0,0,0,0,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,1"))
                                                            (rule "mul_literals" (formula "28") (term "1,0,0,0,1"))
                                                            (rule "nnf_notAnd" (formula "35") (term "0,0,1"))
                                                            (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0,1"))
                                                            (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0,1"))
                                                            (rule "add_zero_right" (formula "35") (term "0,0,0,0,0,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,1"))
                                                            (rule "mul_literals" (formula "35") (term "1,0,0,0,1"))
                                                            (rule "inEqSimp_notGeq" (formula "35") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0,1"))
                                                            (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0,1"))
                                                            (rule "add_literals" (formula "35") (term "0,0,0,1,0,0,1"))
                                                            (rule "add_zero_left" (formula "35") (term "0,0,1,0,0,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,1"))
                                                            (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,1"))
                                                            (rule "arrayLengthIsAShort" (formula "18") (term "0"))
                                                            (builtin "One Step Simplification" (formula "18"))
                                                            (rule "true_left" (formula "18"))
                                                            (rule "arrayLengthNotNegative" (formula "18") (term "1"))
                                                            (rule "arrayLengthIsAShort" (formula "18") (term "1"))
                                                            (builtin "One Step Simplification" (formula "18"))
                                                            (rule "true_left" (formula "18"))
                                                            (rule "arrayLengthNotNegative" (formula "18") (term "0"))
                                                            (rule "applyEq" (formula "18") (term "0") (ifseqformula "19"))
                                                            (rule "commute_or_2" (formula "20") (term "0"))
                                                            (rule "commute_or_2" (formula "15") (term "0"))
                                                            (rule "ifthenelse_split" (formula "24") (term "1"))
                                                            (branch "result_0.length ≥ 1 TRUE"
                                                               (rule "replace_known_left" (formula "26") (term "0,1,1,0,0") (ifseqformula "24"))
                                                               (builtin "One Step Simplification" (formula "26"))
                                                               (rule "replace_known_left" (formula "7") (term "0,1,1,0,0") (ifseqformula "24"))
                                                               (builtin "One Step Simplification" (formula "7"))
                                                               (rule "commute_or_2" (formula "19") (term "0"))
                                                               (rule "commute_or_2" (formula "6") (term "0"))
                                                               (rule "arrayLengthNotNegative" (formula "25") (term "1,0,0,0"))
                                                               (rule "arrayLengthIsAShort" (formula "26") (term "1,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "26"))
                                                               (rule "true_left" (formula "26"))
                                                               (rule "commute_or_2" (formula "27") (term "0"))
                                                               (rule "commute_or_2" (formula "7") (term "0"))
                                                               (rule "commute_or" (formula "20") (term "0,0"))
                                                               (rule "commute_or" (formula "15") (term "0,0"))
                                                               (rule "commute_or" (formula "19") (term "0,0"))
                                                               (rule "commute_or" (formula "6") (term "0,0"))
                                                               (rule "commute_or" (formula "27") (term "0,0"))
                                                               (rule "commute_or" (formula "7") (term "0,0"))
                                                               (rule "arrayLengthIsAShort" (formula "30") (term "1,1,0"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "true_left" (formula "1"))
                                                               (rule "arrayLengthNotNegative" (formula "30") (term "1,1,0"))
                                                               (rule "ifthenelse_split" (formula "3") (term "0"))
                                                               (branch "x_arr_arr_2 = chosen TRUE"
                                                                  (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                                  (rule "hideAuxiliaryEq" (formula "4"))
                                                                  (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "3"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "applyEqReverse" (formula "38") (term "1,2,1,0,1,0") (ifseqformula "4"))
                                                                  (rule "applyEqReverse" (formula "38") (term "0,1,1,0,1,0") (ifseqformula "4"))
                                                                  (rule "applyEqReverse" (formula "28") (term "1,2,1,0,0,0,0,0") (ifseqformula "4"))
                                                                  (rule "applyEqReverse" (formula "31") (term "0,0,0,1,1,0,0,1") (ifseqformula "4"))
                                                                  (rule "applyEqReverse" (formula "31") (term "0,1,1,1,0,0,1") (ifseqformula "4"))
                                                                  (rule "applyEqReverse" (formula "38") (term "1,2,1,0,0,1,0,0,1") (ifseqformula "4"))
                                                                  (rule "applyEqReverse" (formula "31") (term "0,0,0,1,0") (ifseqformula "4"))
                                                                  (rule "applyEqReverse" (formula "38") (term "0,1,1,0,0,1,0,0,1") (ifseqformula "4"))
                                                                  (rule "applyEqReverse" (formula "31") (term "0,1,1,0") (ifseqformula "4"))
                                                                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "4"))
                                                                  (rule "applyEqReverse" (formula "27") (term "1,2,1,0,0") (ifseqformula "4"))
                                                                  (rule "applyEqReverse" (formula "27") (term "0,1,1,0,0") (ifseqformula "4"))
                                                                  (rule "applyEqReverse" (formula "38") (term "0,1,1,0,1,1,0,1") (ifseqformula "4"))
                                                                  (rule "applyEqReverse" (formula "28") (term "0,1,1,0,0,0,0,0") (ifseqformula "4"))
                                                                  (rule "applyEqReverse" (formula "38") (term "1,2,1,0,1,1,0,1") (ifseqformula "4"))
                                                                  (rule "applyEqReverse" (formula "31") (term "1,1,1,1,0,1") (ifseqformula "4"))
                                                                  (rule "applyEqReverse" (formula "31") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "4"))
                                                                  (rule "applyEqReverse" (formula "1") (term "0,0") (ifseqformula "4"))
                                                                  (rule "hideAuxiliaryEq" (formula "4"))
                                                                  (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "3"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "applyEqReverse" (formula "30") (term "0,1,0,0") (ifseqformula "2"))
                                                                  (rule "applyEqReverse" (formula "37") (term "0,1,1,0,0,1,0,1") (ifseqformula "2"))
                                                                  (rule "applyEqReverse" (formula "30") (term "0,1,1,1,0,0,1,0,1") (ifseqformula "2"))
                                                                  (rule "applyEqReverse" (formula "37") (term "1,2,1,0,0,1,0,1") (ifseqformula "2"))
                                                                  (rule "applyEqReverse" (formula "37") (term "1,2,1,0,0,0") (ifseqformula "2"))
                                                                  (rule "applyEqReverse" (formula "30") (term "0,0,0,0,0") (ifseqformula "2"))
                                                                  (rule "applyEqReverse" (formula "30") (term "1,1,0,1,0,1") (ifseqformula "2"))
                                                                  (rule "applyEqReverse" (formula "37") (term "0,1,1,0,0,0") (ifseqformula "2"))
                                                                  (rule "hideAuxiliaryEq" (formula "2"))
                                                                  (rule "eqSymm" (formula "29") (term "0"))
                                                                  (rule "eqSymm" (formula "29") (term "1,0,1"))
                                                                  (rule "replace_known_left" (formula "29") (term "0,1,0") (ifseqformula "23"))
                                                                  (builtin "One Step Simplification" (formula "29"))
                                                                  (rule "applyEq" (formula "29") (term "1,0,1,1,1,0,1") (ifseqformula "2"))
                                                                  (rule "applyEq" (formula "16") (term "1,0,0,0,0,0,0,0") (ifseqformula "2"))
                                                                  (rule "applyEq" (formula "16") (term "1,0,0,0,0,0,0") (ifseqformula "2"))
                                                                  (rule "applyEq" (formula "18") (term "1,0,1,0,0,0,0") (ifseqformula "2"))
                                                                  (rule "applyEq" (formula "18") (term "1,1,2,0,0,0,0") (ifseqformula "2"))
                                                                  (rule "eqSymm" (formula "18") (term "0,0,0"))
                                                                  (rule "applyEq" (formula "36") (term "1,0,2,1,0,0,0") (ifseqformula "2"))
                                                                  (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "2"))
                                                                  (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "true_left" (formula "17"))
                                                                  (rule "applyEq" (formula "34") (term "0") (ifseqformula "2"))
                                                                  (rule "applyEq" (formula "16") (term "1,0,0,0,0") (ifseqformula "2"))
                                                                  (rule "applyEq" (formula "16") (term "0,1,0") (ifseqformula "2"))
                                                                  (rule "applyEq" (formula "16") (term "1,0,0") (ifseqformula "2"))
                                                                  (rule "applyEq" (formula "34") (term "1,0,2,1,0,0,1,0,1") (ifseqformula "2"))
                                                                  (rule "applyEq" (formula "16") (term "0,1,0,0,0") (ifseqformula "2"))
                                                                  (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "2"))
                                                                  (rule "applyEq" (formula "6") (term "1,0,1,0,0,0,0") (ifseqformula "2"))
                                                                  (rule "applyEq" (formula "5") (term "1,0,1,0,0,0,0") (ifseqformula "2"))
                                                                  (rule "applyEq" (formula "18") (term "1,0,0,0,0,0") (ifseqformula "2"))
                                                                  (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "2"))
                                                                  (rule "close" (formula "27") (ifseqformula "12"))
                                                               )
                                                               (branch "x_arr_arr_2 = chosen FALSE"
                                                                  (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                                  (rule "hideAuxiliaryEq" (formula "3"))
                                                                  (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "29"))
                                                                  (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "applyEqReverse" (formula "31") (term "0,0,0,1,1,0,0,1") (ifseqformula "3"))
                                                                  (rule "applyEqReverse" (formula "38") (term "0,1,1,0,0,1,0,0,1") (ifseqformula "3"))
                                                                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "3"))
                                                                  (rule "applyEqReverse" (formula "31") (term "0,1,1,0") (ifseqformula "3"))
                                                                  (rule "applyEqReverse" (formula "38") (term "1,2,1,0,0,1,0,0,1") (ifseqformula "3"))
                                                                  (rule "applyEqReverse" (formula "31") (term "0,0,0,1,0") (ifseqformula "3"))
                                                                  (rule "applyEqReverse" (formula "31") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "3"))
                                                                  (rule "applyEqReverse" (formula "1") (term "0,0") (ifseqformula "3"))
                                                                  (rule "applyEqReverse" (formula "38") (term "0,1,1,0,1,0") (ifseqformula "3"))
                                                                  (rule "applyEqReverse" (formula "38") (term "1,2,1,0,1,1,0,1") (ifseqformula "3"))
                                                                  (rule "applyEqReverse" (formula "38") (term "0,1,1,0,1,1,0,1") (ifseqformula "3"))
                                                                  (rule "applyEqReverse" (formula "38") (term "1,2,1,0,1,0") (ifseqformula "3"))
                                                                  (rule "applyEqReverse" (formula "27") (term "1,2,1,0,0,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEqReverse" (formula "26") (term "0,1,1,0,0") (ifseqformula "3"))
                                                                  (rule "applyEqReverse" (formula "27") (term "0,1,1,0,0,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEqReverse" (formula "26") (term "1,2,1,0,0") (ifseqformula "3"))
                                                                  (rule "applyEqReverse" (formula "31") (term "0,1,1,1,0,0,1") (ifseqformula "3"))
                                                                  (rule "applyEqReverse" (formula "31") (term "1,1,1,1,0,1") (ifseqformula "3"))
                                                                  (rule "hideAuxiliaryEq" (formula "3"))
                                                                  (rule "eqSymm" (formula "30") (term "0"))
                                                                  (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "28"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "applyEqReverse" (formula "30") (term "0,1,1,0") (ifseqformula "2"))
                                                                  (rule "applyEqReverse" (formula "30") (term "0,0,0,1,0") (ifseqformula "2"))
                                                                  (builtin "One Step Simplification" (formula "30"))
                                                                  (rule "allRight" (formula "30") (inst "sk=iv_15"))
                                                                  (rule "orRight" (formula "30"))
                                                                  (rule "orRight" (formula "30"))
                                                                  (rule "applyEqReverse" (formula "39") (term "1,2,1,0,0,1,0,1") (ifseqformula "2"))
                                                                  (rule "applyEqReverse" (formula "39") (term "1,2,1,0,0,0") (ifseqformula "2"))
                                                                  (rule "applyEqReverse" (formula "39") (term "0,1,1,0,0,1,0,1") (ifseqformula "2"))
                                                                  (rule "applyEqReverse" (formula "39") (term "0,1,1,0,0,0") (ifseqformula "2"))
                                                                  (rule "applyEqReverse" (formula "32") (term "0,1,1,1,0,0") (ifseqformula "2"))
                                                                  (rule "applyEqReverse" (formula "32") (term "1,1,0") (ifseqformula "2"))
                                                                  (rule "hideAuxiliaryEq" (formula "2"))
                                                                  (rule "inEqSimp_leqRight" (formula "29"))
                                                                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "1") (term "0"))
                                                                  (rule "replace_known_left" (formula "31") (term "0,0,1") (ifseqformula "1"))
                                                                  (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "1")))
                                                                  (rule "inEqSimp_geqRight" (formula "30"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "31") (term "0,0"))
                                                                  (rule "eqSymm" (formula "31"))
                                                                  (rule "polySimp_addComm1" (formula "31") (term "0,0,1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "31") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                                                                  (rule "eqSymm" (formula "31"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "31") (term "1,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "31") (term "1,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,1"))
                                                                  (rule "mul_literals" (formula "31") (term "0,1,0,1"))
                                                                  (rule "polySimp_elimOne" (formula "31") (term "1,1,0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "31") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                                                                  (rule "pullOutSelect" (formula "31") (term "1,1") (inst "selectSK=arr_186"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "18"))
                                                                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0,0"))
                                                                  (rule "pullOutSelect" (formula "32") (term "1,0") (inst "selectSK=arr_187"))
                                                                  (rule "simplifySelectOfStore" (formula "1"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "replaceKnownSelect_taclet1010001000000110001010_24" (formula "1") (term "2,0"))
                                                                  (rule "castDel" (formula "1") (term "1,0"))
                                                                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                                  (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                                                  (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "39"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "1"))
                                                                  (builtin "One Step Simplification" (formula "33"))
                                                                  (rule "closeTrue" (formula "33"))
                                                               )
                                                            )
                                                            (branch "result_0.length ≥ 1 FALSE"
                                                               (rule "replace_known_right" (formula "7") (term "0,1,1,0,0") (ifseqformula "27"))
                                                               (builtin "One Step Simplification" (formula "7"))
                                                               (rule "replace_known_right" (formula "25") (term "0,1,1,0,0") (ifseqformula "27"))
                                                               (builtin "One Step Simplification" (formula "25"))
                                                               (rule "inEqSimp_geqRight" (formula "27"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_or_tautInEq0" (formula "8") (term "0,0"))
                                                               (rule "add_zero_right" (formula "8") (term "1,1,0,0"))
                                                               (rule "qeq_literals" (formula "8") (term "1,0,0"))
                                                               (builtin "One Step Simplification" (formula "8"))
                                                               (rule "true_left" (formula "8"))
                                                               (rule "inEqSimp_or_tautInEq0" (formula "25") (term "0,0"))
                                                               (rule "add_zero_right" (formula "25") (term "1,1,0,0"))
                                                               (rule "qeq_literals" (formula "25") (term "1,0,0"))
                                                               (builtin "One Step Simplification" (formula "25"))
                                                               (rule "true_left" (formula "25"))
                                                               (rule "commute_or_2" (formula "19") (term "0"))
                                                               (rule "commute_or_2" (formula "7") (term "0"))
                                                               (rule "arrayLengthIsAShort" (formula "24") (term "1,0,0,0"))
                                                               (builtin "One Step Simplification" (formula "24"))
                                                               (rule "true_left" (formula "24"))
                                                               (rule "arrayLengthNotNegative" (formula "24") (term "1,0,0,0"))
                                                               (rule "commute_or" (formula "20") (term "0,0"))
                                                               (rule "commute_or" (formula "15") (term "0,0"))
                                                               (rule "commute_or" (formula "19") (term "0,0"))
                                                               (rule "commute_or" (formula "7") (term "0,0"))
                                                               (rule "arrayLengthIsAShort" (formula "28") (term "1,1,0"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "true_left" (formula "1"))
                                                               (rule "arrayLengthNotNegative" (formula "28") (term "1,1,0"))
                                                               (rule "ifthenelse_split" (formula "4") (term "0"))
                                                               (branch "x_arr_arr_2 = chosen TRUE"
                                                                  (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                                  (rule "hideAuxiliaryEq" (formula "5"))
                                                                  (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "4"))
                                                                  (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "applyEqReverse" (formula "36") (term "1,2,1,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEqReverse" (formula "29") (term "0,1,1,1,0,0,1,0,1") (ifseqformula "3"))
                                                                  (rule "applyEqReverse" (formula "36") (term "1,2,1,0,0,1,0,1") (ifseqformula "3"))
                                                                  (rule "applyEqReverse" (formula "29") (term "1,1,0,1,0,1") (ifseqformula "3"))
                                                                  (rule "applyEqReverse" (formula "36") (term "0,1,1,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEqReverse" (formula "29") (term "0,1,0,0") (ifseqformula "3"))
                                                                  (rule "applyEqReverse" (formula "29") (term "0,0,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEqReverse" (formula "36") (term "0,1,1,0,0,1,0,1") (ifseqformula "3"))
                                                                  (rule "hideAuxiliaryEq" (formula "3"))
                                                                  (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "3"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "applyEqReverse" (formula "35") (term "0,1,1,0,1,0") (ifseqformula "4"))
                                                                  (rule "applyEqReverse" (formula "35") (term "0,1,1,0,1,1,0,1") (ifseqformula "4"))
                                                                  (rule "applyEqReverse" (formula "35") (term "1,2,1,0,1,0") (ifseqformula "4"))
                                                                  (rule "applyEqReverse" (formula "28") (term "0,0,0,1,0") (ifseqformula "4"))
                                                                  (rule "applyEqReverse" (formula "25") (term "1,2,1,0,0") (ifseqformula "4"))
                                                                  (rule "applyEqReverse" (formula "35") (term "1,2,1,0,0,1,0,0,1") (ifseqformula "4"))
                                                                  (rule "applyEqReverse" (formula "28") (term "0,0,0,1,1,0,0,1") (ifseqformula "4"))
                                                                  (rule "applyEqReverse" (formula "28") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "4"))
                                                                  (rule "applyEqReverse" (formula "1") (term "0,0") (ifseqformula "4"))
                                                                  (rule "applyEqReverse" (formula "35") (term "0,1,1,0,0,1,0,0,1") (ifseqformula "4"))
                                                                  (rule "applyEqReverse" (formula "28") (term "0,1,1,1,0,0,1") (ifseqformula "4"))
                                                                  (rule "applyEqReverse" (formula "28") (term "0,1,1,0") (ifseqformula "4"))
                                                                  (rule "applyEqReverse" (formula "35") (term "1,2,1,0,1,1,0,1") (ifseqformula "4"))
                                                                  (rule "applyEqReverse" (formula "25") (term "0,1,1,0,0") (ifseqformula "4"))
                                                                  (rule "applyEqReverse" (formula "28") (term "1,1,1,1,0,1") (ifseqformula "4"))
                                                                  (rule "hideAuxiliaryEq" (formula "4"))
                                                                  (rule "eqSymm" (formula "27") (term "0"))
                                                                  (rule "eqSymm" (formula "27") (term "1,0,1"))
                                                                  (rule "applyEq" (formula "27") (term "1,0,1,1,1,0,1") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "3"))
                                                                  (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "true_left" (formula "17"))
                                                                  (rule "applyEq" (formula "33") (term "1,0,2,1,0,0,1,0,1") (ifseqformula "3"))
                                                                  (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "3"))
                                                                  (rule "close" (formula "25") (ifseqformula "12"))
                                                               )
                                                               (branch "x_arr_arr_2 = chosen FALSE"
                                                                  (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                                  (rule "hideAuxiliaryEq" (formula "4"))
                                                                  (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "27"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "applyEqReverse" (formula "1") (term "0,0") (ifseqformula "4"))
                                                                  (rule "applyEqReverse" (formula "36") (term "1,2,1,0,1,1,0,1") (ifseqformula "4"))
                                                                  (rule "applyEqReverse" (formula "36") (term "1,2,1,0,1,0") (ifseqformula "4"))
                                                                  (rule "applyEqReverse" (formula "29") (term "0,1,1,0") (ifseqformula "4"))
                                                                  (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "4"))
                                                                  (rule "applyEqReverse" (formula "36") (term "0,1,1,0,1,1,0,1") (ifseqformula "4"))
                                                                  (rule "applyEqReverse" (formula "29") (term "1,1,1,1,0,1") (ifseqformula "4"))
                                                                  (rule "applyEqReverse" (formula "29") (term "0,0,0,1,1,0,0,1") (ifseqformula "4"))
                                                                  (rule "applyEqReverse" (formula "29") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "4"))
                                                                  (rule "applyEqReverse" (formula "29") (term "0,0,0,1,0") (ifseqformula "4"))
                                                                  (rule "applyEqReverse" (formula "36") (term "0,1,1,0,0,1,0,0,1") (ifseqformula "4"))
                                                                  (rule "applyEqReverse" (formula "25") (term "1,2,1,0,0") (ifseqformula "4"))
                                                                  (rule "applyEqReverse" (formula "29") (term "0,1,1,1,0,0,1") (ifseqformula "4"))
                                                                  (rule "applyEqReverse" (formula "25") (term "0,1,1,0,0") (ifseqformula "4"))
                                                                  (rule "applyEqReverse" (formula "36") (term "1,2,1,0,0,1,0,0,1") (ifseqformula "4"))
                                                                  (rule "applyEqReverse" (formula "36") (term "0,1,1,0,1,0") (ifseqformula "4"))
                                                                  (rule "hideAuxiliaryEq" (formula "4"))
                                                                  (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "26"))
                                                                  (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "applyEqReverse" (formula "28") (term "0,1,1,1,0,0,1,0,1") (ifseqformula "3"))
                                                                  (rule "applyEqReverse" (formula "35") (term "0,1,1,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEqReverse" (formula "28") (term "1,1,0,1,0,1") (ifseqformula "3"))
                                                                  (rule "applyEqReverse" (formula "35") (term "1,2,1,0,0,1,0,1") (ifseqformula "3"))
                                                                  (rule "applyEqReverse" (formula "28") (term "0,0,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEqReverse" (formula "28") (term "0,1,0,0") (ifseqformula "3"))
                                                                  (builtin "One Step Simplification" (formula "28"))
                                                                  (rule "allRight" (formula "28") (inst "sk=iv_14"))
                                                                  (rule "orRight" (formula "28"))
                                                                  (rule "orRight" (formula "28"))
                                                                  (rule "applyEqReverse" (formula "37") (term "1,2,1,0,0,0") (ifseqformula "3"))
                                                                  (rule "applyEqReverse" (formula "37") (term "0,1,1,0,0,1,0,1") (ifseqformula "3"))
                                                                  (rule "hideAuxiliaryEq" (formula "3"))
                                                                  (rule "inEqSimp_leqRight" (formula "27"))
                                                                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "1") (term "0"))
                                                                  (rule "replace_known_left" (formula "29") (term "0,0,1") (ifseqformula "1"))
                                                                  (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "1")))
                                                                  (rule "inEqSimp_geqRight" (formula "28"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "29") (term "0,1"))
                                                                  (rule "polySimp_addComm1" (formula "29") (term "0,0,1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "29") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "29") (term "1,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "29") (term "1,0,1"))
                                                                  (rule "mul_literals" (formula "29") (term "0,1,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,1"))
                                                                  (rule "polySimp_elimOne" (formula "29") (term "1,1,0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "29") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                                                                  (rule "pullOutSelect" (formula "29") (term "1,1") (inst "selectSK=arr_184"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "18"))
                                                                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0,0"))
                                                                  (rule "pullOutSelect" (formula "30") (term "1,0") (inst "selectSK=arr_185"))
                                                                  (rule "simplifySelectOfStore" (formula "1"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "replaceKnownSelect_taclet1110001000000110001010_24" (formula "1") (term "2,0"))
                                                                  (rule "castDel" (formula "1") (term "1,0"))
                                                                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                                  (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                                                  (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "37"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "applyEqReverse" (formula "31") (term "1,0") (ifseqformula "1"))
                                                                  (builtin "One Step Simplification" (formula "31"))
                                                                  (rule "closeTrue" (formula "31"))
                                                               )
                                                            )
                                                         )
                                                      )
                                                      (branch "CUT: array2seq(heapAfter_concatenate, electionID) = array2seq(heapAfter_concatenate[x_arr_arr_2[i_0] := result_0], electionID) FALSE"
                                                         (rule "equalityToSeqGetAndSeqLenRight" (formula "28") (inst "iv=iv") (userinteraction))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (ifseqformula "17"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "1") (ifseqformula "24"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,1") (ifseqformula "17"))
                                                         (rule "orRight" (formula "29"))
                                                         (rule "eqSymm" (formula "28") (term "0"))
                                                         (rule "eqSymm" (formula "26"))
                                                         (rule "eqSymm" (formula "1"))
                                                         (rule "eqSymm" (formula "39"))
                                                         (rule "eqSymm" (formula "28") (term "1,0,1"))
                                                         (rule "eqSymm" (formula "21") (term "1,0"))
                                                         (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "32"))
                                                         (builtin "One Step Simplification" (formula "12"))
                                                         (rule "replace_known_left" (formula "9") (term "0") (ifseqformula "11"))
                                                         (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "20")))
                                                         (rule "notLeft" (formula "9"))
                                                         (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "33"))
                                                         (builtin "One Step Simplification" (formula "12"))
                                                         (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "31"))
                                                         (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "29")) (ifInst ""  (formula "30")))
                                                         (rule "polySimp_elimSub" (formula "16") (term "2,1,0,0,0"))
                                                         (rule "mul_literals" (formula "16") (term "1,2,1,0,0,0"))
                                                         (rule "polySimp_elimSub" (formula "29") (term "2,1,0,0,0"))
                                                         (rule "mul_literals" (formula "29") (term "1,2,1,0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "4") (term "1"))
                                                         (rule "polySimp_addComm0" (formula "16") (term "2,1,0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "29") (term "2,1,0,0,0"))
                                                         (rule "inEqSimp_ltRight" (formula "37"))
                                                         (rule "times_zero_1" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_ltRight" (formula "34"))
                                                         (rule "times_zero_1" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_leqRight" (formula "36"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_leqRight" (formula "37"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "8"))
                                                         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "11"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1"))
                                                         (rule "dismissNonSelectedField" (formula "32") (term "0"))
                                                         (rule "array_store_known_dynamic_array_type" (formula "10") (ifseqformula "12"))
                                                         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "34")))
                                                         (rule "true_left" (formula "10"))
                                                         (rule "inEqSimp_ltToLeq" (formula "7"))
                                                         (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                         (rule "add_literals" (formula "7") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "7") (term "0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "20"))
                                                         (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "19"))
                                                         (rule "inEqSimp_commuteLeq" (formula "6"))
                                                         (rule "applyEqRigid" (formula "7") (term "1,0") (ifseqformula "5"))
                                                         (rule "polySimp_pullOutFactor2" (formula "7") (term "0"))
                                                         (rule "add_literals" (formula "7") (term "1,0"))
                                                         (rule "times_zero_1" (formula "7") (term "0"))
                                                         (rule "leq_literals" (formula "7"))
                                                         (rule "true_left" (formula "7"))
                                                         (rule "applyEq" (formula "29") (term "1,2,1,0,0") (ifseqformula "19"))
                                                         (rule "applyEq" (formula "17") (term "1,2,1,0,0,0") (ifseqformula "19"))
                                                         (rule "applyEq" (formula "6") (term "0") (ifseqformula "5"))
                                                         (rule "applyEqRigid" (formula "4") (term "0,2,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "34") (term "0,2,1,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "6") (term "0,1,0") (ifseqformula "18"))
                                                         (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "17"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                         (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                                         (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1"))
                                                         (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1"))
                                                         (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1"))
                                                         (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                                         (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "14") (term "0,0"))
                                                         (rule "qeq_literals" (formula "14") (term "0"))
                                                         (builtin "One Step Simplification" (formula "14"))
                                                         (rule "true_left" (formula "14"))
                                                         (rule "nonNull" (formula "11") (inst "i=i_1"))
                                                         (rule "greater_literals" (formula "11") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "28")))
                                                         (rule "sub_literals" (formula "11") (term "2,1,0"))
                                                         (builtin "One Step Simplification" (formula "11"))
                                                         (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "7") (ifseqformula "28"))
                                                         (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                                         (rule "array2seqDef" (formula "23") (term "0,1,0") (inst "u=u"))
                                                         (rule "eqSymm" (formula "23") (term "0"))
                                                         (rule "lenOfSeqDef" (formula "23") (term "0,0"))
                                                         (rule "polySimp_elimSub" (formula "23") (term "1,0,0"))
                                                         (rule "times_zero_2" (formula "23") (term "1,1,0,0"))
                                                         (rule "add_zero_right" (formula "23") (term "1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                                                         (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "23") (term "0,0,0,0"))
                                                         (rule "array2seqDef" (formula "20") (term "0,0") (inst "u=u"))
                                                         (rule "array2seqDef" (formula "20") (term "1,0") (inst "u=u"))
                                                         (rule "array2seqDef" (formula "20") (term "1") (inst "u=u"))
                                                         (rule "array2seqDef" (formula "3") (term "1") (inst "u=u"))
                                                         (rule "eqSymm" (formula "3"))
                                                         (rule "array2seqDef" (formula "30") (term "1,1") (inst "u=u"))
                                                         (rule "eqSymm" (formula "30"))
                                                         (rule "array2seqDef" (formula "23") (term "0,1,1,0,1") (inst "u=u"))
                                                         (rule "eqSymm" (formula "23") (term "1,0,1"))
                                                         (rule "getOfSeqDef" (formula "23") (term "0,1,0,1"))
                                                         (rule "castDel" (formula "23") (term "1,0,1,0,1"))
                                                         (rule "castDel" (formula "23") (term "2,0,1,0,1"))
                                                         (rule "add_zero_right" (formula "23") (term "0,2,1,0,1,0,1"))
                                                         (rule "polySimp_elimSub" (formula "23") (term "1,1,0,0,1,0,1"))
                                                         (rule "times_zero_2" (formula "23") (term "1,1,1,0,0,1,0,1"))
                                                         (rule "add_zero_right" (formula "23") (term "1,1,0,0,1,0,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,1,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,1,0,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,1,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,1,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,1,0,1"))
                                                         (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,1,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,1,0,1"))
                                                         (rule "mul_literals" (formula "23") (term "0,1,1,0,0,1,0,1"))
                                                         (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,1,0,1"))
                                                         (rule "array2seqDef" (formula "15") (term "0,0,1,0") (inst "u=u"))
                                                         (rule "array2seqDef" (formula "15") (term "1,0,1,0") (inst "u=u"))
                                                         (rule "array2seqDef" (formula "15") (term "1,1,0") (inst "u=u"))
                                                         (rule "eqSymm" (formula "15") (term "1,0"))
                                                         (rule "array2seqDef" (formula "23") (term "0,1,1,1,0,0,1") (inst "u=u"))
                                                         (rule "lenOfSeqDef" (formula "23") (term "1,1,1,0,0,1"))
                                                         (rule "polySimp_elimSub" (formula "23") (term "1,1,1,1,0,0,1"))
                                                         (rule "times_zero_2" (formula "23") (term "1,1,1,1,1,0,0,1"))
                                                         (rule "add_zero_right" (formula "23") (term "1,1,1,1,0,0,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,1,1,0,0,1"))
                                                         (rule "add_zero_right" (formula "23") (term "0,0,1,1,1,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,1,1,0,0,1"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,1,1,1,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "23") (term "0,0,1,1,1,0,0,1"))
                                                         (rule "polySimp_elimOne" (formula "23") (term "0,0,1,1,1,0,0,1"))
                                                         (rule "array2seqDef" (formula "23") (term "0,1,0") (inst "u=u"))
                                                         (rule "eqSymm" (formula "23") (term "0"))
                                                         (rule "lenOfSeqDef" (formula "23") (term "0,0"))
                                                         (rule "polySimp_elimSub" (formula "23") (term "1,0,0"))
                                                         (rule "times_zero_2" (formula "23") (term "1,1,0,0"))
                                                         (rule "add_zero_right" (formula "23") (term "1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                                                         (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "23") (term "0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "23"))
                                                         (rule "allRight" (formula "23") (inst "sk=iv_13"))
                                                         (rule "impRight" (formula "23"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "replace_known_left" (formula "25") (term "0,0,0") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "25"))
                                                         (rule "inEqSimp_homoInEq0" (formula "2"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "25") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "25") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                         (rule "mul_literals" (formula "2") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                                                         (rule "eqSeqDef" (formula "22") (inst "iv=iv"))
                                                         (rule "andLeft" (formula "22"))
                                                         (rule "lenOfSeqDef" (formula "22") (term "1"))
                                                         (rule "polySimp_elimSub" (formula "22") (term "1,1"))
                                                         (rule "times_zero_2" (formula "22") (term "1,1,1"))
                                                         (rule "add_zero_right" (formula "22") (term "1,1"))
                                                         (rule "getOfSeqDef" (formula "23") (term "1,1,0"))
                                                         (rule "castDel" (formula "23") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "23") (term "2,1,1,0"))
                                                         (rule "add_zero_right" (formula "23") (term "0,2,1,1,1,0"))
                                                         (rule "polySimp_elimSub" (formula "23") (term "1,1,0,1,1,0"))
                                                         (rule "times_zero_2" (formula "23") (term "1,1,1,0,1,1,0"))
                                                         (rule "add_zero_right" (formula "23") (term "1,1,0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "23") (term "0,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1"))
                                                         (rule "add_zero_right" (formula "22") (term "0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,1,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,1,1,0"))
                                                         (rule "apply_eq_monomials" (formula "23") (term "1,0,1,0,0") (ifseqformula "22"))
                                                         (rule "polySimp_rightDist" (formula "23") (term "0,1,0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "23") (term "1,0,1,0,1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "23") (term "1,0,1,0,0"))
                                                         (rule "add_literals" (formula "23") (term "1,1,1,0,1,0,0"))
                                                         (rule "times_zero_1" (formula "23") (term "1,1,0,1,0,0"))
                                                         (rule "add_zero_right" (formula "23") (term "1,0,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "23") (term "0,1,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "22") (term "0,0,1"))
                                                         (rule "polySimp_elimOne" (formula "22") (term "0,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "23") (term "1,1,0,1,1,0"))
                                                         (rule "mul_literals" (formula "23") (term "0,1,1,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,1,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0,1,0,0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,1,0,0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "23") (term "0,0,0,1,0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                                                         (rule "array2seqDef" (formula "5") (term "1") (inst "u=u"))
                                                         (rule "eqSymm" (formula "5"))
                                                         (rule "equalityToSeqGetAndSeqLenRight" (formula "33") (inst "iv=iv"))
                                                         (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "33") (term "0,1,0,0,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,1"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "1,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0,0,1"))
                                                         (rule "polySimp_elimOne" (formula "33") (term "0,1,0,0,1"))
                                                         (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=java_lang_Object_created__48"))
                                                         (rule "simplifySelectOfMemset" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "simplifySelectOfStore" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "simplifySelectOfStore" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "simplifySelectOfStore" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "simplifySelectOfCreate" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                                                         (rule "castDel" (formula "1") (term "1,0"))
                                                         (rule "eqSymm" (formula "1") (term "0,0"))
                                                         (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                                         (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "30"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                                                         (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "array2seqDef" (formula "26") (term "0,1") (inst "u=u"))
                                                         (rule "eqSymm" (formula "26"))
                                                         (rule "getOfSeqDef" (formula "26") (term "0"))
                                                         (rule "castDel" (formula "26") (term "2,0"))
                                                         (rule "castDel" (formula "26") (term "1,0"))
                                                         (rule "add_zero_right" (formula "26") (term "0,2,1,0"))
                                                         (rule "polySimp_elimSub" (formula "26") (term "1,1,0,0"))
                                                         (rule "times_zero_2" (formula "26") (term "1,1,1,0,0"))
                                                         (rule "add_zero_right" (formula "26") (term "1,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "26") (term "0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                                         (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "26") (term "0,0,0"))
                                                         (rule "eqSeqDef" (formula "5") (inst "iv=iv"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "getOfSeqDef" (formula "6") (term "0,1,0"))
                                                         (rule "castDel" (formula "6") (term "2,0,1,0"))
                                                         (rule "castDel" (formula "6") (term "1,0,1,0"))
                                                         (rule "add_zero_right" (formula "6") (term "0,2,1,0,1,0"))
                                                         (rule "eqSymm" (formula "6") (term "1,0"))
                                                         (rule "polySimp_elimSub" (formula "6") (term "1,1,0,1,1,0"))
                                                         (rule "times_zero_2" (formula "6") (term "1,1,1,0,1,1,0"))
                                                         (rule "add_zero_right" (formula "6") (term "1,1,0,1,1,0"))
                                                         (rule "lenOfSeqDef" (formula "6") (term "1,1,0,0"))
                                                         (rule "polySimp_elimSub" (formula "6") (term "1,1,1,0,0"))
                                                         (rule "times_zero_2" (formula "6") (term "1,1,1,1,0,0"))
                                                         (rule "add_zero_right" (formula "6") (term "1,1,1,0,0"))
                                                         (rule "lenOfSeqDef" (formula "5") (term "1"))
                                                         (rule "polySimp_elimSub" (formula "5") (term "1,1"))
                                                         (rule "times_zero_2" (formula "5") (term "1,1,1"))
                                                         (rule "add_zero_right" (formula "5") (term "1,1"))
                                                         (rule "lenOfSeqDef" (formula "5") (term "0"))
                                                         (rule "polySimp_elimSub" (formula "5") (term "1,0"))
                                                         (rule "times_zero_2" (formula "5") (term "1,1,0"))
                                                         (rule "add_zero_right" (formula "5") (term "1,0"))
                                                         (rule "getOfSeqDef" (formula "6") (term "0,1,0"))
                                                         (rule "castDel" (formula "6") (term "1,0,1,0"))
                                                         (rule "castDel" (formula "6") (term "2,0,1,0"))
                                                         (rule "add_zero_right" (formula "6") (term "0,2,1,0,1,0"))
                                                         (rule "eqSymm" (formula "6") (term "1,0"))
                                                         (rule "polySimp_elimSub" (formula "6") (term "1,1,0,1,1,0"))
                                                         (rule "times_zero_2" (formula "6") (term "1,1,1,0,1,1,0"))
                                                         (rule "add_zero_right" (formula "6") (term "1,1,0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "6") (term "0,1,1,0,0"))
                                                         (rule "add_zero_right" (formula "6") (term "0,0,1,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "5") (term "0,1"))
                                                         (rule "add_zero_right" (formula "5") (term "0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0"))
                                                         (rule "add_zero_right" (formula "5") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0,1,0"))
                                                         (rule "eqSymm" (formula "6") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0,1,0"))
                                                         (rule "eqSymm" (formula "6") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,1,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,1,1,0"))
                                                         (rule "apply_eq_monomials" (formula "6") (term "1,0,0,1,0,0") (ifseqformula "5"))
                                                         (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "6") (term "1,0,1,0,0,1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "6") (term "1,0,0,1,0,0"))
                                                         (rule "add_literals" (formula "6") (term "1,1,1,0,0,1,0,0"))
                                                         (rule "times_zero_1" (formula "6") (term "1,1,0,0,1,0,0"))
                                                         (rule "add_zero_right" (formula "6") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "0,0,1"))
                                                         (rule "polySimp_elimOne" (formula "5") (term "0,0,1"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "5") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0,1,0"))
                                                         (rule "eqSymm" (formula "6") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "6") (term "1,1,0,1,1,0"))
                                                         (rule "mul_literals" (formula "6") (term "0,1,1,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,1,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0,0,1,0,0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0,1,0,0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "6") (term "0,0,0,1,0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0,1,0"))
                                                         (rule "eqSymm" (formula "6") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "6") (term "1,1,0,1,1,0"))
                                                         (rule "mul_literals" (formula "6") (term "0,1,1,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "6") (term "0,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0"))
                                                         (rule "array2seqDef" (formula "34") (term "0,0,0,1,0,1") (inst "u=u"))
                                                         (rule "array2seqDef" (formula "34") (term "0,0,1,0") (inst "u=u"))
                                                         (rule "eqSymm" (formula "34") (term "0"))
                                                         (rule "array2seqDef" (formula "34") (term "1,0,1,1,0,1") (inst "u=u"))
                                                         (rule "eqSymm" (formula "34") (term "1,0,1"))
                                                         (rule "array2seqDef" (formula "34") (term "0,0,0,1,0,0,1") (inst "u=u"))
                                                         (rule "pullOutSelect" (formula "23") (term "0,1,1,0,0") (inst "selectSK=arr_175"))
                                                         (rule "applyEq" (formula "35") (term "1,2,1,0,1,0") (ifseqformula "23"))
                                                         (rule "applyEq" (formula "25") (term "0,1,1,0,0,1,0") (ifseqformula "23"))
                                                         (rule "applyEq" (formula "35") (term "0,1,1,0,1,0") (ifseqformula "23"))
                                                         (rule "applyEq" (formula "35") (term "1,2,1,0,0,1,0,0,1") (ifseqformula "23"))
                                                         (rule "applyEq" (formula "24") (term "1,2,1,0,0") (ifseqformula "23"))
                                                         (rule "applyEq" (formula "25") (term "1,2,1,0,0,1,0") (ifseqformula "23"))
                                                         (rule "applyEq" (formula "35") (term "1,2,1,0,1,1,0,1") (ifseqformula "23"))
                                                         (rule "applyEq" (formula "35") (term "0,1,1,0,1,1,0,1") (ifseqformula "23"))
                                                         (rule "applyEq" (formula "35") (term "0,1,1,0,0,1,0,0,1") (ifseqformula "23"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "16"))
                                                         (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "33")))
                                                         (rule "eqSymm" (formula "23") (term "0,0,0"))
                                                         (rule "dismissNonSelectedField" (formula "23") (term "0,0,1,0,0"))
                                                         (rule "dismissNonSelectedField" (formula "23") (term "2,0"))
                                                         (rule "array2seqDef" (formula "35") (term "1,0,0,0") (inst "u=u"))
                                                         (rule "array2seqDef" (formula "35") (term "0,0,1,0") (inst "u=u"))
                                                         (rule "array2seqDef" (formula "35") (term "0,0,0,1,0,1") (inst "u=u"))
                                                         (rule "pullOutSelect" (formula "28") (term "1,1") (inst "selectSK=arr_176"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "17"))
                                                         (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                         (rule "narrowSelectArrayType" (formula "1") (term "2,0") (ifseqformula "21") (ifseqformula "33"))
                                                         (rule "pullOutSelect" (formula "29") (term "1,0") (inst "selectSK=arr_177"))
                                                         (rule "simplifySelectOfStore" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "replaceKnownSelect_taclet1001000000110001010_7" (formula "1") (term "2,0"))
                                                         (rule "castDel" (formula "1") (term "1,0"))
                                                         (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                         (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                         (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                                         (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "36"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                                                         (rule "applyEqReverse" (formula "30") (term "1,0") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "30"))
                                                         (rule "closeTrue" (formula "30"))
                                                      )
                                                   )
                                                   (branch "CUT: array2seq(heapAfter_concatenate, result_0) = array2seq(heapAfter_concatenate[x_arr_arr_2[i_0] := result_0], x_arr_arr_2[j_2]@heapAfter_concatenate[x_arr_arr_2[i_0] := result_0]) FALSE"
                                                      (rule "equalityToSeqGetAndSeqLenRight" (formula "27") (inst "iv=iv") (userinteraction))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (ifseqformula "16"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "1") (ifseqformula "23"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,1") (ifseqformula "16"))
                                                      (rule "orRight" (formula "28"))
                                                      (rule "eqSymm" (formula "20") (term "1,0"))
                                                      (rule "eqSymm" (formula "27") (term "1,0,1"))
                                                      (rule "eqSymm" (formula "27") (term "0"))
                                                      (rule "eqSymm" (formula "25"))
                                                      (rule "eqSymm" (formula "38"))
                                                      (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "31"))
                                                      (builtin "One Step Simplification" (formula "11"))
                                                      (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "32"))
                                                      (builtin "One Step Simplification" (formula "12"))
                                                      (rule "replace_known_left" (formula "8") (term "1,1") (ifseqformula "19"))
                                                      (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "10")))
                                                      (rule "notLeft" (formula "8"))
                                                      (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "30"))
                                                      (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "28")) (ifInst ""  (formula "29")))
                                                      (rule "polySimp_elimSub" (formula "15") (term "2,1,0,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "1,2,1,0,0,0"))
                                                      (rule "polySimp_elimSub" (formula "28") (term "2,1,0,0,0"))
                                                      (rule "mul_literals" (formula "28") (term "1,2,1,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "3") (term "1"))
                                                      (rule "polySimp_addComm0" (formula "15") (term "2,1,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "28") (term "2,1,0,0,0"))
                                                      (rule "inEqSimp_leqRight" (formula "37"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_ltRight" (formula "37"))
                                                      (rule "mul_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_ltRight" (formula "34"))
                                                      (rule "mul_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_leqRight" (formula "36"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "10"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "7"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "31") (term "0"))
                                                      (rule "array_store_known_dynamic_array_type" (formula "9") (ifseqformula "11"))
                                                      (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "33")))
                                                      (rule "true_left" (formula "9"))
                                                      (rule "inEqSimp_ltToLeq" (formula "6"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "6") (term "0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "5"))
                                                      (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "19"))
                                                      (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "18"))
                                                      (rule "applyEqRigid" (formula "28") (term "0,2,1,0,0,1,0,1") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "4"))
                                                      (rule "polySimp_pullOutFactor2" (formula "6") (term "0"))
                                                      (rule "add_literals" (formula "6") (term "1,0"))
                                                      (rule "times_zero_1" (formula "6") (term "0"))
                                                      (rule "leq_literals" (formula "6"))
                                                      (rule "true_left" (formula "6"))
                                                      (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "27") (term "1,2,1,0,0") (ifseqformula "17"))
                                                      (rule "applyEq" (formula "15") (term "1,2,1,0,0,0") (ifseqformula "17"))
                                                      (rule "applyEqRigid" (formula "26") (term "0,2,1,0,0,0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "17"))
                                                      (rule "applyEqRigid" (formula "32") (term "0,2,1,1,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "16"))
                                                      (rule "applyEqRigid" (formula "31") (term "0,2,1,1") (ifseqformula "3"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                      (rule "mul_literals" (formula "2") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1"))
                                                      (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                      (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
                                                      (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "13") (term "0,0"))
                                                      (rule "qeq_literals" (formula "13") (term "0"))
                                                      (builtin "One Step Simplification" (formula "13"))
                                                      (rule "true_left" (formula "13"))
                                                      (rule "nonNull" (formula "10") (inst "i=i_1"))
                                                      (rule "sub_literals" (formula "10") (term "2,1,0,1,1"))
                                                      (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "27")))
                                                      (rule "greater_literals" (formula "10") (term "0"))
                                                      (builtin "One Step Simplification" (formula "10"))
                                                      (rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "6") (ifseqformula "27"))
                                                      (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                                                      (rule "array2seqDef" (formula "14") (term "1,1,0") (inst "u=u"))
                                                      (rule "eqSymm" (formula "14") (term "1,0"))
                                                      (rule "array2seqDef" (formula "22") (term "0,1,1,0,1") (inst "u=u"))
                                                      (rule "eqSymm" (formula "22") (term "1,0,1"))
                                                      (rule "getOfSeqDef" (formula "22") (term "0,1,0,1"))
                                                      (rule "castDel" (formula "22") (term "2,0,1,0,1"))
                                                      (rule "castDel" (formula "22") (term "1,0,1,0,1"))
                                                      (rule "add_zero_right" (formula "22") (term "0,2,1,0,1,0,1"))
                                                      (rule "polySimp_elimSub" (formula "22") (term "1,1,0,0,1,0,1"))
                                                      (rule "times_zero_2" (formula "22") (term "1,1,1,0,0,1,0,1"))
                                                      (rule "add_zero_right" (formula "22") (term "1,1,0,0,1,0,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,1,0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,1,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,1,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,1,0,1"))
                                                      (rule "mul_literals" (formula "22") (term "0,1,1,0,0,1,0,1"))
                                                      (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,1,0,1"))
                                                      (rule "array2seqDef" (formula "22") (term "0,1,0") (inst "u=u"))
                                                      (rule "eqSymm" (formula "22") (term "0"))
                                                      (rule "lenOfSeqDef" (formula "22") (term "0,0"))
                                                      (rule "polySimp_elimSub" (formula "22") (term "1,0,0"))
                                                      (rule "times_zero_2" (formula "22") (term "1,1,0,0"))
                                                      (rule "add_zero_right" (formula "22") (term "1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                                                      (rule "add_zero_right" (formula "22") (term "0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "22") (term "0,0,0,0"))
                                                      (rule "array2seqDef" (formula "19") (term "1,0") (inst "u=u"))
                                                      (rule "array2seqDef" (formula "19") (term "0,0") (inst "u=u"))
                                                      (rule "array2seqDef" (formula "19") (term "1") (inst "u=u"))
                                                      (rule "array2seqDef" (formula "29") (term "0,0") (inst "u=u"))
                                                      (rule "array2seqDef" (formula "29") (term "1,0") (inst "u=u"))
                                                      (rule "array2seqDef" (formula "29") (term "1") (inst "u=u"))
                                                      (rule "eqSymm" (formula "29"))
                                                      (rule "array2seqDef" (formula "22") (term "0,1,1,1,0,0,1") (inst "u=u"))
                                                      (rule "lenOfSeqDef" (formula "22") (term "1,1,1,0,0,1"))
                                                      (rule "polySimp_elimSub" (formula "22") (term "1,1,1,1,0,0,1"))
                                                      (rule "times_zero_2" (formula "22") (term "1,1,1,1,1,0,0,1"))
                                                      (rule "add_zero_right" (formula "22") (term "1,1,1,1,0,0,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1,1,1,0,0,1"))
                                                      (rule "add_zero_right" (formula "22") (term "0,0,1,1,1,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,1,1,0,0,1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,1,1,1,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "22") (term "0,0,1,1,1,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "22") (term "0,0,1,1,1,0,0,1"))
                                                      (rule "array2seqDef" (formula "14") (term "1,1,1,0") (inst "u=u"))
                                                      (rule "array2seqDef" (formula "14") (term "0,1,1,0") (inst "u=u"))
                                                      (rule "array2seqDef" (formula "22") (term "0,1,1,0,1") (inst "u=u"))
                                                      (rule "eqSymm" (formula "22") (term "1,0,1"))
                                                      (rule "getOfSeqDef" (formula "22") (term "0,1,0,1"))
                                                      (rule "castDel" (formula "22") (term "2,0,1,0,1"))
                                                      (rule "castDel" (formula "22") (term "1,0,1,0,1"))
                                                      (rule "add_zero_right" (formula "22") (term "0,2,1,0,1,0,1"))
                                                      (rule "polySimp_elimSub" (formula "22") (term "1,1,0,0,1,0,1"))
                                                      (rule "times_zero_2" (formula "22") (term "1,1,1,0,0,1,0,1"))
                                                      (rule "add_zero_right" (formula "22") (term "1,1,0,0,1,0,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,1,0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,1,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,1,0,1"))
                                                      (rule "mul_literals" (formula "22") (term "0,1,1,0,0,1,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,1,0,1"))
                                                      (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,1,0,1"))
                                                      (rule "array2seqDef" (formula "22") (term "0,1,0") (inst "u=u"))
                                                      (rule "eqSymm" (formula "22") (term "0"))
                                                      (rule "lenOfSeqDef" (formula "22") (term "0,0"))
                                                      (rule "polySimp_elimSub" (formula "22") (term "1,0,0"))
                                                      (rule "times_zero_2" (formula "22") (term "1,1,0,0"))
                                                      (rule "add_zero_right" (formula "22") (term "1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                                                      (rule "add_zero_right" (formula "22") (term "0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "22") (term "0,0,0,0"))
                                                      (rule "eqSeqDef" (formula "19") (inst "iv=iv"))
                                                      (rule "andLeft" (formula "19"))
                                                      (rule "lenOfSeqDef" (formula "19") (term "1"))
                                                      (rule "polySimp_elimSub" (formula "19") (term "1,1"))
                                                      (rule "times_zero_2" (formula "19") (term "1,1,1"))
                                                      (rule "add_zero_right" (formula "19") (term "1,1"))
                                                      (rule "getOfSeqDef" (formula "20") (term "1,1,0"))
                                                      (rule "castDel" (formula "20") (term "1,1,1,0"))
                                                      (rule "castDel" (formula "20") (term "2,1,1,0"))
                                                      (rule "add_zero_right" (formula "20") (term "0,2,1,1,1,0"))
                                                      (rule "polySimp_elimSub" (formula "20") (term "1,1,0,1,1,0"))
                                                      (rule "times_zero_2" (formula "20") (term "1,1,1,0,1,1,0"))
                                                      (rule "add_zero_right" (formula "20") (term "1,1,0,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "20") (term "0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1"))
                                                      (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,1,1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,1,1,0"))
                                                      (rule "apply_eq_monomials" (formula "20") (term "1,0,1,0,0") (ifseqformula "19"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "0,1,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "20") (term "1,0,1,0,0"))
                                                      (rule "add_literals" (formula "20") (term "1,1,1,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "20") (term "1,1,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "20") (term "1,0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "20") (term "0,1,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "0,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "1,1,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,1,1,0"))
                                                      (rule "mul_literals" (formula "20") (term "0,1,1,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                                                      (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,1,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "0,0,1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "20") (term "0,0,1,1,1,0,0"))
                                                      (rule "equalityToSeqGetAndSeqLenRight" (formula "30") (inst "iv=iv"))
                                                      (rule "lenOfSeqDef" (formula "30") (term "0,0"))
                                                      (rule "eqSymm" (formula "30") (term "0"))
                                                      (rule "polySimp_elimSub" (formula "30") (term "1,1,0"))
                                                      (rule "times_zero_2" (formula "30") (term "1,1,1,0"))
                                                      (rule "add_zero_right" (formula "30") (term "1,1,0"))
                                                      (rule "lenOfSeqDef" (formula "30") (term "1,1,0,0,1"))
                                                      (rule "polySimp_elimSub" (formula "30") (term "1,1,1,0,0,1"))
                                                      (rule "times_zero_2" (formula "30") (term "1,1,1,1,0,0,1"))
                                                      (rule "add_zero_right" (formula "30") (term "1,1,1,0,0,1"))
                                                      (rule "getOfSeqDef" (formula "30") (term "0,1,0,1"))
                                                      (rule "castDel" (formula "30") (term "1,0,1,0,1"))
                                                      (rule "castDel" (formula "30") (term "2,0,1,0,1"))
                                                      (rule "add_zero_right" (formula "30") (term "0,2,1,0,1,0,1"))
                                                      (rule "eqSymm" (formula "30") (term "1,0,1"))
                                                      (rule "polySimp_elimSub" (formula "30") (term "1,1,0,1,1,0,1"))
                                                      (rule "times_zero_2" (formula "30") (term "1,1,1,0,1,1,0,1"))
                                                      (rule "add_zero_right" (formula "30") (term "1,1,0,1,1,0,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "30") (term "0,1,0"))
                                                      (rule "add_zero_right" (formula "30") (term "0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "30") (term "0,1,1,0,0,1"))
                                                      (rule "add_zero_right" (formula "30") (term "0,0,1,1,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,1,0,0,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,1,1,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,1,1,0,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,1,1,0,1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "30") (term "0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "30") (term "0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,1,1,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,1,1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "30") (term "1,1,0,1,1,0,1"))
                                                      (rule "mul_literals" (formula "30") (term "0,1,1,0,1,1,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,1,1,0,1"))
                                                      (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,1,1,0,1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "0,0,1,0,0,1,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "30") (term "0,0,0,1,0,0,1,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "30") (term "0,0,0,1,0,0,1,0,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1"))
                                                      (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1"))
                                                      (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=java_lang_Object_created__47"))
                                                      (rule "simplifySelectOfMemset" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "simplifySelectOfCreate" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                                                      (rule "castDel" (formula "1") (term "1,0"))
                                                      (rule "eqSymm" (formula "1") (term "0,0"))
                                                      (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                                      (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "30"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                                                      (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "pullOutSelect" (formula "23") (term "1,1,0,1,0,1") (inst "selectSK=arr_170"))
                                                      (rule "applyEq" (formula "31") (term "0,1,1,1,1,0,0,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "24") (term "0,0,0,0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "31") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "31") (term "0,1,1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "31") (term "1,1,1,1,0,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "31") (term "0,0,0,1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "24") (term "0,1,1,1,0,0,1,0,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "31") (term "0,0,0,1,1,1,0,0,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "24") (term "0,1,0,0") (ifseqformula "1"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "castDel" (formula "1") (term "0"))
                                                      (rule "applyEqReverse" (formula "24") (term "1,1,0,1,0,1") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "31") (term "0,1,1,1,1,0,0,1") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "24") (term "0,0,0,0,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "31") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "31") (term "0,1,1,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "31") (term "1,1,1,1,0,1") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "31") (term "0,0,0,1,0") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "24") (term "0,1,1,1,0,0,1,0,1") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "31") (term "0,0,0,1,1,1,0,0,1") (ifseqformula "1"))
                                                      (rule "applyEqReverse" (formula "24") (term "0,1,0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "24"))
                                                      (rule "allRight" (formula "24") (inst "sk=iv_12"))
                                                      (rule "impRight" (formula "24"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replace_known_left" (formula "25") (term "0,0,1") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "1")))
                                                      (rule "inEqSimp_homoInEq0" (formula "2"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "25") (term "0,1"))
                                                      (rule "polySimp_addComm1" (formula "25") (term "0,0,1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "25") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "25") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                      (rule "mul_literals" (formula "2") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "25") (term "1,0,1"))
                                                      (rule "mul_literals" (formula "25") (term "0,1,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,1"))
                                                      (rule "polySimp_elimOne" (formula "25") (term "1,1,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "25") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "25") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                                                      (rule "pullOutSelect" (formula "21") (term "0,1,1,0,0") (inst "selectSK=arr_171"))
                                                      (rule "applyEq" (formula "22") (term "1,2,1,0,0") (ifseqformula "21"))
                                                      (rule "applyEq" (formula "23") (term "1,2,1,0,0,1,0") (ifseqformula "21"))
                                                      (rule "applyEq" (formula "23") (term "0,1,1,0,0,1,0") (ifseqformula "21"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "21") (ifseqformula "14"))
                                                      (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "31")))
                                                      (rule "eqSymm" (formula "21") (term "0,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "21") (term "2,0"))
                                                      (rule "dismissNonSelectedField" (formula "21") (term "0,0,1,0,0"))
                                                      (rule "pullOutSelect" (formula "33") (term "1,2,1,0,0,0") (inst "selectSK=arr_172"))
                                                      (rule "applyEq" (formula "34") (term "0,1,1,0,0,1,0,1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "34") (term "0,1,1,0,0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "34") (term "1,2,1,0,0,1,0,1") (ifseqformula "1"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "castDel" (formula "1") (term "1,0"))
                                                      (rule "pullOutSelect" (formula "27") (term "1,1") (inst "selectSK=arr_173"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "16"))
                                                      (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "30"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                      (rule "replaceKnownSelect_taclet101000000110001010_0" (formula "1") (term "0,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet101000000110001010_5" (formula "1") (term "0,0,0"))
                                                      (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "29"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqReverse" (formula "28") (term "1,1") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "narrowSelectArrayType" (formula "27") (term "1,1") (ifseqformula "19") (ifseqformula "30"))
                                                      (rule "pullOutSelect" (formula "27") (term "1,0") (inst "selectSK=arr_174"))
                                                      (rule "simplifySelectOfStore" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "replaceKnownSelect_taclet101000000110001010_10" (formula "1") (term "2,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet101000000110001010_11" (formula "1") (term "2,0"))
                                                      (rule "castDel" (formula "1") (term "1,0"))
                                                      (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                      (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                      (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                                      (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "34"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                                      (rule "applyEqReverse" (formula "28") (term "1,0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "narrowSelectArrayType" (formula "27") (term "1,0") (ifseqformula "19") (ifseqformula "30"))
                                                      (builtin "One Step Simplification" (formula "27"))
                                                      (rule "closeTrue" (formula "27"))
                                                   )
                                                )
                                                (branch "CUT: j_2 = i_0 FALSE"
                                                   (rule "allLeftHide" (formula "19") (inst "t=j_2") (userinteraction))
                                                   (rule "impLeft" (formula "19") (userinteraction))
                                                   (branch "Case 1"
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (ifseqformula "15"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "1") (ifseqformula "21"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "0,1") (ifseqformula "15"))
                                                      (rule "orRight" (formula "27"))
                                                      (rule "eqSymm" (formula "23"))
                                                      (rule "eqSymm" (formula "37"))
                                                      (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "replace_known_left" (formula "7") (term "0") (ifseqformula "9"))
                                                      (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "18")))
                                                      (rule "notLeft" (formula "7"))
                                                      (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "31"))
                                                      (builtin "One Step Simplification" (formula "10"))
                                                      (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "30"))
                                                      (builtin "One Step Simplification" (formula "9"))
                                                      (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "29"))
                                                      (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "27")) (ifInst ""  (formula "28")))
                                                      (rule "polySimp_elimSub" (formula "14") (term "2,1,0,0,0"))
                                                      (rule "mul_literals" (formula "14") (term "1,2,1,0,0,0"))
                                                      (rule "polySimp_elimSub" (formula "27") (term "2,1,0,0,0"))
                                                      (rule "mul_literals" (formula "27") (term "1,2,1,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "2") (term "1"))
                                                      (rule "polySimp_addComm0" (formula "14") (term "2,1,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "27") (term "2,1,0,0,0"))
                                                      (rule "inEqSimp_ltRight" (formula "35"))
                                                      (rule "times_zero_1" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_leqRight" (formula "35"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_leqRight" (formula "35"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "inEqSimp_ltRight" (formula "34"))
                                                      (rule "times_zero_1" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_ltRight" (formula "28"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "7"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "10"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "30") (term "0"))
                                                      (rule "array_store_known_dynamic_array_type" (formula "9") (ifseqformula "11"))
                                                      (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "32")))
                                                      (rule "true_left" (formula "9"))
                                                      (rule "inEqSimp_ltToLeq" (formula "6"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "6") (term "0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "19"))
                                                      (rule "inEqSimp_commuteLeq" (formula "18"))
                                                      (rule "inEqSimp_commuteLeq" (formula "5"))
                                                      (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                                                      (rule "applyEq" (formula "28") (term "1,2,1,0,0") (ifseqformula "19"))
                                                      (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "19"))
                                                      (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "18"))
                                                      (rule "applyEq" (formula "15") (term "1,2,1,0,0,0") (ifseqformula "17"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                      (rule "mul_literals" (formula "3") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "1"))
                                                      (rule "inEqSimp_strengthen1" (formula "1") (ifseqformula "24"))
                                                      (rule "inEqSimp_contradEq7" (formula "24") (ifseqformula "1"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0"))
                                                      (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "24") (term "0,0"))
                                                      (rule "leq_literals" (formula "24") (term "0"))
                                                      (builtin "One Step Simplification" (formula "24"))
                                                      (rule "false_right" (formula "24"))
                                                      (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
                                                      (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "15") (term "0,0"))
                                                      (rule "qeq_literals" (formula "15") (term "0"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "true_left" (formula "15"))
                                                      (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "5"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0"))
                                                      (rule "leq_literals" (formula "1"))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                   (branch
                                                      (rule "cut" (inst "cutFormula=  array2seq(anon_1,
            byte[]::select(anon_1,
                           x_arr_arr_2,
                           arr(j_2)))
= array2seq(store(heapAfter_concatenate,
                  x_arr_arr_2,
                  arr(i_0),
                  result_0),
            byte[]::select(store(heapAfter_concatenate,
                                 x_arr_arr_2,
                                 arr(i_0),
                                 result_0),
                           x_arr_arr_2,
                           arr(j_2)))") (userinteraction))
                                                      (branch "CUT: array2seq(anon_1, x_arr_arr_2[j_2]@anon_1) = array2seq(heapAfter_concatenate[x_arr_arr_2[i_0] := result_0], x_arr_arr_2[j_2]@heapAfter_concatenate[x_arr_arr_2[i_0] := result_0]) TRUE"
                                                         (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "1") (userinteraction))
                                                         (rule "applyEq" (formula "37") (term "0") (ifseqformula "20") (userinteraction))
                                                         (rule "cut" (inst "cutFormula=  array2seq(store(heapAfter_concatenate,
                  x_arr_arr_2,
                  arr(i_0),
                  result_0),
            electionID)
= array2seq(anon_1, electionID)") (userinteraction))
                                                         (branch "CUT: array2seq(heapAfter_concatenate[x_arr_arr_2[i_0] := result_0], electionID) = array2seq(anon_1, electionID) TRUE"
                                                            (rule "applyEq" (formula "38") (term "0,1") (ifseqformula "1") (userinteraction))
                                                            (rule "cut" (inst "cutFormula=  array2seq(anon_1,
            byte[]::select(anon_1, chosen, arr(j_2)))
= array2seq(store(heapAfter_concatenate,
                  x_arr_arr_2,
                  arr(i_0),
                  result_0),
            byte[]::select(store(heapAfter_concatenate,
                                 x_arr_arr_2,
                                 arr(i_0),
                                 result_0),
                           chosen,
                           arr(j_2)))") (userinteraction))
                                                            (branch
                                                               (rule "applyEq" (formula "39") (term "1,0") (ifseqformula "1") (userinteraction))
                                                               (builtin "One Step Simplification" (formula "39"))
                                                               (rule "closeTrue" (formula "39") (userinteraction))
                                                            )
                                                            (branch "CUT: array2seq(anon_1, chosen[j_2]@anon_1) = array2seq(heapAfter_concatenate[x_arr_arr_2[i_0] := result_0], chosen[j_2]@heapAfter_concatenate[x_arr_arr_2[i_0] := result_0]) FALSE"
                                                               (rule "equalityToSeqGetAndSeqLenRight" (formula "28") (inst "iv=iv") (userinteraction))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (ifseqformula "17"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "1") (ifseqformula "24"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,1") (ifseqformula "17"))
                                                               (rule "orRight" (formula "30"))
                                                               (rule "eqSymm" (formula "2"))
                                                               (rule "eqSymm" (formula "28") (term "1,0,1"))
                                                               (rule "eqSymm" (formula "40"))
                                                               (rule "eqSymm" (formula "26"))
                                                               (rule "eqSymm" (formula "28") (term "0"))
                                                               (rule "eqSymm" (formula "21"))
                                                               (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "33"))
                                                               (builtin "One Step Simplification" (formula "12"))
                                                               (rule "replace_known_left" (formula "9") (term "0") (ifseqformula "11"))
                                                               (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "20")))
                                                               (rule "notLeft" (formula "9"))
                                                               (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "34"))
                                                               (builtin "One Step Simplification" (formula "12"))
                                                               (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "32"))
                                                               (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "30")) (ifInst ""  (formula "31")))
                                                               (rule "polySimp_elimSub" (formula "16") (term "2,1,0,0,0"))
                                                               (rule "mul_literals" (formula "16") (term "1,2,1,0,0,0"))
                                                               (rule "polySimp_elimSub" (formula "30") (term "2,1,0,0,0"))
                                                               (rule "mul_literals" (formula "30") (term "1,2,1,0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "4") (term "1"))
                                                               (rule "polySimp_addComm0" (formula "16") (term "2,1,0,0,0"))
                                                               (rule "polySimp_addComm0" (formula "30") (term "2,1,0,0,0"))
                                                               (rule "inEqSimp_leqRight" (formula "37"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "inEqSimp_ltRight" (formula "38"))
                                                               (rule "times_zero_1" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_leqRight" (formula "38"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "inEqSimp_ltRight" (formula "37"))
                                                               (rule "times_zero_1" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1"))
                                                               (rule "inEqSimp_ltToLeq" (formula "11"))
                                                               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "8"))
                                                               (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                               (rule "dismissNonSelectedField" (formula "33") (term "0"))
                                                               (rule "array_store_known_dynamic_array_type" (formula "10") (ifseqformula "12"))
                                                               (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "35")))
                                                               (rule "true_left" (formula "10"))
                                                               (rule "inEqSimp_ltToLeq" (formula "7"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "7") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                               (rule "add_literals" (formula "7") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "7") (term "0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "19"))
                                                               (rule "inEqSimp_commuteLeq" (formula "19"))
                                                               (rule "inEqSimp_commuteLeq" (formula "6"))
                                                               (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0,1"))
                                                               (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "20"))
                                                               (rule "applyEq" (formula "30") (term "1,2,1,0,0") (ifseqformula "19"))
                                                               (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "19"))
                                                               (rule "applyEq" (formula "16") (term "1,2,1,0,0,0") (ifseqformula "18"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                               (rule "mul_literals" (formula "2") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,1"))
                                                               (rule "mul_literals" (formula "27") (term "0,1,1,0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,1"))
                                                               (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,1"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                               (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                                                               (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                               (rule "polySimp_mulLiterals" (formula "6") (term "1"))
                                                               (rule "polySimp_elimOne" (formula "6") (term "1"))
                                                               (rule "inEqSimp_strengthen0" (formula "6") (ifseqformula "27"))
                                                               (rule "inEqSimp_contradEq3" (formula "27") (ifseqformula "6"))
                                                               (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0"))
                                                               (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                                               (rule "add_literals" (formula "27") (term "0,0"))
                                                               (rule "qeq_literals" (formula "27") (term "0"))
                                                               (builtin "One Step Simplification" (formula "27"))
                                                               (rule "false_right" (formula "27"))
                                                               (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "2"))
                                                               (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                                                               (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "16") (term "0,0"))
                                                               (rule "qeq_literals" (formula "16") (term "0"))
                                                               (builtin "One Step Simplification" (formula "16"))
                                                               (rule "true_left" (formula "16"))
                                                               (rule "array2seqDef" (formula "3") (term "0") (inst "u=u"))
                                                               (rule "array2seqDef" (formula "3") (term "1") (inst "u=u"))
                                                               (rule "nonNull" (formula "13") (inst "i=i_1"))
                                                               (rule "greater_literals" (formula "13") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "30")))
                                                               (rule "sub_literals" (formula "13") (term "2,1,0"))
                                                               (builtin "One Step Simplification" (formula "13"))
                                                               (rule "narrowSelectArrayType" (formula "13") (term "0,0,1,0") (ifseqformula "9") (ifseqformula "30"))
                                                               (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                                                               (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                                                               (rule "array2seqDef" (formula "4") (term "1") (inst "u=u"))
                                                               (rule "eqSymm" (formula "4"))
                                                               (rule "array2seqDef" (formula "25") (term "0,0,1,0,1") (inst "u=u"))
                                                               (rule "getOfSeqDef" (formula "25") (term "0,1,0,1"))
                                                               (rule "castDel" (formula "25") (term "2,0,1,0,1"))
                                                               (rule "castDel" (formula "25") (term "1,0,1,0,1"))
                                                               (rule "add_zero_right" (formula "25") (term "0,2,1,0,1,0,1"))
                                                               (rule "polySimp_elimSub" (formula "25") (term "1,1,0,0,1,0,1"))
                                                               (rule "times_zero_2" (formula "25") (term "1,1,1,0,0,1,0,1"))
                                                               (rule "add_zero_right" (formula "25") (term "1,1,0,0,1,0,1"))
                                                               (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,1,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,1,0,1"))
                                                               (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,1,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,1,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1,0,1"))
                                                               (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1,0,1"))
                                                               (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1,0,1"))
                                                               (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1,0,1"))
                                                               (rule "array2seqDef" (formula "25") (term "0,1,1,0,1") (inst "u=u"))
                                                               (rule "eqSymm" (formula "25") (term "1,0,1"))
                                                               (rule "getOfSeqDef" (formula "25") (term "0,1,0,1"))
                                                               (rule "castDel" (formula "25") (term "1,0,1,0,1"))
                                                               (rule "castDel" (formula "25") (term "2,0,1,0,1"))
                                                               (rule "add_zero_right" (formula "25") (term "0,2,1,0,1,0,1"))
                                                               (rule "polySimp_elimSub" (formula "25") (term "1,1,0,0,1,0,1"))
                                                               (rule "mul_literals" (formula "25") (term "1,1,1,0,0,1,0,1"))
                                                               (rule "add_zero_right" (formula "25") (term "1,1,0,0,1,0,1"))
                                                               (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,1,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,1,0,1"))
                                                               (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,1,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,1,0,1"))
                                                               (rule "eqSymm" (formula "25") (term "1,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,1,1,0,1"))
                                                               (rule "polySimp_rightDist" (formula "25") (term "1,1,0,1,1,0,1"))
                                                               (rule "mul_literals" (formula "25") (term "0,1,1,0,1,1,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,1,1,0,1"))
                                                               (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,1,1,0,1"))
                                                               (rule "array2seqDef" (formula "32") (term "0,1") (inst "u=u"))
                                                               (rule "eqSymm" (formula "32"))
                                                               (rule "array2seqDef" (formula "22") (term "1,0") (inst "u=u"))
                                                               (rule "array2seqDef" (formula "22") (term "1") (inst "u=u"))
                                                               (rule "array2seqDef" (formula "22") (term "0,0") (inst "u=u"))
                                                               (rule "array2seqDef" (formula "25") (term "0,0,0") (inst "u=u"))
                                                               (rule "lenOfSeqDef" (formula "25") (term "0,0"))
                                                               (rule "polySimp_elimSub" (formula "25") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "25") (term "1,1,0,0"))
                                                               (rule "add_zero_right" (formula "25") (term "1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                                                               (rule "add_zero_right" (formula "25") (term "0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "25") (term "0,0,0,0"))
                                                               (rule "array2seqDef" (formula "25") (term "0,1,0") (inst "u=u"))
                                                               (rule "eqSymm" (formula "25") (term "0"))
                                                               (rule "lenOfSeqDef" (formula "25") (term "0,0"))
                                                               (rule "polySimp_elimSub" (formula "25") (term "1,0,0"))
                                                               (rule "times_zero_2" (formula "25") (term "1,1,0,0"))
                                                               (rule "add_zero_right" (formula "25") (term "1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0"))
                                                               (rule "add_zero_right" (formula "25") (term "0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0,0"))
                                                               (rule "eqSymm" (formula "25") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "25") (term "0,0,1,0"))
                                                               (rule "array2seqDef" (formula "17") (term "1,0") (inst "u=u"))
                                                               (rule "array2seqDef" (formula "17") (term "0,0") (inst "u=u"))
                                                               (rule "array2seqDef" (formula "17") (term "1") (inst "u=u"))
                                                               (rule "eqSymm" (formula "17"))
                                                               (rule "array2seqDef" (formula "25") (term "0,1,1,1,0,0,1") (inst "u=u"))
                                                               (rule "lenOfSeqDef" (formula "25") (term "1,1,1,0,0,1"))
                                                               (rule "polySimp_elimSub" (formula "25") (term "1,1,1,1,0,0,1"))
                                                               (rule "mul_literals" (formula "25") (term "1,1,1,1,1,0,0,1"))
                                                               (rule "add_zero_right" (formula "25") (term "1,1,1,1,0,0,1"))
                                                               (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1,1,1,0,0,1"))
                                                               (rule "add_zero_right" (formula "25") (term "0,0,1,1,1,0,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,1,1,0,0,1"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,1,1,1,0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "25") (term "0,0,1,1,1,0,0,1"))
                                                               (rule "polySimp_elimOne" (formula "25") (term "0,0,1,1,1,0,0,1"))
                                                               (rule "eqSeqDef" (formula "3") (inst "iv=iv"))
                                                               (rule "andLeft" (formula "3"))
                                                               (rule "getOfSeqDef" (formula "4") (term "1,1,0"))
                                                               (rule "castDel" (formula "4") (term "1,1,1,0"))
                                                               (rule "castDel" (formula "4") (term "2,1,1,0"))
                                                               (rule "add_zero_right" (formula "4") (term "0,2,1,1,1,0"))
                                                               (rule "polySimp_elimSub" (formula "4") (term "1,1,0,1,1,0"))
                                                               (rule "times_zero_2" (formula "4") (term "1,1,1,0,1,1,0"))
                                                               (rule "add_zero_right" (formula "4") (term "1,1,0,1,1,0"))
                                                               (rule "getOfSeqDef" (formula "4") (term "0,1,0"))
                                                               (rule "castDel" (formula "4") (term "1,0,1,0"))
                                                               (rule "castDel" (formula "4") (term "2,0,1,0"))
                                                               (rule "add_zero_right" (formula "4") (term "0,2,1,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "4") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_2" (formula "4") (term "1,1,1,0,0,1,0"))
                                                               (rule "add_zero_right" (formula "4") (term "1,1,0,0,1,0"))
                                                               (rule "lenOfSeqDef" (formula "3") (term "1"))
                                                               (rule "polySimp_elimSub" (formula "3") (term "1,1"))
                                                               (rule "times_zero_2" (formula "3") (term "1,1,1"))
                                                               (rule "add_zero_right" (formula "3") (term "1,1"))
                                                               (rule "lenOfSeqDef" (formula "3") (term "0"))
                                                               (rule "polySimp_elimSub" (formula "3") (term "1,0"))
                                                               (rule "times_zero_2" (formula "3") (term "1,1,0"))
                                                               (rule "add_zero_right" (formula "3") (term "1,0"))
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "true_left" (formula "3"))
                                                               (rule "lenOfSeqDef" (formula "3") (term "1,1,0,0"))
                                                               (rule "polySimp_elimSub" (formula "3") (term "1,1,1,0,0"))
                                                               (rule "mul_literals" (formula "3") (term "1,1,1,1,0,0"))
                                                               (rule "add_zero_right" (formula "3") (term "1,1,1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,1,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0,1,0"))
                                                               (rule "eqSymm" (formula "3") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,1,1,0"))
                                                               (rule "eqSymm" (formula "3") (term "1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "3") (term "0,1,1,0,0"))
                                                               (rule "add_zero_right" (formula "3") (term "0,0,1,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0,1,0"))
                                                               (rule "eqSymm" (formula "3") (term "1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0,1,0"))
                                                               (rule "eqSymm" (formula "3") (term "1,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,0,1,0,0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,1,0,0,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "0,0,0,1,0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0,1,0"))
                                                               (rule "eqSymm" (formula "3") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1,1,0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,1,1,0"))
                                                               (rule "mul_literals" (formula "3") (term "0,1,1,0,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,1,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "3") (term "0,1,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "3") (term "0,1,1,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0,1,0"))
                                                               (rule "eqSymm" (formula "3") (term "1,0"))
                                                               (rule "array2seqDef" (formula "4") (term "1") (inst "u=u"))
                                                               (rule "eqSymm" (formula "4"))
                                                               (rule "pullOutSelect" (formula "26") (term "0") (inst "selectSK=java_lang_Object_created__22"))
                                                               (rule "simplifySelectOfMemset" (formula "1"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "simplifySelectOfStore" (formula "1"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "simplifySelectOfStore" (formula "1"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "simplifySelectOfStore" (formula "1"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "simplifySelectOfCreate" (formula "1"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                                                               (rule "castDel" (formula "1") (term "1,0"))
                                                               (rule "eqSymm" (formula "1") (term "0,0"))
                                                               (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "29"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                                                               (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "equalityToSeqGetAndSeqLenRight" (formula "32") (inst "iv=iv"))
                                                               (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "32") (term "0,1,0,0,1"))
                                                               (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,1"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "32") (term "1,0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0,0,1"))
                                                               (rule "polySimp_elimOne" (formula "32") (term "0,1,0,0,1"))
                                                               (rule "eqSeqDef" (formula "22") (inst "iv=iv"))
                                                               (rule "andLeft" (formula "22"))
                                                               (rule "lenOfSeqDef" (formula "22") (term "1"))
                                                               (rule "polySimp_elimSub" (formula "22") (term "1,1"))
                                                               (rule "times_zero_2" (formula "22") (term "1,1,1"))
                                                               (rule "add_zero_right" (formula "22") (term "1,1"))
                                                               (rule "getOfSeqDef" (formula "23") (term "1,1,0"))
                                                               (rule "castDel" (formula "23") (term "2,1,1,0"))
                                                               (rule "castDel" (formula "23") (term "1,1,1,0"))
                                                               (rule "add_zero_right" (formula "23") (term "0,2,1,1,1,0"))
                                                               (rule "polySimp_elimSub" (formula "23") (term "1,1,0,1,1,0"))
                                                               (rule "times_zero_2" (formula "23") (term "1,1,1,0,1,1,0"))
                                                               (rule "add_zero_right" (formula "23") (term "1,1,0,1,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "23") (term "0,1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1"))
                                                               (rule "add_zero_right" (formula "22") (term "0,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1"))
                                                               (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,1,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,1,1,0"))
                                                               (rule "apply_eq_monomials" (formula "23") (term "1,0,1,0,0") (ifseqformula "22"))
                                                               (rule "polySimp_rightDist" (formula "23") (term "0,1,0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "23") (term "1,0,1,0,1,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "23") (term "1,0,1,0,0"))
                                                               (rule "add_literals" (formula "23") (term "1,1,1,0,1,0,0"))
                                                               (rule "times_zero_1" (formula "23") (term "1,1,0,1,0,0"))
                                                               (rule "add_zero_right" (formula "23") (term "1,0,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "23") (term "0,1,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "22") (term "0,0,1"))
                                                               (rule "polySimp_elimOne" (formula "22") (term "0,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "23") (term "1,1,0,1,1,0"))
                                                               (rule "mul_literals" (formula "23") (term "0,1,1,0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,1,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,1,1,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "23") (term "0,0,1,1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "23") (term "0,0,1,1,1,0,0"))
                                                               (rule "pullOutSelect" (formula "26") (term "1,1,1,1,0,1") (inst "selectSK=arr_77"))
                                                               (rule "applyEq" (formula "18") (term "0,1,1,1") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "34") (term "1,1,0,0,1,0,0,1") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "27") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "34") (term "1,1,0,0,1,0,1") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "27") (term "0,0,0,1,0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "27") (term "0,1,1,0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "27") (term "0,1,1,1,1,0,0,1") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "34") (term "1,1,0,0,0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "27") (term "0,0,0,1,1,1,0,0,1") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "18") (term "1,2,1,1") (ifseqformula "1"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                                                               (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                               (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                                               (rule "pullOutSelect" (formula "27") (term "1,1,0,1,0,1") (inst "selectSK=arr_78"))
                                                               (rule "applyEq" (formula "28") (term "0,1,1,1,0,0,1,0,1") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "28") (term "0,0,0,0,0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "35") (term "1,1,0,1,0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "28") (term "0,1,0,0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "35") (term "1,1,0,1,1,0,1") (ifseqformula "1"))
                                                               (rule "simplifySelectOfStore" (formula "1"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "castDel" (formula "1") (term "1,0"))
                                                               (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                               (rule "inEqSimp_contradEq3" (formula "1") (term "1,0,0") (ifseqformula "8"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                                               (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                                                               (rule "qeq_literals" (formula "1") (term "0,1,0,0"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                                                               (rule "replaceKnownSelect_taclet100111000000110001010_7" (formula "1") (term "2,0"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "17"))
                                                               (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,0"))
                                                               (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                               (rule "eqSeqDef" (formula "6") (inst "iv=iv"))
                                                               (rule "andLeft" (formula "6"))
                                                               (rule "lenOfSeqDef" (formula "6") (term "1"))
                                                               (rule "polySimp_elimSub" (formula "6") (term "1,1"))
                                                               (rule "times_zero_2" (formula "6") (term "1,1,1"))
                                                               (rule "add_zero_right" (formula "6") (term "1,1"))
                                                               (rule "lenOfSeqDef" (formula "7") (term "1,1,0,0"))
                                                               (rule "polySimp_elimSub" (formula "7") (term "1,1,1,0,0"))
                                                               (rule "times_zero_2" (formula "7") (term "1,1,1,1,0,0"))
                                                               (rule "add_zero_right" (formula "7") (term "1,1,1,0,0"))
                                                               (rule "getOfSeqDef" (formula "7") (term "1,1,0"))
                                                               (rule "castDel" (formula "7") (term "2,1,1,0"))
                                                               (rule "castDel" (formula "7") (term "1,1,1,0"))
                                                               (rule "add_zero_right" (formula "7") (term "0,2,1,1,1,0"))
                                                               (rule "polySimp_elimSub" (formula "7") (term "1,1,0,1,1,0"))
                                                               (rule "mul_literals" (formula "7") (term "1,1,1,0,1,1,0"))
                                                               (rule "add_zero_right" (formula "7") (term "1,1,0,1,1,0"))
                                                               (rule "lenOfSeqDef" (formula "6") (term "0"))
                                                               (rule "polySimp_elimSub" (formula "6") (term "1,0"))
                                                               (rule "mul_literals" (formula "6") (term "1,1,0"))
                                                               (rule "add_zero_right" (formula "6") (term "1,0"))
                                                               (rule "getOfSeqDef" (formula "7") (term "0,1,0"))
                                                               (rule "castDel" (formula "7") (term "1,0,1,0"))
                                                               (rule "castDel" (formula "7") (term "2,0,1,0"))
                                                               (rule "add_zero_right" (formula "7") (term "0,2,1,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "7") (term "1,1,0,0,1,0"))
                                                               (rule "times_zero_2" (formula "7") (term "1,1,1,0,0,1,0"))
                                                               (rule "add_zero_right" (formula "7") (term "1,1,0,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "6") (term "0,1"))
                                                               (rule "add_zero_right" (formula "6") (term "0,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1"))
                                                               (rule "inEqSimp_ltToLeq" (formula "7") (term "0,1,1,0,0"))
                                                               (rule "add_zero_right" (formula "7") (term "0,0,1,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,1,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0"))
                                                               (rule "add_zero_right" (formula "6") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,1,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0,1,0"))
                                                               (rule "apply_eq_monomials" (formula "7") (term "1,0,0,1,0,0") (ifseqformula "6"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "0,1,0,0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0,0,1,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "7") (term "1,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "7") (term "1,1,1,0,0,1,0,0"))
                                                               (rule "times_zero_1" (formula "7") (term "1,1,0,0,1,0,0"))
                                                               (rule "add_zero_right" (formula "7") (term "1,0,0,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "6") (term "0,0,1"))
                                                               (rule "polySimp_elimOne" (formula "6") (term "0,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "1,1,0,1,1,0"))
                                                               (rule "mul_literals" (formula "7") (term "0,1,1,0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,1,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "6") (term "0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0,1,0"))
                                                               (rule "mul_literals" (formula "7") (term "0,1,1,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "7") (term "0,0,1,0,0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0,1,0,0,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "7") (term "0,0,0,1,0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
                                                               (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
                                                               (rule "pullOutSelect" (formula "20") (term "1,2,0") (inst "selectSK=arr_79"))
                                                               (rule "applyEq" (formula "21") (term "0,1,0") (ifseqformula "20"))
                                                               (rule "applyEq" (formula "7") (term "0,1,1,1,1,0,0") (ifseqformula "20"))
                                                               (rule "applyEq" (formula "6") (term "0,1,1") (ifseqformula "20"))
                                                               (rule "applyEq" (formula "7") (term "1,1,1,1,0") (ifseqformula "20"))
                                                               (rule "applyEq" (formula "7") (term "0,1,1,1,0,1,1,0") (ifseqformula "20"))
                                                               (rule "applyEq" (formula "6") (term "0,0,0,1") (ifseqformula "20"))
                                                               (rule "applyEq" (formula "7") (term "0,0,0,1,1,1,0,0") (ifseqformula "20"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "20") (ifseqformula "18"))
                                                               (builtin "One Step Simplification" (formula "20"))
                                                               (rule "applyEqReverse" (formula "21") (term "0,1,0") (ifseqformula "20"))
                                                               (rule "applyEqReverse" (formula "7") (term "0,1,1,1,1,0,0") (ifseqformula "20"))
                                                               (rule "applyEqReverse" (formula "6") (term "0,1,1") (ifseqformula "20"))
                                                               (rule "applyEqReverse" (formula "7") (term "1,1,1,1,0") (ifseqformula "20"))
                                                               (rule "applyEqReverse" (formula "7") (term "0,1,1,1,0,1,1,0") (ifseqformula "20"))
                                                               (rule "applyEqReverse" (formula "6") (term "0,0,0,1") (ifseqformula "20"))
                                                               (rule "applyEqReverse" (formula "7") (term "0,0,0,1,1,1,0,0") (ifseqformula "20"))
                                                               (rule "applyEqReverse" (formula "21") (term "1,2,0") (ifseqformula "20"))
                                                               (rule "hideAuxiliaryEq" (formula "20"))
                                                               (rule "array2seqDef" (formula "36") (term "0,0,1,0") (inst "u=u"))
                                                               (rule "eqSymm" (formula "36") (term "0"))
                                                               (rule "array2seqDef" (formula "36") (term "0,0,1,1,0,1") (inst "u=u"))
                                                               (rule "eqSymm" (formula "36") (term "1,0,1"))
                                                               (rule "array2seqDef" (formula "36") (term "1,0,0,1,0,0,1") (inst "u=u"))
                                                               (rule "lenOfSeqDefEQ" (formula "36") (term "0,1,0,0,1") (ifseqformula "20"))
                                                               (rule "polySimp_elimSub" (formula "36") (term "1,0,1,0,0,1"))
                                                               (rule "times_zero_2" (formula "36") (term "1,1,0,1,0,0,1"))
                                                               (rule "add_zero_right" (formula "36") (term "1,0,1,0,0,1"))
                                                               (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,1,0,0,1"))
                                                               (rule "inEqSimp_homoInEq1" (formula "36") (term "1,0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "36") (term "0,1,0,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,1"))
                                                               (rule "mul_literals" (formula "36") (term "0,1,1,0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,1"))
                                                               (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "9"))
                                                               (rule "times_zero_1" (formula "8") (term "0,0"))
                                                               (rule "add_zero_left" (formula "8") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                               (rule "mul_literals" (formula "8") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "8"))
                                                               (rule "leq_literals" (formula "11") (term "0"))
                                                               (builtin "One Step Simplification" (formula "11"))
                                                               (rule "true_left" (formula "11"))
                                                               (rule "pullOutSelect" (formula "26") (term "1,2,1,0,0,1,0") (inst "selectSK=arr_80"))
                                                               (rule "applyEq" (formula "27") (term "0,1,1,0,0,1,0") (ifseqformula "26"))
                                                               (rule "applyEq" (formula "25") (term "0,1,1,0,0") (ifseqformula "26"))
                                                               (rule "applyEq" (formula "25") (term "1,2,1,0,0") (ifseqformula "26"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "18"))
                                                               (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "35")))
                                                               (rule "eqSymm" (formula "26") (term "0,0,0"))
                                                               (rule "dismissNonSelectedField" (formula "26") (term "2,0"))
                                                               (rule "dismissNonSelectedField" (formula "26") (term "0,0,1,0,0"))
                                                               (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=arr_81"))
                                                               (rule "simplifySelectOfMemset" (formula "2"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "elementOfArrayRangeConcrete" (formula "2") (term "0,0"))
                                                               (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                                               (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                                               (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                                               (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "2") (term "1,0,0,0"))
                                                               (rule "replace_known_left" (formula "2") (term "1,0,0,0") (ifseqformula "10"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "2") (term "0,1,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0"))
                                                               (rule "pullOutSelect" (formula "3") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__23"))
                                                               (rule "applyEq" (formula "28") (term "0,0,1,0,0") (ifseqformula "3"))
                                                               (rule "applyEq" (formula "1") (term "0,0,0,0") (ifseqformula "3"))
                                                               (rule "simplifySelectOfMemset" (formula "3"))
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "simplifySelectOfStore" (formula "3"))
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "simplifySelectOfStore" (formula "3"))
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "simplifySelectOfStore" (formula "3"))
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "simplifySelectOfCreate" (formula "3"))
                                                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "38")))
                                                               (rule "castDel" (formula "3") (term "1,0"))
                                                               (rule "applyEq" (formula "3") (term "2,0") (ifseqformula "16"))
                                                               (builtin "One Step Simplification" (formula "3"))
                                                               (rule "applyEqReverse" (formula "28") (term "0,0,1,0,0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "28"))
                                                               (rule "applyEqReverse" (formula "4") (term "0,0,1,0,0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "4"))
                                                               (rule "applyEqReverse" (formula "1") (term "0,0,0,0") (ifseqformula "3"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "applyEqReverse" (formula "32") (term "0,1,1,1,0,0,1,0,1") (ifseqformula "1"))
                                                               (rule "applyEqReverse" (formula "32") (term "0,1,0,0") (ifseqformula "1"))
                                                               (rule "applyEqReverse" (formula "39") (term "1,1,0,0,1,0,1") (ifseqformula "1"))
                                                               (rule "applyEqReverse" (formula "32") (term "0,0,0,0,0") (ifseqformula "1"))
                                                               (builtin "One Step Simplification" (formula "32"))
                                                               (rule "allRight" (formula "32") (inst "sk=iv_10"))
                                                               (rule "impRight" (formula "32"))
                                                               (rule "andLeft" (formula "1"))
                                                               (rule "applyEqReverse" (formula "41") (term "1,1,0,0,0") (ifseqformula "3"))
                                                               (rule "applyEqReverse" (formula "34") (term "1,1,0") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "5"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "replace_known_left" (formula "32") (term "0,0,0") (ifseqformula "1"))
                                                               (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "1")))
                                                               (rule "inEqSimp_homoInEq0" (formula "2"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "32") (term "0,0"))
                                                               (rule "eqSymm" (formula "32"))
                                                               (rule "polySimp_addComm1" (formula "32") (term "0,0,1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "32") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                                                               (rule "eqSymm" (formula "32"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                               (rule "mul_literals" (formula "2") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "32") (term "1,0,1"))
                                                               (rule "polySimp_rightDist" (formula "32") (term "1,0,1"))
                                                               (rule "mul_literals" (formula "32") (term "0,1,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,1"))
                                                               (rule "polySimp_elimOne" (formula "32") (term "1,1,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "32") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "32") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0"))
                                                               (rule "array2seqDef" (formula "39") (term "1,0,1,0") (inst "u=u"))
                                                               (rule "eqSymm" (formula "39") (term "0"))
                                                               (rule "lenOfSeqDefEQ" (formula "39") (term "0,0") (ifseqformula "22"))
                                                               (rule "eqSymm" (formula "39") (term "0"))
                                                               (rule "polySimp_elimSub" (formula "39") (term "1,1,0"))
                                                               (rule "times_zero_2" (formula "39") (term "1,1,1,0"))
                                                               (rule "add_zero_right" (formula "39") (term "1,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "39") (term "0,1,0"))
                                                               (rule "array2seqDef" (formula "39") (term "1,0,1,1,0,1") (inst "u=u"))
                                                               (rule "eqSymm" (formula "39") (term "1,0,1"))
                                                               (rule "pullOutSelect" (formula "8") (term "0,1,0") (inst "selectSK=arr_82"))
                                                               (rule "applyEq" (formula "10") (term "1,1,0,1,0") (ifseqformula "8"))
                                                               (rule "applyEq" (formula "10") (term "0,1,1,1,0,0,1,0") (ifseqformula "8"))
                                                               (rule "applyEq" (formula "9") (term "0,0,0,0") (ifseqformula "8"))
                                                               (rule "simplifySelectOfStore" (formula "8"))
                                                               (builtin "One Step Simplification" (formula "8"))
                                                               (rule "castDel" (formula "8") (term "1,0"))
                                                               (rule "eqSymm" (formula "10") (term "1,0"))
                                                               (rule "eqSymm" (formula "9"))
                                                               (rule "eqSymm" (formula "8") (term "0,0"))
                                                               (rule "applyEq" (formula "10") (term "1,1,1,0,0") (ifseqformula "9"))
                                                               (rule "inEqSimp_contradEq3" (formula "8") (term "0,0") (ifseqformula "13"))
                                                               (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "8") (term "1,1,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "8") (term "1,0,0,0,0"))
                                                               (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                                               (rule "qeq_literals" (formula "8") (term "0,0,0"))
                                                               (builtin "One Step Simplification" (formula "8"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "8") (ifseqformula "26"))
                                                               (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "39")))
                                                               (rule "replaceKnownSelect_taclet100111000000110001010_10" (formula "8") (term "2,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet100111000000110001010_11" (formula "8") (term "2,0"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "8") (term "0,0,0") (ifseqformula "21"))
                                                               (rule "ifthenelse_negated" (formula "8") (term "0"))
                                                               (rule "dismissNonSelectedField" (formula "8") (term "0,0,0,0"))
                                                               (rule "eqSeqDef2" (formula "23") (inst "iv=iv") (ifseqformula "23"))
                                                               (builtin "One Step Simplification" (formula "23"))
                                                               (rule "true_left" (formula "23"))
                                                               (rule "array2seqDef" (formula "39") (term "1,0,0,0") (inst "u=u"))
                                                               (rule "array2seqDef" (formula "39") (term "1,0,1,1,0,1") (inst "u=u"))
                                                               (rule "eqSymm" (formula "39") (term "1,0,1"))
                                                               (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_83"))
                                                               (rule "simplifySelectOfCreate" (formula "3"))
                                                               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "39")))
                                                               (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                               (rule "hideAuxiliaryEq" (formula "3"))
                                                               (rule "pullOutSelect" (formula "28") (term "2,0") (inst "selectSK=arr_84"))
                                                               (rule "simplifySelectOfMemset" (formula "28"))
                                                               (builtin "One Step Simplification" (formula "28"))
                                                               (rule "elementOfArrayRangeConcrete" (formula "28") (term "0,0"))
                                                               (rule "eqSymm" (formula "28") (term "0,0,0,0"))
                                                               (rule "dismissNonSelectedField" (formula "28") (term "2,0"))
                                                               (rule "dismissNonSelectedField" (formula "28") (term "2,0"))
                                                               (rule "dismissNonSelectedField" (formula "28") (term "2,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0,0,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "28") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "28") (term "0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                                                               (rule "replace_known_left" (formula "28") (term "1,0,0") (ifseqformula "6"))
                                                               (builtin "One Step Simplification" (formula "28"))
                                                               (rule "inEqSimp_subsumption1" (formula "28") (term "1,0,0") (ifseqformula "11"))
                                                               (rule "leq_literals" (formula "28") (term "0,1,0,0"))
                                                               (builtin "One Step Simplification" (formula "28"))
                                                               (rule "pullOutSelect" (formula "33") (term "1,0") (inst "selectSK=arr_85"))
                                                               (rule "simplifySelectOfStore" (formula "1"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "castDel" (formula "1") (term "1,0"))
                                                               (rule "eqSymm" (formula "34"))
                                                               (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                               (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                               (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                                               (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "40"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "22"))
                                                               (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0,0"))
                                                               (rule "pullOutSelect" (formula "9") (term "0,0,0,0") (inst "selectSK=java_lang_Object_created__24"))
                                                               (rule "simplifySelectOfMemset" (formula "9"))
                                                               (builtin "One Step Simplification" (formula "9"))
                                                               (rule "simplifySelectOfStore" (formula "9"))
                                                               (builtin "One Step Simplification" (formula "9"))
                                                               (rule "simplifySelectOfStore" (formula "9"))
                                                               (builtin "One Step Simplification" (formula "9"))
                                                               (rule "simplifySelectOfStore" (formula "9"))
                                                               (builtin "One Step Simplification" (formula "9"))
                                                               (rule "simplifySelectOfCreate" (formula "9"))
                                                               (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "41")))
                                                               (rule "castDel" (formula "9") (term "0"))
                                                               (rule "applyEqReverse" (formula "10") (term "0,0,0,0") (ifseqformula "9"))
                                                               (builtin "One Step Simplification" (formula "10"))
                                                               (rule "applyEqReverse" (formula "12") (term "0,1,1,1,1,0,0") (ifseqformula "10"))
                                                               (rule "applyEqReverse" (formula "12") (term "0,0,0,1,1,1,0,0") (ifseqformula "10"))
                                                               (rule "applyEqReverse" (formula "11") (term "0,1,1") (ifseqformula "10"))
                                                               (rule "applyEqReverse" (formula "12") (term "0,1,1,1,0,1,1,0") (ifseqformula "10"))
                                                               (rule "applyEqReverse" (formula "12") (term "1,1,1,1,0") (ifseqformula "10"))
                                                               (rule "applyEqReverse" (formula "11") (term "0,0,0,1") (ifseqformula "10"))
                                                               (builtin "One Step Simplification" (formula "11"))
                                                               (rule "true_left" (formula "11"))
                                                               (rule "hideAuxiliaryEq" (formula "9"))
                                                               (rule "hideAuxiliaryEq" (formula "9"))
                                                               (rule "eqSymm" (formula "9") (term "1,0"))
                                                               (rule "pullOutSelect" (formula "27") (term "2,0") (inst "selectSK=arr_86"))
                                                               (rule "simplifySelectOfCreate" (formula "27"))
                                                               (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "39")))
                                                               (rule "applyEqReverse" (formula "28") (term "2,0") (ifseqformula "27"))
                                                               (rule "hideAuxiliaryEq" (formula "27"))
                                                               (rule "pullOutSelect" (formula "32") (term "1,0") (inst "selectSK=arr_87"))
                                                               (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                                               (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "39"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                               (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                                               (rule "pullOutSelect" (formula "2") (term "0,0,0,1,0,0") (inst "selectSK=java_lang_Object_created__25"))
                                                               (rule "applyEq" (formula "1") (term "0,0,1,0,0") (ifseqformula "2"))
                                                               (rule "simplifySelectOfMemset" (formula "2"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "simplifySelectOfStore" (formula "2"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "simplifySelectOfStore" (formula "2"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "simplifySelectOfStore" (formula "2"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "simplifySelectOfCreate" (formula "2"))
                                                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "40")))
                                                               (rule "castDel" (formula "2") (term "1,0"))
                                                               (rule "eqSymm" (formula "2") (term "0,0"))
                                                               (rule "sortsDisjointModuloNull" (formula "2") (term "0,0"))
                                                               (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "40"))
                                                               (builtin "One Step Simplification" (formula "2"))
                                                               (rule "applyEqReverse" (formula "1") (term "0,0,1,0,0") (ifseqformula "2"))
                                                               (rule "applyEqReverse" (formula "3") (term "0,0,0,1,0,0") (ifseqformula "2"))
                                                               (rule "hideAuxiliaryEq" (formula "2"))
                                                               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_88"))
                                                               (rule "simplifySelectOfMemset" (formula "1"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                               (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                               (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0,0"))
                                                               (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "40"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "simplifySelectOfStore" (formula "1"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "simplifySelectOfStore" (formula "1"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "simplifySelectOfCreate" (formula "1"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                                               (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "nnf_imp2or" (formula "23") (term "0"))
                                                               (rule "nnf_imp2or" (formula "19") (term "0"))
                                                               (rule "nnf_imp2or" (formula "9") (term "0"))
                                                               (rule "nnf_imp2or" (formula "30") (term "0"))
                                                               (rule "arrayLengthIsAShort" (formula "22") (term "1"))
                                                               (builtin "One Step Simplification" (formula "22"))
                                                               (rule "true_left" (formula "22"))
                                                               (rule "arrayLengthNotNegative" (formula "22") (term "1"))
                                                               (rule "arrayLengthNotNegative" (formula "22") (term "0"))
                                                               (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                                                               (rule "arrayLengthIsAShort" (formula "22") (term "0"))
                                                               (builtin "One Step Simplification" (formula "22"))
                                                               (rule "true_left" (formula "22"))
                                                               (rule "nnf_imp2or" (formula "40") (term "0,1"))
                                                               (rule "nnf_imp2or" (formula "10") (term "0"))
                                                               (rule "nnf_notAnd" (formula "23") (term "0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "23") (term "1,0,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                                                               (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                                                               (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                                                               (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
                                                               (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                                                               (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                                               (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                                               (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                                               (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                                                               (rule "nnf_notAnd" (formula "9") (term "0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
                                                               (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "9") (term "1,0,0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
                                                               (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
                                                               (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
                                                               (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
                                                               (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                                                               (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                                                               (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                                                               (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
                                                               (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "30") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "30") (term "1,0,0,0"))
                                                               (rule "nnf_notAnd" (formula "10") (term "0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                                                               (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                                                               (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                                                               (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
                                                               (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "10") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                                                               (rule "nnf_notAnd" (formula "40") (term "0,0,1"))
                                                               (rule "inEqSimp_notGeq" (formula "40") (term "0,0,0,1"))
                                                               (rule "times_zero_1" (formula "40") (term "1,0,0,0,0,0,1"))
                                                               (rule "add_zero_right" (formula "40") (term "0,0,0,0,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,1"))
                                                               (rule "mul_literals" (formula "40") (term "1,0,0,0,1"))
                                                               (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0,1"))
                                                               (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0,1"))
                                                               (rule "add_literals" (formula "40") (term "0,0,0,1,0,0,1"))
                                                               (rule "add_zero_left" (formula "40") (term "0,0,1,0,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,1"))
                                                               (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,1"))
                                                               (rule "ifthenelse_split" (formula "27") (term "1"))
                                                               (branch "result_0.length ≥ 1 TRUE"
                                                                  (rule "replace_known_left" (formula "31") (term "0,1,1,0,0") (ifseqformula "27"))
                                                                  (builtin "One Step Simplification" (formula "31"))
                                                                  (rule "arrayLengthIsAShort" (formula "28") (term "1,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "28"))
                                                                  (rule "true_left" (formula "28"))
                                                                  (rule "arrayLengthNotNegative" (formula "28") (term "1,0,0,0"))
                                                                  (rule "commute_or_2" (formula "23") (term "0"))
                                                                  (rule "commute_or_2" (formula "19") (term "0"))
                                                                  (rule "commute_or_2" (formula "9") (term "0"))
                                                                  (rule "arrayLengthIsAShort" (formula "29") (term "1,1,0,0"))
                                                                  (builtin "One Step Simplification" (formula "29"))
                                                                  (rule "true_left" (formula "29"))
                                                                  (rule "arrayLengthNotNegative" (formula "29") (term "1,1,0,0"))
                                                                  (rule "lenNonNegative" (formula "30") (term "0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "30"))
                                                                  (rule "commute_or_2" (formula "10") (term "0"))
                                                                  (rule "ifthenelse_split" (formula "44") (term "1,0"))
                                                                  (branch " x_arr_arr_2[j_2]@anon_heap_LOOP«anonHeapFunction».length ≥ 0 TRUE"
                                                                     (rule "replace_known_left" (formula "45") (term "0,1,1,0,0,1") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "45"))
                                                                     (rule "commute_or_2" (formula "35") (term "0"))
                                                                     (rule "commute_or" (formula "24") (term "0,0"))
                                                                     (rule "commute_or" (formula "20") (term "0,0"))
                                                                     (rule "commute_or" (formula "10") (term "0,0"))
                                                                     (rule "commute_or" (formula "11") (term "0,0"))
                                                                     (rule "ifthenelse_split" (formula "6") (term "0"))
                                                                     (branch "x_arr_arr_2 = chosen ∧ chosen.length ≥ 1 + j_2 TRUE"
                                                                        (rule "andLeft" (formula "6"))
                                                                        (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                                        (rule "hideAuxiliaryEq" (formula "8"))
                                                                        (rule "replace_known_left" (formula "35") (term "0,0") (ifseqformula "6"))
                                                                        (builtin "One Step Simplification" (formula "35"))
                                                                        (rule "applyEqReverse" (formula "31") (term "0,0") (ifseqformula "35"))
                                                                        (rule "applyEqReverse" (formula "36") (term "1,2,1,0,0,1,0,0") (ifseqformula "35"))
                                                                        (rule "applyEqReverse" (formula "32") (term "1,2,1,0,0") (ifseqformula "35"))
                                                                        (rule "applyEqReverse" (formula "32") (term "0,1,1,0,0") (ifseqformula "35"))
                                                                        (rule "applyEqReverse" (formula "36") (term "0,1,1,0,0,1,0,0") (ifseqformula "35"))
                                                                        (rule "applyEqReverse" (formula "33") (term "1,2,1,0,0") (ifseqformula "35"))
                                                                        (rule "applyEqReverse" (formula "33") (term "0,1,1,0,0") (ifseqformula "35"))
                                                                        (rule "hideAuxiliaryEq" (formula "35"))
                                                                        (rule "replace_known_left" (formula "34") (term "0,0") (ifseqformula "6"))
                                                                        (builtin "One Step Simplification" (formula "34"))
                                                                        (rule "hideAuxiliaryEq" (formula "34"))
                                                                        (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "6"))
                                                                        (builtin "One Step Simplification" (formula "8"))
                                                                        (rule "applyEqReverse" (formula "44") (term "0,1,1,0,0,0") (ifseqformula "8"))
                                                                        (rule "applyEqReverse" (formula "37") (term "0,0,0,0") (ifseqformula "8"))
                                                                        (rule "applyEqReverse" (formula "5") (term "0,1,0") (ifseqformula "8"))
                                                                        (rule "applyEqReverse" (formula "44") (term "0,1,1,0,1,1,0,1") (ifseqformula "8"))
                                                                        (rule "applyEqReverse" (formula "44") (term "1,2,1,0,0,1,0,1") (ifseqformula "8"))
                                                                        (rule "applyEqReverse" (formula "44") (term "0,1,1,0,0,1,0,1") (ifseqformula "8"))
                                                                        (rule "applyEqReverse" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "8"))
                                                                        (rule "applyEqReverse" (formula "3") (term "1,0,1,0,1,0,0") (ifseqformula "8"))
                                                                        (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "8"))
                                                                        (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "8"))
                                                                        (rule "applyEqReverse" (formula "44") (term "1,2,1,0,1,1,0,1") (ifseqformula "8"))
                                                                        (rule "applyEqReverse" (formula "5") (term "0,0,0,0") (ifseqformula "8"))
                                                                        (rule "applyEqReverse" (formula "37") (term "0,0,0,1") (ifseqformula "8"))
                                                                        (rule "applyEqReverse" (formula "3") (term "1,1,0") (ifseqformula "8"))
                                                                        (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "8"))
                                                                        (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "8"))
                                                                        (rule "applyEqReverse" (formula "44") (term "1,2,1,0,0,0") (ifseqformula "8"))
                                                                        (rule "applyEqReverse" (formula "3") (term "1,0,0,0,1,0,0") (ifseqformula "8"))
                                                                        (rule "hideAuxiliaryEq" (formula "8"))
                                                                        (rule "applyEq" (formula "43") (term "1,0,2,1,0,0,0") (ifseqformula "6"))
                                                                        (rule "applyEq" (formula "11") (term "1,1,1,1,0,0,0") (ifseqformula "6"))
                                                                        (rule "applyEq" (formula "43") (term "1,0,1,0") (ifseqformula "6"))
                                                                        (rule "applyEq" (formula "11") (term "1,0,1,1,1,0,1,0,0,0") (ifseqformula "6"))
                                                                        (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "6"))
                                                                        (builtin "One Step Simplification" (formula "23"))
                                                                        (rule "true_left" (formula "23"))
                                                                        (rule "applyEq" (formula "42") (term "1,0,2,1,0,0,1,0,1") (ifseqformula "6"))
                                                                        (rule "applyEq" (formula "10") (term "1,0,1,0,0,0,0") (ifseqformula "6"))
                                                                        (rule "applyEq" (formula "22") (term "1,0,0,0,0,0") (ifseqformula "6"))
                                                                        (rule "applyEq" (formula "22") (term "1,0,0,0,0") (ifseqformula "6"))
                                                                        (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "6"))
                                                                        (rule "close" (formula "34") (ifseqformula "18"))
                                                                     )
                                                                     (branch "x_arr_arr_2 = chosen ∧ chosen.length ≥ 1 + j_2 FALSE"
                                                                        (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                                        (rule "hideAuxiliaryEq" (formula "6"))
                                                                        (rule "commute_or" (formula "34") (term "0,0"))
                                                                        (rule "arrayLengthIsAShort" (formula "5") (term "1,0"))
                                                                        (builtin "One Step Simplification" (formula "5"))
                                                                        (rule "true_left" (formula "5"))
                                                                        (rule "arrayLengthNotNegative" (formula "5") (term "1,0"))
                                                                        (rule "ifthenelse_split" (formula "33") (term "0"))
                                                                        (branch "x_arr_arr_2 = chosen TRUE"
                                                                           (rule "applyEqReverse" (formula "35") (term "2,0") (ifseqformula "34"))
                                                                           (rule "hideAuxiliaryEq" (formula "34"))
                                                                           (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "33"))
                                                                           (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "applyEqReverse" (formula "46") (term "1,2,1,0,0,1,0,1") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "6") (term "0,1,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "46") (term "0,1,1,0,1,1,0,1") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "3") (term "1,1,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "5") (term "0,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "46") (term "1,2,1,0,0,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "46") (term "0,1,1,0,0,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "6") (term "0,0,0,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "39") (term "0,0,0,1") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "3") (term "1,0,1,0,1,0,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "3") (term "1,0,0,0,1,0,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "39") (term "0,0,0,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "46") (term "1,2,1,0,1,1,0,1") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "46") (term "0,1,1,0,0,1,0,1") (ifseqformula "7"))
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_left" (formula "33") (term "0,0") (ifseqformula "32"))
                                                                           (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "applyEqReverse" (formula "29") (term "0,0") (ifseqformula "33"))
                                                                           (rule "applyEqReverse" (formula "34") (term "0,1,1,0,0,0,0,0") (ifseqformula "33"))
                                                                           (rule "applyEqReverse" (formula "31") (term "0,1,1,0,0") (ifseqformula "33"))
                                                                           (rule "applyEqReverse" (formula "30") (term "1,2,1,0,0") (ifseqformula "33"))
                                                                           (rule "applyEqReverse" (formula "31") (term "1,2,1,0,0") (ifseqformula "33"))
                                                                           (rule "applyEqReverse" (formula "34") (term "1,2,1,0,0,0,0,0") (ifseqformula "33"))
                                                                           (rule "applyEqReverse" (formula "30") (term "0,1,1,0,0") (ifseqformula "33"))
                                                                           (rule "hideAuxiliaryEq" (formula "33"))
                                                                           (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "32"))
                                                                           (builtin "One Step Simplification" (formula "35"))
                                                                           (rule "inEqSimp_geqRight" (formula "35"))
                                                                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                           (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                           (rule "add_zero_left" (formula "1") (term "0,0"))
                                                                           (rule "applyEq" (formula "22") (term "1,0,0,0,0,0,0") (ifseqformula "33"))
                                                                           (rule "applyEq" (formula "43") (term "0") (ifseqformula "33"))
                                                                           (rule "applyEq" (formula "11") (term "1,0,0,0,1,1,0") (ifseqformula "33"))
                                                                           (rule "applyEq" (formula "11") (term "1,0,1,1,1,0") (ifseqformula "33"))
                                                                           (rule "applyEq" (formula "22") (term "1,0,0,0,0,0") (ifseqformula "33"))
                                                                           (rule "applyEq" (formula "22") (term "1,0,0,0,0,0,0,0") (ifseqformula "33"))
                                                                           (rule "applyEq" (formula "43") (term "1,0,2,1,0,0,0") (ifseqformula "33"))
                                                                           (rule "applyEq" (formula "11") (term "1,0,1,1,1,0,0,0,0,0") (ifseqformula "33"))
                                                                           (rule "eqSymm" (formula "11") (term "0,0,0"))
                                                                           (rule "applyEq" (formula "43") (term "1,0,1,1,0,0,1") (ifseqformula "33"))
                                                                           (rule "applyEq" (formula "43") (term "1,0,1,0") (ifseqformula "33"))
                                                                           (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "33"))
                                                                           (rule "applyEq" (formula "22") (term "1,0,0") (ifseqformula "33"))
                                                                           (rule "applyEq" (formula "22") (term "0,1,0") (ifseqformula "33"))
                                                                           (rule "applyEq" (formula "43") (term "1,0,2,1,0,0,1,0,1") (ifseqformula "33"))
                                                                           (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "33"))
                                                                           (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "32"))
                                                                           (rule "close" (formula "35") (ifseqformula "17"))
                                                                        )
                                                                        (branch "x_arr_arr_2 = chosen FALSE"
                                                                           (rule "applyEqReverse" (formula "34") (term "2,0") (ifseqformula "33"))
                                                                           (rule "hideAuxiliaryEq" (formula "33"))
                                                                           (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "36"))
                                                                           (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "applyEqReverse" (formula "31") (term "0,1,1,0,0") (ifseqformula "33"))
                                                                           (rule "applyEqReverse" (formula "30") (term "0,0") (ifseqformula "33"))
                                                                           (rule "applyEqReverse" (formula "32") (term "1,2,1,0,0") (ifseqformula "33"))
                                                                           (rule "applyEqReverse" (formula "34") (term "0,1,1,0,0,0,0,0") (ifseqformula "33"))
                                                                           (rule "applyEqReverse" (formula "31") (term "1,2,1,0,0") (ifseqformula "33"))
                                                                           (rule "applyEqReverse" (formula "34") (term "1,2,1,0,0,0,0,0") (ifseqformula "33"))
                                                                           (rule "applyEqReverse" (formula "32") (term "0,1,1,0,0") (ifseqformula "33"))
                                                                           (rule "hideAuxiliaryEq" (formula "33"))
                                                                           (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "35"))
                                                                           (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "applyEqReverse" (formula "38") (term "0,0,0,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "3") (term "1,0,0,0,1,0,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "45") (term "0,1,1,0,1,1,0,1") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "38") (term "0,0,0,1") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "3") (term "1,1,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "45") (term "0,1,1,0,0,1,0,1") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "6") (term "0,0,0,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "6") (term "0,1,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "45") (term "0,1,1,0,0,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "3") (term "1,0,1,0,1,0,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "45") (term "1,2,1,0,1,1,0,1") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "45") (term "1,2,1,0,0,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "45") (term "1,2,1,0,0,1,0,1") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "5") (term "0,0") (ifseqformula "7"))
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_right" (formula "35") (term "0") (ifseqformula "34"))
                                                                           (builtin "One Step Simplification" (formula "35"))
                                                                           (rule "false_right" (formula "35"))
                                                                           (rule "ifthenelse_to_or_right" (formula "9") (term "0,0,0"))
                                                                           (builtin "One Step Simplification" (formula "9"))
                                                                           (rule "nnf_notAnd" (formula "9") (term "0,0,0,0,0"))
                                                                           (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0,0,0,0"))
                                                                           (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,0,0,0"))
                                                                           (rule "add_literals" (formula "9") (term "0,0,0,1,0,0,0,0,0"))
                                                                           (rule "add_zero_left" (formula "9") (term "0,0,1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0,0,0,0"))
                                                                           (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0,0,0,0"))
                                                                           (rule "add_zero_right" (formula "9") (term "0,0,0,0,0,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0,0"))
                                                                           (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0,0"))
                                                                           (rule "nnf_notAnd" (formula "9") (term "0,1,1,0,0,0"))
                                                                           (rule "inEqSimp_notLeq" (formula "9") (term "1,0,1,1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,1,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,1,1,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,1,1,0,0,0"))
                                                                           (rule "add_literals" (formula "9") (term "0,0,0,1,0,1,1,0,0,0"))
                                                                           (rule "add_zero_left" (formula "9") (term "0,0,1,0,1,1,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,1,1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,1,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "9") (term "1,1,0,1,1,0,0,0"))
                                                                           (rule "inEqSimp_notGeq" (formula "9") (term "0,0,1,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "9") (term "1,0,0,0,0,1,1,0,0,0"))
                                                                           (rule "add_zero_right" (formula "9") (term "0,0,0,0,1,1,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,1,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "9") (term "1,0,0,1,1,0,0,0"))
                                                                           (rule "commute_or" (formula "9") (term "0,0"))
                                                                           (rule "commute_or_2" (formula "9") (term "0"))
                                                                           (rule "commute_or_2" (formula "9") (term "0,1,0"))
                                                                           (rule "commute_or" (formula "9") (term "1,1,0"))
                                                                           (rule "ifthenelse_to_or_left" (formula "10") (term "0,0,0"))
                                                                           (rule "eqSymm" (formula "10") (term "1,1,0,0,0"))
                                                                           (builtin "One Step Simplification" (formula "10"))
                                                                           (rule "eqSymm" (formula "10") (term "1,0,0,0,0"))
                                                                           (rule "nnf_notAnd" (formula "10") (term "0,0,0,0,0"))
                                                                           (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0,0,0,0"))
                                                                           (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0,0,0,0"))
                                                                           (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,0,0,0"))
                                                                           (rule "add_zero_left" (formula "10") (term "0,0,1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0,0,0,0"))
                                                                           (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,0,0,0"))
                                                                           (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,0,0"))
                                                                           (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0,0"))
                                                                           (rule "nnf_notAnd" (formula "10") (term "0,1,1,0,0,0"))
                                                                           (rule "inEqSimp_notLeq" (formula "10") (term "1,0,1,1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,1,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,1,1,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,1,1,0,0,0"))
                                                                           (rule "add_literals" (formula "10") (term "0,0,0,1,0,1,1,0,0,0"))
                                                                           (rule "add_zero_left" (formula "10") (term "0,0,1,0,1,1,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,1,1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,1,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "10") (term "1,1,0,1,1,0,0,0"))
                                                                           (rule "inEqSimp_notGeq" (formula "10") (term "0,0,1,1,0,0,0"))
                                                                           (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,1,1,0,0,0"))
                                                                           (rule "add_zero_right" (formula "10") (term "0,0,0,0,1,1,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,1,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "10") (term "1,0,0,1,1,0,0,0"))
                                                                           (rule "commute_or" (formula "10") (term "0,0"))
                                                                           (rule "commute_or_2" (formula "10") (term "0"))
                                                                           (rule "commute_or" (formula "9") (term "0,0,1,0"))
                                                                           (rule "commute_or_2" (formula "9") (term "0,1,1,0"))
                                                                           (rule "commute_or" (formula "10") (term "1,1,0"))
                                                                           (rule "commute_or_2" (formula "10") (term "0,1,0"))
                                                                           (rule "ifthenelse_to_or_right" (formula "32") (term "0,0,0"))
                                                                           (rule "nnf_notAnd" (formula "32") (term "0,0,0,0,0"))
                                                                           (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0,0,0,0"))
                                                                           (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0,0,0,0"))
                                                                           (rule "add_zero_right" (formula "32") (term "0,0,0,0,0,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0,0,0,0"))
                                                                           (rule "mul_literals" (formula "32") (term "1,0,0,0,0,0,0"))
                                                                           (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,0,0,0"))
                                                                           (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,0,0,0"))
                                                                           (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,0,0,0"))
                                                                           (rule "add_zero_left" (formula "32") (term "0,0,1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0,0,0"))
                                                                           (rule "commute_or" (formula "32") (term "0,0"))
                                                                           (rule "commute_or_2" (formula "32") (term "0"))
                                                                           (rule "commute_or" (formula "32") (term "1,1,0"))
                                                                           (rule "commute_or_2" (formula "32") (term "0,1,0"))
                                                                           (rule "commute_or_2" (formula "10") (term "0,1,1,0"))
                                                                           (rule "commute_or" (formula "10") (term "0,0,1,0"))
                                                                           (rule "commute_or" (formula "9") (term "0,0,1,1,0"))
                                                                           (rule "commute_or" (formula "32") (term "0,0,1,0"))
                                                                           (rule "commute_or" (formula "10") (term "0,0,1,1,0"))
                                                                           (rule "cnf_rightDist" (formula "32") (term "1,1,0"))
                                                                           (rule "cnf_rightDist" (formula "32") (term "0"))
                                                                           (rule "distr_forallAnd" (formula "32"))
                                                                           (rule "andLeft" (formula "32"))
                                                                           (rule "commute_or" (formula "33") (term "0"))
                                                                           (rule "shift_paren_or" (formula "32") (term "0"))
                                                                           (rule "commute_or_2" (formula "32") (term "0,0"))
                                                                           (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "commute_or" (formula "33") (term "1,1,0"))
                                                                           (rule "shift_paren_or" (formula "32") (term "0,0"))
                                                                           (rule "commute_or" (formula "32") (term "0,0,0"))
                                                                           (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "cnf_rightDist" (formula "33") (term "0"))
                                                                           (rule "distr_forallAnd" (formula "33"))
                                                                           (rule "andLeft" (formula "33"))
                                                                           (rule "commute_or_2" (formula "33") (term "0"))
                                                                           (rule "shift_paren_or" (formula "34") (term "0"))
                                                                           (rule "commute_or_2" (formula "34") (term "0,0"))
                                                                           (rule "inEqSimp_or_tautInEq1" (formula "34") (term "0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "34") (term "1,0"))
                                                                           (rule "polySimp_pullOutFactor1" (formula "34") (term "0,1,0"))
                                                                           (rule "add_literals" (formula "34") (term "1,0,1,0"))
                                                                           (rule "times_zero_1" (formula "34") (term "0,1,0"))
                                                                           (rule "leq_literals" (formula "34") (term "1,0"))
                                                                           (builtin "One Step Simplification" (formula "34"))
                                                                           (rule "true_left" (formula "34"))
                                                                           (rule "shift_paren_or" (formula "33") (term "0,0"))
                                                                           (rule "commute_or" (formula "33") (term "0,0,0"))
                                                                           (rule "inEqSimp_or_tautInEq1" (formula "33") (term "0,0"))
                                                                           (rule "add_zero_right" (formula "33") (term "1,1,0,0"))
                                                                           (rule "qeq_literals" (formula "33") (term "1,0,0"))
                                                                           (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "true_left" (formula "33"))
                                                                           (rule "cnf_rightDist" (formula "9") (term "1,1,0"))
                                                                           (rule "cnf_rightDist" (formula "10") (term "1,1,0"))
                                                                           (rule "commute_or_2" (formula "9") (term "0,1,1,0"))
                                                                           (rule "inEqSimp_or_tautInEq1" (formula "9") (term "0,0,1,1,0"))
                                                                           (rule "add_literals" (formula "9") (term "1,1,0,0,1,1,0"))
                                                                           (rule "qeq_literals" (formula "9") (term "1,0,0,1,1,0"))
                                                                           (builtin "One Step Simplification" (formula "9"))
                                                                           (rule "commute_or_2" (formula "10") (term "0,1,1,0"))
                                                                           (rule "inEqSimp_or_tautInEq1" (formula "10") (term "0,0,1,1,0"))
                                                                           (rule "add_zero_right" (formula "10") (term "1,1,0,0,1,1,0"))
                                                                           (rule "qeq_literals" (formula "10") (term "1,0,0,1,1,0"))
                                                                           (builtin "One Step Simplification" (formula "10"))
                                                                           (rule "shift_paren_or" (formula "9") (term "1,1,0"))
                                                                           (rule "shift_paren_or" (formula "10") (term "1,1,0"))
                                                                           (rule "commute_or" (formula "9") (term "0,1,1,0"))
                                                                           (rule "inEqSimp_or_tautInEq1" (formula "9") (term "1,1,0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "9") (term "1,1,1,0"))
                                                                           (rule "polySimp_pullOutFactor1" (formula "9") (term "0,1,1,1,0"))
                                                                           (rule "add_literals" (formula "9") (term "1,0,1,1,1,0"))
                                                                           (rule "times_zero_1" (formula "9") (term "0,1,1,1,0"))
                                                                           (rule "leq_literals" (formula "9") (term "1,1,1,0"))
                                                                           (builtin "One Step Simplification" (formula "9"))
                                                                           (rule "commute_or_2" (formula "9") (term "0"))
                                                                           (rule "shift_paren_or" (formula "9") (term "0,0"))
                                                                           (rule "commute_or" (formula "10") (term "0,1,1,0"))
                                                                           (rule "inEqSimp_or_tautInEq1" (formula "10") (term "1,1,0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "10") (term "1,1,1,0"))
                                                                           (rule "polySimp_pullOutFactor1" (formula "10") (term "0,1,1,1,0"))
                                                                           (rule "add_literals" (formula "10") (term "1,0,1,1,1,0"))
                                                                           (rule "times_zero_1" (formula "10") (term "0,1,1,1,0"))
                                                                           (rule "leq_literals" (formula "10") (term "1,1,1,0"))
                                                                           (builtin "One Step Simplification" (formula "10"))
                                                                           (rule "commute_or_2" (formula "10") (term "0"))
                                                                           (rule "shift_paren_or" (formula "10") (term "0,0"))
                                                                           (rule "shift_paren_or" (formula "9") (term "0,0,0"))
                                                                           (rule "shift_paren_or" (formula "10") (term "0,0,0"))
                                                                           (rule "commute_or" (formula "9") (term "0,0,0,0"))
                                                                           (builtin "One Step Simplification" (formula "9"))
                                                                           (rule "commute_or" (formula "10") (term "0,0,0,0"))
                                                                           (builtin "One Step Simplification" (formula "10"))
                                                                           (rule "ifthenelse_split" (formula "6") (term "0"))
                                                                           (branch "chosen[j_2].length ≥ 1 TRUE"
                                                                              (rule "replace_known_left" (formula "37") (term "0,1") (ifseqformula "7"))
                                                                              (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "7")))
                                                                              (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "6"))
                                                                              (rule "leq_literals" (formula "5") (term "0"))
                                                                              (builtin "One Step Simplification" (formula "5"))
                                                                              (rule "true_left" (formula "5"))
                                                                              (rule "ifthenelse_split" (formula "2") (term "0"))
                                                                              (branch "¬chosen[j_2] = null ∧ ¬chosen[j_2].<created> = TRUE TRUE"
                                                                                 (rule "andLeft" (formula "2"))
                                                                                 (rule "notLeft" (formula "2"))
                                                                                 (rule "notLeft" (formula "2"))
                                                                                 (rule "referencedObjectIsCreatedRight" (formula "34") (ifseqformula "35"))
                                                                                 (rule "close" (formula "34") (ifseqformula "15"))
                                                                              )
                                                                              (branch "¬chosen[j_2] = null ∧ ¬chosen[j_2].<created> = TRUE FALSE"
                                                                                 (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "2"))
                                                                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                                                 (rule "hideAuxiliaryEq" (formula "2"))
                                                                                 (rule "arrayLengthNotNegative" (formula "30") (term "1"))
                                                                                 (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "26"))
                                                                                 (rule "leq_literals" (formula "30") (term "0"))
                                                                                 (builtin "One Step Simplification" (formula "30"))
                                                                                 (rule "true_left" (formula "30"))
                                                                                 (rule "arrayLengthIsAShort" (formula "26") (term "0"))
                                                                                 (builtin "One Step Simplification" (formula "26"))
                                                                                 (rule "true_left" (formula "26"))
                                                                                 (rule "arrayLengthNotNegative" (formula "1") (term "0"))
                                                                                 (rule "arrayLengthIsAShort" (formula "1") (term "0"))
                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "true_left" (formula "1"))
                                                                                 (rule "arrayLengthIsAShort" (formula "29") (term "1,1,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "29"))
                                                                                 (rule "true_left" (formula "29"))
                                                                                 (rule "arrayLengthNotNegative" (formula "29") (term "1,1,0,0"))
                                                                                 (rule "lenNonNegative" (formula "29") (term "0"))
                                                                                 (rule "inEqSimp_commuteLeq" (formula "29"))
                                                                                 (rule "arrayLengthNotNegative" (formula "43") (term "1,1,0,1,1,0,1"))
                                                                                 (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "5"))
                                                                                 (rule "leq_literals" (formula "1") (term "0"))
                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "true_left" (formula "1"))
                                                                                 (rule "arrayLengthIsAShort" (formula "43") (term "1,1,0,1,1,0,1"))
                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "true_left" (formula "1"))
                                                                                 (rule "lenNonNegative" (formula "43") (term "0,0"))
                                                                                 (rule "inEqSimp_commuteLeq" (formula "1"))
                                                                                 (rule "ifthenelse_to_or_left" (formula "9") (term "0,0,0,0"))
                                                                                 (rule "eqSymm" (formula "9") (term "1,1,0,0,0,0"))
                                                                                 (rule "nnf_notAnd" (formula "9") (term "0,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0,0,0,0,0"))
                                                                                 (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0,0,0,0,0"))
                                                                                 (rule "add_zero_right" (formula "9") (term "0,0,0,0,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0,0,0"))
                                                                                 (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,0,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0,0,0,0,0"))
                                                                                 (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0,0,0,0,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,0,0,0,0"))
                                                                                 (rule "add_literals" (formula "9") (term "0,0,0,1,0,0,0,0,0,0"))
                                                                                 (rule "add_zero_left" (formula "9") (term "0,0,1,0,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,0,0,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0,0"))
                                                                                 (rule "commute_or" (formula "9") (term "0,0,0"))
                                                                                 (rule "commute_or_2" (formula "9") (term "0,0"))
                                                                                 (rule "commute_or_2" (formula "9") (term "0"))
                                                                                 (rule "commute_or_2" (formula "9") (term "0,1,0"))
                                                                                 (rule "commute_or" (formula "9") (term "1,1,0"))
                                                                                 (rule "commute_or" (formula "9") (term "0,0,1,0"))
                                                                                 (rule "cnf_rightDist" (formula "9") (term "1,1,0"))
                                                                                 (rule "cnf_rightDist" (formula "9") (term "0"))
                                                                                 (rule "distr_forallAnd" (formula "9"))
                                                                                 (rule "andLeft" (formula "9"))
                                                                                 (rule "commute_or" (formula "10") (term "0"))
                                                                                 (rule "commute_or_2" (formula "9") (term "0"))
                                                                                 (rule "commute_or" (formula "10") (term "1,1,0"))
                                                                                 (rule "shift_paren_or" (formula "9") (term "0,0"))
                                                                                 (rule "commute_or_2" (formula "9") (term "0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "9"))
                                                                                 (rule "cnf_rightDist" (formula "10") (term "0"))
                                                                                 (rule "distr_forallAnd" (formula "10"))
                                                                                 (rule "andLeft" (formula "10"))
                                                                                 (rule "commute_or_2" (formula "10") (term "0"))
                                                                                 (rule "shift_paren_or" (formula "11") (term "0"))
                                                                                 (rule "commute_or_2" (formula "10") (term "0,0"))
                                                                                 (rule "shift_paren_or" (formula "11") (term "0,0"))
                                                                                 (rule "commute_or_2" (formula "11") (term "0,0,0"))
                                                                                 (rule "inEqSimp_or_tautInEq1" (formula "11") (term "0,0"))
                                                                                 (rule "inEqSimp_homoInEq1" (formula "11") (term "1,0,0"))
                                                                                 (rule "polySimp_pullOutFactor1" (formula "11") (term "0,1,0,0"))
                                                                                 (rule "add_literals" (formula "11") (term "1,0,1,0,0"))
                                                                                 (rule "times_zero_1" (formula "11") (term "0,1,0,0"))
                                                                                 (rule "leq_literals" (formula "11") (term "1,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "11"))
                                                                                 (rule "true_left" (formula "11"))
                                                                                 (rule "shift_paren_or" (formula "9") (term "0,0,0"))
                                                                                 (rule "shift_paren_or" (formula "10") (term "0,0,0"))
                                                                                 (rule "commute_or" (formula "9") (term "0,0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "9"))
                                                                                 (rule "commute_or" (formula "10") (term "0,0,0,0"))
                                                                                 (rule "inEqSimp_or_tautInEq1" (formula "10") (term "0,0,0"))
                                                                                 (rule "add_zero_right" (formula "10") (term "1,1,0,0,0"))
                                                                                 (rule "qeq_literals" (formula "10") (term "1,0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "10"))
                                                                                 (rule "true_left" (formula "10"))
                                                                                 (rule "ifthenelse_to_or_left" (formula "10") (term "0,0,0,0"))
                                                                                 (rule "eqSymm" (formula "10") (term "1,0,0,0,0,0"))
                                                                                 (rule "eqSymm" (formula "10") (term "1,1,0,0,0,0"))
                                                                                 (rule "nnf_notAnd" (formula "10") (term "0,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0,0,0,0,0"))
                                                                                 (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,0,0,0,0"))
                                                                                 (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,0,0,0"))
                                                                                 (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,0,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0,0,0,0,0"))
                                                                                 (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0,0,0,0,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0,0,0,0,0"))
                                                                                 (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,0,0,0,0"))
                                                                                 (rule "add_zero_left" (formula "10") (term "0,0,1,0,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,0,0,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,0,0"))
                                                                                 (rule "commute_or" (formula "10") (term "0,0,0"))
                                                                                 (rule "commute_or_2" (formula "10") (term "0,0"))
                                                                                 (rule "commute_or_2" (formula "10") (term "0"))
                                                                                 (rule "commute_or_2" (formula "10") (term "0,1,0"))
                                                                                 (rule "commute_or" (formula "10") (term "1,1,0"))
                                                                                 (rule "allLeft" (formula "19") (inst "t=i_0"))
                                                                                 (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
                                                                                 (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "8"))
                                                                                 (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                                                                 (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                                                                 (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                                                                 (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                                                                 (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                                                                 (rule "leq_literals" (formula "19") (term "0,1"))
                                                                                 (builtin "One Step Simplification" (formula "19"))
                                                                                 (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "11"))
                                                                                 (rule "qeq_literals" (formula "19") (term "0,1"))
                                                                                 (builtin "One Step Simplification" (formula "19"))
                                                                                 (rule "notLeft" (formula "19"))
                                                                                 (rule "allLeft" (formula "23") (inst "t=j_2"))
                                                                                 (rule "replaceKnownSelect_taclet100111000000110001010_10" (formula "23") (term "0,0,0,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet100111000000110001010_11" (formula "23") (term "0,0,0,0"))
                                                                                 (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "12"))
                                                                                 (rule "qeq_literals" (formula "23") (term "0,1,0"))
                                                                                 (builtin "One Step Simplification" (formula "23"))
                                                                                 (rule "inEqSimp_contradInEq0" (formula "23") (term "1") (ifseqformula "13"))
                                                                                 (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                                                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
                                                                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1"))
                                                                                 (rule "mul_literals" (formula "23") (term "0,1,0,0,1"))
                                                                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                                                                                 (rule "polySimp_addComm0" (formula "23") (term "0,0,0,1"))
                                                                                 (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                                                                 (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                                                                 (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                                                                 (rule "add_literals" (formula "23") (term "0,0,1"))
                                                                                 (rule "leq_literals" (formula "23") (term "0,1"))
                                                                                 (builtin "One Step Simplification" (formula "23"))
                                                                                 (rule "notLeft" (formula "23"))
                                                                                 (rule "commute_or" (formula "10") (term "0,0,1,0"))
                                                                                 (rule "cnf_rightDist" (formula "10") (term "1,1,0"))
                                                                                 (rule "cnf_rightDist" (formula "10") (term "0"))
                                                                                 (rule "distr_forallAnd" (formula "10"))
                                                                                 (rule "andLeft" (formula "10"))
                                                                                 (rule "commute_or" (formula "11") (term "0"))
                                                                                 (rule "commute_or_2" (formula "10") (term "0"))
                                                                                 (rule "commute_or" (formula "11") (term "1,1,0"))
                                                                                 (rule "shift_paren_or" (formula "10") (term "0,0"))
                                                                                 (rule "commute_or_2" (formula "10") (term "0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "10"))
                                                                                 (rule "cnf_rightDist" (formula "11") (term "0"))
                                                                                 (rule "distr_forallAnd" (formula "11"))
                                                                                 (rule "andLeft" (formula "11"))
                                                                                 (rule "commute_or_2" (formula "11") (term "0"))
                                                                                 (rule "shift_paren_or" (formula "12") (term "0"))
                                                                                 (rule "commute_or_2" (formula "11") (term "0,0"))
                                                                                 (rule "shift_paren_or" (formula "12") (term "0,0"))
                                                                                 (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                                                                 (rule "inEqSimp_or_tautInEq1" (formula "12") (term "0,0"))
                                                                                 (rule "inEqSimp_homoInEq1" (formula "12") (term "1,0,0"))
                                                                                 (rule "polySimp_pullOutFactor1" (formula "12") (term "0,1,0,0"))
                                                                                 (rule "add_literals" (formula "12") (term "1,0,1,0,0"))
                                                                                 (rule "times_zero_1" (formula "12") (term "0,1,0,0"))
                                                                                 (rule "leq_literals" (formula "12") (term "1,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "12"))
                                                                                 (rule "true_left" (formula "12"))
                                                                                 (rule "shift_paren_or" (formula "10") (term "0,0,0"))
                                                                                 (rule "shift_paren_or" (formula "11") (term "0,0,0"))
                                                                                 (rule "commute_or" (formula "10") (term "0,0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "10"))
                                                                                 (rule "commute_or" (formula "11") (term "0,0,0,0"))
                                                                                 (rule "inEqSimp_or_tautInEq1" (formula "11") (term "0,0,0"))
                                                                                 (rule "add_zero_right" (formula "11") (term "1,1,0,0,0"))
                                                                                 (rule "qeq_literals" (formula "11") (term "1,0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "11"))
                                                                                 (rule "true_left" (formula "11"))
                                                                                 (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                                 (branch " ¬chosen[j_2] = null ∧ ¬( chosen[j_2].<created> = TRUE ∨ (chosen[j_2]@heap).<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) TRUE"
                                                                                    (rule "andLeft" (formula "3"))
                                                                                    (rule "notLeft" (formula "4"))
                                                                                    (rule "notLeft" (formula "3"))
                                                                                    (rule "orRight" (formula "35"))
                                                                                    (rule "referencedObjectIsCreatedRight" (formula "35") (ifseqformula "34"))
                                                                                    (rule "close" (formula "35") (ifseqformula "15"))
                                                                                 )
                                                                                 (branch " ¬chosen[j_2] = null ∧ ¬( chosen[j_2].<created> = TRUE ∨ (chosen[j_2]@heap).<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) FALSE"
                                                                                    (rule "close" (formula "40") (ifseqformula "3"))
                                                                                 )
                                                                              )
                                                                           )
                                                                           (branch "chosen[j_2].length ≥ 1 FALSE"
                                                                              (rule "inEqSimp_geqRight" (formula "34"))
                                                                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                              (rule "add_literals" (formula "1") (term "0,0"))
                                                                              (rule "add_zero_left" (formula "1") (term "0"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "7"))
                                                                              (rule "times_zero_2" (formula "7") (term "1,0"))
                                                                              (rule "add_zero_right" (formula "7") (term "0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                                                              (rule "mul_literals" (formula "7") (term "1"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "5"))
                                                                              (rule "qeq_literals" (formula "7") (term "0"))
                                                                              (builtin "One Step Simplification" (formula "7"))
                                                                              (rule "closeFalse" (formula "7"))
                                                                           )
                                                                        )
                                                                     )
                                                                  )
                                                                  (branch " x_arr_arr_2[j_2]@anon_heap_LOOP«anonHeapFunction».length ≥ 0 FALSE"
                                                                     (rule "replace_known_right" (formula "45") (term "0,1,1,0,0,1") (ifseqformula "44"))
                                                                     (builtin "One Step Simplification" (formula "45"))
                                                                     (rule "inEqSimp_geqRight" (formula "44"))
                                                                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "1") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                     (rule "mul_literals" (formula "1") (term "1"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "11") (term "0,1,1,0") (ifseqformula "1"))
                                                                     (rule "qeq_literals" (formula "11") (term "0,0,1,1,0"))
                                                                     (builtin "One Step Simplification" (formula "11"))
                                                                     (rule "inEqSimp_or_tautInEq0" (formula "45") (term "0,0,1"))
                                                                     (rule "add_zero_right" (formula "45") (term "1,1,0,0,1"))
                                                                     (rule "qeq_literals" (formula "45") (term "1,0,0,1"))
                                                                     (builtin "One Step Simplification" (formula "45"))
                                                                     (rule "commute_or_2" (formula "35") (term "0"))
                                                                     (rule "commute_or" (formula "24") (term "0,0"))
                                                                     (rule "commute_or" (formula "20") (term "0,0"))
                                                                     (rule "commute_or" (formula "10") (term "0,0"))
                                                                     (rule "ifthenelse_split" (formula "6") (term "0"))
                                                                     (branch "x_arr_arr_2 = chosen ∧ chosen.length ≥ 1 + j_2 TRUE"
                                                                        (rule "andLeft" (formula "6"))
                                                                        (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                                        (rule "hideAuxiliaryEq" (formula "8"))
                                                                        (rule "replace_known_left" (formula "35") (term "0,0") (ifseqformula "6"))
                                                                        (builtin "One Step Simplification" (formula "35"))
                                                                        (rule "applyEqReverse" (formula "36") (term "0,1,1,0,0,1,0,0") (ifseqformula "35"))
                                                                        (rule "applyEqReverse" (formula "33") (term "1,2,1,0,0") (ifseqformula "35"))
                                                                        (rule "applyEqReverse" (formula "31") (term "0,0") (ifseqformula "35"))
                                                                        (rule "applyEqReverse" (formula "33") (term "0,1,1,0,0") (ifseqformula "35"))
                                                                        (rule "applyEqReverse" (formula "32") (term "0,1,1,0,0") (ifseqformula "35"))
                                                                        (rule "applyEqReverse" (formula "32") (term "1,2,1,0,0") (ifseqformula "35"))
                                                                        (rule "applyEqReverse" (formula "36") (term "1,2,1,0,0,1,0,0") (ifseqformula "35"))
                                                                        (rule "hideAuxiliaryEq" (formula "35"))
                                                                        (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "6"))
                                                                        (builtin "One Step Simplification" (formula "8"))
                                                                        (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "8"))
                                                                        (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "8"))
                                                                        (rule "applyEqReverse" (formula "5") (term "0,1,0") (ifseqformula "8"))
                                                                        (rule "applyEqReverse" (formula "5") (term "0,0,0,0") (ifseqformula "8"))
                                                                        (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "8"))
                                                                        (rule "applyEqReverse" (formula "45") (term "1,2,1,0,0") (ifseqformula "8"))
                                                                        (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "8"))
                                                                        (rule "applyEqReverse" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "8"))
                                                                        (rule "applyEqReverse" (formula "3") (term "1,1,0") (ifseqformula "8"))
                                                                        (rule "applyEqReverse" (formula "38") (term "0,0,0,0") (ifseqformula "8"))
                                                                        (rule "applyEqReverse" (formula "3") (term "1,0,0,0,1,0,0") (ifseqformula "8"))
                                                                        (rule "applyEqReverse" (formula "38") (term "0,0,0,1") (ifseqformula "8"))
                                                                        (rule "applyEqReverse" (formula "45") (term "0,1,1,0,0") (ifseqformula "8"))
                                                                        (rule "applyEqReverse" (formula "3") (term "1,0,1,0,1,0,0") (ifseqformula "8"))
                                                                        (rule "hideAuxiliaryEq" (formula "8"))
                                                                        (rule "replace_known_left" (formula "33") (term "0,0") (ifseqformula "6"))
                                                                        (builtin "One Step Simplification" (formula "33"))
                                                                        (rule "hideAuxiliaryEq" (formula "33"))
                                                                        (rule "applyEq" (formula "11") (term "1,1,1,0,1,0,0") (ifseqformula "6"))
                                                                        (rule "applyEq" (formula "22") (term "1,0,0,0,0,0,0,0") (ifseqformula "6"))
                                                                        (rule "applyEq" (formula "22") (term "0,1,0,0,0") (ifseqformula "6"))
                                                                        (rule "applyEq" (formula "22") (term "0,1,0") (ifseqformula "6"))
                                                                        (rule "applyEq" (formula "11") (term "1,0,1,0,1,0,0") (ifseqformula "6"))
                                                                        (rule "applyEq" (formula "11") (term "1,0,1,1,1,0,1,1,0,0") (ifseqformula "6"))
                                                                        (rule "applyEq" (formula "11") (term "1,1,1,1,1,0,0") (ifseqformula "6"))
                                                                        (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "6"))
                                                                        (rule "applyEq" (formula "10") (term "1,0,1,0,0,0,0") (ifseqformula "6"))
                                                                        (rule "applyEq" (formula "22") (term "1,0,0") (ifseqformula "6"))
                                                                        (rule "applyEq" (formula "43") (term "1,0,2,1,0,0") (ifseqformula "6"))
                                                                        (rule "applyEq" (formula "24") (term "1,0,0,0,0,0") (ifseqformula "6"))
                                                                        (rule "applyEq" (formula "22") (term "1,0,0,0,0") (ifseqformula "6"))
                                                                        (rule "applyEq" (formula "11") (term "1,0,1,1,1,0,0,1,0,0") (ifseqformula "6"))
                                                                        (rule "applyEq" (formula "22") (term "1,0,0,0,0,0,0") (ifseqformula "6"))
                                                                        (rule "applyEq" (formula "22") (term "1,0,0,0,0,0") (ifseqformula "6"))
                                                                        (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "6"))
                                                                        (builtin "One Step Simplification" (formula "23"))
                                                                        (rule "true_left" (formula "23"))
                                                                        (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "6"))
                                                                        (rule "applyEq" (formula "41") (term "0") (ifseqformula "6"))
                                                                        (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "6"))
                                                                        (rule "close" (formula "34") (ifseqformula "18"))
                                                                     )
                                                                     (branch "x_arr_arr_2 = chosen ∧ chosen.length ≥ 1 + j_2 FALSE"
                                                                        (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                                        (rule "hideAuxiliaryEq" (formula "6"))
                                                                        (rule "commute_or" (formula "10") (term "0,0"))
                                                                        (rule "inEqSimp_or_tautInEq1" (formula "10") (term "0"))
                                                                        (rule "add_literals" (formula "10") (term "1,1,0"))
                                                                        (rule "qeq_literals" (formula "10") (term "1,0"))
                                                                        (builtin "One Step Simplification" (formula "10"))
                                                                        (rule "true_left" (formula "10"))
                                                                        (rule "arrayLengthNotNegative" (formula "5") (term "1,0"))
                                                                        (rule "arrayLengthIsAShort" (formula "6") (term "0,0,0"))
                                                                        (builtin "One Step Simplification" (formula "6"))
                                                                        (rule "true_left" (formula "6"))
                                                                        (rule "commute_or" (formula "34") (term "0,0"))
                                                                        (rule "ifthenelse_split" (formula "32") (term "0"))
                                                                        (branch "x_arr_arr_2 = chosen TRUE"
                                                                           (rule "applyEqReverse" (formula "34") (term "2,0") (ifseqformula "33"))
                                                                           (rule "hideAuxiliaryEq" (formula "33"))
                                                                           (rule "replace_known_left" (formula "33") (term "0,0") (ifseqformula "32"))
                                                                           (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "applyEqReverse" (formula "30") (term "0,1,1,0,0") (ifseqformula "33"))
                                                                           (rule "applyEqReverse" (formula "30") (term "1,2,1,0,0") (ifseqformula "33"))
                                                                           (rule "applyEqReverse" (formula "34") (term "0,1,1,0,0,0,0,0") (ifseqformula "33"))
                                                                           (rule "applyEqReverse" (formula "31") (term "1,2,1,0,0") (ifseqformula "33"))
                                                                           (rule "applyEqReverse" (formula "31") (term "0,1,1,0,0") (ifseqformula "33"))
                                                                           (rule "applyEqReverse" (formula "29") (term "0,0") (ifseqformula "33"))
                                                                           (rule "applyEqReverse" (formula "34") (term "1,2,1,0,0,0,0,0") (ifseqformula "33"))
                                                                           (rule "hideAuxiliaryEq" (formula "33"))
                                                                           (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "32"))
                                                                           (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "applyEqReverse" (formula "5") (term "0,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "44") (term "0,1,1,0,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "3") (term "1,0,1,0,1,0,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "6") (term "0,1,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "37") (term "0,0,0,1") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "3") (term "1,1,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "37") (term "0,0,0,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "44") (term "1,2,1,0,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "6") (term "0,0,0,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "3") (term "1,0,0,0,1,0,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "7"))
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "31"))
                                                                           (builtin "One Step Simplification" (formula "34"))
                                                                           (rule "inEqSimp_geqRight" (formula "34"))
                                                                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                           (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                           (rule "add_zero_left" (formula "1") (term "0,0"))
                                                                           (rule "applyEq" (formula "21") (term "1,0,0") (ifseqformula "32"))
                                                                           (rule "applyEq" (formula "21") (term "1,0,0,0,0,0,0") (ifseqformula "32"))
                                                                           (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "32"))
                                                                           (builtin "One Step Simplification" (formula "22"))
                                                                           (rule "true_left" (formula "22"))
                                                                           (rule "applyEq" (formula "21") (term "1,0,0,0,0,0,0,0") (ifseqformula "31"))
                                                                           (rule "applyEq" (formula "10") (term "1,0,1,0,0,0,0") (ifseqformula "31"))
                                                                           (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "31"))
                                                                           (rule "applyEq" (formula "21") (term "1,0,0,0,0,0") (ifseqformula "31"))
                                                                           (rule "applyEq" (formula "21") (term "0,1,0") (ifseqformula "31"))
                                                                           (rule "applyEq" (formula "21") (term "0,1,0,0,0") (ifseqformula "31"))
                                                                           (rule "applyEq" (formula "41") (term "0") (ifseqformula "31"))
                                                                           (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "31"))
                                                                           (rule "applyEq" (formula "22") (term "1,0,0,0,0,0") (ifseqformula "31"))
                                                                           (rule "applyEq" (formula "41") (term "1,0,2,1,0,0") (ifseqformula "31"))
                                                                           (rule "applyEq" (formula "21") (term "1,0,0,0,0") (ifseqformula "31"))
                                                                           (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "31"))
                                                                           (rule "close" (formula "34") (ifseqformula "17"))
                                                                        )
                                                                        (branch "x_arr_arr_2 = chosen FALSE"
                                                                           (rule "applyEqReverse" (formula "33") (term "2,0") (ifseqformula "32"))
                                                                           (rule "hideAuxiliaryEq" (formula "32"))
                                                                           (rule "replace_known_right" (formula "32") (term "0,0") (ifseqformula "35"))
                                                                           (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "applyEqReverse" (formula "31") (term "0,1,1,0,0") (ifseqformula "32"))
                                                                           (rule "applyEqReverse" (formula "33") (term "1,2,1,0,0,0,0,0") (ifseqformula "32"))
                                                                           (rule "applyEqReverse" (formula "33") (term "0,1,1,0,0,0,0,0") (ifseqformula "32"))
                                                                           (rule "applyEqReverse" (formula "30") (term "1,2,1,0,0") (ifseqformula "32"))
                                                                           (rule "applyEqReverse" (formula "30") (term "0,1,1,0,0") (ifseqformula "32"))
                                                                           (rule "applyEqReverse" (formula "31") (term "1,2,1,0,0") (ifseqformula "32"))
                                                                           (rule "applyEqReverse" (formula "29") (term "0,0") (ifseqformula "32"))
                                                                           (rule "hideAuxiliaryEq" (formula "32"))
                                                                           (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "34"))
                                                                           (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "applyEqReverse" (formula "6") (term "0,0,0,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "37") (term "0,0,0,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "3") (term "1,0,0,0,1,0,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "44") (term "0,1,1,0,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "6") (term "0,1,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "3") (term "1,1,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "3") (term "1,0,1,0,1,0,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "37") (term "0,0,0,1") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "5") (term "0,0") (ifseqformula "7"))
                                                                           (rule "applyEqReverse" (formula "44") (term "1,2,1,0,0") (ifseqformula "7"))
                                                                           (rule "hideAuxiliaryEq" (formula "7"))
                                                                           (rule "replace_known_right" (formula "34") (term "0") (ifseqformula "33"))
                                                                           (builtin "One Step Simplification" (formula "34"))
                                                                           (rule "false_right" (formula "34"))
                                                                           (rule "ifthenelse_to_or_right" (formula "9") (term "0,0,0"))
                                                                           (builtin "One Step Simplification" (formula "9"))
                                                                           (rule "nnf_notAnd" (formula "9") (term "0,0,0,0,0"))
                                                                           (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0,0,0,0"))
                                                                           (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0,0,0,0"))
                                                                           (rule "add_zero_right" (formula "9") (term "0,0,0,0,0,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0,0"))
                                                                           (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0,0"))
                                                                           (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0,0,0,0"))
                                                                           (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,0,0,0"))
                                                                           (rule "add_literals" (formula "9") (term "0,0,0,1,0,0,0,0,0"))
                                                                           (rule "add_zero_left" (formula "9") (term "0,0,1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0"))
                                                                           (rule "nnf_notAnd" (formula "9") (term "0,1,1,0,0,0"))
                                                                           (rule "inEqSimp_notLeq" (formula "9") (term "1,0,1,1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,1,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,1,1,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,1,1,0,0,0"))
                                                                           (rule "add_literals" (formula "9") (term "0,0,0,1,0,1,1,0,0,0"))
                                                                           (rule "add_zero_left" (formula "9") (term "0,0,1,0,1,1,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,1,1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,1,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "9") (term "1,1,0,1,1,0,0,0"))
                                                                           (rule "inEqSimp_notGeq" (formula "9") (term "0,0,1,1,0,0,0"))
                                                                           (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,1,1,0,0,0"))
                                                                           (rule "add_zero_right" (formula "9") (term "0,0,0,0,1,1,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,1,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "9") (term "1,0,0,1,1,0,0,0"))
                                                                           (rule "commute_or" (formula "9") (term "0,0"))
                                                                           (rule "commute_or_2" (formula "9") (term "0"))
                                                                           (rule "commute_or" (formula "9") (term "1,1,0"))
                                                                           (rule "commute_or_2" (formula "9") (term "0,1,0"))
                                                                           (rule "commute_or_2" (formula "9") (term "0,1,1,0"))
                                                                           (rule "commute_or" (formula "9") (term "0,0,1,0"))
                                                                           (rule "ifthenelse_to_or_right" (formula "31") (term "0,0,0"))
                                                                           (rule "nnf_notAnd" (formula "31") (term "0,0,0,0,0"))
                                                                           (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0,0,0,0"))
                                                                           (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0,0,0,0"))
                                                                           (rule "add_zero_right" (formula "31") (term "0,0,0,0,0,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0,0,0,0"))
                                                                           (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0,0"))
                                                                           (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0,0,0,0"))
                                                                           (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0,0,0,0"))
                                                                           (rule "add_literals" (formula "31") (term "0,0,0,1,0,0,0,0,0"))
                                                                           (rule "add_zero_left" (formula "31") (term "0,0,1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0,0,0"))
                                                                           (rule "commute_or" (formula "31") (term "0,0"))
                                                                           (rule "commute_or_2" (formula "31") (term "0"))
                                                                           (rule "commute_or_2" (formula "31") (term "0,1,0"))
                                                                           (rule "commute_or" (formula "31") (term "1,1,0"))
                                                                           (rule "commute_or" (formula "31") (term "0,0,1,0"))
                                                                           (rule "commute_or" (formula "9") (term "0,0,1,1,0"))
                                                                           (rule "cnf_rightDist" (formula "31") (term "1,1,0"))
                                                                           (rule "cnf_rightDist" (formula "31") (term "0"))
                                                                           (rule "distr_forallAnd" (formula "31"))
                                                                           (rule "andLeft" (formula "31"))
                                                                           (rule "commute_or" (formula "32") (term "0"))
                                                                           (rule "shift_paren_or" (formula "31") (term "0"))
                                                                           (rule "commute_or_2" (formula "31") (term "0,0"))
                                                                           (builtin "One Step Simplification" (formula "31"))
                                                                           (rule "commute_or" (formula "32") (term "1,1,0"))
                                                                           (rule "shift_paren_or" (formula "31") (term "0,0"))
                                                                           (rule "commute_or" (formula "31") (term "0,0,0"))
                                                                           (builtin "One Step Simplification" (formula "31"))
                                                                           (rule "cnf_rightDist" (formula "32") (term "0"))
                                                                           (rule "distr_forallAnd" (formula "32"))
                                                                           (rule "andLeft" (formula "32"))
                                                                           (rule "commute_or_2" (formula "32") (term "0"))
                                                                           (rule "shift_paren_or" (formula "33") (term "0"))
                                                                           (rule "commute_or_2" (formula "33") (term "0,0"))
                                                                           (rule "inEqSimp_or_tautInEq1" (formula "33") (term "0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "33") (term "1,0"))
                                                                           (rule "polySimp_pullOutFactor1" (formula "33") (term "0,1,0"))
                                                                           (rule "add_literals" (formula "33") (term "1,0,1,0"))
                                                                           (rule "times_zero_1" (formula "33") (term "0,1,0"))
                                                                           (rule "leq_literals" (formula "33") (term "1,0"))
                                                                           (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "true_left" (formula "33"))
                                                                           (rule "shift_paren_or" (formula "32") (term "0,0"))
                                                                           (rule "commute_or" (formula "32") (term "0,0,0"))
                                                                           (rule "inEqSimp_or_tautInEq1" (formula "32") (term "0,0"))
                                                                           (rule "add_literals" (formula "32") (term "1,1,0,0"))
                                                                           (rule "qeq_literals" (formula "32") (term "1,0,0"))
                                                                           (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "true_left" (formula "32"))
                                                                           (rule "cnf_rightDist" (formula "9") (term "1,1,0"))
                                                                           (rule "commute_or_2" (formula "9") (term "0,1,1,0"))
                                                                           (rule "inEqSimp_or_tautInEq1" (formula "9") (term "0,0,1,1,0"))
                                                                           (rule "add_zero_right" (formula "9") (term "1,1,0,0,1,1,0"))
                                                                           (rule "qeq_literals" (formula "9") (term "1,0,0,1,1,0"))
                                                                           (builtin "One Step Simplification" (formula "9"))
                                                                           (rule "shift_paren_or" (formula "9") (term "1,1,0"))
                                                                           (rule "commute_or" (formula "9") (term "0,1,1,0"))
                                                                           (rule "inEqSimp_or_tautInEq1" (formula "9") (term "1,1,0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "9") (term "1,1,1,0"))
                                                                           (rule "polySimp_pullOutFactor1" (formula "9") (term "0,1,1,1,0"))
                                                                           (rule "add_literals" (formula "9") (term "1,0,1,1,1,0"))
                                                                           (rule "times_zero_1" (formula "9") (term "0,1,1,1,0"))
                                                                           (rule "leq_literals" (formula "9") (term "1,1,1,0"))
                                                                           (builtin "One Step Simplification" (formula "9"))
                                                                           (rule "commute_or_2" (formula "9") (term "0"))
                                                                           (rule "shift_paren_or" (formula "9") (term "0,0"))
                                                                           (rule "shift_paren_or" (formula "9") (term "0,0,0"))
                                                                           (rule "commute_or" (formula "9") (term "0,0,0,0"))
                                                                           (builtin "One Step Simplification" (formula "9"))
                                                                           (rule "ifthenelse_split" (formula "6") (term "0"))
                                                                           (branch "chosen[j_2].length ≥ 1 TRUE"
                                                                              (rule "replace_known_left" (formula "36") (term "0,0") (ifseqformula "7"))
                                                                              (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "7")))
                                                                              (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "6"))
                                                                              (rule "leq_literals" (formula "5") (term "0"))
                                                                              (builtin "One Step Simplification" (formula "5"))
                                                                              (rule "true_left" (formula "5"))
                                                                              (rule "arrayLengthIsAShort" (formula "26") (term "0"))
                                                                              (builtin "One Step Simplification" (formula "26"))
                                                                              (rule "true_left" (formula "26"))
                                                                              (rule "arrayLengthNotNegative" (formula "26") (term "0"))
                                                                              (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "27"))
                                                                              (rule "leq_literals" (formula "26") (term "0"))
                                                                              (builtin "One Step Simplification" (formula "26"))
                                                                              (rule "true_left" (formula "26"))
                                                                              (rule "ifthenelse_split" (formula "2") (term "0"))
                                                                              (branch "¬chosen[j_2] = null ∧ ¬chosen[j_2].<created> = TRUE TRUE"
                                                                                 (rule "andLeft" (formula "2"))
                                                                                 (rule "notLeft" (formula "2"))
                                                                                 (rule "notLeft" (formula "2"))
                                                                                 (rule "referencedObjectIsCreatedRight" (formula "33") (ifseqformula "34"))
                                                                                 (rule "close" (formula "33") (ifseqformula "14"))
                                                                              )
                                                                              (branch "¬chosen[j_2] = null ∧ ¬chosen[j_2].<created> = TRUE FALSE"
                                                                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                                                 (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "2"))
                                                                                 (rule "hideAuxiliaryEq" (formula "2"))
                                                                                 (rule "arrayLengthIsAShort" (formula "1") (term "0"))
                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "true_left" (formula "1"))
                                                                                 (rule "arrayLengthNotNegative" (formula "1") (term "0"))
                                                                                 (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                                                                                 (rule "qeq_literals" (formula "1") (term "0"))
                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "closeFalse" (formula "1"))
                                                                              )
                                                                           )
                                                                           (branch "chosen[j_2].length ≥ 1 FALSE"
                                                                              (rule "inEqSimp_geqRight" (formula "33"))
                                                                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                              (rule "add_literals" (formula "1") (term "0,0"))
                                                                              (rule "add_zero_left" (formula "1") (term "0"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "7"))
                                                                              (rule "times_zero_2" (formula "7") (term "1,0"))
                                                                              (rule "add_zero_right" (formula "7") (term "0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                                                              (rule "mul_literals" (formula "7") (term "1"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "7"))
                                                                              (rule "qeq_literals" (formula "5") (term "0"))
                                                                              (builtin "One Step Simplification" (formula "5"))
                                                                              (rule "closeFalse" (formula "5"))
                                                                           )
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                               (branch "result_0.length ≥ 1 FALSE"
                                                                  (rule "replace_known_right" (formula "30") (term "0,1,1,0,0") (ifseqformula "32"))
                                                                  (builtin "One Step Simplification" (formula "30"))
                                                                  (rule "inEqSimp_geqRight" (formula "32"))
                                                                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_or_tautInEq0" (formula "31") (term "0,0"))
                                                                  (rule "add_zero_right" (formula "31") (term "1,1,0,0"))
                                                                  (rule "qeq_literals" (formula "31") (term "1,0,0"))
                                                                  (builtin "One Step Simplification" (formula "31"))
                                                                  (rule "true_left" (formula "31"))
                                                                  (rule "arrayLengthIsAShort" (formula "28") (term "1,0,0,0"))
                                                                  (builtin "One Step Simplification" (formula "28"))
                                                                  (rule "true_left" (formula "28"))
                                                                  (rule "arrayLengthNotNegative" (formula "28") (term "1,0,0,0"))
                                                                  (rule "commute_or_2" (formula "24") (term "0"))
                                                                  (rule "commute_or_2" (formula "20") (term "0"))
                                                                  (rule "commute_or_2" (formula "10") (term "0"))
                                                                  (rule "arrayLengthIsAShort" (formula "29") (term "1,1,0,0"))
                                                                  (builtin "One Step Simplification" (formula "29"))
                                                                  (rule "true_left" (formula "29"))
                                                                  (rule "arrayLengthNotNegative" (formula "29") (term "1,1,0,0"))
                                                                  (rule "lenNonNegative" (formula "30") (term "0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "30"))
                                                                  (rule "commute_or_2" (formula "11") (term "0"))
                                                                  (rule "ifthenelse_split" (formula "43") (term "1,0"))
                                                                  (branch " x_arr_arr_2[j_2]@anon_heap_LOOP«anonHeapFunction».length ≥ 0 TRUE"
                                                                     (rule "replace_known_left" (formula "44") (term "0,1,1,0,0,1") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "44"))
                                                                     (rule "commute_or" (formula "25") (term "0,0"))
                                                                     (rule "commute_or" (formula "21") (term "0,0"))
                                                                     (rule "ifthenelse_split" (formula "7") (term "0"))
                                                                     (branch "x_arr_arr_2 = chosen ∧ chosen.length ≥ 1 + j_2 TRUE"
                                                                        (rule "andLeft" (formula "7"))
                                                                        (rule "applyEqReverse" (formula "10") (term "2,0") (ifseqformula "9"))
                                                                        (rule "hideAuxiliaryEq" (formula "9"))
                                                                        (rule "replace_known_left" (formula "9") (term "0,0") (ifseqformula "7"))
                                                                        (builtin "One Step Simplification" (formula "9"))
                                                                        (rule "applyEqReverse" (formula "38") (term "0,0,0,1") (ifseqformula "9"))
                                                                        (rule "applyEqReverse" (formula "38") (term "0,0,0,0") (ifseqformula "9"))
                                                                        (rule "applyEqReverse" (formula "45") (term "1,2,1,0,0,0") (ifseqformula "9"))
                                                                        (rule "applyEqReverse" (formula "3") (term "1,2,0") (ifseqformula "9"))
                                                                        (rule "applyEqReverse" (formula "4") (term "1,0,1,0,1,0,0") (ifseqformula "9"))
                                                                        (rule "applyEqReverse" (formula "45") (term "1,2,1,0,0,1,0,1") (ifseqformula "9"))
                                                                        (rule "applyEqReverse" (formula "4") (term "1,1,0") (ifseqformula "9"))
                                                                        (rule "applyEqReverse" (formula "6") (term "0,0,0,0") (ifseqformula "9"))
                                                                        (rule "applyEqReverse" (formula "6") (term "0,1,0") (ifseqformula "9"))
                                                                        (rule "applyEqReverse" (formula "3") (term "1,0,0,1,0,0") (ifseqformula "9"))
                                                                        (rule "applyEqReverse" (formula "45") (term "0,1,1,0,0,0") (ifseqformula "9"))
                                                                        (rule "applyEqReverse" (formula "45") (term "0,1,1,0,0,1,0,1") (ifseqformula "9"))
                                                                        (rule "applyEqReverse" (formula "4") (term "1,0,0,0,1,0,0") (ifseqformula "9"))
                                                                        (rule "applyEqReverse" (formula "4") (term "0,0,0,0,0") (ifseqformula "9"))
                                                                        (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "9"))
                                                                        (rule "applyEqReverse" (formula "45") (term "1,2,1,0,1,1,0,1") (ifseqformula "9"))
                                                                        (rule "applyEqReverse" (formula "45") (term "0,1,1,0,1,1,0,1") (ifseqformula "9"))
                                                                        (rule "applyEqReverse" (formula "3") (term "1,1,0") (ifseqformula "9"))
                                                                        (rule "hideAuxiliaryEq" (formula "9"))
                                                                        (rule "replace_known_left" (formula "34") (term "0,0") (ifseqformula "7"))
                                                                        (builtin "One Step Simplification" (formula "34"))
                                                                        (rule "applyEqReverse" (formula "32") (term "1,2,1,0,0") (ifseqformula "34"))
                                                                        (rule "applyEqReverse" (formula "32") (term "0,1,1,0,0") (ifseqformula "34"))
                                                                        (rule "applyEqReverse" (formula "31") (term "1,2,1,0,0") (ifseqformula "34"))
                                                                        (rule "applyEqReverse" (formula "31") (term "0,1,1,0,0") (ifseqformula "34"))
                                                                        (rule "applyEqReverse" (formula "30") (term "0,0") (ifseqformula "34"))
                                                                        (rule "hideAuxiliaryEq" (formula "34"))
                                                                        (rule "replace_known_left" (formula "33") (term "0,0") (ifseqformula "7"))
                                                                        (builtin "One Step Simplification" (formula "33"))
                                                                        (rule "hideAuxiliaryEq" (formula "33"))
                                                                        (rule "applyEq" (formula "12") (term "1,0,0,0,1,1,0") (ifseqformula "7"))
                                                                        (rule "applyEq" (formula "41") (term "0") (ifseqformula "7"))
                                                                        (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "7"))
                                                                        (rule "applyEq" (formula "23") (term "1,0,0,0,0,0,0,0") (ifseqformula "7"))
                                                                        (rule "applyEq" (formula "41") (term "1,0,1,1,0,0,1") (ifseqformula "7"))
                                                                        (rule "applyEq" (formula "23") (term "0,1,0") (ifseqformula "7"))
                                                                        (rule "applyEq" (formula "41") (term "1,0,1,0") (ifseqformula "7"))
                                                                        (rule "applyEq" (formula "23") (term "1,0,0,0,0,0,0") (ifseqformula "7"))
                                                                        (rule "applyEq" (formula "23") (term "1,0,0,0,0,0") (ifseqformula "7"))
                                                                        (rule "applyEq" (formula "11") (term "1,0,1,0,1,0,0") (ifseqformula "7"))
                                                                        (rule "applyEq" (formula "41") (term "1,0,2,1,0,0,1,0,1") (ifseqformula "7"))
                                                                        (rule "applyEq" (formula "25") (term "1,0,0,0,0,0") (ifseqformula "7"))
                                                                        (rule "applyEq" (formula "12") (term "1,0,1,1,1,0,1,1,0,0") (ifseqformula "7"))
                                                                        (rule "applyEq" (formula "12") (term "1,0,1,1,1,0") (ifseqformula "7"))
                                                                        (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "7"))
                                                                        (rule "applyEq" (formula "41") (term "1,0,2,1,0,0,0") (ifseqformula "7"))
                                                                        (rule "applyEq" (formula "23") (term "1,0,0,0,0") (ifseqformula "7"))
                                                                        (rule "applyEq" (formula "12") (term "1,0,1,1,1,0,0,1,0,0") (ifseqformula "7"))
                                                                        (rule "applyEq" (formula "12") (term "1,1,1,1,1,0,0") (ifseqformula "7"))
                                                                        (rule "applyEq" (formula "23") (term "0,1,0,0,0") (ifseqformula "7"))
                                                                        (rule "applyEq" (formula "12") (term "1,0,1,0,1,0,0") (ifseqformula "7"))
                                                                        (rule "applyEq" (formula "23") (term "1,0,0") (ifseqformula "7"))
                                                                        (rule "applyEq" (formula "12") (term "1,1,1,0,1,0,0") (ifseqformula "7"))
                                                                        (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "7"))
                                                                        (rule "close" (formula "34") (ifseqformula "19"))
                                                                     )
                                                                     (branch "x_arr_arr_2 = chosen ∧ chosen.length ≥ 1 + j_2 FALSE"
                                                                        (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                                        (rule "hideAuxiliaryEq" (formula "7"))
                                                                        (rule "commute_or" (formula "10") (term "0,0"))
                                                                        (rule "commute_or" (formula "11") (term "0,0"))
                                                                        (rule "arrayLengthIsAShort" (formula "6") (term "1,0"))
                                                                        (builtin "One Step Simplification" (formula "6"))
                                                                        (rule "true_left" (formula "6"))
                                                                        (rule "arrayLengthNotNegative" (formula "6") (term "1,0"))
                                                                        (rule "ifthenelse_split" (formula "33") (term "0"))
                                                                        (branch "x_arr_arr_2 = chosen TRUE"
                                                                           (rule "applyEqReverse" (formula "35") (term "2,0") (ifseqformula "34"))
                                                                           (rule "hideAuxiliaryEq" (formula "34"))
                                                                           (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "33"))
                                                                           (builtin "One Step Simplification" (formula "8"))
                                                                           (rule "applyEqReverse" (formula "4") (term "1,0,1,0,1,0,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "3") (term "1,0,0,1,0,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "4") (term "1,0,0,0,1,0,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "45") (term "1,2,1,0,0,1,0,1") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "45") (term "0,1,1,0,1,1,0,1") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "3") (term "1,1,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "3") (term "1,2,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "7") (term "0,1,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "45") (term "0,1,1,0,0,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "4") (term "0,0,0,0,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "45") (term "0,1,1,0,0,1,0,1") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "38") (term "0,0,0,1") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "6") (term "0,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "45") (term "1,2,1,0,0,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "7") (term "0,0,0,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "45") (term "1,2,1,0,1,1,0,1") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "4") (term "1,1,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "38") (term "0,0,0,0") (ifseqformula "8"))
                                                                           (rule "hideAuxiliaryEq" (formula "8"))
                                                                           (rule "replace_known_left" (formula "33") (term "0,0") (ifseqformula "32"))
                                                                           (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "applyEqReverse" (formula "30") (term "0,1,1,0,0") (ifseqformula "33"))
                                                                           (rule "applyEqReverse" (formula "29") (term "0,0") (ifseqformula "33"))
                                                                           (rule "applyEqReverse" (formula "31") (term "0,1,1,0,0") (ifseqformula "33"))
                                                                           (rule "applyEqReverse" (formula "31") (term "1,2,1,0,0") (ifseqformula "33"))
                                                                           (rule "applyEqReverse" (formula "30") (term "1,2,1,0,0") (ifseqformula "33"))
                                                                           (rule "hideAuxiliaryEq" (formula "33"))
                                                                           (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "32"))
                                                                           (builtin "One Step Simplification" (formula "34"))
                                                                           (rule "inEqSimp_geqRight" (formula "34"))
                                                                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                           (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                           (rule "add_zero_left" (formula "1") (term "0,0"))
                                                                           (rule "applyEq" (formula "12") (term "1,1,1,1,0,0,0") (ifseqformula "33"))
                                                                           (rule "applyEq" (formula "23") (term "0,1,0") (ifseqformula "33"))
                                                                           (rule "applyEq" (formula "11") (term "1,0,1,0,0,0,0") (ifseqformula "33"))
                                                                           (rule "applyEq" (formula "43") (term "1,0,1,0") (ifseqformula "33"))
                                                                           (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "33"))
                                                                           (rule "applyEq" (formula "12") (term "1,0,0,0,1,1,0") (ifseqformula "33"))
                                                                           (rule "applyEq" (formula "42") (term "0") (ifseqformula "33"))
                                                                           (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "33"))
                                                                           (rule "applyEq" (formula "41") (term "1,0,2,1,0,0,0") (ifseqformula "32"))
                                                                           (rule "applyEq" (formula "11") (term "1,0,1,1,1,0,0,0,0,0") (ifseqformula "32"))
                                                                           (rule "eqSymm" (formula "11") (term "0,0,0"))
                                                                           (rule "applyEq" (formula "22") (term "1,0,0,0,0,0") (ifseqformula "32"))
                                                                           (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "32"))
                                                                           (rule "close" (formula "34") (ifseqformula "18"))
                                                                        )
                                                                        (branch "x_arr_arr_2 = chosen FALSE"
                                                                           (rule "applyEqReverse" (formula "34") (term "2,0") (ifseqformula "33"))
                                                                           (rule "hideAuxiliaryEq" (formula "33"))
                                                                           (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "35"))
                                                                           (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "applyEqReverse" (formula "30") (term "0,0") (ifseqformula "33"))
                                                                           (rule "applyEqReverse" (formula "32") (term "1,2,1,0,0") (ifseqformula "33"))
                                                                           (rule "applyEqReverse" (formula "31") (term "0,1,1,0,0") (ifseqformula "33"))
                                                                           (rule "applyEqReverse" (formula "32") (term "0,1,1,0,0") (ifseqformula "33"))
                                                                           (rule "applyEqReverse" (formula "31") (term "1,2,1,0,0") (ifseqformula "33"))
                                                                           (rule "hideAuxiliaryEq" (formula "33"))
                                                                           (rule "replace_known_right" (formula "8") (term "0,0") (ifseqformula "34"))
                                                                           (builtin "One Step Simplification" (formula "8"))
                                                                           (rule "applyEqReverse" (formula "7") (term "0,1,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "4") (term "0,0,0,0,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "4") (term "1,0,1,0,1,0,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "4") (term "1,1,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "44") (term "1,2,1,0,0,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "6") (term "0,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "44") (term "0,1,1,0,0,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "44") (term "1,2,1,0,1,1,0,1") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "4") (term "1,0,0,0,1,0,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "37") (term "0,0,0,1") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "44") (term "0,1,1,0,0,1,0,1") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "3") (term "1,2,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "44") (term "0,1,1,0,1,1,0,1") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "44") (term "1,2,1,0,0,1,0,1") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "37") (term "0,0,0,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "7") (term "0,0,0,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "3") (term "1,0,0,1,0,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "3") (term "1,1,0") (ifseqformula "8"))
                                                                           (rule "hideAuxiliaryEq" (formula "8"))
                                                                           (rule "replace_known_right" (formula "34") (term "0") (ifseqformula "33"))
                                                                           (builtin "One Step Simplification" (formula "34"))
                                                                           (rule "false_right" (formula "34"))
                                                                           (rule "ifthenelse_to_or_right" (formula "10") (term "0,0,0"))
                                                                           (builtin "One Step Simplification" (formula "10"))
                                                                           (rule "nnf_notAnd" (formula "10") (term "0,0,0,0,0"))
                                                                           (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0,0,0,0"))
                                                                           (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0,0,0,0"))
                                                                           (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,0,0,0"))
                                                                           (rule "add_zero_left" (formula "10") (term "0,0,1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0,0,0,0"))
                                                                           (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0,0,0,0"))
                                                                           (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,0,0"))
                                                                           (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0,0"))
                                                                           (rule "nnf_notAnd" (formula "10") (term "0,1,1,0,0,0"))
                                                                           (rule "inEqSimp_notGeq" (formula "10") (term "0,0,1,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "10") (term "1,0,0,0,0,1,1,0,0,0"))
                                                                           (rule "add_zero_right" (formula "10") (term "0,0,0,0,1,1,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,1,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "10") (term "1,0,0,1,1,0,0,0"))
                                                                           (rule "inEqSimp_notLeq" (formula "10") (term "1,0,1,1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,1,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,1,1,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,1,1,0,0,0"))
                                                                           (rule "add_literals" (formula "10") (term "0,0,0,1,0,1,1,0,0,0"))
                                                                           (rule "add_zero_left" (formula "10") (term "0,0,1,0,1,1,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,1,1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,1,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "10") (term "1,1,0,1,1,0,0,0"))
                                                                           (rule "commute_or" (formula "10") (term "0,0"))
                                                                           (rule "commute_or_2" (formula "10") (term "0"))
                                                                           (rule "commute_or" (formula "10") (term "1,1,0"))
                                                                           (rule "commute_or_2" (formula "10") (term "0,1,0"))
                                                                           (rule "commute_or_2" (formula "10") (term "0,1,1,0"))
                                                                           (rule "commute_or" (formula "10") (term "0,0,1,0"))
                                                                           (rule "ifthenelse_to_or_right" (formula "11") (term "0,0,0"))
                                                                           (builtin "One Step Simplification" (formula "11"))
                                                                           (rule "nnf_notAnd" (formula "11") (term "0,0,0,0,0"))
                                                                           (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0,0,0,0"))
                                                                           (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,0,0,0"))
                                                                           (rule "add_literals" (formula "11") (term "0,0,0,1,0,0,0,0,0"))
                                                                           (rule "add_zero_left" (formula "11") (term "0,0,1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0,0,0,0"))
                                                                           (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0,0,0,0"))
                                                                           (rule "add_zero_right" (formula "11") (term "0,0,0,0,0,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,0,0,0"))
                                                                           (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0,0"))
                                                                           (rule "nnf_notAnd" (formula "11") (term "0,1,1,0,0,0"))
                                                                           (rule "inEqSimp_notGeq" (formula "11") (term "0,0,1,1,0,0,0"))
                                                                           (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,1,1,0,0,0"))
                                                                           (rule "add_zero_right" (formula "11") (term "0,0,0,0,1,1,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,1,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "11") (term "1,0,0,1,1,0,0,0"))
                                                                           (rule "inEqSimp_notLeq" (formula "11") (term "1,0,1,1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,1,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,1,1,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,1,1,0,0,0"))
                                                                           (rule "add_literals" (formula "11") (term "0,0,0,1,0,1,1,0,0,0"))
                                                                           (rule "add_zero_left" (formula "11") (term "0,0,1,0,1,1,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,1,1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,1,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "11") (term "1,1,0,1,1,0,0,0"))
                                                                           (rule "commute_or" (formula "11") (term "0,0"))
                                                                           (rule "commute_or_2" (formula "11") (term "0"))
                                                                           (rule "commute_or_2" (formula "11") (term "0,1,0"))
                                                                           (rule "commute_or" (formula "11") (term "1,1,0"))
                                                                           (rule "commute_or" (formula "10") (term "0,0,1,1,0"))
                                                                           (rule "commute_or" (formula "11") (term "0,0,1,0"))
                                                                           (rule "commute_or_2" (formula "11") (term "0,1,1,0"))
                                                                           (rule "commute_or" (formula "11") (term "0,0,1,1,0"))
                                                                           (rule "cnf_rightDist" (formula "10") (term "1,1,0"))
                                                                           (rule "commute_or_2" (formula "10") (term "0,1,1,0"))
                                                                           (rule "inEqSimp_or_tautInEq1" (formula "10") (term "0,0,1,1,0"))
                                                                           (rule "add_literals" (formula "10") (term "1,1,0,0,1,1,0"))
                                                                           (rule "qeq_literals" (formula "10") (term "1,0,0,1,1,0"))
                                                                           (builtin "One Step Simplification" (formula "10"))
                                                                           (rule "shift_paren_or" (formula "10") (term "1,1,0"))
                                                                           (rule "commute_or" (formula "10") (term "0,1,1,0"))
                                                                           (rule "inEqSimp_or_tautInEq1" (formula "10") (term "1,1,0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "10") (term "1,1,1,0"))
                                                                           (rule "polySimp_pullOutFactor1" (formula "10") (term "0,1,1,1,0"))
                                                                           (rule "add_literals" (formula "10") (term "1,0,1,1,1,0"))
                                                                           (rule "times_zero_1" (formula "10") (term "0,1,1,1,0"))
                                                                           (rule "leq_literals" (formula "10") (term "1,1,1,0"))
                                                                           (builtin "One Step Simplification" (formula "10"))
                                                                           (rule "commute_or_2" (formula "10") (term "0"))
                                                                           (rule "shift_paren_or" (formula "10") (term "0,0"))
                                                                           (rule "shift_paren_or" (formula "10") (term "0,0,0"))
                                                                           (rule "commute_or" (formula "10") (term "0,0,0,0"))
                                                                           (builtin "One Step Simplification" (formula "10"))
                                                                           (rule "cnf_rightDist" (formula "11") (term "1,1,0"))
                                                                           (rule "commute_or_2" (formula "11") (term "0,1,1,0"))
                                                                           (rule "inEqSimp_or_tautInEq1" (formula "11") (term "0,0,1,1,0"))
                                                                           (rule "add_zero_right" (formula "11") (term "1,1,0,0,1,1,0"))
                                                                           (rule "qeq_literals" (formula "11") (term "1,0,0,1,1,0"))
                                                                           (builtin "One Step Simplification" (formula "11"))
                                                                           (rule "shift_paren_or" (formula "11") (term "1,1,0"))
                                                                           (rule "commute_or" (formula "11") (term "0,1,1,0"))
                                                                           (rule "inEqSimp_or_tautInEq1" (formula "11") (term "1,1,0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "11") (term "1,1,1,0"))
                                                                           (rule "polySimp_pullOutFactor1" (formula "11") (term "0,1,1,1,0"))
                                                                           (rule "add_literals" (formula "11") (term "1,0,1,1,1,0"))
                                                                           (rule "times_zero_1" (formula "11") (term "0,1,1,1,0"))
                                                                           (rule "leq_literals" (formula "11") (term "1,1,1,0"))
                                                                           (builtin "One Step Simplification" (formula "11"))
                                                                           (rule "commute_or_2" (formula "11") (term "0"))
                                                                           (rule "shift_paren_or" (formula "11") (term "0,0"))
                                                                           (rule "shift_paren_or" (formula "11") (term "0,0,0"))
                                                                           (rule "commute_or" (formula "11") (term "0,0,0,0"))
                                                                           (builtin "One Step Simplification" (formula "11"))
                                                                           (rule "ifthenelse_split" (formula "7") (term "0"))
                                                                           (branch "chosen[j_2].length ≥ 1 TRUE"
                                                                              (rule "replace_known_left" (formula "36") (term "0,0") (ifseqformula "8"))
                                                                              (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "8")))
                                                                              (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "7"))
                                                                              (rule "leq_literals" (formula "6") (term "0"))
                                                                              (builtin "One Step Simplification" (formula "6"))
                                                                              (rule "true_left" (formula "6"))
                                                                              (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                              (branch "¬chosen[j_2] = null ∧ ¬chosen[j_2].<created> = TRUE TRUE"
                                                                                 (rule "andLeft" (formula "3"))
                                                                                 (rule "notLeft" (formula "3"))
                                                                                 (rule "notLeft" (formula "3"))
                                                                                 (rule "referencedObjectIsCreatedRight" (formula "33") (ifseqformula "34"))
                                                                                 (rule "close" (formula "33") (ifseqformula "16"))
                                                                              )
                                                                              (branch "¬chosen[j_2] = null ∧ ¬chosen[j_2].<created> = TRUE FALSE"
                                                                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                                                 (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "3"))
                                                                                 (rule "hideAuxiliaryEq" (formula "3"))
                                                                                 (rule "ifthenelse_to_or_left" (formula "9") (term "0,0,0,0"))
                                                                                 (rule "eqSymm" (formula "9") (term "1,1,0,0,0,0"))
                                                                                 (rule "nnf_notAnd" (formula "9") (term "0,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0,0,0,0,0"))
                                                                                 (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0,0,0,0,0"))
                                                                                 (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0,0,0"))
                                                                                 (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,0,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0,0,0,0,0"))
                                                                                 (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0,0,0,0,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,0,0,0,0"))
                                                                                 (rule "add_literals" (formula "9") (term "0,0,0,1,0,0,0,0,0,0"))
                                                                                 (rule "add_zero_left" (formula "9") (term "0,0,1,0,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,0,0,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0,0"))
                                                                                 (rule "commute_or" (formula "9") (term "0,0,0"))
                                                                                 (rule "commute_or_2" (formula "9") (term "0,0"))
                                                                                 (rule "commute_or_2" (formula "9") (term "0"))
                                                                                 (rule "commute_or" (formula "9") (term "1,1,0"))
                                                                                 (rule "commute_or_2" (formula "9") (term "0,1,0"))
                                                                                 (rule "commute_or" (formula "9") (term "0,0,1,0"))
                                                                                 (rule "cnf_rightDist" (formula "9") (term "1,1,0"))
                                                                                 (rule "cnf_rightDist" (formula "9") (term "0"))
                                                                                 (rule "distr_forallAnd" (formula "9"))
                                                                                 (rule "andLeft" (formula "9"))
                                                                                 (rule "commute_or" (formula "10") (term "0"))
                                                                                 (rule "commute_or_2" (formula "9") (term "0"))
                                                                                 (rule "commute_or" (formula "10") (term "1,1,0"))
                                                                                 (rule "shift_paren_or" (formula "9") (term "0,0"))
                                                                                 (rule "commute_or_2" (formula "9") (term "0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "9"))
                                                                                 (rule "cnf_rightDist" (formula "10") (term "0"))
                                                                                 (rule "distr_forallAnd" (formula "10"))
                                                                                 (rule "andLeft" (formula "10"))
                                                                                 (rule "commute_or_2" (formula "10") (term "0"))
                                                                                 (rule "shift_paren_or" (formula "11") (term "0"))
                                                                                 (rule "commute_or_2" (formula "10") (term "0,0"))
                                                                                 (rule "shift_paren_or" (formula "11") (term "0,0"))
                                                                                 (rule "commute_or_2" (formula "11") (term "0,0,0"))
                                                                                 (rule "inEqSimp_or_tautInEq1" (formula "11") (term "0,0"))
                                                                                 (rule "inEqSimp_homoInEq1" (formula "11") (term "1,0,0"))
                                                                                 (rule "polySimp_pullOutFactor1" (formula "11") (term "0,1,0,0"))
                                                                                 (rule "add_literals" (formula "11") (term "1,0,1,0,0"))
                                                                                 (rule "times_zero_1" (formula "11") (term "0,1,0,0"))
                                                                                 (rule "leq_literals" (formula "11") (term "1,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "11"))
                                                                                 (rule "true_left" (formula "11"))
                                                                                 (rule "shift_paren_or" (formula "9") (term "0,0,0"))
                                                                                 (rule "shift_paren_or" (formula "10") (term "0,0,0"))
                                                                                 (rule "commute_or" (formula "9") (term "0,0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "9"))
                                                                                 (rule "commute_or" (formula "10") (term "0,0,0,0"))
                                                                                 (rule "inEqSimp_or_tautInEq1" (formula "10") (term "0,0,0"))
                                                                                 (rule "add_zero_right" (formula "10") (term "1,1,0,0,0"))
                                                                                 (rule "qeq_literals" (formula "10") (term "1,0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "10"))
                                                                                 (rule "true_left" (formula "10"))
                                                                                 (rule "arrayLengthIsAShort" (formula "2") (term "0"))
                                                                                 (builtin "One Step Simplification" (formula "2"))
                                                                                 (rule "true_left" (formula "2"))
                                                                                 (rule "arrayLengthNotNegative" (formula "2") (term "0"))
                                                                                 (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "3"))
                                                                                 (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                                                                 (rule "qeq_literals" (formula "3"))
                                                                                 (rule "true_left" (formula "3"))
                                                                                 (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                                                                 (rule "leq_literals" (formula "3"))
                                                                                 (rule "true_left" (formula "3"))
                                                                                 (rule "ifthenelse_to_or_left" (formula "10") (term "0,0,0,0"))
                                                                                 (rule "eqSymm" (formula "10") (term "1,1,0,0,0,0"))
                                                                                 (rule "nnf_notAnd" (formula "10") (term "0,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0,0,0,0,0"))
                                                                                 (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,0,0,0,0"))
                                                                                 (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,0,0,0"))
                                                                                 (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,0,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0,0,0,0,0"))
                                                                                 (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0,0,0,0,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0,0,0,0,0"))
                                                                                 (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,0,0,0,0"))
                                                                                 (rule "add_zero_left" (formula "10") (term "0,0,1,0,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,0,0,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,0,0"))
                                                                                 (rule "commute_or" (formula "10") (term "0,0,0"))
                                                                                 (rule "commute_or_2" (formula "10") (term "0,0"))
                                                                                 (rule "commute_or_2" (formula "10") (term "0"))
                                                                                 (rule "commute_or_2" (formula "10") (term "0,1,0"))
                                                                                 (rule "commute_or" (formula "10") (term "1,1,0"))
                                                                                 (rule "commute_or" (formula "10") (term "0,0,1,0"))
                                                                                 (rule "arrayLengthNotNegative" (formula "1") (term "0"))
                                                                                 (rule "arrayLengthIsAShort" (formula "1") (term "0"))
                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "true_left" (formula "1"))
                                                                                 (rule "arrayLengthNotNegative" (formula "28") (term "0"))
                                                                                 (rule "arrayLengthIsAShort" (formula "28") (term "0"))
                                                                                 (builtin "One Step Simplification" (formula "28"))
                                                                                 (rule "true_left" (formula "28"))
                                                                                 (rule "lenNonNegative" (formula "30") (term "0"))
                                                                                 (rule "inEqSimp_commuteLeq" (formula "30"))
                                                                                 (rule "cnf_rightDist" (formula "10") (term "1,1,0"))
                                                                                 (rule "cnf_rightDist" (formula "10") (term "0"))
                                                                                 (rule "distr_forallAnd" (formula "10"))
                                                                                 (rule "andLeft" (formula "10"))
                                                                                 (rule "commute_or" (formula "11") (term "0"))
                                                                                 (rule "commute_or_2" (formula "10") (term "0"))
                                                                                 (rule "commute_or" (formula "11") (term "1,1,0"))
                                                                                 (rule "shift_paren_or" (formula "10") (term "0,0"))
                                                                                 (rule "commute_or_2" (formula "10") (term "0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "10"))
                                                                                 (rule "cnf_rightDist" (formula "11") (term "0"))
                                                                                 (rule "distr_forallAnd" (formula "11"))
                                                                                 (rule "andLeft" (formula "11"))
                                                                                 (rule "commute_or_2" (formula "11") (term "0"))
                                                                                 (rule "shift_paren_or" (formula "12") (term "0"))
                                                                                 (rule "commute_or_2" (formula "11") (term "0,0"))
                                                                                 (rule "shift_paren_or" (formula "12") (term "0,0"))
                                                                                 (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                                                                 (rule "inEqSimp_or_tautInEq1" (formula "12") (term "0,0"))
                                                                                 (rule "inEqSimp_homoInEq1" (formula "12") (term "1,0,0"))
                                                                                 (rule "polySimp_pullOutFactor1" (formula "12") (term "0,1,0,0"))
                                                                                 (rule "add_literals" (formula "12") (term "1,0,1,0,0"))
                                                                                 (rule "times_zero_1" (formula "12") (term "0,1,0,0"))
                                                                                 (rule "leq_literals" (formula "12") (term "1,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "12"))
                                                                                 (rule "true_left" (formula "12"))
                                                                                 (rule "shift_paren_or" (formula "10") (term "0,0,0"))
                                                                                 (rule "shift_paren_or" (formula "11") (term "0,0,0"))
                                                                                 (rule "lenNonNegative" (formula "43") (term "0,0"))
                                                                                 (rule "inEqSimp_commuteLeq" (formula "1"))
                                                                                 (rule "arrayLengthIsAShort" (formula "44") (term "1,1,0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "true_left" (formula "1"))
                                                                                 (rule "arrayLengthNotNegative" (formula "44") (term "1,1,0,0,0"))
                                                                                 (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "7"))
                                                                                 (rule "leq_literals" (formula "1") (term "0"))
                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "true_left" (formula "1"))
                                                                                 (rule "commute_or" (formula "11") (term "0,0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "11"))
                                                                                 (rule "commute_or" (formula "12") (term "0,0,0,0"))
                                                                                 (rule "inEqSimp_or_tautInEq1" (formula "12") (term "0,0,0"))
                                                                                 (rule "add_literals" (formula "12") (term "1,1,0,0,0"))
                                                                                 (rule "qeq_literals" (formula "12") (term "1,0,0,0"))
                                                                                 (builtin "One Step Simplification" (formula "12"))
                                                                                 (rule "true_left" (formula "12"))
                                                                                 (rule "allLeft" (formula "20") (inst "t=i_0"))
                                                                                 (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                                                                                 (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "12"))
                                                                                 (rule "qeq_literals" (formula "20") (term "0,1,0"))
                                                                                 (builtin "One Step Simplification" (formula "20"))
                                                                                 (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "9"))
                                                                                 (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                                                                                 (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                                                                                 (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                                                                                 (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                                                                                 (rule "add_zero_right" (formula "20") (term "0,0,1"))
                                                                                 (rule "leq_literals" (formula "20") (term "0,1"))
                                                                                 (builtin "One Step Simplification" (formula "20"))
                                                                                 (rule "notLeft" (formula "20"))
                                                                                 (rule "allLeft" (formula "24") (inst "t=j_2"))
                                                                                 (rule "replaceKnownSelect_taclet100111000000110001010_10" (formula "24") (term "0,0,0,0"))
                                                                                 (rule "replaceKnownAuxiliaryConstant_taclet100111000000110001010_11" (formula "24") (term "0,0,0,0"))
                                                                                 (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0") (ifseqformula "13"))
                                                                                 (rule "qeq_literals" (formula "24") (term "0,1,0"))
                                                                                 (builtin "One Step Simplification" (formula "24"))
                                                                                 (rule "inEqSimp_contradInEq0" (formula "24") (term "1") (ifseqformula "14"))
                                                                                 (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                                                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
                                                                                 (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1"))
                                                                                 (rule "mul_literals" (formula "24") (term "0,1,0,0,1"))
                                                                                 (rule "polySimp_addAssoc" (formula "24") (term "0,0,1"))
                                                                                 (rule "polySimp_addComm0" (formula "24") (term "0,0,0,1"))
                                                                                 (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                                                                 (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                                                                 (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                                                                 (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                                                                 (rule "leq_literals" (formula "24") (term "0,1"))
                                                                                 (builtin "One Step Simplification" (formula "24"))
                                                                                 (rule "notLeft" (formula "24"))
                                                                                 (rule "ifthenelse_split" (formula "4") (term "0"))
                                                                                 (branch " ¬chosen[j_2] = null ∧ ¬( chosen[j_2].<created> = TRUE ∨ (chosen[j_2]@heap).<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) TRUE"
                                                                                    (rule "andLeft" (formula "4"))
                                                                                    (rule "notLeft" (formula "5"))
                                                                                    (rule "notLeft" (formula "4"))
                                                                                    (rule "orRight" (formula "34"))
                                                                                    (rule "referencedObjectIsCreatedRight" (formula "34") (ifseqformula "33"))
                                                                                    (rule "close" (formula "34") (ifseqformula "16"))
                                                                                 )
                                                                                 (branch " ¬chosen[j_2] = null ∧ ¬( chosen[j_2].<created> = TRUE ∨ (chosen[j_2]@heap).<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) FALSE"
                                                                                    (rule "close" (formula "39") (ifseqformula "4"))
                                                                                 )
                                                                              )
                                                                           )
                                                                           (branch "chosen[j_2].length ≥ 1 FALSE"
                                                                              (rule "inEqSimp_geqRight" (formula "33"))
                                                                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                              (rule "add_literals" (formula "1") (term "0,0"))
                                                                              (rule "add_zero_left" (formula "1") (term "0"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "8"))
                                                                              (rule "mul_literals" (formula "8") (term "1,0"))
                                                                              (rule "add_zero_right" (formula "8") (term "0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                                                              (rule "mul_literals" (formula "8") (term "1"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "8") (ifseqformula "6"))
                                                                              (rule "qeq_literals" (formula "8") (term "0"))
                                                                              (builtin "One Step Simplification" (formula "8"))
                                                                              (rule "closeFalse" (formula "8"))
                                                                           )
                                                                        )
                                                                     )
                                                                  )
                                                                  (branch " x_arr_arr_2[j_2]@anon_heap_LOOP«anonHeapFunction».length ≥ 0 FALSE"
                                                                     (rule "replace_known_right" (formula "44") (term "0,1,1,0,0,1") (ifseqformula "43"))
                                                                     (builtin "One Step Simplification" (formula "44"))
                                                                     (rule "inEqSimp_geqRight" (formula "43"))
                                                                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "1") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                     (rule "mul_literals" (formula "1") (term "1"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "12") (term "0,1,1,0") (ifseqformula "1"))
                                                                     (rule "qeq_literals" (formula "12") (term "0,0,1,1,0"))
                                                                     (builtin "One Step Simplification" (formula "12"))
                                                                     (rule "inEqSimp_or_tautInEq0" (formula "44") (term "0,0,1"))
                                                                     (rule "add_zero_right" (formula "44") (term "1,1,0,0,1"))
                                                                     (rule "qeq_literals" (formula "44") (term "1,0,0,1"))
                                                                     (builtin "One Step Simplification" (formula "44"))
                                                                     (rule "commute_or" (formula "25") (term "0,0"))
                                                                     (rule "commute_or" (formula "21") (term "0,0"))
                                                                     (rule "commute_or" (formula "11") (term "0,0"))
                                                                     (rule "ifthenelse_split" (formula "7") (term "0"))
                                                                     (branch "x_arr_arr_2 = chosen ∧ chosen.length ≥ 1 + j_2 TRUE"
                                                                        (rule "andLeft" (formula "7"))
                                                                        (rule "applyEqReverse" (formula "10") (term "2,0") (ifseqformula "9"))
                                                                        (rule "hideAuxiliaryEq" (formula "9"))
                                                                        (rule "replace_known_left" (formula "35") (term "0,0") (ifseqformula "7"))
                                                                        (builtin "One Step Simplification" (formula "35"))
                                                                        (rule "applyEqReverse" (formula "33") (term "1,2,1,0,0") (ifseqformula "35"))
                                                                        (rule "applyEqReverse" (formula "32") (term "1,2,1,0,0") (ifseqformula "35"))
                                                                        (rule "applyEqReverse" (formula "32") (term "0,1,1,0,0") (ifseqformula "35"))
                                                                        (rule "applyEqReverse" (formula "31") (term "0,0") (ifseqformula "35"))
                                                                        (rule "applyEqReverse" (formula "33") (term "0,1,1,0,0") (ifseqformula "35"))
                                                                        (rule "hideAuxiliaryEq" (formula "35"))
                                                                        (rule "replace_known_left" (formula "34") (term "0,0") (ifseqformula "7"))
                                                                        (builtin "One Step Simplification" (formula "34"))
                                                                        (rule "hideAuxiliaryEq" (formula "34"))
                                                                        (rule "replace_known_left" (formula "9") (term "0,0") (ifseqformula "7"))
                                                                        (builtin "One Step Simplification" (formula "9"))
                                                                        (rule "applyEqReverse" (formula "3") (term "1,0,0,1,0,0") (ifseqformula "9"))
                                                                        (rule "applyEqReverse" (formula "4") (term "1,0,0,0,1,0,0") (ifseqformula "9"))
                                                                        (rule "applyEqReverse" (formula "43") (term "1,2,1,0,0") (ifseqformula "9"))
                                                                        (rule "applyEqReverse" (formula "3") (term "1,2,0") (ifseqformula "9"))
                                                                        (rule "applyEqReverse" (formula "4") (term "1,0,1,0,1,0,0") (ifseqformula "9"))
                                                                        (rule "applyEqReverse" (formula "4") (term "0,0,0,0,0") (ifseqformula "9"))
                                                                        (rule "applyEqReverse" (formula "36") (term "0,0,0,1") (ifseqformula "9"))
                                                                        (rule "applyEqReverse" (formula "43") (term "0,1,1,0,0") (ifseqformula "9"))
                                                                        (rule "applyEqReverse" (formula "36") (term "0,0,0,0") (ifseqformula "9"))
                                                                        (rule "applyEqReverse" (formula "3") (term "1,1,0") (ifseqformula "9"))
                                                                        (rule "applyEqReverse" (formula "6") (term "0,0,0,0") (ifseqformula "9"))
                                                                        (rule "applyEqReverse" (formula "4") (term "1,1,0") (ifseqformula "9"))
                                                                        (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "9"))
                                                                        (rule "applyEqReverse" (formula "6") (term "0,1,0") (ifseqformula "9"))
                                                                        (rule "hideAuxiliaryEq" (formula "9"))
                                                                        (rule "applyEq" (formula "23") (term "1,0,0,0,0") (ifseqformula "7"))
                                                                        (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "7"))
                                                                        (rule "applyEq" (formula "41") (term "0") (ifseqformula "7"))
                                                                        (rule "applyEq" (formula "12") (term "1,1,1,1,1,0,0") (ifseqformula "7"))
                                                                        (rule "applyEq" (formula "12") (term "1,0,1,0,1,0,0") (ifseqformula "7"))
                                                                        (rule "applyEq" (formula "12") (term "1,0,1,1,1,0,0,1,0,0") (ifseqformula "7"))
                                                                        (rule "eqSymm" (formula "12") (term "1,0,0"))
                                                                        (rule "applyEq" (formula "23") (term "1,0,0") (ifseqformula "7"))
                                                                        (rule "applyEq" (formula "25") (term "1,0,0,0,0,0") (ifseqformula "7"))
                                                                        (rule "applyEq" (formula "23") (term "1,0,0,0,0,0") (ifseqformula "7"))
                                                                        (rule "applyEq" (formula "23") (term "1,0,0,0,0,0,0,0") (ifseqformula "7"))
                                                                        (rule "applyEq" (formula "23") (term "0,1,0,0,0") (ifseqformula "7"))
                                                                        (rule "applyEq" (formula "41") (term "1,0,2,1,0,0") (ifseqformula "7"))
                                                                        (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "7"))
                                                                        (builtin "One Step Simplification" (formula "24"))
                                                                        (rule "true_left" (formula "24"))
                                                                        (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "7"))
                                                                        (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "7"))
                                                                        (rule "close" (formula "33") (ifseqformula "19"))
                                                                     )
                                                                     (branch "x_arr_arr_2 = chosen ∧ chosen.length ≥ 1 + j_2 FALSE"
                                                                        (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                                        (rule "hideAuxiliaryEq" (formula "7"))
                                                                        (rule "arrayLengthIsAShort" (formula "6") (term "1,0"))
                                                                        (builtin "One Step Simplification" (formula "6"))
                                                                        (rule "true_left" (formula "6"))
                                                                        (rule "arrayLengthNotNegative" (formula "6") (term "1,0"))
                                                                        (rule "commute_or" (formula "12") (term "0,0"))
                                                                        (rule "inEqSimp_or_tautInEq1" (formula "12") (term "0"))
                                                                        (rule "add_zero_right" (formula "12") (term "1,1,0"))
                                                                        (rule "qeq_literals" (formula "12") (term "1,0"))
                                                                        (builtin "One Step Simplification" (formula "12"))
                                                                        (rule "true_left" (formula "12"))
                                                                        (rule "ifthenelse_split" (formula "32") (term "0"))
                                                                        (branch "x_arr_arr_2 = chosen TRUE"
                                                                           (rule "applyEqReverse" (formula "34") (term "2,0") (ifseqformula "33"))
                                                                           (rule "hideAuxiliaryEq" (formula "33"))
                                                                           (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "32"))
                                                                           (builtin "One Step Simplification" (formula "8"))
                                                                           (rule "applyEqReverse" (formula "37") (term "0,0,0,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "3") (term "1,0,0,1,0,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "7") (term "0,1,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "44") (term "0,1,1,0,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "4") (term "1,0,0,0,1,0,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "37") (term "0,0,0,1") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "6") (term "0,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "3") (term "1,1,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "4") (term "0,0,0,0,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "44") (term "1,2,1,0,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "3") (term "1,2,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "4") (term "1,0,1,0,1,0,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "4") (term "1,1,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "7") (term "0,0,0,0") (ifseqformula "8"))
                                                                           (rule "hideAuxiliaryEq" (formula "8"))
                                                                           (rule "replace_known_left" (formula "32") (term "0,0") (ifseqformula "31"))
                                                                           (builtin "One Step Simplification" (formula "32"))
                                                                           (rule "applyEqReverse" (formula "30") (term "0,1,1,0,0") (ifseqformula "32"))
                                                                           (rule "applyEqReverse" (formula "29") (term "0,1,1,0,0") (ifseqformula "32"))
                                                                           (rule "applyEqReverse" (formula "28") (term "0,0") (ifseqformula "32"))
                                                                           (rule "applyEqReverse" (formula "30") (term "1,2,1,0,0") (ifseqformula "32"))
                                                                           (rule "applyEqReverse" (formula "29") (term "1,2,1,0,0") (ifseqformula "32"))
                                                                           (rule "hideAuxiliaryEq" (formula "32"))
                                                                           (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "31"))
                                                                           (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "inEqSimp_geqRight" (formula "33"))
                                                                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                           (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                           (rule "add_zero_left" (formula "1") (term "0,0"))
                                                                           (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "32"))
                                                                           (builtin "One Step Simplification" (formula "23"))
                                                                           (rule "true_left" (formula "23"))
                                                                           (rule "applyEq" (formula "22") (term "1,0,0,0,0,0") (ifseqformula "31"))
                                                                           (rule "applyEq" (formula "22") (term "0,1,0") (ifseqformula "31"))
                                                                           (rule "applyEq" (formula "22") (term "1,0,0,0,0,0,0,0") (ifseqformula "31"))
                                                                           (rule "applyEq" (formula "40") (term "0") (ifseqformula "31"))
                                                                           (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "31"))
                                                                           (rule "close" (formula "33") (ifseqformula "18"))
                                                                        )
                                                                        (branch "x_arr_arr_2 = chosen FALSE"
                                                                           (rule "applyEqReverse" (formula "33") (term "2,0") (ifseqformula "32"))
                                                                           (rule "hideAuxiliaryEq" (formula "32"))
                                                                           (rule "replace_known_right" (formula "8") (term "0,0") (ifseqformula "34"))
                                                                           (builtin "One Step Simplification" (formula "8"))
                                                                           (rule "applyEqReverse" (formula "37") (term "0,0,0,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "4") (term "1,1,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "4") (term "1,0,0,0,1,0,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "3") (term "1,1,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "6") (term "0,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "7") (term "0,1,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "3") (term "1,2,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "4") (term "0,0,0,0,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "37") (term "0,0,0,1") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "3") (term "1,0,0,1,0,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "4") (term "1,0,1,0,1,0,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "7") (term "0,0,0,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "44") (term "0,1,1,0,0") (ifseqformula "8"))
                                                                           (rule "applyEqReverse" (formula "44") (term "1,2,1,0,0") (ifseqformula "8"))
                                                                           (rule "hideAuxiliaryEq" (formula "8"))
                                                                           (rule "replace_known_right" (formula "31") (term "0,0") (ifseqformula "33"))
                                                                           (builtin "One Step Simplification" (formula "31"))
                                                                           (rule "applyEqReverse" (formula "28") (term "0,0") (ifseqformula "31"))
                                                                           (rule "applyEqReverse" (formula "30") (term "1,2,1,0,0") (ifseqformula "31"))
                                                                           (rule "applyEqReverse" (formula "29") (term "1,2,1,0,0") (ifseqformula "31"))
                                                                           (rule "applyEqReverse" (formula "30") (term "0,1,1,0,0") (ifseqformula "31"))
                                                                           (rule "applyEqReverse" (formula "29") (term "0,1,1,0,0") (ifseqformula "31"))
                                                                           (rule "hideAuxiliaryEq" (formula "31"))
                                                                           (rule "replace_known_right" (formula "33") (term "0") (ifseqformula "32"))
                                                                           (builtin "One Step Simplification" (formula "33"))
                                                                           (rule "false_right" (formula "33"))
                                                                           (rule "ifthenelse_to_or_right" (formula "10") (term "0,0,0"))
                                                                           (builtin "One Step Simplification" (formula "10"))
                                                                           (rule "nnf_notAnd" (formula "10") (term "0,0,0,0,0"))
                                                                           (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0,0,0,0"))
                                                                           (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0,0,0,0"))
                                                                           (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,0,0"))
                                                                           (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0,0"))
                                                                           (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0,0,0,0"))
                                                                           (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0,0,0,0"))
                                                                           (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,0,0,0"))
                                                                           (rule "add_zero_left" (formula "10") (term "0,0,1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,0"))
                                                                           (rule "nnf_notAnd" (formula "10") (term "0,1,1,0,0,0"))
                                                                           (rule "inEqSimp_notLeq" (formula "10") (term "1,0,1,1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,1,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,1,1,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,1,1,0,0,0"))
                                                                           (rule "add_literals" (formula "10") (term "0,0,0,1,0,1,1,0,0,0"))
                                                                           (rule "add_zero_left" (formula "10") (term "0,0,1,0,1,1,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,1,1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,1,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "10") (term "1,1,0,1,1,0,0,0"))
                                                                           (rule "inEqSimp_notGeq" (formula "10") (term "0,0,1,1,0,0,0"))
                                                                           (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,1,1,0,0,0"))
                                                                           (rule "add_zero_right" (formula "10") (term "0,0,0,0,1,1,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,1,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "10") (term "1,0,0,1,1,0,0,0"))
                                                                           (rule "commute_or" (formula "10") (term "0,0"))
                                                                           (rule "commute_or_2" (formula "10") (term "0"))
                                                                           (rule "commute_or" (formula "10") (term "1,1,0"))
                                                                           (rule "commute_or_2" (formula "10") (term "0,1,0"))
                                                                           (rule "commute_or_2" (formula "10") (term "0,1,1,0"))
                                                                           (rule "commute_or" (formula "10") (term "0,0,1,0"))
                                                                           (rule "commute_or" (formula "10") (term "0,0,1,1,0"))
                                                                           (rule "cnf_rightDist" (formula "10") (term "1,1,0"))
                                                                           (rule "commute_or_2" (formula "10") (term "0,1,1,0"))
                                                                           (rule "inEqSimp_or_tautInEq1" (formula "10") (term "0,0,1,1,0"))
                                                                           (rule "add_zero_right" (formula "10") (term "1,1,0,0,1,1,0"))
                                                                           (rule "qeq_literals" (formula "10") (term "1,0,0,1,1,0"))
                                                                           (builtin "One Step Simplification" (formula "10"))
                                                                           (rule "shift_paren_or" (formula "10") (term "1,1,0"))
                                                                           (rule "commute_or" (formula "10") (term "0,1,1,0"))
                                                                           (rule "inEqSimp_or_tautInEq1" (formula "10") (term "1,1,0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "10") (term "1,1,1,0"))
                                                                           (rule "polySimp_pullOutFactor1" (formula "10") (term "0,1,1,1,0"))
                                                                           (rule "add_literals" (formula "10") (term "1,0,1,1,1,0"))
                                                                           (rule "times_zero_1" (formula "10") (term "0,1,1,1,0"))
                                                                           (rule "leq_literals" (formula "10") (term "1,1,1,0"))
                                                                           (builtin "One Step Simplification" (formula "10"))
                                                                           (rule "commute_or_2" (formula "10") (term "0"))
                                                                           (rule "shift_paren_or" (formula "10") (term "0,0"))
                                                                           (rule "shift_paren_or" (formula "10") (term "0,0,0"))
                                                                           (rule "commute_or" (formula "10") (term "0,0,0,0"))
                                                                           (builtin "One Step Simplification" (formula "10"))
                                                                           (rule "ifthenelse_to_or_left" (formula "10") (term "0,0,0,0"))
                                                                           (rule "eqSymm" (formula "10") (term "1,1,0,0,0,0"))
                                                                           (rule "nnf_notAnd" (formula "10") (term "0,0,0,0,0,0"))
                                                                           (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,0,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0,0,0,0,0"))
                                                                           (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0,0,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0,0,0,0,0"))
                                                                           (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,0,0,0,0"))
                                                                           (rule "add_zero_left" (formula "10") (term "0,0,1,0,0,0,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,0,0"))
                                                                           (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0,0,0,0,0"))
                                                                           (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,0,0,0,0"))
                                                                           (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,0,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,0,0,0"))
                                                                           (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0,0,0"))
                                                                           (rule "commute_or" (formula "10") (term "0,0,0"))
                                                                           (rule "commute_or_2" (formula "10") (term "0,0"))
                                                                           (rule "commute_or_2" (formula "10") (term "0"))
                                                                           (rule "commute_or" (formula "10") (term "1,1,0"))
                                                                           (rule "commute_or_2" (formula "10") (term "0,1,0"))
                                                                           (rule "commute_or" (formula "10") (term "0,0,1,0"))
                                                                           (rule "cnf_rightDist" (formula "10") (term "1,1,0"))
                                                                           (rule "cnf_rightDist" (formula "10") (term "0"))
                                                                           (rule "distr_forallAnd" (formula "10"))
                                                                           (rule "andLeft" (formula "10"))
                                                                           (rule "commute_or_2" (formula "10") (term "0"))
                                                                           (rule "commute_or" (formula "11") (term "0"))
                                                                           (rule "shift_paren_or" (formula "10") (term "0,0"))
                                                                           (rule "commute_or" (formula "11") (term "1,1,0"))
                                                                           (rule "commute_or_2" (formula "10") (term "0,0,0"))
                                                                           (builtin "One Step Simplification" (formula "10"))
                                                                           (rule "cnf_rightDist" (formula "11") (term "0"))
                                                                           (rule "distr_forallAnd" (formula "11"))
                                                                           (rule "andLeft" (formula "11"))
                                                                           (rule "commute_or_2" (formula "11") (term "0"))
                                                                           (rule "shift_paren_or" (formula "12") (term "0"))
                                                                           (rule "commute_or_2" (formula "11") (term "0,0"))
                                                                           (rule "shift_paren_or" (formula "12") (term "0,0"))
                                                                           (rule "commute_or_2" (formula "12") (term "0,0,0"))
                                                                           (rule "inEqSimp_or_tautInEq1" (formula "12") (term "0,0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "12") (term "1,0,0"))
                                                                           (rule "polySimp_pullOutFactor1" (formula "12") (term "0,1,0,0"))
                                                                           (rule "add_literals" (formula "12") (term "1,0,1,0,0"))
                                                                           (rule "times_zero_1" (formula "12") (term "0,1,0,0"))
                                                                           (rule "leq_literals" (formula "12") (term "1,0,0"))
                                                                           (builtin "One Step Simplification" (formula "12"))
                                                                           (rule "true_left" (formula "12"))
                                                                           (rule "shift_paren_or" (formula "10") (term "0,0,0"))
                                                                           (rule "shift_paren_or" (formula "11") (term "0,0,0"))
                                                                           (rule "commute_or" (formula "10") (term "0,0,0,0"))
                                                                           (builtin "One Step Simplification" (formula "10"))
                                                                           (rule "commute_or" (formula "11") (term "0,0,0,0"))
                                                                           (rule "inEqSimp_or_tautInEq1" (formula "11") (term "0,0,0"))
                                                                           (rule "add_zero_right" (formula "11") (term "1,1,0,0,0"))
                                                                           (rule "qeq_literals" (formula "11") (term "1,0,0,0"))
                                                                           (builtin "One Step Simplification" (formula "11"))
                                                                           (rule "true_left" (formula "11"))
                                                                           (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                           (branch "¬chosen[j_2] = null ∧ ¬chosen[j_2].<created> = TRUE TRUE"
                                                                              (rule "andLeft" (formula "3"))
                                                                              (rule "notLeft" (formula "3"))
                                                                              (rule "notLeft" (formula "3"))
                                                                              (rule "referencedObjectIsCreatedRight" (formula "32") (ifseqformula "33"))
                                                                              (rule "close" (formula "32") (ifseqformula "15"))
                                                                           )
                                                                           (branch "¬chosen[j_2] = null ∧ ¬chosen[j_2].<created> = TRUE FALSE"
                                                                              (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                                              (rule "applyEqReverse" (formula "35") (term "1,0") (ifseqformula "3"))
                                                                              (rule "hideAuxiliaryEq" (formula "3"))
                                                                              (rule "ifthenelse_split" (formula "6") (term "0"))
                                                                              (branch "chosen[j_2].length ≥ 1 TRUE"
                                                                                 (rule "replace_known_left" (formula "35") (term "0,1") (ifseqformula "7"))
                                                                                 (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "7")))
                                                                                 (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "6"))
                                                                                 (rule "leq_literals" (formula "5") (term "0"))
                                                                                 (builtin "One Step Simplification" (formula "5"))
                                                                                 (rule "true_left" (formula "5"))
                                                                                 (rule "arrayLengthNotNegative" (formula "2") (term "0"))
                                                                                 (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "3"))
                                                                                 (rule "applyEq" (formula "4") (term "0") (ifseqformula "2"))
                                                                                 (rule "leq_literals" (formula "4"))
                                                                                 (rule "true_left" (formula "4"))
                                                                                 (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                                                                 (rule "qeq_literals" (formula "3"))
                                                                                 (rule "true_left" (formula "3"))
                                                                                 (rule "arrayLengthIsAShort" (formula "1") (term "0"))
                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "true_left" (formula "1"))
                                                                                 (rule "arrayLengthNotNegative" (formula "1") (term "0"))
                                                                                 (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                                                                                 (rule "qeq_literals" (formula "1") (term "0"))
                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "closeFalse" (formula "1"))
                                                                              )
                                                                              (branch "chosen[j_2].length ≥ 1 FALSE"
                                                                                 (rule "inEqSimp_geqRight" (formula "31"))
                                                                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                                 (rule "add_literals" (formula "1") (term "0,0"))
                                                                                 (rule "add_zero_left" (formula "1") (term "0"))
                                                                                 (rule "inEqSimp_homoInEq1" (formula "7"))
                                                                                 (rule "mul_literals" (formula "7") (term "1,0"))
                                                                                 (rule "add_zero_right" (formula "7") (term "0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                                                                 (rule "mul_literals" (formula "7") (term "1"))
                                                                                 (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "7"))
                                                                                 (rule "qeq_literals" (formula "5") (term "0"))
                                                                                 (builtin "One Step Simplification" (formula "5"))
                                                                                 (rule "closeFalse" (formula "5"))
                                                                              )
                                                                           )
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                         )
                                                         (branch "CUT: array2seq(heapAfter_concatenate[x_arr_arr_2[i_0] := result_0], electionID) = array2seq(anon_1, electionID) FALSE"
                                                            (rule "equalityToSeqGetAndSeqLenRight" (formula "27") (inst "iv=iv") (userinteraction))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (ifseqformula "16"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "1") (ifseqformula "23"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,1") (ifseqformula "16"))
                                                            (rule "orRight" (formula "29"))
                                                            (rule "eqSymm" (formula "1"))
                                                            (rule "eqSymm" (formula "20"))
                                                            (rule "eqSymm" (formula "25"))
                                                            (rule "eqSymm" (formula "39"))
                                                            (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "32"))
                                                            (builtin "One Step Simplification" (formula "11"))
                                                            (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "33"))
                                                            (builtin "One Step Simplification" (formula "12"))
                                                            (rule "replace_known_left" (formula "8") (term "0") (ifseqformula "10"))
                                                            (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "19")))
                                                            (rule "notLeft" (formula "8"))
                                                            (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "31"))
                                                            (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "29")) (ifInst ""  (formula "30")))
                                                            (rule "polySimp_elimSub" (formula "15") (term "2,1,0,0,0"))
                                                            (rule "mul_literals" (formula "15") (term "1,2,1,0,0,0"))
                                                            (rule "polySimp_elimSub" (formula "29") (term "2,1,0,0,0"))
                                                            (rule "mul_literals" (formula "29") (term "1,2,1,0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "3") (term "1"))
                                                            (rule "polySimp_addComm0" (formula "15") (term "2,1,0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "29") (term "2,1,0,0,0"))
                                                            (rule "inEqSimp_leqRight" (formula "38"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "inEqSimp_leqRight" (formula "37"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "inEqSimp_ltRight" (formula "38"))
                                                            (rule "times_zero_1" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_ltRight" (formula "36"))
                                                            (rule "times_zero_1" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "7"))
                                                            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "10"))
                                                            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1"))
                                                            (rule "dismissNonSelectedField" (formula "32") (term "0"))
                                                            (rule "array_store_known_dynamic_array_type" (formula "9") (ifseqformula "11"))
                                                            (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "34")))
                                                            (rule "true_left" (formula "9"))
                                                            (rule "inEqSimp_ltToLeq" (formula "6"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                            (rule "add_literals" (formula "6") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "6") (term "0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "5"))
                                                            (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "18"))
                                                            (rule "inEqSimp_commuteLeq" (formula "18"))
                                                            (rule "applyEq" (formula "30") (term "1,2,1,0,0") (ifseqformula "19"))
                                                            (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "19"))
                                                            (rule "applyEq" (formula "16") (term "1,2,1,0,0,0") (ifseqformula "18"))
                                                            (rule "applyEq" (formula "6") (term "0,1,0") (ifseqformula "18"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                            (rule "mul_literals" (formula "2") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                            (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                                            (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1"))
                                                            (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1"))
                                                            (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "1"))
                                                            (rule "polySimp_elimOne" (formula "5") (term "1"))
                                                            (rule "inEqSimp_strengthen0" (formula "5") (ifseqformula "26"))
                                                            (rule "inEqSimp_contradEq3" (formula "26") (ifseqformula "5"))
                                                            (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0"))
                                                            (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                                            (rule "add_literals" (formula "26") (term "0,0"))
                                                            (rule "qeq_literals" (formula "26") (term "0"))
                                                            (builtin "One Step Simplification" (formula "26"))
                                                            (rule "false_right" (formula "26"))
                                                            (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "2"))
                                                            (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
                                                            (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "15") (term "0,0"))
                                                            (rule "qeq_literals" (formula "15") (term "0"))
                                                            (builtin "One Step Simplification" (formula "15"))
                                                            (rule "true_left" (formula "15"))
                                                            (rule "array2seqDef" (formula "24") (term "0,0,0") (inst "u=u"))
                                                            (rule "lenOfSeqDef" (formula "24") (term "0,0"))
                                                            (rule "polySimp_elimSub" (formula "24") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "24") (term "1,1,0,0"))
                                                            (rule "add_zero_right" (formula "24") (term "1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
                                                            (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "24") (term "0,0,0,0"))
                                                            (rule "array2seqDef" (formula "24") (term "0,0,1,0,1") (inst "u=u"))
                                                            (rule "getOfSeqDef" (formula "24") (term "0,1,0,1"))
                                                            (rule "castDel" (formula "24") (term "2,0,1,0,1"))
                                                            (rule "castDel" (formula "24") (term "1,0,1,0,1"))
                                                            (rule "add_zero_right" (formula "24") (term "0,2,1,0,1,0,1"))
                                                            (rule "polySimp_elimSub" (formula "24") (term "1,1,0,0,1,0,1"))
                                                            (rule "mul_literals" (formula "24") (term "1,1,1,0,0,1,0,1"))
                                                            (rule "add_zero_right" (formula "24") (term "1,1,0,0,1,0,1"))
                                                            (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,0,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1,0,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0,1"))
                                                            (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0,1"))
                                                            (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,0,1"))
                                                            (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,0,1"))
                                                            (rule "nonNull" (formula "12") (inst "i=i_1"))
                                                            (rule "greater_literals" (formula "12") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "29")))
                                                            (rule "sub_literals" (formula "12") (term "2,1,0"))
                                                            (builtin "One Step Simplification" (formula "12"))
                                                            (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "8") (ifseqformula "29"))
                                                            (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                                            (rule "array2seqDef" (formula "24") (term "0,1,1,0,1") (inst "u=u"))
                                                            (rule "eqSymm" (formula "24") (term "1,0,1"))
                                                            (rule "getOfSeqDef" (formula "24") (term "0,1,0,1"))
                                                            (rule "castDel" (formula "24") (term "2,0,1,0,1"))
                                                            (rule "castDel" (formula "24") (term "1,0,1,0,1"))
                                                            (rule "add_zero_right" (formula "24") (term "0,2,1,0,1,0,1"))
                                                            (rule "polySimp_elimSub" (formula "24") (term "1,1,0,0,1,0,1"))
                                                            (rule "mul_literals" (formula "24") (term "1,1,1,0,0,1,0,1"))
                                                            (rule "add_zero_right" (formula "24") (term "1,1,0,0,1,0,1"))
                                                            (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1,0,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1,0,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1,0,1"))
                                                            (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1,0,1"))
                                                            (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1,0,1"))
                                                            (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1,0,1"))
                                                            (rule "eqSymm" (formula "24") (term "1,0,1"))
                                                            (rule "array2seqDef" (formula "24") (term "0,1,0") (inst "u=u"))
                                                            (rule "eqSymm" (formula "24") (term "0"))
                                                            (rule "lenOfSeqDef" (formula "24") (term "0,0"))
                                                            (rule "polySimp_elimSub" (formula "24") (term "1,0,0"))
                                                            (rule "times_zero_2" (formula "24") (term "1,1,0,0"))
                                                            (rule "add_zero_right" (formula "24") (term "1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
                                                            (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "24") (term "0,0,0,0"))
                                                            (builtin "One Step Simplification" (formula "24"))
                                                            (rule "allRight" (formula "24") (inst "sk=iv_9"))
                                                            (rule "impRight" (formula "24"))
                                                            (rule "andLeft" (formula "1"))
                                                            (rule "replace_known_left" (formula "26") (term "0,0,0") (ifseqformula "1"))
                                                            (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "1")))
                                                            (rule "inEqSimp_homoInEq0" (formula "2"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "26") (term "0,1"))
                                                            (rule "polySimp_addComm1" (formula "26") (term "0,0,1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "26") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "26") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                            (rule "mul_literals" (formula "2") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "26") (term "1,0,1"))
                                                            (rule "polySimp_rightDist" (formula "26") (term "1,0,1"))
                                                            (rule "mul_literals" (formula "26") (term "0,1,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,1"))
                                                            (rule "polySimp_elimOne" (formula "26") (term "1,1,0,1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "26") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "26") (term "0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                                                            (rule "array2seqDef" (formula "5") (term "0") (inst "u=u"))
                                                            (rule "array2seqDef" (formula "5") (term "1") (inst "u=u"))
                                                            (rule "array2seqDef" (formula "18") (term "1") (inst "u=u"))
                                                            (rule "eqSymm" (formula "18"))
                                                            (rule "array2seqDef" (formula "23") (term "1,0") (inst "u=u"))
                                                            (rule "array2seqDef" (formula "23") (term "0,0") (inst "u=u"))
                                                            (rule "array2seqDef" (formula "23") (term "1") (inst "u=u"))
                                                            (rule "equalityToSeqGetAndSeqLenRight" (formula "33") (inst "iv=iv"))
                                                            (rule "lenOfSeqDefEQ" (formula "33") (term "1,0") (ifseqformula "18"))
                                                            (rule "eqSymm" (formula "33") (term "0"))
                                                            (rule "polySimp_elimSub" (formula "33") (term "1,0,0"))
                                                            (rule "times_zero_2" (formula "33") (term "1,1,0,0"))
                                                            (rule "add_zero_right" (formula "33") (term "1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,1"))
                                                            (rule "mul_literals" (formula "33") (term "0,1,1,0,0,1"))
                                                            (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,1"))
                                                            (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=java_lang_Object_created__20"))
                                                            (rule "simplifySelectOfMemset" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "simplifySelectOfStore" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "simplifySelectOfStore" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "simplifySelectOfStore" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "simplifySelectOfCreate" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                                                            (rule "castDel" (formula "1") (term "1,0"))
                                                            (rule "eqSymm" (formula "1") (term "0,0"))
                                                            (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                                            (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "30"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                                                            (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "1"))
                                                            (rule "hideAuxiliaryEq" (formula "1"))
                                                            (rule "array2seqDef" (formula "2") (term "0,0") (inst "u=u"))
                                                            (rule "lenOfSeqDef" (formula "2") (term "0"))
                                                            (rule "polySimp_elimSub" (formula "2") (term "1,0"))
                                                            (rule "times_zero_2" (formula "2") (term "1,1,0"))
                                                            (rule "add_zero_right" (formula "2") (term "1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0"))
                                                            (rule "add_zero_right" (formula "2") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                                                            (rule "eqSeqDef" (formula "5") (inst "iv=iv"))
                                                            (rule "andLeft" (formula "5"))
                                                            (rule "getOfSeqDef" (formula "6") (term "0,1,0"))
                                                            (rule "castDel" (formula "6") (term "1,0,1,0"))
                                                            (rule "castDel" (formula "6") (term "2,0,1,0"))
                                                            (rule "add_zero_right" (formula "6") (term "0,2,1,0,1,0"))
                                                            (rule "eqSymm" (formula "6") (term "1,0"))
                                                            (rule "polySimp_elimSub" (formula "6") (term "1,1,0,1,1,0"))
                                                            (rule "times_zero_2" (formula "6") (term "1,1,1,0,1,1,0"))
                                                            (rule "add_zero_right" (formula "6") (term "1,1,0,1,1,0"))
                                                            (rule "lenOfSeqDef" (formula "5") (term "1"))
                                                            (rule "polySimp_elimSub" (formula "5") (term "1,1"))
                                                            (rule "times_zero_2" (formula "5") (term "1,1,1"))
                                                            (rule "add_zero_right" (formula "5") (term "1,1"))
                                                            (rule "lenOfSeqDef" (formula "5") (term "0"))
                                                            (rule "polySimp_elimSub" (formula "5") (term "1,0"))
                                                            (rule "times_zero_2" (formula "5") (term "1,1,0"))
                                                            (rule "add_zero_right" (formula "5") (term "1,0"))
                                                            (rule "lenOfSeqDef" (formula "6") (term "1,1,0,0"))
                                                            (rule "polySimp_elimSub" (formula "6") (term "1,1,1,0,0"))
                                                            (rule "times_zero_2" (formula "6") (term "1,1,1,1,0,0"))
                                                            (rule "add_zero_right" (formula "6") (term "1,1,1,0,0"))
                                                            (rule "getOfSeqDef" (formula "6") (term "0,1,0"))
                                                            (rule "castDel" (formula "6") (term "2,0,1,0"))
                                                            (rule "castDel" (formula "6") (term "1,0,1,0"))
                                                            (rule "add_zero_right" (formula "6") (term "0,2,1,0,1,0"))
                                                            (rule "eqSymm" (formula "6") (term "1,0"))
                                                            (rule "polySimp_elimSub" (formula "6") (term "1,1,0,1,1,0"))
                                                            (rule "mul_literals" (formula "6") (term "1,1,1,0,1,1,0"))
                                                            (rule "add_zero_right" (formula "6") (term "1,1,0,1,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "5") (term "0,1"))
                                                            (rule "add_zero_right" (formula "5") (term "0,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1"))
                                                            (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0"))
                                                            (rule "add_zero_right" (formula "5") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "6") (term "0,1,1,0,0"))
                                                            (rule "add_zero_right" (formula "6") (term "0,0,1,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0,1,0"))
                                                            (rule "eqSymm" (formula "6") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,1,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0,1,0"))
                                                            (rule "eqSymm" (formula "6") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,1,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,1,1,0"))
                                                            (rule "apply_eq_monomials" (formula "6") (term "1,0,0,1,0,0") (ifseqformula "5"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "6") (term "1,0,1,0,0,1,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "6") (term "1,0,0,1,0,0"))
                                                            (rule "add_literals" (formula "6") (term "1,1,1,0,0,1,0,0"))
                                                            (rule "times_zero_1" (formula "6") (term "1,1,0,0,1,0,0"))
                                                            (rule "add_zero_right" (formula "6") (term "1,0,0,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "0,0,1"))
                                                            (rule "polySimp_elimOne" (formula "5") (term "0,0,1"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "5") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0,1,0"))
                                                            (rule "eqSymm" (formula "6") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "1,1,0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,1,1,0"))
                                                            (rule "mul_literals" (formula "6") (term "0,1,1,0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,1,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0,0,1,0,0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0,1,0,0,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "6") (term "0,0,0,1,0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0,1,0"))
                                                            (rule "eqSymm" (formula "6") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "1,1,0,1,1,0"))
                                                            (rule "mul_literals" (formula "6") (term "0,1,1,0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,1,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "6") (term "0,1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0"))
                                                            (rule "array2seqDef" (formula "19") (term "1,1") (inst "u=u"))
                                                            (rule "array2seqDef" (formula "19") (term "0,1") (inst "u=u"))
                                                            (rule "eqSeqDef" (formula "24") (inst "iv=iv"))
                                                            (rule "andLeft" (formula "24"))
                                                            (rule "getOfSeqDef" (formula "25") (term "1,1,0"))
                                                            (rule "castDel" (formula "25") (term "2,1,1,0"))
                                                            (rule "castDel" (formula "25") (term "1,1,1,0"))
                                                            (rule "add_zero_right" (formula "25") (term "0,2,1,1,1,0"))
                                                            (rule "polySimp_elimSub" (formula "25") (term "1,1,0,1,1,0"))
                                                            (rule "times_zero_2" (formula "25") (term "1,1,1,0,1,1,0"))
                                                            (rule "add_zero_right" (formula "25") (term "1,1,0,1,1,0"))
                                                            (rule "lenOfSeqDef" (formula "24") (term "1"))
                                                            (rule "polySimp_elimSub" (formula "24") (term "1,1"))
                                                            (rule "mul_literals" (formula "24") (term "1,1,1"))
                                                            (rule "add_zero_right" (formula "24") (term "1,1"))
                                                            (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "25") (term "0,1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,1,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "24") (term "0,1"))
                                                            (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,1,1,0"))
                                                            (rule "apply_eq_monomials" (formula "25") (term "1,0,1,0,0") (ifseqformula "24"))
                                                            (rule "polySimp_rightDist" (formula "25") (term "0,1,0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "25") (term "1,0,1,0,1,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "25") (term "1,0,1,0,0"))
                                                            (rule "add_literals" (formula "25") (term "1,1,1,0,1,0,0"))
                                                            (rule "times_zero_1" (formula "25") (term "1,1,0,1,0,0"))
                                                            (rule "add_zero_right" (formula "25") (term "1,0,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "25") (term "0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "25") (term "1,1,0,1,1,0"))
                                                            (rule "mul_literals" (formula "25") (term "0,1,1,0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,1,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "24") (term "0,0,1"))
                                                            (rule "polySimp_elimOne" (formula "24") (term "0,0,1"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,0,1,0,0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0,1,0,0,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "25") (term "0,0,0,1,0,0,1,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                                            (rule "array2seqDef" (formula "35") (term "1,0,1,1,0,1") (inst "u=u"))
                                                            (rule "eqSymm" (formula "35") (term "1,0,1"))
                                                            (rule "array2seqDef" (formula "35") (term "1,0,1,0") (inst "u=u"))
                                                            (rule "eqSymm" (formula "35") (term "0"))
                                                            (rule "array2seqDef" (formula "35") (term "0,0,1,1,1,0,0,1") (inst "u=u"))
                                                            (rule "inEqSimp_homoInEq0" (formula "35") (term "1,0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "35") (term "0,1,0,0,1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,1"))
                                                            (rule "mul_literals" (formula "35") (term "0,1,1,0,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,1"))
                                                            (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,1"))
                                                            (rule "pullOutSelect" (formula "28") (term "1,1") (inst "selectSK=arr_70"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                                                            (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                                            (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "35"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                                                            (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                            (rule "dismissNonSelectedField" (formula "1") (term "1,0"))
                                                            (rule "dismissNonSelectedField" (formula "1") (term "0,0,0"))
                                                            (rule "narrowSelectArrayType" (formula "1") (term "2,0") (ifseqformula "17") (ifseqformula "33"))
                                                            (rule "pullOutSelect" (formula "29") (term "1,0") (inst "selectSK=arr_71"))
                                                            (rule "simplifySelectOfStore" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "castDel" (formula "1") (term "1,0"))
                                                            (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                            (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                            (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                                            (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "34"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                                                            (rule "replaceKnownSelect_taclet10111000000110001010_7" (formula "1") (term "2,0"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "19"))
                                                            (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,0"))
                                                            (rule "narrowSelectArrayType" (formula "1") (term "1,0") (ifseqformula "23") (ifseqformula "34"))
                                                            (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                            (rule "pullOutSelect" (formula "21") (term "0,1,0") (inst "selectSK=arr_72"))
                                                            (rule "applyEq" (formula "7") (term "0,0,0,1") (ifseqformula "21"))
                                                            (rule "applyEq" (formula "8") (term "0,1,1,1,0,1,1,0") (ifseqformula "21"))
                                                            (rule "applyEq" (formula "38") (term "0,1,1,0") (ifseqformula "21"))
                                                            (rule "applyEq" (formula "38") (term "0,0,0,1,0") (ifseqformula "21"))
                                                            (rule "applyEq" (formula "8") (term "0,1,1,1,1,0,0") (ifseqformula "21"))
                                                            (rule "applyEq" (formula "7") (term "0,1,1") (ifseqformula "21"))
                                                            (rule "applyEq" (formula "8") (term "1,1,1,1,0") (ifseqformula "21"))
                                                            (rule "applyEq" (formula "22") (term "1,2,0") (ifseqformula "21"))
                                                            (rule "applyEq" (formula "8") (term "0,0,0,1,1,1,0,0") (ifseqformula "21"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "21") (ifseqformula "19"))
                                                            (builtin "One Step Simplification" (formula "21"))
                                                            (rule "applyEqReverse" (formula "7") (term "0,0,0,1") (ifseqformula "21"))
                                                            (rule "applyEqReverse" (formula "8") (term "0,1,1,1,0,1,1,0") (ifseqformula "21"))
                                                            (rule "applyEqReverse" (formula "38") (term "0,1,1,0") (ifseqformula "21"))
                                                            (rule "applyEqReverse" (formula "22") (term "0,1,0") (ifseqformula "21"))
                                                            (rule "applyEqReverse" (formula "38") (term "0,0,0,1,0") (ifseqformula "21"))
                                                            (rule "applyEqReverse" (formula "8") (term "0,1,1,1,1,0,0") (ifseqformula "21"))
                                                            (rule "applyEqReverse" (formula "7") (term "0,1,1") (ifseqformula "21"))
                                                            (rule "applyEqReverse" (formula "8") (term "1,1,1,1,0") (ifseqformula "21"))
                                                            (rule "applyEqReverse" (formula "22") (term "1,2,0") (ifseqformula "21"))
                                                            (rule "applyEqReverse" (formula "8") (term "0,0,0,1,1,1,0,0") (ifseqformula "21"))
                                                            (rule "hideAuxiliaryEq" (formula "21"))
                                                            (rule "eqSymm" (formula "21"))
                                                            (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "10"))
                                                            (rule "times_zero_1" (formula "9") (term "0,0"))
                                                            (rule "add_zero_left" (formula "9") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                            (rule "mul_literals" (formula "9") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "9"))
                                                            (rule "leq_literals" (formula "12") (term "0"))
                                                            (builtin "One Step Simplification" (formula "12"))
                                                            (rule "true_left" (formula "12"))
                                                            (rule "pullOutSelect" (formula "7") (term "0,1,0") (inst "selectSK=arr_73"))
                                                            (rule "applyEq" (formula "9") (term "1,1,0,1,0") (ifseqformula "7"))
                                                            (rule "applyEq" (formula "8") (term "0,0,0,0") (ifseqformula "7"))
                                                            (rule "applyEq" (formula "9") (term "0,1,1,1,0,0,1,0") (ifseqformula "7"))
                                                            (rule "simplifySelectOfStore" (formula "7"))
                                                            (builtin "One Step Simplification" (formula "7"))
                                                            (rule "castDel" (formula "7") (term "1,0"))
                                                            (rule "eqSymm" (formula "8"))
                                                            (rule "eqSymm" (formula "9") (term "1,0"))
                                                            (rule "eqSymm" (formula "7") (term "0,0"))
                                                            (rule "applyEq" (formula "9") (term "1,1,1,0,0") (ifseqformula "8"))
                                                            (rule "inEqSimp_contradEq3" (formula "7") (term "0,0") (ifseqformula "12"))
                                                            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "7") (term "1,1,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "7") (term "1,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "7") (term "0,0,0,0"))
                                                            (rule "qeq_literals" (formula "7") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "7"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "7") (ifseqformula "25"))
                                                            (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "37")))
                                                            (rule "replaceKnownSelect_taclet10111000000110001010_10" (formula "7") (term "2,0"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet10111000000110001010_11" (formula "7") (term "2,0"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "7") (term "0,0,0") (ifseqformula "20"))
                                                            (rule "dismissNonSelectedField" (formula "7") (term "0,0,0,0,0"))
                                                            (rule "ifthenelse_negated" (formula "7") (term "0"))
                                                            (rule "array2seqDef" (formula "38") (term "1,0,1,1,0,1") (inst "u=u"))
                                                            (rule "eqSymm" (formula "38") (term "1,0,1"))
                                                            (rule "array2seqDef" (formula "38") (term "0,0,0,0") (inst "u=u"))
                                                            (rule "array2seqDef" (formula "38") (term "1,0,0,1,0,0,1") (inst "u=u"))
                                                            (rule "pullOutSelect" (formula "27") (term "1,2,1,0,0") (inst "selectSK=arr_74"))
                                                            (rule "applyEq" (formula "28") (term "0,1,1,0,0") (ifseqformula "27"))
                                                            (rule "applyEq" (formula "29") (term "1,2,1,0,0,1,0") (ifseqformula "27"))
                                                            (rule "applyEq" (formula "29") (term "0,1,1,0,0,1,0") (ifseqformula "27"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "20"))
                                                            (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "37")))
                                                            (rule "eqSymm" (formula "27") (term "0,0,0"))
                                                            (rule "dismissNonSelectedField" (formula "27") (term "0,0,1,0,0"))
                                                            (rule "dismissNonSelectedField" (formula "27") (term "2,0"))
                                                            (rule "eqSeqDef" (formula "22") (inst "iv=iv"))
                                                            (rule "andLeft" (formula "22"))
                                                            (rule "lenOfSeqDef" (formula "22") (term "1"))
                                                            (rule "polySimp_elimSub" (formula "22") (term "1,1"))
                                                            (rule "times_zero_2" (formula "22") (term "1,1,1"))
                                                            (rule "add_zero_right" (formula "22") (term "1,1"))
                                                            (rule "getOfSeqDef" (formula "23") (term "1,1,0"))
                                                            (rule "castDel" (formula "23") (term "1,1,1,0"))
                                                            (rule "castDel" (formula "23") (term "2,1,1,0"))
                                                            (rule "add_zero_right" (formula "23") (term "0,2,1,1,1,0"))
                                                            (rule "polySimp_elimSub" (formula "23") (term "1,1,0,1,1,0"))
                                                            (rule "times_zero_2" (formula "23") (term "1,1,1,0,1,1,0"))
                                                            (rule "add_zero_right" (formula "23") (term "1,1,0,1,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "23") (term "0,1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1"))
                                                            (rule "add_zero_right" (formula "22") (term "0,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1"))
                                                            (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,1,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,1,1,0"))
                                                            (rule "apply_eq_monomials" (formula "23") (term "1,0,1,0,0") (ifseqformula "22"))
                                                            (rule "polySimp_rightDist" (formula "23") (term "0,1,0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,1,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "23") (term "1,0,1,0,0"))
                                                            (rule "add_literals" (formula "23") (term "1,1,1,0,1,0,0"))
                                                            (rule "times_zero_1" (formula "23") (term "1,1,0,1,0,0"))
                                                            (rule "add_zero_right" (formula "23") (term "1,0,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "23") (term "0,1,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "22") (term "0,0,1"))
                                                            (rule "polySimp_elimOne" (formula "22") (term "0,0,1"))
                                                            (rule "applyEq" (formula "22") (term "1") (ifseqformula "8"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "23") (term "1,1,0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,1,1,0"))
                                                            (rule "mul_literals" (formula "23") (term "0,1,1,0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,1,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0,1,0,0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,1,0,0,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "23") (term "0,0,0,1,0,0,1,0,0"))
                                                            (rule "applyEq" (formula "23") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                                                            (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                                                            (rule "array2seqDef" (formula "40") (term "0,0,0,1,0,1") (inst "u=u"))
                                                            (rule "array2seqDef" (formula "40") (term "0,0,1,1,0,1") (inst "u=u"))
                                                            (rule "pullOutSelect" (formula "40") (term "1,2,1,0,0,0") (inst "selectSK=arr_75"))
                                                            (rule "applyEq" (formula "41") (term "0,1,1,0,0,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "41") (term "1,2,1,0,0,1,0,1") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "41") (term "0,1,1,0,0,1,0,0,1") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "41") (term "1,2,1,0,0,1,0,0,1") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "41") (term "0,1,1,0,0,1,0,1") (ifseqformula "1"))
                                                            (rule "simplifySelectOfStore" (formula "1"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "castDel" (formula "1") (term "1,0"))
                                                            (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                            (rule "inEqSimp_contradEq3" (formula "1") (term "1,0,0") (ifseqformula "13"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                                                            (rule "qeq_literals" (formula "1") (term "0,1,0,0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "21"))
                                                            (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                            (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                            (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_76"))
                                                            (rule "simplifySelectOfMemset" (formula "3"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                                                            (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                                            (rule "sortsDisjointModuloNull" (formula "3") (term "0,0,0,0"))
                                                            (rule "replace_known_right" (formula "3") (term "1,0,0,0,0") (ifseqformula "41"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "39")))
                                                            (rule "simplifySelectOfStore" (formula "3"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "simplifySelectOfStore" (formula "3"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "simplifySelectOfCreate" (formula "3"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "41")))
                                                            (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "15") (ifseqformula "38"))
                                                            (rule "pullOutSelect" (formula "3") (term "0,0,0") (inst "selectSK=java_lang_Object_created__21"))
                                                            (rule "applyEq" (formula "2") (term "0,0,0,0") (ifseqformula "3"))
                                                            (rule "simplifySelectOfMemset" (formula "3"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "simplifySelectOfStore" (formula "3"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "simplifySelectOfStore" (formula "3"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "simplifySelectOfStore" (formula "3"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "simplifySelectOfCreate" (formula "3"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "41")))
                                                            (rule "castDel" (formula "3") (term "1,0"))
                                                            (rule "eqSymm" (formula "3") (term "0,0"))
                                                            (rule "sortsDisjointModuloNull" (formula "3") (term "0,0"))
                                                            (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "41"))
                                                            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "39")))
                                                            (rule "applyEqReverse" (formula "2") (term "0,0,0,0") (ifseqformula "3"))
                                                            (rule "applyEqReverse" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "16"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "applyEqReverse" (formula "34") (term "1,1") (ifseqformula "3"))
                                                            (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "15"))
                                                            (builtin "One Step Simplification" (formula "2"))
                                                            (rule "applyEqReverse" (formula "33") (term "1,0") (ifseqformula "2"))
                                                            (builtin "One Step Simplification" (formula "33"))
                                                            (rule "closeTrue" (formula "33"))
                                                         )
                                                      )
                                                      (branch "CUT: array2seq(anon_1, x_arr_arr_2[j_2]@anon_1) = array2seq(heapAfter_concatenate[x_arr_arr_2[i_0] := result_0], x_arr_arr_2[j_2]@heapAfter_concatenate[x_arr_arr_2[i_0] := result_0]) FALSE"
                                                         (rule "equalityToSeqGetAndSeqLenRight" (formula "26") (inst "iv=iv") (userinteraction))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (ifseqformula "15"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "1") (ifseqformula "22"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "0,1") (ifseqformula "15"))
                                                         (rule "orRight" (formula "28"))
                                                         (rule "eqSymm" (formula "19"))
                                                         (rule "eqSymm" (formula "26") (term "0"))
                                                         (rule "eqSymm" (formula "38"))
                                                         (rule "eqSymm" (formula "26") (term "1,0,1"))
                                                         (rule "eqSymm" (formula "24"))
                                                         (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "31"))
                                                         (builtin "One Step Simplification" (formula "10"))
                                                         (rule "replace_known_left" (formula "7") (term "1,1") (ifseqformula "18"))
                                                         (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "9")))
                                                         (rule "notLeft" (formula "7"))
                                                         (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "32"))
                                                         (builtin "One Step Simplification" (formula "10"))
                                                         (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "30"))
                                                         (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "28")) (ifInst ""  (formula "29")))
                                                         (rule "polySimp_elimSub" (formula "14") (term "2,1,0,0,0"))
                                                         (rule "mul_literals" (formula "14") (term "1,2,1,0,0,0"))
                                                         (rule "polySimp_elimSub" (formula "28") (term "2,1,0,0,0"))
                                                         (rule "mul_literals" (formula "28") (term "1,2,1,0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "2") (term "1"))
                                                         (rule "polySimp_addComm0" (formula "14") (term "2,1,0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "28") (term "2,1,0,0,0"))
                                                         (rule "inEqSimp_ltRight" (formula "36"))
                                                         (rule "times_zero_1" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_ltRight" (formula "33"))
                                                         (rule "times_zero_1" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_leqRight" (formula "36"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_leqRight" (formula "36"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "6"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "9"))
                                                         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                         (rule "dismissNonSelectedField" (formula "31") (term "0"))
                                                         (rule "array_store_known_dynamic_array_type" (formula "8") (ifseqformula "10"))
                                                         (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "33")))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "inEqSimp_ltToLeq" (formula "5"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                         (rule "add_literals" (formula "5") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "5") (term "0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "18"))
                                                         (rule "inEqSimp_commuteLeq" (formula "17"))
                                                         (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "4"))
                                                         (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                                                         (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "18"))
                                                         (rule "applyEq" (formula "28") (term "1,2,1,0,0") (ifseqformula "17"))
                                                         (rule "applyEq" (formula "15") (term "1,2,1,0,0,0") (ifseqformula "17"))
                                                         (rule "applyEq" (formula "5") (term "0,1,0") (ifseqformula "17"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1"))
                                                         (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                                         (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                         (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                         (rule "polySimp_mulLiterals" (formula "4") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "4") (term "1"))
                                                         (rule "inEqSimp_strengthen0" (formula "4") (ifseqformula "25"))
                                                         (rule "inEqSimp_contradEq3" (formula "25") (ifseqformula "4"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0"))
                                                         (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                                         (rule "add_literals" (formula "25") (term "0,0"))
                                                         (rule "qeq_literals" (formula "25") (term "0"))
                                                         (builtin "One Step Simplification" (formula "25"))
                                                         (rule "false_right" (formula "25"))
                                                         (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                                         (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "14") (term "0,0"))
                                                         (rule "qeq_literals" (formula "14") (term "0"))
                                                         (builtin "One Step Simplification" (formula "14"))
                                                         (rule "true_left" (formula "14"))
                                                         (rule "nonNull" (formula "11") (inst "i=i_1"))
                                                         (rule "greater_literals" (formula "11") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "28")))
                                                         (rule "sub_literals" (formula "11") (term "2,1,0"))
                                                         (builtin "One Step Simplification" (formula "11"))
                                                         (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "7") (ifseqformula "28"))
                                                         (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                                         (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                                         (rule "array2seqDef" (formula "15") (term "1") (inst "u=u"))
                                                         (rule "eqSymm" (formula "15"))
                                                         (rule "array2seqDef" (formula "23") (term "0,0,0") (inst "u=u"))
                                                         (rule "lenOfSeqDef" (formula "23") (term "0,0"))
                                                         (rule "polySimp_elimSub" (formula "23") (term "1,0,0"))
                                                         (rule "times_zero_2" (formula "23") (term "1,1,0,0"))
                                                         (rule "add_zero_right" (formula "23") (term "1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                                                         (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "23") (term "0,0,0,0"))
                                                         (rule "array2seqDef" (formula "23") (term "0,1,0") (inst "u=u"))
                                                         (rule "eqSymm" (formula "23") (term "0"))
                                                         (rule "lenOfSeqDef" (formula "23") (term "0,0"))
                                                         (rule "polySimp_elimSub" (formula "23") (term "1,0,0"))
                                                         (rule "times_zero_2" (formula "23") (term "1,1,0,0"))
                                                         (rule "add_zero_right" (formula "23") (term "1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                                                         (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,0"))
                                                         (rule "eqSymm" (formula "23") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "23") (term "0,0,1,0"))
                                                         (rule "array2seqDef" (formula "30") (term "0,0") (inst "u=u"))
                                                         (rule "array2seqDef" (formula "30") (term "1,0") (inst "u=u"))
                                                         (rule "array2seqDef" (formula "30") (term "1") (inst "u=u"))
                                                         (rule "eqSymm" (formula "30"))
                                                         (rule "array2seqDef" (formula "23") (term "0,1,1,0,1") (inst "u=u"))
                                                         (rule "eqSymm" (formula "23") (term "1,0,1"))
                                                         (rule "getOfSeqDef" (formula "23") (term "0,1,0,1"))
                                                         (rule "castDel" (formula "23") (term "1,0,1,0,1"))
                                                         (rule "castDel" (formula "23") (term "2,0,1,0,1"))
                                                         (rule "add_zero_right" (formula "23") (term "0,2,1,0,1,0,1"))
                                                         (rule "polySimp_elimSub" (formula "23") (term "1,1,0,0,1,0,1"))
                                                         (rule "times_zero_2" (formula "23") (term "1,1,1,0,0,1,0,1"))
                                                         (rule "add_zero_right" (formula "23") (term "1,1,0,0,1,0,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,1,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,1,0,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,1,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,1,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,1,0,1"))
                                                         (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,1,0,1"))
                                                         (rule "mul_literals" (formula "23") (term "0,1,1,0,0,1,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,1,0,1"))
                                                         (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,1,0,1"))
                                                         (rule "array2seqDef" (formula "20") (term "1,0") (inst "u=u"))
                                                         (rule "array2seqDef" (formula "20") (term "1") (inst "u=u"))
                                                         (rule "array2seqDef" (formula "20") (term "0,0") (inst "u=u"))
                                                         (rule "array2seqDef" (formula "23") (term "0,1,1,1,0,0,1") (inst "u=u"))
                                                         (rule "lenOfSeqDef" (formula "23") (term "1,1,1,0,0,1"))
                                                         (rule "polySimp_elimSub" (formula "23") (term "1,1,1,1,0,0,1"))
                                                         (rule "times_zero_2" (formula "23") (term "1,1,1,1,1,0,0,1"))
                                                         (rule "add_zero_right" (formula "23") (term "1,1,1,1,0,0,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,1,1,0,0,1"))
                                                         (rule "add_zero_right" (formula "23") (term "0,0,1,1,1,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,1,1,0,0,1"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,1,1,1,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "23") (term "0,0,1,1,1,0,0,1"))
                                                         (rule "polySimp_elimOne" (formula "23") (term "0,0,1,1,1,0,0,1"))
                                                         (rule "array2seqDef" (formula "15") (term "1,1") (inst "u=u"))
                                                         (rule "array2seqDef" (formula "15") (term "0,1") (inst "u=u"))
                                                         (rule "equalityToSeqGetAndSeqLenRight" (formula "30") (inst "iv=iv"))
                                                         (rule "lenOfSeqDef" (formula "30") (term "0,0"))
                                                         (rule "eqSymm" (formula "30") (term "0"))
                                                         (rule "polySimp_elimSub" (formula "30") (term "1,1,0"))
                                                         (rule "mul_literals" (formula "30") (term "1,1,1,0"))
                                                         (rule "add_zero_right" (formula "30") (term "1,1,0"))
                                                         (rule "getOfSeqDef" (formula "30") (term "0,1,0,1"))
                                                         (rule "castDel" (formula "30") (term "1,0,1,0,1"))
                                                         (rule "castDel" (formula "30") (term "2,0,1,0,1"))
                                                         (rule "add_zero_right" (formula "30") (term "0,2,1,0,1,0,1"))
                                                         (rule "eqSymm" (formula "30") (term "1,0,1"))
                                                         (rule "polySimp_elimSub" (formula "30") (term "1,1,0,1,1,0,1"))
                                                         (rule "times_zero_2" (formula "30") (term "1,1,1,0,1,1,0,1"))
                                                         (rule "add_zero_right" (formula "30") (term "1,1,0,1,1,0,1"))
                                                         (rule "lenOfSeqDef" (formula "30") (term "1,1,0,0,1"))
                                                         (rule "polySimp_elimSub" (formula "30") (term "1,1,1,0,0,1"))
                                                         (rule "times_zero_2" (formula "30") (term "1,1,1,1,0,0,1"))
                                                         (rule "add_zero_right" (formula "30") (term "1,1,1,0,0,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "30") (term "0,1,0"))
                                                         (rule "add_zero_right" (formula "30") (term "0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,1,1,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,1,1,0,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "30") (term "0,1,1,0,0,1"))
                                                         (rule "add_zero_right" (formula "30") (term "0,0,1,1,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,1,0,0,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,1,1,0,1"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "30") (term "0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "30") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,1,1,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,1,1,0,1"))
                                                         (rule "polySimp_rightDist" (formula "30") (term "1,1,0,1,1,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,1,1,0,1"))
                                                         (rule "mul_literals" (formula "30") (term "0,1,1,0,1,1,0,1"))
                                                         (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,1,1,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1"))
                                                         (rule "mul_literals" (formula "30") (term "0,1,1,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1"))
                                                         (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0,1"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "0,1,1,1,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "30") (term "0,0,1,1,1,0,0,1"))
                                                         (rule "polySimp_elimOne" (formula "30") (term "0,0,1,1,1,0,0,1"))
                                                         (rule "array2seqDef" (formula "23") (term "0,1,1,0,1") (inst "u=u"))
                                                         (rule "eqSymm" (formula "23") (term "1,0,1"))
                                                         (rule "getOfSeqDef" (formula "23") (term "0,1,0,1"))
                                                         (rule "castDel" (formula "23") (term "1,0,1,0,1"))
                                                         (rule "castDel" (formula "23") (term "2,0,1,0,1"))
                                                         (rule "add_zero_right" (formula "23") (term "0,2,1,0,1,0,1"))
                                                         (rule "polySimp_elimSub" (formula "23") (term "1,1,0,0,1,0,1"))
                                                         (rule "times_zero_2" (formula "23") (term "1,1,1,0,0,1,0,1"))
                                                         (rule "add_zero_right" (formula "23") (term "1,1,0,0,1,0,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,1,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,1,0,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,1,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,1,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,1,0,1"))
                                                         (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,1,0,1"))
                                                         (rule "mul_literals" (formula "23") (term "0,1,1,0,0,1,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,1,0,1"))
                                                         (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,1,0,1"))
                                                         (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=java_lang_Object_created__16"))
                                                         (rule "simplifySelectOfMemset" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "simplifySelectOfStore" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "simplifySelectOfStore" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "simplifySelectOfStore" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "simplifySelectOfCreate" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                                                         (rule "castDel" (formula "1") (term "1,0"))
                                                         (rule "eqSymm" (formula "1") (term "0,0"))
                                                         (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                                         (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "27"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                                                         (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "eqSeqDef" (formula "20") (inst "iv=iv"))
                                                         (rule "andLeft" (formula "20"))
                                                         (rule "getOfSeqDef" (formula "21") (term "1,1,0"))
                                                         (rule "castDel" (formula "21") (term "2,1,1,0"))
                                                         (rule "castDel" (formula "21") (term "1,1,1,0"))
                                                         (rule "add_zero_right" (formula "21") (term "0,2,1,1,1,0"))
                                                         (rule "polySimp_elimSub" (formula "21") (term "1,1,0,1,1,0"))
                                                         (rule "times_zero_2" (formula "21") (term "1,1,1,0,1,1,0"))
                                                         (rule "add_zero_right" (formula "21") (term "1,1,0,1,1,0"))
                                                         (rule "lenOfSeqDef" (formula "20") (term "1"))
                                                         (rule "polySimp_elimSub" (formula "20") (term "1,1"))
                                                         (rule "times_zero_2" (formula "20") (term "1,1,1"))
                                                         (rule "add_zero_right" (formula "20") (term "1,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "21") (term "0,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "20") (term "0,1"))
                                                         (rule "add_zero_right" (formula "20") (term "0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,1,1,0"))
                                                         (rule "apply_eq_monomials" (formula "21") (term "1,0,1,0,0") (ifseqformula "20"))
                                                         (rule "polySimp_rightDist" (formula "21") (term "0,1,0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "21") (term "1,0,1,0,1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "21") (term "1,0,1,0,0"))
                                                         (rule "add_literals" (formula "21") (term "1,1,1,0,1,0,0"))
                                                         (rule "times_zero_1" (formula "21") (term "1,1,0,1,0,0"))
                                                         (rule "add_zero_right" (formula "21") (term "1,0,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "21") (term "0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "21") (term "1,1,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,1,1,0"))
                                                         (rule "mul_literals" (formula "21") (term "0,1,1,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,1,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "20") (term "0,0,1"))
                                                         (rule "polySimp_elimOne" (formula "20") (term "0,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                                                         (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0,1,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "21") (term "0,0,1,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "21") (term "0,0,1,1,1,0,0"))
                                                         (rule "pullOutSelect" (formula "15") (term "0,1,0") (inst "selectSK=arr_58"))
                                                         (rule "applyEq" (formula "25") (term "0,1,1,0") (ifseqformula "15"))
                                                         (rule "applyEq" (formula "16") (term "1,2,0") (ifseqformula "15"))
                                                         (rule "applyEq" (formula "25") (term "0,0,0,1,0") (ifseqformula "15"))
                                                         (rule "applyEq" (formula "25") (term "1,1,1,1,0,1") (ifseqformula "15"))
                                                         (rule "applyEq" (formula "25") (term "0,0,0,1,1,1,0,0,1") (ifseqformula "15"))
                                                         (rule "applyEq" (formula "25") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "15"))
                                                         (rule "applyEq" (formula "25") (term "0,1,1,1,1,0,0,1") (ifseqformula "15"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "15") (ifseqformula "13"))
                                                         (builtin "One Step Simplification" (formula "15"))
                                                         (rule "applyEqReverse" (formula "16") (term "0,1,0") (ifseqformula "15"))
                                                         (rule "applyEqReverse" (formula "25") (term "0,1,1,0") (ifseqformula "15"))
                                                         (rule "applyEqReverse" (formula "16") (term "1,2,0") (ifseqformula "15"))
                                                         (rule "applyEqReverse" (formula "25") (term "0,0,0,1,0") (ifseqformula "15"))
                                                         (rule "applyEqReverse" (formula "25") (term "1,1,1,1,0,1") (ifseqformula "15"))
                                                         (rule "applyEqReverse" (formula "25") (term "0,0,0,1,1,1,0,0,1") (ifseqformula "15"))
                                                         (rule "applyEqReverse" (formula "25") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "15"))
                                                         (rule "applyEqReverse" (formula "25") (term "0,1,1,1,1,0,0,1") (ifseqformula "15"))
                                                         (rule "hideAuxiliaryEq" (formula "15"))
                                                         (rule "eqSymm" (formula "15"))
                                                         (rule "pullOutSelect" (formula "24") (term "0,1,0,0") (inst "selectSK=arr_59"))
                                                         (rule "applyEq" (formula "32") (term "0,0,0,1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "32") (term "0,0,0,1,1,1,0,0,1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "25") (term "0,1,1,1,0,0,1,0,1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "25") (term "1,1,0,1,0,1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "32") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "25") (term "0,0,0,0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "32") (term "0,1,1,1,1,0,0,1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "32") (term "1,1,1,1,0,1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "32") (term "0,1,1,0") (ifseqformula "1"))
                                                         (rule "simplifySelectOfStore" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "castDel" (formula "1") (term "1,0"))
                                                         (rule "eqSymm" (formula "25") (term "1,0,1"))
                                                         (rule "eqSymm" (formula "25") (term "0"))
                                                         (rule "eqSymm" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_contradEq3" (formula "1") (term "0,0") (ifseqformula "5"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                         (rule "qeq_literals" (formula "1") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                                         (rule "replaceKnownSelect_taclet1111000000110001010_7" (formula "1") (term "2,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet1111000000110001010_8" (formula "1") (term "2,0"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "14"))
                                                         (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0"))
                                                         (rule "pullOutSelect" (formula "32") (term "1,2,1,0,0,0") (inst "selectSK=arr_60"))
                                                         (rule "applyEq" (formula "33") (term "0,1,1,0,0,1,0,1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "33") (term "1,2,1,0,0,1,0,1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "33") (term "0,1,1,0,0,0") (ifseqformula "1"))
                                                         (rule "simplifySelectOfStore" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "castDel" (formula "1") (term "1,0"))
                                                         (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                         (rule "inEqSimp_contradEq3" (formula "1") (term "1,0,0") (ifseqformula "6"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                                                         (rule "qeq_literals" (formula "1") (term "0,1,0,0"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "15"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,0"))
                                                         (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                         (rule "eqSeqDef" (formula "17") (inst "iv=iv"))
                                                         (rule "andLeft" (formula "17"))
                                                         (rule "getOfSeqDef" (formula "18") (term "1,1,0"))
                                                         (rule "castDel" (formula "18") (term "1,1,1,0"))
                                                         (rule "castDel" (formula "18") (term "2,1,1,0"))
                                                         (rule "add_zero_right" (formula "18") (term "0,2,1,1,1,0"))
                                                         (rule "polySimp_elimSub" (formula "18") (term "1,1,0,1,1,0"))
                                                         (rule "times_zero_2" (formula "18") (term "1,1,1,0,1,1,0"))
                                                         (rule "add_zero_right" (formula "18") (term "1,1,0,1,1,0"))
                                                         (rule "lenOfSeqDef" (formula "17") (term "1"))
                                                         (rule "polySimp_elimSub" (formula "17") (term "1,1"))
                                                         (rule "mul_literals" (formula "17") (term "1,1,1"))
                                                         (rule "add_zero_right" (formula "17") (term "1,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "18") (term "0,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1"))
                                                         (rule "add_zero_right" (formula "17") (term "0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,1,1,0"))
                                                         (rule "apply_eq_monomials" (formula "18") (term "1,0,1,0,0") (ifseqformula "17"))
                                                         (rule "polySimp_rightDist" (formula "18") (term "0,1,0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "18") (term "1,0,1,0,1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "18") (term "1,0,1,0,0"))
                                                         (rule "add_literals" (formula "18") (term "1,1,1,0,1,0,0"))
                                                         (rule "times_zero_1" (formula "18") (term "1,1,0,1,0,0"))
                                                         (rule "add_zero_right" (formula "18") (term "1,0,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "18") (term "0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "18") (term "1,1,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,1,1,0"))
                                                         (rule "mul_literals" (formula "18") (term "0,1,1,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,1,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "17") (term "0,0,1"))
                                                         (rule "polySimp_elimOne" (formula "17") (term "0,0,1"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,1,0,0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,1,0,0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "18") (term "0,0,0,1,0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                                         (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "6"))
                                                         (rule "mul_literals" (formula "5") (term "0,0"))
                                                         (rule "add_zero_left" (formula "5") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                         (rule "mul_literals" (formula "5") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "5"))
                                                         (rule "leq_literals" (formula "8") (term "0"))
                                                         (builtin "One Step Simplification" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "pullOutSelect" (formula "24") (term "0,1,1,0,0,1,0") (inst "selectSK=arr_61"))
                                                         (rule "applyEq" (formula "25") (term "1,2,1,0,0,1,0") (ifseqformula "24"))
                                                         (rule "applyEq" (formula "23") (term "1,2,1,0,0") (ifseqformula "24"))
                                                         (rule "applyEq" (formula "23") (term "0,1,1,0,0") (ifseqformula "24"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "24") (ifseqformula "15"))
                                                         (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "33")))
                                                         (rule "eqSymm" (formula "24") (term "0,0,0"))
                                                         (rule "dismissNonSelectedField" (formula "24") (term "0,0,1,0,0"))
                                                         (rule "dismissNonSelectedField" (formula "24") (term "2,0"))
                                                         (rule "pullOutSelect" (formula "2") (term "0,0,0,0") (inst "selectSK=java_lang_Object_created__17"))
                                                         (rule "simplifySelectOfMemset" (formula "2"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "simplifySelectOfStore" (formula "2"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "simplifySelectOfStore" (formula "2"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "simplifySelectOfStore" (formula "2"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "simplifySelectOfCreate" (formula "2"))
                                                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "35")))
                                                         (rule "castDel" (formula "2") (term "0"))
                                                         (rule "applyEqReverse" (formula "3") (term "0,0,0,0") (ifseqformula "2"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "applyEqReverse" (formula "36") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "3"))
                                                         (rule "applyEqReverse" (formula "36") (term "1,1,1,1,0,1") (ifseqformula "3"))
                                                         (rule "applyEqReverse" (formula "29") (term "0,1,1,0") (ifseqformula "3"))
                                                         (rule "applyEqReverse" (formula "36") (term "0,1,1,1,1,0,0,1") (ifseqformula "3"))
                                                         (rule "applyEqReverse" (formula "29") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "3"))
                                                         (rule "applyEqReverse" (formula "36") (term "0,0,0,1,0") (ifseqformula "3"))
                                                         (rule "applyEqReverse" (formula "29") (term "0,0,0,1,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "29"))
                                                         (rule "allRight" (formula "29") (inst "sk=iv_8"))
                                                         (rule "impRight" (formula "29"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "applyEqReverse" (formula "38") (term "0,0,0,1,1,1,0,0,1") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "38") (term "0,1,1,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "31") (term "1,1,1") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "eqSymm" (formula "29"))
                                                         (rule "replace_known_left" (formula "29") (term "0,0,0") (ifseqformula "1"))
                                                         (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "1")))
                                                         (rule "inEqSimp_homoInEq0" (formula "2"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "29") (term "0,1"))
                                                         (rule "polySimp_addComm1" (formula "29") (term "0,0,1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "29") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                         (rule "mul_literals" (formula "2") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "29") (term "1,0,1"))
                                                         (rule "polySimp_rightDist" (formula "29") (term "1,0,1"))
                                                         (rule "mul_literals" (formula "29") (term "0,1,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,1"))
                                                         (rule "polySimp_elimOne" (formula "29") (term "1,1,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "29") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                                                         (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_62"))
                                                         (rule "applyEq" (formula "20") (term "0,1,1,0,0,1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "20") (term "1,2,1,0,0,1,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "19") (term "1,2,1,0,0") (ifseqformula "3"))
                                                         (rule "applyEq" (formula "19") (term "0,1,1,0,0") (ifseqformula "3"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "17"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "35")))
                                                         (rule "eqSymm" (formula "3") (term "0,0,0"))
                                                         (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                                         (rule "dismissNonSelectedField" (formula "3") (term "0,0,1,0,0"))
                                                         (rule "pullOutSelect" (formula "4") (term "0,0,0,0") (inst "selectSK=java_lang_Object_created__18"))
                                                         (rule "applyEq" (formula "27") (term "0,0,1,0,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "3") (term "0,0,1,0,0") (ifseqformula "4"))
                                                         (rule "simplifySelectOfMemset" (formula "4"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "simplifySelectOfStore" (formula "4"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "simplifySelectOfStore" (formula "4"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "simplifySelectOfStore" (formula "4"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "simplifySelectOfCreate" (formula "4"))
                                                         (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "37")))
                                                         (rule "castDel" (formula "4") (term "1,0"))
                                                         (rule "applyEq" (formula "4") (term "2,0") (ifseqformula "14"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "applyEqReverse" (formula "3") (term "0,0,1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "applyEqReverse" (formula "27") (term "0,0,1,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "27"))
                                                         (rule "applyEqReverse" (formula "5") (term "0,0,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "applyEqReverse" (formula "38") (term "1,2,1,0,0,1,0,1") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "38") (term "0,1,1,0,0,0") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "38") (term "0,1,1,0,0,1,0,1") (ifseqformula "5"))
                                                         (rule "applyEqReverse" (formula "38") (term "1,2,1,0,0,0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "hideAuxiliaryEq" (formula "4"))
                                                         (rule "pullOutSelect" (formula "29") (term "1,1") (inst "selectSK=arr_63"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                                         (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "36"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                                         (rule "pullOutSelect" (formula "30") (term "1,0") (inst "selectSK=arr_64"))
                                                         (rule "simplifySelectOfStore" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "castDel" (formula "1") (term "1,0"))
                                                         (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                         (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                         (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                                                         (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "37"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "replaceKnownSelect_taclet1111000000110001010_29" (formula "1") (term "2,0"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "18"))
                                                         (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0,0"))
                                                         (rule "pullOutSelect" (formula "5") (term "2,0") (inst "selectSK=arr_65"))
                                                         (rule "simplifySelectOfMemset" (formula "5"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "dismissNonSelectedField" (formula "5") (term "2,0"))
                                                         (rule "elementOfArrayRangeConcrete" (formula "5") (term "0,0"))
                                                         (rule "eqSymm" (formula "5") (term "0,0,0,0"))
                                                         (rule "dismissNonSelectedField" (formula "5") (term "2,0"))
                                                         (rule "dismissNonSelectedField" (formula "5") (term "2,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "5") (term "1,0,0,0"))
                                                         (rule "replace_known_left" (formula "5") (term "1,0,0,0") (ifseqformula "10"))
                                                         (builtin "One Step Simplification" (formula "5"))
                                                         (rule "inEqSimp_homoInEq0" (formula "5") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "5") (term "0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,0"))
                                                         (rule "mul_literals" (formula "5") (term "0,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,0"))
                                                         (rule "pullOutSelect" (formula "28") (term "2,0") (inst "selectSK=arr_66"))
                                                         (rule "simplifySelectOfMemset" (formula "28"))
                                                         (builtin "One Step Simplification" (formula "28"))
                                                         (rule "dismissNonSelectedField" (formula "28") (term "2,0"))
                                                         (rule "elementOfArrayRangeConcrete" (formula "28") (term "0,0"))
                                                         (rule "eqSymm" (formula "28") (term "0,0,0,0"))
                                                         (rule "dismissNonSelectedField" (formula "28") (term "2,0"))
                                                         (rule "dismissNonSelectedField" (formula "28") (term "2,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "28") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "28") (term "0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                                                         (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                                                         (rule "replace_known_left" (formula "28") (term "1,0,0") (ifseqformula "7"))
                                                         (builtin "One Step Simplification" (formula "28"))
                                                         (rule "inEqSimp_subsumption1" (formula "28") (term "1,0,0") (ifseqformula "9"))
                                                         (rule "leq_literals" (formula "28") (term "0,1,0,0"))
                                                         (builtin "One Step Simplification" (formula "28"))
                                                         (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=arr_67"))
                                                         (rule "simplifySelectOfMemset" (formula "2"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                                         (rule "elementOfArrayRangeConcrete" (formula "2") (term "0,0"))
                                                         (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                                         (rule "sortsDisjointModuloNull" (formula "2") (term "0,0,0,0"))
                                                         (rule "replace_known_right" (formula "2") (term "1,0,0,0,0") (ifseqformula "40"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "simplifySelectOfStore" (formula "2"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "simplifySelectOfCreate" (formula "2"))
                                                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "40")))
                                                         (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                         (rule "hideAuxiliaryEq" (formula "2"))
                                                         (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__19"))
                                                         (rule "applyEq" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "2"))
                                                         (rule "simplifySelectOfMemset" (formula "2"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "simplifySelectOfStore" (formula "2"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "simplifySelectOfStore" (formula "2"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "simplifySelectOfStore" (formula "2"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "simplifySelectOfCreate" (formula "2"))
                                                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "40")))
                                                         (rule "castDel" (formula "2") (term "1,0"))
                                                         (rule "eqSymm" (formula "2") (term "0,0"))
                                                         (rule "sortsDisjointModuloNull" (formula "2") (term "0,0"))
                                                         (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "40"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "applyEqReverse" (formula "3") (term "0,0,1,0,0") (ifseqformula "2"))
                                                         (rule "applyEqReverse" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "2"))
                                                         (rule "hideAuxiliaryEq" (formula "2"))
                                                         (rule "pullOutSelect" (formula "5") (term "2,0") (inst "selectSK=arr_68"))
                                                         (rule "simplifySelectOfCreate" (formula "5"))
                                                         (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "40")))
                                                         (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                         (rule "hideAuxiliaryEq" (formula "5"))
                                                         (rule "pullOutSelect" (formula "28") (term "2,0") (inst "selectSK=arr_69"))
                                                         (rule "simplifySelectOfCreate" (formula "28"))
                                                         (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "40")))
                                                         (rule "applyEqReverse" (formula "29") (term "2,0") (ifseqformula "28"))
                                                         (rule "hideAuxiliaryEq" (formula "28"))
                                                         (rule "nnf_imp2or" (formula "23") (term "0"))
                                                         (rule "nnf_imp2or" (formula "17") (term "0"))
                                                         (rule "nnf_imp2or" (formula "30") (term "0"))
                                                         (rule "nnf_imp2or" (formula "22") (term "0"))
                                                         (rule "nnf_imp2or" (formula "40") (term "0,1"))
                                                         (rule "arrayLengthNotNegative" (formula "20") (term "0"))
                                                         (rule "applyEq" (formula "20") (term "0") (ifseqformula "21"))
                                                         (rule "arrayLengthIsAShort" (formula "20") (term "1"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "true_left" (formula "20"))
                                                         (rule "arrayLengthIsAShort" (formula "20") (term "0"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "true_left" (formula "20"))
                                                         (rule "arrayLengthNotNegative" (formula "20") (term "1"))
                                                         (rule "nnf_notAnd" (formula "23") (term "0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
                                                         (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "23") (term "1,0,0,0"))
                                                         (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                                                         (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
                                                         (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "30") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "30") (term "1,0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                                                         (rule "nnf_notAnd" (formula "22") (term "0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
                                                         (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0"))
                                                         (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                                                         (rule "mul_literals" (formula "22") (term "1,0,0,0"))
                                                         (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                                                         (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                                                         (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
                                                         (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                                                         (rule "nnf_notAnd" (formula "40") (term "0,0,1"))
                                                         (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0,1"))
                                                         (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0,1"))
                                                         (rule "add_literals" (formula "40") (term "0,0,0,1,0,0,1"))
                                                         (rule "add_zero_left" (formula "40") (term "0,0,1,0,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,1"))
                                                         (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,1"))
                                                         (rule "inEqSimp_notGeq" (formula "40") (term "0,0,0,1"))
                                                         (rule "times_zero_1" (formula "40") (term "1,0,0,0,0,0,1"))
                                                         (rule "add_literals" (formula "40") (term "0,0,0,0,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,1"))
                                                         (rule "mul_literals" (formula "40") (term "1,0,0,0,1"))
                                                         (rule "arrayLengthNotNegative" (formula "40") (term "1,0,0,0,0"))
                                                         (rule "arrayLengthIsAShort" (formula "41") (term "1,0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "ifthenelse_split" (formula "28") (term "1"))
                                                         (branch "result_0.length ≥ 1 TRUE"
                                                            (rule "replace_known_left" (formula "32") (term "0,1,1,0,0") (ifseqformula "28"))
                                                            (builtin "One Step Simplification" (formula "32"))
                                                            (rule "ifthenelse_split" (formula "22") (term "1"))
                                                            (branch " x_arr_arr_2[j_2]@anon_heap_LOOP«anonHeapFunction».length ≥ 1 TRUE"
                                                               (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "22"))
                                                               (builtin "One Step Simplification" (formula "5"))
                                                               (rule "replace_known_left" (formula "24") (term "0,1,1,0,0") (ifseqformula "22"))
                                                               (builtin "One Step Simplification" (formula "24"))
                                                               (rule "replace_known_left" (formula "36") (term "0,1") (ifseqformula "5"))
                                                               (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "5")))
                                                               (rule "replace_known_left" (formula "43") (term "0,1,1,0,0,1") (ifseqformula "22"))
                                                               (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "22")))
                                                               (rule "commute_or_2" (formula "25") (term "0"))
                                                               (rule "commute_or_2" (formula "18") (term "0"))
                                                               (rule "commute_or_2" (formula "33") (term "0"))
                                                               (rule "commute_or_2" (formula "24") (term "0"))
                                                               (rule "arrayLengthIsAShort" (formula "30") (term "1,1,0,0"))
                                                               (builtin "One Step Simplification" (formula "30"))
                                                               (rule "true_left" (formula "30"))
                                                               (rule "lenNonNegative" (formula "30") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "30"))
                                                               (rule "arrayLengthNotNegative" (formula "31") (term "1,1,0,0"))
                                                               (rule "commute_or" (formula "25") (term "0,0"))
                                                               (rule "commute_or" (formula "18") (term "0,0"))
                                                               (rule "commute_or" (formula "35") (term "0,0"))
                                                               (rule "commute_or" (formula "24") (term "0,0"))
                                                               (rule "arrayLengthIsAShort" (formula "23") (term "1,1,0,0"))
                                                               (builtin "One Step Simplification" (formula "23"))
                                                               (rule "true_left" (formula "23"))
                                                               (rule "lenNonNegative" (formula "23") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "23"))
                                                               (rule "arrayLengthNotNegative" (formula "24") (term "1,1,0,0"))
                                                               (rule "ifthenelse_split" (formula "35") (term "0"))
                                                               (branch "x_arr_arr_2 = chosen TRUE"
                                                                  (rule "applyEqReverse" (formula "37") (term "2,0") (ifseqformula "36"))
                                                                  (rule "hideAuxiliaryEq" (formula "36"))
                                                                  (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "35"))
                                                                  (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "applyEqReverse" (formula "47") (term "1,2,1,0,0,1,0,1") (ifseqformula "7"))
                                                                  (rule "applyEqReverse" (formula "47") (term "1,2,1,0,0,0") (ifseqformula "7"))
                                                                  (rule "applyEqReverse" (formula "47") (term "0,1,1,0,0,1,0,1") (ifseqformula "7"))
                                                                  (rule "applyEqReverse" (formula "25") (term "0,1,1,0,0") (ifseqformula "7"))
                                                                  (rule "applyEqReverse" (formula "23") (term "0,1,1,0,0") (ifseqformula "7"))
                                                                  (rule "applyEqReverse" (formula "25") (term "1,2,1,0,0") (ifseqformula "7"))
                                                                  (rule "applyEqReverse" (formula "26") (term "0,1,1,0,0,0,0,0") (ifseqformula "7"))
                                                                  (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "7"))
                                                                  (rule "applyEqReverse" (formula "26") (term "1,2,1,0,0,0,0,0") (ifseqformula "7"))
                                                                  (rule "applyEqReverse" (formula "47") (term "0,1,1,0,0,0") (ifseqformula "7"))
                                                                  (rule "applyEqReverse" (formula "23") (term "1,2,1,0,0") (ifseqformula "7"))
                                                                  (rule "hideAuxiliaryEq" (formula "7"))
                                                                  (rule "replace_known_left" (formula "35") (term "0,0") (ifseqformula "34"))
                                                                  (builtin "One Step Simplification" (formula "35"))
                                                                  (rule "applyEqReverse" (formula "31") (term "0,1,1,0,0") (ifseqformula "35"))
                                                                  (rule "applyEqReverse" (formula "31") (term "1,2,1,0,0") (ifseqformula "35"))
                                                                  (rule "applyEqReverse" (formula "36") (term "1,2,1,0,0,0,0,0") (ifseqformula "35"))
                                                                  (rule "applyEqReverse" (formula "36") (term "0,1,1,0,0,0,0,0") (ifseqformula "35"))
                                                                  (rule "applyEqReverse" (formula "32") (term "0,0") (ifseqformula "35"))
                                                                  (rule "applyEqReverse" (formula "33") (term "1,2,1,0,0") (ifseqformula "35"))
                                                                  (rule "applyEqReverse" (formula "33") (term "0,1,1,0,0") (ifseqformula "35"))
                                                                  (rule "hideAuxiliaryEq" (formula "35"))
                                                                  (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "34"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "applyEq" (formula "2") (term "1,1,0,0,0,1,0,0") (ifseqformula "34"))
                                                                  (rule "applyEq" (formula "5") (term "1,0,0") (ifseqformula "34"))
                                                                  (rule "applyEq" (formula "19") (term "0,1,0,0,0") (ifseqformula "34"))
                                                                  (rule "applyEq" (formula "19") (term "1,0,0,0,0") (ifseqformula "34"))
                                                                  (rule "applyEq" (formula "45") (term "1,0,2,1,0,0,0") (ifseqformula "34"))
                                                                  (rule "applyEq" (formula "3") (term "1,1,1,0") (ifseqformula "34"))
                                                                  (rule "applyEq" (formula "45") (term "1,0,2,0,0,0,1,0,1") (ifseqformula "34"))
                                                                  (rule "applyEq" (formula "19") (term "1,0,0,0,0,0,0,0") (ifseqformula "34"))
                                                                  (rule "applyEq" (formula "45") (term "1,0,2,0,0,0,0") (ifseqformula "34"))
                                                                  (rule "applyEq" (formula "45") (term "1,0,1,1,0,0,1") (ifseqformula "34"))
                                                                  (rule "applyEq" (formula "45") (term "1,1,1,1,1,0,1") (ifseqformula "34"))
                                                                  (rule "applyEq" (formula "2") (term "1,1,0,1,0,1,0,0") (ifseqformula "34"))
                                                                  (rule "applyEq" (formula "3") (term "1,1,0,0,1,0,0") (ifseqformula "34"))
                                                                  (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "34"))
                                                                  (builtin "One Step Simplification" (formula "20"))
                                                                  (rule "true_left" (formula "20"))
                                                                  (rule "applyEq" (formula "25") (term "1,0,0,0,0,0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "44") (term "1,0,1,1,1,0,1") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "19") (term "0,1,0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "3") (term "1,1,2,0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "3") (term "1,0,0,0,0,0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "19") (term "1,0,0,0,0,0,0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "20") (term "1,0,0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "43") (term "0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "19") (term "1,0,0,0,0,0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "23") (term "1,0,1") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "33"))
                                                                  (rule "close" (formula "36") (ifseqformula "15"))
                                                               )
                                                               (branch "x_arr_arr_2 = chosen FALSE"
                                                                  (rule "applyEqReverse" (formula "36") (term "2,0") (ifseqformula "35"))
                                                                  (rule "hideAuxiliaryEq" (formula "35"))
                                                                  (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "38"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                                  (rule "hideAuxiliaryEq" (formula "6"))
                                                                  (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "37"))
                                                                  (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "applyEqReverse" (formula "23") (term "0,0") (ifseqformula "6"))
                                                                  (rule "applyEqReverse" (formula "22") (term "1,2,1,0,0") (ifseqformula "6"))
                                                                  (rule "applyEqReverse" (formula "25") (term "0,1,1,0,0,0,0,0") (ifseqformula "6"))
                                                                  (rule "applyEqReverse" (formula "25") (term "1,2,1,0,0,0,0,0") (ifseqformula "6"))
                                                                  (rule "applyEqReverse" (formula "24") (term "1,2,1,0,0") (ifseqformula "6"))
                                                                  (rule "applyEqReverse" (formula "46") (term "1,2,1,0,0,1,0,1") (ifseqformula "6"))
                                                                  (rule "applyEqReverse" (formula "46") (term "0,1,1,0,0,1,0,1") (ifseqformula "6"))
                                                                  (rule "applyEqReverse" (formula "22") (term "0,1,1,0,0") (ifseqformula "6"))
                                                                  (rule "applyEqReverse" (formula "46") (term "0,1,1,0,0,0") (ifseqformula "6"))
                                                                  (rule "applyEqReverse" (formula "46") (term "1,2,1,0,0,0") (ifseqformula "6"))
                                                                  (rule "applyEqReverse" (formula "24") (term "0,1,1,0,0") (ifseqformula "6"))
                                                                  (rule "hideAuxiliaryEq" (formula "6"))
                                                                  (rule "replace_known_right" (formula "33") (term "0,0") (ifseqformula "36"))
                                                                  (builtin "One Step Simplification" (formula "33"))
                                                                  (rule "applyEqReverse" (formula "34") (term "1,2,1,0,0,0,0,0") (ifseqformula "33"))
                                                                  (rule "applyEqReverse" (formula "32") (term "0,1,1,0,0") (ifseqformula "33"))
                                                                  (rule "applyEqReverse" (formula "31") (term "0,0") (ifseqformula "33"))
                                                                  (rule "applyEqReverse" (formula "32") (term "1,2,1,0,0") (ifseqformula "33"))
                                                                  (rule "applyEqReverse" (formula "30") (term "0,1,1,0,0") (ifseqformula "33"))
                                                                  (rule "applyEqReverse" (formula "30") (term "1,2,1,0,0") (ifseqformula "33"))
                                                                  (rule "applyEqReverse" (formula "34") (term "0,1,1,0,0,0,0,0") (ifseqformula "33"))
                                                                  (rule "hideAuxiliaryEq" (formula "33"))
                                                                  (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                  (branch " ¬ x_arr_arr_2[j_2]@anon_heap_LOOP«anonHeapFunction» = null ∧ ¬ (x_arr_arr_2[j_2]@anon_heap_LOOP«anonHeapFunction»).<created> = TRUE TRUE"
                                                                     (rule "andLeft" (formula "3"))
                                                                     (rule "notLeft" (formula "4"))
                                                                     (rule "notLeft" (formula "3"))
                                                                     (rule "applyEqReverse" (formula "39") (term "1") (ifseqformula "3"))
                                                                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "3"))
                                                                     (rule "hideAuxiliaryEq" (formula "3"))
                                                                     (rule "eqSymm" (formula "38"))
                                                                     (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "34"))
                                                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "35")))
                                                                     (rule "ifthenelse_negated" (formula "2") (term "0"))
                                                                     (rule "narrowSelectArrayType" (formula "38") (term "0") (ifseqformula "16") (ifseqformula "34"))
                                                                     (rule "eqSymm" (formula "38"))
                                                                     (rule "narrowSelectArrayType" (formula "2") (term "1,0") (ifseqformula "16") (ifseqformula "34"))
                                                                     (rule "narrowSelectArrayType" (formula "2") (term "2,0") (ifseqformula "25") (ifseqformula "34"))
                                                                     (rule "ifthenelse_to_or_right" (formula "23") (term "0,0,0"))
                                                                     (rule "nnf_notAnd" (formula "23") (term "0,0,0,0,0"))
                                                                     (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,0,0,0"))
                                                                     (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0,0,0,0"))
                                                                     (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,0,0,0"))
                                                                     (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0,0"))
                                                                     (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,0,0,0"))
                                                                     (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,0,0,0"))
                                                                     (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,0,0,0"))
                                                                     (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,0,0"))
                                                                     (rule "commute_or" (formula "23") (term "0,0"))
                                                                     (rule "commute_or_2" (formula "23") (term "0"))
                                                                     (rule "commute_or_2" (formula "23") (term "0,1,0"))
                                                                     (rule "commute_or" (formula "23") (term "1,1,0"))
                                                                     (rule "commute_or" (formula "23") (term "0,0,1,0"))
                                                                     (rule "cnf_rightDist" (formula "23") (term "1,1,0"))
                                                                     (rule "cnf_rightDist" (formula "23") (term "0"))
                                                                     (rule "distr_forallAnd" (formula "23"))
                                                                     (rule "andLeft" (formula "23"))
                                                                     (rule "commute_or" (formula "24") (term "0"))
                                                                     (rule "shift_paren_or" (formula "23") (term "0"))
                                                                     (rule "commute_or_2" (formula "23") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "23"))
                                                                     (rule "commute_or" (formula "24") (term "1,1,0"))
                                                                     (rule "shift_paren_or" (formula "23") (term "0,0"))
                                                                     (rule "commute_or" (formula "23") (term "0,0,0"))
                                                                     (builtin "One Step Simplification" (formula "23"))
                                                                     (rule "cnf_rightDist" (formula "24") (term "0"))
                                                                     (rule "distr_forallAnd" (formula "24"))
                                                                     (rule "andLeft" (formula "24"))
                                                                     (rule "commute_or_2" (formula "24") (term "0"))
                                                                     (rule "shift_paren_or" (formula "25") (term "0"))
                                                                     (rule "commute_or_2" (formula "25") (term "0,0"))
                                                                     (rule "inEqSimp_or_tautInEq1" (formula "25") (term "0"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "25") (term "1,0"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "25") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "25") (term "1,0,1,0"))
                                                                     (rule "times_zero_1" (formula "25") (term "0,1,0"))
                                                                     (rule "leq_literals" (formula "25") (term "1,0"))
                                                                     (builtin "One Step Simplification" (formula "25"))
                                                                     (rule "true_left" (formula "25"))
                                                                     (rule "shift_paren_or" (formula "24") (term "0,0"))
                                                                     (rule "commute_or" (formula "24") (term "0,0,0"))
                                                                     (rule "inEqSimp_or_tautInEq1" (formula "24") (term "0,0"))
                                                                     (rule "add_zero_right" (formula "24") (term "1,1,0,0"))
                                                                     (rule "qeq_literals" (formula "24") (term "1,0,0"))
                                                                     (builtin "One Step Simplification" (formula "24"))
                                                                     (rule "true_left" (formula "24"))
                                                                     (rule "ifthenelse_to_or_right" (formula "32") (term "0,0,0"))
                                                                     (rule "nnf_notAnd" (formula "32") (term "0,0,0,0,0"))
                                                                     (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0,0,0,0"))
                                                                     (rule "mul_literals" (formula "32") (term "1,0,0,0,0,0,0,0,0"))
                                                                     (rule "add_zero_right" (formula "32") (term "0,0,0,0,0,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0,0,0,0"))
                                                                     (rule "mul_literals" (formula "32") (term "1,0,0,0,0,0,0"))
                                                                     (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,0,0,0"))
                                                                     (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,0,0,0"))
                                                                     (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,0,0,0"))
                                                                     (rule "add_zero_left" (formula "32") (term "0,0,1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0,0,0"))
                                                                     (rule "commute_or" (formula "32") (term "0,0"))
                                                                     (rule "commute_or_2" (formula "32") (term "0"))
                                                                     (rule "commute_or_2" (formula "32") (term "0,1,0"))
                                                                     (rule "commute_or" (formula "32") (term "1,1,0"))
                                                                     (rule "commute_or" (formula "32") (term "0,0,1,0"))
                                                                     (rule "cnf_rightDist" (formula "32") (term "1,1,0"))
                                                                     (rule "cnf_rightDist" (formula "32") (term "0"))
                                                                     (rule "distr_forallAnd" (formula "32"))
                                                                     (rule "andLeft" (formula "32"))
                                                                     (rule "commute_or" (formula "33") (term "0"))
                                                                     (rule "shift_paren_or" (formula "32") (term "0"))
                                                                     (rule "commute_or_2" (formula "32") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "32"))
                                                                     (rule "commute_or" (formula "33") (term "1,1,0"))
                                                                     (rule "shift_paren_or" (formula "32") (term "0,0"))
                                                                     (rule "commute_or" (formula "32") (term "0,0,0"))
                                                                     (builtin "One Step Simplification" (formula "32"))
                                                                     (rule "cnf_rightDist" (formula "33") (term "0"))
                                                                     (rule "distr_forallAnd" (formula "33"))
                                                                     (rule "andLeft" (formula "33"))
                                                                     (rule "commute_or_2" (formula "33") (term "0"))
                                                                     (rule "shift_paren_or" (formula "34") (term "0"))
                                                                     (rule "commute_or_2" (formula "34") (term "0,0"))
                                                                     (rule "inEqSimp_or_tautInEq1" (formula "34") (term "0"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "34") (term "1,0"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "34") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "34") (term "1,0,1,0"))
                                                                     (rule "times_zero_1" (formula "34") (term "0,1,0"))
                                                                     (rule "leq_literals" (formula "34") (term "1,0"))
                                                                     (builtin "One Step Simplification" (formula "34"))
                                                                     (rule "true_left" (formula "34"))
                                                                     (rule "shift_paren_or" (formula "33") (term "0,0"))
                                                                     (rule "commute_or" (formula "33") (term "0,0,0"))
                                                                     (rule "inEqSimp_or_tautInEq1" (formula "33") (term "0,0"))
                                                                     (rule "add_zero_right" (formula "33") (term "1,1,0,0"))
                                                                     (rule "qeq_literals" (formula "33") (term "1,0,0"))
                                                                     (builtin "One Step Simplification" (formula "33"))
                                                                     (rule "true_left" (formula "33"))
                                                                     (rule "arrayLengthIsAShort" (formula "28") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "28"))
                                                                     (rule "true_left" (formula "28"))
                                                                     (rule "arrayLengthNotNegative" (formula "31") (term "1"))
                                                                     (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "28"))
                                                                     (rule "leq_literals" (formula "31") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "31"))
                                                                     (rule "true_left" (formula "31"))
                                                                     (rule "arrayLengthNotNegative" (formula "19") (term "0"))
                                                                     (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "20"))
                                                                     (rule "leq_literals" (formula "19") (term "0"))
                                                                     (builtin "One Step Simplification" (formula "19"))
                                                                     (rule "true_left" (formula "19"))
                                                                     (rule "arrayLengthIsAShort" (formula "22") (term "1"))
                                                                     (builtin "One Step Simplification" (formula "22"))
                                                                     (rule "true_left" (formula "22"))
                                                                     (rule "ifthenelse_split" (formula "2") (term "0"))
                                                                     (branch " x_arr_arr_2[j_2].<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                        (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "3"))
                                                                        (builtin "One Step Simplification" (formula "39"))
                                                                        (rule "closeTrue" (formula "39"))
                                                                     )
                                                                     (branch " x_arr_arr_2[j_2].<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                        (rule "referencedObjectIsCreatedRight" (formula "34") (ifseqformula "35"))
                                                                        (rule "close" (formula "34") (ifseqformula "16"))
                                                                     )
                                                                  )
                                                                  (branch " ¬ x_arr_arr_2[j_2]@anon_heap_LOOP«anonHeapFunction» = null ∧ ¬ (x_arr_arr_2[j_2]@anon_heap_LOOP«anonHeapFunction»).<created> = TRUE FALSE"
                                                                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "3"))
                                                                     (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "3"))
                                                                     (rule "hideAuxiliaryEq" (formula "3"))
                                                                     (rule "eqSymm" (formula "37"))
                                                                     (rule "ifthenelse_to_or_right" (formula "23") (term "0,0,0"))
                                                                     (rule "nnf_notAnd" (formula "23") (term "0,0,0,0,0"))
                                                                     (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,0,0,0"))
                                                                     (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0,0,0,0"))
                                                                     (rule "add_literals" (formula "23") (term "0,0,0,0,0,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,0,0,0"))
                                                                     (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0,0"))
                                                                     (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,0,0,0"))
                                                                     (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,0,0,0"))
                                                                     (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,0,0,0"))
                                                                     (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,0,0"))
                                                                     (rule "commute_or" (formula "23") (term "0,0"))
                                                                     (rule "commute_or_2" (formula "23") (term "0"))
                                                                     (rule "commute_or_2" (formula "23") (term "0,1,0"))
                                                                     (rule "commute_or" (formula "23") (term "1,1,0"))
                                                                     (rule "commute_or" (formula "23") (term "0,0,1,0"))
                                                                     (rule "cnf_rightDist" (formula "23") (term "1,1,0"))
                                                                     (rule "cnf_rightDist" (formula "23") (term "0"))
                                                                     (rule "distr_forallAnd" (formula "23"))
                                                                     (rule "andLeft" (formula "23"))
                                                                     (rule "commute_or" (formula "24") (term "0"))
                                                                     (rule "shift_paren_or" (formula "23") (term "0"))
                                                                     (rule "commute_or_2" (formula "23") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "23"))
                                                                     (rule "commute_or" (formula "24") (term "1,1,0"))
                                                                     (rule "shift_paren_or" (formula "23") (term "0,0"))
                                                                     (rule "commute_or" (formula "23") (term "0,0,0"))
                                                                     (builtin "One Step Simplification" (formula "23"))
                                                                     (rule "cnf_rightDist" (formula "24") (term "0"))
                                                                     (rule "distr_forallAnd" (formula "24"))
                                                                     (rule "andLeft" (formula "24"))
                                                                     (rule "commute_or_2" (formula "24") (term "0"))
                                                                     (rule "shift_paren_or" (formula "25") (term "0"))
                                                                     (rule "commute_or_2" (formula "25") (term "0,0"))
                                                                     (rule "inEqSimp_or_tautInEq1" (formula "25") (term "0"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "25") (term "1,0"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "25") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "25") (term "1,0,1,0"))
                                                                     (rule "times_zero_1" (formula "25") (term "0,1,0"))
                                                                     (rule "leq_literals" (formula "25") (term "1,0"))
                                                                     (builtin "One Step Simplification" (formula "25"))
                                                                     (rule "true_left" (formula "25"))
                                                                     (rule "shift_paren_or" (formula "24") (term "0,0"))
                                                                     (rule "commute_or" (formula "24") (term "0,0,0"))
                                                                     (rule "inEqSimp_or_tautInEq1" (formula "24") (term "0,0"))
                                                                     (rule "add_zero_right" (formula "24") (term "1,1,0,0"))
                                                                     (rule "qeq_literals" (formula "24") (term "1,0,0"))
                                                                     (builtin "One Step Simplification" (formula "24"))
                                                                     (rule "true_left" (formula "24"))
                                                                     (rule "ifthenelse_to_or_right" (formula "32") (term "0,0,0"))
                                                                     (rule "nnf_notAnd" (formula "32") (term "0,0,0,0,0"))
                                                                     (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,0,0,0"))
                                                                     (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,0,0,0"))
                                                                     (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,0,0,0"))
                                                                     (rule "add_zero_left" (formula "32") (term "0,0,1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0,0,0,0"))
                                                                     (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0,0,0,0"))
                                                                     (rule "add_literals" (formula "32") (term "0,0,0,0,0,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0,0,0,0"))
                                                                     (rule "mul_literals" (formula "32") (term "1,0,0,0,0,0,0"))
                                                                     (rule "commute_or" (formula "32") (term "0,0"))
                                                                     (rule "commute_or_2" (formula "32") (term "0"))
                                                                     (rule "commute_or" (formula "32") (term "1,1,0"))
                                                                     (rule "commute_or_2" (formula "32") (term "0,1,0"))
                                                                     (rule "commute_or" (formula "32") (term "0,0,1,0"))
                                                                     (rule "cnf_rightDist" (formula "32") (term "1,1,0"))
                                                                     (rule "cnf_rightDist" (formula "32") (term "0"))
                                                                     (rule "distr_forallAnd" (formula "32"))
                                                                     (rule "andLeft" (formula "32"))
                                                                     (rule "commute_or" (formula "33") (term "0"))
                                                                     (rule "shift_paren_or" (formula "32") (term "0"))
                                                                     (rule "commute_or_2" (formula "32") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "32"))
                                                                     (rule "commute_or" (formula "33") (term "1,1,0"))
                                                                     (rule "shift_paren_or" (formula "32") (term "0,0"))
                                                                     (rule "commute_or" (formula "32") (term "0,0,0"))
                                                                     (builtin "One Step Simplification" (formula "32"))
                                                                     (rule "cnf_rightDist" (formula "33") (term "0"))
                                                                     (rule "distr_forallAnd" (formula "33"))
                                                                     (rule "andLeft" (formula "33"))
                                                                     (rule "commute_or_2" (formula "33") (term "0"))
                                                                     (rule "shift_paren_or" (formula "34") (term "0"))
                                                                     (rule "commute_or_2" (formula "34") (term "0,0"))
                                                                     (rule "inEqSimp_or_tautInEq1" (formula "34") (term "0"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "34") (term "1,0"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "34") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "34") (term "1,0,1,0"))
                                                                     (rule "times_zero_1" (formula "34") (term "0,1,0"))
                                                                     (rule "leq_literals" (formula "34") (term "1,0"))
                                                                     (builtin "One Step Simplification" (formula "34"))
                                                                     (rule "true_left" (formula "34"))
                                                                     (rule "shift_paren_or" (formula "33") (term "0,0"))
                                                                     (rule "commute_or" (formula "33") (term "0,0,0"))
                                                                     (rule "inEqSimp_or_tautInEq1" (formula "33") (term "0,0"))
                                                                     (rule "add_zero_right" (formula "33") (term "1,1,0,0"))
                                                                     (rule "qeq_literals" (formula "33") (term "1,0,0"))
                                                                     (builtin "One Step Simplification" (formula "33"))
                                                                     (rule "true_left" (formula "33"))
                                                                     (rule "ifthenelse_split" (formula "2") (term "0"))
                                                                     (branch " ¬ x_arr_arr_2[j_2]@anon_heap_LOOP«anonHeapFunction» = null ∧ ¬( (x_arr_arr_2[j_2]@anon_heap_LOOP«anonHeapFunction»).<created> = TRUE ∨ x_arr_arr_2[j_2].<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) TRUE"
                                                                        (rule "andLeft" (formula "2"))
                                                                        (rule "notLeft" (formula "2"))
                                                                        (rule "notLeft" (formula "2"))
                                                                        (rule "orRight" (formula "34"))
                                                                        (rule "referencedObjectIsCreatedRight" (formula "35") (ifseqformula "36"))
                                                                        (rule "close" (formula "35") (ifseqformula "16"))
                                                                     )
                                                                     (branch " ¬ x_arr_arr_2[j_2]@anon_heap_LOOP«anonHeapFunction» = null ∧ ¬( (x_arr_arr_2[j_2]@anon_heap_LOOP«anonHeapFunction»).<created> = TRUE ∨ x_arr_arr_2[j_2].<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) FALSE"
                                                                        (rule "close" (formula "38") (ifseqformula "2"))
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                            (branch " x_arr_arr_2[j_2]@anon_heap_LOOP«anonHeapFunction».length ≥ 1 FALSE"
                                                               (rule "replace_known_right" (formula "23") (term "0,1,1,0,0") (ifseqformula "34"))
                                                               (builtin "One Step Simplification" (formula "23"))
                                                               (rule "replace_known_right" (formula "5") (term "0,0") (ifseqformula "34"))
                                                               (builtin "One Step Simplification" (formula "5"))
                                                               (rule "replace_known_right" (formula "43") (term "0,1,0") (ifseqformula "34"))
                                                               (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "34")))
                                                               (rule "inEqSimp_geqRight" (formula "34"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "6"))
                                                               (rule "times_zero_2" (formula "6") (term "1,0"))
                                                               (rule "add_zero_right" (formula "6") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                               (rule "mul_literals" (formula "6") (term "1"))
                                                               (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "6"))
                                                               (rule "qeq_literals" (formula "5") (term "0"))
                                                               (builtin "One Step Simplification" (formula "5"))
                                                               (rule "closeFalse" (formula "5"))
                                                            )
                                                         )
                                                         (branch "result_0.length ≥ 1 FALSE"
                                                            (rule "replace_known_right" (formula "31") (term "0,1,1,0,0") (ifseqformula "33"))
                                                            (builtin "One Step Simplification" (formula "31"))
                                                            (rule "inEqSimp_geqRight" (formula "33"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0"))
                                                            (rule "inEqSimp_or_tautInEq0" (formula "32") (term "0,0"))
                                                            (rule "add_zero_right" (formula "32") (term "1,1,0,0"))
                                                            (rule "qeq_literals" (formula "32") (term "1,0,0"))
                                                            (builtin "One Step Simplification" (formula "32"))
                                                            (rule "true_left" (formula "32"))
                                                            (rule "ifthenelse_split" (formula "23") (term "1"))
                                                            (branch " x_arr_arr_2[j_2]@anon_heap_LOOP«anonHeapFunction».length ≥ 1 TRUE"
                                                               (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "23"))
                                                               (builtin "One Step Simplification" (formula "6"))
                                                               (rule "replace_known_left" (formula "25") (term "0,1,1,0,0") (ifseqformula "23"))
                                                               (builtin "One Step Simplification" (formula "25"))
                                                               (rule "replace_known_left" (formula "35") (term "0,0") (ifseqformula "6"))
                                                               (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "6")))
                                                               (rule "replace_known_left" (formula "42") (term "0,1,0") (ifseqformula "23"))
                                                               (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "23")))
                                                               (rule "commute_or_2" (formula "26") (term "0"))
                                                               (rule "commute_or_2" (formula "19") (term "0"))
                                                               (rule "commute_or_2" (formula "25") (term "0"))
                                                               (rule "lenNonNegative" (formula "30") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "30"))
                                                               (rule "arrayLengthIsAShort" (formula "31") (term "1,1,0,0"))
                                                               (builtin "One Step Simplification" (formula "31"))
                                                               (rule "true_left" (formula "31"))
                                                               (rule "arrayLengthNotNegative" (formula "31") (term "1,1,0,0"))
                                                               (rule "commute_or" (formula "26") (term "0,0"))
                                                               (rule "commute_or" (formula "19") (term "0,0"))
                                                               (rule "commute_or" (formula "25") (term "0,0"))
                                                               (rule "lenNonNegative" (formula "24") (term "0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "24"))
                                                               (rule "arrayLengthNotNegative" (formula "25") (term "1,1,0,0"))
                                                               (rule "arrayLengthIsAShort" (formula "26") (term "1,1,0,0"))
                                                               (builtin "One Step Simplification" (formula "26"))
                                                               (rule "true_left" (formula "26"))
                                                               (rule "ifthenelse_split" (formula "35") (term "0"))
                                                               (branch "x_arr_arr_2 = chosen TRUE"
                                                                  (rule "applyEqReverse" (formula "37") (term "2,0") (ifseqformula "36"))
                                                                  (rule "hideAuxiliaryEq" (formula "36"))
                                                                  (rule "replace_known_left" (formula "7") (term "0,0,0") (ifseqformula "35"))
                                                                  (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "replace_known_left" (formula "36") (term "0,0") (ifseqformula "35"))
                                                                  (builtin "One Step Simplification" (formula "36"))
                                                                  (rule "applyEqReverse" (formula "34") (term "1,2,1,0,0") (ifseqformula "36"))
                                                                  (rule "applyEqReverse" (formula "33") (term "0,0") (ifseqformula "36"))
                                                                  (rule "applyEqReverse" (formula "32") (term "0,1,1,0,0") (ifseqformula "36"))
                                                                  (rule "applyEqReverse" (formula "34") (term "0,1,1,0,0") (ifseqformula "36"))
                                                                  (rule "applyEqReverse" (formula "32") (term "1,2,1,0,0") (ifseqformula "36"))
                                                                  (rule "hideAuxiliaryEq" (formula "36"))
                                                                  (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "35"))
                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "applyEqReverse" (formula "24") (term "1,2,1,0,0") (ifseqformula "8"))
                                                                  (rule "applyEqReverse" (formula "24") (term "0,1,1,0,0") (ifseqformula "8"))
                                                                  (rule "applyEqReverse" (formula "25") (term "0,0") (ifseqformula "8"))
                                                                  (rule "applyEqReverse" (formula "26") (term "0,1,1,0,0") (ifseqformula "8"))
                                                                  (rule "applyEqReverse" (formula "45") (term "0,1,1,0,0,0") (ifseqformula "8"))
                                                                  (rule "applyEqReverse" (formula "45") (term "0,1,1,0,0,1,0,1") (ifseqformula "8"))
                                                                  (rule "applyEqReverse" (formula "45") (term "1,2,1,0,0,0") (ifseqformula "8"))
                                                                  (rule "applyEqReverse" (formula "45") (term "1,2,1,0,0,1,0,1") (ifseqformula "8"))
                                                                  (rule "applyEqReverse" (formula "27") (term "1,2,1,0,0,0,0,0") (ifseqformula "8"))
                                                                  (rule "applyEqReverse" (formula "26") (term "1,2,1,0,0") (ifseqformula "8"))
                                                                  (rule "applyEqReverse" (formula "27") (term "0,1,1,0,0,0,0,0") (ifseqformula "8"))
                                                                  (rule "hideAuxiliaryEq" (formula "8"))
                                                                  (rule "applyEq" (formula "3") (term "1,1,1,0") (ifseqformula "34"))
                                                                  (rule "applyEq" (formula "6") (term "1,0,0") (ifseqformula "34"))
                                                                  (rule "applyEq" (formula "4") (term "1,1,1,0") (ifseqformula "34"))
                                                                  (rule "applyEq" (formula "20") (term "1,0,0,0,0") (ifseqformula "34"))
                                                                  (rule "applyEq" (formula "44") (term "1,0,1,0") (ifseqformula "34"))
                                                                  (rule "applyEq" (formula "43") (term "0") (ifseqformula "34"))
                                                                  (rule "applyEq" (formula "3") (term "1,1,0,1,0,1,0,0") (ifseqformula "34"))
                                                                  (rule "applyEq" (formula "20") (term "0,1,0") (ifseqformula "34"))
                                                                  (rule "applyEq" (formula "4") (term "1,1,0,0,1,0,0") (ifseqformula "34"))
                                                                  (rule "applyEq" (formula "43") (term "1,0,2,1,0,0,1,0,1") (ifseqformula "34"))
                                                                  (rule "applyEq" (formula "4") (term "1,0,0,0,0,0") (ifseqformula "34"))
                                                                  (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "34"))
                                                                  (rule "close" (formula "36") (ifseqformula "16"))
                                                               )
                                                               (branch "x_arr_arr_2 = chosen FALSE"
                                                                  (rule "applyEqReverse" (formula "36") (term "2,0") (ifseqformula "35"))
                                                                  (rule "hideAuxiliaryEq" (formula "35"))
                                                                  (rule "replace_known_right" (formula "7") (term "0,0,0") (ifseqformula "37"))
                                                                  (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                                  (rule "hideAuxiliaryEq" (formula "7"))
                                                                  (rule "replace_known_right" (formula "34") (term "0,0") (ifseqformula "36"))
                                                                  (builtin "One Step Simplification" (formula "34"))
                                                                  (rule "applyEqReverse" (formula "31") (term "1,2,1,0,0") (ifseqformula "34"))
                                                                  (rule "applyEqReverse" (formula "31") (term "0,1,1,0,0") (ifseqformula "34"))
                                                                  (rule "applyEqReverse" (formula "33") (term "0,1,1,0,0") (ifseqformula "34"))
                                                                  (rule "applyEqReverse" (formula "33") (term "1,2,1,0,0") (ifseqformula "34"))
                                                                  (rule "applyEqReverse" (formula "32") (term "0,0") (ifseqformula "34"))
                                                                  (rule "hideAuxiliaryEq" (formula "34"))
                                                                  (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "35"))
                                                                  (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "applyEqReverse" (formula "25") (term "1,2,1,0,0") (ifseqformula "7"))
                                                                  (rule "applyEqReverse" (formula "23") (term "0,1,1,0,0") (ifseqformula "7"))
                                                                  (rule "applyEqReverse" (formula "44") (term "1,2,1,0,0,1,0,1") (ifseqformula "7"))
                                                                  (rule "applyEqReverse" (formula "44") (term "1,2,1,0,0,0") (ifseqformula "7"))
                                                                  (rule "applyEqReverse" (formula "25") (term "0,1,1,0,0") (ifseqformula "7"))
                                                                  (rule "applyEqReverse" (formula "44") (term "0,1,1,0,0,1,0,1") (ifseqformula "7"))
                                                                  (rule "applyEqReverse" (formula "23") (term "1,2,1,0,0") (ifseqformula "7"))
                                                                  (rule "applyEqReverse" (formula "26") (term "1,2,1,0,0,0,0,0") (ifseqformula "7"))
                                                                  (rule "applyEqReverse" (formula "26") (term "0,1,1,0,0,0,0,0") (ifseqformula "7"))
                                                                  (rule "applyEqReverse" (formula "44") (term "0,1,1,0,0,0") (ifseqformula "7"))
                                                                  (rule "applyEqReverse" (formula "24") (term "0,0") (ifseqformula "7"))
                                                                  (rule "hideAuxiliaryEq" (formula "7"))
                                                                  (rule "ifthenelse_split" (formula "4") (term "0"))
                                                                  (branch " ¬ x_arr_arr_2[j_2]@anon_heap_LOOP«anonHeapFunction» = null ∧ ¬ (x_arr_arr_2[j_2]@anon_heap_LOOP«anonHeapFunction»).<created> = TRUE TRUE"
                                                                     (rule "andLeft" (formula "4"))
                                                                     (rule "notLeft" (formula "5"))
                                                                     (rule "notLeft" (formula "4"))
                                                                     (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "4"))
                                                                     (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "4"))
                                                                     (rule "hideAuxiliaryEq" (formula "4"))
                                                                     (rule "eqSymm" (formula "37"))
                                                                     (rule "replace_known_right" (formula "3") (term "0,0,1,0,0") (ifseqformula "34"))
                                                                     (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "33")))
                                                                     (rule "ifthenelse_negated" (formula "3") (term "0"))
                                                                     (rule "narrowSelectArrayType" (formula "37") (term "0") (ifseqformula "17") (ifseqformula "33"))
                                                                     (rule "eqSymm" (formula "37"))
                                                                     (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "17") (ifseqformula "33"))
                                                                     (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "26") (ifseqformula "33"))
                                                                     (rule "ifthenelse_to_or_right" (formula "24") (term "0,0,0"))
                                                                     (rule "nnf_notAnd" (formula "24") (term "0,0,0,0,0"))
                                                                     (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,0,0,0"))
                                                                     (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,0,0,0"))
                                                                     (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,0,0,0"))
                                                                     (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,0,0,0"))
                                                                     (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0,0,0,0"))
                                                                     (rule "add_zero_right" (formula "24") (term "0,0,0,0,0,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,0,0,0"))
                                                                     (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0,0"))
                                                                     (rule "commute_or" (formula "24") (term "0,0"))
                                                                     (rule "commute_or_2" (formula "24") (term "0"))
                                                                     (rule "commute_or_2" (formula "24") (term "0,1,0"))
                                                                     (rule "commute_or" (formula "24") (term "1,1,0"))
                                                                     (rule "commute_or" (formula "24") (term "0,0,1,0"))
                                                                     (rule "cnf_rightDist" (formula "24") (term "1,1,0"))
                                                                     (rule "cnf_rightDist" (formula "24") (term "0"))
                                                                     (rule "distr_forallAnd" (formula "24"))
                                                                     (rule "andLeft" (formula "24"))
                                                                     (rule "commute_or" (formula "25") (term "0"))
                                                                     (rule "shift_paren_or" (formula "24") (term "0"))
                                                                     (rule "commute_or_2" (formula "24") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "24"))
                                                                     (rule "commute_or" (formula "25") (term "1,1,0"))
                                                                     (rule "shift_paren_or" (formula "24") (term "0,0"))
                                                                     (rule "commute_or" (formula "24") (term "0,0,0"))
                                                                     (builtin "One Step Simplification" (formula "24"))
                                                                     (rule "cnf_rightDist" (formula "25") (term "0"))
                                                                     (rule "distr_forallAnd" (formula "25"))
                                                                     (rule "andLeft" (formula "25"))
                                                                     (rule "commute_or_2" (formula "25") (term "0"))
                                                                     (rule "shift_paren_or" (formula "26") (term "0"))
                                                                     (rule "commute_or_2" (formula "26") (term "0,0"))
                                                                     (rule "inEqSimp_or_tautInEq1" (formula "26") (term "0"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "26") (term "1,0"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "26") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "26") (term "1,0,1,0"))
                                                                     (rule "times_zero_1" (formula "26") (term "0,1,0"))
                                                                     (rule "leq_literals" (formula "26") (term "1,0"))
                                                                     (builtin "One Step Simplification" (formula "26"))
                                                                     (rule "true_left" (formula "26"))
                                                                     (rule "shift_paren_or" (formula "25") (term "0,0"))
                                                                     (rule "commute_or" (formula "25") (term "0,0,0"))
                                                                     (rule "inEqSimp_or_tautInEq1" (formula "25") (term "0,0"))
                                                                     (rule "add_zero_right" (formula "25") (term "1,1,0,0"))
                                                                     (rule "qeq_literals" (formula "25") (term "1,0,0"))
                                                                     (builtin "One Step Simplification" (formula "25"))
                                                                     (rule "true_left" (formula "25"))
                                                                     (rule "arrayLengthNotNegative" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                                                     (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                     (rule "qeq_literals" (formula "2"))
                                                                     (rule "true_left" (formula "2"))
                                                                     (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                                     (rule "leq_literals" (formula "2"))
                                                                     (rule "true_left" (formula "2"))
                                                                     (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                     (branch " x_arr_arr_2[j_2].<created>@anon_heap_LOOP«anonHeapFunction» = TRUE TRUE"
                                                                        (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "4"))
                                                                        (builtin "One Step Simplification" (formula "38"))
                                                                        (rule "closeTrue" (formula "38"))
                                                                     )
                                                                     (branch " x_arr_arr_2[j_2].<created>@anon_heap_LOOP«anonHeapFunction» = TRUE FALSE"
                                                                        (rule "referencedObjectIsCreatedRight" (formula "33") (ifseqformula "34"))
                                                                        (rule "close" (formula "33") (ifseqformula "17"))
                                                                     )
                                                                  )
                                                                  (branch " ¬ x_arr_arr_2[j_2]@anon_heap_LOOP«anonHeapFunction» = null ∧ ¬ (x_arr_arr_2[j_2]@anon_heap_LOOP«anonHeapFunction»).<created> = TRUE FALSE"
                                                                     (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "4"))
                                                                     (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "4"))
                                                                     (rule "hideAuxiliaryEq" (formula "4"))
                                                                     (rule "eqSymm" (formula "36"))
                                                                     (rule "ifthenelse_to_or_right" (formula "24") (term "0,0,0"))
                                                                     (rule "nnf_notAnd" (formula "24") (term "0,0,0,0,0"))
                                                                     (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,0,0,0"))
                                                                     (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,0,0,0"))
                                                                     (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,0,0,0"))
                                                                     (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,0,0,0"))
                                                                     (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0,0,0,0"))
                                                                     (rule "add_literals" (formula "24") (term "0,0,0,0,0,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,0,0,0"))
                                                                     (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0,0"))
                                                                     (rule "commute_or" (formula "24") (term "0,0"))
                                                                     (rule "commute_or_2" (formula "24") (term "0"))
                                                                     (rule "commute_or" (formula "24") (term "1,1,0"))
                                                                     (rule "commute_or_2" (formula "24") (term "0,1,0"))
                                                                     (rule "commute_or" (formula "24") (term "0,0,1,0"))
                                                                     (rule "cnf_rightDist" (formula "24") (term "1,1,0"))
                                                                     (rule "cnf_rightDist" (formula "24") (term "0"))
                                                                     (rule "distr_forallAnd" (formula "24"))
                                                                     (rule "andLeft" (formula "24"))
                                                                     (rule "commute_or" (formula "25") (term "0"))
                                                                     (rule "shift_paren_or" (formula "24") (term "0"))
                                                                     (rule "commute_or_2" (formula "24") (term "0,0"))
                                                                     (builtin "One Step Simplification" (formula "24"))
                                                                     (rule "commute_or" (formula "25") (term "1,1,0"))
                                                                     (rule "shift_paren_or" (formula "24") (term "0,0"))
                                                                     (rule "commute_or" (formula "24") (term "0,0,0"))
                                                                     (builtin "One Step Simplification" (formula "24"))
                                                                     (rule "cnf_rightDist" (formula "25") (term "0"))
                                                                     (rule "distr_forallAnd" (formula "25"))
                                                                     (rule "andLeft" (formula "25"))
                                                                     (rule "commute_or_2" (formula "25") (term "0"))
                                                                     (rule "shift_paren_or" (formula "26") (term "0"))
                                                                     (rule "commute_or_2" (formula "26") (term "0,0"))
                                                                     (rule "inEqSimp_or_tautInEq1" (formula "26") (term "0"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "26") (term "1,0"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "26") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "26") (term "1,0,1,0"))
                                                                     (rule "times_zero_1" (formula "26") (term "0,1,0"))
                                                                     (rule "leq_literals" (formula "26") (term "1,0"))
                                                                     (builtin "One Step Simplification" (formula "26"))
                                                                     (rule "true_left" (formula "26"))
                                                                     (rule "shift_paren_or" (formula "25") (term "0,0"))
                                                                     (rule "commute_or" (formula "25") (term "0,0,0"))
                                                                     (rule "inEqSimp_or_tautInEq1" (formula "25") (term "0,0"))
                                                                     (rule "add_zero_right" (formula "25") (term "1,1,0,0"))
                                                                     (rule "qeq_literals" (formula "25") (term "1,0,0"))
                                                                     (builtin "One Step Simplification" (formula "25"))
                                                                     (rule "true_left" (formula "25"))
                                                                     (rule "ifthenelse_split" (formula "3") (term "0"))
                                                                     (branch " ¬ x_arr_arr_2[j_2]@anon_heap_LOOP«anonHeapFunction» = null ∧ ¬( (x_arr_arr_2[j_2]@anon_heap_LOOP«anonHeapFunction»).<created> = TRUE ∨ x_arr_arr_2[j_2].<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) TRUE"
                                                                        (rule "andLeft" (formula "3"))
                                                                        (rule "notLeft" (formula "3"))
                                                                        (rule "notLeft" (formula "3"))
                                                                        (rule "orRight" (formula "33"))
                                                                        (rule "referencedObjectIsCreatedRight" (formula "34") (ifseqformula "35"))
                                                                        (rule "close" (formula "34") (ifseqformula "17"))
                                                                     )
                                                                     (branch " ¬ x_arr_arr_2[j_2]@anon_heap_LOOP«anonHeapFunction» = null ∧ ¬( (x_arr_arr_2[j_2]@anon_heap_LOOP«anonHeapFunction»).<created> = TRUE ∨ x_arr_arr_2[j_2].<created>@anon_heap_LOOP«anonHeapFunction» = TRUE) FALSE"
                                                                        (rule "close" (formula "37") (ifseqformula "3"))
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                            (branch " x_arr_arr_2[j_2]@anon_heap_LOOP«anonHeapFunction».length ≥ 1 FALSE"
                                                               (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "33"))
                                                               (builtin "One Step Simplification" (formula "6"))
                                                               (rule "replace_known_right" (formula "24") (term "0,1,1,0,0") (ifseqformula "33"))
                                                               (builtin "One Step Simplification" (formula "24"))
                                                               (rule "replace_known_right" (formula "42") (term "0,1,1,0,0,1") (ifseqformula "33"))
                                                               (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "33")))
                                                               (rule "inEqSimp_geqRight" (formula "33"))
                                                               (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "7"))
                                                               (rule "mul_literals" (formula "7") (term "1,0"))
                                                               (rule "add_zero_right" (formula "7") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                                               (rule "mul_literals" (formula "7") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "6"))
                                                               (rule "qeq_literals" (formula "7") (term "0"))
                                                               (builtin "One Step Simplification" (formula "7"))
                                                               (rule "closeFalse" (formula "7"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (ifseqformula "13"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "1") (ifseqformula "20"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,1") (ifseqformula "13"))
                                             (rule "translateJavaAddInt" (formula "33") (term "1,1,0,0"))
                                             (rule "orRight" (formula "24"))
                                             (rule "allRight" (formula "34") (inst "sk=j_1"))
                                             (rule "impRight" (formula "34"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "notRight" (formula "36"))
                                             (rule "eqSymm" (formula "20") (term "1,0"))
                                             (rule "eqSymm" (formula "25"))
                                             (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "31"))
                                             (builtin "One Step Simplification" (formula "12"))
                                             (rule "replace_known_left" (formula "8") (term "1,1") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "10")))
                                             (rule "notLeft" (formula "8"))
                                             (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "30"))
                                             (builtin "One Step Simplification" (formula "10"))
                                             (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "29"))
                                             (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "27")) (ifInst ""  (formula "28")))
                                             (rule "polySimp_elimSub" (formula "15") (term "2,1,0,0,0"))
                                             (rule "mul_literals" (formula "15") (term "1,2,1,0,0,0"))
                                             (rule "polySimp_elimSub" (formula "27") (term "2,1,0,0,0"))
                                             (rule "mul_literals" (formula "27") (term "1,2,1,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "3") (term "1"))
                                             (rule "polySimp_addComm0" (formula "15") (term "2,1,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "27") (term "2,1,0,0,0"))
                                             (rule "inEqSimp_leqRight" (formula "36"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_leqRight" (formula "35"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_ltRight" (formula "36"))
                                             (rule "mul_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_ltRight" (formula "34"))
                                             (rule "mul_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "7"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "7") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "10"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "10") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "30") (term "0"))
                                             (rule "array_store_known_dynamic_array_type" (formula "9") (ifseqformula "11"))
                                             (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "32")))
                                             (rule "true_left" (formula "9"))
                                             (rule "inEqSimp_ltToLeq" (formula "6"))
                                             (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                             (rule "mul_literals" (formula "6") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                             (rule "add_literals" (formula "6") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "6") (term "0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "19"))
                                             (rule "inEqSimp_commuteLeq" (formula "18"))
                                             (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "5"))
                                             (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "19"))
                                             (rule "applyEq" (formula "6") (term "0,1,0") (ifseqformula "18"))
                                             (rule "applyEq" (formula "15") (term "1,2,1,0,0,0") (ifseqformula "17"))
                                             (rule "applyEq" (formula "26") (term "1,2,1,0,0") (ifseqformula "17"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1"))
                                             (rule "mul_literals" (formula "2") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                             (rule "polySimp_elimOne" (formula "7") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "1"))
                                             (rule "polySimp_elimOne" (formula "5") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
                                             (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                             (rule "add_literals" (formula "15") (term "0,0"))
                                             (rule "qeq_literals" (formula "15") (term "0"))
                                             (builtin "One Step Simplification" (formula "15"))
                                             (rule "true_left" (formula "15"))
                                             (rule "nonNull" (formula "12") (inst "i=i_1"))
                                             (rule "greater_literals" (formula "12") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "28")))
                                             (rule "sub_literals" (formula "12") (term "2,1,0"))
                                             (builtin "One Step Simplification" (formula "12"))
                                             (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "8") (ifseqformula "28"))
                                             (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                                             (rule "array2seqDef" (formula "16") (term "1,0,1,0") (inst "u=u"))
                                             (rule "array2seqDef" (formula "16") (term "0,0,1,0") (inst "u=u"))
                                             (rule "array2seqDef" (formula "16") (term "1,1,0") (inst "u=u"))
                                             (rule "eqSymm" (formula "16") (term "1,0"))
                                             (rule "array2seqDef" (formula "21") (term "1,0") (inst "u=u"))
                                             (rule "array2seqDef" (formula "21") (term "0,0") (inst "u=u"))
                                             (rule "array2seqDef" (formula "21") (term "1") (inst "u=u"))
                                             (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_12"))
                                             (rule "simplifySelectOfStore" (formula "3"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "castDel" (formula "3") (term "1,0"))
                                             (rule "eqSymm" (formula "3") (term "0,0"))
                                             (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                                             (rule "ifEqualsNull" (formula "3"))
                                             (rule "replace_known_right" (formula "3") (term "1,0") (ifseqformula "27"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "andLeft" (formula "3"))
                                             (rule "notLeft" (formula "3"))
                                             (rule "inEqSimp_strengthen0" (formula "6") (ifseqformula "24"))
                                             (rule "inEqSimp_contradEq3" (formula "24") (ifseqformula "6"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0"))
                                             (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "24") (term "0,0"))
                                             (rule "qeq_literals" (formula "24") (term "0"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "false_right" (formula "24"))
                                             (rule "eqSeqDef" (formula "22") (inst "iv=iv"))
                                             (rule "andLeft" (formula "22"))
                                             (rule "getOfSeqDef" (formula "23") (term "1,1,0"))
                                             (rule "castDel" (formula "23") (term "2,1,1,0"))
                                             (rule "castDel" (formula "23") (term "1,1,1,0"))
                                             (rule "add_zero_right" (formula "23") (term "0,2,1,1,1,0"))
                                             (rule "polySimp_elimSub" (formula "23") (term "1,1,0,1,1,0"))
                                             (rule "mul_literals" (formula "23") (term "1,1,1,0,1,1,0"))
                                             (rule "add_zero_right" (formula "23") (term "1,1,0,1,1,0"))
                                             (rule "lenOfSeqDef" (formula "22") (term "1"))
                                             (rule "polySimp_elimSub" (formula "22") (term "1,1"))
                                             (rule "times_zero_2" (formula "22") (term "1,1,1"))
                                             (rule "add_zero_right" (formula "22") (term "1,1"))
                                             (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "23") (term "0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1"))
                                             (rule "add_zero_right" (formula "22") (term "0,0,1"))
                                             (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,1,1,0"))
                                             (rule "apply_eq_monomials" (formula "23") (term "1,0,1,0,0") (ifseqformula "22"))
                                             (rule "polySimp_rightDist" (formula "23") (term "0,1,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,1,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "23") (term "1,0,1,0,0"))
                                             (rule "add_literals" (formula "23") (term "1,1,1,0,1,0,0"))
                                             (rule "times_zero_1" (formula "23") (term "1,1,0,1,0,0"))
                                             (rule "add_zero_right" (formula "23") (term "1,0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "23") (term "0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "23") (term "1,1,0,1,1,0"))
                                             (rule "mul_literals" (formula "23") (term "0,1,1,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,1,1,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "0,0,1"))
                                             (rule "polySimp_elimOne" (formula "22") (term "0,0,1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0,1,0,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,1,0,0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "23") (term "0,0,0,1,0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                                             (rule "pullOutSelect" (formula "26") (term "0") (inst "selectSK=java_lang_Object_created__8"))
                                             (rule "simplifySelectOfMemset" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0"))
                                             (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                             (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "32"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                                             (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_13"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "21"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "32")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "16"))
                                             (rule "ifthenelse_negated" (formula "3") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "3") (term "0,0,0,0"))
                                             (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                                             (rule "ifEqualsNull" (formula "3"))
                                             (rule "pullOutSelect" (formula "23") (term "1,2,1,0,0") (inst "selectSK=arr_14"))
                                             (rule "applyEq" (formula "25") (term "0,1,1,0,0,1,0") (ifseqformula "23"))
                                             (rule "applyEq" (formula "25") (term "1,2,1,0,0,1,0") (ifseqformula "23"))
                                             (rule "applyEq" (formula "24") (term "0,1,1,0,0") (ifseqformula "23"))
                                             (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "16"))
                                             (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "32")))
                                             (rule "eqSymm" (formula "23") (term "0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "23") (term "0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "23") (term "2,0"))
                                             (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "7"))
                                             (rule "times_zero_1" (formula "6") (term "0,0"))
                                             (rule "add_zero_left" (formula "6") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                             (rule "mul_literals" (formula "6") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "6"))
                                             (rule "leq_literals" (formula "9") (term "0"))
                                             (builtin "One Step Simplification" (formula "9"))
                                             (rule "true_left" (formula "9"))
                                             (rule "pullOutSelect" (formula "3") (term "0,0,0,0") (inst "selectSK=java_lang_Object_created__9"))
                                             (rule "applyEq" (formula "4") (term "0,0,0,0,1") (ifseqformula "3"))
                                             (rule "simplifySelectOfMemset" (formula "3"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfStore" (formula "3"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfStore" (formula "3"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfStore" (formula "3"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "simplifySelectOfCreate" (formula "3"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "34")))
                                             (rule "castDel" (formula "3") (term "0"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "4") (term "0,0,0,0,1") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "pullOutSelect" (formula "23") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__10"))
                                             (rule "simplifySelectOfMemset" (formula "23"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "simplifySelectOfStore" (formula "23"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "simplifySelectOfStore" (formula "23"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "simplifySelectOfStore" (formula "23"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "simplifySelectOfCreate" (formula "23"))
                                             (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "34")))
                                             (rule "castDel" (formula "23") (term "1,0"))
                                             (rule "applyEq" (formula "23") (term "2,0") (ifseqformula "12"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "applyEqReverse" (formula "24") (term "0,0,1,0,0") (ifseqformula "23"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "hideAuxiliaryEq" (formula "23"))
                                             (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_15"))
                                             (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "17"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "pullOutSelect" (formula "23") (term "2,0") (inst "selectSK=arr_16"))
                                             (rule "simplifySelectOfMemset" (formula "23"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "dismissNonSelectedField" (formula "23") (term "2,0"))
                                             (rule "elementOfArrayRangeConcrete" (formula "23") (term "0,0"))
                                             (rule "eqSymm" (formula "23") (term "0,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "23") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "23") (term "2,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "23") (term "1,0,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "23") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "23") (term "0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                                             (rule "replace_known_left" (formula "23") (term "1,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "inEqSimp_subsumption1" (formula "23") (term "1,0,0") (ifseqformula "6"))
                                             (rule "leq_literals" (formula "23") (term "0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "pullOutSelect" (formula "23") (term "2,0") (inst "selectSK=arr_17"))
                                             (rule "simplifySelectOfCreate" (formula "23"))
                                             (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "35")))
                                             (rule "applyEqReverse" (formula "24") (term "2,0") (ifseqformula "23"))
                                             (rule "hideAuxiliaryEq" (formula "23"))
                                             (rule "nnf_imp2or" (formula "19") (term "0"))
                                             (rule "nnf_imp2or" (formula "14") (term "0"))
                                             (rule "nnf_imp2or" (formula "18") (term "0"))
                                             (rule "nnf_imp2or" (formula "26") (term "0"))
                                             (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                                             (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                             (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                             (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                             (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "26") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                             (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                                             (rule "commute_or_2" (formula "19") (term "0"))
                                             (rule "arrayLengthIsAShort" (formula "17") (term "0"))
                                             (builtin "One Step Simplification" (formula "17"))
                                             (rule "true_left" (formula "17"))
                                             (rule "arrayLengthNotNegative" (formula "17") (term "0"))
                                             (rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
                                             (rule "arrayLengthNotNegative" (formula "17") (term "1"))
                                             (rule "arrayLengthIsAShort" (formula "17") (term "1"))
                                             (builtin "One Step Simplification" (formula "17"))
                                             (rule "true_left" (formula "17"))
                                             (rule "commute_or_2" (formula "14") (term "0"))
                                             (rule "commute_or_2" (formula "18") (term "0"))
                                             (rule "commute_or_2" (formula "26") (term "0"))
                                             (rule "commute_or" (formula "19") (term "0,0"))
                                             (rule "commute_or" (formula "14") (term "0,0"))
                                             (rule "commute_or" (formula "18") (term "0,0"))
                                             (rule "commute_or" (formula "26") (term "0,0"))
                                             (rule "ifthenelse_split" (formula "25") (term "1"))
                                             (branch "result_0.length ≥ 1 TRUE"
                                                (rule "replace_known_left" (formula "27") (term "0,1,1,0") (ifseqformula "25"))
                                                (builtin "One Step Simplification" (formula "27"))
                                                (rule "arrayLengthIsAShort" (formula "26") (term "1,0,0,0"))
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "true_left" (formula "26"))
                                                (rule "arrayLengthNotNegative" (formula "26") (term "1,0,0,0"))
                                                (rule "ifthenelse_to_or_right" (formula "28") (term "0,0,0"))
                                                (rule "nnf_notAnd" (formula "28") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "28") (term "0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "28") (term "0,0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0,0,0"))
                                                (rule "commute_or" (formula "28") (term "0,0"))
                                                (rule "commute_or_2" (formula "28") (term "0"))
                                                (rule "commute_or_2" (formula "28") (term "0,1,0"))
                                                (rule "commute_or" (formula "28") (term "1,1,0"))
                                                (rule "commute_or" (formula "28") (term "0,0,1,0"))
                                                (rule "cnf_rightDist" (formula "28") (term "1,1,0"))
                                                (rule "cnf_rightDist" (formula "28") (term "0"))
                                                (rule "distr_forallAnd" (formula "28"))
                                                (rule "andLeft" (formula "28"))
                                                (rule "commute_or" (formula "29") (term "0"))
                                                (rule "shift_paren_or" (formula "28") (term "0"))
                                                (rule "commute_or_2" (formula "28") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "28"))
                                                (rule "commute_or" (formula "29") (term "1,1,0"))
                                                (rule "shift_paren_or" (formula "28") (term "0,0"))
                                                (rule "commute_or" (formula "28") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "28"))
                                                (rule "cnf_rightDist" (formula "29") (term "0"))
                                                (rule "distr_forallAnd" (formula "29"))
                                                (rule "andLeft" (formula "29"))
                                                (rule "commute_or_2" (formula "29") (term "0"))
                                                (rule "shift_paren_or" (formula "30") (term "0"))
                                                (rule "commute_or_2" (formula "30") (term "0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "30") (term "0"))
                                                (rule "inEqSimp_homoInEq1" (formula "30") (term "1,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "30") (term "0,1,0"))
                                                (rule "add_literals" (formula "30") (term "1,0,1,0"))
                                                (rule "times_zero_1" (formula "30") (term "0,1,0"))
                                                (rule "leq_literals" (formula "30") (term "1,0"))
                                                (builtin "One Step Simplification" (formula "30"))
                                                (rule "true_left" (formula "30"))
                                                (rule "shift_paren_or" (formula "29") (term "0,0"))
                                                (rule "commute_or" (formula "29") (term "0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "29") (term "0,0"))
                                                (rule "add_literals" (formula "29") (term "1,1,0,0"))
                                                (rule "qeq_literals" (formula "29") (term "1,0,0"))
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "true_left" (formula "29"))
                                                (rule "ifthenelse_split" (formula "23") (term "0"))
                                                (branch "x_arr_arr_2 = chosen TRUE"
                                                   (rule "applyEqReverse" (formula "25") (term "2,0") (ifseqformula "24"))
                                                   (rule "hideAuxiliaryEq" (formula "24"))
                                                   (rule "replace_known_left" (formula "24") (term "0,0") (ifseqformula "23"))
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (rule "applyEqReverse" (formula "28") (term "1,2,1,0,0,0,0,0") (ifseqformula "24"))
                                                   (rule "applyEqReverse" (formula "27") (term "1,2,1,0,0") (ifseqformula "24"))
                                                   (rule "applyEqReverse" (formula "28") (term "0,1,1,0,0,0,0,0") (ifseqformula "24"))
                                                   (rule "applyEqReverse" (formula "27") (term "0,1,1,0,0") (ifseqformula "24"))
                                                   (rule "hideAuxiliaryEq" (formula "24"))
                                                   (rule "applyEq" (formula "18") (term "1,1,2,0,0,0,0") (ifseqformula "23"))
                                                   (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "23"))
                                                   (rule "close" (formula "29") (ifseqformula "12"))
                                                )
                                                (branch "x_arr_arr_2 = chosen FALSE"
                                                   (rule "applyEqReverse" (formula "24") (term "2,0") (ifseqformula "23"))
                                                   (rule "hideAuxiliaryEq" (formula "23"))
                                                   (rule "replace_known_right" (formula "23") (term "0,0") (ifseqformula "29"))
                                                   (builtin "One Step Simplification" (formula "23"))
                                                   (rule "applyEqReverse" (formula "27") (term "1,2,1,0,0,0,0,0") (ifseqformula "23"))
                                                   (rule "applyEqReverse" (formula "26") (term "0,1,1,0,0") (ifseqformula "23"))
                                                   (rule "applyEqReverse" (formula "27") (term "0,1,1,0,0,0,0,0") (ifseqformula "23"))
                                                   (rule "applyEqReverse" (formula "26") (term "1,2,1,0,0") (ifseqformula "23"))
                                                   (rule "hideAuxiliaryEq" (formula "23"))
                                                   (rule "allLeft" (formula "14") (inst "t=i_0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "14") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1"))
                                                   (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "14") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "14") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "14"))
                                                   (rule "inEqSimp_contradInEq1" (formula "14") (term "1") (ifseqformula "6"))
                                                   (rule "qeq_literals" (formula "14") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "14"))
                                                   (rule "notLeft" (formula "14"))
                                                   (rule "allLeft" (formula "18") (inst "t=j_1"))
                                                   (rule "replaceKnownSelect_taclet100000110001010_21" (formula "18") (term "1,2,0,0,0"))
                                                   (rule "replaceKnownSelect_taclet100000110001010_21" (formula "18") (term "0,1,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet100000110001010_22" (formula "18") (term "1,2,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet100000110001010_22" (formula "18") (term "0,1,0,0,0"))
                                                   (rule "eqSymm" (formula "18") (term "0,0"))
                                                   (rule "applyEq" (formula "18") (term "0,1,1,0,0") (ifseqformula "3"))
                                                   (rule "applyEq" (formula "18") (term "1,2,1,0,0") (ifseqformula "3"))
                                                   (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "7"))
                                                   (rule "qeq_literals" (formula "18") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "8"))
                                                   (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                                   (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                                   (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "18") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "eqSeqDef" (formula "18") (inst "iv=iv"))
                                                   (rule "andLeft" (formula "18"))
                                                   (rule "lenOfSeqDef" (formula "18") (term "1"))
                                                   (rule "polySimp_elimSub" (formula "18") (term "1,1"))
                                                   (rule "times_zero_2" (formula "18") (term "1,1,1"))
                                                   (rule "add_zero_right" (formula "18") (term "1,1"))
                                                   (rule "getOfSeqDef" (formula "19") (term "1,1,0"))
                                                   (rule "castDel" (formula "19") (term "2,1,1,0"))
                                                   (rule "castDel" (formula "19") (term "1,1,1,0"))
                                                   (rule "add_zero_right" (formula "19") (term "0,2,1,1,1,0"))
                                                   (rule "polySimp_elimSub" (formula "19") (term "1,1,0,1,1,0"))
                                                   (rule "times_zero_2" (formula "19") (term "1,1,1,0,1,1,0"))
                                                   (rule "add_zero_right" (formula "19") (term "1,1,0,1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1"))
                                                   (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,1,1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,1,1,0"))
                                                   (rule "apply_eq_monomials" (formula "19") (term "1,0,1,0,0") (ifseqformula "18"))
                                                   (rule "polySimp_rightDist" (formula "19") (term "0,1,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "19") (term "1,0,1,0,0"))
                                                   (rule "add_literals" (formula "19") (term "1,1,1,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "19") (term "1,1,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "19") (term "1,0,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "0,0,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "19") (term "1,1,0,1,1,0"))
                                                   (rule "mul_literals" (formula "19") (term "0,1,1,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,1,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0,1,0,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,1,0,0,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "19") (term "0,0,0,1,0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                                                   (rule "pullOutSelect" (formula "19") (term "1,2,1,0,0,1,0") (inst "selectSK=arr_19"))
                                                   (rule "applyEq" (formula "18") (term "0,1,1,0,0") (ifseqformula "19"))
                                                   (rule "applyEq" (formula "18") (term "1,2,1,0,0") (ifseqformula "19"))
                                                   (rule "applyEq" (formula "20") (term "0,1,1,0,0,1,0") (ifseqformula "19"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "16"))
                                                   (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "38")))
                                                   (rule "eqSymm" (formula "19") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "19") (term "0,0,0") (ifseqformula "32"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "dismissNonSelectedField" (formula "19") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "19") (term "0,0,0,0"))
                                                   (rule "replaceKnownSelect_taclet100000110001010_15" (formula "19") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet100000110001010_20" (formula "19") (term "0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "simplifySelectOfMemset" (formula "19"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "dismissNonSelectedField" (formula "19") (term "2,0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "19") (term "0,0"))
                                                   (rule "eqSymm" (formula "19") (term "0,0,0,0"))
                                                   (rule "replace_known_right" (formula "19") (term "0,0,0,0") (ifseqformula "32"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "simplifySelectOfStore" (formula "19"))
                                                   (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "32")))
                                                   (rule "simplifySelectOfStore" (formula "19"))
                                                   (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "32")))
                                                   (rule "simplifySelectOfCreate" (formula "19"))
                                                   (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "32")) (ifInst ""  (formula "39")))
                                                   (rule "applyEqReverse" (formula "20") (term "0,1,1,0,0,1,0") (ifseqformula "19"))
                                                   (rule "applyEqReverse" (formula "18") (term "0,1,1,0,0") (ifseqformula "19"))
                                                   (rule "applyEqReverse" (formula "20") (term "1,2,1,0,0,1,0") (ifseqformula "19"))
                                                   (rule "applyEqReverse" (formula "18") (term "1,2,1,0,0") (ifseqformula "19"))
                                                   (rule "hideAuxiliaryEq" (formula "19"))
                                                   (rule "nnf_imp2or" (formula "19") (term "0"))
                                                   (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                                   (rule "commute_or_2" (formula "19") (term "0"))
                                                   (rule "commute_or" (formula "19") (term "0,0"))
                                                   (rule "allLeft" (formula "21") (inst "t=j_1"))
                                                   (rule "replaceKnownSelect_taclet100000110001010_21" (formula "21") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet100000110001010_22" (formula "21") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "21") (term "0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "21"))
                                                   (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "7"))
                                                   (rule "qeq_literals" (formula "21") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "21"))
                                                   (rule "inEqSimp_contradInEq0" (formula "21") (ifseqformula "8"))
                                                   (rule "andLeft" (formula "21"))
                                                   (rule "inEqSimp_homoInEq1" (formula "21"))
                                                   (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                                   (rule "mul_literals" (formula "21") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "21") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
                                                   (rule "add_literals" (formula "21") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "21") (term "1,0"))
                                                   (rule "add_zero_right" (formula "21") (term "0"))
                                                   (rule "leq_literals" (formula "21"))
                                                   (rule "closeFalse" (formula "21"))
                                                )
                                             )
                                             (branch "result_0.length ≥ 1 FALSE"
                                                (rule "replace_known_right" (formula "26") (term "0,1,1,0") (ifseqformula "28"))
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "inEqSimp_geqRight" (formula "28"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "27") (term "0"))
                                                (rule "add_zero_right" (formula "27") (term "1,1,0"))
                                                (rule "qeq_literals" (formula "27") (term "1,0"))
                                                (builtin "One Step Simplification" (formula "27"))
                                                (rule "true_left" (formula "27"))
                                                (rule "arrayLengthNotNegative" (formula "26") (term "1,0,0,0"))
                                                (rule "arrayLengthIsAShort" (formula "27") (term "1,0,0,0"))
                                                (builtin "One Step Simplification" (formula "27"))
                                                (rule "true_left" (formula "27"))
                                                (rule "ifthenelse_split" (formula "24") (term "0"))
                                                (branch "x_arr_arr_2 = chosen TRUE"
                                                   (rule "applyEqReverse" (formula "26") (term "2,0") (ifseqformula "25"))
                                                   (rule "hideAuxiliaryEq" (formula "25"))
                                                   (rule "replace_known_left" (formula "25") (term "0,0") (ifseqformula "24"))
                                                   (builtin "One Step Simplification" (formula "25"))
                                                   (rule "applyEqReverse" (formula "27") (term "1,2,1,0,0") (ifseqformula "25"))
                                                   (rule "applyEqReverse" (formula "27") (term "0,1,1,0,0") (ifseqformula "25"))
                                                   (rule "hideAuxiliaryEq" (formula "25"))
                                                   (rule "applyEq" (formula "17") (term "1,0,0,0,0") (ifseqformula "24"))
                                                   (rule "applyEq" (formula "34") (term "0") (ifseqformula "24"))
                                                   (rule "applyEq" (formula "19") (term "1,0,1,0,0,0,0") (ifseqformula "24"))
                                                   (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "24"))
                                                   (rule "close" (formula "28") (ifseqformula "13"))
                                                )
                                                (branch "x_arr_arr_2 = chosen FALSE"
                                                   (rule "applyEqReverse" (formula "25") (term "2,0") (ifseqformula "24"))
                                                   (rule "hideAuxiliaryEq" (formula "24"))
                                                   (rule "replace_known_right" (formula "24") (term "0,0") (ifseqformula "28"))
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (rule "applyEqReverse" (formula "26") (term "1,2,1,0,0") (ifseqformula "24"))
                                                   (rule "applyEqReverse" (formula "26") (term "0,1,1,0,0") (ifseqformula "24"))
                                                   (rule "hideAuxiliaryEq" (formula "24"))
                                                   (rule "allLeft" (formula "15") (inst "t=i_0"))
                                                   (rule "inEqSimp_commuteGeq" (formula "15") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                                                   (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "15") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "15") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "7"))
                                                   (rule "qeq_literals" (formula "15") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "15"))
                                                   (rule "notLeft" (formula "15"))
                                                   (rule "allLeft" (formula "19") (inst "t=j_1"))
                                                   (rule "replaceKnownSelect_taclet100000110001010_21" (formula "19") (term "1,2,0,0,0"))
                                                   (rule "replaceKnownSelect_taclet100000110001010_21" (formula "19") (term "0,1,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet100000110001010_22" (formula "19") (term "1,2,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet100000110001010_22" (formula "19") (term "0,1,0,0,0"))
                                                   (rule "eqSymm" (formula "19") (term "0,0"))
                                                   (rule "applyEq" (formula "19") (term "1,2,1,0,0") (ifseqformula "4"))
                                                   (rule "applyEq" (formula "19") (term "0,1,1,0,0") (ifseqformula "4"))
                                                   (rule "inEqSimp_contradInEq0" (formula "19") (term "1") (ifseqformula "9"))
                                                   (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                                                   (rule "polySimp_addComm0" (formula "19") (term "0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                                   (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "19") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "8"))
                                                   (rule "qeq_literals" (formula "19") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "eqSeqDef" (formula "19") (inst "iv=iv"))
                                                   (rule "andLeft" (formula "19"))
                                                   (rule "getOfSeqDef" (formula "20") (term "1,1,0"))
                                                   (rule "castDel" (formula "20") (term "1,1,1,0"))
                                                   (rule "castDel" (formula "20") (term "2,1,1,0"))
                                                   (rule "add_zero_right" (formula "20") (term "0,2,1,1,1,0"))
                                                   (rule "polySimp_elimSub" (formula "20") (term "1,1,0,1,1,0"))
                                                   (rule "times_zero_2" (formula "20") (term "1,1,1,0,1,1,0"))
                                                   (rule "add_zero_right" (formula "20") (term "1,1,0,1,1,0"))
                                                   (rule "lenOfSeqDef" (formula "19") (term "1"))
                                                   (rule "polySimp_elimSub" (formula "19") (term "1,1"))
                                                   (rule "times_zero_2" (formula "19") (term "1,1,1"))
                                                   (rule "add_zero_right" (formula "19") (term "1,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "20") (term "0,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1"))
                                                   (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                                                   (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,1,1,0"))
                                                   (rule "apply_eq_monomials" (formula "20") (term "1,0,1,0,0") (ifseqformula "19"))
                                                   (rule "polySimp_rightDist" (formula "20") (term "0,1,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "20") (term "1,0,1,0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "20") (term "1,0,1,0,0"))
                                                   (rule "add_literals" (formula "20") (term "1,1,1,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "20") (term "1,1,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "20") (term "1,0,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "20") (term "0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "20") (term "1,1,0,1,1,0"))
                                                   (rule "mul_literals" (formula "20") (term "0,1,1,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,1,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1"))
                                                   (rule "polySimp_elimOne" (formula "19") (term "0,0,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,1,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "20") (term "0,0,1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "20") (term "0,0,1,1,1,0,0"))
                                                   (rule "pullOutSelect" (formula "19") (term "1,2,1,0,0") (inst "selectSK=arr_18"))
                                                   (rule "applyEq" (formula "20") (term "0,1,1,0,0") (ifseqformula "19"))
                                                   (rule "applyEq" (formula "21") (term "1,2,1,0,0,1,0") (ifseqformula "19"))
                                                   (rule "applyEq" (formula "21") (term "0,1,1,0,0,1,0") (ifseqformula "19"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "17"))
                                                   (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "37")))
                                                   (rule "eqSymm" (formula "19") (term "0,0,0"))
                                                   (rule "replace_known_right" (formula "19") (term "0,0,0") (ifseqformula "31"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "dismissNonSelectedField" (formula "19") (term "2,0"))
                                                   (rule "dismissNonSelectedField" (formula "19") (term "0,0,0,0"))
                                                   (rule "replaceKnownSelect_taclet100000110001010_15" (formula "19") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet100000110001010_20" (formula "19") (term "0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "simplifySelectOfMemset" (formula "19"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "19") (term "0,0"))
                                                   (rule "eqSymm" (formula "19") (term "0,0,0,0"))
                                                   (rule "replace_known_right" (formula "19") (term "0,0,0,0") (ifseqformula "31"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "simplifySelectOfStore" (formula "19"))
                                                   (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "31")))
                                                   (rule "simplifySelectOfStore" (formula "19"))
                                                   (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "31")))
                                                   (rule "simplifySelectOfStore" (formula "19"))
                                                   (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "31")))
                                                   (rule "simplifySelectOfCreate" (formula "19"))
                                                   (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "31")) (ifInst ""  (formula "38")))
                                                   (rule "applyEqReverse" (formula "20") (term "0,1,1,0,0") (ifseqformula "19"))
                                                   (rule "applyEqReverse" (formula "21") (term "0,1,1,0,0,1,0") (ifseqformula "19"))
                                                   (rule "applyEqReverse" (formula "21") (term "1,2,1,0,0,1,0") (ifseqformula "19"))
                                                   (rule "applyEqReverse" (formula "20") (term "1,2,1,0,0") (ifseqformula "19"))
                                                   (rule "hideAuxiliaryEq" (formula "19"))
                                                   (rule "nnf_imp2or" (formula "20") (term "0"))
                                                   (rule "nnf_notAnd" (formula "20") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "20") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                                                   (rule "commute_or_2" (formula "20") (term "0"))
                                                   (rule "commute_or" (formula "20") (term "0,0"))
                                                   (rule "allLeft" (formula "22") (inst "t=j_1"))
                                                   (rule "replaceKnownSelect_taclet100000110001010_21" (formula "22") (term "0,0,0,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet100000110001010_22" (formula "22") (term "0,0,0,0"))
                                                   (rule "replace_known_left" (formula "22") (term "0,0,0") (ifseqformula "4"))
                                                   (builtin "One Step Simplification" (formula "22"))
                                                   (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "8"))
                                                   (rule "qeq_literals" (formula "22") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "22"))
                                                   (rule "inEqSimp_contradInEq0" (formula "22") (ifseqformula "9"))
                                                   (rule "andLeft" (formula "22"))
                                                   (rule "inEqSimp_homoInEq1" (formula "22"))
                                                   (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                                   (rule "mul_literals" (formula "22") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "22") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                                   (rule "add_literals" (formula "22") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "22") (term "1,0"))
                                                   (rule "add_zero_right" (formula "22") (term "0"))
                                                   (rule "leq_literals" (formula "22"))
                                                   (rule "closeFalse" (formula "22"))
                                                )
                                             )
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (ifseqformula "13"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "1") (ifseqformula "20"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,1") (ifseqformula "13"))
                                          (rule "orRight" (formula "24"))
                                          (rule "allRight" (formula "34") (inst "sk=f_1"))
                                          (rule "allRight" (formula "34") (inst "sk=o_1"))
                                          (rule "orRight" (formula "34"))
                                          (rule "orRight" (formula "34"))
                                          (rule "eqSymm" (formula "17") (term "1,0"))
                                          (rule "eqSymm" (formula "22"))
                                          (rule "eqSymm" (formula "36"))
                                          (rule "replace_known_left" (formula "5") (term "1,1") (ifseqformula "16"))
                                          (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "7")))
                                          (rule "notLeft" (formula "5"))
                                          (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "28"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "27"))
                                          (builtin "One Step Simplification" (formula "7"))
                                          (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "26"))
                                          (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "24")) (ifInst ""  (formula "25")))
                                          (rule "polySimp_elimSub" (formula "12") (term "2,1,0,0,0"))
                                          (rule "mul_literals" (formula "12") (term "1,2,1,0,0,0"))
                                          (rule "polySimp_elimSub" (formula "24") (term "2,1,0,0,0"))
                                          (rule "mul_literals" (formula "24") (term "1,2,1,0,0,0"))
                                          (rule "polySimp_elimSub" (formula "35") (term "2,1,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "35") (term "1,2,1,0,0,0,0,1"))
                                          (rule "polySimp_elimSub" (formula "36") (term "2,1,0,0,0"))
                                          (rule "mul_literals" (formula "36") (term "1,2,1,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "12") (term "2,1,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "24") (term "2,1,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "35") (term "2,1,0,0,0,0,1"))
                                          (rule "polySimp_addComm0" (formula "36") (term "2,1,0,0,0"))
                                          (rule "inEqSimp_leqRight" (formula "31"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_ltRight" (formula "30"))
                                          (rule "mul_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_ltRight" (formula "32"))
                                          (rule "mul_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "32"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "7"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "7") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "27") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "34") (term "0,0,1"))
                                          (rule "array_store_known_dynamic_array_type" (formula "6") (ifseqformula "8"))
                                          (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "29")))
                                          (rule "true_left" (formula "6"))
                                          (rule "inEqSimp_commuteLeq" (formula "16"))
                                          (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "15"))
                                          (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                          (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "16"))
                                          (rule "applyEq" (formula "31") (term "1,2,1,0,0,0,1") (ifseqformula "15"))
                                          (rule "applyEq" (formula "13") (term "1,2,1,0,0,0") (ifseqformula "15"))
                                          (rule "applyEq" (formula "24") (term "1,2,1,0,0") (ifseqformula "15"))
                                          (rule "applyEq" (formula "32") (term "1,2,1,0,0,0") (ifseqformula "15"))
                                          (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "15"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
                                          (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "12") (term "0,0"))
                                          (rule "qeq_literals" (formula "12") (term "0"))
                                          (builtin "One Step Simplification" (formula "12"))
                                          (rule "true_left" (formula "12"))
                                          (rule "nonNull" (formula "9") (inst "i=i_1"))
                                          (rule "sub_literals" (formula "9") (term "2,1,0,1,1"))
                                          (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "25")))
                                          (rule "greater_literals" (formula "9") (term "0"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "narrowSelectArrayType" (formula "9") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "25"))
                                          (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                          (rule "array2seqDef" (formula "13") (term "1,1,0") (inst "u=u"))
                                          (rule "eqSymm" (formula "13") (term "1,0"))
                                          (rule "array2seqDef" (formula "18") (term "1,0") (inst "u=u"))
                                          (rule "array2seqDef" (formula "18") (term "1") (inst "u=u"))
                                          (rule "array2seqDef" (formula "18") (term "0,0") (inst "u=u"))
                                          (rule "pullOutSelect" (formula "29") (term "1") (inst "selectSK=f_1_0"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "1,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "28"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "12"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,0,0"))
                                          (rule "array2seqDef" (formula "14") (term "1,1,1,0") (inst "u=u"))
                                          (rule "array2seqDef" (formula "14") (term "0,1,1,0") (inst "u=u"))
                                          (rule "eqSeqDef" (formula "19") (inst "iv=iv"))
                                          (rule "andLeft" (formula "19"))
                                          (rule "lenOfSeqDef" (formula "19") (term "1"))
                                          (rule "polySimp_elimSub" (formula "19") (term "1,1"))
                                          (rule "times_zero_2" (formula "19") (term "1,1,1"))
                                          (rule "add_zero_right" (formula "19") (term "1,1"))
                                          (rule "getOfSeqDef" (formula "20") (term "1,1,0"))
                                          (rule "castDel" (formula "20") (term "2,1,1,0"))
                                          (rule "castDel" (formula "20") (term "1,1,1,0"))
                                          (rule "add_zero_right" (formula "20") (term "0,2,1,1,1,0"))
                                          (rule "polySimp_elimSub" (formula "20") (term "1,1,0,1,1,0"))
                                          (rule "times_zero_2" (formula "20") (term "1,1,1,0,1,1,0"))
                                          (rule "add_zero_right" (formula "20") (term "1,1,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1"))
                                          (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,1,1,0"))
                                          (rule "apply_eq_monomials" (formula "20") (term "1,0,1,0,0") (ifseqformula "19"))
                                          (rule "polySimp_rightDist" (formula "20") (term "0,1,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "20") (term "1,0,1,0,0"))
                                          (rule "add_literals" (formula "20") (term "1,1,1,0,1,0,0"))
                                          (rule "times_zero_1" (formula "20") (term "1,1,0,1,0,0"))
                                          (rule "add_zero_right" (formula "20") (term "1,0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "20") (term "0,1,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "0,0,1"))
                                          (rule "polySimp_elimOne" (formula "19") (term "0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "20") (term "1,1,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,1,1,0"))
                                          (rule "mul_literals" (formula "20") (term "0,1,1,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,1,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,0,1,0,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0,1,0,0,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "20") (term "0,0,0,1,0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                                          (rule "pullOutSelect" (formula "30") (term "0,0,1") (inst "selectSK=java_lang_Object_created__5"))
                                          (rule "applyEq" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "1"))
                                          (rule "simplifySelectOfMemset" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "30"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "31") (term "0,0,1") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "23") (term "0") (inst "selectSK=java_lang_Object_created__6"))
                                          (rule "simplifySelectOfMemset" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0"))
                                          (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "26"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                                          (rule "applyEqReverse" (formula "24") (term "0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=f_1_1"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "1,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "30"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "simplifySelectOfMemset" (formula "1"))
                                          (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "30"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "1,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "30"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0"))
                                          (rule "eqSymm" (formula "1") (term "1,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "30"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "simplifySelectOfStore" (formula "1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "1,0,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "30"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "29"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                                          (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                                          (rule "replaceKnownSelect_taclet10000110001010_14" (formula "1") (term "2,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet10000110001010_20" (formula "1") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                          (rule "replaceKnownSelect_taclet10000110001010_2" (formula "1") (term "0,0,1,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet10000110001010_7" (formula "1") (term "0,0,1,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "31"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "19") (term "0,1,1,0,0") (inst "selectSK=arr_9"))
                                          (rule "applyEq" (formula "21") (term "0,1,1,0,0,1,0") (ifseqformula "19"))
                                          (rule "applyEq" (formula "20") (term "1,2,1,0,0") (ifseqformula "19"))
                                          (rule "applyEq" (formula "21") (term "1,2,1,0,0,1,0") (ifseqformula "19"))
                                          (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "12"))
                                          (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "28")))
                                          (rule "eqSymm" (formula "19") (term "0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "19") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "19") (term "0,0,1,0,0"))
                                          (rule "pullOutSelect" (formula "19") (term "2,0") (inst "selectSK=arr_10"))
                                          (rule "simplifySelectOfMemset" (formula "19"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "dismissNonSelectedField" (formula "19") (term "2,0"))
                                          (rule "elementOfArrayRangeConcrete" (formula "19") (term "0,0"))
                                          (rule "eqSymm" (formula "19") (term "0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "19") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "19") (term "2,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "19") (term "1,0,0,0"))
                                          (rule "replace_known_left" (formula "19") (term "1,0,0,0") (ifseqformula "4"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "inEqSimp_homoInEq0" (formula "19") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                                          (rule "replace_known_left" (formula "19") (term "1,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "pullOutSelect" (formula "20") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__7"))
                                          (rule "simplifySelectOfMemset" (formula "20"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "simplifySelectOfStore" (formula "20"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "simplifySelectOfStore" (formula "20"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "simplifySelectOfStore" (formula "20"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "simplifySelectOfCreate" (formula "20"))
                                          (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "31")))
                                          (rule "castDel" (formula "20") (term "1,0"))
                                          (rule "applyEq" (formula "20") (term "2,0") (ifseqformula "8"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "applyEqReverse" (formula "21") (term "0,0,1,0,0") (ifseqformula "20"))
                                          (builtin "One Step Simplification" (formula "21"))
                                          (rule "hideAuxiliaryEq" (formula "20"))
                                          (rule "pullOutSelect" (formula "19") (term "2,0") (inst "selectSK=arr_11"))
                                          (rule "simplifySelectOfCreate" (formula "19"))
                                          (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "31")))
                                          (rule "applyEqReverse" (formula "20") (term "2,0") (ifseqformula "19"))
                                          (rule "hideAuxiliaryEq" (formula "19"))
                                          (rule "nnf_imp2or" (formula "15") (term "0"))
                                          (rule "nnf_imp2or" (formula "10") (term "0"))
                                          (rule "nnf_imp2or" (formula "14") (term "0"))
                                          (rule "nnf_imp2or" (formula "22") (term "0"))
                                          (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                          (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "10") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
                                          (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                                          (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                          (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "22") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
                                          (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "22") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                                          (rule "mul_literals" (formula "22") (term "1,0,0,0"))
                                          (rule "arrayLengthNotNegative" (formula "13") (term "1"))
                                          (rule "arrayLengthIsAShort" (formula "13") (term "0"))
                                          (builtin "One Step Simplification" (formula "13"))
                                          (rule "true_left" (formula "13"))
                                          (rule "arrayLengthNotNegative" (formula "13") (term "0"))
                                          (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                                          (rule "arrayLengthIsAShort" (formula "13") (term "1"))
                                          (builtin "One Step Simplification" (formula "13"))
                                          (rule "true_left" (formula "13"))
                                          (rule "cut_direct" (formula "32") (term "0,0"))
                                          (branch "CUT: o_1 = null TRUE"
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "false_right" (formula "33"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "33")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "CUT: o_1 = null FALSE"
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "notRight" (formula "33"))
                                             (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "33"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")) (ifInst ""  (formula "34")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (ifseqformula "13"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "1") (ifseqformula "20"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,1") (ifseqformula "13"))
                                       (rule "translateJavaSubInt" (formula "33") (term "0"))
                                       (rule "translateJavaSubInt" (formula "33") (term "1"))
                                       (rule "translateJavaAddInt" (formula "33") (term "1,0"))
                                       (rule "orRight" (formula "24"))
                                       (rule "eqSymm" (formula "22"))
                                       (rule "eqSymm" (formula "17") (term "1,0"))
                                       (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "27"))
                                       (builtin "One Step Simplification" (formula "8"))
                                       (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "7"))
                                       (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "16")))
                                       (rule "notLeft" (formula "5"))
                                       (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "28"))
                                       (builtin "One Step Simplification" (formula "8"))
                                       (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "26"))
                                       (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "24")) (ifInst ""  (formula "25")))
                                       (rule "polySimp_elimSub" (formula "12") (term "2,1,0,0,0"))
                                       (rule "mul_literals" (formula "12") (term "1,2,1,0,0,0"))
                                       (rule "polySimp_elimSub" (formula "34") (term "1"))
                                       (rule "polySimp_elimSub" (formula "34") (term "0"))
                                       (rule "polySimp_elimSub" (formula "24") (term "2,1,0,0,0"))
                                       (rule "mul_literals" (formula "24") (term "1,2,1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                                       (rule "polySimp_addComm0" (formula "12") (term "2,1,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "34") (term "1"))
                                       (rule "polySimp_addComm0" (formula "24") (term "2,1,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "34") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                                       (rule "mul_literals" (formula "34") (term "0,1,0"))
                                       (rule "polySimp_addComm0" (formula "34") (term "0"))
                                       (rule "inEqSimp_ltRight" (formula "29"))
                                       (rule "times_zero_1" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_leqRight" (formula "33"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_ltRight" (formula "33"))
                                       (rule "mul_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_leqRight" (formula "32"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "7"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "7") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "dismissNonSelectedField" (formula "27") (term "0"))
                                       (rule "precOfInt" (formula "33"))
                                       (rule "array_store_known_dynamic_array_type" (formula "6") (ifseqformula "8"))
                                       (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "29")))
                                       (rule "true_left" (formula "6"))
                                       (rule "inEqSimp_commuteLeq" (formula "15"))
                                       (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "15"))
                                       (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "31") (term "1"))
                                       (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1"))
                                       (rule "polySimp_mulAssoc" (formula "31") (term "0,1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "0,0,1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "31") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "31") (term "0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "31") (term "0,1"))
                                       (rule "polySimp_addComm1" (formula "31") (term "0,0,1"))
                                       (rule "polySimp_pullOutFactor2b" (formula "31") (term "0,1"))
                                       (rule "add_literals" (formula "31") (term "1,1,0,1"))
                                       (rule "times_zero_1" (formula "31") (term "1,0,1"))
                                       (rule "add_zero_right" (formula "31") (term "0,1"))
                                       (rule "polySimp_addAssoc" (formula "31") (term "0,1"))
                                       (rule "polySimp_addComm1" (formula "31") (term "0,0,1"))
                                       (rule "add_literals" (formula "31") (term "0,0,0,1"))
                                       (rule "add_zero_left" (formula "31") (term "0,0,1"))
                                       (rule "polySimp_pullOutFactor1" (formula "31") (term "0,1"))
                                       (rule "add_literals" (formula "31") (term "1,0,1"))
                                       (rule "times_zero_1" (formula "31") (term "0,1"))
                                       (rule "leq_literals" (formula "31") (term "1"))
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "inEqSimp_leqRight" (formula "31"))
                                       (rule "add_zero_right" (formula "1") (term "0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "applyEq" (formula "26") (term "1,2,1,0,0") (ifseqformula "17"))
                                       (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "17"))
                                       (rule "applyEq" (formula "14") (term "1,2,1,0,0,0") (ifseqformula "16"))
                                       (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "16"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                       (rule "polySimp_elimOne" (formula "5") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0"))
                                       (rule "add_zero_right" (formula "1") (term "0"))
                                       (rule "leq_literals" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                                 (branch "Null Reference (x_arr_arr_3 = null)"
                                    (rule "false_right" (formula "10"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "Index Out of Bounds (x_arr_arr_3 != null, but x_9 Out of Bounds!)"
                                    (rule "false_right" (formula "10"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")) (ifInst ""  (formula "13")) (ifInst ""  (formula "14")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "Array Store Exception (incompatible dynamic element type of x_arr_arr_3 and x_arr)"
                                    (rule "false_right" (formula "10"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "9") (term "0,0,1,0,1,1") (ifseqformula "6"))
                                    (rule "translateJavaSubInt" (formula "16") (term "0,1,1,1,0,1"))
                                    (rule "translateJavaSubInt" (formula "16") (term "0,1,1,1,0,0,0"))
                                    (rule "andLeft" (formula "7"))
                                    (rule "andLeft" (formula "3"))
                                    (rule "andLeft" (formula "5"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "13"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "1,1,0") (ifseqformula "13"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "0,1,1,0") (ifseqformula "9"))
                                    (rule "andLeft" (formula "10"))
                                    (rule "andLeft" (formula "7"))
                                    (rule "andLeft" (formula "6"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "3"))
                                    (rule "andLeft" (formula "17"))
                                    (rule "andLeft" (formula "12"))
                                    (rule "notLeft" (formula "8"))
                                    (rule "andLeft" (formula "6"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "andLeft" (formula "20"))
                                    (rule "andLeft" (formula "12"))
                                    (rule "andLeft" (formula "7"))
                                    (rule "andLeft" (formula "22"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "notLeft" (formula "24"))
                                    (rule "notLeft" (formula "23"))
                                    (rule "orRight" (formula "23"))
                                    (rule "eqSymm" (formula "34") (term "1,0,0,1,0,1,0,0,1"))
                                    (rule "eqSymm" (formula "34") (term "1,0,0,1,0,0,0,1,0,0,1"))
                                    (rule "eqSymm" (formula "34") (term "1,0,0,1,0,1,1,0,1"))
                                    (rule "eqSymm" (formula "34") (term "1,0,1,0,0,0,1,1,0,1"))
                                    (rule "eqSymm" (formula "16") (term "1,0"))
                                    (rule "eqSymm" (formula "22"))
                                    (rule "replace_known_left" (formula "4") (term "1,1") (ifseqformula "15"))
                                    (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "6")))
                                    (rule "notLeft" (formula "4"))
                                    (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "28"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "26"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "replace_known_right" (formula "20") (term "0,0,1") (ifseqformula "23"))
                                    (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "25")) (ifInst ""  (formula "24")))
                                    (rule "polySimp_elimSub" (formula "11") (term "2,1,0,0,0"))
                                    (rule "mul_literals" (formula "11") (term "1,2,1,0,0,0"))
                                    (rule "polySimp_elimSub" (formula "34") (term "2,1,0,0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "34") (term "1,2,1,0,0,0,1,0,0,0"))
                                    (rule "polySimp_elimSub" (formula "34") (term "0,1,1,1,0,1"))
                                    (rule "polySimp_elimSub" (formula "34") (term "0,1,1,1,0,0,0"))
                                    (rule "polySimp_elimSub" (formula "23") (term "2,1,0,0,0"))
                                    (rule "mul_literals" (formula "23") (term "1,2,1,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "11") (term "2,1,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "34") (term "2,1,0,0,0,1,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "34") (term "0,1,1,1,0,1"))
                                    (rule "polySimp_addComm0" (formula "34") (term "0,1,1,1,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "23") (term "2,1,0,0,0"))
                                    (rule "inEqSimp_ltRight" (formula "29"))
                                    (rule "times_zero_1" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "33"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_ltRight" (formula "33"))
                                    (rule "times_zero_1" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "32"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "6"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,1,0,0,0,1,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,1,0,0,0,1,1,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,0,1,0,0,0,1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,0,1,0,0,0,1,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,1,0,0,1,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,1,0,0,1,1,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0"))
                                    (rule "dismissNonSelectedField" (formula "26") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,1,0,0,0,1,1,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,0,1,0,0,0,1,0,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "33") (term "1,0,0,0,0,0,1,1,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,0,0,0,1,1,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,1,0,0,1,1,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                    (rule "array_store_known_dynamic_array_type" (formula "30") (ifseqformula "7"))
                                    (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "28")))
                                    (rule "closeTrue" (formula "30"))
                                 )
                              )
                              (branch "Exceptional Post (concatenate)"
                                 (rule "false_right" (formula "9"))
                                 (builtin "One Step Simplification" (formula "8"))
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "8") (term "0,0,1,0,1,1") (ifseqformula "5"))
                                 (rule "translateJavaSubInt" (formula "15") (term "0,1,1,1,0,1"))
                                 (rule "translateJavaSubInt" (formula "15") (term "0,1,1,1,0,0,0,0"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "andLeft" (formula "7"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "andLeft" (formula "11"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "1,0") (ifseqformula "11"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "0,1,0") (ifseqformula "7"))
                                 (rule "andLeft" (formula "4"))
                                 (rule "andLeft" (formula "6"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "andLeft" (formula "15"))
                                 (rule "andLeft" (formula "4"))
                                 (rule "notLeft" (formula "7"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "andLeft" (formula "17"))
                                 (rule "andLeft" (formula "16"))
                                 (rule "andLeft" (formula "5"))
                                 (rule "andLeft" (formula "11"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "notLeft" (formula "18"))
                                 (rule "close" (formula "22") (ifseqformula "21"))
                              )
                              (branch "Pre (concatenate)"
                                 (rule "false_right" (formula "7"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "13") (term "1,1,1") (ifseqformula "5"))
                                 (rule "wellFormedAnonEQ" (formula "13") (term "0,0,1") (ifseqformula "5"))
                                 (rule "wellFormedStorePrimitive" (formula "13") (term "0,0,0,1"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "13") (term "1,1,0,1") (ifseqformula "5"))
                                 (rule "andLeft" (formula "6"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "andLeft" (formula "8"))
                                 (rule "andLeft" (formula "4"))
                                 (rule "andLeft" (formula "6"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "andLeft" (formula "4"))
                                 (rule "notLeft" (formula "7"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "andLeft" (formula "5"))
                                 (rule "eqSymm" (formula "14") (term "1,0"))
                                 (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "16"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "17"))
                                 (builtin "One Step Simplification" (formula "6"))
                                 (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "4"))
                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "13")))
                                 (rule "notLeft" (formula "2"))
                                 (rule "replace_known_right" (formula "23") (term "0,0,0") (ifseqformula "16"))
                                 (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "8")) (ifInst ""  (formula "16")))
                                 (rule "polySimp_elimSub" (formula "9") (term "2,1,0,0,0"))
                                 (rule "mul_literals" (formula "9") (term "1,2,1,0,0,0"))
                                 (rule "polySimp_elimSub" (formula "23") (term "2,1,0,0,0,1"))
                                 (rule "mul_literals" (formula "23") (term "1,2,1,0,0,0,1"))
                                 (rule "polySimp_elimSub" (formula "23") (term "2,1,0,0,0,0,1,1,1"))
                                 (rule "mul_literals" (formula "23") (term "1,2,1,0,0,0,0,1,1,1"))
                                 (rule "polySimp_elimSub" (formula "23") (term "2,1,0,0,0,0,1,0,1"))
                                 (rule "mul_literals" (formula "23") (term "1,2,1,0,0,0,0,1,0,1"))
                                 (rule "polySimp_addComm0" (formula "9") (term "2,1,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "23") (term "2,1,0,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "23") (term "2,1,0,0,0,0,1,1,1"))
                                 (rule "polySimp_addComm0" (formula "23") (term "2,1,0,0,0,0,1,0,1"))
                                 (rule "inEqSimp_leqRight" (formula "20"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "inEqSimp_ltRight" (formula "21"))
                                 (rule "times_zero_1" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "22"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "inEqSimp_ltRight" (formula "21"))
                                 (rule "times_zero_1" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "23") (term "0,0,1,1,1"))
                                 (rule "dismissNonSelectedField" (formula "23") (term "0,0,1,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "14"))
                                 (rule "inEqSimp_commuteLeq" (formula "14"))
                                 (rule "applyEq" (formula "22") (term "1,2,1,0,0,0,1,0,1") (ifseqformula "15"))
                                 (rule "applyEq" (formula "22") (term "1,2,1,0,0,0,1,1,1") (ifseqformula "15"))
                                 (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "15"))
                                 (rule "applyEq" (formula "21") (term "1,2,1,0,0,0,1") (ifseqformula "14"))
                                 (rule "applyEq" (formula "12") (term "1,2,1,0,0,0") (ifseqformula "14"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1"))
                                 (rule "mul_literals" (formula "2") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                 (rule "polySimp_elimOne" (formula "4") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
                                 (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "12") (term "0,0"))
                                 (rule "qeq_literals" (formula "12") (term "0"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "nonNull" (formula "9") (inst "i=i_1"))
                                 (rule "greater_literals" (formula "9") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "17")))
                                 (rule "sub_literals" (formula "9") (term "2,1,0"))
                                 (builtin "One Step Simplification" (formula "9"))
                                 (rule "narrowSelectArrayType" (formula "9") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "17"))
                                 (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                 (rule "array2seqDef" (formula "13") (term "1,0,1,0") (inst "u=u"))
                                 (rule "array2seqDef" (formula "13") (term "1,1,0") (inst "u=u"))
                                 (rule "eqSymm" (formula "13") (term "1,0"))
                                 (rule "wellFormedMemsetArrayObject" (formula "19") (term "0,0,1"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "wellFormedStorePrimitive" (formula "19") (term "0,0,0,1"))
                                 (rule "wellFormedStorePrimitive" (formula "19") (term "0,0,0,1"))
                                 (rule "wellFormedStorePrimitive" (formula "19") (term "0,0,0,1"))
                                 (rule "wellFormedCreate" (formula "19") (term "0,0,0,1"))
                                 (rule "replace_known_left" (formula "19") (term "0,0,0,1") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "array2seqDef" (formula "13") (term "0,1,1,0") (inst "u=u"))
                                 (rule "pullOutSelect" (formula "19") (term "1,0,1,1,1,1") (inst "selectSK=arr_6"))
                                 (rule "applyEq" (formula "20") (term "1,0,0,1,1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "20") (term "0,0,1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "20") (term "0,0,0") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                                 (rule "eqSymm" (formula "1") (term "0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "pullOutSelect" (formula "20") (term "0,0,0,1") (inst "selectSK=java_lang_Object_created__2"))
                                 (rule "simplifySelectOfMemset" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfCreate" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "eqSymm" (formula "1") (term "0,0"))
                                 (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "18"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                 (rule "applyEqReverse" (formula "21") (term "0,0,0,1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "replace_known_left" (formula "20") (term "0,0,1") (ifseqformula "7"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__3"))
                                 (rule "simplifySelectOfMemset" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfCreate" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "applyEq" (formula "1") (term "2,0") (ifseqformula "9"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "20") (term "0,0,1,1") (inst "selectSK=java_lang_Object_created__4"))
                                 (rule "simplifySelectOfMemset" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfCreate" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "eqSymm" (formula "1") (term "0,0"))
                                 (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                 (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "20"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "21") (term "0,0,1,1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_7"))
                                 (rule "simplifySelectOfMemset" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                 (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,0"))
                                 (rule "replace_known_left" (formula "1") (term "1,0,0,0") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                 (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "4"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_8"))
                                 (rule "simplifySelectOfCreate" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "nnf_imp2or" (formula "16") (term "0"))
                                 (rule "nnf_imp2or" (formula "11") (term "0"))
                                 (rule "nnf_imp2or" (formula "15") (term "0"))
                                 (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                 (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "11") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                 (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                 (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                                 (rule "shift_paren_or" (formula "21") (term "1"))
                                 (rule "commute_or_2" (formula "16") (term "0"))
                                 (rule "commute_or_2" (formula "11") (term "0"))
                                 (rule "commute_or_2" (formula "15") (term "0"))
                                 (rule "commute_or" (formula "16") (term "0,0"))
                                 (rule "commute_or" (formula "11") (term "0,0"))
                                 (rule "commute_or" (formula "15") (term "0,0"))
                                 (rule "arrayLengthNotNegative" (formula "14") (term "0"))
                                 (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                 (rule "arrayLengthIsAShort" (formula "14") (term "1"))
                                 (builtin "One Step Simplification" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "arrayLengthNotNegative" (formula "14") (term "1"))
                                 (rule "arrayLengthIsAShort" (formula "14") (term "0"))
                                 (builtin "One Step Simplification" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "x_arr_arr_2 = chosen TRUE"
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "21") (term "0,0,0,1") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "21") (term "1,0,1,0,1") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "21") (term "0,0,0") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "21") (term "1,0,1,1") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "applyEq" (formula "12") (term "1,0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "12") (term "1,0,0,0,0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "12") (term "1,0,0,0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "12") (term "0,1,0,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "14") (term "1,0,1,0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "12") (term "0,1,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "15") (term "1,0,0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "applyEq" (formula "12") (term "1,0,0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "18") (term "0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "1"))
                                    (rule "close" (formula "15") (ifseqformula "8"))
                                 )
                                 (branch "x_arr_arr_2 = chosen FALSE"
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "16"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "21") (term "1,0,1,1") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "21") (term "0,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "21") (term "0,0,0,1") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "21") (term "1,0,1,0,1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "allLeft" (formula "9") (inst "t=i_0"))
                                    (rule "inEqSimp_commuteGeq" (formula "9") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "9") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1"))
                                    (rule "add_literals" (formula "9") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "9") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "9") (term "0,0,1"))
                                    (rule "leq_literals" (formula "9") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "9"))
                                    (rule "inEqSimp_contradInEq1" (formula "9") (term "1") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "9") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "9"))
                                    (rule "notLeft" (formula "9"))
                                    (rule "replace_known_right" (formula "21") (term "0,0,1") (ifseqformula "15"))
                                    (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "15")))
                                    (rule "orRight" (formula "21"))
                                    (rule "referencedObjectIsCreatedRight" (formula "21") (ifseqformula "15"))
                                    (rule "close" (formula "21") (ifseqformula "5"))
                                 )
                              )
                           )
                           (branch "Null Reference (_chosen = null)"
                              (rule "false_right" (formula "8"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "8")))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "Index Out of Bounds (_chosen != null, but i Out of Bounds!)"
                              (rule "false_right" (formula "8"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "8")) (ifInst ""  (formula "12")))
                              (builtin "One Step Simplification" (formula "13"))
                              (rule "translateJavaSubInt" (formula "13") (term "0,1,1,1,0,1"))
                              (rule "translateJavaSubInt" (formula "13") (term "0,1,1,1,0,0,0,0"))
                              (rule "andLeft" (formula "7"))
                              (rule "andLeft" (formula "3"))
                              (rule "andLeft" (formula "5"))
                              (rule "andLeft" (formula "9"))
                              (rule "andLeft" (formula "6"))
                              (rule "andLeft" (formula "5"))
                              (rule "andLeft" (formula "11"))
                              (rule "notLeft" (formula "7"))
                              (rule "andLeft" (formula "5"))
                              (rule "andLeft" (formula "11"))
                              (rule "andLeft" (formula "6"))
                              (rule "eqSymm" (formula "23") (term "1,0,0,1,0,1,1,0,1"))
                              (rule "eqSymm" (formula "23") (term "1,0,1,0,0,0,1,1,0,1"))
                              (rule "eqSymm" (formula "23") (term "1,0,0,1,0,0,0,1,0,0,1"))
                              (rule "eqSymm" (formula "23") (term "1,0,0,1,0,1,0,0,1"))
                              (rule "eqSymm" (formula "15") (term "1,0"))
                              (rule "replace_known_left" (formula "3") (term "1,1") (ifseqformula "14"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "5")))
                              (rule "notLeft" (formula "3"))
                              (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "18"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "17"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "polySimp_elimSub" (formula "10") (term "2,1,0,0,0"))
                              (rule "mul_literals" (formula "10") (term "1,2,1,0,0,0"))
                              (rule "polySimp_elimSub" (formula "23") (term "2,1,0,0,0,1,0,0,0,0"))
                              (rule "mul_literals" (formula "23") (term "1,2,1,0,0,0,1,0,0,0,0"))
                              (rule "polySimp_elimSub" (formula "23") (term "0,1,1,1,0,1"))
                              (rule "polySimp_elimSub" (formula "23") (term "0,1,1,1,0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "10") (term "2,1,0,0,0"))
                              (rule "polySimp_addComm0" (formula "23") (term "2,1,0,0,0,1,0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "23") (term "0,1,1,1,0,1"))
                              (rule "polySimp_addComm0" (formula "23") (term "0,1,1,1,0,0,0,0"))
                              (rule "inEqSimp_ltRight" (formula "22"))
                              (rule "times_zero_1" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_ltRight" (formula "20"))
                              (rule "times_zero_1" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_leqRight" (formula "22"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "5"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,1,0,0,0,1,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,1,0,0,0,1,1,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,0,1,0,0,0,1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,0,1,0,0,0,1,0,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,1,0,0,1,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,1,0,0,1,1,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,0,1,0,0,0,1,0,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,0,0,0,1,1,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,1,0,0,1,1,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "23") (term "1,0,0,0,0,0,1,1,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,1,0,0,0,1,1,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "14"))
                              (rule "inEqSimp_commuteLeq" (formula "14"))
                              (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "15"))
                              (rule "applyEq" (formula "13") (term "1,2,1,0,0,0") (ifseqformula "15"))
                              (rule "applyEq" (formula "22") (term "1,2,1,0,0,0,1,0,0,0,0") (ifseqformula "15"))
                              (rule "blockThrow" (formula "22") (term "1,0,0,1"))
                              (rule "blockThrow" (formula "22") (term "1"))
                              (builtin "One Step Simplification" (formula "22"))
                              (rule "blockThrow" (formula "22") (term "1"))
                              (builtin "One Step Simplification" (formula "22"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                              (rule "polySimp_elimOne" (formula "5") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,0,1,0,0,0,1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,0,1,0,0,0,1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,0,1,0,0,0,1,0,0,1"))
                              (rule "mul_literals" (formula "21") (term "0,1,1,0,0,0,1,0,0,0,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,0,1,0,0,0,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,0,1,0,0,0,1,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,1,0,0,0,1,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,1,0,0,0,1,1,0,1"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,1,0,0,0,1,1,0,1"))
                              (rule "mul_literals" (formula "21") (term "0,1,1,0,0,1,0,0,0,1,1,0,1"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,1,0,0,0,1,1,0,1"))
                              (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,1,0,0,0,1,1,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,1,0,0,1,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,1,0,0,1,1,0,1"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,1,0,0,1,1,0,1"))
                              (rule "mul_literals" (formula "21") (term "0,1,1,0,0,1,0,0,1,1,0,1"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,1,0,0,1,1,0,1"))
                              (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,1,0,0,1,1,0,1"))
                              (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "3"))
                              (rule "andLeft" (formula "4"))
                              (rule "inEqSimp_homoInEq1" (formula "4"))
                              (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                              (rule "add_literals" (formula "4") (term "1,1,0"))
                              (rule "times_zero_1" (formula "4") (term "1,0"))
                              (rule "add_zero_right" (formula "4") (term "0"))
                              (rule "leq_literals" (formula "4"))
                              (rule "closeFalse" (formula "4"))
                           )
                        )
                     )
                  )
                  (branch "Null Reference (x_arr_arr_4 = null)"
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "Null Reference (_chosen = null)"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "9")))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "Null Reference (_chosen = null)"
               (builtin "One Step Simplification" (formula "2"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "8")))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Use Case"
            (builtin "One Step Simplification" (formula "4"))
            (rule "pullOut" (formula "4") (term "0,0,1,0,1,0") (inst "sk=anon_0") (userinteraction))
            (rule "applyEq" (formula "5") (term "0,1,0,1,0,1,0") (ifseqformula "4") (userinteraction))
            (rule "applyEq" (formula "5") (term "0,0,1,1,0,1,0") (ifseqformula "4") (userinteraction))
            (rule "applyEq" (formula "5") (term "0,1,1,1,0,1,0") (ifseqformula "4") (userinteraction))
            (rule "applyEq" (formula "5") (term "0,1,1,1,1,0,1,0") (ifseqformula "4") (userinteraction))
            (rule "applyEq" (formula "5") (term "0,0,0,1,0,1") (ifseqformula "4") (userinteraction))
            (builtin "One Step Simplification" (formula "9"))
            (rule "applyEq" (formula "9") (term "0,1,1,0") (ifseqformula "4") (userinteraction))
            (rule "variableDeclarationAssign" (formula "9") (term "1") (userinteraction))
            (rule "variableDeclaration" (formula "9") (term "1") (newnames "b_1") (userinteraction))
            (rule "compound_less_than_comparison_2" (formula "9") (term "1") (inst "#v1=x_1") (inst "#v0=x") (userinteraction))
            (rule "variableDeclarationAssign" (formula "9") (term "1") (userinteraction))
            (rule "variableDeclaration" (formula "9") (term "1") (newnames "x_2") (userinteraction))
            (rule "assignment" (formula "9") (term "1") (userinteraction))
            (rule "variableDeclarationAssign" (formula "9") (term "1,1") (userinteraction))
            (rule "variableDeclaration" (formula "9") (term "1,1") (newnames "x_1") (userinteraction))
            (rule "assignment_read_length" (formula "9") (term "1,1") (userinteraction))
            (branch "Normal Execution (_chosen != null)"
               (rule "less_than_comparison_simple" (formula "10") (term "1,1,1") (userinteraction))
               (rule "methodCallEmpty" (formula "10") (term "1,1,1,1") (userinteraction))
               (rule "emptyModality" (formula "10") (term "1,1,1,1") (userinteraction))
               (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "6")))
               (builtin "One Step Simplification" (formula "10"))
               (rule "impRight" (formula "10") (userinteraction))
               (rule "methodCallReturn" (formula "11") (term "1") (userinteraction))
               (rule "assignment" (formula "11") (term "1") (userinteraction))
               (rule "methodCallEmpty" (formula "11") (term "1,1") (userinteraction))
               (rule "tryEmpty" (formula "11") (term "1,1") (userinteraction))
               (rule "emptyModality" (formula "11") (term "1,1") (userinteraction))
               (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "9")))
               (rule "false_right" (formula "10"))
               (rule "andLeft" (formula "3"))
               (rule "andLeft" (formula "2"))
               (rule "andLeft" (formula "8"))
               (rule "notLeft" (formula "1"))
               (rule "andLeft" (formula "3"))
               (rule "andLeft" (formula "5"))
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "10"))
               (rule "andLeft" (formula "4"))
               (rule "notLeft" (formula "7"))
               (rule "notLeft" (formula "1"))
               (rule "andLeft" (formula "9"))
               (rule "andLeft" (formula "4"))
               (rule "andLeft" (formula "10"))
               (builtin "One Step Simplification" (formula "2"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "3")) (ifInst ""  (formula "12")))
               (rule "notLeft" (formula "1") (userinteraction))
               (rule "andRight" (formula "21") (userinteraction))
               (branch "Case 1"
                  (rule "andRight" (formula "21") (userinteraction))
                  (branch "Case 1"
                     (rule "close" (formula "21") (ifseqformula "11"))
                  )
                  (branch "Case 2"
                     (rule "andRight" (formula "21") (userinteraction))
                     (branch "Case 1"
                        (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "20")))
                        (rule "false_right" (formula "15"))
                        (rule "allRight" (formula "20") (inst "sk=i_1"))
                        (rule "impRight" (formula "20"))
                        (rule "andLeft" (formula "1"))
                        (rule "eqSymm" (formula "14") (term "1,0"))
                        (rule "eqSymm" (formula "22"))
                        (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "17"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "19"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "polySimp_elimSub" (formula "10") (term "2,1,0,0,0"))
                        (rule "mul_literals" (formula "10") (term "1,2,1,0,0,0"))
                        (rule "polySimp_addComm0" (formula "10") (term "2,1,0,0,0"))
                        (rule "inEqSimp_ltRight" (formula "20"))
                        (rule "mul_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_ltRight" (formula "19"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "14"))
                        (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "13"))
                        (rule "inEqSimp_commuteLeq" (formula "3"))
                        (rule "applyEq" (formula "12") (term "1,2,1,0,0,0") (ifseqformula "15"))
                        (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "15"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                        (rule "polySimp_elimOne" (formula "4") (term "0"))
                        (rule "nonNull" (formula "10") (inst "i=i_1"))
                        (rule "greater_literals" (formula "10") (term "0,1"))
                        (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "20")))
                        (rule "sub_literals" (formula "10") (term "2,1,0"))
                        (builtin "One Step Simplification" (formula "10"))
                        (rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "6") (ifseqformula "20"))
                        (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                        (rule "array2seqDef" (formula "16") (term "0,0,1,0") (inst "u=u"))
                        (rule "array2seqDef" (formula "16") (term "1,0,1,0") (inst "u=u"))
                        (rule "array2seqDef" (formula "16") (term "1,1,0") (inst "u=u"))
                        (rule "eqSymm" (formula "16") (term "1,0"))
                        (rule "array2seqDef" (formula "22") (term "1,0") (inst "u=u"))
                        (rule "array2seqDef" (formula "22") (term "0,0") (inst "u=u"))
                        (rule "array2seqDef" (formula "22") (term "1") (inst "u=u"))
                        (rule "eqSymm" (formula "22"))
                        (rule "equalityToSeqGetAndSeqLenRight" (formula "22") (inst "iv=iv"))
                        (rule "lenOfSeqDef" (formula "22") (term "0,0"))
                        (rule "eqSymm" (formula "22") (term "0"))
                        (rule "polySimp_elimSub" (formula "22") (term "1,1,0"))
                        (rule "mul_literals" (formula "22") (term "1,1,1,0"))
                        (rule "add_zero_right" (formula "22") (term "1,1,0"))
                        (rule "getOfSeqDef" (formula "22") (term "0,1,0,1"))
                        (rule "castDel" (formula "22") (term "1,0,1,0,1"))
                        (rule "castDel" (formula "22") (term "2,0,1,0,1"))
                        (rule "add_zero_right" (formula "22") (term "0,2,1,0,1,0,1"))
                        (rule "eqSymm" (formula "22") (term "1,0,1"))
                        (rule "polySimp_elimSub" (formula "22") (term "1,1,0,1,1,0,1"))
                        (rule "mul_literals" (formula "22") (term "1,1,1,0,1,1,0,1"))
                        (rule "add_zero_right" (formula "22") (term "1,1,0,1,1,0,1"))
                        (rule "lenOfSeqDef" (formula "22") (term "1,1,0,0,1"))
                        (rule "polySimp_elimSub" (formula "22") (term "1,1,1,0,0,1"))
                        (rule "times_zero_2" (formula "22") (term "1,1,1,1,0,0,1"))
                        (rule "add_zero_right" (formula "22") (term "1,1,1,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1,0"))
                        (rule "add_zero_right" (formula "22") (term "0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,1,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,1,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1,1,0,0,1"))
                        (rule "add_zero_right" (formula "22") (term "0,0,1,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,1,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,1,1,0,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "22") (term "0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,1,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,1,1,0,1"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,1,0,1,1,0,1"))
                        (rule "mul_literals" (formula "22") (term "0,1,1,0,1,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,1,1,0,1"))
                        (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,1,1,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,1"))
                        (rule "mul_literals" (formula "22") (term "0,1,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,1,1,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "0,0,1,1,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "22") (term "0,0,1,1,1,0,0,1"))
                        (rule "pullOutSelect" (formula "22") (term "1,2,1,0,0,0") (inst "selectSK=arr_2"))
                        (rule "applyEq" (formula "23") (term "0,1,1,0,0,1,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "23") (term "0,1,1,0,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "23") (term "1,2,1,0,0,1,0,1") (ifseqformula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                        (rule "eqSymm" (formula "1") (term "0,0,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                        (rule "pullOutSelect" (formula "23") (term "0,1,1,0") (inst "selectSK=arr_3"))
                        (rule "applyEq" (formula "24") (term "0,0,0,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "24") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "24") (term "1,1,1,1,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "24") (term "0,0,0,1,1,1,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "24") (term "0,1,1,1,1,0,0,1") (ifseqformula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "24") (term "0,0,0,1,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "24") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "24") (term "1,1,1,1,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "24") (term "0,1,1,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "24") (term "0,0,0,1,1,1,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "24") (term "0,1,1,1,1,0,0,1") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "inEqSimp_antiSymm" (formula "15") (ifseqformula "2"))
                        (rule "applyEq" (formula "5") (term "0") (ifseqformula "15"))
                        (rule "inEqSimp_homoInEq1" (formula "5"))
                        (rule "polySimp_addComm1" (formula "5") (term "0"))
                        (rule "applyEq" (formula "2") (term "0") (ifseqformula "15"))
                        (rule "inEqSimp_homoInEq0" (formula "2"))
                        (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                        (rule "add_literals" (formula "2") (term "1,0"))
                        (rule "times_zero_1" (formula "2") (term "0"))
                        (rule "qeq_literals" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "applyEq" (formula "1") (term "1,2,1,0,2,0") (ifseqformula "14"))
                        (rule "applyEq" (formula "12") (term "1,2,1,0,0,0") (ifseqformula "14"))
                        (rule "applyEq" (formula "2") (term "0") (ifseqformula "14"))
                        (rule "applyEq" (formula "1") (term "1,2,1,0,0,0,1,0,0") (ifseqformula "13"))
                        (rule "applyEq" (formula "14") (term "0") (ifseqformula "13"))
                        (rule "inEqSimp_homoInEq1" (formula "14"))
                        (rule "polySimp_pullOutFactor1" (formula "14") (term "0"))
                        (rule "add_literals" (formula "14") (term "1,0"))
                        (rule "times_zero_1" (formula "14") (term "0"))
                        (rule "leq_literals" (formula "14"))
                        (rule "true_left" (formula "14"))
                        (rule "applyEq" (formula "9") (term "1,1,1,0,0") (ifseqformula "13"))
                        (rule "applyEq" (formula "14") (term "1") (ifseqformula "13"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1"))
                        (rule "polySimp_rightDist" (formula "3") (term "1"))
                        (rule "mul_literals" (formula "3") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                        (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_4"))
                        (rule "simplifySelectOfMemset" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                        (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                        (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "4"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                        (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0"))
                        (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__1"))
                        (rule "simplifySelectOfMemset" (formula "2"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "simplifySelectOfStore" (formula "2"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "simplifySelectOfStore" (formula "2"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "simplifySelectOfStore" (formula "2"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "simplifySelectOfCreate" (formula "2"))
                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "22")))
                        (rule "castDel" (formula "2") (term "1,0"))
                        (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "9"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "applyEqReverse" (formula "3") (term "0,0,1,0,0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "4"))
                        (rule "times_zero_1" (formula "3") (term "0,0"))
                        (rule "add_zero_left" (formula "3") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                        (rule "mul_literals" (formula "3") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "3"))
                        (rule "leq_literals" (formula "14") (term "0"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "true_left" (formula "14"))
                        (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_5"))
                        (rule "simplifySelectOfCreate" (formula "1"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")))
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "nnf_imp2or" (formula "17") (term "0"))
                        (rule "nnf_imp2or" (formula "16") (term "0"))
                        (rule "nnf_imp2or" (formula "22") (term "0,1"))
                        (rule "nnf_imp2or" (formula "11") (term "0"))
                        (rule "nnf_notAnd" (formula "17") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                        (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                        (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "16") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                        (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                        (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "11") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
                        (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                        (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "22") (term "0,0,1"))
                        (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,1"))
                        (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,1"))
                        (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,1"))
                        (rule "add_zero_left" (formula "22") (term "0,0,1,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,1"))
                        (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,1"))
                        (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0,1"))
                        (rule "add_zero_right" (formula "22") (term "0,0,0,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1"))
                        (rule "mul_literals" (formula "22") (term "1,0,0,0,1"))
                        (rule "commute_or_2" (formula "17") (term "0"))
                        (rule "commute_or_2" (formula "16") (term "0"))
                        (rule "commute_or_2" (formula "11") (term "0"))
                        (rule "commute_or" (formula "17") (term "0,0"))
                        (rule "commute_or" (formula "16") (term "0,0"))
                        (rule "commute_or" (formula "11") (term "0,0"))
                        (rule "arrayLengthNotNegative" (formula "15") (term "0"))
                        (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                        (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "3"))
                        (rule "leq_literals" (formula "15") (term "0"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "true_left" (formula "15"))
                        (rule "arrayLengthIsAShort" (formula "15") (term "0"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "true_left" (formula "15"))
                        (rule "ifthenelse_split" (formula "22") (term "1,0"))
                        (branch " x_arr_arr_2[i_1]@anon_heap_LOOP«anonHeapFunction».length ≥ 1 TRUE"
                           (rule "replace_known_left" (formula "23") (term "0,1,1,0,0,1") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "ifthenelse_split" (formula "2") (term "0"))
                           (branch "x_arr_arr_2 = chosen TRUE"
                              (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "applyEqReverse" (formula "23") (term "0,1,1,0,0,0") (ifseqformula "3"))
                              (rule "applyEqReverse" (formula "23") (term "1,2,1,0,0,1,0,1") (ifseqformula "3"))
                              (rule "applyEqReverse" (formula "23") (term "0,1,1,0,0,1,0,1") (ifseqformula "3"))
                              (rule "applyEqReverse" (formula "23") (term "1,2,1,0,0,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "13") (term "1,0,0,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "13") (term "1,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "22") (term "1,0,1,1,1,0,1,1,0,1") (ifseqformula "2"))
                              (rule "applyEq" (formula "22") (term "1,1,1,1,1,0,1") (ifseqformula "2"))
                              (rule "applyEq" (formula "16") (term "1,1,2,0,0,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "2"))
                              (rule "close" (formula "18") (ifseqformula "9"))
                           )
                           (branch "x_arr_arr_2 = chosen FALSE"
                              (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "18"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "applyEqReverse" (formula "23") (term "0,1,1,0,0,1,0,1") (ifseqformula "2"))
                              (rule "applyEqReverse" (formula "23") (term "0,1,1,0,0,0") (ifseqformula "2"))
                              (rule "applyEqReverse" (formula "23") (term "1,2,1,0,0,0") (ifseqformula "2"))
                              (rule "applyEqReverse" (formula "23") (term "1,2,1,0,0,1,0,1") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "arrayLengthIsAShort" (formula "13") (term "0"))
                              (builtin "One Step Simplification" (formula "13"))
                              (rule "true_left" (formula "13"))
                              (rule "arrayLengthNotNegative" (formula "13") (term "0"))
                              (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                              (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "2"))
                              (rule "leq_literals" (formula "13") (term "0"))
                              (builtin "One Step Simplification" (formula "13"))
                              (rule "true_left" (formula "13"))
                              (rule "allLeft" (formula "16") (inst "t=i_1"))
                              (rule "replaceKnownSelect_taclet01002010_1" (formula "16") (term "0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet01002010_2" (formula "16") (term "0,0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "16") (term "1,0") (ifseqformula "3"))
                              (rule "qeq_literals" (formula "16") (term "0,1,0"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "inEqSimp_contradInEq0" (formula "16") (term "1") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1"))
                              (rule "mul_literals" (formula "16") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0,0,1"))
                              (rule "polySimp_addComm0" (formula "16") (term "0,0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                              (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "16") (term "0,0,1"))
                              (rule "leq_literals" (formula "16") (term "0,1"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "notLeft" (formula "16"))
                              (rule "allLeft" (formula "15") (inst "t=i_1"))
                              (rule "replaceKnownSelect_taclet01002010_1" (formula "15") (term "0,1,0,0,0"))
                              (rule "replaceKnownSelect_taclet01002010_1" (formula "15") (term "1,2,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet01002010_2" (formula "15") (term "0,1,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet01002010_2" (formula "15") (term "1,2,0,0,0"))
                              (rule "replaceKnownSelect_taclet01002010_0" (formula "15") (term "0,1,1,1,0,0"))
                              (rule "replaceKnownSelect_taclet01002010_0" (formula "15") (term "1,2,1,1,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1001002010_13" (formula "15") (term "0,1,1,1,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1001002010_13" (formula "15") (term "1,2,1,1,0,0"))
                              (rule "inEqSimp_contradInEq0" (formula "15") (term "1") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1"))
                              (rule "mul_literals" (formula "15") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0,0,1"))
                              (rule "polySimp_addComm0" (formula "15") (term "0,0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                              (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                              (rule "add_literals" (formula "15") (term "0,0,1"))
                              (rule "leq_literals" (formula "15") (term "0,1"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "3"))
                              (rule "qeq_literals" (formula "15") (term "0,1"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "lenOfSeqDefEQ" (formula "24") (term "0,0") (ifseqformula "15"))
                              (rule "polySimp_elimSub" (formula "24") (term "1,0,0"))
                              (rule "times_zero_2" (formula "24") (term "1,1,0,0"))
                              (rule "add_zero_right" (formula "24") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "eqSymm" (formula "24") (term "1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0"))
                              (rule "inEqSimp_contradEq7" (formula "24") (term "1,0") (ifseqformula "1"))
                              (rule "times_zero_1" (formula "24") (term "1,0,0,1,0"))
                              (rule "add_zero_right" (formula "24") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "24") (term "0,1,0"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "inEqSimp_subsumption1" (formula "24") (term "0") (ifseqformula "1"))
                              (rule "leq_literals" (formula "24") (term "0,0"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "allRight" (formula "24") (inst "sk=iv_1"))
                              (rule "orRight" (formula "24"))
                              (rule "orRight" (formula "24"))
                              (rule "inEqSimp_geqRight" (formula "25"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_leqRight" (formula "25"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "replace_known_left" (formula "26") (term "0,0,1") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "inEqSimp_homoInEq0" (formula "26") (term "0,1"))
                              (rule "polySimp_addComm1" (formula "26") (term "0,0,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "26") (term "1,0,1"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,1"))
                              (rule "mul_literals" (formula "26") (term "0,1,0,1"))
                              (rule "polySimp_elimOne" (formula "26") (term "1,1,0,1"))
                              (rule "replace_known_left" (formula "26") (term "0,1") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "getOfSeqDefEQ" (formula "26") (term "0") (ifseqformula "17"))
                              (rule "castDel" (formula "26") (term "2,0"))
                              (rule "castDel" (formula "26") (term "1,0"))
                              (rule "add_zero_right" (formula "26") (term "0,2,1,0"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "orRight" (formula "26"))
                              (rule "eqSymm" (formula "27"))
                              (rule "polySimp_elimSub" (formula "26") (term "1,1"))
                              (rule "times_zero_2" (formula "26") (term "1,1,1"))
                              (rule "add_zero_right" (formula "26") (term "1,1"))
                              (rule "inEqSimp_ltToLeq" (formula "26") (term "1"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1"))
                              (rule "polySimp_addComm1" (formula "26") (term "0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "26") (term "0"))
                              (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "inEqSimp_leqRight" (formula "26"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
                              (rule "andLeft" (formula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "1"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,1,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0"))
                              (rule "add_literals" (formula "1") (term "0"))
                              (rule "leq_literals" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch " x_arr_arr_2[i_1]@anon_heap_LOOP«anonHeapFunction».length ≥ 1 FALSE"
                           (rule "replace_known_right" (formula "23") (term "0,1,1,0,0,1") (ifseqformula "22"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "inEqSimp_geqRight" (formula "22"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_or_tautInEq0" (formula "23") (term "0,0,1"))
                           (rule "add_zero_right" (formula "23") (term "1,1,0,0,1"))
                           (rule "qeq_literals" (formula "23") (term "1,0,0,1"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "ifthenelse_split" (formula "2") (term "0"))
                           (branch "x_arr_arr_2 = chosen TRUE"
                              (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "applyEqReverse" (formula "23") (term "0,1,1,0,0") (ifseqformula "3"))
                              (rule "applyEqReverse" (formula "23") (term "1,2,1,0,0") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "13") (term "1,0,0,0,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "13") (term "1,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "13") (term "1,0,0,0,0,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "13") (term "1,0,0,0,0,0,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "15") (term "1,1,2,0,0,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "15") (term "1,0,1,0,0,0,0") (ifseqformula "2"))
                              (rule "eqSymm" (formula "15") (term "0,0,0"))
                              (rule "applyEq" (formula "20") (term "0") (ifseqformula "2"))
                              (rule "applyEq" (formula "13") (term "0,1,0,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "13") (term "0,1,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "2"))
                              (rule "close" (formula "17") (ifseqformula "9"))
                           )
                           (branch "x_arr_arr_2 = chosen FALSE"
                              (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "18"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "applyEqReverse" (formula "23") (term "1,2,1,0,0") (ifseqformula "2"))
                              (rule "applyEqReverse" (formula "23") (term "0,1,1,0,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "arrayLengthNotNegative" (formula "13") (term "0"))
                              (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                              (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "2"))
                              (rule "leq_literals" (formula "13") (term "0"))
                              (builtin "One Step Simplification" (formula "13"))
                              (rule "true_left" (formula "13"))
                              (rule "arrayLengthIsAShort" (formula "13") (term "0"))
                              (builtin "One Step Simplification" (formula "13"))
                              (rule "true_left" (formula "13"))
                              (rule "allLeft" (formula "16") (inst "t=i_1"))
                              (rule "replaceKnownSelect_taclet01002010_1" (formula "16") (term "0,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet01002010_2" (formula "16") (term "0,0,0,0"))
                              (rule "inEqSimp_contradInEq0" (formula "16") (term "1") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1"))
                              (rule "mul_literals" (formula "16") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0,0,1"))
                              (rule "polySimp_addComm0" (formula "16") (term "0,0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                              (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "16") (term "0,0,1"))
                              (rule "leq_literals" (formula "16") (term "0,1"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "3"))
                              (rule "qeq_literals" (formula "16") (term "0,1"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "notLeft" (formula "16"))
                              (rule "allLeft" (formula "15") (inst "t=i_1"))
                              (rule "replaceKnownSelect_taclet01002010_1" (formula "15") (term "0,1,0,0,0"))
                              (rule "replaceKnownSelect_taclet01002010_1" (formula "15") (term "1,2,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet01002010_2" (formula "15") (term "0,1,0,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet01002010_2" (formula "15") (term "1,2,0,0,0"))
                              (rule "replaceKnownSelect_taclet01002010_0" (formula "15") (term "0,1,1,1,0,0"))
                              (rule "replaceKnownSelect_taclet01002010_0" (formula "15") (term "1,2,1,1,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1101002010_13" (formula "15") (term "0,1,1,1,0,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1101002010_13" (formula "15") (term "1,2,1,1,0,0"))
                              (rule "inEqSimp_contradInEq0" (formula "15") (term "1") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1"))
                              (rule "mul_literals" (formula "15") (term "0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0,0,1"))
                              (rule "polySimp_addComm0" (formula "15") (term "0,0,0,1"))
                              (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1"))
                              (rule "add_literals" (formula "15") (term "1,1,0,0,1"))
                              (rule "times_zero_1" (formula "15") (term "1,0,0,1"))
                              (rule "add_literals" (formula "15") (term "0,0,1"))
                              (rule "leq_literals" (formula "15") (term "0,1"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "inEqSimp_contradInEq1" (formula "15") (term "1") (ifseqformula "3"))
                              (rule "qeq_literals" (formula "15") (term "0,1"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "lenOfSeqDefEQ" (formula "24") (term "0") (ifseqformula "15"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "orRight" (formula "24"))
                              (rule "notRight" (formula "24"))
                              (rule "polySimp_elimSub" (formula "25") (term "0"))
                              (rule "mul_literals" (formula "25") (term "1,0"))
                              (rule "add_zero_right" (formula "25") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "1"))
                              (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "25"))
                              (rule "add_literals" (formula "2") (term "1"))
                              (rule "inEqSimp_contradEq3" (formula "25") (ifseqformula "2"))
                              (rule "times_zero_1" (formula "25") (term "1,0,0"))
                              (rule "add_literals" (formula "25") (term "0,0"))
                              (rule "qeq_literals" (formula "25") (term "0"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "false_right" (formula "25"))
                              (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "2") (term "0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "closeFalse" (formula "2"))
                           )
                        )
                     )
                     (branch "Case 2"
                        (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "20")))
                        (rule "false_right" (formula "15"))
                        (rule "eqSymm" (formula "12") (term "1,0"))
                        (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "17"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "15"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "replace_known_right" (formula "20") (term "0,0") (ifseqformula "14"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "polySimp_elimSub" (formula "8") (term "2,1,0,0,0"))
                        (rule "mul_literals" (formula "8") (term "1,2,1,0,0,0"))
                        (rule "polySimp_addComm0" (formula "8") (term "2,1,0,0,0"))
                        (rule "inEqSimp_ltRight" (formula "16"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                        (rule "inEqSimp_ltRight" (formula "18"))
                        (rule "times_zero_1" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "12"))
                        (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "11"))
                        (rule "applyEq" (formula "10") (term "1,2,1,0,0,0") (ifseqformula "13"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                        (rule "nonNull" (formula "8") (inst "i=i_1"))
                        (rule "greater_literals" (formula "8") (term "0,1"))
                        (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "18")))
                        (rule "sub_literals" (formula "8") (term "2,1,0"))
                        (builtin "One Step Simplification" (formula "8"))
                        (rule "narrowSelectArrayType" (formula "8") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "18"))
                        (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
                        (rule "array2seqDef" (formula "14") (term "1,0,1,0") (inst "u=u"))
                        (rule "array2seqDef" (formula "14") (term "0,0,1,0") (inst "u=u"))
                        (rule "array2seqDef" (formula "14") (term "1,1,0") (inst "u=u"))
                        (rule "eqSymm" (formula "14") (term "1,0"))
                        (rule "nonNull" (formula "20") (inst "i=i_1"))
                        (rule "greater_literals" (formula "20") (term "0,1"))
                        (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "19")))
                        (rule "sub_literals" (formula "20") (term "2,1,0"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "allRight" (formula "20") (inst "sk=i_1_0"))
                        (rule "impRight" (formula "20"))
                        (rule "andLeft" (formula "1"))
                        (rule "notRight" (formula "22"))
                        (rule "inEqSimp_ltToLeq" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "2"))
                        (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "16"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0"))
                        (rule "inEqSimp_antiSymm" (formula "15") (ifseqformula "5"))
                        (rule "applyEq" (formula "3") (term "0") (ifseqformula "15"))
                        (rule "inEqSimp_homoInEq1" (formula "3"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "applyEq" (formula "13") (term "1,2,1,0,0,0") (ifseqformula "15"))
                        (rule "applyEq" (formula "11") (term "1,1,1,0,0") (ifseqformula "15"))
                        (rule "applyEq" (formula "16") (term "0") (ifseqformula "15"))
                        (rule "inEqSimp_homoInEq1" (formula "16"))
                        (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                        (rule "add_literals" (formula "16") (term "1,0"))
                        (rule "times_zero_1" (formula "16") (term "0"))
                        (rule "leq_literals" (formula "16"))
                        (rule "true_left" (formula "16"))
                        (rule "applyEq" (formula "5") (term "0") (ifseqformula "15"))
                        (rule "inEqSimp_homoInEq0" (formula "5"))
                        (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                        (rule "add_literals" (formula "5") (term "1,0"))
                        (rule "times_zero_1" (formula "5") (term "0"))
                        (rule "qeq_literals" (formula "5"))
                        (rule "true_left" (formula "5"))
                        (rule "applyEq" (formula "4") (term "0") (ifseqformula "14"))
                        (rule "applyEq" (formula "14") (term "1") (ifseqformula "13"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1"))
                        (rule "polySimp_rightDist" (formula "3") (term "1"))
                        (rule "mul_literals" (formula "3") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                        (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_0"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "narrowSelectArrayType" (formula "1") (term "0") (ifseqformula "10") (ifseqformula "20"))
                        (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                        (rule "times_zero_1" (formula "2") (term "0,0"))
                        (rule "add_zero_left" (formula "2") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                        (rule "mul_literals" (formula "2") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "2"))
                        (rule "leq_literals" (formula "13") (term "0"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "true_left" (formula "13"))
                        (rule "nnf_imp2or" (formula "16") (term "0"))
                        (rule "nnf_imp2or" (formula "15") (term "0"))
                        (rule "nnf_imp2or" (formula "10") (term "0"))
                        (rule "nnf_notAnd" (formula "16") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                        (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                        (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "15") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                        (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                        (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "10") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
                        (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                        (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
                        (rule "commute_or_2" (formula "16") (term "0"))
                        (rule "commute_or_2" (formula "15") (term "0"))
                        (rule "commute_or_2" (formula "10") (term "0"))
                        (rule "commute_or" (formula "16") (term "0,0"))
                        (rule "commute_or" (formula "15") (term "0,0"))
                        (rule "commute_or" (formula "10") (term "0,0"))
                        (rule "arrayLengthNotNegative" (formula "14") (term "0"))
                        (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                        (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "2"))
                        (rule "leq_literals" (formula "14") (term "0"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "true_left" (formula "14"))
                        (rule "arrayLengthIsAShort" (formula "14") (term "0"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "true_left" (formula "14"))
                        (rule "arrayLengthIsAShort" (formula "13") (term "0"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "true_left" (formula "13"))
                        (rule "arrayLengthNotNegative" (formula "13") (term "0"))
                        (rule "allLeft" (formula "10") (inst "t=i_1_0"))
                        (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0") (ifseqformula "3"))
                        (rule "qeq_literals" (formula "10") (term "0,1,0"))
                        (builtin "One Step Simplification" (formula "10"))
                        (rule "inEqSimp_contradInEq0" (formula "10") (term "1") (ifseqformula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "10") (term "0,1"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1"))
                        (rule "mul_literals" (formula "10") (term "0,1,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "10") (term "0,0,1"))
                        (rule "polySimp_addComm0" (formula "10") (term "0,0,0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0,1"))
                        (rule "add_literals" (formula "10") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "10") (term "0,0,1"))
                        (rule "leq_literals" (formula "10") (term "0,1"))
                        (builtin "One Step Simplification" (formula "10"))
                        (rule "notLeft" (formula "10"))
                        (rule "allLeft" (formula "16") (inst "t=i_1_0"))
                        (rule "inEqSimp_contradInEq1" (formula "16") (term "1,0") (ifseqformula "3"))
                        (rule "qeq_literals" (formula "16") (term "0,1,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "inEqSimp_contradInEq0" (formula "16") (term "1") (ifseqformula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1"))
                        (rule "mul_literals" (formula "16") (term "0,1,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "16") (term "0,0,1"))
                        (rule "polySimp_addComm0" (formula "16") (term "0,0,0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                        (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "16") (term "0,0,1"))
                        (rule "leq_literals" (formula "16") (term "0,1"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "eqSeqDef2" (formula "16") (inst "iv=iv") (ifseqformula "16"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "true_left" (formula "16"))
                        (rule "allLeft" (formula "17") (inst "t=i_1_0"))
                        (rule "inEqSimp_contradInEq0" (formula "17") (term "1") (ifseqformula "4"))
                        (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                        (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
                        (rule "polySimp_addComm0" (formula "17") (term "0,0,0,1"))
                        (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                        (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "17") (term "0,0,1"))
                        (rule "leq_literals" (formula "17") (term "0,1"))
                        (builtin "One Step Simplification" (formula "17"))
                        (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "3"))
                        (rule "qeq_literals" (formula "17") (term "0,1"))
                        (builtin "One Step Simplification" (formula "17"))
                        (rule "notLeft" (formula "17"))
                        (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=arr_1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "19") (term "0") (ifseqformula "1"))
                        (rule "close" (formula "19") (ifseqformula "2"))
                     )
                  )
               )
               (branch "Case 2"
                  (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "20")))
                  (rule "false_right" (formula "15"))
                  (rule "allRight" (formula "20") (inst "sk=f_0"))
                  (rule "allRight" (formula "20") (inst "sk=o_0"))
                  (rule "orRight" (formula "20"))
                  (rule "eqSymm" (formula "12") (term "1,0"))
                  (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "17"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "15"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "polySimp_elimSub" (formula "8") (term "2,1,0,0,0"))
                  (rule "mul_literals" (formula "8") (term "1,2,1,0,0,0"))
                  (rule "polySimp_addComm0" (formula "8") (term "2,1,0,0,0"))
                  (rule "inEqSimp_ltRight" (formula "16"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0"))
                  (rule "inEqSimp_ltRight" (formula "18"))
                  (rule "times_zero_1" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "11"))
                  (rule "inEqSimp_commuteLeq" (formula "12"))
                  (rule "applyEq" (formula "10") (term "1,2,1,0,0,0") (ifseqformula "13"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "8") (inst "i=i_1"))
                  (rule "greater_literals" (formula "8") (term "0,1"))
                  (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "18")))
                  (rule "sub_literals" (formula "8") (term "2,1,0"))
                  (builtin "One Step Simplification" (formula "8"))
                  (rule "narrowSelectArrayType" (formula "8") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "18"))
                  (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
                  (rule "array2seqDef" (formula "14") (term "1,0,1,0") (inst "u=u"))
                  (rule "array2seqDef" (formula "14") (term "1,1,0") (inst "u=u"))
                  (rule "eqSymm" (formula "14") (term "1,0"))
                  (rule "array2seqDef" (formula "14") (term "0,1,1,0") (inst "u=u"))
                  (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=f_0_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "eqSymm" (formula "22"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                  (rule "inEqSimp_antiSymm" (formula "13") (ifseqformula "3"))
                  (rule "applyEq" (formula "1") (term "1,2,1,0,0,2,0") (ifseqformula "13"))
                  (rule "applyEq" (formula "11") (term "1,2,1,0,0,0") (ifseqformula "13"))
                  (rule "applyEq" (formula "9") (term "1,1,1,0,0") (ifseqformula "13"))
                  (rule "applyEq" (formula "3") (term "0") (ifseqformula "13"))
                  (rule "inEqSimp_homoInEq0" (formula "3"))
                  (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                  (rule "add_literals" (formula "3") (term "1,0"))
                  (rule "times_zero_1" (formula "3") (term "0"))
                  (rule "qeq_literals" (formula "3"))
                  (rule "true_left" (formula "3"))
                  (rule "applyEq" (formula "13") (term "0") (ifseqformula "12"))
                  (rule "inEqSimp_homoInEq1" (formula "13"))
                  (rule "polySimp_pullOutFactor1" (formula "13") (term "0"))
                  (rule "add_literals" (formula "13") (term "1,0"))
                  (rule "times_zero_1" (formula "13") (term "0"))
                  (rule "leq_literals" (formula "13"))
                  (rule "true_left" (formula "13"))
                  (rule "applyEq" (formula "1") (term "1,2,1,0,0,0,1,1,0,0") (ifseqformula "12"))
                  (rule "applyEq" (formula "2") (term "0") (ifseqformula "12"))
                  (rule "applyEq" (formula "12") (term "1") (ifseqformula "11"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "pullOutSelect" (formula "2") (term "0,0,1,1,0,0") (inst "selectSK=java_lang_Object_created__0"))
                  (rule "simplifySelectOfMemset" (formula "2"))
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "simplifySelectOfStore" (formula "2"))
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "simplifySelectOfStore" (formula "2"))
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "simplifySelectOfStore" (formula "2"))
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "simplifySelectOfCreate" (formula "2"))
                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "20")))
                  (rule "castDel" (formula "2") (term "1,0"))
                  (rule "eqSymm" (formula "2") (term "0,0"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
                  (rule "simplifySelectOfMemset" (formula "1"))
                  (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                  (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_3"))
                  (rule "simplifySelectOfStore" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_4"))
                  (rule "simplifySelectOfStore" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_5"))
                  (rule "simplifySelectOfStore" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_6"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "25"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "nnf_imp2or" (formula "21") (term "0"))
                  (rule "nnf_imp2or" (formula "20") (term "0"))
                  (rule "nnf_imp2or" (formula "14") (term "0"))
                  (rule "nnf_notAnd" (formula "21") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "21") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
                  (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "21") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                  (rule "mul_literals" (formula "21") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "20") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
                  (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                  (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "14") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                  (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                  (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                  (rule "commute_and" (formula "8") (term "0,0,0"))
                  (rule "commute_and" (formula "6") (term "0,0"))
                  (rule "commute_or_2" (formula "21") (term "0"))
                  (rule "commute_or_2" (formula "20") (term "0"))
                  (rule "commute_and" (formula "8") (term "1,0,0"))
                  (rule "commute_and" (formula "4") (term "0,0"))
                  (rule "commute_or_2" (formula "14") (term "0"))
                  (rule "commute_and" (formula "3") (term "0,0"))
                  (rule "commute_and" (formula "2") (term "0,0"))
                  (rule "commute_and" (formula "1") (term "0,0"))
                  (rule "commute_or" (formula "21") (term "0,0"))
                  (rule "commute_or" (formula "20") (term "0,0"))
                  (rule "commute_or" (formula "14") (term "0,0"))
                  (rule "cnf_rightDist" (formula "8") (term "0,0"))
                  (rule "commute_or" (formula "8") (term "0,0,0"))
                  (rule "cnf_rightDist" (formula "8") (term "1,0,0"))
                  (rule "commute_or" (formula "8") (term "0,1,0,0"))
                  (rule "commute_or" (formula "8") (term "1,1,0,0"))
                  (rule "cnf_rightDist" (formula "8") (term "0,0,0"))
                  (rule "commute_or" (formula "8") (term "1,0,0,0"))
                  (rule "shift_paren_and" (formula "8") (term "0,0"))
                  (rule "arrayLengthNotNegative" (formula "19") (term "0"))
                  (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                  (rule "arrayLengthIsAShort" (formula "19") (term "0"))
                  (builtin "One Step Simplification" (formula "19"))
                  (rule "true_left" (formula "19"))
                  (rule "cut_direct" (formula "26") (term "0,0"))
                  (branch "CUT: o_0 = null TRUE"
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "false_right" (formula "27"))
                     (rule "replace_known_left" (formula "9") (term "0,0,1,0,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "1")))
                     (rule "applyEqRigid" (formula "9") (term "0,1,0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "9") (term "1,0,0"))
                     (rule "replace_known_right" (formula "9") (term "1,0,0") (ifseqformula "26"))
                     (builtin "One Step Simplification" (formula "9"))
                     (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "9"))
                     (rule "hideAuxiliaryEq" (formula "9"))
                     (rule "applyEqRigid" (formula "6") (term "0,0,0,0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "6") (term "0,0,0,0"))
                     (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "25"))
                     (builtin "One Step Simplification" (formula "6"))
                     (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                     (rule "hideAuxiliaryEq" (formula "6"))
                     (rule "applyEqRigid" (formula "25") (term "1,0") (ifseqformula "1"))
                     (rule "applyEqRigid" (formula "4") (term "0,1,0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "4") (term "1,0,0"))
                     (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "24"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                     (rule "hideAuxiliaryEq" (formula "4"))
                     (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                     (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "6") (term "0,0"))
                     (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "23"))
                     (builtin "One Step Simplification" (formula "6"))
                     (rule "hideAuxiliaryEq" (formula "6"))
                     (rule "applyEqRigid" (formula "5") (term "0,1,0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "5") (term "1,0,0"))
                     (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "22"))
                     (builtin "One Step Simplification" (formula "5"))
                     (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "5"))
                     (rule "hideAuxiliaryEq" (formula "5"))
                     (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "2") (term "1,0,0"))
                     (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "21"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                     (rule "hideAuxiliaryEq" (formula "2"))
                     (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "2") (term "1,0,0"))
                     (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "20"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                     (rule "hideAuxiliaryEq" (formula "2"))
                     (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "2") (term "1,0,0"))
                     (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "19"))
                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "20")))
                     (rule "closeFalse" (formula "2"))
                  )
                  (branch "CUT: o_0 = null FALSE"
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "notRight" (formula "27"))
                     (rule "replace_known_right" (formula "9") (term "0,0,1,0,0") (ifseqformula "27"))
                     (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "27")))
                     (rule "applyEq" (formula "8") (term "2,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "applyEqReverse" (formula "9") (term "0,0,0,0,0,0") (ifseqformula "8"))
                     (builtin "One Step Simplification" (formula "9"))
                     (rule "applyEqReverse" (formula "9") (term "0,0,0,1,0,0") (ifseqformula "8"))
                     (builtin "One Step Simplification" (formula "9"))
                     (rule "hideAuxiliaryEq" (formula "8"))
                     (rule "arrayLengthIsAShort" (formula "18") (term "0"))
                     (builtin "One Step Simplification" (formula "18"))
                     (rule "true_left" (formula "18"))
                     (rule "arrayLengthNotNegative" (formula "18") (term "0"))
                     (rule "applyEq" (formula "18") (term "0") (ifseqformula "19"))
                     (rule "ifthenelse_split" (formula "2") (term "0"))
                     (branch "f_0 = java.lang.Object::<created> ∧ o_0 = x_arr_arr_2 TRUE"
                        (rule "andLeft" (formula "2"))
                        (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "replace_known_left" (formula "7") (term "0,0,0,0") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "2")))
                        (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                        (rule "hideAuxiliaryEq" (formula "7"))
                        (rule "replace_known_left" (formula "8") (term "0,0,0,0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "3")))
                        (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "8"))
                        (rule "hideAuxiliaryEq" (formula "8"))
                        (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "7"))
                        (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "7"))
                        (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "7"))
                        (rule "hideAuxiliaryEq" (formula "7"))
                        (rule "applyEq" (formula "6") (term "0,0,0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "6"))
                        (rule "hideAuxiliaryEq" (formula "6"))
                        (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "5"))
                        (rule "applyEqReverse" (formula "24") (term "1") (ifseqformula "5"))
                        (rule "hideAuxiliaryEq" (formula "5"))
                        (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "applyEqReverse" (formula "23") (term "1") (ifseqformula "4"))
                        (rule "hideAuxiliaryEq" (formula "4"))
                        (rule "applyEqRigid" (formula "22") (term "2,0") (ifseqformula "2"))
                        (rule "castTrueImpliesOriginalTrue" (formula "22") (ifseqformula "1"))
                        (rule "closeTrue" (formula "22"))
                     )
                     (branch "f_0 = java.lang.Object::<created> ∧ o_0 = x_arr_arr_2 FALSE"
                        (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "ifthenelse_split" (formula "2") (term "0"))
                        (branch "f_0 = java.lang.Object::<transient> ∧ o_0 = x_arr_arr_2 TRUE"
                           (rule "andLeft" (formula "2"))
                           (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "8"))
                           (rule "replace_known_left" (formula "6") (term "0,0,0,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "6"))
                           (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "replace_known_right" (formula "8") (term "0,0,0") (ifseqformula "22"))
                           (builtin "One Step Simplification" (formula "8"))
                           (rule "applyEqReverse" (formula "28") (term "1") (ifseqformula "8"))
                           (rule "hideAuxiliaryEq" (formula "8"))
                           (rule "eqSymm" (formula "27"))
                           (rule "replace_known_right" (formula "6") (term "0,1,0,0") (ifseqformula "21"))
                           (builtin "One Step Simplification" (formula "6"))
                           (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "hideAuxiliaryEq" (formula "7"))
                           (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "applyEqRigid" (formula "4") (term "0,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                           (rule "close" (formula "19") (ifseqformula "1"))
                        )
                        (branch "f_0 = java.lang.Object::<transient> ∧ o_0 = x_arr_arr_2 FALSE"
                           (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "ifthenelse_split" (formula "2") (term "0"))
                           (branch " f_0 = java.lang.Object::<transactionConditionallyUpdated> ∧ o_0 = x_arr_arr_2 TRUE"
                              (rule "andLeft" (formula "2"))
                              (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                              (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "3")))
                              (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "replace_known_right" (formula "6") (term "0,0,0") (ifseqformula "21"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "6"))
                              (rule "hideAuxiliaryEq" (formula "6"))
                              (rule "eqSymm" (formula "26"))
                              (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "20"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "applyEq" (formula "5") (term "0,0,0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "applyEq" (formula "19") (term "0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "false_right" (formula "19"))
                              (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "3"))
                              (rule "applyEqRigid" (formula "24") (term "2,0") (ifseqformula "2"))
                              (rule "narrowSelectType" (formula "24") (term "0") (ifseqformula "11"))
                              (rule "eqSymm" (formula "24"))
                              (rule "applyEq" (formula "23") (term "0") (ifseqformula "3"))
                              (rule "applyEq" (formula "4") (term "1,0,0,0,0,0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                              (rule "close" (formula "18") (ifseqformula "1"))
                           )
                           (branch " f_0 = java.lang.Object::<transactionConditionallyUpdated> ∧ o_0 = x_arr_arr_2 FALSE"
                              (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "ifthenelse_split" (formula "2") (term "0"))
                              (branch " f_0 = java.lang.Object::<initialized> ∧ o_0 = x_arr_arr_2 TRUE"
                                 (rule "andLeft" (formula "2"))
                                 (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "6"))
                                 (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "2")))
                                 (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "replace_known_right" (formula "5") (term "0,0,0") (ifseqformula "21"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "eqSymm" (formula "26"))
                                 (rule "replace_known_right" (formula "4") (term "0,1,0,0") (ifseqformula "20"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "3"))
                                 (rule "applyEq" (formula "20") (term "0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "false_right" (formula "20"))
                                 (rule "applyEqRigid" (formula "19") (term "0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "false_right" (formula "19"))
                                 (rule "applyEq" (formula "24") (term "2,0") (ifseqformula "2"))
                                 (rule "narrowSelectType" (formula "24") (term "0") (ifseqformula "11"))
                                 (rule "eqSymm" (formula "24"))
                                 (rule "applyEqRigid" (formula "18") (term "0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "false_right" (formula "18"))
                                 (rule "applyEq" (formula "22") (term "0") (ifseqformula "3"))
                                 (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                 (rule "close" (formula "18") (ifseqformula "1"))
                              )
                              (branch " f_0 = java.lang.Object::<initialized> ∧ o_0 = x_arr_arr_2 FALSE"
                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "18"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "ifthenelse_split" (formula "2") (term "0"))
                                 (branch " o_0 = x_arr_arr_2 ∧ ∃ int iv; (arr(iv) = f_0 ∧ iv ≥ 0 ∧ iv ≤ -1 + i_0) ∧ ¬f_0 = java.lang.Object::<created> TRUE"
                                    (rule "andLeft" (formula "2"))
                                    (rule "andLeft" (formula "2"))
                                    (rule "notLeft" (formula "4"))
                                    (rule "exLeft" (formula "3") (inst "sk=iv_0"))
                                    (rule "andLeft" (formula "3"))
                                    (rule "andLeft" (formula "3"))
                                    (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "eqSymm" (formula "3"))
                                    (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "20")))
                                    (rule "applyEqReverse" (formula "30") (term "1") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "eqSymm" (formula "29"))
                                    (rule "replace_known_left" (formula "23") (term "1") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "19")))
                                    (rule "false_right" (formula "23"))
                                    (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "replace_known_left" (formula "22") (term "1") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "applyEqRigid" (formula "20") (term "0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "false_right" (formula "20"))
                                    (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "2"))
                                    (rule "applyEqRigid" (formula "19") (term "0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "false_right" (formula "19"))
                                    (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
                                    (rule "close" (formula "21") (ifseqformula "1"))
                                 )
                                 (branch " o_0 = x_arr_arr_2 ∧ ∃ int iv; (arr(iv) = f_0 ∧ iv ≥ 0 ∧ iv ≤ -1 + i_0) ∧ ¬f_0 = java.lang.Object::<created> FALSE"
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "cut_direct" (formula "20") (term "1"))
                                    (branch "CUT: o_0 = x_arr_arr_2 TRUE"
                                       (builtin "One Step Simplification" (formula "21"))
                                       (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "21"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")))
                                       (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "eqSymm" (formula "26"))
                                       (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "replace_known_left" (formula "17") (term "1") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "replace_known_left" (formula "16") (term "0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "20")))
                                       (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "26") (term "1,1") (ifseqformula "1"))
                                       (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                       (rule "close" (formula "21") (ifseqformula "2"))
                                    )
                                    (branch "CUT: o_0 = x_arr_arr_2 FALSE"
                                       (builtin "One Step Simplification" (formula "21"))
                                       (rule "false_right" (formula "21"))
                                       (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "20"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "26")))
                                       (rule "closeFalse" (formula "2"))
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
               )
            )
            (branch "Null Reference (_chosen = null)"
               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "9")))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "7")))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
      (branch "Null Reference (newObject = null)"
         (builtin "One Step Simplification" (formula "2"))
         (builtin "One Step Simplification" (formula "1"))
         (builtin "One Step Simplification" (formula "6"))
         (rule "andLeft" (formula "3"))
         (rule "andLeft" (formula "2"))
         (rule "andLeft" (formula "4"))
         (rule "andLeft" (formula "6"))
         (rule "andLeft" (formula "2"))
         (rule "andLeft" (formula "5"))
         (rule "notLeft" (formula "8"))
         (rule "notLeft" (formula "2"))
         (rule "close" (formula "8") (ifseqformula "1"))
      )
   )
)
(branch
   (builtin "One Step Simplification" (formula "1"))
   (rule "andLeft" (formula "2") (userinteraction))
   (rule "nonNull" (formula "3") (term "1") (inst "i=i_1") (userinteraction))
   (rule "greater_literals" (formula "3") (term "0,1,1"))
   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")))
   (rule "closeFalse" (formula "3"))
)
)

}
