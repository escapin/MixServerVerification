\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Wed Dec 14 21:29:07 CET 2016
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=\\#begexpand_inByte\\#end,\\#begexpand_inChar\\#end,\\#begexpand_inShort\\#end,\\#begexpand_inInt\\#end,\\#begexpand_inLong\\#end
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=80000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Wed Dec 14 21:29:07 CET 2016
name=verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer\\:\\:getFirst([[B,[B,int)].JML normal_behavior operation contract.0
contract=verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer\\:\\:getFirst([[B,[B,int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mihai" ) (keyVersion "f08755657231e066f34a6d2cf1fc92a2d49850a9"))

(autoModeTime "10626")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "messages,bal,i,self,result,exc,heapAtPre,o,f") (userinteraction))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "11"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "12"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "14"))
(rule "andLeft" (formula "15"))
(rule "notLeft" (formula "16"))
(rule "assignment" (formula "18") (term "1") (userinteraction))
(rule "methodBodyExpand" (formula "18") (term "1,1") (newnames "heapBefore_getFirst,savedHeapBefore_getFirst") (userinteraction))
(builtin "One Step Simplification" (formula "18"))
(rule "variableDeclarationAssign" (formula "18") (term "1") (userinteraction))
(rule "variableDeclaration" (formula "18") (term "1") (newnames "first_1") (userinteraction))
(builtin "Use Operation Contract" (formula "18") (newnames "heapBefore_first,result_0,exc_0,heapAfter_first,anon_heap_first") (contract "verif.utils.MessageTools[verif.utils.MessageTools::first([B)].JML normal_behavior operation contract.0"))
(branch "Post (first)"
   (rule "assignment" (formula "20") (term "1,1") (userinteraction))
   (rule "eval_order_array_access3" (formula "20") (term "1,1,1") (inst "#v1=x_arr") (inst "#v2=x") (inst "#v0=x_arr_arr") (userinteraction))
   (rule "variableDeclarationAssign" (formula "20") (term "1,1,1") (userinteraction))
   (rule "variableDeclaration" (formula "20") (term "1,1,1") (newnames "x_arr_arr") (userinteraction))
   (rule "assignment" (formula "20") (term "1,1,1") (userinteraction))
   (rule "variableDeclarationAssign" (formula "20") (term "1,1,1,1") (userinteraction))
   (rule "variableDeclaration" (formula "20") (term "1,1,1,1") (newnames "x") (userinteraction))
   (rule "assignment" (formula "20") (term "1,1,1,1") (userinteraction))
   (rule "ifUnfold" (formula "20") (term "1,1,1,1,1") (inst "#boolv=x_1") (userinteraction))
   (rule "variableDeclaration" (formula "20") (term "1,1,1,1,1") (newnames "x_1") (userinteraction))
   (rule "compound_assignment_5_nonsimple" (formula "20") (term "1,1,1,1,1") (userinteraction))
   (rule "ifElseUnfold" (formula "20") (term "1,1,1,1,1") (inst "#boolv=x_2") (userinteraction))
   (rule "variableDeclaration" (formula "20") (term "1,1,1,1,1") (newnames "x_2") (userinteraction))
   (rule "compound_less_equal_than_comparison_1" (formula "20") (term "1,1,1,1,1") (inst "#v0=x_3") (userinteraction))
   (rule "variableDeclarationAssign" (formula "20") (term "1,1,1,1,1") (userinteraction))
   (rule "variableDeclaration" (formula "20") (term "1,1,1,1,1") (newnames "x_3") (userinteraction))
   (rule "eval_order_access2" (formula "20") (term "1,1,1,1,1") (inst "#v0=x_arr_arr_1") (userinteraction))
   (rule "variableDeclarationAssign" (formula "20") (term "1,1,1,1,1") (userinteraction))
   (rule "variableDeclaration" (formula "20") (term "1,1,1,1,1") (newnames "x_arr_arr_1") (userinteraction))
   (rule "remove_parentheses_right" (formula "20") (term "1,1,1,1,1") (userinteraction))
   (rule "assignment" (formula "20") (term "1,1,1,1,1") (userinteraction))
   (rule "assignment_read_length" (formula "20") (term "1,1,1,1,1,1") (userinteraction))
   (branch "Normal Execution (x_arr_arr_1 != null)"
      (rule "less_equal_than_comparison_simple" (formula "21") (term "1,1,1,1,1,1,1") (userinteraction))
      (rule "ifElse" (formula "21") (term "1,1,1,1,1,1,1,1") (userinteraction))
      (builtin "One Step Simplification" (formula "21"))
      (rule "ifthenelse_split_for" (formula "21") (userinteraction))
      (branch "messages.length â‰¤ i TRUE"
         (rule "ifEnterThen" (formula "22") (term "1") (userinteraction))
         (rule "assignment" (formula "22") (term "1") (userinteraction))
         (rule "blockThrow" (formula "22") (term "1,1") (userinteraction))
         (rule "throwUnfold" (formula "22") (term "1,1") (inst "#v0=a") (userinteraction))
         (rule "variableDeclarationAssign" (formula "22") (term "1,1") (userinteraction))
         (rule "variableDeclaration" (formula "22") (term "1,1") (newnames "a") (userinteraction))
         (rule "instanceCreationAssignment" (formula "22") (term "1,1") (inst "#v0=a_1") (userinteraction))
         (rule "variableDeclarationAssign" (formula "22") (term "1,1") (userinteraction))
         (rule "variableDeclaration" (formula "22") (term "1,1") (newnames "a_1") (userinteraction))
         (builtin "One Step Simplification" (formula "22"))
         (rule "eqSymm" (formula "22") (term "1,0,0,0,0,0,1"))
         (rule "eqSymm" (formula "22") (term "1,0,0,1,0,1"))
         (rule "elementOfSingleton" (formula "22") (term "0,0,0,0,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,0,0,0,0,1"))
         (rule "array2seqDef" (formula "22") (term "0,1,0,0,0,0,0,1") (inst "u=u"))
         (rule "array2seqDef" (formula "22") (term "1,1,0,0,0,0,0,1") (inst "u=u"))
         (rule "eqSeqDef" (formula "22") (term "1,0,0,0,0,0,1") (inst "iv=iv"))
         (rule "lenOfSeqDef" (formula "22") (term "1,0,1,0,0,0,0,0,1"))
         (rule "polySimp_elimSub" (formula "22") (term "1,1,0,1,0,0,0,0,0,1"))
         (rule "mul_literals" (formula "22") (term "1,1,1,0,1,0,0,0,0,0,1"))
         (rule "add_zero_right" (formula "22") (term "1,1,0,1,0,0,0,0,0,1"))
         (rule "getOfSeqDef" (formula "22") (term "0,1,0,1,1,0,0,0,0,0,1"))
         (rule "castDel" (formula "22") (term "1,0,1,0,1,1,0,0,0,0,0,1"))
         (rule "castDel" (formula "22") (term "2,0,1,0,1,1,0,0,0,0,0,1"))
         (rule "add_zero_right" (formula "22") (term "0,2,1,0,1,0,1,1,0,0,0,0,0,1"))
         (rule "eqSymm" (formula "22") (term "1,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_elimSub" (formula "22") (term "1,1,0,1,1,0,1,1,0,0,0,0,0,1"))
         (rule "times_zero_2" (formula "22") (term "1,1,1,0,1,1,0,1,1,0,0,0,0,0,1"))
         (rule "add_zero_right" (formula "22") (term "1,1,0,1,1,0,1,1,0,0,0,0,0,1"))
         (rule "lenOfSeqDef" (formula "22") (term "0,0,1,0,0,0,0,0,1"))
         (rule "lenOfSeqDef" (formula "22") (term "1,1,0,0,1,1,0,0,0,0,0,1"))
         (rule "getOfSeqDef" (formula "22") (term "0,1,0,1,1,0,0,0,0,0,1"))
         (rule "castDel" (formula "22") (term "1,0,1,0,1,1,0,0,0,0,0,1"))
         (rule "eqSymm" (formula "22") (term "1,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_addComm0" (formula "22") (term "0,2,1,1,1,0,1,1,0,0,0,0,0,1"))
         (rule "add_zero_left" (formula "22") (term "0,2,1,1,1,0,1,1,0,0,0,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "22") (term "0,1,0,1,0,0,0,0,0,1"))
         (rule "add_zero_right" (formula "22") (term "0,0,1,0,1,0,0,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,0,0,0,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0,1,0,0,0,0,0,1"))
         (rule "add_zero_right" (formula "22") (term "0,0,0,0,1,0,0,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,1,0,0,0,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_addComm1" (formula "22") (term "0,1,0,0,1,1,0,0,0,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1,0,1,1,0,0,0,0,0,1"))
         (rule "eqSymm" (formula "22") (term "1,0,1,1,0,0,0,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1,0,1,1,0,0,0,0,0,1"))
         (rule "eqSymm" (formula "22") (term "1,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,1,1,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_addComm1" (formula "22") (term "0,1,0,1,1,0,1,1,0,0,0,0,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1,1,0,0,0,0,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1,0,1,1,0,0,0,0,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,1,1,0,1,1,0,0,0,0,0,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,1,0,1,0,0,0,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "22") (term "0,0,1,0,1,0,0,0,0,0,1"))
         (rule "polySimp_elimOne" (formula "22") (term "0,0,1,0,1,0,0,0,0,0,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,0,1,0,0,0,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,0,1,0,0,0,0,0,1"))
         (rule "polySimp_elimOne" (formula "22") (term "0,0,0,0,1,0,0,0,0,0,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1,0,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_elimOne" (formula "22") (term "0,1,0,0,1,1,0,0,0,0,0,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "1,0,1,1,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0,1,1,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_elimOne" (formula "22") (term "0,1,0,1,1,0,1,1,0,0,0,0,0,1"))
         (rule "nnf_imp2or" (formula "22") (term "0,0,0,0,0,1"))
         (rule "nnf_notAnd" (formula "22") (term "0,0,0,0,0,0,1"))
         (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,0,0,0,0,1"))
         (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0,0,0,0,0,1"))
         (rule "add_zero_right" (formula "22") (term "0,0,0,0,0,0,0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,0,0,0,0,1"))
         (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0,0,0,1"))
         (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0,0,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,0,0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,0,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0,0,0,0,1"))
         (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0,0,0,0,1"))
         (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0,0,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0,0,0,0,1"))
         (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,0,0,0,0,1"))
         (rule "nnf_imp2or" (formula "22") (term "0,1,1,0,0,0,0,0,1"))
         (rule "nnf_notAnd" (formula "22") (term "0,0,1,1,0,0,0,0,0,1"))
         (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,1,1,0,0,0,0,0,1"))
         (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0,1,1,0,0,0,0,0,1"))
         (rule "add_literals" (formula "22") (term "0,0,0,0,0,1,1,0,0,0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_elimOneLeft0" (formula "22") (term "1,0,0,0,1,1,0,0,0,0,0,1"))
         (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,1"))
         (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,1,1,0,0,0,0,0,1"))
         (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,1,1,0,0,0,0,0,1"))
         (rule "add_zero_left" (formula "22") (term "0,0,1,0,0,1,1,0,0,0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,1,1,0,0,0,0,0,1"))
         (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "22") (term "1") (inst "#v0=a_2"))
         (rule "variableDeclaration" (formula "22") (term "1") (newnames "a_2"))
         (rule "methodBodyExpand" (formula "22") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
         (builtin "One Step Simplification" (formula "22"))
         (rule "variableDeclaration" (formula "22") (term "1") (newnames "__NEW__"))
         (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "22") (term "1") (inst "#v0=a_3"))
         (rule "variableDeclaration" (formula "22") (term "1") (newnames "a_3"))
         (rule "allocateInstance" (formula "22"))
         (builtin "One Step Simplification" (formula "1"))
         (builtin "One Step Simplification" (formula "23"))
         (rule "castDel" (formula "23") (term "2,1,1,0,1,1,0,0,0,0,0,1"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "polySimp_elimSub" (formula "25") (term "1,0,1,0,0,1,1,0,0,0,0,0,1"))
         (rule "mul_literals" (formula "25") (term "1,1,0,1,0,0,1,1,0,0,0,0,0,1"))
         (rule "add_zero_right" (formula "25") (term "1,0,1,0,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_elimSub" (formula "25") (term "1,0,0,1,0,0,0,0,0,1"))
         (rule "mul_literals" (formula "25") (term "1,1,0,0,1,0,0,0,0,0,1"))
         (rule "add_zero_right" (formula "25") (term "1,0,0,1,0,0,0,0,0,1"))
         (rule "polySimp_elimSub" (formula "25") (term "0,1,0,1,1,0,1,1,0,0,0,0,0,1"))
         (rule "mul_literals" (formula "25") (term "1,0,1,0,1,1,0,1,1,0,0,0,0,0,1"))
         (rule "add_zero_right" (formula "25") (term "0,1,0,1,1,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,1,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_addComm1" (formula "25") (term "0,1,0,0,1,0,1,1,0,0,0,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,1,0,0,1,1,0,0,0,0,0,1"))
         (rule "add_zero_right" (formula "25") (term "0,0,0,1,0,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0,0,1,1,0,0,0,0,0,1"))
         (rule "blockEmpty" (formula "25") (term "1"))
         (rule "assignment" (formula "25") (term "1"))
         (builtin "One Step Simplification" (formula "25"))
         (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,0,1,0,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0,1,0,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_elimOne" (formula "25") (term "0,0,0,1,0,0,1,1,0,0,0,0,0,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "1,0,0,1,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0,0,1,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_elimOne" (formula "25") (term "0,1,0,0,1,0,1,1,0,0,0,0,0,1"))
         (rule "pullOutSelect" (formula "1") (term "0,0,1") (inst "selectSK=java_lang_Object_created__0"))
         (rule "methodBodyExpand" (formula "26") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
         (builtin "One Step Simplification" (formula "26"))
         (rule "assignment_write_attribute_this" (formula "26") (term "1"))
         (builtin "One Step Simplification" (formula "26"))
         (rule "methodCallWithinClass" (formula "26") (term "1"))
         (rule "methodBodyExpand" (formula "26") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
         (builtin "One Step Simplification" (formula "26"))
         (rule "methodCallSuper" (formula "26") (term "1"))
         (rule "methodBodyExpand" (formula "26") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
         (builtin "One Step Simplification" (formula "26"))
         (rule "methodCallSuper" (formula "26") (term "1"))
         (rule "methodBodyExpand" (formula "26") (term "1") (newnames "heapBefore_<prepare>_0,savedHeapBefore_<prepare>_0"))
         (builtin "One Step Simplification" (formula "26"))
         (rule "methodCallSuper" (formula "26") (term "1"))
         (rule "methodBodyExpand" (formula "26") (term "1") (newnames "heapBefore_<prepare>_1,savedHeapBefore_<prepare>_1"))
         (builtin "One Step Simplification" (formula "26"))
         (rule "methodCallSuper" (formula "26") (term "1"))
         (rule "methodBodyExpand" (formula "26") (term "1") (newnames "heapBefore_<prepare>_2,savedHeapBefore_<prepare>_2"))
         (builtin "One Step Simplification" (formula "26"))
         (rule "methodCallSuper" (formula "26") (term "1"))
         (rule "methodBodyExpand" (formula "26") (term "1") (newnames "heapBefore_<prepare>_3,savedHeapBefore_<prepare>_3"))
         (builtin "One Step Simplification" (formula "26"))
         (rule "methodCallEmpty" (formula "26") (term "1"))
         (rule "blockEmpty" (formula "26") (term "1"))
         (rule "assignment_write_attribute_this" (formula "26") (term "1"))
         (builtin "One Step Simplification" (formula "26"))
         (rule "castDel" (formula "26") (term "1,0,1,0"))
         (rule "assignment_write_attribute_this" (formula "26") (term "1"))
         (builtin "One Step Simplification" (formula "26"))
         (rule "castDel" (formula "26") (term "1,0,1,0"))
         (rule "methodCallEmpty" (formula "26") (term "1"))
         (rule "methodCallEmpty" (formula "26") (term "1"))
         (rule "methodCallEmpty" (formula "26") (term "1"))
         (rule "methodCallEmpty" (formula "26") (term "1"))
         (rule "methodCallEmpty" (formula "26") (term "1"))
         (rule "blockEmpty" (formula "26") (term "1"))
         (rule "methodCallReturnIgnoreResult" (formula "26") (term "1"))
         (rule "methodCallReturn" (formula "26") (term "1"))
         (rule "assignment" (formula "26") (term "1"))
         (builtin "One Step Simplification" (formula "26"))
         (rule "methodCallEmpty" (formula "26") (term "1"))
         (rule "blockEmpty" (formula "26") (term "1"))
         (rule "assignment" (formula "26") (term "1"))
         (builtin "One Step Simplification" (formula "26"))
         (rule "methodBodyExpand" (formula "26") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
         (builtin "One Step Simplification" (formula "26"))
         (rule "methodCallSuper" (formula "26") (term "1"))
         (rule "methodBodyExpand" (formula "26") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
         (builtin "One Step Simplification" (formula "26"))
         (rule "methodCallSuper" (formula "26") (term "1"))
         (rule "methodBodyExpand" (formula "26") (term "1") (newnames "heapBefore_<init>_1,savedHeapBefore_<init>_1"))
         (builtin "One Step Simplification" (formula "26"))
         (rule "methodCallSuper" (formula "26") (term "1"))
         (rule "methodBodyExpand" (formula "26") (term "1") (newnames "heapBefore_<init>_2,savedHeapBefore_<init>_2"))
         (builtin "One Step Simplification" (formula "26"))
         (rule "methodCallSuper" (formula "26") (term "1"))
         (rule "methodBodyExpand" (formula "26") (term "1") (newnames "heapBefore_<init>_3,savedHeapBefore_<init>_3"))
         (builtin "One Step Simplification" (formula "26"))
         (rule "methodCallSuper" (formula "26") (term "1"))
         (rule "methodBodyExpand" (formula "26") (term "1") (newnames "heapBefore_<init>_4,savedHeapBefore_<init>_4"))
         (builtin "One Step Simplification" (formula "26"))
         (rule "methodCallEmpty" (formula "26") (term "1"))
         (rule "blockEmpty" (formula "26") (term "1"))
         (rule "assignment_write_attribute_this" (formula "26") (term "1"))
         (builtin "One Step Simplification" (formula "26"))
         (rule "castDel" (formula "26") (term "1,0,1,0"))
         (builtin "One Step Simplification" (formula "26"))
         (rule "assignment_write_attribute_this" (formula "26") (term "1"))
         (builtin "One Step Simplification" (formula "26"))
         (rule "castDel" (formula "26") (term "1,0,1,0"))
         (builtin "One Step Simplification" (formula "26"))
         (rule "methodCallEmpty" (formula "26") (term "1"))
         (rule "methodCallEmpty" (formula "26") (term "1"))
         (rule "methodCallEmpty" (formula "26") (term "1"))
         (rule "methodCallEmpty" (formula "26") (term "1"))
         (rule "methodCallEmpty" (formula "26") (term "1"))
         (rule "blockEmpty" (formula "26") (term "1"))
         (rule "assignment_write_attribute" (formula "26") (term "1"))
         (branch "Normal Execution (a_1 != null)"
            (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "22")))
            (builtin "One Step Simplification" (formula "27"))
            (rule "false_right" (formula "26"))
            (rule "assignment" (formula "26") (term "1"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "tryCatchThrow" (formula "26") (term "1"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "ifElseUnfold" (formula "26") (term "1") (inst "#boolv=x"))
            (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_5"))
            (rule "equality_comparison_simple" (formula "26") (term "1"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "replace_known_right" (formula "26") (term "0,0,1,0") (ifseqformula "22"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "ifElseSplit" (formula "26"))
            (branch "if x_5 true"
               (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "if x_5 false"
               (builtin "One Step Simplification" (formula "27"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "ifElseSplit" (formula "26"))
               (branch "if a instanceof Throwable true"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                  (rule "true_left" (formula "1"))
                  (rule "variableDeclaration" (formula "26") (term "1") (newnames "t_1"))
                  (rule "reference_type_cast" (formula "26") (term "1"))
                  (branch "Normal Execution (a instanceof Throwable)"
                     (builtin "One Step Simplification" (formula "27"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "blockEmpty" (formula "26") (term "1"))
                     (rule "methodCallReturn" (formula "26") (term "1"))
                     (rule "assignment" (formula "26") (term "1"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "methodCallEmpty" (formula "26") (term "1"))
                     (rule "tryEmpty" (formula "26") (term "1"))
                     (rule "emptyModality" (formula "26") (term "1"))
                     (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "23")))
                     (builtin "One Step Simplification" (formula "25"))
                     (builtin "One Step Simplification" (formula "21"))
                     (rule "andRight" (formula "26") (userinteraction))
                     (branch "Case 1"
                        (rule "andRight" (formula "26") (userinteraction))
                        (branch "Case 1"
                           (rule "andLeft" (formula "21"))
                           (rule "andLeft" (formula "22"))
                           (rule "andLeft" (formula "23"))
                           (rule "andLeft" (formula "22"))
                           (rule "andLeft" (formula "23"))
                           (rule "andLeft" (formula "24"))
                           (rule "notLeft" (formula "25"))
                           (rule "notLeft" (formula "24"))
                           (rule "allRight" (formula "31") (inst "sk=j_10") (userinteraction))
                           (rule "allLeftHide" (formula "17") (inst "t=j_10") (userinteraction))
                           (builtin "One Step Simplification" (formula "17"))
                           (builtin "One Step Simplification" (formula "10"))
                           (rule "true_left" (formula "10"))
                           (rule "wellFormedAnonEQ" (formula "2") (term "0") (ifseqformula "20"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "1") (ifseqformula "20"))
                           (rule "orRight" (formula "30"))
                           (rule "orRight" (formula "30"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                           (rule "eqSymm" (formula "13"))
                           (rule "eqSymm" (formula "16") (term "1"))
                           (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "27"))
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "29"))
                           (builtin "One Step Simplification" (formula "8"))
                           (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "25"))
                           (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "24")))
                           (rule "replace_known_left" (formula "2") (term "1,0") (ifseqformula "19"))
                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "5")))
                           (rule "notLeft" (formula "2"))
                           (rule "dismissNonSelectedField" (formula "32") (term "0,0,0,0,0"))
                           (rule "eqSymm" (formula "32") (term "0"))
                           (rule "dismissNonSelectedField" (formula "32") (term "1,1,1,1,0,1"))
                           (rule "dismissNonSelectedField" (formula "32") (term "1,0,0,0,0,1,0,0,1"))
                           (rule "dismissNonSelectedField" (formula "32") (term "0,0,1,0,0,1,0,1"))
                           (rule "eqSymm" (formula "32") (term "1,0,1"))
                           (rule "dismissNonSelectedField" (formula "32") (term "0,1,0,1,0,0,1"))
                           (rule "ifthenelse_negated" (formula "1") (term "0"))
                           (rule "inEqSimp_leqRight" (formula "30"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_geqRight" (formula "31"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "16"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "16") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0"))
                           (rule "dismissNonSelectedField" (formula "32") (term "0,1,1,0"))
                           (rule "dismissNonSelectedField" (formula "32") (term "1,0,0,0,1,0"))
                           (rule "dismissNonSelectedField" (formula "32") (term "0,0,0,0,0"))
                           (rule "eqSymm" (formula "32") (term "0"))
                           (rule "dismissNonSelectedField" (formula "32") (term "1,0,0,0,0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "dismissNonSelectedField" (formula "32") (term "1,1,1,0,1"))
                           (rule "dismissNonSelectedField" (formula "32") (term "1,1,0,1,0,1"))
                           (rule "dismissNonSelectedField" (formula "32") (term "0,0,1,0,1,1,0,1"))
                           (rule "dismissNonSelectedField" (formula "32") (term "0,0,1,0,0,1,0,1"))
                           (rule "eqSymm" (formula "32") (term "1,0,1"))
                           (rule "dismissNonSelectedField" (formula "32") (term "0,1,0,1,0,0,1"))
                           (rule "dismissNonSelectedField" (formula "32") (term "0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "32") (term "0,1,1,0"))
                           (rule "dismissNonSelectedField" (formula "32") (term "1,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "32") (term "0,0,0,1,0"))
                           (rule "dismissNonSelectedField" (formula "32") (term "1,0,0,0,0,1,0,0,1"))
                           (rule "dismissNonSelectedField" (formula "32") (term "1,1,1,1,0,1"))
                           (rule "dismissNonSelectedField" (formula "32") (term "0,0,1,0,1,1,0,1"))
                           (rule "dismissNonSelectedField" (formula "32") (term "1,0,0,1,0,0,1,0,1"))
                           (rule "dismissNonSelectedField" (formula "32") (term "1,0,1,0,1"))
                           (rule "dismissNonSelectedField" (formula "32") (term "1,0,1,0,1,0,0,1"))
                           (rule "dismissNonSelectedField" (formula "32") (term "0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "32") (term "0,1,1,0"))
                           (rule "dismissNonSelectedField" (formula "32") (term "0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "32") (term "0,0,0,1,0"))
                           (rule "dismissNonSelectedField" (formula "32") (term "0,0,0,0,1,0,0,1"))
                           (rule "dismissNonSelectedField" (formula "32") (term "1,1,1,0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "15"))
                           (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0"))
                           (rule "replace_known_left" (formula "17") (term "0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "dismissNonSelectedField" (formula "32") (term "0,0,1,0,1,1,0,1"))
                           (rule "dismissNonSelectedField" (formula "32") (term "0,0,1,0,0,1,0,1"))
                           (rule "dismissNonSelectedField" (formula "32") (term "1,0,1,0,1"))
                           (rule "dismissNonSelectedField" (formula "32") (term "1,0,1,0,1,0,0,1"))
                           (rule "dismissNonSelectedField" (formula "32") (term "1,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "32") (term "0,1,1,0"))
                           (rule "dismissNonSelectedField" (formula "32") (term "1,0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "32") (term "0,0,0,0,1,0,0,1"))
                           (rule "dismissNonSelectedField" (formula "32") (term "1,1,1,0,1"))
                           (rule "dismissNonSelectedField" (formula "32") (term "1,0,0,1,0,0,1,0,1"))
                           (rule "dismissNonSelectedField" (formula "32") (term "1,1,0,1,0,1"))
                           (rule "dismissNonSelectedField" (formula "32") (term "0,1,0,1,0,0,1"))
                           (rule "dismissNonSelectedField" (formula "32") (term "1,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "32") (term "0,0,0,0,0"))
                           (rule "dismissNonSelectedField" (formula "32") (term "0,0,0,0,1,0,0,1"))
                           (rule "dismissNonSelectedField" (formula "32") (term "1,1,1,0,1"))
                           (rule "dismissNonSelectedField" (formula "32") (term "1,0,0,1,0,0,1,0,1"))
                           (rule "dismissNonSelectedField" (formula "32") (term "1,1,1,0,1,0,1"))
                           (rule "dismissNonSelectedField" (formula "32") (term "1,0,1,0,1,0,0,1"))
                           (rule "dismissNonSelectedField" (formula "32") (term "1,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "32") (term "1,1,1,0,1,0,1"))
                           (rule "dismissNonSelectedField" (formula "32") (term "1,1,0,1,0,1"))
                           (rule "dismissNonSelectedField" (formula "32") (term "1,1,1,0,1,0,1"))
                           (rule "dismissNonSelectedField" (formula "32") (term "1,1,0,1,0,1"))
                           (rule "inEqSimp_homoInEq1" (formula "12"))
                           (rule "polySimp_addComm1" (formula "12") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "32") (term "1,0,0,1"))
                           (rule "inEqSimp_homoInEq1" (formula "32") (term "1,0,1,1,0,1"))
                           (rule "eqSymm" (formula "32") (term "1,0,1"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,1,0,0,1,0,1"))
                           (rule "inEqSimp_homoInEq1" (formula "32") (term "1,0,1,1,0,1"))
                           (rule "eqSymm" (formula "32") (term "1,0,1"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,1,0,0,1,0,1"))
                           (rule "apply_eq_boolean" (formula "3") (term "1") (ifseqformula "25"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "notLeft" (formula "3"))
                           (rule "ifEqualsTRUE" (formula "24"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "orRight" (formula "24"))
                           (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "24"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "15"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                           (rule "polySimp_elimOne" (formula "15") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                           (rule "mul_literals" (formula "16") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "16") (term "1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1"))
                           (rule "polySimp_rightDist" (formula "11") (term "1"))
                           (rule "mul_literals" (formula "11") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,1,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,1,1,0,1"))
                           (rule "polySimp_rightDist" (formula "33") (term "1,1,0,1,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,1,1,0,1"))
                           (rule "mul_literals" (formula "33") (term "0,1,1,0,1,1,0,1"))
                           (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,1,1,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,1,0,1"))
                           (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,1,0,1"))
                           (rule "mul_literals" (formula "33") (term "0,1,1,0,0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,1,0,1"))
                           (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,1,0,1"))
                           (rule "inEqSimp_contradInEq0" (formula "15") (ifseqformula "4"))
                           (rule "andLeft" (formula "15"))
                           (rule "inEqSimp_homoInEq1" (formula "15"))
                           (rule "polySimp_pullOutFactor1b" (formula "15") (term "0"))
                           (rule "add_literals" (formula "15") (term "1,1,0"))
                           (rule "times_zero_1" (formula "15") (term "1,0"))
                           (rule "add_zero_right" (formula "15") (term "0"))
                           (rule "leq_literals" (formula "15"))
                           (rule "closeFalse" (formula "15"))
                        )
                        (branch "Case 2"
                           (builtin "One Step Simplification" (formula "17"))
                           (builtin "One Step Simplification" (formula "10"))
                           (rule "true_left" (formula "10"))
                           (rule "andLeft" (formula "20"))
                           (rule "wellFormedAnonEQ" (formula "2") (term "0") (ifseqformula "20"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "1,1,0") (ifseqformula "20"))
                           (rule "andLeft" (formula "21"))
                           (rule "andLeft" (formula "21"))
                           (rule "andLeft" (formula "23"))
                           (rule "andLeft" (formula "23"))
                           (rule "andLeft" (formula "24"))
                           (rule "notLeft" (formula "25"))
                           (rule "notLeft" (formula "24"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                           (rule "eqSymm" (formula "13"))
                           (rule "eqSymm" (formula "16") (term "1,0"))
                           (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "27"))
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "29"))
                           (builtin "One Step Simplification" (formula "8"))
                           (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "5"))
                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "19")))
                           (rule "notLeft" (formula "2"))
                           (rule "replace_known_right" (formula "21") (term "0,1") (ifseqformula "24"))
                           (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "25")))
                           (rule "dismissNonSelectedField" (formula "30") (term "0,0,0"))
                           (rule "ifthenelse_negated" (formula "1") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "14"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "14") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                           (rule "dismissNonSelectedField" (formula "30") (term "0,0,0"))
                           (rule "dismissNonSelectedField" (formula "30") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "13"))
                           (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                           (rule "inEqSimp_homoInEq1" (formula "10"))
                           (rule "polySimp_addComm1" (formula "10") (term "0"))
                           (rule "apply_eq_boolean" (formula "1") (term "1") (ifseqformula "23"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "notLeft" (formula "1"))
                           (rule "ifEqualsTRUE" (formula "22"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "orRight" (formula "22"))
                           (rule "replace_known_right" (formula "23") (term "0,0") (ifseqformula "22"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                           (rule "polySimp_elimOne" (formula "13") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1"))
                           (rule "polySimp_rightDist" (formula "9") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                           (rule "mul_literals" (formula "9") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                           (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "13"))
                           (rule "andLeft" (formula "2"))
                           (rule "inEqSimp_homoInEq1" (formula "2"))
                           (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                           (rule "add_literals" (formula "2") (term "1,1,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0"))
                           (rule "add_zero_right" (formula "2") (term "0"))
                           (rule "leq_literals" (formula "2"))
                           (rule "closeFalse" (formula "2"))
                        )
                     )
                     (branch "Case 2"
                        (builtin "One Step Simplification" (formula "17"))
                        (builtin "One Step Simplification" (formula "10"))
                        (rule "true_left" (formula "10"))
                        (rule "andLeft" (formula "20"))
                        (rule "wellFormedAnonEQ" (formula "2") (term "0") (ifseqformula "20"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "1,1,0") (ifseqformula "20"))
                        (rule "andLeft" (formula "21"))
                        (rule "andLeft" (formula "22"))
                        (rule "andLeft" (formula "21"))
                        (rule "andLeft" (formula "22"))
                        (rule "andLeft" (formula "23"))
                        (rule "notLeft" (formula "24"))
                        (rule "notLeft" (formula "23"))
                        (rule "allRight" (formula "30") (inst "sk=f_1"))
                        (rule "allRight" (formula "30") (inst "sk=o_1"))
                        (rule "orRight" (formula "30"))
                        (rule "orRight" (formula "30"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                        (rule "eqSymm" (formula "13"))
                        (rule "eqSymm" (formula "16") (term "1,0"))
                        (rule "eqSymm" (formula "32"))
                        (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "27"))
                        (builtin "One Step Simplification" (formula "9"))
                        (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "29"))
                        (builtin "One Step Simplification" (formula "8"))
                        (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "25"))
                        (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "24")))
                        (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "5"))
                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "19")))
                        (rule "notLeft" (formula "2"))
                        (rule "ifthenelse_negated" (formula "1") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "14"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "14") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "13"))
                        (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                        (rule "inEqSimp_homoInEq1" (formula "10"))
                        (rule "polySimp_addComm1" (formula "10") (term "0"))
                        (rule "apply_eq_boolean_rigid" (formula "1") (term "1") (ifseqformula "23"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "ifEqualsTRUE" (formula "22"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "orRight" (formula "22"))
                        (rule "replace_known_right" (formula "23") (term "0,0") (ifseqformula "22"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                        (rule "polySimp_elimOne" (formula "13") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1"))
                        (rule "polySimp_rightDist" (formula "9") (term "1"))
                        (rule "mul_literals" (formula "9") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                        (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "13"))
                        (rule "andLeft" (formula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "2"))
                        (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                        (rule "add_literals" (formula "2") (term "1,1,0"))
                        (rule "times_zero_1" (formula "2") (term "1,0"))
                        (rule "add_zero_right" (formula "2") (term "0"))
                        (rule "leq_literals" (formula "2"))
                        (rule "closeFalse" (formula "2"))
                     )
                  )
                  (branch "ClassCastException (!(a instanceof Throwable))"
                     (builtin "One Step Simplification" (formula "27"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "closeTrue" (formula "26"))
                  )
               )
               (branch "if a instanceof Throwable false"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
         (branch "Null Reference (a_1 = null)"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "messages.length â‰¤ i FALSE"
         (builtin "One Step Simplification" (formula "17"))
         (builtin "One Step Simplification" (formula "13"))
         (builtin "One Step Simplification" (formula "6"))
         (builtin "One Step Simplification" (formula "20"))
         (rule "true_left" (formula "6"))
         (rule "andLeft" (formula "16"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "1,1,0") (ifseqformula "16"))
         (rule "andLeft" (formula "17"))
         (rule "andLeft" (formula "17"))
         (rule "andLeft" (formula "19"))
         (rule "andLeft" (formula "19"))
         (rule "andLeft" (formula "20"))
         (rule "notLeft" (formula "20"))
         (rule "notLeft" (formula "20"))
         (rule "eqSymm" (formula "9"))
         (rule "eqSymm" (formula "26") (term "1,0,0,0,0,0,1"))
         (rule "eqSymm" (formula "26") (term "1,0,0,1,0,1"))
         (rule "eqSymm" (formula "12") (term "1,0"))
         (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "22"))
         (builtin "One Step Simplification" (formula "5"))
         (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "24"))
         (builtin "One Step Simplification" (formula "4"))
         (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "20"))
         (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "21")))
         (rule "elementOfSingleton" (formula "26") (term "0,0,0,0,1,0,1"))
         (rule "inEqSimp_leqRight" (formula "25"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "12"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "12") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "11"))
         (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,0,0,0,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
         (rule "inEqSimp_homoInEq1" (formula "8"))
         (rule "polySimp_addComm1" (formula "8") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
         (rule "polySimp_mulComm0" (formula "1") (term "1"))
         (rule "polySimp_rightDist" (formula "1") (term "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
         (rule "mul_literals" (formula "1") (term "0,1"))
         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "12"))
         (rule "polySimp_mulLiterals" (formula "12") (term "0"))
         (rule "polySimp_elimOne" (formula "12") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
         (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "8"))
         (rule "polySimp_mulComm0" (formula "8") (term "1"))
         (rule "polySimp_rightDist" (formula "8") (term "1"))
         (rule "mul_literals" (formula "8") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
         (rule "polySimp_elimOne" (formula "8") (term "1,1"))
         (rule "array2seqDef" (formula "9") (term "0,0") (inst "u=u"))
         (rule "narrowSelectArrayType" (formula "9") (term "2,0,0") (ifseqformula "2") (ifseqformula "22"))
         (rule "nonNull" (formula "14") (inst "i=i_1"))
         (rule "greater_literals" (formula "14") (term "0,1"))
         (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "24")))
         (rule "sub_literals" (formula "14") (term "2,1,0"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "narrowSelectArrayType" (formula "14") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "24"))
         (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
         (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
         (rule "array2seqDef" (formula "19") (term "0") (inst "u=u"))
         (rule "array2seqDef" (formula "19") (term "0,1") (inst "u=u"))
         (rule "array2seqDef" (formula "10") (term "1") (inst "u=u"))
         (rule "eqSymm" (formula "10"))
         (rule "narrowSelectArrayType" (formula "10") (term "2,0") (ifseqformula "2") (ifseqformula "22"))
         (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "10"))
         (rule "array2seqDef" (formula "25") (term "1,1,0,0,0,0,0,1") (inst "u=u"))
         (rule "eqSymm" (formula "25") (term "1,0,0,0,0,0,1"))
         (rule "array2seqDef" (formula "12") (term "0,1,0") (inst "u=u"))
         (rule "array2seqDef" (formula "12") (term "1,1,0") (inst "u=u"))
         (rule "array2seqDef" (formula "8") (term "0,0") (inst "u=u"))
         (rule "narrowSelectArrayType" (formula "8") (term "2,0,0") (ifseqformula "2") (ifseqformula "22"))
         (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "10"))
         (rule "array2seqDef" (formula "25") (term "1,1,0,0,0,0,0,1") (inst "u=u"))
         (rule "eqSymm" (formula "25") (term "1,0,0,0,0,0,1"))
         (rule "eqSeqDef" (formula "12") (term "1,0") (inst "iv=iv"))
         (rule "getOfSeqDef" (formula "12") (term "0,1,0,1,1,0"))
         (rule "castDel" (formula "12") (term "1,0,1,0,1,1,0"))
         (rule "castDel" (formula "12") (term "2,0,1,0,1,1,0"))
         (rule "add_zero_right" (formula "12") (term "0,2,1,0,1,0,1,1,0"))
         (rule "eqSymm" (formula "12") (term "1,0,1,1,0"))
         (rule "polySimp_elimSub" (formula "12") (term "1,1,0,1,1,0,1,1,0"))
         (rule "times_zero_2" (formula "12") (term "1,1,1,0,1,1,0,1,1,0"))
         (rule "add_zero_right" (formula "12") (term "1,1,0,1,1,0,1,1,0"))
         (rule "lenOfSeqDef" (formula "12") (term "1,0,1,0"))
         (rule "polySimp_elimSub" (formula "12") (term "1,1,0,1,0"))
         (rule "times_zero_2" (formula "12") (term "1,1,1,0,1,0"))
         (rule "add_zero_right" (formula "12") (term "1,1,0,1,0"))
         (rule "lenOfSeqDef" (formula "12") (term "0,0,1,0"))
         (rule "polySimp_elimSub" (formula "12") (term "1,0,0,1,0"))
         (rule "mul_literals" (formula "12") (term "1,1,0,0,1,0"))
         (rule "add_zero_right" (formula "12") (term "1,0,0,1,0"))
         (rule "lenOfSeqDef" (formula "12") (term "1,1,0,0,1,1,0"))
         (rule "polySimp_elimSub" (formula "12") (term "1,1,1,0,0,1,1,0"))
         (rule "mul_literals" (formula "12") (term "1,1,1,1,0,0,1,1,0"))
         (rule "add_zero_right" (formula "12") (term "1,1,1,0,0,1,1,0"))
         (rule "getOfSeqDef" (formula "12") (term "0,1,0,1,1,0"))
         (rule "castDel" (formula "12") (term "2,0,1,0,1,1,0"))
         (rule "castDel" (formula "12") (term "1,0,1,0,1,1,0"))
         (rule "add_zero_right" (formula "12") (term "0,2,1,0,1,0,1,1,0"))
         (rule "eqSymm" (formula "12") (term "1,0,1,1,0"))
         (rule "polySimp_elimSub" (formula "12") (term "1,1,0,1,1,0,1,1,0"))
         (rule "times_zero_2" (formula "12") (term "1,1,1,0,1,1,0,1,1,0"))
         (rule "add_zero_right" (formula "12") (term "1,1,0,1,1,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "12") (term "0,1,0,1,0"))
         (rule "add_zero_right" (formula "12") (term "0,0,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0,1,0"))
         (rule "add_zero_right" (formula "12") (term "0,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "12") (term "0,1,1,0,0,1,1,0"))
         (rule "add_zero_right" (formula "12") (term "0,0,1,1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,1,0,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,1,0,1,1,0"))
         (rule "eqSymm" (formula "12") (term "1,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,1,1,0,1,1,0"))
         (rule "polySimp_addComm1" (formula "12") (term "0,1,0,1,1,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,1,1,0"))
         (rule "polySimp_addComm1" (formula "12") (term "0,1,0,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,1,0,1,1,0"))
         (rule "eqSymm" (formula "12") (term "1,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,1,1,0,1,1,0"))
         (rule "polySimp_addComm1" (formula "12") (term "0,1,0,1,1,0,1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,1,1,0,1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,1,0,1,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "0,0,1,0,1,0"))
         (rule "polySimp_elimOne" (formula "12") (term "0,0,1,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "12") (term "0,0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "1,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "12") (term "0,1,0,0,1,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "1,0,0,1,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,0,1,0,1,1,0"))
         (rule "eqSymm" (formula "12") (term "1,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "12") (term "0,1,0,1,1,0,1,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,0,1,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,1,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "12") (term "0,0,0,1,0,0,1,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "1,0,0,1,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,0,1,0,1,1,0"))
         (rule "eqSymm" (formula "12") (term "1,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "12") (term "0,1,0,1,1,0,1,1,0"))
         (rule "eqSeqDef2" (formula "10") (inst "iv=iv") (ifseqformula "10"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "true_left" (formula "10"))
         (rule "eqSeqDef2" (formula "18") (inst "iv=iv") (ifseqformula "18"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "true_left" (formula "18"))
         (rule "eqSeqDef" (formula "23") (term "1,0,0,0,0,0,1") (inst "iv=iv"))
         (rule "getOfSeqDef" (formula "23") (term "0,1,0,1,1,0,0,0,0,0,1"))
         (rule "castDel" (formula "23") (term "2,0,1,0,1,1,0,0,0,0,0,1"))
         (rule "castDel" (formula "23") (term "1,0,1,0,1,1,0,0,0,0,0,1"))
         (rule "add_zero_right" (formula "23") (term "0,2,1,0,1,0,1,1,0,0,0,0,0,1"))
         (rule "eqSymm" (formula "23") (term "1,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_elimSub" (formula "23") (term "1,1,0,1,1,0,1,1,0,0,0,0,0,1"))
         (rule "times_zero_2" (formula "23") (term "1,1,1,0,1,1,0,1,1,0,0,0,0,0,1"))
         (rule "add_zero_right" (formula "23") (term "1,1,0,1,1,0,1,1,0,0,0,0,0,1"))
         (rule "lenOfSeqDef" (formula "23") (term "0,0,1,0,0,0,0,0,1"))
         (rule "eqSymm" (formula "23") (term "0,1,0,0,0,0,0,1"))
         (rule "polySimp_elimSub" (formula "23") (term "1,1,0,1,0,0,0,0,0,1"))
         (rule "times_zero_2" (formula "23") (term "1,1,1,0,1,0,0,0,0,0,1"))
         (rule "add_zero_right" (formula "23") (term "1,1,0,1,0,0,0,0,0,1"))
         (rule "lenOfSeqDef" (formula "23") (term "1,1,0,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_elimSub" (formula "23") (term "1,1,1,0,0,1,1,0,0,0,0,0,1"))
         (rule "times_zero_2" (formula "23") (term "1,1,1,1,0,0,1,1,0,0,0,0,0,1"))
         (rule "add_zero_right" (formula "23") (term "1,1,1,0,0,1,1,0,0,0,0,0,1"))
         (rule "getOfSeqDef" (formula "23") (term "0,1,0,1,1,0,0,0,0,0,1"))
         (rule "castDel" (formula "23") (term "1,0,1,0,1,1,0,0,0,0,0,1"))
         (rule "castDel" (formula "23") (term "2,0,1,0,1,1,0,0,0,0,0,1"))
         (rule "add_zero_right" (formula "23") (term "0,2,1,0,1,0,1,1,0,0,0,0,0,1"))
         (rule "eqSymm" (formula "23") (term "1,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_elimSub" (formula "23") (term "1,1,0,1,1,0,1,1,0,0,0,0,0,1"))
         (rule "times_zero_2" (formula "23") (term "1,1,1,0,1,1,0,1,1,0,0,0,0,0,1"))
         (rule "add_zero_right" (formula "23") (term "1,1,0,1,1,0,1,1,0,0,0,0,0,1"))
         (rule "lenOfSeqDef" (formula "23") (term "0,0,1,0,0,0,0,0,1"))
         (rule "eqSymm" (formula "23") (term "0,1,0,0,0,0,0,1"))
         (rule "polySimp_elimSub" (formula "23") (term "1,1,0,1,0,0,0,0,0,1"))
         (rule "times_zero_2" (formula "23") (term "1,1,1,0,1,0,0,0,0,0,1"))
         (rule "add_zero_right" (formula "23") (term "1,1,0,1,0,0,0,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,1,0,0,1,1,0,0,0,0,0,1"))
         (rule "add_zero_right" (formula "23") (term "0,0,1,1,0,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,1,0,0,1,1,0,0,0,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,1,0,1,1,0,0,0,0,0,1"))
         (rule "eqSymm" (formula "23") (term "1,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,1,1,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_addComm1" (formula "23") (term "0,1,0,1,1,0,1,1,0,0,0,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0,1,0,0,0,0,0,1"))
         (rule "add_zero_right" (formula "23") (term "0,0,0,0,1,0,0,0,0,0,1"))
         (rule "eqSymm" (formula "23") (term "0,1,0,0,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,1,0,0,0,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_addComm1" (formula "23") (term "0,1,0,0,1,1,0,0,0,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,1,0,1,1,0,0,0,0,0,1"))
         (rule "eqSymm" (formula "23") (term "1,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,1,1,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_addComm1" (formula "23") (term "0,1,0,1,1,0,1,1,0,0,0,0,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,1,1,0,0,0,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0,1,0,0,0,0,0,1"))
         (rule "add_zero_right" (formula "23") (term "0,0,0,0,1,0,0,0,0,0,1"))
         (rule "eqSymm" (formula "23") (term "0,1,0,0,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,1,0,0,0,0,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,1,0,1,1,0,0,0,0,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,1,1,0,1,1,0,0,0,0,0,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0,1,0,1,0,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,1,0,1,0,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_elimOne" (formula "23") (term "0,0,0,1,0,1,0,0,1,1,0,0,0,0,0,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "1,0,0,1,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0,0,1,0,1,1,0,0,0,0,0,1"))
         (rule "eqSymm" (formula "23") (term "1,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_elimOne" (formula "23") (term "0,1,0,1,1,0,1,1,0,0,0,0,0,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0,0,1,0,0,0,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,0,1,0,0,0,0,0,1"))
         (rule "eqSymm" (formula "23") (term "0,1,0,0,0,0,0,1"))
         (rule "polySimp_elimOne" (formula "23") (term "0,0,1,0,1,0,0,0,0,0,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "1,0,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_elimOne" (formula "23") (term "0,1,0,0,1,1,0,0,0,0,0,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "1,0,0,1,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0,0,1,0,1,1,0,0,0,0,0,1"))
         (rule "eqSymm" (formula "23") (term "1,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_elimOne" (formula "23") (term "0,1,0,1,1,0,1,1,0,0,0,0,0,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0,0,1,0,0,0,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,0,1,0,0,0,0,0,1"))
         (rule "eqSymm" (formula "23") (term "0,1,0,0,0,0,0,1"))
         (rule "polySimp_elimOne" (formula "23") (term "0,0,1,0,1,0,0,0,0,0,1"))
         (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "8"))
         (rule "times_zero_1" (formula "9") (term "0,0"))
         (rule "add_zero_left" (formula "9") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "9"))
         (rule "mul_literals" (formula "9") (term "1"))
         (rule "nnf_imp2or" (formula "14") (term "0"))
         (rule "nnf_imp2or" (formula "12") (term "0"))
         (rule "nnf_notAnd" (formula "14") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
         (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
         (rule "mul_literals" (formula "14") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "12") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
         (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
         (rule "mul_literals" (formula "12") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
         (rule "nnf_imp2or" (formula "12") (term "0,1,1,0"))
         (rule "nnf_imp2or" (formula "24") (term "0,0,0,0,0,1"))
         (rule "nnf_notAnd" (formula "12") (term "0,0,1,1,0"))
         (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0,1,1,0"))
         (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0,1,1,0"))
         (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,1,1,0"))
         (rule "add_literals" (formula "12") (term "0,0,0,1,0,0,1,1,0"))
         (rule "add_zero_left" (formula "12") (term "0,0,1,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,1,1,0"))
         (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0,1,1,0"))
         (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0,1,1,0"))
         (rule "add_zero_right" (formula "12") (term "0,0,0,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,1,1,0"))
         (rule "mul_literals" (formula "12") (term "1,0,0,0,1,1,0"))
         (rule "nnf_notAnd" (formula "24") (term "0,0,0,0,0,0,1"))
         (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,0,0,0,0,1"))
         (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0,0,0,0,0,1"))
         (rule "add_zero_right" (formula "24") (term "0,0,0,0,0,0,0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,0,0,0,0,1"))
         (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0,0,0,1"))
         (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,0,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,0,0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,0,0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0,0,0,0,1"))
         (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0,0,0,0,1"))
         (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0,0,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0,0,0,0,1"))
         (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,0,0,0,0,1"))
         (rule "nnf_imp2or" (formula "24") (term "0,1,1,0,0,0,0,0,1"))
         (rule "nnf_notAnd" (formula "24") (term "0,0,1,1,0,0,0,0,0,1"))
         (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,1,1,0,0,0,0,0,1"))
         (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0,1,1,0,0,0,0,0,1"))
         (rule "add_zero_right" (formula "24") (term "0,0,0,0,0,1,1,0,0,0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,1,1,0,0,0,0,0,1"))
         (rule "mul_literals" (formula "24") (term "1,0,0,0,1,1,0,0,0,0,0,1"))
         (rule "inEqSimp_notGeq" (formula "24") (term "1,0,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,1"))
         (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,1,1,0,0,0,0,0,1"))
         (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,1,1,0,0,0,0,0,1"))
         (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,1,1,0,0,0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,1,1,0,0,0,0,0,1"))
         (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,1,1,0,0,0,0,0,1"))
         (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "13") (ifseqformula "4"))
         (rule "andLeft" (formula "13"))
         (rule "andLeft" (formula "13"))
         (rule "notLeft" (formula "15"))
         (rule "notLeft" (formula "14"))
         (rule "andLeft" (formula "13"))
         (rule "andLeft" (formula "13"))
         (rule "notLeft" (formula "15"))
         (rule "andLeft" (formula "13"))
         (rule "notLeft" (formula "15"))
         (rule "andLeft" (formula "13"))
         (rule "andLeft" (formula "13"))
         (rule "andLeft" (formula "13"))
         (rule "notLeft" (formula "13"))
         (rule "nonNull" (formula "16") (inst "i=i_1"))
         (rule "greater_literals" (formula "16") (term "0,1"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "sub_literals" (formula "16") (term "2,1,0,1"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "andLeft" (formula "16"))
         (rule "notLeft" (formula "16"))
         (rule "narrowSelectArrayType" (formula "16") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "22"))
         (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
         (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "15") (inst "i=i_1"))
         (rule "greater_literals" (formula "15") (term "0,1"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "sub_literals" (formula "15") (term "2,1,0,1"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "andLeft" (formula "15"))
         (rule "notLeft" (formula "15"))
         (rule "narrowSelectArrayType" (formula "15") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "22"))
         (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "14") (inst "i=i_1"))
         (rule "sub_literals" (formula "14") (term "2,1,0,1,1"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "greater_literals" (formula "14") (term "0,1"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "andLeft" (formula "14"))
         (rule "notLeft" (formula "14"))
         (rule "narrowSelectArrayType" (formula "14") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "22"))
         (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "13") (inst "i=i_1"))
         (rule "greater_literals" (formula "13") (term "0,1"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "sub_literals" (formula "13") (term "2,1,0,1"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "andLeft" (formula "13"))
         (rule "notLeft" (formula "13"))
         (rule "narrowSelectArrayType" (formula "13") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "22"))
         (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
         (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
         (rule "nnf_imp2or" (formula "16") (term "0"))
         (rule "nnf_imp2or" (formula "15") (term "0"))
         (rule "nnf_imp2or" (formula "14") (term "0"))
         (rule "nnf_imp2or" (formula "13") (term "0"))
         (rule "nnf_notAnd" (formula "16") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
         (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
         (rule "mul_literals" (formula "16") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "15") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
         (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
         (rule "mul_literals" (formula "15") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "14") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
         (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
         (rule "mul_literals" (formula "14") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "13") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
         (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
         (rule "mul_literals" (formula "13") (term "1,0,0,0"))
         (rule "commute_or_2" (formula "17") (term "0"))
         (rule "commute_or_2" (formula "12") (term "0,1,1,0"))
         (rule "arrayLengthIsAShort" (formula "1") (term "0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "arrayLengthNotNegative" (formula "1") (term "0"))
         (rule "arrayLengthIsAShort" (formula "9") (term "1,1"))
         (builtin "One Step Simplification" (formula "9"))
         (rule "true_left" (formula "9"))
         (rule "arrayLengthNotNegative" (formula "9") (term "1,1"))
         (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "11"))
         (rule "leq_literals" (formula "9") (term "0"))
         (builtin "One Step Simplification" (formula "9"))
         (rule "true_left" (formula "9"))
         (rule "ifthenelse_to_or_left" (formula "13") (term "0,1,0"))
         (rule "eqSymm" (formula "13") (term "1,0,0,1,0"))
         (rule "eqSymm" (formula "13") (term "1,1,0,1,0"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "inEqSimp_notGeq" (formula "13") (term "0,1,1,0,1,0"))
         (rule "mul_literals" (formula "13") (term "1,0,0,0,1,1,0,1,0"))
         (rule "add_literals" (formula "13") (term "0,0,0,1,1,0,1,0"))
         (rule "add_zero_left" (formula "13") (term "0,0,1,1,0,1,0"))
         (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0,1,0"))
         (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0,1,0"))
         (rule "add_literals" (formula "13") (term "0,0,0,0,0,1,0"))
         (rule "add_zero_left" (formula "13") (term "0,0,0,0,1,0"))
         (rule "commute_or_2" (formula "17") (term "0"))
         (rule "commute_or_2" (formula "16") (term "0"))
         (rule "less_than_comparison_simple" (formula "37") (term "1"))
         (builtin "One Step Simplification" (formula "37"))
         (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,1,0"))
         (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,1,0"))
         (rule "add_zero_right" (formula "37") (term "0,0,0,0,1,0"))
         (rule "blockEmpty" (formula "37") (term "1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,1,0"))
         (rule "mul_literals" (formula "37") (term "1,0,0,1,0"))
         (rule "inEqSimp_contradInEq1" (formula "37") (term "0,0,1,0") (ifseqformula "12"))
         (rule "qeq_literals" (formula "37") (term "0,0,0,1,0"))
         (builtin "One Step Simplification" (formula "37"))
         (rule "commute_or_2" (formula "15") (term "0"))
         (rule "commute_or_2" (formula "14") (term "0"))
         (rule "commute_or" (formula "18") (term "0,0"))
         (rule "commute_or" (formula "17") (term "0,0"))
         (rule "commute_or" (formula "16") (term "0,0"))
         (rule "commute_or" (formula "15") (term "0,0"))
         (rule "commute_or" (formula "14") (term "0,0"))
         (rule "commute_or" (formula "13") (term "1,0,1,0"))
         (rule "commute_or" (formula "13") (term "0,0,1,1,0"))
         (rule "ifthenelse_to_or_left" (formula "13") (term "1,0,0,1,0"))
         (rule "eqSymm" (formula "13") (term "1,0,1,0,0,1,0"))
         (rule "eqSymm" (formula "13") (term "1,1,1,0,0,1,0"))
         (rule "inEqSimp_notGeq" (formula "13") (term "0,0,1,0,0,1,0"))
         (rule "mul_literals" (formula "13") (term "1,0,0,0,0,1,0,0,1,0"))
         (rule "add_literals" (formula "13") (term "0,0,0,0,1,0,0,1,0"))
         (rule "add_zero_left" (formula "13") (term "0,0,0,1,0,0,1,0"))
         (rule "cnf_rightDist" (formula "13") (term "0,0,1,0"))
         (rule "inEqSimp_or_subsumption5" (formula "13") (term "1,0,0,1,0"))
         (rule "greater_literals" (formula "13") (term "0,1,0,1,0,0,1,0"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "shift_paren_or" (formula "13") (term "0,0,0,1,0"))
         (rule "commute_or" (formula "13") (term "0,0,0,0,1,0"))
         (rule "ifthenelse_to_or_left" (formula "13") (term "0,0,0,1,1,0"))
         (rule "eqSymm" (formula "13") (term "1,0,0,0,0,1,1,0"))
         (rule "eqSymm" (formula "13") (term "1,1,0,0,0,1,1,0"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "nnf_notAnd" (formula "13") (term "0,0,0,0,0,1,1,0"))
         (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0,0,0,0,1,1,0"))
         (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
         (rule "add_zero_right" (formula "13") (term "0,0,0,0,0,0,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,0,0,0,1,1,0"))
         (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0,0,1,1,0"))
         (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0,0,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
         (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
         (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0,0,0,0,1,1,0"))
         (rule "add_literals" (formula "13") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
         (rule "add_zero_left" (formula "13") (term "0,0,1,0,0,0,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,0,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,0,0,1,1,0"))
         (rule "nnf_notAnd" (formula "13") (term "0,1,1,0,0,0,1,1,0"))
         (rule "inEqSimp_notGeq" (formula "13") (term "1,0,1,1,0,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
         (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
         (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
         (rule "add_literals" (formula "13") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
         (rule "add_zero_left" (formula "13") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,1,1,0,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,1,1,0,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,0,1,1,0,0,0,1,1,0"))
         (rule "inEqSimp_notGeq" (formula "13") (term "0,0,1,1,0,0,0,1,1,0"))
         (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
         (rule "add_literals" (formula "13") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,1,1,0,0,0,1,1,0"))
         (rule "mul_literals" (formula "13") (term "1,0,0,1,1,0,0,0,1,1,0"))
         (rule "commute_or" (formula "13") (term "0,0,1,1,0"))
         (rule "commute_or_2" (formula "13") (term "0,1,1,0"))
         (rule "commute_or_2" (formula "13") (term "0,1,0,1,1,0"))
         (rule "commute_or" (formula "13") (term "1,1,0,1,1,0"))
         (rule "commute_or" (formula "13") (term "0,0,1,0,1,1,0"))
         (rule "commute_or_2" (formula "13") (term "0,1,1,0,1,1,0"))
         (rule "commute_or" (formula "13") (term "0,0,1,1,0,1,1,0"))
         (rule "cnf_rightDist" (formula "13") (term "1,1,0,1,1,0"))
         (rule "commute_or_2" (formula "13") (term "0,1,1,0,1,1,0"))
         (rule "inEqSimp_or_tautInEq1" (formula "13") (term "0,0,1,1,0,1,1,0"))
         (rule "add_zero_right" (formula "13") (term "1,1,0,0,1,1,0,1,1,0"))
         (rule "qeq_literals" (formula "13") (term "1,0,0,1,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "commute_or" (formula "13") (term "1,1,0,1,1,0"))
         (rule "cnf_rightDist" (formula "13") (term "0,1,1,0"))
         (rule "commute_or_2" (formula "13") (term "0,0,1,1,0"))
         (rule "shift_paren_or" (formula "13") (term "1,0,1,1,0"))
         (rule "commute_or_2" (formula "13") (term "0,1,0,1,1,0"))
         (rule "shift_paren_or" (formula "13") (term "0,0,0,1,1,0"))
         (rule "commute_or_2" (formula "13") (term "0,0,1,0,1,1,0"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "shift_paren_or" (formula "13") (term "0,0,0,0,1,1,0"))
         (rule "commute_or" (formula "13") (term "0,0,0,0,0,1,1,0"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "ifSplit" (formula "37"))
         (branch "if x_1 true"
            (builtin "One Step Simplification" (formula "38"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch "if x_1 false"
            (builtin "One Step Simplification" (formula "38"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "variableDeclarationAssign" (formula "37") (term "1"))
            (rule "variableDeclaration" (formula "37") (term "1") (newnames "x_arr"))
            (rule "all_pull_out1" (formula "13") (term "1,0"))
            (rule "shift_paren_and" (formula "13") (term "0,1,0"))
            (builtin "Use Operation Contract" (formula "37") (newnames "heapBefore_copyOf,result_1,exc_2") (contract "verif.utils.MessageTools[verif.utils.MessageTools::copyOf([B)].JML normal_behavior operation contract.0#verif.utils.MessageTools[verif.utils.MessageTools::copyOf([B)].JML normal_behavior operation contract.1"))
            (branch "Post (copyOf)"
               (builtin "One Step Simplification" (formula "38"))
               (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "33")) (ifInst ""  (formula "33")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "1,1,0") (ifseqformula "20"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "0,0,0,0,1") (ifseqformula "20"))
               (rule "andLeft" (formula "23"))
               (rule "andLeft" (formula "24"))
               (rule "andLeft" (formula "23"))
               (rule "andLeft" (formula "24"))
               (rule "andLeft" (formula "24"))
               (rule "notLeft" (formula "25"))
               (rule "notLeft" (formula "24"))
               (rule "orRight" (formula "26"))
               (rule "replace_known_right" (formula "23") (term "1,1") (ifseqformula "27"))
               (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "28")) (ifInst ""  (formula "26")))
               (rule "closeFalse" (formula "23"))
            )
            (branch "Exceptional Post (copyOf)"
               (builtin "One Step Simplification" (formula "38"))
               (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "33")) (ifInst ""  (formula "33")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "1,0") (ifseqformula "20"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "0,0,0,0,1") (ifseqformula "20"))
               (rule "andLeft" (formula "23"))
               (rule "andLeft" (formula "24"))
               (rule "andLeft" (formula "23"))
               (rule "andLeft" (formula "25"))
               (rule "notLeft" (formula "23"))
               (rule "close" (formula "27") (ifseqformula "26"))
            )
            (branch "Pre (copyOf)"
               (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "32")))
               (rule "wellFormedAnonEQ" (formula "37") (term "0") (ifseqformula "20"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "1") (ifseqformula "20"))
               (rule "replace_known_left" (formula "37") (term "1,0") (ifseqformula "19"))
               (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "3")) (ifInst ""  (formula "33")) (ifInst ""  (formula "22")))
               (rule "closeTrue" (formula "37"))
            )
         )
      )
   )
   (branch "Case 2"
      (builtin "One Step Simplification" (formula "1"))
      (rule "nonNull" (formula "16") (inst "i=i_1") (userinteraction))
      (builtin "One Step Simplification" (formula "18"))
      (builtin "One Step Simplification" (formula "14"))
      (builtin "One Step Simplification" (formula "7"))
      (builtin "One Step Simplification" (formula "21"))
      (rule "true_left" (formula "7"))
      (rule "greater_literals" (formula "15") (term "0,1"))
      (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "1")))
      (rule "closeFalse" (formula "15"))
   )
)
(branch "Exceptional Post (first)"
   (builtin "One Step Simplification" (formula "17"))
   (builtin "One Step Simplification" (formula "13"))
   (builtin "One Step Simplification" (formula "6"))
   (builtin "One Step Simplification" (formula "20"))
   (rule "true_left" (formula "6"))
   (rule "andLeft" (formula "16"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "1,0") (ifseqformula "16"))
   (rule "andLeft" (formula "17"))
   (rule "andLeft" (formula "17"))
   (rule "andLeft" (formula "19"))
   (rule "notLeft" (formula "17"))
   (rule "close" (formula "20") (ifseqformula "19"))
)
(branch "Pre (first)"
   (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "16")) (ifInst ""  (formula "1")) (ifInst ""  (formula "16")))
   (rule "translateJavaAddInt" (formula "18") (term "1,0,0") (userinteraction))
   (builtin "Evaluate Query" (formula "18") (term "1,1,0,0") (newnames "b,callee,queryResult,res_byteArrayToInt"))
   (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,bal)_2_0" (formula "19") (term "1,1,0,0") (userinteraction))
   (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,bal)_2_0" (formula "19") (term "0,1,0") (userinteraction))
   (rule "variableDeclaration" (formula "1") (term "1,0") (newnames "queryResult") (userinteraction))
   (rule "notLeft" (formula "1") (userinteraction))
   (builtin "Use Operation Contract" (formula "16") (newnames "heapBefore_byteArrayToInt,result_2,exc_3") (contract "verif.utils.MessageTools[verif.utils.MessageTools::byteArrayToInt([B)].JML normal_behavior operation contract.0"))
   (branch "Post (byteArrayToInt)"
      (builtin "One Step Simplification" (formula "16"))
      (builtin "One Step Simplification" (formula "13"))
      (builtin "One Step Simplification" (formula "6"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "true_left" (formula "6"))
      (rule "andLeft" (formula "15"))
      (rule "andLeft" (formula "16"))
      (rule "eqSymm" (formula "9"))
      (rule "eqSymm" (formula "12") (term "1,0"))
      (rule "eqSymm" (formula "17") (term "0,0,1"))
      (rule "eqSymm" (formula "16"))
      (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "18"))
      (builtin "One Step Simplification" (formula "5"))
      (rule "replace_known_left" (formula "20") (term "1") (ifseqformula "5"))
      (builtin "One Step Simplification" (formula "20"))
      (rule "inEqSimp_ltToLeq" (formula "11"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "11") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "10"))
      (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
      (rule "inEqSimp_homoInEq1" (formula "7"))
      (rule "polySimp_addComm1" (formula "7") (term "0"))
      (rule "assignment" (formula "17") (term "1"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "16"))
      (rule "polySimp_addComm1" (formula "7") (term "0"))
      (rule "applyEq" (formula "8") (term "0") (ifseqformula "16"))
      (rule "inEqSimp_sepNegMonomial0" (formula "11"))
      (rule "polySimp_mulLiterals" (formula "11") (term "0"))
      (rule "polySimp_elimOne" (formula "11") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
      (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "7"))
      (rule "polySimp_mulLiterals" (formula "7") (term "0"))
      (rule "polySimp_elimOne" (formula "7") (term "0"))
      (rule "nonNull" (formula "14") (inst "i=i_1"))
      (rule "sub_literals" (formula "14") (term "2,1,0,1,1"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "greater_literals" (formula "14") (term "0,1"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "andLeft" (formula "14"))
      (rule "notLeft" (formula "14"))
      (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "17"))
      (builtin "One Step Simplification" (formula "4"))
      (rule "narrowSelectArrayType" (formula "14") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "17"))
      (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
      (rule "array2seqDef" (formula "9") (term "1") (inst "u=u"))
      (rule "eqSymm" (formula "9"))
      (rule "narrowSelectArrayType" (formula "9") (term "2,0") (ifseqformula "1") (ifseqformula "19"))
      (rule "array2seqDef" (formula "12") (term "0,1,0") (inst "u=u"))
      (rule "array2seqDef" (formula "12") (term "1,1,0") (inst "u=u"))
      (rule "array2seqDef" (formula "16") (term "0,0") (inst "u=u"))
      (rule "narrowSelectArrayType" (formula "16") (term "2,0,0") (ifseqformula "1") (ifseqformula "19"))
      (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "9"))
      (rule "eqSeqDef" (formula "12") (term "1,0") (inst "iv=iv"))
      (rule "lenOfSeqDef" (formula "12") (term "0,0,1,0"))
      (rule "eqSymm" (formula "12") (term "0,1,0"))
      (rule "polySimp_elimSub" (formula "12") (term "1,1,0,1,0"))
      (rule "mul_literals" (formula "12") (term "1,1,1,0,1,0"))
      (rule "add_zero_right" (formula "12") (term "1,1,0,1,0"))
      (rule "lenOfSeqDef" (formula "12") (term "1,1,0,0,1,1,0"))
      (rule "polySimp_elimSub" (formula "12") (term "1,1,1,0,0,1,1,0"))
      (rule "times_zero_2" (formula "12") (term "1,1,1,1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "12") (term "1,1,1,0,0,1,1,0"))
      (rule "getOfSeqDef" (formula "12") (term "0,1,0,1,1,0"))
      (rule "castDel" (formula "12") (term "1,0,1,0,1,1,0"))
      (rule "castDel" (formula "12") (term "2,0,1,0,1,1,0"))
      (rule "add_zero_right" (formula "12") (term "0,2,1,0,1,0,1,1,0"))
      (rule "eqSymm" (formula "12") (term "1,0,1,1,0"))
      (rule "polySimp_elimSub" (formula "12") (term "1,1,0,1,1,0,1,1,0"))
      (rule "mul_literals" (formula "12") (term "1,1,1,0,1,1,0,1,1,0"))
      (rule "add_zero_right" (formula "12") (term "1,1,0,1,1,0,1,1,0"))
      (rule "lenOfSeqDef" (formula "12") (term "0,0,1,0"))
      (rule "eqSymm" (formula "12") (term "0,1,0"))
      (rule "polySimp_elimSub" (formula "12") (term "1,1,0,1,0"))
      (rule "mul_literals" (formula "12") (term "1,1,1,0,1,0"))
      (rule "add_zero_right" (formula "12") (term "1,1,0,1,0"))
      (rule "getOfSeqDef" (formula "12") (term "0,1,0,1,1,0"))
      (rule "castDel" (formula "12") (term "1,0,1,0,1,1,0"))
      (rule "castDel" (formula "12") (term "2,0,1,0,1,1,0"))
      (rule "add_zero_right" (formula "12") (term "0,2,1,0,1,0,1,1,0"))
      (rule "eqSymm" (formula "12") (term "1,0,1,1,0"))
      (rule "polySimp_elimSub" (formula "12") (term "1,1,0,1,1,0,1,1,0"))
      (rule "times_zero_2" (formula "12") (term "1,1,1,0,1,1,0,1,1,0"))
      (rule "add_zero_right" (formula "12") (term "1,1,0,1,1,0,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "12") (term "0,1,1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "12") (term "0,0,1,1,0,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,1,0,0,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "12") (term "0,1,0,1,0"))
      (rule "add_zero_right" (formula "12") (term "0,0,1,0,1,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0,1,0"))
      (rule "add_zero_right" (formula "12") (term "0,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,1,0,1,1,0"))
      (rule "eqSymm" (formula "12") (term "1,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,1,1,0,1,1,0"))
      (rule "polySimp_addComm1" (formula "12") (term "0,1,0,1,1,0,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,1,1,0"))
      (rule "polySimp_addComm1" (formula "12") (term "0,1,0,0,1,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,1,0,1,1,0"))
      (rule "eqSymm" (formula "12") (term "1,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,1,1,0,1,1,0"))
      (rule "polySimp_addComm1" (formula "12") (term "0,1,0,1,1,0,1,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,1,1,0,1,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,1,0,1,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,1,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "0,0,1,0,1,0"))
      (rule "polySimp_elimOne" (formula "12") (term "0,0,1,0,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "12") (term "0,0,0,0,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,0,1,0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,1,0,1,0,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "12") (term "0,0,0,1,0,1,0,0,1,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "1,0,0,1,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,0,1,0,1,1,0"))
      (rule "eqSymm" (formula "12") (term "1,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "12") (term "0,1,0,1,1,0,1,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "12") (term "0,1,0,0,1,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "1,0,0,1,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,0,1,0,1,1,0"))
      (rule "eqSymm" (formula "12") (term "1,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "12") (term "0,1,0,1,1,0,1,1,0"))
      (rule "eqSeqDef2" (formula "9") (inst "iv=iv") (ifseqformula "9"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "true_left" (formula "9"))
      (rule "nnf_imp2or" (formula "13") (term "0"))
      (rule "nnf_imp2or" (formula "11") (term "0"))
      (rule "nnf_notAnd" (formula "13") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
      (rule "mul_literals" (formula "13") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "11") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
      (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
      (rule "mul_literals" (formula "11") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
      (rule "nnf_imp2or" (formula "11") (term "0,1,1,0"))
      (rule "nnf_notAnd" (formula "11") (term "0,0,1,1,0"))
      (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0,1,1,0"))
      (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0,1,1,0"))
      (rule "add_zero_right" (formula "11") (term "0,0,0,0,0,1,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,1,1,0"))
      (rule "mul_literals" (formula "11") (term "1,0,0,0,1,1,0"))
      (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0,1,1,0"))
      (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,1,1,0"))
      (rule "add_literals" (formula "11") (term "0,0,0,1,0,0,1,1,0"))
      (rule "add_zero_left" (formula "11") (term "0,0,1,0,0,1,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,1,1,0"))
      (rule "commute_and" (formula "20"))
      (rule "methodCallEmpty" (formula "17") (term "1"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "commute_or_2" (formula "13") (term "0"))
      (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "12") (ifseqformula "3"))
      (rule "andLeft" (formula "12"))
      (rule "notLeft" (formula "13"))
      (rule "andLeft" (formula "12"))
      (rule "notLeft" (formula "13"))
      (rule "andLeft" (formula "12"))
      (rule "andLeft" (formula "12"))
      (rule "notLeft" (formula "14"))
      (rule "notLeft" (formula "13"))
      (rule "andLeft" (formula "12"))
      (rule "andLeft" (formula "12"))
      (rule "andLeft" (formula "12"))
      (rule "andLeft" (formula "12"))
      (rule "notLeft" (formula "12"))
      (rule "nonNull" (formula "15") (inst "i=i_1"))
      (rule "greater_literals" (formula "15") (term "0,1"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "sub_literals" (formula "15") (term "2,1,0,1"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "andLeft" (formula "15"))
      (rule "notLeft" (formula "15"))
      (rule "narrowSelectArrayType" (formula "15") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "19"))
      (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
      (rule "nonNull" (formula "14") (inst "i=i_1"))
      (rule "sub_literals" (formula "14") (term "2,1,0,1,1"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "greater_literals" (formula "14") (term "0,1"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "andLeft" (formula "14"))
      (rule "notLeft" (formula "14"))
      (rule "narrowSelectArrayType" (formula "14") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "19"))
      (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
      (rule "nonNull" (formula "13") (inst "i=i_1"))
      (rule "sub_literals" (formula "13") (term "2,1,0,1,1"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "greater_literals" (formula "13") (term "0,1"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "andLeft" (formula "13"))
      (rule "notLeft" (formula "13"))
      (rule "narrowSelectArrayType" (formula "13") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "19"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
      (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
      (rule "nonNull" (formula "12") (inst "i=i_1"))
      (rule "sub_literals" (formula "12") (term "2,1,0,1,1"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "greater_literals" (formula "12") (term "0,1"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "andLeft" (formula "12"))
      (rule "notLeft" (formula "12"))
      (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "19"))
      (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
      (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
      (rule "nnf_imp2or" (formula "15") (term "0"))
      (rule "nnf_imp2or" (formula "14") (term "0"))
      (rule "nnf_imp2or" (formula "13") (term "0"))
      (rule "nnf_imp2or" (formula "12") (term "0"))
      (rule "nnf_notAnd" (formula "15") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
      (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
      (rule "mul_literals" (formula "15") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "14") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
      (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
      (rule "mul_literals" (formula "14") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "13") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
      (rule "mul_literals" (formula "13") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "12") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
      (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
      (rule "mul_literals" (formula "12") (term "1,0,0,0"))
      (rule "commute_or" (formula "16") (term "0,0"))
      (rule "commute_or_2" (formula "11") (term "0,1,1,0"))
      (rule "ifthenelse_to_or_left" (formula "11") (term "0,1,0"))
      (rule "eqSymm" (formula "11") (term "1,1,0,1,0"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "eqSymm" (formula "11") (term "1,0,0,1,0"))
      (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0,1,0"))
      (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0,1,0"))
      (rule "add_literals" (formula "11") (term "0,0,0,0,0,1,0"))
      (rule "add_zero_left" (formula "11") (term "0,0,0,0,1,0"))
      (rule "inEqSimp_notGeq" (formula "11") (term "0,1,1,0,1,0"))
      (rule "mul_literals" (formula "11") (term "1,0,0,0,1,1,0,1,0"))
      (rule "add_literals" (formula "11") (term "0,0,0,1,1,0,1,0"))
      (rule "add_zero_left" (formula "11") (term "0,0,1,1,0,1,0"))
      (rule "commute_or_2" (formula "15") (term "0"))
      (rule "commute_or_2" (formula "14") (term "0"))
      (rule "emptyModality" (formula "29") (term "1"))
      (builtin "One Step Simplification" (formula "29"))
      (rule "notRight" (formula "29"))
      (rule "eqSymm" (formula "1"))
      (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "1"))
      (rule "replace_known_left" (formula "32") (term "1") (ifseqformula "8"))
      (builtin "One Step Simplification" (formula "32"))
      (rule "inEqSimp_geqRight" (formula "32"))
      (rule "times_zero_1" (formula "1") (term "1,0,0"))
      (rule "add_literals" (formula "1") (term "0,0"))
      (rule "applyEq" (formula "10") (term "0") (ifseqformula "2"))
      (rule "applyEq" (formula "20") (term "1") (ifseqformula "2"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1"))
      (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "10"))
      (rule "qeq_literals" (formula "1") (term "0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch "Exceptional Post (byteArrayToInt)"
      (builtin "One Step Simplification" (formula "16"))
      (builtin "One Step Simplification" (formula "13"))
      (builtin "One Step Simplification" (formula "6"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "true_left" (formula "6"))
      (rule "andLeft" (formula "15"))
      (rule "andLeft" (formula "16"))
      (rule "andLeft" (formula "15"))
      (rule "notLeft" (formula "15"))
      (rule "close" (formula "18") (ifseqformula "17"))
   )
   (branch "Pre (byteArrayToInt)"
      (builtin "One Step Simplification" (formula "13"))
      (builtin "One Step Simplification" (formula "6"))
      (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "17")) (ifInst ""  (formula "1")) (ifInst ""  (formula "17")))
      (rule "true_left" (formula "6"))
      (rule "eqSymm" (formula "9"))
      (rule "eqSymm" (formula "12") (term "1,0"))
      (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "16"))
      (builtin "One Step Simplification" (formula "5"))
      (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "5"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "replace_known_left" (formula "18") (term "1") (ifseqformula "5"))
      (builtin "One Step Simplification" (formula "18"))
      (rule "inEqSimp_geqRight" (formula "15"))
      (rule "mul_literals" (formula "1") (term "1,0,0"))
      (rule "add_literals" (formula "1") (term "0,0"))
      (rule "inEqSimp_ltToLeq" (formula "12"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "12") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "11"))
      (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
      (rule "inEqSimp_homoInEq1" (formula "8"))
      (rule "polySimp_addComm1" (formula "8") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1"))
      (rule "inEqSimp_sepNegMonomial0" (formula "12"))
      (rule "polySimp_mulLiterals" (formula "12") (term "0"))
      (rule "polySimp_elimOne" (formula "12") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "8"))
      (rule "polySimp_mulComm0" (formula "8") (term "1"))
      (rule "polySimp_rightDist" (formula "8") (term "1"))
      (rule "mul_literals" (formula "8") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
      (rule "polySimp_elimOne" (formula "8") (term "1,1"))
      (rule "array2seqDef" (formula "9") (term "0,0") (inst "u=u"))
      (rule "narrowSelectArrayType" (formula "9") (term "2,0,0") (ifseqformula "2") (ifseqformula "16"))
      (rule "nonNull" (formula "15") (inst "i=i_1"))
      (rule "greater_literals" (formula "15") (term "0,1"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "sub_literals" (formula "15") (term "2,1,0,1"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "andLeft" (formula "15"))
      (rule "notLeft" (formula "15"))
      (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "16"))
      (builtin "One Step Simplification" (formula "5"))
      (rule "narrowSelectArrayType" (formula "15") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "16"))
      (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
      (rule "array2seqDef" (formula "10") (term "1") (inst "u=u"))
      (rule "eqSymm" (formula "10"))
      (rule "narrowSelectArrayType" (formula "10") (term "2,0") (ifseqformula "2") (ifseqformula "17"))
      (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "10"))
      (rule "array2seqDef" (formula "13") (term "1,1,0") (inst "u=u"))
      (rule "eqSymm" (formula "13") (term "1,0"))
      (rule "array2seqDef" (formula "8") (term "0,0") (inst "u=u"))
      (rule "narrowSelectArrayType" (formula "8") (term "2,0,0") (ifseqformula "2") (ifseqformula "17"))
      (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "10"))
      (rule "array2seqDef" (formula "13") (term "1,1,0") (inst "u=u"))
      (rule "eqSymm" (formula "13") (term "1,0"))
      (rule "eqSeqDef2" (formula "10") (inst "iv=iv") (ifseqformula "10"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "true_left" (formula "10"))
      (rule "eqSeqDef" (formula "12") (term "1,0") (inst "iv=iv"))
      (rule "lenOfSeqDef" (formula "12") (term "0,0,1,0"))
      (rule "eqSymm" (formula "12") (term "0,1,0"))
      (rule "polySimp_elimSub" (formula "12") (term "1,1,0,1,0"))
      (rule "times_zero_2" (formula "12") (term "1,1,1,0,1,0"))
      (rule "add_zero_right" (formula "12") (term "1,1,0,1,0"))
      (rule "lenOfSeqDef" (formula "12") (term "1,1,0,0,1,1,0"))
      (rule "polySimp_elimSub" (formula "12") (term "1,1,1,0,0,1,1,0"))
      (rule "times_zero_2" (formula "12") (term "1,1,1,1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "12") (term "1,1,1,0,0,1,1,0"))
      (rule "getOfSeqDef" (formula "12") (term "1,1,0,1,1,0"))
      (rule "castDel" (formula "12") (term "2,1,1,0,1,1,0"))
      (rule "castDel" (formula "12") (term "1,1,1,0,1,1,0"))
      (rule "add_zero_right" (formula "12") (term "0,2,1,1,1,0,1,1,0"))
      (rule "polySimp_elimSub" (formula "12") (term "1,1,0,1,1,0,1,1,0"))
      (rule "mul_literals" (formula "12") (term "1,1,1,0,1,1,0,1,1,0"))
      (rule "add_zero_right" (formula "12") (term "1,1,0,1,1,0,1,1,0"))
      (rule "getOfSeqDef" (formula "12") (term "0,1,0,1,1,0"))
      (rule "castDel" (formula "12") (term "2,0,1,0,1,1,0"))
      (rule "castDel" (formula "12") (term "1,0,1,0,1,1,0"))
      (rule "add_zero_right" (formula "12") (term "0,2,1,0,1,0,1,1,0"))
      (rule "polySimp_elimSub" (formula "12") (term "1,1,0,0,1,0,1,1,0"))
      (rule "times_zero_2" (formula "12") (term "1,1,1,0,0,1,0,1,1,0"))
      (rule "add_zero_right" (formula "12") (term "1,1,0,0,1,0,1,1,0"))
      (rule "lenOfSeqDef" (formula "12") (term "0,0,1,0"))
      (rule "eqSymm" (formula "12") (term "0,1,0"))
      (rule "polySimp_elimSub" (formula "12") (term "1,1,0,1,0"))
      (rule "mul_literals" (formula "12") (term "1,1,1,0,1,0"))
      (rule "add_zero_right" (formula "12") (term "1,1,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "12") (term "0,1,1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "12") (term "0,0,1,1,0,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,1,0,0,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,1,1,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,1,1,0,1,1,0"))
      (rule "polySimp_addComm1" (formula "12") (term "0,1,0,1,1,0,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,1,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,1,0,1,1,0"))
      (rule "polySimp_addComm1" (formula "12") (term "0,1,0,0,1,0,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "12") (term "0,1,0,1,0"))
      (rule "add_zero_right" (formula "12") (term "0,0,1,0,1,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0,1,0"))
      (rule "add_zero_right" (formula "12") (term "0,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,1,1,0"))
      (rule "polySimp_addComm1" (formula "12") (term "0,1,0,0,1,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,1,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,1,1,0,1,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,1,0,1,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "1,0,1,1,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,1,1,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "12") (term "0,1,0,1,1,0,1,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "1,0,0,1,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,0,1,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "12") (term "0,1,0,0,1,0,1,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,1,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "0,0,1,0,1,0"))
      (rule "polySimp_elimOne" (formula "12") (term "0,0,1,0,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "12") (term "0,0,0,0,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "12") (term "0,1,0,0,1,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,1,0,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "12") (term "0,0,0,1,0,0,1,1,0"))
      (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "8"))
      (rule "times_zero_1" (formula "9") (term "0,0"))
      (rule "add_zero_left" (formula "9") (term "0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "9"))
      (rule "mul_literals" (formula "9") (term "1"))
      (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "1"))
      (rule "qeq_literals" (formula "9") (term "0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "closeFalse" (formula "9"))
   )
)
)

}
