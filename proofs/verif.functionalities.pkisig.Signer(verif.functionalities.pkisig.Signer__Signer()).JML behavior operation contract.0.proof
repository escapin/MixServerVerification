\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Jul 13 22:20:08 CEST 2017
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=\\#begexpand_inByte\\#end,\\#begexpand_inChar\\#end,\\#begexpand_inShort\\#end,\\#begexpand_inInt\\#end,\\#begexpand_inLong\\#end
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=5000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Thu Jul 13 22:20:08 CEST 2017
name=verif.functionalities.pkisig.Signer[verif.functionalities.pkisig.Signer\\:\\:Signer()].JML behavior operation contract.0
contract=verif.functionalities.pkisig.Signer[verif.functionalities.pkisig.Signer\\:\\:Signer()].JML behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mihai" ) (keyVersion "0814267c8a184b1e7da1309b7a9875095ca72975"))

(autoModeTime "2173")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "self,exc,heapAtPre,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "eqSymm" (formula "3") (term "1,0,0,1,0,1"))
(rule "assignment" (formula "3") (term "1"))
(builtin "One Step Simplification" (formula "3"))
(rule "variableDeclarationAssign" (formula "3") (term "1"))
(rule "variableDeclaration" (formula "3") (term "1"))
(rule "elementOfUnion" (formula "3") (term "0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "3") (term "1,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "3") (term "0,0,0,0,0,1,0,1"))
(rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "3") (term "1") (inst "#v0=s"))
(rule "variableDeclaration" (formula "3") (term "1") (newnames "s"))
(rule "methodBodyExpand" (formula "3") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
(builtin "One Step Simplification" (formula "3"))
(rule "variableDeclaration" (formula "3") (term "1") (newnames "__NEW__"))
(rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "3") (term "1") (inst "#v0=s_1"))
(rule "variableDeclaration" (formula "3") (term "1") (newnames "s_1"))
(rule "allocateInstance" (formula "3"))
(builtin "One Step Simplification" (formula "4"))
(builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "notLeft" (formula "1"))
(rule "blockEmpty" (formula "6") (term "1"))
(rule "assignment" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
(builtin "One Step Simplification" (formula "6"))
(rule "assignment_write_attribute_this" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "methodCallWithinClass" (formula "6") (term "1"))
(rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
(builtin "One Step Simplification" (formula "6"))
(rule "methodCallSuper" (formula "6") (term "1"))
(rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
(builtin "One Step Simplification" (formula "6"))
(rule "methodCallEmpty" (formula "6") (term "1"))
(rule "blockEmpty" (formula "6") (term "1"))
(rule "assignment_write_attribute_this" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "assignment_write_attribute_this" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "assignment_write_attribute_this" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "methodCallEmpty" (formula "6") (term "1"))
(rule "blockEmpty" (formula "6") (term "1"))
(rule "methodCallReturnIgnoreResult" (formula "6") (term "1"))
(rule "methodCallReturn" (formula "6") (term "1"))
(rule "assignment" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "methodCallEmpty" (formula "6") (term "1"))
(rule "blockEmpty" (formula "6") (term "1"))
(rule "assignment" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "blockEmpty" (formula "6") (term "1"))
(rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
(builtin "One Step Simplification" (formula "6"))
(rule "methodCallSuper" (formula "6") (term "1"))
(rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
(builtin "One Step Simplification" (formula "6"))
(rule "methodCallEmpty" (formula "6") (term "1"))
(rule "blockEmpty" (formula "6") (term "1"))
(rule "variableDeclarationAssign" (formula "6") (term "1"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "keypair"))
(builtin "Use Operation Contract" (formula "6") (newnames "heapBefore_generateSignatureKeyPair,result,exc_0,heapAfter_generateSignatureKeyPair,anon_heap_generateSignatureKeyPair") (contract "verif.lib.crypto.CryptoLib[verif.lib.crypto.CryptoLib::generateSignatureKeyPair()].JML behavior operation contract.0"))
(branch "Post (generateSignatureKeyPair)"
   (builtin "One Step Simplification" (formula "8"))
   (builtin "One Step Simplification" (formula "5"))
   (rule "andLeft" (formula "5"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "6") (term "1,1,0") (ifseqformula "5"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "typeEqDerived" (formula "8") (term "0,1,1") (ifseqformula "6"))
   (rule "typeEqDerived" (formula "8") (term "0,0,1") (ifseqformula "6"))
   (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "6")))
   (rule "true_left" (formula "8"))
   (rule "dismissNonSelectedField" (formula "7") (term "0,0,1"))
   (rule "dismissNonSelectedField" (formula "7") (term "0,0,1"))
   (rule "dismissNonSelectedField" (formula "7") (term "0,0,1"))
   (rule "dismissNonSelectedField" (formula "7") (term "0,0,1"))
   (rule "assignment" (formula "10") (term "1"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "eval_order_access4_this" (formula "10") (term "1") (inst "#v1=x_arr"))
   (rule "variableDeclarationAssign" (formula "10") (term "1"))
   (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_arr"))
   (rule "pullOutSelect" (formula "7") (term "0,0,1") (inst "selectSK=java_lang_Object_created__2"))
   (rule "simplifySelectOfCreate" (formula "7"))
   (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "9")))
   (rule "castDel" (formula "7") (term "1,0"))
   (rule "sortsDisjointModuloNull" (formula "7") (term "0,0"))
   (rule "replace_known_right" (formula "7") (term "0,0,0") (ifseqformula "9"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "applyEqReverse" (formula "8") (term "0,0,1") (ifseqformula "7"))
   (rule "hideAuxiliaryEq" (formula "7"))
   (rule "commuteUnion" (formula "5") (term "1,0"))
   (rule "shift_paren_or" (formula "7"))
   (rule "methodCallWithAssignmentUnfoldArguments" (formula "10") (term "1"))
   (rule "variableDeclarationAssign" (formula "10") (term "1"))
   (rule "variableDeclaration" (formula "10") (term "1") (newnames "var"))
   (rule "assignment_read_attribute" (formula "10") (term "1"))
   (branch "Normal Execution (keypair != null)"
      (builtin "One Step Simplification" (formula "11"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "10"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "pullOutSelect" (formula "11") (term "0,1,0") (inst "selectSK=verif_lib_crypto_KeyPair_privateKey_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "6"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
      (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
      (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
      (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
      (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
      (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
      (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
      (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
      (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
      (rule "replaceKnownSelect_taclet0_0" (formula "1") (term "0,0,1,0,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "1") (term "0,0,1,0,0"))
      (rule "elementOfUnion" (formula "1") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
      (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
      (rule "ifthenelse_negated" (formula "1") (term "0"))
      (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=verif_lib_crypto_KeyPair_privateKey_1"))
      (rule "simplifySelectOfCreate" (formula "1"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")))
      (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (builtin "Use Operation Contract" (formula "12") (newnames "heapBefore_copyOf,result_0,exc_2") (contract "verif.utils.MessageTools[verif.utils.MessageTools::copyOf([B)].JML normal_behavior operation contract.0#verif.utils.MessageTools[verif.utils.MessageTools::copyOf([B)].JML normal_behavior operation contract.1"))
      (branch "Post (copyOf)"
         (builtin "One Step Simplification" (formula "13"))
         (builtin "One Step Simplification" (formula "9"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "9") (term "1,1,0") (ifseqformula "6"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "9") (term "0,0,0,0,1,0,1") (ifseqformula "6"))
         (rule "andLeft" (formula "9"))
         (rule "andLeft" (formula "9"))
         (rule "andLeft" (formula "11"))
         (rule "eqSymm" (formula "11") (term "1,0,1"))
         (rule "replace_known_left" (formula "11") (term "1,1") (ifseqformula "9"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "replace_known_left" (formula "12") (term "1,1") (ifseqformula "9"))
         (builtin "One Step Simplification" (formula "12"))
         (rule "dismissNonSelectedField" (formula "10") (term "0,0,1"))
         (rule "dismissNonSelectedField" (formula "11") (term "0,0,0,0,0,1"))
         (rule "dismissNonSelectedField" (formula "10") (term "0,0,1"))
         (rule "dismissNonSelectedField" (formula "11") (term "0,0,0,0,0,1"))
         (rule "dismissNonSelectedField" (formula "10") (term "0,0,1"))
         (rule "dismissNonSelectedField" (formula "11") (term "0,0,0,0,0,1"))
         (rule "dismissNonSelectedField" (formula "10") (term "0,0,1"))
         (rule "dismissNonSelectedField" (formula "11") (term "0,0,0,0,0,1"))
         (rule "assignment" (formula "16") (term "1"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "blockEmpty" (formula "16") (term "1"))
         (rule "assignment_write_attribute_this" (formula "16") (term "1"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "eval_order_access4_this" (formula "16") (term "1") (inst "#v1=x_arr"))
         (rule "variableDeclarationAssign" (formula "16") (term "1"))
         (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_arr_1"))
         (rule "array2seqDef" (formula "11") (term "0,1,1") (inst "u=u"))
         (rule "array2seqDef" (formula "11") (term "1,1,1") (inst "u=u"))
         (rule "eqSeqDef" (formula "11") (term "1,1") (inst "iv=iv"))
         (rule "lenOfSeqDef" (formula "11") (term "0,0,1,1"))
         (rule "eqSymm" (formula "11") (term "0,1,1"))
         (rule "polySimp_elimSub" (formula "11") (term "1,1,0,1,1"))
         (rule "times_zero_2" (formula "11") (term "1,1,1,0,1,1"))
         (rule "add_zero_right" (formula "11") (term "1,1,0,1,1"))
         (rule "lenOfSeqDef" (formula "11") (term "1,1,0,0,1,1,1"))
         (rule "polySimp_elimSub" (formula "11") (term "1,1,1,0,0,1,1,1"))
         (rule "times_zero_2" (formula "11") (term "1,1,1,1,0,0,1,1,1"))
         (rule "add_zero_right" (formula "11") (term "1,1,1,0,0,1,1,1"))
         (rule "getOfSeqDef" (formula "11") (term "1,1,0,1,1,1"))
         (rule "castDel" (formula "11") (term "2,1,1,0,1,1,1"))
         (rule "castDel" (formula "11") (term "1,1,1,0,1,1,1"))
         (rule "add_zero_right" (formula "11") (term "0,2,1,1,1,0,1,1,1"))
         (rule "polySimp_elimSub" (formula "11") (term "1,1,0,1,1,0,1,1,1"))
         (rule "times_zero_2" (formula "11") (term "1,1,1,0,1,1,0,1,1,1"))
         (rule "add_zero_right" (formula "11") (term "1,1,0,1,1,0,1,1,1"))
         (rule "getOfSeqDef" (formula "11") (term "0,1,0,1,1,1"))
         (rule "castDel" (formula "11") (term "1,0,1,0,1,1,1"))
         (rule "castDel" (formula "11") (term "2,0,1,0,1,1,1"))
         (rule "add_zero_right" (formula "11") (term "0,2,1,0,1,0,1,1,1"))
         (rule "polySimp_elimSub" (formula "11") (term "1,1,0,0,1,0,1,1,1"))
         (rule "times_zero_2" (formula "11") (term "1,1,1,0,0,1,0,1,1,1"))
         (rule "add_zero_right" (formula "11") (term "1,1,0,0,1,0,1,1,1"))
         (rule "lenOfSeqDef" (formula "11") (term "0,0,1,1"))
         (rule "eqSymm" (formula "11") (term "0,1,1"))
         (rule "polySimp_elimSub" (formula "11") (term "1,1,0,1,1"))
         (rule "mul_literals" (formula "11") (term "1,1,1,0,1,1"))
         (rule "add_zero_right" (formula "11") (term "1,1,0,1,1"))
         (rule "inEqSimp_ltToLeq" (formula "11") (term "0,1,1,0,0,1,1,1"))
         (rule "add_zero_right" (formula "11") (term "0,0,1,1,0,0,1,1,1"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,1,0,0,1,1,1"))
         (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,1,1,0,1,1,1"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,1,1,0,1,1,1"))
         (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,1,0,1,1,1"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,1,0,1,1,1"))
         (rule "inEqSimp_ltToLeq" (formula "11") (term "0,1,0,1,1"))
         (rule "add_zero_right" (formula "11") (term "0,0,1,0,1,1"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,1,1"))
         (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0,1,1"))
         (rule "add_zero_right" (formula "11") (term "0,0,0,0,1,1"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,1,1"))
         (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,1,1,1"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,1,1,1"))
         (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,1,1,1"))
         (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,1,1,0,1,1,1"))
         (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,1,0,1,1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,1,1,0,1,1,1"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,1,1,0,1,1,1"))
         (rule "polySimp_rightDist" (formula "11") (term "1,1,0,1,1,0,1,1,1"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,1,1,0,1,1,1"))
         (rule "mul_literals" (formula "11") (term "0,1,1,0,1,1,0,1,1,1"))
         (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,1,1,0,1,1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,1,0,1,1,1"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,1,0,1,1,1"))
         (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,1,0,1,1,1"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,1,0,1,1,1"))
         (rule "mul_literals" (formula "11") (term "0,1,1,0,0,1,0,1,1,1"))
         (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,1,0,1,1,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0,1,0,1,1"))
         (rule "polySimp_mulLiterals" (formula "11") (term "0,0,1,0,1,1"))
         (rule "polySimp_elimOne" (formula "11") (term "0,0,1,0,1,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0,0,0,1,1"))
         (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0,0,1,1"))
         (rule "polySimp_elimOne" (formula "11") (term "0,0,0,0,1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,1,1,1"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,1,1,1"))
         (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,1,1,1"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,1,1,1"))
         (rule "mul_literals" (formula "11") (term "0,1,1,0,0,1,1,1"))
         (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,1,1,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0,1,1,1,0,0,1,1,1"))
         (rule "polySimp_mulLiterals" (formula "11") (term "0,0,1,1,1,0,0,1,1,1"))
         (rule "polySimp_elimOne" (formula "11") (term "0,0,1,1,1,0,0,1,1,1"))
         (rule "pullOutSelect" (formula "10") (term "0,0,1") (inst "selectSK=java_lang_Object_created__6"))
         (rule "applyEq" (formula "12") (term "0,0,0,0,0,1") (ifseqformula "10"))
         (rule "simplifySelectOfCreate" (formula "10"))
         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "14")))
         (rule "castDel" (formula "10") (term "1,0"))
         (rule "sortsDisjointModuloNull" (formula "10") (term "0,0"))
         (rule "replace_known_right" (formula "10") (term "0,0,0") (ifseqformula "14"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "applyEqReverse" (formula "11") (term "0,0,1") (ifseqformula "10"))
         (rule "applyEqReverse" (formula "12") (term "0,0,0,0,0,1") (ifseqformula "10"))
         (rule "hideAuxiliaryEq" (formula "10"))
         (rule "nnf_imp2or" (formula "11") (term "0,1,1,1"))
         (rule "nnf_notAnd" (formula "11") (term "0,0,1,1,1"))
         (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0,1,1,1"))
         (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0,1,1,1"))
         (rule "add_zero_right" (formula "11") (term "0,0,0,0,0,1,1,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,1,1,1"))
         (rule "mul_literals" (formula "11") (term "1,0,0,0,1,1,1"))
         (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0,1,1,1"))
         (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0,1,1,1"))
         (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0,1,1,1"))
         (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,1,1,1"))
         (rule "add_literals" (formula "11") (term "0,0,0,1,0,0,1,1,1"))
         (rule "add_zero_left" (formula "11") (term "0,0,1,0,0,1,1,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,1,1,1"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1,1,1"))
         (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,1,1,1"))
         (rule "shift_paren_or" (formula "10"))
         (rule "commute_or_2" (formula "11") (term "0,1,1,1"))
         (rule "commute_or" (formula "11") (term "0,0,1,1,1"))
         (rule "methodCallWithAssignmentUnfoldArguments" (formula "16") (term "1"))
         (rule "variableDeclarationAssign" (formula "16") (term "1"))
         (rule "variableDeclaration" (formula "16") (term "1") (newnames "var_1"))
         (rule "assignment_read_attribute" (formula "16") (term "1"))
         (branch "Normal Execution (keypair != null)"
            (builtin "One Step Simplification" (formula "17"))
            (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "15")))
            (rule "false_right" (formula "16"))
            (rule "dismissNonSelectedField" (formula "16") (term "0,1,0"))
            (rule "pullOutSelect" (formula "16") (term "0,1,0") (inst "selectSK=verif_lib_crypto_KeyPair_publicKey_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "7"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
            (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
            (rule "replaceKnownSelect_taclet0_0" (formula "1") (term "0,0,1,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0_1" (formula "1") (term "0,0,1,0,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "elementOfUnion" (formula "1") (term "0,0,0"))
            (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
            (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
            (rule "ifthenelse_negated" (formula "1") (term "0"))
            (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=verif_lib_crypto_KeyPair_publicKey_1"))
            (rule "simplifySelectOfCreate" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
            (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (builtin "Use Operation Contract" (formula "17") (newnames "heapBefore_copyOf_0,result_1,exc_3") (contract "verif.utils.MessageTools[verif.utils.MessageTools::copyOf([B)].JML normal_behavior operation contract.0#verif.utils.MessageTools[verif.utils.MessageTools::copyOf([B)].JML normal_behavior operation contract.1"))
            (branch "Post (copyOf)"
               (builtin "One Step Simplification" (formula "18"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "andLeft" (formula "14"))
               (rule "andLeft" (formula "15"))
               (rule "andLeft" (formula "14"))
               (rule "eqSymm" (formula "16") (term "1,0,1"))
               (rule "replace_known_left" (formula "17") (term "1,1") (ifseqformula "14"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "replace_known_left" (formula "16") (term "1,1") (ifseqformula "14"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "dismissNonSelectedField" (formula "15") (term "0,1"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "1") (ifseqformula "7"))
               (rule "dismissNonSelectedField" (formula "16") (term "0,0,0,0,1"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "0,0,0,1") (ifseqformula "7"))
               (rule "dismissNonSelectedField" (formula "15") (term "0,0,1"))
               (rule "dismissNonSelectedField" (formula "16") (term "0,0,0,0,0,1"))
               (rule "dismissNonSelectedField" (formula "15") (term "0,0,1"))
               (rule "dismissNonSelectedField" (formula "16") (term "0,0,0,0,0,1"))
               (rule "dismissNonSelectedField" (formula "15") (term "0,0,1"))
               (rule "dismissNonSelectedField" (formula "16") (term "0,0,0,0,0,1"))
               (rule "dismissNonSelectedField" (formula "15") (term "0,0,1"))
               (rule "dismissNonSelectedField" (formula "16") (term "0,0,0,0,0,1"))
               (rule "assignment" (formula "21") (term "1"))
               (builtin "One Step Simplification" (formula "21"))
               (rule "blockEmpty" (formula "21") (term "1"))
               (rule "assignment_write_attribute_this" (formula "21") (term "1"))
               (builtin "One Step Simplification" (formula "21"))
               (rule "eval_order_access4_this" (formula "21") (term "1") (inst "#v1=l"))
               (rule "variableDeclarationAssign" (formula "21") (term "1"))
               (rule "variableDeclaration" (formula "21") (term "1") (newnames "l"))
               (rule "array2seqDef" (formula "16") (term "0,1,1") (inst "u=u"))
               (rule "dismissNonSelectedField" (formula "16") (term "2,0,1,1"))
               (rule "array2seqDef" (formula "16") (term "1,1,1") (inst "u=u"))
               (rule "eqSymm" (formula "16") (term "1,1"))
               (rule "dismissNonSelectedField" (formula "16") (term "2,0,1,1"))
               (rule "eqSymm" (formula "16") (term "1,1"))
               (rule "eqSeqDef" (formula "16") (term "1,1") (inst "iv=iv"))
               (rule "lenOfSeqDef" (formula "16") (term "1,0,1,1"))
               (rule "polySimp_elimSub" (formula "16") (term "1,1,0,1,1"))
               (rule "times_zero_2" (formula "16") (term "1,1,1,0,1,1"))
               (rule "add_zero_right" (formula "16") (term "1,1,0,1,1"))
               (rule "lenOfSeqDef" (formula "16") (term "1,1,0,0,1,1,1"))
               (rule "polySimp_elimSub" (formula "16") (term "1,1,1,0,0,1,1,1"))
               (rule "times_zero_2" (formula "16") (term "1,1,1,1,0,0,1,1,1"))
               (rule "add_zero_right" (formula "16") (term "1,1,1,0,0,1,1,1"))
               (rule "lenOfSeqDef" (formula "16") (term "0,0,1,1"))
               (rule "polySimp_elimSub" (formula "16") (term "1,0,0,1,1"))
               (rule "times_zero_2" (formula "16") (term "1,1,0,0,1,1"))
               (rule "add_zero_right" (formula "16") (term "1,0,0,1,1"))
               (rule "getOfSeqDef" (formula "16") (term "1,1,0,1,1,1"))
               (rule "castDel" (formula "16") (term "2,1,1,0,1,1,1"))
               (rule "castDel" (formula "16") (term "1,1,1,0,1,1,1"))
               (rule "add_zero_right" (formula "16") (term "0,2,1,1,1,0,1,1,1"))
               (rule "polySimp_elimSub" (formula "16") (term "1,1,0,1,1,0,1,1,1"))
               (rule "times_zero_2" (formula "16") (term "1,1,1,0,1,1,0,1,1,1"))
               (rule "add_zero_right" (formula "16") (term "1,1,0,1,1,0,1,1,1"))
               (rule "getOfSeqDef" (formula "16") (term "0,1,0,1,1,1"))
               (rule "castDel" (formula "16") (term "1,0,1,0,1,1,1"))
               (rule "castDel" (formula "16") (term "2,0,1,0,1,1,1"))
               (rule "add_zero_right" (formula "16") (term "0,2,1,0,1,0,1,1,1"))
               (rule "polySimp_elimSub" (formula "16") (term "1,1,0,0,1,0,1,1,1"))
               (rule "times_zero_2" (formula "16") (term "1,1,1,0,0,1,0,1,1,1"))
               (rule "add_zero_right" (formula "16") (term "1,1,0,0,1,0,1,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1,0,1,1"))
               (rule "add_zero_right" (formula "16") (term "0,0,1,0,1,1"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1,1,0,0,1,1,1"))
               (rule "add_zero_right" (formula "16") (term "0,0,1,1,0,0,1,1,1"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,1,0,0,1,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0,1,1"))
               (rule "add_zero_right" (formula "16") (term "0,0,0,0,1,1"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,1,1,0,1,1,1"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,1,1,0,1,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,1,0,1,1,1"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,0,1,1,1"))
               (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,1,1,1"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,1,1"))
               (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,1,1,1"))
               (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,1,1,0,1,1,1"))
               (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,1,0,1,1,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,1,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "16") (term "0,0,1,0,1,1"))
               (rule "polySimp_elimOne" (formula "16") (term "0,0,1,0,1,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,0,1,1"))
               (rule "polySimp_elimOne" (formula "16") (term "0,0,0,0,1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,1,1,0,1,1,1"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,1,1,0,1,1,1"))
               (rule "polySimp_rightDist" (formula "16") (term "1,1,0,1,1,0,1,1,1"))
               (rule "mul_literals" (formula "16") (term "0,1,1,0,1,1,0,1,1,1"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,1,1,0,1,1,1"))
               (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,1,1,0,1,1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,1,0,1,1,1"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,1,0,1,1,1"))
               (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,1,0,1,1,1"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,1,0,1,1,1"))
               (rule "mul_literals" (formula "16") (term "0,1,1,0,0,1,0,1,1,1"))
               (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,1,0,1,1,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,1,0,0,1,0,0,1,1,1"))
               (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,1,0,0,1,0,0,1,1,1"))
               (rule "polySimp_elimOne" (formula "16") (term "0,0,0,1,0,0,1,0,0,1,1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,1,1,1"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,1,1,1"))
               (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,1,1,1"))
               (rule "mul_literals" (formula "16") (term "0,1,1,0,0,1,1,1"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,1,1,1"))
               (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,1,1,1"))
               (rule "pullOutSelect" (formula "15") (term "0,0,1") (inst "selectSK=java_lang_Object_created__8"))
               (rule "applyEq" (formula "17") (term "0,0,0,0,0,1") (ifseqformula "15"))
               (rule "simplifySelectOfCreate" (formula "15"))
               (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "19")))
               (rule "castDel" (formula "15") (term "1,0"))
               (rule "sortsDisjointModuloNull" (formula "15") (term "0,0"))
               (rule "replace_known_right" (formula "15") (term "0,0,0") (ifseqformula "19"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "applyEqReverse" (formula "16") (term "0,0,1") (ifseqformula "15"))
               (rule "applyEqReverse" (formula "17") (term "0,0,0,0,0,1") (ifseqformula "15"))
               (rule "hideAuxiliaryEq" (formula "15"))
               (rule "nnf_imp2or" (formula "16") (term "0,1,1,1"))
               (rule "nnf_notAnd" (formula "16") (term "0,0,1,1,1"))
               (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0,1,1,1"))
               (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0,1,1,1"))
               (rule "add_literals" (formula "16") (term "0,0,0,0,0,1,1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,1,1,1"))
               (rule "mul_literals" (formula "16") (term "1,0,0,0,1,1,1"))
               (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0,1,1,1"))
               (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,1,1,1"))
               (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,1,1,1"))
               (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,1,1,1"))
               (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,1,1,1"))
               (rule "add_zero_left" (formula "16") (term "0,0,1,0,0,1,1,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0,1,1,1"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,1,1,1"))
               (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,1,1,1"))
               (rule "shift_paren_or" (formula "15"))
               (rule "commute_or_2" (formula "16") (term "0,1,1,1"))
               (rule "commute_or" (formula "16") (term "0,0,1,1,1"))
               (rule "arrayLengthNotNegative" (formula "12") (term "1,0,0,1,1"))
               (rule "arrayLengthIsAShort" (formula "13") (term "1,0,0,1,1"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "true_left" (formula "13"))
               (rule "arrayLengthIsAShort" (formula "13") (term "1,1,0,1,1"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "true_left" (formula "13"))
               (rule "arrayLengthNotNegative" (formula "13") (term "1,1,0,1,1"))
               (builtin "Use Operation Contract" (formula "23") (newnames "heapBefore_Log,self_1,exc_4,heapAfter_Log,anon_heap_Log") (contract "verif.functionalities.pkisig.Signer.Log[verif.functionalities.pkisig.Signer.Log::Log()].JML normal_behavior operation contract.0"))
               (branch "Post (Log)"
                  (builtin "One Step Simplification" (formula "25"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "andLeft" (formula "21"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "1,1,0,1,0") (ifseqformula "21"))
                  (rule "andLeft" (formula "22"))
                  (rule "andLeft" (formula "23"))
                  (rule "andLeft" (formula "22"))
                  (rule "andLeft" (formula "23"))
                  (rule "andLeft" (formula "22"))
                  (rule "notLeft" (formula "24"))
                  (rule "andLeft" (formula "22"))
                  (rule "notLeft" (formula "22"))
                  (rule "andLeft" (formula "22"))
                  (rule "notLeft" (formula "22"))
                  (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "26"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "dismissNonSelectedField" (formula "26") (term "0"))
                  (rule "dismissNonSelectedField" (formula "26") (term "0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (ifseqformula "7"))
                  (rule "orRight" (formula "26"))
                  (rule "dismissNonSelectedField" (formula "26") (term "0"))
                  (rule "dismissNonSelectedField" (formula "26") (term "0"))
                  (rule "dismissNonSelectedField" (formula "26") (term "0"))
                  (rule "dismissNonSelectedField" (formula "26") (term "0"))
                  (rule "assignment" (formula "33") (term "1"))
                  (builtin "One Step Simplification" (formula "33"))
                  (rule "assignment_write_attribute_this" (formula "33") (term "1"))
                  (builtin "One Step Simplification" (formula "33"))
                  (rule "pullOutSelect" (formula "29") (term "0") (inst "selectSK=verif_functionalities_pkisig_Signer_Log_messages_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "26") (term "0") (inst "selectSK=java_lang_Object_created__9"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "0,0"))
                  (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                  (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "31"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "29")))
                  (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "methodCallEmpty" (formula "33") (term "1"))
                  (rule "blockEmpty" (formula "33") (term "1"))
                  (rule "assignment_write_attribute" (formula "33") (term "1"))
                  (branch "Normal Execution (self != null)"
                     (builtin "One Step Simplification" (formula "34"))
                     (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "30")))
                     (rule "false_right" (formula "33"))
                     (rule "tryEmpty" (formula "33") (term "1"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "1,0") (ifseqformula "4"))
                     (rule "onlyCreatedObjectsAreReferenced" (formula "3") (term "2,0") (ifseqformula "7"))
                     (rule "emptyModality" (formula "35") (term "1"))
                     (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "33")) (ifInst ""  (formula "32")))
                     (rule "eqSymm" (formula "35") (term "1,0,0,1"))
                     (rule "dismissNonSelectedField" (formula "35") (term "0,0,0"))
                     (rule "pullOutSelect" (formula "35") (term "0,0,0") (inst "selectSK=verif_functionalities_pkisig_Signer_log_0"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "0"))
                     (rule "applyEqReverse" (formula "36") (term "0,0,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_right" (formula "35") (term "0,0") (ifseqformula "30"))
                     (builtin "One Step Simplification" (formula "35"))
                     (rule "allRight" (formula "35") (inst "sk=f_2"))
                     (rule "allRight" (formula "35") (inst "sk=o_2"))
                     (rule "orRight" (formula "35"))
                     (rule "orRight" (formula "35"))
                     (rule "orRight" (formula "35"))
                     (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=f_2_0"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "39"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_1"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_2"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "12"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,1,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_3"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "pullOutSelect" (formula "2") (term "0,0,0,1,1,0,0") (inst "selectSK=java_lang_Object_created__10"))
                     (rule "simplifySelectOfCreate" (formula "2"))
                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "37")))
                     (rule "castDel" (formula "2") (term "1,0"))
                     (rule "eqSymm" (formula "2") (term "0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_4"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_5"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                     (rule "replaceKnownSelect_taclet0000000_22" (formula "1") (term "0,0,1,1,0,0"))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                     (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "43"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "42"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_6"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_7"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_8"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_9"))
                     (rule "simplifySelectOfStore" (formula "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_10"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "44"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "commute_and" (formula "48"))
                     (rule "commute_and" (formula "47"))
                     (rule "commute_and" (formula "12") (term "0,0"))
                     (rule "commute_and" (formula "11") (term "0,0"))
                     (rule "commute_and" (formula "8") (term "0,0"))
                     (rule "commute_and_2" (formula "10") (term "0,0,0"))
                     (rule "commute_and" (formula "7") (term "0,0"))
                     (rule "commute_and" (formula "6") (term "0,0"))
                     (rule "commute_and" (formula "5") (term "0,0"))
                     (rule "ifthenelse_split" (formula "32") (term "1,0,1,1"))
                     (branch "result_1.length ≥ 1 TRUE"
                        (rule "commute_and" (formula "4") (term "0,0"))
                        (rule "commute_and" (formula "3") (term "0,0"))
                        (rule "commute_and" (formula "2") (term "0,0"))
                        (rule "commute_and" (formula "1") (term "0,0"))
                        (rule "ifthenelse_split" (formula "16") (term "0"))
                        (branch "result.<created> = TRUE TRUE"
                           (rule "applyEqReverse" (formula "29") (term "0,1,0,0,1,1") (ifseqformula "17"))
                           (rule "applyEqReverse" (formula "27") (term "0,0") (ifseqformula "17"))
                           (rule "applyEqReverse" (formula "29") (term "0,0,0,1,1,0,1,1,1") (ifseqformula "17"))
                           (rule "applyEqReverse" (formula "30") (term "0,0") (ifseqformula "17"))
                           (rule "applyEqReverse" (formula "29") (term "0,1,1,1,0,1,1,1") (ifseqformula "17"))
                           (rule "applyEqReverse" (formula "29") (term "0,0,0,0,0,1,1") (ifseqformula "17"))
                           (rule "applyEqReverse" (formula "29") (term "0,1,1,1,0,0,0,0,0,1,1,1") (ifseqformula "17"))
                           (rule "applyEqReverse" (formula "29") (term "1,1,0,0,0,0,1,1,1") (ifseqformula "17"))
                           (rule "applyEqReverse" (formula "29") (term "0,0,0") (ifseqformula "17"))
                           (rule "hideAuxiliaryEq" (formula "17"))
                           (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "16"))
                           (builtin "One Step Simplification" (formula "13"))
                           (rule "applyEqReverse" (formula "34") (term "0,0") (ifseqformula "13"))
                           (rule "applyEqReverse" (formula "33") (term "0,0,0,1,1,0,1,1,1") (ifseqformula "13"))
                           (rule "applyEqReverse" (formula "33") (term "0,1,1,1,0,0,0,0,0,1,1,1") (ifseqformula "13"))
                           (rule "applyEqReverse" (formula "33") (term "0,0,0") (ifseqformula "13"))
                           (rule "applyEqReverse" (formula "33") (term "0,1,0,0,1,1") (ifseqformula "13"))
                           (rule "applyEqReverse" (formula "33") (term "0,0,0,0,0,1,1") (ifseqformula "13"))
                           (rule "applyEqReverse" (formula "33") (term "1,1,0,0,0,0,1,1,1") (ifseqformula "13"))
                           (rule "applyEqReverse" (formula "33") (term "0,1,1,1,0,1,1,1") (ifseqformula "13"))
                           (rule "hideAuxiliaryEq" (formula "13"))
                           (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "15"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "true_left" (formula "22"))
                           (rule "applyEq_and_gen3" (formula "10") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "10"))
                           (rule "commute_and" (formula "10") (term "0,0,0"))
                           (rule "cut_direct" (formula "29") (term "0,0"))
                           (branch "CUT: result_1 = null TRUE"
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "true_left" (formula "30"))
                              (rule "replace_known_left" (formula "31") (term "0,1,0,1") (ifseqformula "29"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "replace_known_left" (formula "32") (term "1") (ifseqformula "29"))
                              (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "31")))
                              (rule "true_left" (formula "32"))
                              (rule "applyEq" (formula "33") (term "3,0,0") (ifseqformula "29"))
                              (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "29"))
                              (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "29"))
                              (rule "ifthenelse_split" (formula "26") (term "1,0,1,1"))
                              (branch "result_0.length ≥ 1 TRUE"
                                 (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "26"))
                                 (rule "leq_literals" (formula "25") (term "0"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "true_left" (formula "25"))
                                 (rule "ifthenelse_split" (formula "9") (term "0"))
                                 (branch "o_2 = s_1 TRUE"
                                    (rule "applyEqReverse" (formula "11") (term "0,0,0,1,1,0,0") (ifseqformula "10"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "applyEqReverse" (formula "6") (term "0,0,0,0,0") (ifseqformula "10"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "10"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "replace_known_left" (formula "11") (term "1,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "replace_known_left" (formula "10") (term "1,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "10"))
                                    (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEq" (formula "1") (term "1,2,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "47") (term "1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "45") (term "0,1") (ifseqformula "8"))
                                    (rule "replace_known_right" (formula "45") (term "1") (ifseqformula "41"))
                                    (builtin "One Step Simplification" (formula "45"))
                                    (rule "false_right" (formula "45"))
                                    (rule "applyEq" (formula "9") (term "0,1,0,0") (ifseqformula "8"))
                                    (rule "eqSymm" (formula "9") (term "1,0,0"))
                                    (rule "sortsDisjointModuloNull" (formula "9") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "9") (term "0,1,0,0") (ifseqformula "39"))
                                    (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "41")))
                                    (rule "applyEqReverse" (formula "10") (term "2,0") (ifseqformula "9"))
                                    (rule "hideAuxiliaryEq" (formula "9"))
                                    (rule "applyEq" (formula "44") (term "1,0,0,1") (ifseqformula "8"))
                                    (rule "replace_known_right" (formula "44") (term "0,1") (ifseqformula "41"))
                                    (builtin "One Step Simplification" (formula "44"))
                                    (rule "notRight" (formula "44"))
                                    (rule "replace_known_left" (formula "44") (term "1") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "44"))
                                    (rule "applyEq" (formula "9") (term "0") (ifseqformula "1"))
                                    (rule "eqSymm" (formula "9"))
                                    (rule "close" (formula "41") (ifseqformula "9"))
                                 )
                                 (branch "o_2 = s_1 FALSE"
                                    (rule "applyEqReverse" (formula "10") (term "0,0,0,1,1,0,0") (ifseqformula "9"))
                                    (rule "applyEqReverse" (formula "6") (term "0,0,0,0,0") (ifseqformula "9"))
                                    (rule "hideAuxiliaryEq" (formula "9"))
                                    (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "37"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "36"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_right" (formula "7") (term "1,0,0") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                    (rule "hideAuxiliaryEq" (formula "7"))
                                    (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "33"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "32"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "31"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "commute_and" (formula "1") (term "0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "38"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "cut_direct" (formula "16") (term "1"))
                                    (branch "CUT: result_0 = null TRUE"
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "replace_known_left" (formula "15") (term "0,1,0,1") (ifseqformula "16"))
                                       (builtin "One Step Simplification" (formula "15"))
                                       (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "15"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "15"))
                                       (builtin "One Step Simplification" (formula "11"))
                                       (rule "true_left" (formula "11"))
                                       (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "14"))
                                       (rule "applyEq" (formula "19") (term "3,0,0,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "12"))
                                       (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "16"))
                                       (rule "leq_literals" (formula "11") (term "0"))
                                       (builtin "One Step Simplification" (formula "11"))
                                       (rule "true_left" (formula "11"))
                                       (rule "cut_direct" (formula "33") (term "0,0"))
                                       (branch "CUT: o_2 = null TRUE"
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "false_right" (formula "34"))
                                          (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "replace_known_left" (formula "32") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "applyEqRigid" (formula "34") (term "1,0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "24") (term "0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "24"))
                                          (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "2") (term "1,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "26"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "33") (term "1") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "eqSymm" (formula "32"))
                                          (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "closeTrue" (formula "32"))
                                       )
                                       (branch "CUT: o_2 = null FALSE"
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "notRight" (formula "34"))
                                          (rule "replace_known_left" (formula "2") (term "0,0,1,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "34")))
                                          (rule "replace_known_right" (formula "32") (term "1") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "false_right" (formula "32"))
                                          (rule "replace_known_right" (formula "32") (term "1") (ifseqformula "33"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "false_right" (formula "32"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch " f_2 = verif.functionalities.pkisig.Signer.Log::$messages ∧ o_2 = self_1 TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "eqSymm" (formula "34"))
                                             (rule "applyEqRigid" (formula "34") (term "2,0") (ifseqformula "2"))
                                             (rule "narrowSelectType" (formula "34") (term "0") (ifseqformula "19"))
                                             (rule "eqSymm" (formula "34"))
                                             (rule "applyEq" (formula "25") (term "0") (ifseqformula "3"))
                                             (rule "sortsDisjointModuloNull" (formula "25"))
                                             (rule "replace_known_right" (formula "25") (term "1") (ifseqformula "30"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "28")))
                                             (rule "false_right" (formula "25"))
                                             (rule "applyEq" (formula "32") (term "0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "close" (formula "25") (ifseqformula "1"))
                                          )
                                          (branch " f_2 = verif.functionalities.pkisig.Signer.Log::$messages ∧ o_2 = self_1 FALSE"
                                             (rule "close" (formula "34") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                    (branch "CUT: result_0 = null FALSE"
                                       (builtin "One Step Simplification" (formula "16"))
                                       (rule "notLeft" (formula "16"))
                                       (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "26"))
                                       (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "27")))
                                       (rule "andLeft" (formula "15"))
                                       (rule "notLeft" (formula "15"))
                                       (rule "andLeft" (formula "15"))
                                       (rule "orRight" (formula "27"))
                                       (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "29"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "replace_known_right" (formula "12") (term "1,0") (ifseqformula "27"))
                                       (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "30")) (ifInst ""  (formula "28")))
                                       (rule "closeFalse" (formula "12"))
                                    )
                                 )
                              )
                              (branch "result_0.length ≥ 1 FALSE"
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "inEqSimp_geqRight" (formula "38"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_antiSymm" (formula "26") (ifseqformula "1"))
                                 (rule "applyEq" (formula "27") (term "0") (ifseqformula "26"))
                                 (rule "qeq_literals" (formula "27"))
                                 (rule "true_left" (formula "27"))
                                 (rule "applyEq" (formula "1") (term "0") (ifseqformula "26"))
                                 (rule "leq_literals" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "applyEq" (formula "26") (term "1,1,1,0,1,0,0,0,1,1,1") (ifseqformula "25"))
                                 (rule "add_zero_right" (formula "26") (term "1,1,0,1,0,0,0,1,1,1"))
                                 (rule "inEqSimp_notGeq" (formula "26") (term "0,0,1,1"))
                                 (rule "mul_literals" (formula "26") (term "1,0,0,0,0,1,1"))
                                 (rule "add_literals" (formula "26") (term "0,0,0,0,1,1"))
                                 (rule "add_zero_left" (formula "26") (term "0,0,0,1,1"))
                                 (rule "ifthenelse_split" (formula "9") (term "0"))
                                 (branch "o_2 = s_1 TRUE"
                                    (rule "applyEqReverse" (formula "6") (term "0,0,0,0,0") (ifseqformula "10"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "applyEqReverse" (formula "11") (term "0,0,0,1,1,0,0") (ifseqformula "10"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "10"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "replace_known_left" (formula "11") (term "1,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "replace_known_left" (formula "10") (term "1,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "10"))
                                    (rule "applyEq" (formula "46") (term "1,0,0,1") (ifseqformula "8"))
                                    (rule "replace_known_right" (formula "46") (term "0,1") (ifseqformula "42"))
                                    (builtin "One Step Simplification" (formula "46"))
                                    (rule "notRight" (formula "46"))
                                    (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "45"))
                                    (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "46"))
                                    (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "9"))
                                    (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "9"))
                                    (rule "applyEq" (formula "10") (term "0,1,0,0") (ifseqformula "9"))
                                    (rule "eqSymm" (formula "10") (term "1,0,0"))
                                    (rule "sortsDisjointModuloNull" (formula "10") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "10") (term "0,1,0,0") (ifseqformula "40"))
                                    (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "42")))
                                    (rule "applyEqReverse" (formula "11") (term "2,0") (ifseqformula "10"))
                                    (rule "hideAuxiliaryEq" (formula "10"))
                                    (rule "applyEq" (formula "46") (term "1,0") (ifseqformula "9"))
                                    (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "1"))
                                    (rule "eqSymm" (formula "9"))
                                    (rule "close" (formula "41") (ifseqformula "9"))
                                 )
                                 (branch "o_2 = s_1 FALSE"
                                    (rule "applyEqReverse" (formula "6") (term "0,0,0,0,0") (ifseqformula "9"))
                                    (rule "applyEqReverse" (formula "10") (term "0,0,0,1,1,0,0") (ifseqformula "9"))
                                    (rule "hideAuxiliaryEq" (formula "9"))
                                    (rule "replace_known_right" (formula "8") (term "1,0,0") (ifseqformula "37"))
                                    (builtin "One Step Simplification" (formula "8"))
                                    (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                    (rule "hideAuxiliaryEq" (formula "8"))
                                    (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "36"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "33"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "32"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "31"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "commute_and" (formula "1") (term "0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "38"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "cut_direct" (formula "16") (term "1"))
                                    (branch "CUT: result_0 = null TRUE"
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "replace_known_left" (formula "15") (term "0,1,0,1") (ifseqformula "16"))
                                       (builtin "One Step Simplification" (formula "15"))
                                       (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "15"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "15"))
                                       (builtin "One Step Simplification" (formula "11"))
                                       (rule "true_left" (formula "11"))
                                       (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "14"))
                                       (rule "applyEq" (formula "20") (term "3,0,0,0") (ifseqformula "14"))
                                       (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "17") (term "0") (ifseqformula "12"))
                                       (rule "qeq_literals" (formula "17"))
                                       (rule "closeFalse" (formula "17"))
                                    )
                                    (branch "CUT: result_0 = null FALSE"
                                       (builtin "One Step Simplification" (formula "16"))
                                       (rule "notLeft" (formula "16"))
                                       (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "26"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "27"))
                                       (builtin "One Step Simplification" (formula "12"))
                                       (rule "replace_known_right" (formula "15") (term "0,1,0,1") (ifseqformula "27"))
                                       (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "26")) (ifInst ""  (formula "12")))
                                       (rule "closeFalse" (formula "15"))
                                    )
                                 )
                              )
                           )
                           (branch "CUT: result_1 = null FALSE"
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "replace_known_left" (formula "31") (term "0,0,0,1") (ifseqformula "29"))
                              (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "39")))
                              (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "31"))
                              (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "39")))
                              (rule "closeFalse" (formula "32"))
                           )
                        )
                        (branch "result.<created> = TRUE FALSE"
                           (rule "applyEqReverse" (formula "28") (term "0,0,0") (ifseqformula "16"))
                           (rule "applyEqReverse" (formula "28") (term "0,0,0,1,1,0,1,1,1") (ifseqformula "16"))
                           (rule "applyEqReverse" (formula "29") (term "0,0") (ifseqformula "16"))
                           (rule "applyEqReverse" (formula "28") (term "0,1,1,1,0,1,1,1") (ifseqformula "16"))
                           (rule "applyEqReverse" (formula "28") (term "1,1,0,0,0,0,1,1,1") (ifseqformula "16"))
                           (rule "applyEqReverse" (formula "28") (term "0,1,1,1,0,0,0,0,0,1,1,1") (ifseqformula "16"))
                           (rule "applyEqReverse" (formula "28") (term "0,1,0,0,1,1") (ifseqformula "16"))
                           (rule "applyEqReverse" (formula "26") (term "0,0") (ifseqformula "16"))
                           (rule "applyEqReverse" (formula "28") (term "0,0,0,0,0,1,1") (ifseqformula "16"))
                           (rule "hideAuxiliaryEq" (formula "16"))
                           (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "40"))
                           (builtin "One Step Simplification" (formula "13"))
                           (rule "applyEqReverse" (formula "32") (term "0,1,1,1,0,1,1,1") (ifseqformula "13"))
                           (rule "applyEqReverse" (formula "32") (term "0,1,1,1,0,0,0,0,0,1,1,1") (ifseqformula "13"))
                           (rule "applyEqReverse" (formula "32") (term "1,1,0,0,0,0,1,1,1") (ifseqformula "13"))
                           (rule "applyEqReverse" (formula "32") (term "0,0,0,1,1,0,1,1,1") (ifseqformula "13"))
                           (rule "applyEqReverse" (formula "33") (term "0,0") (ifseqformula "13"))
                           (rule "applyEqReverse" (formula "32") (term "0,0,0,0,0,1,1") (ifseqformula "13"))
                           (rule "applyEqReverse" (formula "32") (term "0,0,0") (ifseqformula "13"))
                           (rule "applyEqReverse" (formula "32") (term "0,1,0,0,1,1") (ifseqformula "13"))
                           (rule "hideAuxiliaryEq" (formula "13"))
                           (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "39"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "applyEq_and_gen3" (formula "10") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "10"))
                           (rule "commute_and" (formula "10") (term "0,0,0"))
                           (rule "cut_direct" (formula "29") (term "0,0"))
                           (branch "CUT: result_1 = null TRUE"
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "true_left" (formula "30"))
                              (rule "replace_known_left" (formula "31") (term "0,1,0,1") (ifseqformula "29"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "replace_known_left" (formula "32") (term "1") (ifseqformula "29"))
                              (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "31")))
                              (rule "true_left" (formula "32"))
                              (rule "applyEq" (formula "33") (term "3,0,0") (ifseqformula "29"))
                              (rule "applyEq" (formula "30") (term "0,0") (ifseqformula "29"))
                              (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "29"))
                              (rule "ifthenelse_split" (formula "26") (term "1,0,1,1"))
                              (branch "result_0.length ≥ 1 TRUE"
                                 (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "26"))
                                 (rule "leq_literals" (formula "25") (term "0"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "true_left" (formula "25"))
                                 (rule "ifthenelse_split" (formula "9") (term "0"))
                                 (branch "o_2 = s_1 TRUE"
                                    (rule "applyEqReverse" (formula "6") (term "0,0,0,0,0") (ifseqformula "10"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "applyEqReverse" (formula "11") (term "0,0,0,1,1,0,0") (ifseqformula "10"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "10"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "replace_known_left" (formula "11") (term "1,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "replace_known_left" (formula "10") (term "1,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "10"))
                                    (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "1") (term "1,2,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "47") (term "0,0,0") (ifseqformula "8"))
                                    (rule "replace_known_right" (formula "47") (term "0,0") (ifseqformula "42"))
                                    (builtin "One Step Simplification" (formula "47"))
                                    (rule "notRight" (formula "47"))
                                    (rule "applyEq" (formula "10") (term "0,1,0,0") (ifseqformula "9"))
                                    (rule "eqSymm" (formula "10") (term "1,0,0"))
                                    (rule "sortsDisjointModuloNull" (formula "10") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "10") (term "0,1,0,0") (ifseqformula "41"))
                                    (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "43")))
                                    (rule "applyEqReverse" (formula "11") (term "2,0") (ifseqformula "10"))
                                    (rule "hideAuxiliaryEq" (formula "10"))
                                    (rule "applyEq" (formula "45") (term "0,1") (ifseqformula "9"))
                                    (rule "replace_known_right" (formula "45") (term "1") (ifseqformula "42"))
                                    (builtin "One Step Simplification" (formula "45"))
                                    (rule "false_right" (formula "45"))
                                    (rule "applyEq" (formula "46") (term "1,0") (ifseqformula "9"))
                                    (rule "applyEq" (formula "45") (term "0,1") (ifseqformula "9"))
                                    (rule "replace_known_right" (formula "45") (term "1") (ifseqformula "42"))
                                    (builtin "One Step Simplification" (formula "45"))
                                    (rule "false_right" (formula "45"))
                                    (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "9"))
                                    (rule "close" (formula "43") (ifseqformula "1"))
                                 )
                                 (branch "o_2 = s_1 FALSE"
                                    (rule "applyEqReverse" (formula "10") (term "0,0,0,1,1,0,0") (ifseqformula "9"))
                                    (rule "applyEqReverse" (formula "6") (term "0,0,0,0,0") (ifseqformula "9"))
                                    (rule "hideAuxiliaryEq" (formula "9"))
                                    (rule "replace_known_right" (formula "8") (term "1,0,0") (ifseqformula "37"))
                                    (builtin "One Step Simplification" (formula "8"))
                                    (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                    (rule "hideAuxiliaryEq" (formula "8"))
                                    (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "36"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "33"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "32"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "31"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEqReverse" (formula "41") (term "1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "commute_and" (formula "1") (term "0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "39"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "cut_direct" (formula "16") (term "1"))
                                    (branch "CUT: result_0 = null TRUE"
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "replace_known_left" (formula "15") (term "0,1,0,1") (ifseqformula "16"))
                                       (builtin "One Step Simplification" (formula "15"))
                                       (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "15"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "15"))
                                       (builtin "One Step Simplification" (formula "11"))
                                       (rule "true_left" (formula "11"))
                                       (rule "applyEq" (formula "20") (term "3,0,0,0") (ifseqformula "14"))
                                       (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "14"))
                                       (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "12"))
                                       (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "16"))
                                       (rule "leq_literals" (formula "11") (term "0"))
                                       (builtin "One Step Simplification" (formula "11"))
                                       (rule "true_left" (formula "11"))
                                       (rule "cut_direct" (formula "34") (term "0,0"))
                                       (branch "CUT: o_2 = null TRUE"
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "false_right" (formula "35"))
                                          (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "applyEqRigid" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "2") (term "1,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "28"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "closeTrue" (formula "34"))
                                       )
                                       (branch "CUT: o_2 = null FALSE"
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "notRight" (formula "35"))
                                          (rule "replace_known_left" (formula "2") (term "0,0,1,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "35")))
                                          (rule "replace_known_right" (formula "33") (term "1") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "false_right" (formula "33"))
                                          (rule "replace_known_right" (formula "33") (term "1") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "false_right" (formula "33"))
                                          (rule "cut_direct" (formula "3") (term "0"))
                                          (branch "CUT: result.privateKey = null TRUE"
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "arrayLengthNotNegative" (formula "16") (term "0"))
                                             (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "17"))
                                             (rule "leq_literals" (formula "16") (term "0"))
                                             (builtin "One Step Simplification" (formula "16"))
                                             (rule "true_left" (formula "16"))
                                             (rule "arrayLengthIsAShort" (formula "16") (term "0"))
                                             (builtin "One Step Simplification" (formula "16"))
                                             (rule "true_left" (formula "16"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch " f_2 = verif.functionalities.pkisig.Signer.Log::$messages ∧ o_2 = self_1 TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "eqSymm" (formula "35"))
                                                (rule "applyEq" (formula "34") (term "0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "close" (formula "27") (ifseqformula "1"))
                                             )
                                             (branch " f_2 = verif.functionalities.pkisig.Signer.Log::$messages ∧ o_2 = self_1 FALSE"
                                                (rule "close" (formula "35") (ifseqformula "2"))
                                             )
                                          )
                                          (branch "CUT: result.privateKey = null FALSE"
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "arrayLengthIsAShort" (formula "16") (term "0"))
                                             (builtin "One Step Simplification" (formula "16"))
                                             (rule "true_left" (formula "16"))
                                             (rule "arrayLengthNotNegative" (formula "16") (term "0"))
                                             (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "17"))
                                             (rule "leq_literals" (formula "16") (term "0"))
                                             (builtin "One Step Simplification" (formula "16"))
                                             (rule "true_left" (formula "16"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch " f_2 = verif.functionalities.pkisig.Signer.Log::$messages ∧ o_2 = self_1 TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "eqSymm" (formula "36"))
                                                (rule "applyEq" (formula "26") (term "0") (ifseqformula "3"))
                                                (rule "sortsDisjointModuloNull" (formula "26"))
                                                (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "30"))
                                                (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "32")))
                                                (rule "false_right" (formula "26"))
                                                (rule "applyEq" (formula "34") (term "0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "close" (formula "27") (ifseqformula "1"))
                                             )
                                             (branch " f_2 = verif.functionalities.pkisig.Signer.Log::$messages ∧ o_2 = self_1 FALSE"
                                                (rule "close" (formula "36") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                    )
                                    (branch "CUT: result_0 = null FALSE"
                                       (builtin "One Step Simplification" (formula "16"))
                                       (rule "notLeft" (formula "16"))
                                       (rule "replace_known_right" (formula "15") (term "0,0") (ifseqformula "26"))
                                       (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "27")))
                                       (rule "andLeft" (formula "15"))
                                       (rule "andLeft" (formula "16"))
                                       (rule "notLeft" (formula "15"))
                                       (rule "orRight" (formula "27"))
                                       (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "29"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "30"))
                                       (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "27")) (ifInst ""  (formula "28")))
                                       (rule "closeFalse" (formula "12"))
                                    )
                                 )
                              )
                              (branch "result_0.length ≥ 1 FALSE"
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "inEqSimp_geqRight" (formula "38"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_antiSymm" (formula "26") (ifseqformula "1"))
                                 (rule "applyEq" (formula "1") (term "0") (ifseqformula "26"))
                                 (rule "leq_literals" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "applyEq" (formula "26") (term "0") (ifseqformula "25"))
                                 (rule "qeq_literals" (formula "26"))
                                 (rule "true_left" (formula "26"))
                                 (rule "applyEq" (formula "26") (term "1,1,1,0,1,0,0,0,1,1,1") (ifseqformula "25"))
                                 (rule "add_zero_right" (formula "26") (term "1,1,0,1,0,0,0,1,1,1"))
                                 (rule "inEqSimp_notGeq" (formula "26") (term "0,0,1,1"))
                                 (rule "mul_literals" (formula "26") (term "1,0,0,0,0,1,1"))
                                 (rule "add_literals" (formula "26") (term "0,0,0,0,1,1"))
                                 (rule "add_zero_left" (formula "26") (term "0,0,0,1,1"))
                                 (rule "ifthenelse_split" (formula "9") (term "0"))
                                 (branch "o_2 = s_1 TRUE"
                                    (rule "applyEqReverse" (formula "11") (term "0,0,0,1,1,0,0") (ifseqformula "10"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "applyEqReverse" (formula "6") (term "0,0,0,0,0") (ifseqformula "10"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "10"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "replace_known_left" (formula "11") (term "1,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "replace_known_left" (formula "10") (term "1,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "10"))
                                    (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "8"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "applyEq" (formula "9") (term "1,1,0") (ifseqformula "8"))
                                    (rule "applyEq" (formula "45") (term "0,1") (ifseqformula "8"))
                                    (rule "replace_known_right" (formula "45") (term "1") (ifseqformula "42"))
                                    (builtin "One Step Simplification" (formula "45"))
                                    (rule "false_right" (formula "45"))
                                    (rule "applyEq" (formula "46") (term "1,0,0,1") (ifseqformula "8"))
                                    (rule "replace_known_right" (formula "46") (term "0,1") (ifseqformula "43"))
                                    (builtin "One Step Simplification" (formula "46"))
                                    (rule "notRight" (formula "46"))
                                    (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "46"))
                                    (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "9"))
                                    (rule "applyEq" (formula "10") (term "0,1,0,0") (ifseqformula "9"))
                                    (rule "eqSymm" (formula "10") (term "1,0,0"))
                                    (rule "sortsDisjointModuloNull" (formula "10") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "10") (term "1,1,0,0") (ifseqformula "43"))
                                    (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "41")))
                                    (rule "applyEqReverse" (formula "11") (term "2,0") (ifseqformula "10"))
                                    (rule "hideAuxiliaryEq" (formula "10"))
                                    (rule "applyEq" (formula "46") (term "1,0") (ifseqformula "9"))
                                    (rule "applyEq" (formula "9") (term "0") (ifseqformula "1"))
                                    (rule "eqSymm" (formula "9"))
                                    (rule "close" (formula "42") (ifseqformula "9"))
                                 )
                                 (branch "o_2 = s_1 FALSE"
                                    (rule "applyEqReverse" (formula "10") (term "0,0,0,1,1,0,0") (ifseqformula "9"))
                                    (rule "applyEqReverse" (formula "6") (term "0,0,0,0,0") (ifseqformula "9"))
                                    (rule "hideAuxiliaryEq" (formula "9"))
                                    (rule "replace_known_right" (formula "8") (term "1,0,0") (ifseqformula "37"))
                                    (builtin "One Step Simplification" (formula "8"))
                                    (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                    (rule "hideAuxiliaryEq" (formula "8"))
                                    (rule "replace_known_right" (formula "7") (term "1,0,0") (ifseqformula "36"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                    (rule "hideAuxiliaryEq" (formula "7"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_right" (formula "7") (term "1,0,0") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                    (rule "hideAuxiliaryEq" (formula "7"))
                                    (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "33"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "32"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "31"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "commute_and" (formula "1") (term "0,0"))
                                    (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "39"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "cut_direct" (formula "16") (term "1"))
                                    (branch "CUT: result_0 = null TRUE"
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "true_left" (formula "17"))
                                       (rule "replace_known_left" (formula "15") (term "0,1,0,1") (ifseqformula "16"))
                                       (builtin "One Step Simplification" (formula "15"))
                                       (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "15"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "15"))
                                       (builtin "One Step Simplification" (formula "11"))
                                       (rule "true_left" (formula "11"))
                                       (rule "applyEq" (formula "20") (term "3,0,0,0") (ifseqformula "14"))
                                       (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "14"))
                                       (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "13"))
                                       (rule "applyEq" (formula "17") (term "0") (ifseqformula "12"))
                                       (rule "qeq_literals" (formula "17"))
                                       (rule "closeFalse" (formula "17"))
                                    )
                                    (branch "CUT: result_0 = null FALSE"
                                       (builtin "One Step Simplification" (formula "16"))
                                       (rule "notLeft" (formula "16"))
                                       (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "26"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "replace_known_right" (formula "15") (term "0,1,0,1") (ifseqformula "27"))
                                       (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "26")))
                                       (rule "andLeft" (formula "15"))
                                       (rule "andLeft" (formula "16"))
                                       (rule "notLeft" (formula "15"))
                                       (rule "orRight" (formula "27"))
                                       (rule "replace_known_right" (formula "12") (term "0,0") (ifseqformula "30"))
                                       (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "27")) (ifInst ""  (formula "28")))
                                       (rule "closeFalse" (formula "12"))
                                    )
                                 )
                              )
                           )
                           (branch "CUT: result_1 = null FALSE"
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "replace_known_left" (formula "31") (term "0,0,0,1") (ifseqformula "29"))
                              (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "39")))
                              (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "31"))
                              (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "39")))
                              (rule "closeFalse" (formula "32"))
                           )
                        )
                     )
                     (branch "result_1.length ≥ 1 FALSE"
                        (builtin "One Step Simplification" (formula "32"))
                        (rule "inEqSimp_geqRight" (formula "40"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_notGeq" (formula "33") (term "0,0,1,1"))
                        (rule "mul_literals" (formula "33") (term "1,0,0,0,0,1,1"))
                        (rule "add_literals" (formula "33") (term "0,0,0,0,1,1"))
                        (rule "add_zero_left" (formula "33") (term "0,0,0,1,1"))
                        (rule "commute_and" (formula "5") (term "0,0"))
                        (rule "commute_and" (formula "4") (term "0,0"))
                        (rule "commute_and" (formula "3") (term "0,0"))
                        (rule "commute_and" (formula "2") (term "0,0"))
                        (rule "ifthenelse_split" (formula "17") (term "0"))
                        (branch "result.<created> = TRUE TRUE"
                           (rule "applyEqReverse" (formula "31") (term "0,0") (ifseqformula "18"))
                           (rule "applyEqReverse" (formula "28") (term "0,0") (ifseqformula "18"))
                           (rule "applyEqReverse" (formula "30") (term "0,0,0,0,0,1,1") (ifseqformula "18"))
                           (rule "applyEqReverse" (formula "30") (term "0,1,0,0,1,1") (ifseqformula "18"))
                           (rule "applyEqReverse" (formula "30") (term "0,1,1,1,0,1,1,1") (ifseqformula "18"))
                           (rule "applyEqReverse" (formula "30") (term "0,0,0,1,1,0,1,1,1") (ifseqformula "18"))
                           (rule "applyEqReverse" (formula "30") (term "1,1,0,0,0,0,1,1,1") (ifseqformula "18"))
                           (rule "applyEqReverse" (formula "30") (term "0,0,0") (ifseqformula "18"))
                           (rule "applyEqReverse" (formula "30") (term "0,1,1,1,0,0,0,0,0,1,1,1") (ifseqformula "18"))
                           (rule "hideAuxiliaryEq" (formula "18"))
                           (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "17"))
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "applyEqReverse" (formula "33") (term "0,0,0") (ifseqformula "14"))
                           (rule "applyEqReverse" (formula "33") (term "0,0,0,0,1,1") (ifseqformula "14"))
                           (rule "applyEqReverse" (formula "33") (term "0,0,1,0,1,1") (ifseqformula "14"))
                           (rule "applyEqReverse" (formula "33") (term "0,1,1,1,0,1,1,1") (ifseqformula "14"))
                           (rule "applyEqReverse" (formula "33") (term "0,1,1,1,0,0,0,0,0,1,1,1") (ifseqformula "14"))
                           (rule "applyEqReverse" (formula "33") (term "1,1,0,0,0,0,1,1,1") (ifseqformula "14"))
                           (rule "applyEqReverse" (formula "34") (term "0,0") (ifseqformula "14"))
                           (rule "applyEqReverse" (formula "33") (term "0,0,0,1,1,0,1,1,1") (ifseqformula "14"))
                           (rule "hideAuxiliaryEq" (formula "14"))
                           (rule "replace_known_left" (formula "23") (term "0") (ifseqformula "16"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "true_left" (formula "23"))
                           (rule "applyEq_and_gen3" (formula "11") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "11"))
                           (rule "commute_and" (formula "11") (term "0,0,0"))
                           (rule "cut_direct" (formula "30") (term "0,0"))
                           (branch "CUT: result_1 = null TRUE"
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "true_left" (formula "31"))
                              (rule "replace_known_left" (formula "32") (term "1") (ifseqformula "30"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "true_left" (formula "32"))
                              (rule "replace_known_left" (formula "31") (term "0,1,0,1") (ifseqformula "30"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "30"))
                              (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "30"))
                              (rule "applyEq" (formula "33") (term "3,0,0") (ifseqformula "30"))
                              (rule "ifthenelse_split" (formula "27") (term "1,0,1,1"))
                              (branch "result_0.length ≥ 1 TRUE"
                                 (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "27"))
                                 (rule "leq_literals" (formula "26") (term "0"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "true_left" (formula "26"))
                                 (rule "ifthenelse_split" (formula "10") (term "0"))
                                 (branch "o_2 = s_1 TRUE"
                                    (rule "applyEqReverse" (formula "7") (term "0,0,0,0,0") (ifseqformula "11"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "applyEqReverse" (formula "12") (term "0,0,0,1,1,0,0") (ifseqformula "11"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                    (rule "hideAuxiliaryEq" (formula "11"))
                                    (rule "hideAuxiliaryEq" (formula "7"))
                                    (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "replace_known_left" (formula "12") (term "1,0,0") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "8"))
                                    (rule "replace_known_left" (formula "11") (term "1,0,0") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "applyEq" (formula "46") (term "0,0,0") (ifseqformula "9"))
                                    (rule "replace_known_right" (formula "46") (term "0,0") (ifseqformula "41"))
                                    (builtin "One Step Simplification" (formula "46"))
                                    (rule "notRight" (formula "46"))
                                    (rule "applyEq" (formula "45") (term "0,1") (ifseqformula "10"))
                                    (rule "replace_known_right" (formula "45") (term "1") (ifseqformula "42"))
                                    (builtin "One Step Simplification" (formula "45"))
                                    (rule "false_right" (formula "45"))
                                    (rule "applyEq" (formula "45") (term "0,1") (ifseqformula "10"))
                                    (rule "replace_known_right" (formula "45") (term "1") (ifseqformula "42"))
                                    (builtin "One Step Simplification" (formula "45"))
                                    (rule "false_right" (formula "45"))
                                    (rule "applyEq" (formula "45") (term "1,0") (ifseqformula "10"))
                                    (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "10"))
                                    (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "10"))
                                    (rule "applyEq" (formula "11") (term "0,1,0,0") (ifseqformula "10"))
                                    (rule "eqSymm" (formula "11") (term "1,0,0"))
                                    (rule "sortsDisjointModuloNull" (formula "11") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "11") (term "1,1,0,0") (ifseqformula "42"))
                                    (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "40")))
                                    (rule "applyEqReverse" (formula "12") (term "2,0") (ifseqformula "11"))
                                    (rule "hideAuxiliaryEq" (formula "11"))
                                    (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "10"))
                                    (rule "close" (formula "42") (ifseqformula "1"))
                                 )
                                 (branch "o_2 = s_1 FALSE"
                                    (rule "applyEqReverse" (formula "7") (term "0,0,0,0,0") (ifseqformula "10"))
                                    (rule "applyEqReverse" (formula "11") (term "0,0,0,1,1,0,0") (ifseqformula "10"))
                                    (rule "hideAuxiliaryEq" (formula "10"))
                                    (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "37"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "36"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "33"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "32"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "31"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "commute_and" (formula "2") (term "0,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "38"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "cut_direct" (formula "17") (term "1"))
                                    (branch "CUT: result_0 = null TRUE"
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "replace_known_left" (formula "16") (term "0,1,0,1") (ifseqformula "17"))
                                       (builtin "One Step Simplification" (formula "16"))
                                       (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "16"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "16"))
                                       (builtin "One Step Simplification" (formula "12"))
                                       (rule "true_left" (formula "12"))
                                       (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "14"))
                                       (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "15"))
                                       (rule "applyEq" (formula "20") (term "3,0,0,0") (ifseqformula "15"))
                                       (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "13"))
                                       (rule "qeq_literals" (formula "1") (term "0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "CUT: result_0 = null FALSE"
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "notLeft" (formula "17"))
                                       (rule "replace_known_right" (formula "16") (term "0,1,0,1") (ifseqformula "27"))
                                       (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "26")))
                                       (rule "andLeft" (formula "16"))
                                       (rule "andLeft" (formula "17"))
                                       (rule "notLeft" (formula "16"))
                                       (rule "orRight" (formula "27"))
                                       (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "29"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "replace_known_right" (formula "13") (term "1,0") (ifseqformula "27"))
                                       (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "30")) (ifInst ""  (formula "28")))
                                       (rule "closeFalse" (formula "13"))
                                    )
                                 )
                              )
                              (branch "result_0.length ≥ 1 FALSE"
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "inEqSimp_geqRight" (formula "38"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_antiSymm" (formula "27") (ifseqformula "1"))
                                 (rule "applyEq" (formula "1") (term "0") (ifseqformula "27"))
                                 (rule "leq_literals" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "applyEq" (formula "27") (term "0") (ifseqformula "26"))
                                 (rule "qeq_literals" (formula "27"))
                                 (rule "true_left" (formula "27"))
                                 (rule "applyEq" (formula "27") (term "1,1,1,0,1,0,0,0,1,1,1") (ifseqformula "26"))
                                 (rule "add_zero_right" (formula "27") (term "1,1,0,1,0,0,0,1,1,1"))
                                 (rule "inEqSimp_notGeq" (formula "27") (term "0,0,1,1"))
                                 (rule "mul_literals" (formula "27") (term "1,0,0,0,0,1,1"))
                                 (rule "add_literals" (formula "27") (term "0,0,0,0,1,1"))
                                 (rule "add_zero_left" (formula "27") (term "0,0,0,1,1"))
                                 (rule "ifthenelse_split" (formula "10") (term "0"))
                                 (branch "o_2 = s_1 TRUE"
                                    (rule "applyEqReverse" (formula "12") (term "0,0,0,1,1,0,0") (ifseqformula "11"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "applyEqReverse" (formula "7") (term "0,0,0,0,0") (ifseqformula "11"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                    (rule "hideAuxiliaryEq" (formula "11"))
                                    (rule "hideAuxiliaryEq" (formula "7"))
                                    (rule "replace_known_left" (formula "12") (term "1,0,0") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "8"))
                                    (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "replace_known_left" (formula "11") (term "1,0,0") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "9"))
                                    (rule "applyEq" (formula "10") (term "0,1,0,0") (ifseqformula "9"))
                                    (rule "eqSymm" (formula "10") (term "1,0,0"))
                                    (rule "sortsDisjointModuloNull" (formula "10") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "10") (term "0,1,0,0") (ifseqformula "39"))
                                    (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "41")))
                                    (rule "applyEqReverse" (formula "11") (term "2,0") (ifseqformula "10"))
                                    (rule "hideAuxiliaryEq" (formula "10"))
                                    (rule "applyEq" (formula "45") (term "1,0,0,1") (ifseqformula "9"))
                                    (rule "replace_known_right" (formula "45") (term "0,1") (ifseqformula "41"))
                                    (builtin "One Step Simplification" (formula "45"))
                                    (rule "notRight" (formula "45"))
                                    (rule "replace_known_left" (formula "44") (term "1") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "44"))
                                    (rule "replace_known_left" (formula "45") (term "1") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "45"))
                                    (rule "applyEq" (formula "46") (term "1,0") (ifseqformula "10"))
                                    (rule "applyEq" (formula "10") (term "0") (ifseqformula "1"))
                                    (rule "eqSymm" (formula "10"))
                                    (rule "close" (formula "41") (ifseqformula "10"))
                                 )
                                 (branch "o_2 = s_1 FALSE"
                                    (rule "applyEqReverse" (formula "11") (term "0,0,0,1,1,0,0") (ifseqformula "10"))
                                    (rule "applyEqReverse" (formula "7") (term "0,0,0,0,0") (ifseqformula "10"))
                                    (rule "hideAuxiliaryEq" (formula "10"))
                                    (rule "replace_known_right" (formula "11") (term "1,0,0") (ifseqformula "37"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "applyEqReverse" (formula "12") (term "2,0") (ifseqformula "11"))
                                    (rule "hideAuxiliaryEq" (formula "11"))
                                    (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "36"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "replace_known_right" (formula "8") (term "1,0,0") (ifseqformula "33"))
                                    (builtin "One Step Simplification" (formula "8"))
                                    (rule "applyEqReverse" (formula "44") (term "1") (ifseqformula "8"))
                                    (rule "hideAuxiliaryEq" (formula "8"))
                                    (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "32"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "31"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "commute_and" (formula "2") (term "0,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "38"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "cut_direct" (formula "17") (term "1"))
                                    (branch "CUT: result_0 = null TRUE"
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "17"))
                                       (builtin "One Step Simplification" (formula "13"))
                                       (rule "true_left" (formula "13"))
                                       (rule "replace_known_left" (formula "15") (term "0,1,0,1") (ifseqformula "16"))
                                       (builtin "One Step Simplification" (formula "15"))
                                       (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "15"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "14"))
                                       (rule "applyEq" (formula "20") (term "3,0,0,0") (ifseqformula "15"))
                                       (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "15"))
                                       (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                       (rule "qeq_literals" (formula "12"))
                                       (rule "true_left" (formula "12"))
                                       (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "12"))
                                       (rule "leq_literals" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "cut_direct" (formula "33") (term "0,0"))
                                       (branch "CUT: o_2 = null TRUE"
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "false_right" (formula "34"))
                                          (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "replace_known_left" (formula "32") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "2") (term "1,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "27"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "34")))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                       (branch "CUT: o_2 = null FALSE"
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "notRight" (formula "34"))
                                          (rule "replace_known_right" (formula "2") (term "0,0,1,0,0") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                                          (rule "replace_known_right" (formula "33") (term "1") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "false_right" (formula "33"))
                                          (rule "replace_known_right" (formula "32") (term "1") (ifseqformula "33"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "false_right" (formula "32"))
                                          (rule "ifthenelse_split" (formula "2") (term "0"))
                                          (branch " f_2 = verif.functionalities.pkisig.Signer.Log::$messages ∧ o_2 = self_1 TRUE"
                                             (rule "andLeft" (formula "2"))
                                             (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "eqSymm" (formula "34"))
                                             (rule "applyEq" (formula "33") (term "0") (ifseqformula "3"))
                                             (rule "applyEq" (formula "25") (term "0") (ifseqformula "3"))
                                             (rule "sortsDisjointModuloNull" (formula "25"))
                                             (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "28"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "30")))
                                             (rule "false_right" (formula "25"))
                                             (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                             (rule "close" (formula "25") (ifseqformula "1"))
                                          )
                                          (branch " f_2 = verif.functionalities.pkisig.Signer.Log::$messages ∧ o_2 = self_1 FALSE"
                                             (rule "close" (formula "34") (ifseqformula "2"))
                                          )
                                       )
                                    )
                                    (branch "CUT: result_0 = null FALSE"
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "notLeft" (formula "17"))
                                       (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "26"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "26"))
                                       (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "27")))
                                       (rule "andLeft" (formula "16"))
                                       (rule "notLeft" (formula "16"))
                                       (rule "andLeft" (formula "16"))
                                       (rule "orRight" (formula "27"))
                                       (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "30"))
                                       (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "27")) (ifInst ""  (formula "28")))
                                       (rule "closeFalse" (formula "13"))
                                    )
                                 )
                              )
                           )
                           (branch "CUT: result_1 = null FALSE"
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "replace_known_right" (formula "31") (term "0,1,0,1") (ifseqformula "39"))
                              (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "30")))
                              (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "31"))
                              (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "39")))
                              (rule "closeFalse" (formula "32"))
                           )
                        )
                        (branch "result.<created> = TRUE FALSE"
                           (rule "applyEqReverse" (formula "29") (term "0,0,0,1,1,0,1,1,1") (ifseqformula "17"))
                           (rule "applyEqReverse" (formula "29") (term "1,1,0,0,0,0,1,1,1") (ifseqformula "17"))
                           (rule "applyEqReverse" (formula "29") (term "0,1,1,1,0,1,1,1") (ifseqformula "17"))
                           (rule "applyEqReverse" (formula "29") (term "0,0,0") (ifseqformula "17"))
                           (rule "applyEqReverse" (formula "30") (term "0,0") (ifseqformula "17"))
                           (rule "applyEqReverse" (formula "27") (term "0,0") (ifseqformula "17"))
                           (rule "applyEqReverse" (formula "29") (term "0,0,0,0,0,1,1") (ifseqformula "17"))
                           (rule "applyEqReverse" (formula "29") (term "0,1,1,1,0,0,0,0,0,1,1,1") (ifseqformula "17"))
                           (rule "applyEqReverse" (formula "29") (term "0,1,0,0,1,1") (ifseqformula "17"))
                           (rule "hideAuxiliaryEq" (formula "17"))
                           (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "40"))
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "applyEqReverse" (formula "32") (term "0,0,0,1,1,0,1,1,1") (ifseqformula "14"))
                           (rule "applyEqReverse" (formula "32") (term "0,1,1,1,0,0,0,0,0,1,1,1") (ifseqformula "14"))
                           (rule "applyEqReverse" (formula "32") (term "1,1,0,0,0,0,1,1,1") (ifseqformula "14"))
                           (rule "applyEqReverse" (formula "32") (term "0,0,0,0,1,1") (ifseqformula "14"))
                           (rule "applyEqReverse" (formula "33") (term "0,0") (ifseqformula "14"))
                           (rule "applyEqReverse" (formula "32") (term "0,0,1,0,1,1") (ifseqformula "14"))
                           (rule "applyEqReverse" (formula "32") (term "0,1,1,1,0,1,1,1") (ifseqformula "14"))
                           (rule "applyEqReverse" (formula "32") (term "0,0,0") (ifseqformula "14"))
                           (rule "hideAuxiliaryEq" (formula "14"))
                           (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "39"))
                           (builtin "One Step Simplification" (formula "22"))
                           (rule "applyEq_and_gen3" (formula "11") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "11"))
                           (rule "commute_and" (formula "11") (term "0,0,0"))
                           (rule "cut_direct" (formula "30") (term "0,0"))
                           (branch "CUT: result_1 = null TRUE"
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "true_left" (formula "31"))
                              (rule "replace_known_left" (formula "32") (term "1") (ifseqformula "30"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "true_left" (formula "32"))
                              (rule "replace_known_left" (formula "31") (term "0,1,0,1") (ifseqformula "30"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "30"))
                              (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "30"))
                              (rule "applyEq" (formula "33") (term "3,0,0") (ifseqformula "30"))
                              (rule "ifthenelse_split" (formula "27") (term "1,0,1,1"))
                              (branch "result_0.length ≥ 1 TRUE"
                                 (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "27"))
                                 (rule "leq_literals" (formula "26") (term "0"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "true_left" (formula "26"))
                                 (rule "ifthenelse_split" (formula "10") (term "0"))
                                 (branch "o_2 = s_1 TRUE"
                                    (rule "applyEqReverse" (formula "12") (term "0,0,0,1,1,0,0") (ifseqformula "11"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "applyEqReverse" (formula "7") (term "0,0,0,0,0") (ifseqformula "11"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                    (rule "hideAuxiliaryEq" (formula "11"))
                                    (rule "hideAuxiliaryEq" (formula "7"))
                                    (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "replace_known_left" (formula "12") (term "1,0,0") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "8"))
                                    (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "replace_known_left" (formula "11") (term "1,0,0") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "9"))
                                    (rule "applyEq" (formula "47") (term "1,0,0,1") (ifseqformula "9"))
                                    (rule "replace_known_right" (formula "47") (term "0,1") (ifseqformula "43"))
                                    (builtin "One Step Simplification" (formula "47"))
                                    (rule "notRight" (formula "47"))
                                    (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "46"))
                                    (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "47"))
                                    (rule "applyEq" (formula "48") (term "1,0") (ifseqformula "10"))
                                    (rule "applyEq" (formula "11") (term "0,1,0,0") (ifseqformula "10"))
                                    (rule "eqSymm" (formula "11") (term "1,0,0"))
                                    (rule "sortsDisjointModuloNull" (formula "11") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "11") (term "0,1,0,0") (ifseqformula "41"))
                                    (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "43")))
                                    (rule "applyEqReverse" (formula "12") (term "2,0") (ifseqformula "11"))
                                    (rule "hideAuxiliaryEq" (formula "11"))
                                    (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "10"))
                                    (rule "applyEq" (formula "10") (term "0") (ifseqformula "1"))
                                    (rule "eqSymm" (formula "10"))
                                    (rule "close" (formula "42") (ifseqformula "10"))
                                 )
                                 (branch "o_2 = s_1 FALSE"
                                    (rule "applyEqReverse" (formula "11") (term "0,0,0,1,1,0,0") (ifseqformula "10"))
                                    (rule "applyEqReverse" (formula "7") (term "0,0,0,0,0") (ifseqformula "10"))
                                    (rule "hideAuxiliaryEq" (formula "10"))
                                    (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "37"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "replace_known_right" (formula "8") (term "1,0,0") (ifseqformula "36"))
                                    (builtin "One Step Simplification" (formula "8"))
                                    (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                    (rule "hideAuxiliaryEq" (formula "8"))
                                    (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "33"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "replace_known_right" (formula "7") (term "1,0,0") (ifseqformula "32"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "applyEqReverse" (formula "44") (term "1") (ifseqformula "7"))
                                    (rule "hideAuxiliaryEq" (formula "7"))
                                    (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "31"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "applyEqReverse" (formula "43") (term "1") (ifseqformula "6"))
                                    (rule "hideAuxiliaryEq" (formula "6"))
                                    (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "commute_and" (formula "2") (term "0,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "39"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "cut_direct" (formula "17") (term "1"))
                                    (branch "CUT: result_0 = null TRUE"
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "replace_known_left" (formula "16") (term "0,1,0,1") (ifseqformula "17"))
                                       (builtin "One Step Simplification" (formula "16"))
                                       (rule "replace_known_left" (formula "4") (term "0") (ifseqformula "16"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "16"))
                                       (builtin "One Step Simplification" (formula "12"))
                                       (rule "true_left" (formula "12"))
                                       (rule "applyEq" (formula "20") (term "3,0,0,0") (ifseqformula "15"))
                                       (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "15"))
                                       (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "14"))
                                       (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "13"))
                                       (rule "qeq_literals" (formula "1") (term "0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "CUT: result_0 = null FALSE"
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "notLeft" (formula "17"))
                                       (rule "replace_known_right" (formula "16") (term "0,1,0,1") (ifseqformula "27"))
                                       (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "26")))
                                       (rule "andLeft" (formula "16"))
                                       (rule "andLeft" (formula "17"))
                                       (rule "notLeft" (formula "16"))
                                       (rule "orRight" (formula "27"))
                                       (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "29"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_right" (formula "13") (term "1,0") (ifseqformula "27"))
                                       (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "30")) (ifInst ""  (formula "28")))
                                       (rule "closeFalse" (formula "13"))
                                    )
                                 )
                              )
                              (branch "result_0.length ≥ 1 FALSE"
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "inEqSimp_geqRight" (formula "38"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_antiSymm" (formula "27") (ifseqformula "1"))
                                 (rule "applyEq" (formula "28") (term "0") (ifseqformula "27"))
                                 (rule "qeq_literals" (formula "28"))
                                 (rule "true_left" (formula "28"))
                                 (rule "applyEq" (formula "1") (term "0") (ifseqformula "27"))
                                 (rule "leq_literals" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "applyEq" (formula "27") (term "1,1,1,0,1,0,0,0,1,1,1") (ifseqformula "26"))
                                 (rule "add_literals" (formula "27") (term "1,1,0,1,0,0,0,1,1,1"))
                                 (rule "inEqSimp_notGeq" (formula "27") (term "0,0,1,1"))
                                 (rule "mul_literals" (formula "27") (term "1,0,0,0,0,1,1"))
                                 (rule "add_literals" (formula "27") (term "0,0,0,0,1,1"))
                                 (rule "add_zero_left" (formula "27") (term "0,0,0,1,1"))
                                 (rule "ifthenelse_split" (formula "10") (term "0"))
                                 (branch "o_2 = s_1 TRUE"
                                    (rule "applyEqReverse" (formula "12") (term "0,0,0,1,1,0,0") (ifseqformula "11"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "applyEqReverse" (formula "7") (term "0,0,0,0,0") (ifseqformula "11"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                    (rule "hideAuxiliaryEq" (formula "11"))
                                    (rule "hideAuxiliaryEq" (formula "7"))
                                    (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "replace_known_left" (formula "12") (term "1,0,0") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "12"))
                                    (rule "replace_known_left" (formula "8") (term "1,0,0") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "8"))
                                    (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "replace_known_left" (formula "11") (term "1,0,0") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "9"))
                                    (rule "applyEq" (formula "10") (term "1,1,0") (ifseqformula "9"))
                                    (rule "applyEq" (formula "48") (term "1,0") (ifseqformula "9"))
                                    (rule "applyEq" (formula "47") (term "1,0,0,1") (ifseqformula "9"))
                                    (rule "replace_known_right" (formula "47") (term "0,1") (ifseqformula "43"))
                                    (builtin "One Step Simplification" (formula "47"))
                                    (rule "notRight" (formula "47"))
                                    (rule "replace_known_left" (formula "46") (term "1") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "46"))
                                    (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "47"))
                                    (rule "applyEq" (formula "11") (term "0,1,0,0") (ifseqformula "10"))
                                    (rule "eqSymm" (formula "11") (term "1,0,0"))
                                    (rule "sortsDisjointModuloNull" (formula "11") (term "1,0,0"))
                                    (rule "replace_known_right" (formula "11") (term "1,1,0,0") (ifseqformula "43"))
                                    (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "41")))
                                    (rule "applyEqReverse" (formula "12") (term "2,0") (ifseqformula "11"))
                                    (rule "hideAuxiliaryEq" (formula "11"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "10"))
                                    (rule "close" (formula "42") (ifseqformula "1"))
                                 )
                                 (branch "o_2 = s_1 FALSE"
                                    (rule "applyEqReverse" (formula "7") (term "0,0,0,0,0") (ifseqformula "10"))
                                    (rule "applyEqReverse" (formula "11") (term "0,0,0,1,1,0,0") (ifseqformula "10"))
                                    (rule "hideAuxiliaryEq" (formula "10"))
                                    (rule "replace_known_right" (formula "8") (term "1,0,0") (ifseqformula "37"))
                                    (builtin "One Step Simplification" (formula "8"))
                                    (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                    (rule "hideAuxiliaryEq" (formula "8"))
                                    (rule "replace_known_right" (formula "11") (term "1,0,0") (ifseqformula "36"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "applyEqReverse" (formula "48") (term "1") (ifseqformula "11"))
                                    (rule "hideAuxiliaryEq" (formula "11"))
                                    (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "35"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_right" (formula "4") (term "1,0,0") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "33"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "32"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "31"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "replace_known_right" (formula "5") (term "1,0,0") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "applyEqReverse" (formula "42") (term "1") (ifseqformula "5"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "commute_and" (formula "2") (term "0,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "39"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "cut_direct" (formula "17") (term "1"))
                                    (branch "CUT: result_0 = null TRUE"
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "replace_known_left" (formula "16") (term "0,1,0,1") (ifseqformula "17"))
                                       (builtin "One Step Simplification" (formula "16"))
                                       (rule "replace_known_left" (formula "4") (term "0") (ifseqformula "16"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "16"))
                                       (builtin "One Step Simplification" (formula "12"))
                                       (rule "true_left" (formula "12"))
                                       (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "14"))
                                       (rule "applyEq" (formula "20") (term "3,0,0,0") (ifseqformula "15"))
                                       (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "15"))
                                       (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                       (rule "qeq_literals" (formula "12"))
                                       (rule "true_left" (formula "12"))
                                       (rule "applyEq" (formula "1") (term "0") (ifseqformula "12"))
                                       (rule "leq_literals" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "cut_direct" (formula "34") (term "0,0"))
                                       (branch "CUT: o_2 = null TRUE"
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "false_right" (formula "35"))
                                          (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "replace_known_left" (formula "33") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "replace_known_left" (formula "34") (term "1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "applyEqRigid" (formula "24") (term "0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "24"))
                                          (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "2") (term "0,1,0,0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "2") (term "1,0,0"))
                                          (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "27"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "eqSymm" (formula "33"))
                                          (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "closeTrue" (formula "33"))
                                       )
                                       (branch "CUT: o_2 = null FALSE"
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "notRight" (formula "35"))
                                          (rule "replace_known_right" (formula "2") (term "0,0,1,0,0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                                          (rule "replace_known_right" (formula "34") (term "1") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "false_right" (formula "34"))
                                          (rule "replace_known_right" (formula "33") (term "1") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "false_right" (formula "33"))
                                          (rule "cut_direct" (formula "3") (term "0"))
                                          (branch "CUT: result.privateKey = null TRUE"
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch " f_2 = verif.functionalities.pkisig.Signer.Log::$messages ∧ o_2 = self_1 TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "36") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "eqSymm" (formula "35"))
                                                (rule "applyEq" (formula "25") (term "0") (ifseqformula "3"))
                                                (rule "sortsDisjointModuloNull" (formula "25"))
                                                (rule "replace_known_right" (formula "25") (term "1") (ifseqformula "31"))
                                                (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "29")))
                                                (rule "false_right" (formula "25"))
                                                (rule "applyEq" (formula "33") (term "0") (ifseqformula "3"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "close" (formula "26") (ifseqformula "1"))
                                             )
                                             (branch " f_2 = verif.functionalities.pkisig.Signer.Log::$messages ∧ o_2 = self_1 FALSE"
                                                (rule "close" (formula "35") (ifseqformula "2"))
                                             )
                                          )
                                          (branch "CUT: result.privateKey = null FALSE"
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch " f_2 = verif.functionalities.pkisig.Signer.Log::$messages ∧ o_2 = self_1 TRUE"
                                                (rule "andLeft" (formula "2"))
                                                (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "eqSymm" (formula "36"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                                (rule "close" (formula "28") (ifseqformula "1"))
                                             )
                                             (branch " f_2 = verif.functionalities.pkisig.Signer.Log::$messages ∧ o_2 = self_1 FALSE"
                                                (rule "close" (formula "36") (ifseqformula "2"))
                                             )
                                          )
                                       )
                                    )
                                    (branch "CUT: result_0 = null FALSE"
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "notLeft" (formula "17"))
                                       (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "26"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "27"))
                                       (builtin "One Step Simplification" (formula "13"))
                                       (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "26"))
                                       (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "13")) (ifInst ""  (formula "27")))
                                       (rule "closeFalse" (formula "16"))
                                    )
                                 )
                              )
                           )
                           (branch "CUT: result_1 = null FALSE"
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "replace_known_right" (formula "31") (term "0,1,0,1") (ifseqformula "39"))
                              (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "30")))
                              (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "31"))
                              (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "39")))
                              (rule "closeFalse" (formula "32"))
                           )
                        )
                     )
                  )
                  (branch "Null Reference (self = null)"
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "Exceptional Post (Log)"
                  (builtin "One Step Simplification" (formula "21"))
                  (builtin "One Step Simplification" (formula "25"))
                  (rule "andLeft" (formula "21"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "1,0,0") (ifseqformula "21"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "1,1,0,1,0") (ifseqformula "21"))
                  (rule "andLeft" (formula "22"))
                  (rule "andLeft" (formula "22"))
                  (rule "andLeft" (formula "24"))
                  (rule "andLeft" (formula "23"))
                  (rule "andLeft" (formula "22"))
                  (rule "andLeft" (formula "26"))
                  (rule "andLeft" (formula "24"))
                  (rule "notLeft" (formula "22"))
                  (rule "close" (formula "29") (ifseqformula "28"))
               )
               (branch "Pre (Log)"
                  (builtin "One Step Simplification" (formula "23"))
                  (rule "wellFormedStoreObject" (formula "23"))
                  (builtin "One Step Simplification" (formula "23"))
                  (rule "orRight" (formula "23"))
                  (rule "dismissNonSelectedField" (formula "24") (term "0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (ifseqformula "7"))
                  (rule "orRight" (formula "24"))
                  (rule "replace_known_right" (formula "18") (term "1,0,0,0,1") (ifseqformula "25"))
                  (builtin "One Step Simplification" (formula "18"))
                  (rule "replace_known_right" (formula "17") (term "1") (ifseqformula "25"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "dismissNonSelectedField" (formula "24") (term "0"))
                  (rule "dismissNonSelectedField" (formula "24") (term "0"))
                  (rule "dismissNonSelectedField" (formula "24") (term "0"))
                  (rule "dismissNonSelectedField" (formula "24") (term "0"))
                  (rule "replaceKnownSelect_taclet00000_10" (formula "24") (term "0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet00000_11" (formula "24") (term "0"))
                  (rule "replace_known_right" (formula "17") (term "1") (ifseqformula "24"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "replace_known_right" (formula "18") (term "0,0,0,1") (ifseqformula "24"))
                  (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "17")))
                  (rule "replace_known_left" (formula "23") (term "1") (ifseqformula "17"))
                  (builtin "One Step Simplification" (formula "23"))
                  (rule "replace_known_left" (formula "19") (term "1") (ifseqformula "17"))
                  (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "18")))
                  (rule "true_left" (formula "19"))
                  (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "17"))
                  (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "17"))
                  (rule "applyEq" (formula "1") (term "1") (ifseqformula "18"))
                  (rule "ifEqualsNull" (formula "1"))
                  (rule "wellFormedStoreObject" (formula "22"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "1") (ifseqformula "7"))
                  (rule "wellFormedAnonEQ" (formula "22") (term "0,0") (ifseqformula "7"))
                  (rule "orRight" (formula "22"))
                  (rule "orRight" (formula "23"))
                  (rule "replace_known_right" (formula "14") (term "1,0,0,0,1") (ifseqformula "24"))
                  (builtin "One Step Simplification" (formula "14"))
                  (rule "replace_known_right" (formula "11") (term "1") (ifseqformula "24"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "replace_known_left" (formula "22") (term "1,0") (ifseqformula "6"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "dismissNonSelectedField" (formula "23") (term "0"))
                  (rule "dismissNonSelectedField" (formula "23") (term "0"))
                  (rule "dismissNonSelectedField" (formula "23") (term "0"))
                  (rule "dismissNonSelectedField" (formula "23") (term "0"))
                  (rule "replaceKnownSelect_taclet000_5" (formula "23") (term "0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet000_6" (formula "23") (term "0"))
                  (rule "replace_known_right" (formula "14") (term "0,0,0,1") (ifseqformula "23"))
                  (builtin "One Step Simplification" (formula "14"))
                  (rule "replace_known_right" (formula "11") (term "1") (ifseqformula "23"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "replace_known_left" (formula "15") (term "1") (ifseqformula "11"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "true_left" (formula "15"))
                  (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "11"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "replace_known_left" (formula "14") (term "0,0,1") (ifseqformula "11"))
                  (builtin "One Step Simplification" (formula "14"))
                  (rule "applyEqRigid" (formula "12") (term "0,0") (ifseqformula "14"))
                  (rule "applyEqRigid" (formula "2") (term "1") (ifseqformula "14"))
                  (rule "ifEqualsNull" (formula "2"))
                  (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "11"))
                  (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "11"))
                  (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "11"))
                  (rule "wellFormedStoreObject" (formula "20"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "orRight" (formula "20"))
                  (rule "dismissNonSelectedField" (formula "21") (term "0"))
                  (rule "dismissNonSelectedField" (formula "21") (term "0"))
                  (rule "dismissNonSelectedField" (formula "21") (term "0"))
                  (rule "wellFormedStoreObject" (formula "20"))
                  (rule "typeEqDerived2" (formula "20") (term "0,1,1") (ifseqformula "11"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "orRight" (formula "20"))
                  (rule "dismissNonSelectedField" (formula "21") (term "0"))
                  (rule "dismissNonSelectedField" (formula "21") (term "0"))
                  (rule "wellFormedStoreObject" (formula "20"))
                  (rule "typeEqDerived2" (formula "20") (term "0,1,1") (ifseqformula "11"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "wellFormedStorePrimitive" (formula "20") (term "0"))
                  (rule "wellFormedCreate" (formula "20") (term "0"))
                  (rule "orRight" (formula "20"))
                  (rule "close" (formula "20") (ifseqformula "4"))
               )
            )
            (branch "Exceptional Post (copyOf)"
               (builtin "One Step Simplification" (formula "18"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "andLeft" (formula "14"))
               (rule "andLeft" (formula "14"))
               (rule "andLeft" (formula "16"))
               (rule "notLeft" (formula "14"))
               (rule "eqSymm" (formula "15") (term "1,0,1"))
               (rule "replace_known_right" (formula "15") (term "1,1") (ifseqformula "17"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "replace_known_right" (formula "16") (term "1,1") (ifseqformula "17"))
               (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "15")))
               (rule "closeFalse" (formula "16"))
            )
            (branch "Pre (copyOf)"
               (builtin "One Step Simplification" (formula "17"))
               (rule "dismissNonSelectedField" (formula "17") (term "0,1,1"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "1,1") (ifseqformula "7"))
               (rule "dismissNonSelectedField" (formula "17") (term "0,0,1,1"))
               (rule "dismissNonSelectedField" (formula "17") (term "0,0,1,1"))
               (rule "dismissNonSelectedField" (formula "17") (term "0,0,1,1"))
               (rule "dismissNonSelectedField" (formula "17") (term "0,0,1,1"))
               (rule "wellFormedStoreObject" (formula "17") (term "0"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "1,0") (ifseqformula "7"))
               (rule "wellFormedAnonEQ" (formula "17") (term "0,0,0") (ifseqformula "7"))
               (rule "replace_known_left" (formula "17") (term "1,0,0,0") (ifseqformula "6"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "dismissNonSelectedField" (formula "17") (term "0,0,1,0"))
               (rule "dismissNonSelectedField" (formula "17") (term "0,0,1,0"))
               (rule "dismissNonSelectedField" (formula "17") (term "0,0,1,0"))
               (rule "dismissNonSelectedField" (formula "17") (term "0,0,1,0"))
               (rule "replaceKnownSelect_taclet000_5" (formula "17") (term "0,0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet000_6" (formula "17") (term "0,0,1,0"))
               (rule "wellFormedStoreObject" (formula "17") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "dismissNonSelectedField" (formula "17") (term "0,1,0,0,0"))
               (rule "dismissNonSelectedField" (formula "17") (term "0,1,0,0,0"))
               (rule "dismissNonSelectedField" (formula "17") (term "0,1,0,0,0"))
               (rule "wellFormedStoreObject" (formula "17") (term "0,0,0,0"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "dismissNonSelectedField" (formula "17") (term "0,1,0,0,0,0"))
               (rule "dismissNonSelectedField" (formula "17") (term "0,1,0,0,0,0"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "wellFormedStoreObject" (formula "17") (term "0,0,0,0"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "wellFormedStorePrimitive" (formula "17") (term "0,0,0,0,0"))
               (rule "wellFormedCreate" (formula "17") (term "0,0,0,0,0"))
               (rule "replace_known_left" (formula "17") (term "0,0,0,0,0") (ifseqformula "4"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "pullOutSelect" (formula "17") (term "0,0,1,1") (inst "selectSK=java_lang_Object_created__7"))
               (rule "simplifySelectOfCreate" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
               (rule "castDel" (formula "1") (term "1,0"))
               (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "15"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "18") (term "0,0,1,1") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "shift_paren_or" (formula "17") (term "0"))
               (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "11"))
               (builtin "One Step Simplification" (formula "17"))
               (rule "orRight" (formula "17"))
               (rule "orRight" (formula "18"))
               (rule "ifthenelse_split" (formula "2") (term "0"))
               (branch "result.<created> = TRUE TRUE"
                  (rule "applyEqReverse" (formula "13") (term "0,0,0,0,0,1,1") (ifseqformula "3"))
                  (rule "applyEqReverse" (formula "13") (term "0,0,0") (ifseqformula "3"))
                  (rule "applyEqReverse" (formula "13") (term "0,1,1,1,0,1,1,1") (ifseqformula "3"))
                  (rule "applyEqReverse" (formula "13") (term "1,1,0,0,0,0,1,1,1") (ifseqformula "3"))
                  (rule "applyEqReverse" (formula "13") (term "0,0,0,1,1,0,1,1,1") (ifseqformula "3"))
                  (rule "applyEqReverse" (formula "14") (term "0,0") (ifseqformula "3"))
                  (rule "applyEqReverse" (formula "13") (term "0,1,1,1,0,0,0,0,0,1,1,1") (ifseqformula "3"))
                  (rule "applyEqReverse" (formula "13") (term "0,1,0,0,1,1") (ifseqformula "3"))
                  (rule "hideAuxiliaryEq" (formula "3"))
                  (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "referencedObjectIsCreatedRightEQ" (formula "18") (ifseqformula "1") (ifseqformula "17"))
                  (rule "close" (formula "18") (ifseqformula "4"))
               )
               (branch "result.<created> = TRUE FALSE"
                  (rule "applyEqReverse" (formula "12") (term "0,1,0,0,1,1") (ifseqformula "2"))
                  (rule "applyEqReverse" (formula "12") (term "1,1,0,0,0,0,1,1,1") (ifseqformula "2"))
                  (rule "applyEqReverse" (formula "13") (term "0,0") (ifseqformula "2"))
                  (rule "applyEqReverse" (formula "12") (term "0,1,1,1,0,1,1,1") (ifseqformula "2"))
                  (rule "applyEqReverse" (formula "12") (term "0,1,1,1,0,0,0,0,0,1,1,1") (ifseqformula "2"))
                  (rule "applyEqReverse" (formula "12") (term "0,0,0") (ifseqformula "2"))
                  (rule "applyEqReverse" (formula "12") (term "0,0,0,0,0,1,1") (ifseqformula "2"))
                  (rule "applyEqReverse" (formula "12") (term "0,0,0,1,1,0,1,1,1") (ifseqformula "2"))
                  (rule "hideAuxiliaryEq" (formula "2"))
                  (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "referencedObjectIsCreatedRightEQ" (formula "19") (ifseqformula "1") (ifseqformula "17"))
                  (rule "close" (formula "19") (ifseqformula "5"))
               )
            )
         )
         (branch "Null Reference (keypair = null)"
            (builtin "One Step Simplification" (formula "17"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "Exceptional Post (copyOf)"
         (builtin "One Step Simplification" (formula "9"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "9") (term "1,0") (ifseqformula "6"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "9") (term "0,0,0,0,1,0,1") (ifseqformula "6"))
         (rule "andLeft" (formula "9"))
         (rule "andLeft" (formula "9"))
         (rule "andLeft" (formula "11"))
         (rule "notLeft" (formula "9"))
         (rule "eqSymm" (formula "10") (term "1,0,1"))
         (rule "replace_known_right" (formula "10") (term "1,1") (ifseqformula "12"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "replace_known_right" (formula "11") (term "1,1") (ifseqformula "12"))
         (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "10")))
         (rule "closeFalse" (formula "11"))
      )
      (branch "Pre (copyOf)"
         (builtin "One Step Simplification" (formula "12"))
         (rule "wellFormedAnonEQ" (formula "12") (term "0") (ifseqformula "6"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "12") (term "1,1") (ifseqformula "6"))
         (rule "replace_known_left" (formula "12") (term "1,0") (ifseqformula "5"))
         (builtin "One Step Simplification" (formula "12"))
         (rule "dismissNonSelectedField" (formula "12") (term "0,0,1,1"))
         (rule "dismissNonSelectedField" (formula "12") (term "0,0,1,1"))
         (rule "dismissNonSelectedField" (formula "12") (term "0,0,1,1"))
         (rule "dismissNonSelectedField" (formula "12") (term "0,0,1,1"))
         (rule "wellFormedStoreObject" (formula "12") (term "0"))
         (builtin "One Step Simplification" (formula "12"))
         (rule "dismissNonSelectedField" (formula "12") (term "0,1,0"))
         (rule "dismissNonSelectedField" (formula "12") (term "0,1,0"))
         (rule "dismissNonSelectedField" (formula "12") (term "0,1,0"))
         (rule "wellFormedStoreObject" (formula "12") (term "0,0"))
         (builtin "One Step Simplification" (formula "12"))
         (rule "dismissNonSelectedField" (formula "12") (term "0,1,0,0"))
         (rule "dismissNonSelectedField" (formula "12") (term "0,1,0,0"))
         (builtin "One Step Simplification" (formula "12"))
         (rule "wellFormedStoreObject" (formula "12") (term "0,0"))
         (builtin "One Step Simplification" (formula "12"))
         (rule "wellFormedStorePrimitive" (formula "12") (term "0,0,0"))
         (rule "wellFormedCreate" (formula "12") (term "0,0,0"))
         (rule "replace_known_left" (formula "12") (term "0,0,0") (ifseqformula "3"))
         (builtin "One Step Simplification" (formula "12"))
         (rule "orRight" (formula "12"))
         (rule "orRight" (formula "13"))
         (rule "pullOutSelect" (formula "13") (term "0") (inst "selectSK=java_lang_Object_created__5"))
         (rule "simplifySelectOfCreate" (formula "1"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")))
         (rule "castDel" (formula "1") (term "1,0"))
         (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
         (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "10"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
         (rule "applyEqReverse" (formula "14") (term "0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "ifthenelse_split" (formula "1") (term "0"))
         (branch "result.<created> = TRUE TRUE"
            (rule "referencedObjectIsCreatedRightEQ" (formula "14") (ifseqformula "2") (ifseqformula "13"))
            (rule "close" (formula "14") (ifseqformula "4"))
         )
         (branch "result.<created> = TRUE FALSE"
            (rule "referencedObjectIsCreatedRightEQ" (formula "15") (ifseqformula "1") (ifseqformula "13"))
            (rule "close" (formula "15") (ifseqformula "5"))
         )
      )
   )
   (branch "Null Reference (keypair = null)"
      (builtin "One Step Simplification" (formula "1"))
      (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "1"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "true_left" (formula "8"))
      (rule "applyEq" (formula "10") (term "0,1,0") (ifseqformula "1"))
      (rule "blockThrow" (formula "10") (term "1"))
      (rule "throwUnfold" (formula "10") (term "1") (inst "#v0=n"))
      (rule "variableDeclarationAssign" (formula "10") (term "1"))
      (rule "variableDeclaration" (formula "10") (term "1") (newnames "n"))
      (builtin "Use Operation Contract" (formula "10") (newnames "heapBefore_NullPointerException,self_0,exc_1,heapAfter_NullPointerException,anon_heap_NullPointerException") (contract "java.lang.NullPointerException[java.lang.NullPointerException::NullPointerException()].JML normal_behavior operation contract.0"))
      (branch "Post (NullPointerException)"
         (builtin "One Step Simplification" (formula "9"))
         (builtin "One Step Simplification" (formula "12"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "9") (term "0,0,1,0,1,0,1") (ifseqformula "6"))
         (rule "andLeft" (formula "9"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "10") (term "1,1,0,1,0") (ifseqformula "9"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "10") (term "0,1,1,0,1,0") (ifseqformula "6"))
         (rule "andLeft" (formula "10"))
         (rule "andLeft" (formula "10"))
         (rule "andLeft" (formula "12"))
         (rule "andLeft" (formula "11"))
         (rule "andLeft" (formula "13"))
         (rule "andLeft" (formula "11"))
         (rule "andLeft" (formula "14"))
         (rule "notLeft" (formula "11"))
         (rule "andLeft" (formula "11"))
         (rule "notLeft" (formula "11"))
         (rule "orRight" (formula "16"))
         (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "16"))
         (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "17")))
         (rule "dismissNonSelectedField" (formula "16") (term "0"))
         (rule "dismissNonSelectedField" (formula "16") (term "0"))
         (rule "dismissNonSelectedField" (formula "16") (term "0"))
         (rule "dismissNonSelectedField" (formula "16") (term "0"))
         (rule "assignment" (formula "21") (term "1"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "pullOutSelect" (formula "14") (term "0") (inst "selectSK=java_lang_Throwable_cause_0"))
         (rule "simplifySelectOfAnonEQ" (formula "14") (ifseqformula "9"))
         (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "19")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "0,1,0,0") (ifseqformula "6"))
         (rule "replace_known_right" (formula "14") (term "1,0,1,0,0") (ifseqformula "18"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "dismissNonSelectedField" (formula "14") (term "0,0,1,0,0"))
         (rule "dismissNonSelectedField" (formula "14") (term "0,0,1,0,0"))
         (rule "dismissNonSelectedField" (formula "14") (term "0,0,1,0,0"))
         (rule "dismissNonSelectedField" (formula "14") (term "0,0,1,0,0"))
         (rule "replace_known_right" (formula "14") (term "0,1,0,0") (ifseqformula "17"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "applyEqReverse" (formula "15") (term "0") (ifseqformula "14"))
         (rule "hideAuxiliaryEq" (formula "14"))
         (rule "pullOutSelect" (formula "13") (term "0") (inst "selectSK=java_lang_Throwable_message_0"))
         (rule "simplifySelectOfAnonEQ" (formula "13") (ifseqformula "9"))
         (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "19")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "13") (term "0,1,0,0") (ifseqformula "6"))
         (rule "replace_known_right" (formula "13") (term "1,0,1,0,0") (ifseqformula "18"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "dismissNonSelectedField" (formula "13") (term "0,0,1,0,0"))
         (rule "dismissNonSelectedField" (formula "13") (term "0,0,1,0,0"))
         (rule "dismissNonSelectedField" (formula "13") (term "0,0,1,0,0"))
         (rule "dismissNonSelectedField" (formula "13") (term "0,0,1,0,0"))
         (rule "replace_known_right" (formula "13") (term "0,1,0,0") (ifseqformula "17"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "applyEqReverse" (formula "14") (term "0") (ifseqformula "13"))
         (rule "hideAuxiliaryEq" (formula "13"))
         (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=java_lang_Object_created__3"))
         (rule "simplifySelectOfCreate" (formula "1"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
         (rule "castDel" (formula "1") (term "1,0"))
         (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
         (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "19"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
         (rule "applyEqReverse" (formula "17") (term "0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "commuteUnion" (formula "9") (term "1,0"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "13") (term "0") (ifseqformula "8"))
         (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "14"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "true_left" (formula "13"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "0") (ifseqformula "8"))
         (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "15"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "true_left" (formula "14"))
         (rule "methodCallThrow" (formula "21") (term "1"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "blockThrow" (formula "21") (term "1"))
         (rule "tryCatchThrow" (formula "21") (term "1"))
         (rule "ifElseUnfold" (formula "21") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_1"))
         (rule "equality_comparison_simple" (formula "21") (term "1"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "replace_known_right" (formula "21") (term "0,0,1,0") (ifseqformula "18"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "ifElseSplit" (formula "21"))
         (branch "if x_1 true"
            (builtin "One Step Simplification" (formula "22"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch "if x_1 false"
            (builtin "One Step Simplification" (formula "22"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "ifElseSplit" (formula "21"))
            (branch "if n instanceof java.lang.Throwable true"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
               (rule "true_left" (formula "1"))
               (rule "variableDeclaration" (formula "21") (term "1") (newnames "e_1"))
               (rule "reference_type_cast" (formula "21") (term "1"))
               (branch "Normal Execution (n instanceof java.lang.Throwable)"
                  (builtin "One Step Simplification" (formula "22"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "assignment" (formula "21") (term "1"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "emptyModality" (formula "21") (term "1"))
                  (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "18")) (ifInst ""  (formula "18")) (ifInst ""  (formula "18")))
                  (rule "allRight" (formula "21") (inst "sk=f_1"))
                  (rule "allRight" (formula "21") (inst "sk=o_1"))
                  (rule "orRight" (formula "21"))
                  (rule "orRight" (formula "21"))
                  (rule "orRight" (formula "21"))
                  (rule "eqSymm" (formula "24"))
                  (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=f_1_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "7"))
                  (rule "eqSymm" (formula "25"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,1,1,0,0"))
                  (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0"))
                  (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "8"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
                  (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "23"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "24"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "pullOutSelect" (formula "2") (term "0,0,0,1,1,0,0") (inst "selectSK=java_lang_Object_created__4"))
                  (rule "applyEq" (formula "1") (term "0,0,1,0,0") (ifseqformula "2"))
                  (rule "simplifySelectOfCreate" (formula "2"))
                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "22")))
                  (rule "castDel" (formula "2") (term "1,0"))
                  (rule "eqSymm" (formula "2") (term "0,0"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_2"))
                  (rule "simplifySelectOfStore" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_3"))
                  (rule "simplifySelectOfStore" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_4"))
                  (rule "simplifySelectOfStore" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_5"))
                  (rule "simplifySelectOfStore" (formula "1"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_6"))
                  (rule "simplifySelectOfCreate" (formula "1"))
                  (rule "castDel" (formula "1") (term "1,0"))
                  (rule "eqSymm" (formula "1") (term "0,0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "27"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "commute_and" (formula "30"))
                  (rule "commute_and" (formula "29"))
                  (rule "commute_and" (formula "6") (term "0,0"))
                  (rule "commute_and" (formula "5") (term "0,0"))
                  (rule "commute_and" (formula "4") (term "0,0"))
                  (rule "commute_and" (formula "3") (term "0,0"))
                  (rule "commute_and" (formula "2") (term "0,0"))
                  (rule "commute_and" (formula "1") (term "0,0"))
                  (rule "commute_and" (formula "8") (term "0,0,0,0,0"))
                  (rule "commute_and" (formula "8") (term "1,0,0,0,0"))
                  (rule "cnf_rightDist" (formula "8") (term "0,0,0,0"))
                  (rule "commute_or" (formula "8") (term "0,0,0,0,0"))
                  (rule "cnf_rightDist" (formula "8") (term "1,0,0,0,0"))
                  (builtin "One Step Simplification" (formula "8"))
                  (rule "commute_or" (formula "8") (term "0,1,0,0,0,0"))
                  (rule "commute_and" (formula "8") (term "1,0,0,0,0"))
                  (rule "cnf_rightDist" (formula "8") (term "0,0,0,0,0"))
                  (rule "commute_or" (formula "8") (term "1,0,0,0,0,0"))
                  (rule "commute_or" (formula "8") (term "0,0,0,0,0,0"))
                  (rule "commute_and_2" (formula "8") (term "0,0,0,0"))
                  (rule "shift_paren_and" (formula "8") (term "0,0,0,0,0"))
                  (rule "commute_and_2" (formula "8") (term "0,0,0"))
                  (rule "commute_and_2" (formula "8") (term "0,0,0,0"))
                  (rule "commute_and_2" (formula "8") (term "0,0,0,0,0"))
                  (rule "commute_and" (formula "8") (term "0,0,0,0,0,0"))
                  (rule "commute_and_2" (formula "8") (term "0,0,0,0,0"))
                  (rule "ifthenelse_split" (formula "7") (term "0"))
                  (branch "o_1 = s_1 TRUE"
                     (rule "applyEqReverse" (formula "6") (term "0,0,0,0,0") (ifseqformula "8"))
                     (builtin "One Step Simplification" (formula "6"))
                     (rule "applyEqReverse" (formula "9") (term "0,0,0,1,1,0,0") (ifseqformula "8"))
                     (builtin "One Step Simplification" (formula "9"))
                     (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "6"))
                     (rule "hideAuxiliaryEq" (formula "8"))
                     (rule "hideAuxiliaryEq" (formula "6"))
                     (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "6"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "6"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "6"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "6"))
                     (builtin "One Step Simplification" (formula "4"))
                     (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "6"))
                     (builtin "One Step Simplification" (formula "5"))
                     (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "6"))
                     (rule "applyEq" (formula "28") (term "0,1") (ifseqformula "6"))
                     (rule "replace_known_right" (formula "28") (term "1") (ifseqformula "26"))
                     (builtin "One Step Simplification" (formula "28"))
                     (rule "false_right" (formula "28"))
                     (rule "applyEq" (formula "28") (term "0,1") (ifseqformula "6"))
                     (rule "replace_known_right" (formula "28") (term "1") (ifseqformula "26"))
                     (builtin "One Step Simplification" (formula "28"))
                     (rule "false_right" (formula "28"))
                     (rule "applyEq" (formula "7") (term "0,1,0,0,0,0,0") (ifseqformula "6"))
                     (rule "sortsDisjointModuloNull" (formula "7") (term "1,0,0,0,0,0"))
                     (rule "replace_known_right" (formula "7") (term "0,1,0,0,0,0,0") (ifseqformula "26"))
                     (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "25")))
                     (rule "applyEqReverse" (formula "29") (term "1") (ifseqformula "7"))
                     (rule "hideAuxiliaryEq" (formula "7"))
                     (rule "applyEq" (formula "1") (term "1,2,0") (ifseqformula "6"))
                     (rule "applyEq" (formula "27") (term "1,0,0,1") (ifseqformula "6"))
                     (rule "replace_known_right" (formula "27") (term "0,1") (ifseqformula "26"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "notRight" (formula "27"))
                     (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "7"))
                     (rule "close" (formula "26") (ifseqformula "7"))
                  )
                  (branch "o_1 = s_1 FALSE"
                     (rule "applyEqReverse" (formula "6") (term "0,0,0,0,0") (ifseqformula "7"))
                     (rule "applyEqReverse" (formula "8") (term "0,0,0,1,1,0,0") (ifseqformula "7"))
                     (rule "hideAuxiliaryEq" (formula "7"))
                     (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "23"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "22"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                     (rule "hideAuxiliaryEq" (formula "2"))
                     (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "21"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                     (rule "hideAuxiliaryEq" (formula "3"))
                     (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "20"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "19"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "commute_and" (formula "1") (term "0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "26"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "cut_direct" (formula "25") (term "0,0"))
                     (branch "CUT: o_1 = null TRUE"
                        (builtin "One Step Simplification" (formula "26"))
                        (rule "false_right" (formula "26"))
                        (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "replace_known_left" (formula "25") (term "1") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "replace_known_left" (formula "24") (term "1") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "18") (term "0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "18"))
                        (rule "applyEq" (formula "2") (term "0,1,0,0,0,0,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "2") (term "1,0,0,0,0,0"))
                        (rule "replace_known_right" (formula "2") (term "1,0,0,0,0,0") (ifseqformula "20"))
                        (builtin "One Step Simplification" (formula "2"))
                        (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "2"))
                        (rule "hideAuxiliaryEq" (formula "2"))
                        (rule "eqSymm" (formula "24"))
                        (rule "applyEqRigid" (formula "24") (term "1,0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "closeTrue" (formula "24"))
                     )
                     (branch "CUT: o_1 = null FALSE"
                        (builtin "One Step Simplification" (formula "26"))
                        (rule "notRight" (formula "26"))
                        (rule "replace_known_left" (formula "2") (term "0,0,1,1,0,0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "26")))
                        (rule "replace_known_right" (formula "24") (term "1") (ifseqformula "26"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "false_right" (formula "24"))
                        (rule "replace_known_right" (formula "24") (term "1") (ifseqformula "25"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "false_right" (formula "24"))
                        (rule "ifthenelse_split" (formula "2") (term "0"))
                        (branch " ¬f_1 = java.lang.Object::<created> ∧ o_1 = self_0 ∧ ( f_1 = java.lang.Throwable::$cause ∨ f_1 = java.lang.Throwable::$message) ∧ (f_1 = java.lang.Throwable::$cause ∨ o_1 = self_0) ∧ (f_1 = java.lang.Throwable::$message ∨ o_1 = self_0) TRUE"
                           (rule "andLeft" (formula "2"))
                           (rule "andLeft" (formula "2"))
                           (rule "andLeft" (formula "2"))
                           (rule "andLeft" (formula "2"))
                           (rule "notLeft" (formula "2"))
                           (rule "applyEqReverse" (formula "30") (term "1") (ifseqformula "6"))
                           (rule "hideAuxiliaryEq" (formula "6"))
                           (rule "eqSymm" (formula "29"))
                           (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "true_left" (formula "4"))
                           (rule "replace_known_left" (formula "4") (term "1") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "true_left" (formula "4"))
                           (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
                           (rule "close" (formula "21") (ifseqformula "1"))
                        )
                        (branch " ¬f_1 = java.lang.Object::<created> ∧ o_1 = self_0 ∧ ( f_1 = java.lang.Throwable::$cause ∨ f_1 = java.lang.Throwable::$message) ∧ (f_1 = java.lang.Throwable::$cause ∨ o_1 = self_0) ∧ (f_1 = java.lang.Throwable::$message ∨ o_1 = self_0) FALSE"
                           (rule "close" (formula "26") (ifseqformula "2"))
                        )
                     )
                  )
               )
               (branch "ClassCastException (!(n instanceof java.lang.Throwable))"
                  (builtin "One Step Simplification" (formula "22"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "closeTrue" (formula "21"))
               )
            )
            (branch "if n instanceof java.lang.Throwable false"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
      (branch "Exceptional Post (NullPointerException)"
         (builtin "One Step Simplification" (formula "9"))
         (builtin "One Step Simplification" (formula "12"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "9") (term "0,0,1,0,1,0,1") (ifseqformula "6"))
         (rule "andLeft" (formula "9"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "10") (term "1,0,0") (ifseqformula "9"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "10") (term "0,1,0,0") (ifseqformula "6"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "10") (term "1,1,0,1,0") (ifseqformula "9"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "10") (term "0,1,1,0,1,0") (ifseqformula "6"))
         (rule "andLeft" (formula "10"))
         (rule "andLeft" (formula "10"))
         (rule "andLeft" (formula "12"))
         (rule "andLeft" (formula "10"))
         (rule "andLeft" (formula "12"))
         (rule "andLeft" (formula "14"))
         (rule "notLeft" (formula "10"))
         (rule "close" (formula "16") (ifseqformula "15"))
      )
      (branch "Pre (NullPointerException)"
         (builtin "One Step Simplification" (formula "10"))
         (rule "wellFormedAnonEQ" (formula "10") (ifseqformula "6"))
         (rule "replace_known_left" (formula "10") (term "1") (ifseqformula "5"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "wellFormedStoreObject" (formula "10"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "orRight" (formula "10"))
         (rule "dismissNonSelectedField" (formula "11") (term "0"))
         (rule "dismissNonSelectedField" (formula "11") (term "0"))
         (rule "dismissNonSelectedField" (formula "11") (term "0"))
         (rule "wellFormedStoreObject" (formula "10"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "orRight" (formula "10"))
         (rule "dismissNonSelectedField" (formula "11") (term "0"))
         (rule "dismissNonSelectedField" (formula "11") (term "0"))
         (rule "wellFormedStoreObject" (formula "10"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "wellFormedStorePrimitive" (formula "10") (term "0"))
         (rule "wellFormedCreate" (formula "10") (term "0"))
         (rule "orRight" (formula "10"))
         (rule "close" (formula "10") (ifseqformula "3"))
      )
   )
)
(branch "Exceptional Post (generateSignatureKeyPair)"
   (builtin "One Step Simplification" (formula "5"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "andLeft" (formula "5"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "6") (term "1,0") (ifseqformula "5"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "notLeft" (formula "6"))
   (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "8"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "dismissNonSelectedField" (formula "6") (term "0,0"))
   (rule "dismissNonSelectedField" (formula "6") (term "0,0"))
   (rule "dismissNonSelectedField" (formula "6") (term "0,0"))
   (rule "dismissNonSelectedField" (formula "6") (term "0,0"))
   (rule "pullOutSelect" (formula "6") (term "0,0") (inst "selectSK=java_lang_Object_created__0"))
   (rule "simplifySelectOfCreate" (formula "6"))
   (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "10")))
   (rule "castDel" (formula "6") (term "1,0"))
   (rule "sortsDisjointModuloNull" (formula "6") (term "0,0"))
   (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "9"))
   (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "10")))
   (rule "applyEqReverse" (formula "7") (term "0,0") (ifseqformula "6"))
   (rule "hideAuxiliaryEq" (formula "6"))
   (rule "commuteUnion" (formula "5") (term "1,0"))
   (rule "methodCallThrow" (formula "11") (term "1"))
   (rule "blockThrow" (formula "11") (term "1"))
   (rule "tryCatchThrow" (formula "11") (term "1"))
   (rule "ifElseUnfold" (formula "11") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "11") (term "1") (newnames "x"))
   (rule "equality_comparison_simple" (formula "11") (term "1"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "replace_known_right" (formula "11") (term "0,0,1,0") (ifseqformula "8"))
   (builtin "One Step Simplification" (formula "11"))
   (rule "ifElseSplit" (formula "11"))
   (branch "if x true"
      (builtin "One Step Simplification" (formula "12"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch "if x false"
      (builtin "One Step Simplification" (formula "12"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "ifElseSplit" (formula "11"))
      (branch "if exc_0 instanceof java.lang.Throwable true"
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "9")))
         (rule "true_left" (formula "1"))
         (rule "variableDeclaration" (formula "11") (term "1") (newnames "e"))
         (rule "reference_type_cast" (formula "11") (term "1"))
         (branch "Normal Execution (exc_0 instanceof java.lang.Throwable)"
            (builtin "One Step Simplification" (formula "12"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "assignment" (formula "11") (term "1"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "emptyModality" (formula "11") (term "1"))
            (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "8")) (ifInst ""  (formula "8")) (ifInst ""  (formula "7")))
            (rule "allRight" (formula "11") (inst "sk=f_0"))
            (rule "allRight" (formula "11") (inst "sk=o_0"))
            (rule "orRight" (formula "11"))
            (rule "orRight" (formula "11"))
            (rule "orRight" (formula "11"))
            (rule "eqSymm" (formula "14"))
            (rule "pullOutSelect" (formula "14") (term "0") (inst "selectSK=f_0_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "6"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "eqSymm" (formula "15"))
            (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,1,0,0"))
            (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
            (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "12"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "13"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
            (rule "simplifySelectOfStore" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "eqSymm" (formula "1") (term "1,0,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0"))
            (rule "pullOutSelect" (formula "2") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__1"))
            (rule "simplifySelectOfCreate" (formula "2"))
            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "12")))
            (rule "castDel" (formula "2") (term "1,0"))
            (rule "eqSymm" (formula "2") (term "0,0"))
            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
            (rule "simplifySelectOfStore" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "eqSymm" (formula "1") (term "1,0,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0"))
            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_3"))
            (rule "simplifySelectOfStore" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "eqSymm" (formula "1") (term "1,0,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0"))
            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_4"))
            (rule "simplifySelectOfStore" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0"))
            (rule "eqSymm" (formula "1") (term "1,0,0"))
            (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_5"))
            (rule "simplifySelectOfCreate" (formula "1"))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,1,0,0,0") (ifseqformula "16"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "commute_and" (formula "19"))
            (rule "commute_and" (formula "18"))
            (rule "commute_and" (formula "5") (term "0,0"))
            (rule "commute_and" (formula "7") (term "0,0"))
            (rule "commute_and" (formula "4") (term "0,0"))
            (rule "commute_and" (formula "3") (term "0,0"))
            (rule "commute_and" (formula "2") (term "0,0"))
            (rule "commute_and" (formula "1") (term "0,0"))
            (rule "ifthenelse_split" (formula "6") (term "0"))
            (branch "o_0 = s_1 TRUE"
               (rule "applyEqReverse" (formula "8") (term "0,0,0,0,0") (ifseqformula "7"))
               (builtin "One Step Simplification" (formula "8"))
               (rule "applyEqReverse" (formula "22") (term "1") (ifseqformula "8"))
               (rule "hideAuxiliaryEq" (formula "7"))
               (rule "hideAuxiliaryEq" (formula "7"))
               (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "6"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "6"))
               (builtin "One Step Simplification" (formula "4"))
               (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "6"))
               (builtin "One Step Simplification" (formula "5"))
               (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "6"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "6"))
               (builtin "One Step Simplification" (formula "2"))
               (rule "applyEq" (formula "19") (term "0,0,0") (ifseqformula "6"))
               (rule "replace_known_right" (formula "19") (term "0,0") (ifseqformula "15"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "notRight" (formula "19"))
               (rule "applyEq" (formula "18") (term "0,1") (ifseqformula "7"))
               (rule "replace_known_right" (formula "18") (term "1") (ifseqformula "16"))
               (builtin "One Step Simplification" (formula "18"))
               (rule "false_right" (formula "18"))
               (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "7"))
               (rule "applyEq" (formula "18") (term "0,1") (ifseqformula "7"))
               (rule "replace_known_right" (formula "18") (term "1") (ifseqformula "16"))
               (builtin "One Step Simplification" (formula "18"))
               (rule "false_right" (formula "18"))
               (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "7"))
               (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "7"))
               (rule "close" (formula "17") (ifseqformula "1"))
            )
            (branch "o_0 = s_1 FALSE"
               (rule "applyEqReverse" (formula "7") (term "0,0,0,0,0") (ifseqformula "6"))
               (rule "hideAuxiliaryEq" (formula "6"))
               (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "14"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replace_known_right" (formula "3") (term "1,0,0") (ifseqformula "13"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
               (rule "hideAuxiliaryEq" (formula "3"))
               (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "12"))
               (builtin "One Step Simplification" (formula "2"))
               (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
               (rule "hideAuxiliaryEq" (formula "2"))
               (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "11"))
               (builtin "One Step Simplification" (formula "2"))
               (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
               (rule "hideAuxiliaryEq" (formula "2"))
               (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "10"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "commute_and" (formula "1") (term "0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "15"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "ClassCastException (!(exc_0 instanceof java.lang.Throwable))"
            (builtin "One Step Simplification" (formula "11"))
            (rule "closeTrue" (formula "11"))
         )
      )
      (branch "if exc_0 instanceof java.lang.Throwable false"
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "9")))
         (rule "closeFalse" (formula "1"))
      )
   )
)
(branch "Pre (generateSignatureKeyPair)"
   (builtin "One Step Simplification" (formula "6"))
   (rule "wellFormedStoreObject" (formula "6"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "orRight" (formula "6"))
   (rule "dismissNonSelectedField" (formula "7") (term "0"))
   (rule "dismissNonSelectedField" (formula "7") (term "0"))
   (rule "dismissNonSelectedField" (formula "7") (term "0"))
   (rule "wellFormedStoreObject" (formula "6"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "orRight" (formula "6"))
   (rule "dismissNonSelectedField" (formula "7") (term "0"))
   (rule "dismissNonSelectedField" (formula "7") (term "0"))
   (rule "wellFormedStoreObject" (formula "6"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "wellFormedStorePrimitive" (formula "6") (term "0"))
   (rule "wellFormedCreate" (formula "6") (term "0"))
   (rule "orRight" (formula "6"))
   (rule "close" (formula "6") (ifseqformula "2"))
)
)

}
