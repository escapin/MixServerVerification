\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sat Dec 10 09:36:01 CET 2016
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=\\#begexpand_inByte\\#end,\\#begexpand_inChar\\#end,\\#begexpand_inShort\\#end,\\#begexpand_inInt\\#end,\\#begexpand_inLong\\#end
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=5000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_OFF
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Sat Dec 10 09:36:01 CET 2016
name=verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer\\:\\:getFirst([[B,[B)].JML normal_behavior operation contract.0
contract=verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer\\:\\:getFirst([[B,[B)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mihai" ) (keyVersion "f08755657231e066f34a6d2cf1fc92a2d49850a9"))
(keyLog "1" (keyUser "mihai" ) (keyVersion "f08755657231e066f34a6d2cf1fc92a2d49850a9"))

(autoModeTime "33873")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "messages,bal,self,result,exc,heapAtPre,o,f") (userinteraction))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "12"))
(rule "notLeft" (formula "2"))
(rule "assignment" (formula "13") (term "1") (userinteraction))
(builtin "One Step Simplification" (formula "13"))
(rule "methodBodyExpand" (formula "13") (term "1") (newnames "heapBefore_getFirst,savedHeapBefore_getFirst") (userinteraction))
(builtin "One Step Simplification" (formula "13"))
(rule "variableDeclarationAssign" (formula "13") (term "1") (userinteraction))
(rule "variableDeclaration" (formula "13") (term "1") (newnames "first_1") (userinteraction))
(builtin "Use Operation Contract" (formula "13") (newnames "heapBefore_first,result_0,exc_0,heapAfter_first,anon_heap_first") (contract "verif.utils.MessageTools[verif.utils.MessageTools::first([B)].JML normal_behavior operation contract.0"))
(branch "Post (first)"
   (rule "assignment" (formula "15") (term "1,1") (userinteraction))
   (builtin "One Step Simplification" (formula "15"))
   (builtin "Use Operation Contract" (formula "15") (newnames "heapBefore_addEntry,result_2,exc_2,heapAfter_addEntry,anon_heap_addEntry") (contract "verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer::addEntry([[B,[B)].JML normal_behavior operation contract.0"))
   (branch "Post (addEntry)"
      (rule "assignment" (formula "17") (term "1,1") (userinteraction))
      (rule "methodCallReturn" (formula "17") (term "1,1,1") (userinteraction))
      (rule "assignment" (formula "17") (term "1,1,1") (userinteraction))
      (rule "methodCallEmpty" (formula "17") (term "1,1,1,1") (userinteraction))
      (rule "tryEmpty" (formula "17") (term "1,1,1,1") (userinteraction))
      (rule "emptyModality" (formula "17") (term "1,1,1,1") (userinteraction))
      (builtin "One Step Simplification" (formula "17"))
      (builtin "One Step Simplification" (formula "12"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "andLeft" (formula "12"))
      (rule "andLeft" (formula "15"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "17"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "15"))
      (rule "andLeft" (formula "19"))
      (rule "andLeft" (formula "18"))
      (rule "andLeft" (formula "15"))
      (rule "andLeft" (formula "20"))
      (rule "andLeft" (formula "16"))
      (rule "andLeft" (formula "22"))
      (rule "notLeft" (formula "16"))
      (rule "notLeft" (formula "16"))
      (rule "andLeft" (formula "21"))
      (rule "andLeft" (formula "20"))
      (rule "notLeft" (formula "21"))
      (rule "notLeft" (formula "20"))
      (rule "andRight" (formula "29") (userinteraction))
      (branch "Case 1"
         (rule "andRight" (formula "29") (userinteraction))
         (branch "Case 1"
            (rule "cut" (inst "cutFormula=  array2seq(heapAfter_addEntry, result_0)
= array2seq(heapAfter_first, result_0)") (userinteraction))
            (branch "CUT: array2seq(heapAfter_addEntry, result_0) = array2seq(heapAfter_first, result_0) TRUE"
               (rule "applyEq" (formula "20") (term "0,1,1") (ifseqformula "1") (userinteraction))
               (rule "applyEq" (formula "20") (term "0,1,1") (ifseqformula "16") (userinteraction))
               (rule "cut" (inst "cutFormula=  array2seq(heapAfter_first, bal)
= array2seq(heapAfter_addEntry, bal)") (userinteraction))
               (branch "CUT: array2seq(heapAfter_first, bal) = array2seq(heapAfter_addEntry, bal) TRUE"
                  (rule "applyEq" (formula "21") (term "0,0,1,1") (ifseqformula "1") (userinteraction))
                  (rule "cut" (inst "cutFormula=  array2seq2d(heapAfter_first, messages)
= array2seq2d(heapAfter_addEntry, messages)") (userinteraction))
                  (branch "CUT: array2seq2d(heapAfter_first, messages) = array2seq2d(heapAfter_addEntry, messages) TRUE"
                     (rule "applyEq" (formula "22") (term "0,1") (ifseqformula "1") (userinteraction))
                     (rule "applyEq" (formula "32") (term "0") (ifseqformula "22") (userinteraction))
                     (builtin "One Step Simplification" (formula "32"))
                     (rule "closeTrue" (formula "32"))
                  )
                  (branch "CUT: array2seq2d(heapAfter_first, messages) = array2seq2d(heapAfter_addEntry, messages) FALSE"
                     (rule "hide_right" (formula "32") (userinteraction))
                     (rule "array2seq2dDef" (formula "25") (term "0") (inst "u=u") (userinteraction))
                     (rule "array2seq2dDef" (formula "25") (term "1") (inst "u=u") (userinteraction))
                     (rule "equalityToSeqGetAndSeqLenRight" (formula "25") (inst "iv=iv") (userinteraction))
                     (rule "andRight" (formula "25") (userinteraction))
                     (branch "Case 1"
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (ifseqformula "14"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "1") (ifseqformula "14"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "1") (ifseqformula "19"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "0,1") (ifseqformula "14"))
                        (rule "orRight" (formula "26"))
                        (rule "eqSymm" (formula "2"))
                        (rule "eqSymm" (formula "21"))
                        (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "32"))
                        (builtin "One Step Simplification" (formula "7"))
                        (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "29"))
                        (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "30")))
                        (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "28"))
                        (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "26")) (ifInst ""  (formula "27")))
                        (rule "lenOfSeqDef" (formula "25") (term "0"))
                        (rule "eqSymm" (formula "25"))
                        (rule "polySimp_elimSub" (formula "25") (term "1,1"))
                        (rule "times_zero_2" (formula "25") (term "1,1,1"))
                        (rule "add_zero_right" (formula "25") (term "1,1"))
                        (rule "lenOfSeqDef" (formula "25") (term "0"))
                        (rule "polySimp_elimSub" (formula "25") (term "1,0"))
                        (rule "times_zero_2" (formula "25") (term "1,1,0"))
                        (rule "add_zero_right" (formula "25") (term "1,0"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "closeTrue" (formula "25"))
                     )
                     (branch "Case 2"
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (ifseqformula "14"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "1") (ifseqformula "14"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "1") (ifseqformula "19"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "0,1") (ifseqformula "14"))
                        (rule "orRight" (formula "26"))
                        (rule "allRight" (formula "25") (inst "sk=iv_0"))
                        (rule "impRight" (formula "25"))
                        (rule "andLeft" (formula "1"))
                        (rule "eqSymm" (formula "23"))
                        (rule "eqSymm" (formula "4"))
                        (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "34"))
                        (builtin "One Step Simplification" (formula "9"))
                        (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "31"))
                        (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "32")))
                        (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "30"))
                        (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "28")) (ifInst ""  (formula "29")))
                        (rule "getOfSeqDef" (formula "27") (term "0"))
                        (rule "castDel" (formula "27") (term "1,0"))
                        (rule "castDel" (formula "27") (term "2,0"))
                        (rule "add_zero_right" (formula "27") (term "0,2,1,1,0"))
                        (rule "eqSymm" (formula "27"))
                        (rule "replace_known_left" (formula "27") (term "0,0,1") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "27"))
                        (rule "polySimp_elimSub" (formula "27") (term "1,0,1"))
                        (rule "mul_literals" (formula "27") (term "1,1,0,1"))
                        (rule "add_zero_right" (formula "27") (term "1,0,1"))
                        (rule "lenOfSeqDef" (formula "2") (term "1"))
                        (rule "polySimp_elimSub" (formula "2") (term "1,1"))
                        (rule "times_zero_2" (formula "2") (term "1,1,1"))
                        (rule "add_zero_right" (formula "2") (term "1,1"))
                        (rule "getOfSeqDef" (formula "27") (term "0"))
                        (rule "castDel" (formula "27") (term "1,0"))
                        (rule "castDel" (formula "27") (term "2,0"))
                        (rule "add_zero_right" (formula "27") (term "0,2,1,1,0"))
                        (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "27"))
                        (rule "polySimp_elimSub" (formula "27") (term "1,0,0"))
                        (rule "times_zero_2" (formula "27") (term "1,1,0,0"))
                        (rule "add_zero_right" (formula "27") (term "1,0,0"))
                        (rule "eqSymm" (formula "27"))
                        (rule "inEqSimp_ltToLeq" (formula "2") (term "0,1"))
                        (rule "add_zero_right" (formula "2") (term "0,0,1"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "27") (term "0,1"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,1"))
                        (rule "polySimp_addComm1" (formula "27") (term "0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0"))
                        (rule "eqSymm" (formula "27"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,1"))
                        (rule "eqSymm" (formula "27"))
                        (rule "polySimp_addComm1" (formula "27") (term "0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "11"))
                        (rule "polySimp_addComm1" (formula "11") (term "0"))
                        (rule "applyEq" (formula "19") (term "0") (ifseqformula "4"))
                        (rule "eqSymm" (formula "19"))
                        (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "3"))
                        (rule "eqSymm" (formula "19"))
                        (rule "applyEq" (formula "4") (term "1") (ifseqformula "19"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "0,0,1"))
                        (rule "polySimp_elimOne" (formula "27") (term "0,0,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1"))
                        (rule "polySimp_rightDist" (formula "11") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                        (rule "mul_literals" (formula "11") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "nonNull" (formula "25") (inst "i=i"))
                        (rule "sub_literals" (formula "25") (term "2,1,0,1,1"))
                        (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "30")))
                        (rule "greater_literals" (formula "25") (term "0"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                        (rule "nonNull" (formula "14") (inst "i=i"))
                        (rule "sub_literals" (formula "14") (term "2,1,0,1,1"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "greater_literals" (formula "14") (term "0,1"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "andLeft" (formula "14"))
                        (rule "notLeft" (formula "14"))
                        (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "27"))
                        (builtin "One Step Simplification" (formula "8"))
                        (rule "narrowSelectArrayType" (formula "14") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "27"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                        (rule "array2seqDef" (formula "3") (term "1") (inst "u=u"))
                        (rule "eqSymm" (formula "3"))
                        (rule "array2seqDef" (formula "12") (term "0,0") (inst "u=u"))
                        (rule "narrowSelectArrayType" (formula "12") (term "2,0,0") (ifseqformula "5") (ifseqformula "35"))
                        (rule "array2seqDef" (formula "23") (term "0,0,1,0") (inst "u=u"))
                        (rule "array2seqDef" (formula "4") (term "0") (inst "u=u"))
                        (rule "array2seqDef" (formula "28") (term "1,1") (inst "u=u"))
                        (rule "eqSymm" (formula "28"))
                        (rule "array2seqDef" (formula "19") (term "0") (inst "u=u"))
                        (rule "array2seqDef" (formula "19") (term "0,1") (inst "u=u"))
                        (rule "array2seqDef" (formula "4") (term "0,1") (inst "u=u"))
                        (rule "array2seqDef" (formula "11") (term "0,0") (inst "u=u"))
                        (rule "narrowSelectArrayType" (formula "11") (term "2,0,0") (ifseqformula "5") (ifseqformula "35"))
                        (rule "array2seqDef" (formula "3") (term "1") (inst "u=u"))
                        (rule "eqSymm" (formula "3"))
                        (rule "array2seqDef" (formula "28") (term "1,1") (inst "u=u"))
                        (rule "eqSymm" (formula "28"))
                        (rule "eqSeqDef" (formula "3") (inst "iv=iv"))
                        (rule "andLeft" (formula "3"))
                        (rule "lenOfSeqDef" (formula "4") (term "1,1,0,0"))
                        (rule "polySimp_elimSub" (formula "4") (term "1,1,1,0,0"))
                        (rule "times_zero_2" (formula "4") (term "1,1,1,1,0,0"))
                        (rule "add_zero_right" (formula "4") (term "1,1,1,0,0"))
                        (rule "lenOfSeqDef" (formula "3") (term "1"))
                        (rule "polySimp_elimSub" (formula "3") (term "1,1"))
                        (rule "times_zero_2" (formula "3") (term "1,1,1"))
                        (rule "add_zero_right" (formula "3") (term "1,1"))
                        (rule "getOfSeqDef" (formula "4") (term "1,1,0"))
                        (rule "castDel" (formula "4") (term "2,1,1,0"))
                        (rule "castDel" (formula "4") (term "1,1,1,0"))
                        (rule "add_zero_right" (formula "4") (term "0,2,1,1,1,0"))
                        (rule "polySimp_elimSub" (formula "4") (term "1,1,0,1,1,0"))
                        (rule "mul_literals" (formula "4") (term "1,1,1,0,1,1,0"))
                        (rule "add_zero_right" (formula "4") (term "1,1,0,1,1,0"))
                        (rule "lenOfSeqDef" (formula "3") (term "0"))
                        (rule "polySimp_elimSub" (formula "3") (term "1,0"))
                        (rule "times_zero_2" (formula "3") (term "1,1,0"))
                        (rule "add_zero_right" (formula "3") (term "1,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "getOfSeqDef" (formula "3") (term "0,1,0"))
                        (rule "castDel" (formula "3") (term "2,0,1,0"))
                        (rule "castDel" (formula "3") (term "1,0,1,0"))
                        (rule "add_zero_right" (formula "3") (term "0,2,1,0,1,0"))
                        (rule "polySimp_elimSub" (formula "3") (term "1,1,0,0,1,0"))
                        (rule "times_zero_2" (formula "3") (term "1,1,1,0,0,1,0"))
                        (rule "add_zero_right" (formula "3") (term "1,1,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "3") (term "0,1,1,0,0"))
                        (rule "add_zero_right" (formula "3") (term "0,0,1,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0,1,0"))
                        (rule "eqSymm" (formula "3") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,1,1,0"))
                        (rule "eqSymm" (formula "3") (term "1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0,1,0"))
                        (rule "eqSymm" (formula "3") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,1,0,1,1,0"))
                        (rule "mul_literals" (formula "3") (term "0,1,1,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "3") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0,1,0"))
                        (rule "mul_literals" (formula "3") (term "0,1,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0,1,0"))
                        (rule "eqSymm" (formula "3") (term "1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,1,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0,0,1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0,0,1,1,1,0,0"))
                        (rule "eqSeqDef2" (formula "4") (inst "iv=iv") (ifseqformula "19"))
                        (rule "andLeft" (formula "4"))
                        (rule "lenOfSeqDef" (formula "4") (term "1"))
                        (rule "polySimp_elimSub" (formula "4") (term "1,1"))
                        (rule "times_zero_2" (formula "4") (term "1,1,1"))
                        (rule "add_zero_right" (formula "4") (term "1,1"))
                        (rule "getOfSeqDef" (formula "5") (term "0,1,0"))
                        (rule "castDel" (formula "5") (term "1,0,1,0"))
                        (rule "castDel" (formula "5") (term "2,0,1,0"))
                        (rule "add_zero_right" (formula "5") (term "0,2,1,0,1,0"))
                        (rule "eqSymm" (formula "5") (term "1,0"))
                        (rule "polySimp_elimSub" (formula "5") (term "1,1,0,1,1,0"))
                        (rule "times_zero_2" (formula "5") (term "1,1,1,0,1,1,0"))
                        (rule "add_zero_right" (formula "5") (term "1,1,0,1,1,0"))
                        (rule "lenOfSeqDef" (formula "4") (term "0"))
                        (rule "polySimp_elimSub" (formula "4") (term "1,0"))
                        (rule "mul_literals" (formula "4") (term "1,1,0"))
                        (rule "add_zero_right" (formula "4") (term "1,0"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "true_left" (formula "4"))
                        (rule "lenOfSeqDef" (formula "4") (term "1,1,0,0"))
                        (rule "polySimp_elimSub" (formula "4") (term "1,1,1,0,0"))
                        (rule "times_zero_2" (formula "4") (term "1,1,1,1,0,0"))
                        (rule "add_zero_right" (formula "4") (term "1,1,1,0,0"))
                        (rule "getOfSeqDef" (formula "4") (term "0,1,0"))
                        (rule "castDel" (formula "4") (term "1,0,1,0"))
                        (rule "castDel" (formula "4") (term "2,0,1,0"))
                        (rule "add_zero_right" (formula "4") (term "0,2,1,0,1,0"))
                        (rule "polySimp_elimSub" (formula "4") (term "1,1,0,0,1,0"))
                        (rule "times_zero_2" (formula "4") (term "1,1,1,0,0,1,0"))
                        (rule "add_zero_right" (formula "4") (term "1,1,0,0,1,0"))
                        (rule "eqSymm" (formula "4") (term "1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "4") (term "0,1,1,0,0"))
                        (rule "add_zero_right" (formula "4") (term "0,0,1,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0,1,0"))
                        (rule "eqSymm" (formula "4") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0,1,0"))
                        (rule "eqSymm" (formula "4") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "4") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,0,1,0"))
                        (rule "eqSymm" (formula "4") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "4") (term "1,1,0,1,1,0"))
                        (rule "mul_literals" (formula "4") (term "0,1,1,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,1,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "0,1,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "0,0,1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "4") (term "0,0,1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0,1,0"))
                        (rule "mul_literals" (formula "4") (term "0,1,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0,1,0"))
                        (rule "eqSymm" (formula "4") (term "1,0"))
                        (rule "eqSeqDef2" (formula "19") (inst "iv=iv") (ifseqformula "19"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "true_left" (formula "19"))
                        (rule "pullOutSelect" (formula "27") (term "0,1,1,1") (inst "selectSK=arr_5"))
                        (rule "applyEq" (formula "28") (term "1,2,1,1") (ifseqformula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "17"))
                        (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "9"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEq" (formula "28") (term "0,1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "28") (term "1,2,1,0") (ifseqformula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")) (ifInst ""  (formula "9")))
                        (rule "applyEqReverse" (formula "28") (term "1,2,1,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "28") (term "0,1,1,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "28") (term "0,1,1,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "28") (term "1,2,1,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "11"))
                        (rule "times_zero_1" (formula "12") (term "0,0"))
                        (rule "add_zero_left" (formula "12") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                        (rule "mul_literals" (formula "12") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "3") (term "0,1,1,1,0,0") (ifseqformula "12"))
                        (rule "leq_literals" (formula "3") (term "0,0,1,1,1,0,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "nnf_imp2or" (formula "25") (term "0"))
                        (rule "nnf_imp2or" (formula "15") (term "0"))
                        (rule "nnf_imp2or" (formula "4") (term "0"))
                        (rule "nnf_imp2or" (formula "3") (term "0"))
                        (rule "nnf_notAnd" (formula "25") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                        (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "25") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                        (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "15") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                        (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                        (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "4") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "4") (term "0,0,0"))
                        (rule "mul_literals" (formula "4") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "4") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0"))
                        (rule "mul_literals" (formula "4") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "4") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "4") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "4") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "4") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "4") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "3") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "3") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "3") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "3") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "3") (term "0,0,0"))
                        (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "3") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,0"))
                        (rule "mul_literals" (formula "3") (term "1,0,0,0"))
                        (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "14") (ifseqformula "7"))
                        (rule "andLeft" (formula "14"))
                        (rule "notLeft" (formula "15"))
                        (rule "andLeft" (formula "14"))
                        (rule "andLeft" (formula "14"))
                        (rule "notLeft" (formula "16"))
                        (rule "notLeft" (formula "15"))
                        (rule "andLeft" (formula "14"))
                        (rule "andLeft" (formula "14"))
                        (rule "notLeft" (formula "16"))
                        (rule "andLeft" (formula "14"))
                        (rule "andLeft" (formula "14"))
                        (rule "andLeft" (formula "14"))
                        (rule "notLeft" (formula "14"))
                        (rule "nonNull" (formula "17") (inst "i=i"))
                        (rule "greater_literals" (formula "17") (term "0,1"))
                        (builtin "One Step Simplification" (formula "17"))
                        (rule "sub_literals" (formula "17") (term "2,1,0,1"))
                        (builtin "One Step Simplification" (formula "17"))
                        (rule "andLeft" (formula "17"))
                        (rule "notLeft" (formula "17"))
                        (rule "narrowSelectArrayType" (formula "17") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "30"))
                        (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                        (rule "nonNull" (formula "16") (inst "i=i"))
                        (rule "greater_literals" (formula "16") (term "0,1"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "sub_literals" (formula "16") (term "2,1,0,1"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "andLeft" (formula "16"))
                        (rule "notLeft" (formula "16"))
                        (rule "narrowSelectArrayType" (formula "16") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "30"))
                        (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                        (rule "nonNull" (formula "15") (inst "i=i"))
                        (rule "greater_literals" (formula "15") (term "0,1"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "sub_literals" (formula "15") (term "2,1,0,1"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "andLeft" (formula "15"))
                        (rule "notLeft" (formula "15"))
                        (rule "narrowSelectArrayType" (formula "15") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "30"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                        (rule "nonNull" (formula "14") (inst "i=i"))
                        (rule "sub_literals" (formula "14") (term "2,1,0,1,1"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "greater_literals" (formula "14") (term "0,1"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "andLeft" (formula "14"))
                        (rule "notLeft" (formula "14"))
                        (rule "narrowSelectArrayType" (formula "14") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "30"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                        (rule "nnf_imp2or" (formula "17") (term "0"))
                        (rule "nnf_imp2or" (formula "16") (term "0"))
                        (rule "nnf_imp2or" (formula "15") (term "0"))
                        (rule "nnf_imp2or" (formula "14") (term "0"))
                        (rule "nnf_notAnd" (formula "17") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                        (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                        (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "16") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                        (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "16") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                        (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "15") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                        (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                        (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "14") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                        (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                        (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                        (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "27") (ifseqformula "7"))
                        (rule "andLeft" (formula "27"))
                        (rule "andLeft" (formula "27"))
                        (rule "notLeft" (formula "29"))
                        (rule "andLeft" (formula "27"))
                        (rule "notLeft" (formula "29"))
                        (rule "notLeft" (formula "28"))
                        (rule "andLeft" (formula "27"))
                        (rule "andLeft" (formula "27"))
                        (rule "notLeft" (formula "29"))
                        (rule "andLeft" (formula "27"))
                        (rule "andLeft" (formula "27"))
                        (rule "andLeft" (formula "27"))
                        (rule "notLeft" (formula "27"))
                        (rule "nonNull" (formula "30") (inst "i=i"))
                        (rule "sub_literals" (formula "30") (term "2,1,0,1,1"))
                        (builtin "One Step Simplification" (formula "30"))
                        (rule "greater_literals" (formula "30") (term "0,1"))
                        (builtin "One Step Simplification" (formula "30"))
                        (rule "andLeft" (formula "30"))
                        (rule "notLeft" (formula "30"))
                        (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                        (rule "nonNull" (formula "29") (inst "i=i"))
                        (rule "sub_literals" (formula "29") (term "2,1,0,1,1"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "greater_literals" (formula "29") (term "0,1"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "andLeft" (formula "29"))
                        (rule "notLeft" (formula "29"))
                        (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                        (rule "nonNull" (formula "28") (inst "i=i"))
                        (rule "sub_literals" (formula "28") (term "2,1,0,1,1"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "greater_literals" (formula "28") (term "0,1"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "andLeft" (formula "28"))
                        (rule "notLeft" (formula "28"))
                        (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                        (rule "nonNull" (formula "27") (inst "i=i"))
                        (rule "greater_literals" (formula "27") (term "0,1"))
                        (builtin "One Step Simplification" (formula "27"))
                        (rule "sub_literals" (formula "27") (term "2,1,0,1"))
                        (builtin "One Step Simplification" (formula "27"))
                        (rule "andLeft" (formula "27"))
                        (rule "notLeft" (formula "27"))
                        (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                        (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "21"))
                        (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "7"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")) (ifInst ""  (formula "7")))
                        (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "21"))
                        (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "7"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")) (ifInst ""  (formula "7")))
                        (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "21"))
                        (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "7"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")) (ifInst ""  (formula "7")))
                        (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "21"))
                        (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "7"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")) (ifInst ""  (formula "7")))
                        (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "21"))
                        (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "7"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")) (ifInst ""  (formula "7")))
                        (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "30") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_1"))
                        (rule "applyEq" (formula "37") (term "0") (ifseqformula "30"))
                        (rule "applyEq" (formula "31") (term "0,1,1,1,0,0") (ifseqformula "30"))
                        (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "24"))
                        (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "54")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,0,0") (ifseqformula "20"))
                        (rule "replace_known_left" (formula "30") (term "0,0,0,0") (ifseqformula "6"))
                        (builtin "One Step Simplification" (formula "30"))
                        (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "20"))
                        (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "54")) (ifInst ""  (formula "6")))
                        (rule "applyEqReverse" (formula "31") (term "1,0,0,1,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "31") (term "0,1,1,1,0,0") (ifseqformula "30"))
                        (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "30"))
                        (rule "hideAuxiliaryEq" (formula "30"))
                        (rule "pullOutSelect" (formula "29") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_1"))
                        (rule "applyEq" (formula "36") (term "0") (ifseqformula "29"))
                        (rule "applyEq" (formula "30") (term "0,1,1,1,0,0") (ifseqformula "29"))
                        (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "24"))
                        (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "53")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,0,0") (ifseqformula "20"))
                        (rule "replace_known_left" (formula "29") (term "0,0,0,0") (ifseqformula "6"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "20"))
                        (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "53")) (ifInst ""  (formula "6")))
                        (rule "applyEqReverse" (formula "30") (term "0,1,1,1,0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "30") (term "1,0,0,1,0") (ifseqformula "29"))
                        (rule "hideAuxiliaryEq" (formula "29"))
                        (rule "pullOutSelect" (formula "28") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_1"))
                        (rule "applyEq" (formula "35") (term "0") (ifseqformula "28"))
                        (rule "applyEq" (formula "29") (term "0,1,1,1,0,0") (ifseqformula "28"))
                        (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "24"))
                        (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "52")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,0,0") (ifseqformula "20"))
                        (rule "replace_known_left" (formula "28") (term "0,0,0,0") (ifseqformula "6"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "20"))
                        (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "52")) (ifInst ""  (formula "6")))
                        (rule "applyEqReverse" (formula "29") (term "1,0,0,1,0") (ifseqformula "28"))
                        (rule "applyEqReverse" (formula "29") (term "0,1,1,1,0,0") (ifseqformula "28"))
                        (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "28"))
                        (rule "hideAuxiliaryEq" (formula "28"))
                        (rule "pullOutSelect" (formula "27") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_1"))
                        (rule "applyEq" (formula "34") (term "0") (ifseqformula "27"))
                        (rule "applyEq" (formula "28") (term "0,1,1,1,0,0") (ifseqformula "27"))
                        (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "24"))
                        (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "51")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,0,0") (ifseqformula "20"))
                        (rule "replace_known_left" (formula "27") (term "0,0,0,0") (ifseqformula "6"))
                        (builtin "One Step Simplification" (formula "27"))
                        (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "20"))
                        (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "51")) (ifInst ""  (formula "6")))
                        (rule "applyEqReverse" (formula "28") (term "0,1,1,1,0,0") (ifseqformula "27"))
                        (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "27"))
                        (rule "applyEqReverse" (formula "28") (term "1,0,0,1,0") (ifseqformula "27"))
                        (rule "hideAuxiliaryEq" (formula "27"))
                        (rule "commute_or_2" (formula "31") (term "0"))
                        (rule "commute_or_2" (formula "18") (term "0"))
                        (rule "ifthenelse_split" (formula "2") (term "0"))
                        (branch "messages.length ≥ 1 TRUE"
                           (rule "replace_known_left" (formula "44") (term "0,1") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "3")))
                           (rule "equalityToSeqGetAndSeqLenRight" (formula "44") (inst "iv=iv"))
                           (rule "getOfSeqDef" (formula "44") (term "0,1,0,1"))
                           (rule "castDel" (formula "44") (term "1,0,1,0,1"))
                           (rule "castDel" (formula "44") (term "2,0,1,0,1"))
                           (rule "add_zero_right" (formula "44") (term "0,2,1,0,1,0,1"))
                           (rule "eqSymm" (formula "44") (term "1,0,1"))
                           (rule "polySimp_elimSub" (formula "44") (term "1,1,0,1,1,0,1"))
                           (rule "times_zero_2" (formula "44") (term "1,1,1,0,1,1,0,1"))
                           (rule "add_zero_right" (formula "44") (term "1,1,0,1,1,0,1"))
                           (rule "lenOfSeqDef" (formula "44") (term "1,1,0,0,1"))
                           (rule "polySimp_elimSub" (formula "44") (term "1,1,1,0,0,1"))
                           (rule "times_zero_2" (formula "44") (term "1,1,1,1,0,0,1"))
                           (rule "add_zero_right" (formula "44") (term "1,1,1,0,0,1"))
                           (rule "lenOfSeqDef" (formula "44") (term "1,0"))
                           (rule "polySimp_elimSub" (formula "44") (term "1,1,0"))
                           (rule "times_zero_2" (formula "44") (term "1,1,1,0"))
                           (rule "add_zero_right" (formula "44") (term "1,1,0"))
                           (rule "lenOfSeqDef" (formula "44") (term "0,0"))
                           (rule "polySimp_elimSub" (formula "44") (term "1,0,0"))
                           (rule "mul_literals" (formula "44") (term "1,1,0,0"))
                           (rule "add_zero_right" (formula "44") (term "1,0,0"))
                           (builtin "One Step Simplification" (formula "44"))
                           (rule "allRight" (formula "44") (inst "sk=iv_1"))
                           (rule "impRight" (formula "44"))
                           (rule "andLeft" (formula "1"))
                           (rule "replace_known_left" (formula "46") (term "0,0,1") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "46"))
                           (rule "getOfSeqDef" (formula "46") (term "0"))
                           (rule "castDel" (formula "46") (term "2,0"))
                           (rule "castDel" (formula "46") (term "1,0"))
                           (rule "add_zero_right" (formula "46") (term "0,2,1,0"))
                           (rule "replace_known_left" (formula "46") (term "0,0,0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "46"))
                           (rule "polySimp_elimSub" (formula "46") (term "1,0,0"))
                           (rule "times_zero_2" (formula "46") (term "1,1,0,0"))
                           (rule "add_zero_right" (formula "46") (term "1,0,0"))
                           (rule "eqSymm" (formula "46"))
                           (rule "inEqSimp_ltToLeq" (formula "2") (term "0,1"))
                           (rule "add_zero_right" (formula "2") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "46") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,1"))
                           (rule "polySimp_addComm1" (formula "46") (term "0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0"))
                           (rule "eqSymm" (formula "46"))
                           (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,1"))
                           (rule "eqSymm" (formula "46"))
                           (rule "polySimp_addComm1" (formula "46") (term "0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "46") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "46") (term "0,0,1"))
                           (rule "polySimp_elimOne" (formula "46") (term "0,0,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "46") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "46") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "46") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0,0,0,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "pullOutSelect" (formula "46") (term "1,1") (inst "selectSK=arr_6"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "24"))
                           (rule "pullOutSelect" (formula "47") (term "1,0") (inst "selectSK=arr_7"))
                           (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "commute_or_2" (formula "9") (term "0"))
                           (rule "commute_or_2" (formula "8") (term "0"))
                           (rule "nnf_imp2or" (formula "35") (term "0"))
                           (rule "nnf_imp2or" (formula "34") (term "0"))
                           (rule "arrayLengthIsAShort" (formula "16") (term "1,1"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "arrayLengthNotNegative" (formula "16") (term "1,1"))
                           (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "18"))
                           (rule "leq_literals" (formula "16") (term "0"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "true_left" (formula "16"))
                           (rule "nnf_imp2or" (formula "33") (term "0"))
                           (rule "nnf_imp2or" (formula "32") (term "0"))
                           (rule "equalityToSeqGetAndSeqLenLeft" (formula "31") (inst "iv=iv"))
                           (rule "andLeft" (formula "31"))
                           (rule "lenOfSeqConcat" (formula "31") (term "0"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "polySimp_homoEq" (formula "31"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "31") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                           (rule "mul_literals" (formula "31") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "31") (term "0"))
                           (rule "polySimp_addComm0" (formula "31") (term "0,0"))
                           (rule "lenOfSeqConcat" (formula "32") (term "1,1,0,0"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "polySimp_addComm0" (formula "32") (term "1,1,0,0"))
                           (rule "lenOfSeqConcatEQ" (formula "31") (term "1,0,0") (ifseqformula "33"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "polySimp_addComm0" (formula "31") (term "1,0,0"))
                           (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                           (rule "add_literals" (formula "31") (term "0,0,0"))
                           (rule "add_zero_left" (formula "31") (term "0,0"))
                           (rule "polySimp_pullOutFactor1" (formula "31") (term "0"))
                           (rule "add_literals" (formula "31") (term "1,0"))
                           (rule "times_zero_1" (formula "31") (term "0"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "true_left" (formula "31"))
                           (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                           (rule "getOfSeqConcat" (formula "31") (term "0,1,0"))
                           (rule "polySimp_elimSub" (formula "31") (term "1,2,0,1,0"))
                           (rule "polySimp_addComm0" (formula "31") (term "1,2,0,1,0"))
                           (rule "getOfSeqSingleton" (formula "31") (term "2,0,1,0"))
                           (rule "castDel" (formula "31") (term "2,2,0,1,0"))
                           (rule "castDel" (formula "31") (term "1,2,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,1,0"))
                           (rule "polySimp_sepPosMonomial" (formula "31") (term "0,2,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,0,2,0,1,0"))
                           (rule "polySimp_elimOne" (formula "31") (term "1,0,2,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,1,0"))
                           (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,1,0"))
                           (rule "getOfSeqConcatEQ" (formula "31") (term "1,1,0") (ifseqformula "32"))
                           (rule "eqSymm" (formula "31") (term "1,0"))
                           (rule "polySimp_elimSub" (formula "31") (term "1,2,0,1,0"))
                           (rule "polySimp_addComm0" (formula "31") (term "1,2,0,1,0"))
                           (rule "getOfSeqSingleton" (formula "31") (term "2,0,1,0"))
                           (rule "castDel" (formula "31") (term "2,2,0,1,0"))
                           (rule "castDel" (formula "31") (term "1,2,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,1,0"))
                           (rule "polySimp_sepPosMonomial" (formula "31") (term "0,2,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,0,2,0,1,0"))
                           (rule "polySimp_elimOne" (formula "31") (term "1,0,2,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,1,0"))
                           (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,1,0"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "true_left" (formula "31"))
                           (rule "commute_or_2" (formula "22") (term "0"))
                           (rule "commute_or_2" (formula "21") (term "0"))
                           (rule "commute_or_2" (formula "20") (term "0"))
                           (rule "commute_or_2" (formula "19") (term "0"))
                           (rule "nnf_notAnd" (formula "35") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "35") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0"))
                           (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "35") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
                           (rule "mul_literals" (formula "35") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "34") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "34") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0"))
                           (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "34") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
                           (rule "mul_literals" (formula "34") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "33") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0"))
                           (rule "mul_literals" (formula "33") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "33") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                           (rule "mul_literals" (formula "33") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "32") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "32") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0"))
                           (rule "mul_literals" (formula "32") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "32") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0"))
                           (rule "mul_literals" (formula "32") (term "1,0,0,0"))
                           (rule "commute_or" (formula "36") (term "0,0"))
                           (rule "commute_or" (formula "23") (term "0,0"))
                           (rule "commute_or" (formula "9") (term "0,0"))
                           (rule "commute_or" (formula "8") (term "0,0"))
                           (rule "commute_or_2" (formula "35") (term "0"))
                           (rule "commute_or" (formula "22") (term "0,0"))
                           (rule "commute_or" (formula "21") (term "0,0"))
                           (rule "commute_or" (formula "20") (term "0,0"))
                           (rule "commute_or" (formula "19") (term "0,0"))
                           (rule "commute_or_2" (formula "34") (term "0"))
                           (rule "commute_or_2" (formula "33") (term "0"))
                           (rule "commute_or_2" (formula "32") (term "0"))
                           (rule "commute_or" (formula "35") (term "0,0"))
                           (rule "commute_or" (formula "34") (term "0,0"))
                           (rule "commute_or" (formula "33") (term "0,0"))
                           (rule "commute_or" (formula "32") (term "0,0"))
                           (rule "cut_direct" (formula "9") (term "0,1,1,0"))
                           (branch "CUT: result_0.length ≥ 1 TRUE"
                              (builtin "One Step Simplification" (formula "10"))
                              (rule "ifthenelse_split" (formula "4") (term "0"))
                              (branch "messages[iv_0].length ≥ 1 TRUE"
                                 (rule "replace_known_left" (formula "50") (term "0,1") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "5")))
                                 (rule "arrayLengthIsAShort" (formula "38") (term "1,1,0"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "true_left" (formula "38"))
                                 (rule "arrayLengthNotNegative" (formula "38") (term "1,1,0"))
                                 (rule "arrayLengthIsAShort" (formula "25") (term "1,1,0"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "true_left" (formula "25"))
                                 (rule "arrayLengthNotNegative" (formula "25") (term "1,1,0"))
                                 (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "7"))
                                 (rule "leq_literals" (formula "25") (term "0"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "true_left" (formula "25"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch " ¬messages[iv_0] = null ∧ ¬messages[iv_0].<created> = TRUE TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "referencedObjectIsCreatedRight" (formula "42") (ifseqformula "41"))
                                    (rule "close" (formula "42") (ifseqformula "12"))
                                 )
                                 (branch " ¬messages[iv_0] = null ∧ ¬messages[iv_0].<created> = TRUE FALSE"
                                    (rule "applyEqReverse" (formula "52") (term "0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "ifthenelse_to_or_right" (formula "8") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "8"))
                                    (rule "nnf_notAnd" (formula "8") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "8") (term "0,0,0,1,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "8") (term "0,0,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "8") (term "0,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "8") (term "0,1,1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "8") (term "1,0,1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,1,1,0,0,0"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,1,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,1,1,0,0,0"))
                                    (rule "add_literals" (formula "8") (term "0,0,0,1,0,1,1,0,0,0"))
                                    (rule "add_zero_left" (formula "8") (term "0,0,1,0,1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,1,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "8") (term "1,1,0,1,1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "8") (term "0,0,1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,1,1,0,0,0"))
                                    (rule "add_literals" (formula "8") (term "0,0,0,0,1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,1,1,0,0,0"))
                                    (rule "mul_literals" (formula "8") (term "1,0,0,1,1,0,0,0"))
                                    (rule "commute_or" (formula "8") (term "0,0"))
                                    (rule "commute_or_2" (formula "8") (term "0"))
                                    (rule "commute_or" (formula "8") (term "1,1,0"))
                                    (rule "commute_or_2" (formula "8") (term "0,1,0"))
                                    (rule "commute_or_2" (formula "8") (term "0,1,1,0"))
                                    (rule "commute_or" (formula "8") (term "0,0,1,0"))
                                    (rule "commute_or" (formula "8") (term "0,0,1,1,0"))
                                    (rule "ifthenelse_to_or_left" (formula "10") (term "0,0,0"))
                                    (rule "eqSymm" (formula "10") (term "1,0,0,0,0"))
                                    (rule "eqSymm" (formula "10") (term "1,1,0,0,0"))
                                    (builtin "One Step Simplification" (formula "10"))
                                    (rule "nnf_notAnd" (formula "10") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "10") (term "0,0,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "10") (term "0,1,1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "10") (term "0,0,1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,1,1,0,0,0"))
                                    (rule "add_literals" (formula "10") (term "0,0,0,0,1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,1,1,0,0,0"))
                                    (rule "mul_literals" (formula "10") (term "1,0,0,1,1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "10") (term "1,0,1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,1,1,0,0,0"))
                                    (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,1,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,1,1,0,0,0"))
                                    (rule "add_literals" (formula "10") (term "0,0,0,1,0,1,1,0,0,0"))
                                    (rule "add_zero_left" (formula "10") (term "0,0,1,0,1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,1,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "10") (term "1,1,0,1,1,0,0,0"))
                                    (rule "commute_or" (formula "10") (term "0,0"))
                                    (rule "commute_or_2" (formula "10") (term "0"))
                                    (rule "commute_or_2" (formula "10") (term "0,1,0"))
                                    (rule "commute_or" (formula "10") (term "1,1,0"))
                                    (rule "cnf_rightDist" (formula "8") (term "1,1,0"))
                                    (rule "commute_or" (formula "10") (term "0,0,1,0"))
                                    (rule "commute_or_2" (formula "10") (term "0,1,1,0"))
                                    (rule "commute_or_2" (formula "8") (term "0,1,1,0"))
                                    (rule "inEqSimp_or_tautInEq1" (formula "8") (term "0,0,1,1,0"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,0,1,1,0"))
                                    (rule "qeq_literals" (formula "8") (term "1,0,0,1,1,0"))
                                    (builtin "One Step Simplification" (formula "8"))
                                    (rule "shift_paren_or" (formula "8") (term "1,1,0"))
                                    (rule "commute_or" (formula "8") (term "0,1,1,0"))
                                    (rule "inEqSimp_or_tautInEq1" (formula "8") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "8") (term "1,1,1,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "8") (term "0,1,1,1,0"))
                                    (rule "add_literals" (formula "8") (term "1,0,1,1,1,0"))
                                    (rule "times_zero_1" (formula "8") (term "0,1,1,1,0"))
                                    (rule "leq_literals" (formula "8") (term "1,1,1,0"))
                                    (builtin "One Step Simplification" (formula "8"))
                                    (rule "shift_paren_or" (formula "8") (term "0"))
                                    (rule "commute_or_2" (formula "8") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "8"))
                                    (rule "shift_paren_or" (formula "8") (term "0,0"))
                                    (rule "commute_or" (formula "8") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "8"))
                                    (rule "commute_or" (formula "10") (term "0,0,1,1,0"))
                                    (rule "cnf_rightDist" (formula "10") (term "1,1,0"))
                                    (rule "commute_or_2" (formula "10") (term "0,1,1,0"))
                                    (rule "inEqSimp_or_tautInEq1" (formula "10") (term "0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "10") (term "1,1,0,0,1,1,0"))
                                    (rule "qeq_literals" (formula "10") (term "1,0,0,1,1,0"))
                                    (builtin "One Step Simplification" (formula "10"))
                                    (rule "shift_paren_or" (formula "10") (term "1,1,0"))
                                    (rule "commute_or" (formula "10") (term "0,1,1,0"))
                                    (rule "inEqSimp_or_tautInEq1" (formula "10") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "10") (term "1,1,1,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "10") (term "0,1,1,1,0"))
                                    (rule "add_literals" (formula "10") (term "1,0,1,1,1,0"))
                                    (rule "times_zero_1" (formula "10") (term "0,1,1,1,0"))
                                    (rule "leq_literals" (formula "10") (term "1,1,1,0"))
                                    (builtin "One Step Simplification" (formula "10"))
                                    (rule "shift_paren_or" (formula "10") (term "0"))
                                    (rule "commute_or_2" (formula "10") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "10"))
                                    (rule "shift_paren_or" (formula "10") (term "0,0"))
                                    (rule "commute_or" (formula "10") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "10"))
                                    (rule "arrayLengthIsAShort" (formula "23") (term "1,1,0"))
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "true_left" (formula "23"))
                                    (rule "arrayLengthNotNegative" (formula "23") (term "1,1,0"))
                                    (rule "arrayLengthIsAShort" (formula "22") (term "1,1,0"))
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "true_left" (formula "22"))
                                    (rule "arrayLengthNotNegative" (formula "22") (term "1,1,0"))
                                    (rule "arrayLengthIsAShort" (formula "21") (term "1,1,0"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "arrayLengthNotNegative" (formula "21") (term "1,1,0"))
                                    (rule "arrayLengthIsAShort" (formula "20") (term "1,1,0"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "arrayLengthNotNegative" (formula "20") (term "1,1,0"))
                                    (rule "ifthenelse_to_or_left" (formula "8") (term "0,0,0"))
                                    (rule "eqSymm" (formula "8") (term "1,1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "8") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "8") (term "0,0,0,1,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "8") (term "0,0,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "8") (term "0,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0,0"))
                                    (rule "commute_or" (formula "8") (term "0,0"))
                                    (rule "commute_or_2" (formula "8") (term "0"))
                                    (rule "commute_or" (formula "8") (term "1,1,0"))
                                    (rule "commute_or_2" (formula "8") (term "0,1,0"))
                                    (rule "commute_or" (formula "8") (term "0,0,1,0"))
                                    (rule "cnf_rightDist" (formula "8") (term "1,1,0"))
                                    (rule "cnf_rightDist" (formula "8") (term "0"))
                                    (rule "distr_forallAnd" (formula "8"))
                                    (rule "andLeft" (formula "8"))
                                    (rule "commute_or" (formula "9") (term "0"))
                                    (rule "shift_paren_or" (formula "8") (term "0"))
                                    (rule "commute_or_2" (formula "8") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "8"))
                                    (rule "commute_or" (formula "9") (term "1,1,0"))
                                    (rule "shift_paren_or" (formula "8") (term "0,0"))
                                    (rule "commute_or" (formula "8") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "8"))
                                    (rule "cnf_rightDist" (formula "9") (term "0"))
                                    (rule "distr_forallAnd" (formula "9"))
                                    (rule "andLeft" (formula "9"))
                                    (rule "commute_or_2" (formula "9") (term "0"))
                                    (rule "shift_paren_or" (formula "10") (term "0"))
                                    (rule "commute_or_2" (formula "10") (term "0,0"))
                                    (rule "inEqSimp_or_tautInEq1" (formula "10") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "10") (term "1,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "10") (term "0,1,0"))
                                    (rule "add_literals" (formula "10") (term "1,0,1,0"))
                                    (rule "times_zero_1" (formula "10") (term "0,1,0"))
                                    (rule "leq_literals" (formula "10") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "10"))
                                    (rule "true_left" (formula "10"))
                                    (rule "shift_paren_or" (formula "9") (term "0,0"))
                                    (rule "commute_or" (formula "9") (term "0,0,0"))
                                    (rule "inEqSimp_or_tautInEq1" (formula "9") (term "0,0"))
                                    (rule "add_zero_right" (formula "9") (term "1,1,0,0"))
                                    (rule "qeq_literals" (formula "9") (term "1,0,0"))
                                    (builtin "One Step Simplification" (formula "9"))
                                    (rule "true_left" (formula "9"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch " ¬messages[iv_0] = null ∧ ¬( messages[iv_0].<created> = TRUE ∨ (messages[iv_0]@heap).<created>@anon_heap_first«anonHeapFunction» = TRUE) TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "orRight" (formula "44"))
                                       (rule "referencedObjectIsCreatedRight" (formula "44") (ifseqformula "46"))
                                       (rule "close" (formula "44") (ifseqformula "11"))
                                    )
                                    (branch " ¬messages[iv_0] = null ∧ ¬( messages[iv_0].<created> = TRUE ∨ (messages[iv_0]@heap).<created>@anon_heap_first«anonHeapFunction» = TRUE) FALSE"
                                       (rule "close" (formula "56") (ifseqformula "1"))
                                    )
                                 )
                              )
                              (branch "messages[iv_0].length ≥ 1 FALSE"
                                 (rule "inEqSimp_geqRight" (formula "39"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "5"))
                                 (rule "mul_literals" (formula "5") (term "1,0"))
                                 (rule "add_zero_right" (formula "5") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                 (rule "mul_literals" (formula "5") (term "1"))
                                 (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "4") (term "0"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "closeFalse" (formula "4"))
                              )
                           )
                           (branch "CUT: result_0.length ≥ 1 FALSE"
                              (builtin "One Step Simplification" (formula "9"))
                              (rule "inEqSimp_geqRight" (formula "38"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_or_tautInEq1" (formula "10") (term "0"))
                              (rule "add_zero_right" (formula "10") (term "1,1,0"))
                              (rule "qeq_literals" (formula "10") (term "1,0"))
                              (builtin "One Step Simplification" (formula "10"))
                              (rule "true_left" (formula "10"))
                              (rule "ifthenelse_split" (formula "5") (term "0"))
                              (branch "messages[iv_0].length ≥ 1 TRUE"
                                 (rule "replace_known_left" (formula "49") (term "0,1") (ifseqformula "6"))
                                 (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "6")))
                                 (rule "arrayLengthNotNegative" (formula "37") (term "1,1,0"))
                                 (rule "arrayLengthIsAShort" (formula "38") (term "1,1,0"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "true_left" (formula "38"))
                                 (rule "arrayLengthNotNegative" (formula "24") (term "1,1,0"))
                                 (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "8"))
                                 (rule "leq_literals" (formula "24") (term "0"))
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "true_left" (formula "24"))
                                 (rule "arrayLengthIsAShort" (formula "24") (term "1,1,0"))
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "true_left" (formula "24"))
                                 (rule "ifthenelse_split" (formula "2") (term "0"))
                                 (branch " ¬messages[iv_0] = null ∧ ¬messages[iv_0].<created> = TRUE TRUE"
                                    (rule "andLeft" (formula "2"))
                                    (rule "notLeft" (formula "3"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "referencedObjectIsCreatedRight" (formula "41") (ifseqformula "40"))
                                    (rule "close" (formula "41") (ifseqformula "11"))
                                 )
                                 (branch " ¬messages[iv_0] = null ∧ ¬messages[iv_0].<created> = TRUE FALSE"
                                    (rule "applyEqReverse" (formula "51") (term "0") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "ifthenelse_to_or_right" (formula "9") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "9"))
                                    (rule "nnf_notAnd" (formula "9") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "9") (term "0,0,0,1,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "9") (term "0,0,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "9") (term "0,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0,0"))
                                    (rule "nnf_notAnd" (formula "9") (term "0,1,1,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "9") (term "0,0,1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,1,1,0,0,0"))
                                    (rule "add_zero_right" (formula "9") (term "0,0,0,0,1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,1,1,0,0,0"))
                                    (rule "mul_literals" (formula "9") (term "1,0,0,1,1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "9") (term "1,0,1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,1,1,0,0,0"))
                                    (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,1,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,1,1,0,0,0"))
                                    (rule "add_literals" (formula "9") (term "0,0,0,1,0,1,1,0,0,0"))
                                    (rule "add_zero_left" (formula "9") (term "0,0,1,0,1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,1,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "9") (term "1,1,0,1,1,0,0,0"))
                                    (rule "commute_or" (formula "9") (term "0,0"))
                                    (rule "commute_or_2" (formula "9") (term "0"))
                                    (rule "commute_or" (formula "9") (term "1,1,0"))
                                    (rule "commute_or_2" (formula "9") (term "0,1,0"))
                                    (rule "commute_or_2" (formula "9") (term "0,1,1,0"))
                                    (rule "commute_or" (formula "9") (term "0,0,1,0"))
                                    (rule "commute_or" (formula "9") (term "0,0,1,1,0"))
                                    (rule "cnf_rightDist" (formula "9") (term "1,1,0"))
                                    (rule "commute_or_2" (formula "9") (term "0,1,1,0"))
                                    (rule "inEqSimp_or_tautInEq1" (formula "9") (term "0,0,1,1,0"))
                                    (rule "add_literals" (formula "9") (term "1,1,0,0,1,1,0"))
                                    (rule "qeq_literals" (formula "9") (term "1,0,0,1,1,0"))
                                    (builtin "One Step Simplification" (formula "9"))
                                    (rule "shift_paren_or" (formula "9") (term "1,1,0"))
                                    (rule "commute_or" (formula "9") (term "0,1,1,0"))
                                    (rule "inEqSimp_or_tautInEq1" (formula "9") (term "1,1,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "9") (term "1,1,1,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "9") (term "0,1,1,1,0"))
                                    (rule "add_literals" (formula "9") (term "1,0,1,1,1,0"))
                                    (rule "times_zero_1" (formula "9") (term "0,1,1,1,0"))
                                    (rule "leq_literals" (formula "9") (term "1,1,1,0"))
                                    (builtin "One Step Simplification" (formula "9"))
                                    (rule "shift_paren_or" (formula "9") (term "0"))
                                    (rule "commute_or_2" (formula "9") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "9"))
                                    (rule "shift_paren_or" (formula "9") (term "0,0"))
                                    (rule "commute_or" (formula "9") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "9"))
                                    (rule "ifthenelse_to_or_left" (formula "9") (term "0,0,0"))
                                    (rule "eqSymm" (formula "9") (term "1,1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "9") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "9") (term "0,0,0,1,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "9") (term "0,0,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0,0,0"))
                                    (rule "commute_or" (formula "9") (term "0,0"))
                                    (rule "commute_or_2" (formula "9") (term "0"))
                                    (rule "commute_or_2" (formula "9") (term "0,1,0"))
                                    (rule "commute_or" (formula "9") (term "1,1,0"))
                                    (rule "commute_or" (formula "9") (term "0,0,1,0"))
                                    (rule "cnf_rightDist" (formula "9") (term "1,1,0"))
                                    (rule "cnf_rightDist" (formula "9") (term "0"))
                                    (rule "distr_forallAnd" (formula "9"))
                                    (rule "andLeft" (formula "9"))
                                    (rule "commute_or" (formula "10") (term "0"))
                                    (rule "shift_paren_or" (formula "9") (term "0"))
                                    (rule "commute_or_2" (formula "9") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "9"))
                                    (rule "commute_or" (formula "10") (term "1,1,0"))
                                    (rule "shift_paren_or" (formula "9") (term "0,0"))
                                    (rule "commute_or" (formula "9") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "9"))
                                    (rule "cnf_rightDist" (formula "10") (term "0"))
                                    (rule "distr_forallAnd" (formula "10"))
                                    (rule "andLeft" (formula "10"))
                                    (rule "commute_or_2" (formula "10") (term "0"))
                                    (rule "shift_paren_or" (formula "11") (term "0"))
                                    (rule "commute_or_2" (formula "11") (term "0,0"))
                                    (rule "inEqSimp_or_tautInEq1" (formula "11") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "11") (term "1,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "11") (term "0,1,0"))
                                    (rule "add_literals" (formula "11") (term "1,0,1,0"))
                                    (rule "times_zero_1" (formula "11") (term "0,1,0"))
                                    (rule "leq_literals" (formula "11") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "true_left" (formula "11"))
                                    (rule "shift_paren_or" (formula "10") (term "0,0"))
                                    (rule "commute_or" (formula "10") (term "0,0,0"))
                                    (rule "inEqSimp_or_tautInEq1" (formula "10") (term "0,0"))
                                    (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                    (rule "qeq_literals" (formula "10") (term "1,0,0"))
                                    (builtin "One Step Simplification" (formula "10"))
                                    (rule "true_left" (formula "10"))
                                    (rule "arrayLengthIsAShort" (formula "22") (term "1,1,0"))
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "true_left" (formula "22"))
                                    (rule "arrayLengthNotNegative" (formula "22") (term "1,1,0"))
                                    (rule "arrayLengthNotNegative" (formula "21") (term "1,1,0"))
                                    (rule "arrayLengthIsAShort" (formula "22") (term "1,1,0"))
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "true_left" (formula "22"))
                                    (rule "arrayLengthNotNegative" (formula "20") (term "1,1,0"))
                                    (rule "arrayLengthIsAShort" (formula "21") (term "1,1,0"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "arrayLengthIsAShort" (formula "19") (term "1,1,0"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "arrayLengthNotNegative" (formula "19") (term "1,1,0"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch " ¬messages[iv_0] = null ∧ ¬( messages[iv_0].<created> = TRUE ∨ (messages[iv_0]@heap).<created>@anon_heap_first«anonHeapFunction» = TRUE) TRUE"
                                       (rule "andLeft" (formula "2"))
                                       (rule "notLeft" (formula "3"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "orRight" (formula "44"))
                                       (rule "referencedObjectIsCreatedRight" (formula "44") (ifseqformula "43"))
                                       (rule "close" (formula "44") (ifseqformula "10"))
                                    )
                                    (branch " ¬messages[iv_0] = null ∧ ¬( messages[iv_0].<created> = TRUE ∨ (messages[iv_0]@heap).<created>@anon_heap_first«anonHeapFunction» = TRUE) FALSE"
                                       (rule "close" (formula "55") (ifseqformula "2"))
                                    )
                                 )
                              )
                              (branch "messages[iv_0].length ≥ 1 FALSE"
                                 (rule "inEqSimp_geqRight" (formula "38"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "6"))
                                 (rule "mul_literals" (formula "6") (term "1,0"))
                                 (rule "add_zero_right" (formula "6") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                 (rule "mul_literals" (formula "6") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "6") (term "0"))
                                 (builtin "One Step Simplification" (formula "6"))
                                 (rule "closeFalse" (formula "6"))
                              )
                           )
                        )
                        (branch "messages.length ≥ 1 FALSE"
                           (rule "inEqSimp_geqRight" (formula "33"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_homoInEq1" (formula "3"))
                           (rule "mul_literals" (formula "3") (term "1,0"))
                           (rule "add_zero_right" (formula "3") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                           (rule "mul_literals" (formula "3") (term "1"))
                           (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "3"))
                           (rule "qeq_literals" (formula "2") (term "0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "closeFalse" (formula "2"))
                        )
                     )
                  )
               )
               (branch "CUT: array2seq(heapAfter_first, bal) = array2seq(heapAfter_addEntry, bal) FALSE"
                  (rule "equalityToSeqGetAndSeqLenRight" (formula "24") (inst "iv=iv") (userinteraction))
                  (rule "andRight" (formula "24") (userinteraction))
                  (branch "Case 1"
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (ifseqformula "13"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "1") (ifseqformula "13"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "1") (ifseqformula "18"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "0,1") (ifseqformula "13"))
                     (rule "orRight" (formula "25"))
                     (rule "eqSymm" (formula "1"))
                     (rule "eqSymm" (formula "20"))
                     (rule "eqSymm" (formula "32"))
                     (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "31"))
                     (builtin "One Step Simplification" (formula "6"))
                     (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "28"))
                     (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "29")))
                     (rule "replace_known_right" (formula "19") (term "0") (ifseqformula "27"))
                     (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "25")) (ifInst ""  (formula "26")))
                     (rule "inEqSimp_homoInEq1" (formula "8"))
                     (rule "polySimp_addComm1" (formula "8") (term "0"))
                     (rule "applyEq" (formula "16") (term "0") (ifseqformula "1"))
                     (rule "eqSymm" (formula "16"))
                     (rule "applyEq" (formula "20") (term "0,1,0") (ifseqformula "16"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                     (rule "polySimp_mulComm0" (formula "8") (term "1"))
                     (rule "polySimp_rightDist" (formula "8") (term "1"))
                     (rule "mul_literals" (formula "8") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                     (rule "nonNull" (formula "11") (inst "i=i"))
                     (rule "greater_literals" (formula "11") (term "0,1"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "sub_literals" (formula "11") (term "2,1,0,1"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "andLeft" (formula "11"))
                     (rule "notLeft" (formula "11"))
                     (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "24"))
                     (builtin "One Step Simplification" (formula "5"))
                     (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "24"))
                     (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                     (rule "array2seqDef" (formula "9") (term "0,0") (inst "u=u"))
                     (rule "narrowSelectArrayType" (formula "9") (term "2,0,0") (ifseqformula "2") (ifseqformula "32"))
                     (rule "array2seqDef" (formula "25") (term "0,0") (inst "u=u"))
                     (rule "lenOfSeqDef" (formula "25") (term "0"))
                     (rule "polySimp_elimSub" (formula "25") (term "1,0"))
                     (rule "times_zero_2" (formula "25") (term "1,1,0"))
                     (rule "add_zero_right" (formula "25") (term "1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0"))
                     (rule "add_zero_right" (formula "25") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0"))
                     (rule "polySimp_elimOne" (formula "25") (term "0,0,0"))
                     (rule "array2seqDef" (formula "25") (term "0,1") (inst "u=u"))
                     (rule "eqSymm" (formula "25"))
                     (rule "lenOfSeqDef" (formula "25") (term "0"))
                     (rule "polySimp_elimSub" (formula "25") (term "1,0"))
                     (rule "times_zero_2" (formula "25") (term "1,1,0"))
                     (rule "add_zero_right" (formula "25") (term "1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0"))
                     (rule "add_zero_right" (formula "25") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0"))
                     (rule "polySimp_elimOne" (formula "25") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "closeTrue" (formula "25"))
                  )
                  (branch "Case 2"
                     (rule "hide_right" (formula "31") (userinteraction))
                     (rule "allRight" (formula "24") (inst "sk=iv_10") (userinteraction))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (ifseqformula "13"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "1") (ifseqformula "13"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "1") (ifseqformula "18"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "0,1") (ifseqformula "13"))
                     (rule "impRight" (formula "24"))
                     (rule "orRight" (formula "26"))
                     (rule "andLeft" (formula "1"))
                     (rule "eqSymm" (formula "3"))
                     (rule "eqSymm" (formula "22"))
                     (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "33"))
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "30"))
                     (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "31")))
                     (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "29"))
                     (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "27")) (ifInst ""  (formula "28")))
                     (rule "inEqSimp_ltToLeq" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "10"))
                     (rule "polySimp_addComm1" (formula "10") (term "0"))
                     (rule "applyEq" (formula "18") (term "0") (ifseqformula "3"))
                     (rule "eqSymm" (formula "18"))
                     (rule "applyEq" (formula "22") (term "0,1,0") (ifseqformula "18"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1"))
                     (rule "polySimp_rightDist" (formula "10") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                     (rule "mul_literals" (formula "10") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                     (rule "nonNull" (formula "24") (inst "i=i"))
                     (rule "greater_literals" (formula "24") (term "0,1"))
                     (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "29")))
                     (rule "sub_literals" (formula "24") (term "2,1,0"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                     (rule "array2seqDef" (formula "11") (term "0,0") (inst "u=u"))
                     (rule "narrowSelectArrayType" (formula "11") (term "2,0,0") (ifseqformula "4") (ifseqformula "33"))
                     (rule "nonNull" (formula "13") (inst "i=i"))
                     (rule "greater_literals" (formula "13") (term "0,1"))
                     (builtin "One Step Simplification" (formula "13"))
                     (rule "sub_literals" (formula "13") (term "2,1,0,1"))
                     (builtin "One Step Simplification" (formula "13"))
                     (rule "andLeft" (formula "13"))
                     (rule "notLeft" (formula "13"))
                     (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "26"))
                     (builtin "One Step Simplification" (formula "7"))
                     (rule "narrowSelectArrayType" (formula "13") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "26"))
                     (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                     (rule "array2seqDef" (formula "27") (term "0,0") (inst "u=u"))
                     (rule "getOfSeqDef" (formula "27") (term "0"))
                     (rule "castDel" (formula "27") (term "2,0"))
                     (rule "castDel" (formula "27") (term "1,0"))
                     (rule "add_zero_right" (formula "27") (term "0,2,1,0"))
                     (rule "polySimp_elimSub" (formula "27") (term "1,1,0,0"))
                     (rule "times_zero_2" (formula "27") (term "1,1,1,0,0"))
                     (rule "add_zero_right" (formula "27") (term "1,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                     (rule "polySimp_addComm1" (formula "27") (term "0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                     (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0"))
                     (rule "polySimp_elimOne" (formula "27") (term "0,0,0"))
                     (rule "array2seqDef" (formula "3") (term "0") (inst "u=u"))
                     (rule "array2seqDef" (formula "3") (term "1") (inst "u=u"))
                     (rule "array2seqDef" (formula "18") (term "1") (inst "u=u"))
                     (rule "eqSymm" (formula "18"))
                     (rule "array2seqDef" (formula "22") (term "0,1,0") (inst "u=u"))
                     (rule "array2seqDef" (formula "2") (term "0,0") (inst "u=u"))
                     (rule "lenOfSeqDef" (formula "2") (term "0"))
                     (rule "polySimp_elimSub" (formula "2") (term "1,0"))
                     (rule "mul_literals" (formula "2") (term "1,1,0"))
                     (rule "add_zero_right" (formula "2") (term "1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0"))
                     (rule "add_zero_right" (formula "2") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                     (rule "array2seqDef" (formula "10") (term "0,0") (inst "u=u"))
                     (rule "narrowSelectArrayType" (formula "10") (term "2,0,0") (ifseqformula "4") (ifseqformula "34"))
                     (rule "array2seqDef" (formula "27") (term "0,1") (inst "u=u"))
                     (rule "eqSymm" (formula "27"))
                     (rule "getOfSeqDef" (formula "27") (term "0"))
                     (rule "castDel" (formula "27") (term "2,0"))
                     (rule "castDel" (formula "27") (term "1,0"))
                     (rule "add_zero_right" (formula "27") (term "0,2,1,0"))
                     (rule "polySimp_elimSub" (formula "27") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "27") (term "1,1,1,0,0"))
                     (rule "add_zero_right" (formula "27") (term "1,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                     (rule "polySimp_addComm1" (formula "27") (term "0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                     (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0"))
                     (rule "polySimp_elimOne" (formula "27") (term "0,0,0"))
                     (rule "eqSymm" (formula "27"))
                     (rule "eqSeqDef" (formula "3") (inst "iv=iv"))
                     (rule "andLeft" (formula "3"))
                     (rule "getOfSeqDef" (formula "4") (term "0,1,0"))
                     (rule "castDel" (formula "4") (term "1,0,1,0"))
                     (rule "castDel" (formula "4") (term "2,0,1,0"))
                     (rule "add_zero_right" (formula "4") (term "0,2,1,0,1,0"))
                     (rule "eqSymm" (formula "4") (term "1,0"))
                     (rule "polySimp_elimSub" (formula "4") (term "1,1,0,1,1,0"))
                     (rule "mul_literals" (formula "4") (term "1,1,1,0,1,1,0"))
                     (rule "add_zero_right" (formula "4") (term "1,1,0,1,1,0"))
                     (rule "lenOfSeqDef" (formula "3") (term "0"))
                     (rule "eqSymm" (formula "3"))
                     (rule "polySimp_elimSub" (formula "3") (term "1,1"))
                     (rule "times_zero_2" (formula "3") (term "1,1,1"))
                     (rule "add_zero_right" (formula "3") (term "1,1"))
                     (rule "lenOfSeqDef" (formula "4") (term "1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "4") (term "1,1,1,0,0"))
                     (rule "times_zero_2" (formula "4") (term "1,1,1,1,0,0"))
                     (rule "add_zero_right" (formula "4") (term "1,1,1,0,0"))
                     (rule "getOfSeqDef" (formula "4") (term "0,1,0"))
                     (rule "castDel" (formula "4") (term "1,0,1,0"))
                     (rule "castDel" (formula "4") (term "2,0,1,0"))
                     (rule "add_zero_right" (formula "4") (term "0,2,1,0,1,0"))
                     (rule "polySimp_elimSub" (formula "4") (term "1,1,0,0,1,0"))
                     (rule "times_zero_2" (formula "4") (term "1,1,1,0,0,1,0"))
                     (rule "add_zero_right" (formula "4") (term "1,1,0,0,1,0"))
                     (rule "eqSymm" (formula "4") (term "1,0"))
                     (rule "lenOfSeqDef" (formula "3") (term "0"))
                     (rule "polySimp_elimSub" (formula "3") (term "1,0"))
                     (rule "mul_literals" (formula "3") (term "1,1,0"))
                     (rule "add_zero_right" (formula "3") (term "1,0"))
                     (builtin "One Step Simplification" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "inEqSimp_ltToLeq" (formula "3") (term "0,1,1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0,1,0"))
                     (rule "eqSymm" (formula "3") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0,1,0"))
                     (rule "eqSymm" (formula "3") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,1,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,1,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "3") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0,1,0"))
                     (rule "eqSymm" (formula "3") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,1,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,1,1,0"))
                     (rule "mul_literals" (formula "3") (term "0,1,1,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,1,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,1,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0,0,1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0,0,1,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0,1,0"))
                     (rule "mul_literals" (formula "3") (term "0,1,1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0,1,0"))
                     (rule "eqSymm" (formula "3") (term "1,0"))
                     (rule "array2seqDef" (formula "18") (term "0,1") (inst "u=u"))
                     (rule "eqSymm" (formula "18"))
                     (rule "eqSeqDef" (formula "18") (inst "iv=iv"))
                     (rule "andLeft" (formula "18"))
                     (rule "lenOfSeqDef" (formula "18") (term "1"))
                     (rule "polySimp_elimSub" (formula "18") (term "1,1"))
                     (rule "mul_literals" (formula "18") (term "1,1,1"))
                     (rule "add_zero_right" (formula "18") (term "1,1"))
                     (rule "getOfSeqDef" (formula "19") (term "1,1,0"))
                     (rule "castDel" (formula "19") (term "2,1,1,0"))
                     (rule "castDel" (formula "19") (term "1,1,1,0"))
                     (rule "add_zero_right" (formula "19") (term "0,2,1,1,1,0"))
                     (rule "polySimp_elimSub" (formula "19") (term "1,1,0,1,1,0"))
                     (rule "mul_literals" (formula "19") (term "1,1,1,0,1,1,0"))
                     (rule "add_zero_right" (formula "19") (term "1,1,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                     (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1"))
                     (rule "add_zero_right" (formula "18") (term "0,0,1"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,1,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,1,1,0"))
                     (rule "apply_eq_monomials" (formula "19") (term "1,0,1,0,0") (ifseqformula "18"))
                     (rule "polySimp_rightDist" (formula "19") (term "0,1,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,1,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "19") (term "1,0,1,0,0"))
                     (rule "add_literals" (formula "19") (term "1,1,1,0,1,0,0"))
                     (rule "times_zero_1" (formula "19") (term "1,1,0,1,0,0"))
                     (rule "add_zero_right" (formula "19") (term "1,0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0,0"))
                     (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "0,0,1"))
                     (rule "polySimp_elimOne" (formula "18") (term "0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,1,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,1,1,0"))
                     (rule "mul_literals" (formula "19") (term "0,1,1,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,1,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0,1,0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,1,0,0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "19") (term "0,0,0,1,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                     (rule "pullOutSelect" (formula "28") (term "1,1") (inst "selectSK=arr_173"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "16"))
                     (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "9"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "closeTrue" (formula "29"))
                  )
               )
            )
            (branch "CUT: array2seq(heapAfter_addEntry, result_0) = array2seq(heapAfter_first, result_0) FALSE"
               (rule "hide_right" (formula "30") (userinteraction))
               (rule "equalityToSeqGetAndSeqLenRight" (formula "23") (inst "iv=iv") (userinteraction))
               (rule "andRight" (formula "23") (userinteraction))
               (branch "Case 1"
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (ifseqformula "12"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "1") (ifseqformula "12"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "1") (ifseqformula "17"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "0,1") (ifseqformula "12"))
                  (rule "orRight" (formula "24"))
                  (rule "eqSymm" (formula "23"))
                  (rule "eqSymm" (formula "19"))
                  (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "30"))
                  (builtin "One Step Simplification" (formula "5"))
                  (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "27"))
                  (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "28")))
                  (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "26"))
                  (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "24")) (ifInst ""  (formula "25")))
                  (rule "inEqSimp_homoInEq1" (formula "7"))
                  (rule "polySimp_addComm1" (formula "7") (term "0"))
                  (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "15"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1"))
                  (rule "polySimp_rightDist" (formula "7") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                  (rule "mul_literals" (formula "7") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                  (rule "array2seqDef" (formula "15") (term "0,1") (inst "u=u"))
                  (rule "eqSymm" (formula "15"))
                  (rule "nonNull" (formula "21") (inst "i=i"))
                  (rule "greater_literals" (formula "21") (term "0,1"))
                  (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "26")))
                  (rule "sub_literals" (formula "21") (term "2,1,0"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "10") (inst "i=i"))
                  (rule "greater_literals" (formula "10") (term "0,1"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "sub_literals" (formula "10") (term "2,1,0,1"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "andLeft" (formula "10"))
                  (rule "notLeft" (formula "10"))
                  (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "23"))
                  (builtin "One Step Simplification" (formula "4"))
                  (rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "23"))
                  (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                  (rule "array2seqDef" (formula "8") (term "0,0") (inst "u=u"))
                  (rule "narrowSelectArrayType" (formula "8") (term "2,0,0") (ifseqformula "1") (ifseqformula "31"))
                  (rule "array2seqDef" (formula "24") (term "0,1") (inst "u=u"))
                  (rule "eqSymm" (formula "24"))
                  (rule "lenOfSeqDef" (formula "24") (term "0"))
                  (rule "polySimp_elimSub" (formula "24") (term "1,0"))
                  (rule "times_zero_2" (formula "24") (term "1,1,0"))
                  (rule "add_zero_right" (formula "24") (term "1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0"))
                  (rule "add_zero_right" (formula "24") (term "0,0,0"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0"))
                  (rule "polySimp_elimOne" (formula "24") (term "0,0,0"))
                  (rule "array2seqDef" (formula "19") (term "0,1,0") (inst "u=u"))
                  (rule "array2seqDef" (formula "7") (term "0,0") (inst "u=u"))
                  (rule "narrowSelectArrayType" (formula "7") (term "2,0,0") (ifseqformula "1") (ifseqformula "31"))
                  (rule "array2seqDef" (formula "15") (term "1") (inst "u=u"))
                  (rule "eqSymm" (formula "15"))
                  (rule "array2seqDef" (formula "24") (term "0,0,1") (inst "u=u"))
                  (rule "eqSymm" (formula "24"))
                  (rule "lenOfSeqDefEQ" (formula "24") (term "0") (ifseqformula "15"))
                  (rule "polySimp_elimSub" (formula "24") (term "1,0"))
                  (rule "mul_literals" (formula "24") (term "1,1,0"))
                  (rule "add_zero_right" (formula "24") (term "1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0"))
                  (rule "eqSymm" (formula "24"))
                  (rule "eqSeqDef2" (formula "15") (inst "iv=iv") (ifseqformula "15"))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "true_left" (formula "15"))
                  (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "7"))
                  (rule "times_zero_1" (formula "8") (term "0,0"))
                  (rule "add_zero_left" (formula "8") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                  (rule "mul_literals" (formula "8") (term "1"))
                  (rule "nnf_imp2or" (formula "21") (term "0"))
                  (rule "nnf_imp2or" (formula "11") (term "0"))
                  (rule "nnf_notAnd" (formula "21") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "21") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
                  (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "21") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                  (rule "mul_literals" (formula "21") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "11") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
                  (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                  (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                  (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "20") (ifseqformula "3"))
                  (rule "andLeft" (formula "20"))
                  (rule "notLeft" (formula "21"))
                  (rule "andLeft" (formula "20"))
                  (rule "andLeft" (formula "20"))
                  (rule "notLeft" (formula "22"))
                  (rule "andLeft" (formula "20"))
                  (rule "notLeft" (formula "22"))
                  (rule "notLeft" (formula "21"))
                  (rule "andLeft" (formula "20"))
                  (rule "andLeft" (formula "20"))
                  (rule "andLeft" (formula "20"))
                  (rule "andLeft" (formula "20"))
                  (rule "notLeft" (formula "20"))
                  (rule "nonNull" (formula "23") (inst "i=i"))
                  (rule "greater_literals" (formula "23") (term "0,1"))
                  (builtin "One Step Simplification" (formula "23"))
                  (rule "sub_literals" (formula "23") (term "2,1,0,1"))
                  (builtin "One Step Simplification" (formula "23"))
                  (rule "andLeft" (formula "23"))
                  (rule "notLeft" (formula "23"))
                  (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "22") (inst "i=i"))
                  (rule "greater_literals" (formula "22") (term "0,1"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "sub_literals" (formula "22") (term "2,1,0,1"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "andLeft" (formula "22"))
                  (rule "notLeft" (formula "22"))
                  (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "21") (inst "i=i"))
                  (rule "greater_literals" (formula "21") (term "0,1"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "sub_literals" (formula "21") (term "2,1,0,1"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "andLeft" (formula "21"))
                  (rule "notLeft" (formula "21"))
                  (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "20") (inst "i=i"))
                  (rule "greater_literals" (formula "20") (term "0,1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "sub_literals" (formula "20") (term "2,1,0,1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "andLeft" (formula "20"))
                  (rule "notLeft" (formula "20"))
                  (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                  (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_6"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "14"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "3"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")) (ifInst ""  (formula "3")))
                  (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_6"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "14"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "3"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")) (ifInst ""  (formula "3")))
                  (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_6"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "14"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "3"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")) (ifInst ""  (formula "3")))
                  (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_6"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "14"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "3"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")) (ifInst ""  (formula "3")))
                  (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_6"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "14"))
                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "3"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")) (ifInst ""  (formula "3")))
                  (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "pullOutSelect" (formula "23") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_6"))
                  (rule "applyEq" (formula "30") (term "0") (ifseqformula "23"))
                  (rule "applyEq" (formula "24") (term "0,1,1,1,0,0") (ifseqformula "23"))
                  (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "17"))
                  (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "43")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "0,0,0") (ifseqformula "13"))
                  (rule "replace_known_left" (formula "23") (term "0,0,0,0") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "23"))
                  (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "43")) (ifInst ""  (formula "2")))
                  (rule "applyEqReverse" (formula "24") (term "0,1,1,1,0,0") (ifseqformula "23"))
                  (rule "applyEqReverse" (formula "24") (term "1,0,0,1,0") (ifseqformula "23"))
                  (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "23"))
                  (rule "hideAuxiliaryEq" (formula "23"))
                  (rule "pullOutSelect" (formula "22") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_6"))
                  (rule "applyEq" (formula "29") (term "0") (ifseqformula "22"))
                  (rule "applyEq" (formula "23") (term "0,1,1,1,0,0") (ifseqformula "22"))
                  (rule "simplifySelectOfAnonEQ" (formula "22") (ifseqformula "17"))
                  (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "43")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "0,0,0") (ifseqformula "13"))
                  (rule "replace_known_left" (formula "22") (term "0,0,0,0") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "22"))
                  (rule "simplifySelectOfAnonEQ" (formula "22") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "43")) (ifInst ""  (formula "2")))
                  (rule "applyEqReverse" (formula "23") (term "0,1,1,1,0,0") (ifseqformula "22"))
                  (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "22"))
                  (rule "applyEqReverse" (formula "23") (term "1,0,0,1,0") (ifseqformula "22"))
                  (rule "hideAuxiliaryEq" (formula "22"))
                  (rule "pullOutSelect" (formula "21") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_6"))
                  (rule "applyEq" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "21"))
                  (rule "applyEq" (formula "28") (term "0") (ifseqformula "21"))
                  (rule "simplifySelectOfAnonEQ" (formula "21") (ifseqformula "17"))
                  (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "43")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,0,0") (ifseqformula "13"))
                  (rule "replace_known_left" (formula "21") (term "0,0,0,0") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "simplifySelectOfAnonEQ" (formula "21") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "43")) (ifInst ""  (formula "2")))
                  (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "21"))
                  (rule "applyEqReverse" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "21"))
                  (rule "applyEqReverse" (formula "22") (term "1,0,0,1,0") (ifseqformula "21"))
                  (rule "hideAuxiliaryEq" (formula "21"))
                  (rule "pullOutSelect" (formula "20") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_6"))
                  (rule "applyEq" (formula "21") (term "0,1,1,1,0,0") (ifseqformula "20"))
                  (rule "applyEq" (formula "27") (term "0") (ifseqformula "20"))
                  (rule "simplifySelectOfAnonEQ" (formula "20") (ifseqformula "17"))
                  (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "43")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "0,0,0") (ifseqformula "13"))
                  (rule "replace_known_left" (formula "20") (term "0,0,0,0") (ifseqformula "2"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "simplifySelectOfAnonEQ" (formula "20") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "43")) (ifInst ""  (formula "2")))
                  (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "20"))
                  (rule "applyEqReverse" (formula "21") (term "0,1,1,1,0,0") (ifseqformula "20"))
                  (rule "applyEqReverse" (formula "21") (term "1,0,0,1,0") (ifseqformula "20"))
                  (rule "hideAuxiliaryEq" (formula "20"))
                  (rule "nnf_imp2or" (formula "23") (term "0"))
                  (rule "nnf_imp2or" (formula "22") (term "0"))
                  (rule "nnf_imp2or" (formula "21") (term "0"))
                  (rule "nnf_imp2or" (formula "20") (term "0"))
                  (rule "nnf_notAnd" (formula "23") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
                  (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "23") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                  (rule "mul_literals" (formula "23") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "22") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
                  (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                  (rule "mul_literals" (formula "22") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "21") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
                  (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "21") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                  (rule "mul_literals" (formula "21") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "21") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "20") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
                  (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                  (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
                  (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "10") (ifseqformula "3"))
                  (rule "andLeft" (formula "10"))
                  (rule "andLeft" (formula "10"))
                  (rule "notLeft" (formula "12"))
                  (rule "andLeft" (formula "10"))
                  (rule "notLeft" (formula "12"))
                  (rule "andLeft" (formula "10"))
                  (rule "notLeft" (formula "12"))
                  (rule "notLeft" (formula "11"))
                  (rule "andLeft" (formula "10"))
                  (rule "andLeft" (formula "10"))
                  (rule "andLeft" (formula "10"))
                  (rule "andLeft" (formula "10"))
                  (rule "notLeft" (formula "10"))
                  (rule "nonNull" (formula "13") (inst "i=i"))
                  (rule "greater_literals" (formula "13") (term "0,1"))
                  (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "32")))
                  (rule "sub_literals" (formula "13") (term "2,1,0"))
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "narrowSelectArrayType" (formula "13") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "32"))
                  (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "12") (inst "i=i"))
                  (rule "greater_literals" (formula "12") (term "0,1"))
                  (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "31")))
                  (rule "sub_literals" (formula "12") (term "2,1,0"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "31"))
                  (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "11") (inst "i=i"))
                  (rule "greater_literals" (formula "11") (term "0,1"))
                  (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "30")))
                  (rule "sub_literals" (formula "11") (term "2,1,0"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "30"))
                  (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                  (rule "nonNull" (formula "10") (inst "i=i"))
                  (rule "sub_literals" (formula "10") (term "2,1,0,1,1"))
                  (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "29")))
                  (rule "greater_literals" (formula "10") (term "0"))
                  (builtin "One Step Simplification" (formula "10"))
                  (rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "29"))
                  (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                  (rule "commute_or_2" (formula "27") (term "0"))
                  (rule "commute_or_2" (formula "14") (term "0"))
                  (rule "nnf_imp2or" (formula "13") (term "0"))
                  (rule "nnf_imp2or" (formula "12") (term "0"))
                  (rule "nnf_imp2or" (formula "11") (term "0"))
                  (rule "nnf_imp2or" (formula "10") (term "0"))
                  (rule "nnf_notAnd" (formula "13") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                  (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                  (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "12") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                  (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                  (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "11") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
                  (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                  (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "10") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
                  (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                  (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
                  (rule "commute_or_2" (formula "26") (term "0"))
                  (rule "ifthenelse_split" (formula "39") (term "1"))
                  (branch "result_0.length ≥ 0 TRUE"
                     (builtin "One Step Simplification" (formula "40"))
                     (rule "orRight" (formula "40"))
                     (rule "eqSymm" (formula "41"))
                     (rule "inEqSimp_geqRight" (formula "40"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "41"))
                     (rule "add_zero_right" (formula "1") (term "1"))
                     (rule "inEqSimp_contradEq3" (formula "41") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "41") (term "1,0,0"))
                     (rule "add_zero_right" (formula "41") (term "0,0"))
                     (rule "qeq_literals" (formula "41") (term "0"))
                     (builtin "One Step Simplification" (formula "41"))
                     (rule "false_right" (formula "41"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "1") (term "0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "result_0.length ≥ 0 FALSE"
                     (builtin "One Step Simplification" (formula "40"))
                     (rule "orRight" (formula "40"))
                     (rule "notRight" (formula "40"))
                     (rule "inEqSimp_geqRight" (formula "40"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_contradEq7" (formula "41") (ifseqformula "2"))
                     (rule "times_zero_1" (formula "41") (term "1,0,0"))
                     (rule "add_zero_right" (formula "41") (term "0,0"))
                     (rule "leq_literals" (formula "41") (term "0"))
                     (builtin "One Step Simplification" (formula "41"))
                     (rule "false_right" (formula "41"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "1") (term "0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "Case 2"
                  (rule "allRight" (formula "23") (inst "sk=iv_6") (userinteraction))
                  (rule "impRight" (formula "23") (userinteraction))
                  (rule "getOfArray2seq" (formula "24") (term "0") (userinteraction))
                  (branch "Case 1"
                     (rule "getOfArray2seq" (formula "24") (term "1") (userinteraction))
                     (branch "Case 1"
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (ifseqformula "13"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "1") (ifseqformula "13"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "1") (ifseqformula "18"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "0,1") (ifseqformula "13"))
                        (rule "andLeft" (formula "1"))
                        (rule "orRight" (formula "26"))
                        (rule "eqSymm" (formula "21"))
                        (rule "eqSymm" (formula "25"))
                        (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "32"))
                        (builtin "One Step Simplification" (formula "7"))
                        (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "29"))
                        (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "30")))
                        (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "28"))
                        (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "26")) (ifInst ""  (formula "27")))
                        (rule "inEqSimp_ltToLeq" (formula "2"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "9"))
                        (rule "polySimp_addComm1" (formula "9") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "9"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1"))
                        (rule "polySimp_rightDist" (formula "9") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                        (rule "mul_literals" (formula "9") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                        (rule "array2seqDef" (formula "17") (term "0") (inst "u=u"))
                        (rule "array2seqDef" (formula "17") (term "0,1") (inst "u=u"))
                        (rule "array2seqDef" (formula "10") (term "0,0") (inst "u=u"))
                        (rule "narrowSelectArrayType" (formula "10") (term "2,0,0") (ifseqformula "3") (ifseqformula "32"))
                        (rule "nonNull" (formula "12") (inst "i=i"))
                        (rule "greater_literals" (formula "12") (term "0,1"))
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "sub_literals" (formula "12") (term "2,1,0,1"))
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "andLeft" (formula "12"))
                        (rule "notLeft" (formula "12"))
                        (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "25"))
                        (builtin "One Step Simplification" (formula "6"))
                        (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "3") (ifseqformula "25"))
                        (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                        (rule "nonNull" (formula "23") (inst "i=i"))
                        (rule "greater_literals" (formula "23") (term "0,1"))
                        (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "29")))
                        (rule "sub_literals" (formula "23") (term "2,1,0"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                        (rule "array2seqDef" (formula "21") (term "0,1,0") (inst "u=u"))
                        (rule "array2seqDef" (formula "2") (term "0,0") (inst "u=u"))
                        (rule "lenOfSeqDef" (formula "2") (term "0"))
                        (rule "polySimp_elimSub" (formula "2") (term "1,0"))
                        (rule "times_zero_2" (formula "2") (term "1,1,0"))
                        (rule "add_zero_right" (formula "2") (term "1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0"))
                        (rule "add_zero_right" (formula "2") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                        (rule "array2seqDef" (formula "9") (term "0,0") (inst "u=u"))
                        (rule "narrowSelectArrayType" (formula "9") (term "2,0,0") (ifseqformula "3") (ifseqformula "33"))
                        (rule "eqSeqDef2" (formula "17") (inst "iv=iv") (ifseqformula "17"))
                        (builtin "One Step Simplification" (formula "17"))
                        (rule "true_left" (formula "17"))
                        (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=arr_171"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")) (ifInst ""  (formula "31")))
                        (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "eqSymm" (formula "25"))
                        (rule "narrowSelectArrayType" (formula "25") (term "1") (ifseqformula "13") (ifseqformula "29"))
                        (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=arr_172"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "30")))
                        (rule "replaceKnownSelect_taclet00110000_1" (formula "1") (term "2,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00110000_2" (formula "1") (term "2,0"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "15"))
                        (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "31"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                        (rule "applyEqReverse" (formula "26") (term "0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "narrowSelectArrayType" (formula "25") (term "0") (ifseqformula "13") (ifseqformula "29"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "closeTrue" (formula "25"))
                     )
                     (branch "Case 2"
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (ifseqformula "13"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "1") (ifseqformula "13"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "1") (ifseqformula "18"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "0,1") (ifseqformula "13"))
                        (rule "andLeft" (formula "1"))
                        (rule "orRight" (formula "27"))
                        (rule "eqSymm" (formula "21"))
                        (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "1"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "33"))
                        (builtin "One Step Simplification" (formula "7"))
                        (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "30"))
                        (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "31")))
                        (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "29"))
                        (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "27")) (ifInst ""  (formula "28")))
                        (rule "inEqSimp_ltRight" (formula "25"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "10"))
                        (rule "polySimp_addComm1" (formula "10") (term "0"))
                        (rule "applyEq" (formula "26") (term "0,1") (ifseqformula "18"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1"))
                        (rule "polySimp_rightDist" (formula "10") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                        (rule "mul_literals" (formula "10") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                        (rule "nonNull" (formula "13") (inst "i=i"))
                        (rule "sub_literals" (formula "13") (term "2,1,0,1,1"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "greater_literals" (formula "13") (term "0,1"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "andLeft" (formula "13"))
                        (rule "notLeft" (formula "13"))
                        (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "26"))
                        (builtin "One Step Simplification" (formula "7"))
                        (rule "narrowSelectArrayType" (formula "13") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "26"))
                        (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                        (rule "array2seqDef" (formula "11") (term "0,0") (inst "u=u"))
                        (rule "narrowSelectArrayType" (formula "11") (term "2,0,0") (ifseqformula "4") (ifseqformula "34"))
                        (rule "array2seqDef" (formula "18") (term "0") (inst "u=u"))
                        (rule "nonNull" (formula "24") (inst "i=i"))
                        (rule "greater_literals" (formula "24") (term "0,1"))
                        (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "30")))
                        (rule "sub_literals" (formula "24") (term "2,1,0"))
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                        (rule "array2seqDef" (formula "18") (term "0,1") (inst "u=u"))
                        (rule "array2seqDef" (formula "22") (term "0,1,0") (inst "u=u"))
                        (rule "array2seqDef" (formula "27") (term "0,0,1") (inst "u=u"))
                        (rule "eqSymm" (formula "27"))
                        (rule "array2seqDef" (formula "3") (term "0,0") (inst "u=u"))
                        (rule "lenOfSeqDef" (formula "3") (term "0"))
                        (rule "polySimp_elimSub" (formula "3") (term "1,0"))
                        (rule "times_zero_2" (formula "3") (term "1,1,0"))
                        (rule "add_zero_right" (formula "3") (term "1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "3") (term "0,0"))
                        (rule "add_zero_right" (formula "3") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0,0,0"))
                        (rule "array2seqDef" (formula "10") (term "0,0") (inst "u=u"))
                        (rule "narrowSelectArrayType" (formula "10") (term "2,0,0") (ifseqformula "4") (ifseqformula "34"))
                        (rule "eqSeqDef2" (formula "18") (inst "iv=iv") (ifseqformula "18"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "true_left" (formula "18"))
                        (rule "pullOutSelect" (formula "26") (term "1") (inst "selectSK=arr_170"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "16"))
                        (rule "replace_known_left" (formula "1") (term "1,0,0,0") (ifseqformula "18"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")) (ifInst ""  (formula "32")))
                        (rule "applyEqReverse" (formula "27") (term "1") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "narrowSelectArrayType" (formula "26") (term "1") (ifseqformula "14") (ifseqformula "30"))
                        (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "10"))
                        (rule "mul_literals" (formula "11") (term "0,0"))
                        (rule "add_zero_left" (formula "11") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                        (rule "mul_literals" (formula "11") (term "1"))
                        (rule "nnf_imp2or" (formula "14") (term "0"))
                        (rule "nnf_imp2or" (formula "24") (term "0"))
                        (rule "nnf_notAnd" (formula "14") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                        (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                        (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "24") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                        (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "24") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                        (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                        (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "13") (ifseqformula "6"))
                        (rule "andLeft" (formula "13"))
                        (rule "notLeft" (formula "14"))
                        (rule "andLeft" (formula "13"))
                        (rule "andLeft" (formula "13"))
                        (rule "notLeft" (formula "15"))
                        (rule "notLeft" (formula "14"))
                        (rule "andLeft" (formula "13"))
                        (rule "andLeft" (formula "13"))
                        (rule "notLeft" (formula "15"))
                        (rule "andLeft" (formula "13"))
                        (rule "andLeft" (formula "13"))
                        (rule "andLeft" (formula "13"))
                        (rule "notLeft" (formula "13"))
                        (rule "nonNull" (formula "16") (inst "i=i"))
                        (rule "greater_literals" (formula "16") (term "0,1"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "sub_literals" (formula "16") (term "2,1,0,1"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "andLeft" (formula "16"))
                        (rule "notLeft" (formula "16"))
                        (rule "narrowSelectArrayType" (formula "16") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "29"))
                        (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                        (rule "nonNull" (formula "15") (inst "i=i"))
                        (rule "sub_literals" (formula "15") (term "2,1,0,1,1"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "greater_literals" (formula "15") (term "0,1"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "andLeft" (formula "15"))
                        (rule "notLeft" (formula "15"))
                        (rule "narrowSelectArrayType" (formula "15") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "29"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                        (rule "nonNull" (formula "14") (inst "i=i"))
                        (rule "sub_literals" (formula "14") (term "2,1,0,1,1"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "greater_literals" (formula "14") (term "0,1"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "andLeft" (formula "14"))
                        (rule "notLeft" (formula "14"))
                        (rule "narrowSelectArrayType" (formula "14") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "29"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                        (rule "nonNull" (formula "13") (inst "i=i"))
                        (rule "greater_literals" (formula "13") (term "0,1"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "sub_literals" (formula "13") (term "2,1,0,1"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "andLeft" (formula "13"))
                        (rule "notLeft" (formula "13"))
                        (rule "narrowSelectArrayType" (formula "13") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "29"))
                        (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                        (rule "nnf_imp2or" (formula "16") (term "0"))
                        (rule "nnf_imp2or" (formula "15") (term "0"))
                        (rule "nnf_imp2or" (formula "14") (term "0"))
                        (rule "nnf_imp2or" (formula "13") (term "0"))
                        (rule "nnf_notAnd" (formula "16") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                        (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "16") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                        (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "15") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                        (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                        (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "14") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                        (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                        (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "13") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                        (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                        (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                        (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "26") (ifseqformula "6"))
                        (rule "andLeft" (formula "26"))
                        (rule "andLeft" (formula "26"))
                        (rule "notLeft" (formula "28"))
                        (rule "andLeft" (formula "26"))
                        (rule "notLeft" (formula "28"))
                        (rule "notLeft" (formula "27"))
                        (rule "andLeft" (formula "26"))
                        (rule "andLeft" (formula "26"))
                        (rule "notLeft" (formula "28"))
                        (rule "andLeft" (formula "26"))
                        (rule "andLeft" (formula "26"))
                        (rule "andLeft" (formula "26"))
                        (rule "notLeft" (formula "26"))
                        (rule "nonNull" (formula "29") (inst "i=i"))
                        (rule "sub_literals" (formula "29") (term "2,1,0,1,1"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "greater_literals" (formula "29") (term "0,1"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "andLeft" (formula "29"))
                        (rule "notLeft" (formula "29"))
                        (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                        (rule "nonNull" (formula "28") (inst "i=i"))
                        (rule "sub_literals" (formula "28") (term "2,1,0,1,1"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "greater_literals" (formula "28") (term "0,1"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "andLeft" (formula "28"))
                        (rule "notLeft" (formula "28"))
                        (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                        (rule "nonNull" (formula "27") (inst "i=i"))
                        (rule "greater_literals" (formula "27") (term "0,1"))
                        (builtin "One Step Simplification" (formula "27"))
                        (rule "sub_literals" (formula "27") (term "2,1,0,1"))
                        (builtin "One Step Simplification" (formula "27"))
                        (rule "andLeft" (formula "27"))
                        (rule "notLeft" (formula "27"))
                        (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                        (rule "nonNull" (formula "26") (inst "i=i"))
                        (rule "greater_literals" (formula "26") (term "0,1"))
                        (builtin "One Step Simplification" (formula "26"))
                        (rule "sub_literals" (formula "26") (term "2,1,0,1"))
                        (builtin "One Step Simplification" (formula "26"))
                        (rule "andLeft" (formula "26"))
                        (rule "notLeft" (formula "26"))
                        (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                        (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_10"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "20"))
                        (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "6"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")) (ifInst ""  (formula "6")))
                        (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_10"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "20"))
                        (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "6"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")) (ifInst ""  (formula "6")))
                        (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_10"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "20"))
                        (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "6"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")) (ifInst ""  (formula "6")))
                        (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_10"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "20"))
                        (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "6"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")) (ifInst ""  (formula "6")))
                        (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_10"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "20"))
                        (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "6"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")) (ifInst ""  (formula "6")))
                        (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "29") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_10"))
                        (rule "applyEq" (formula "30") (term "0,1,1,1,0,0") (ifseqformula "29"))
                        (rule "applyEq" (formula "36") (term "0") (ifseqformula "29"))
                        (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "23"))
                        (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "53")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,0,0") (ifseqformula "19"))
                        (rule "replace_known_left" (formula "29") (term "0,0,0,0") (ifseqformula "5"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "19"))
                        (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "53")) (ifInst ""  (formula "5")))
                        (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "30") (term "0,1,1,1,0,0") (ifseqformula "29"))
                        (rule "applyEqReverse" (formula "30") (term "1,0,0,1,0") (ifseqformula "29"))
                        (rule "hideAuxiliaryEq" (formula "29"))
                        (rule "pullOutSelect" (formula "28") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_10"))
                        (rule "applyEq" (formula "29") (term "0,1,1,1,0,0") (ifseqformula "28"))
                        (rule "applyEq" (formula "35") (term "0") (ifseqformula "28"))
                        (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "23"))
                        (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "52")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,0,0") (ifseqformula "19"))
                        (rule "replace_known_left" (formula "28") (term "0,0,0,0") (ifseqformula "5"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "19"))
                        (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "52")) (ifInst ""  (formula "5")))
                        (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "28"))
                        (rule "applyEqReverse" (formula "29") (term "1,0,0,1,0") (ifseqformula "28"))
                        (rule "applyEqReverse" (formula "29") (term "0,1,1,1,0,0") (ifseqformula "28"))
                        (rule "hideAuxiliaryEq" (formula "28"))
                        (rule "pullOutSelect" (formula "27") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_10"))
                        (rule "applyEq" (formula "28") (term "0,1,1,1,0,0") (ifseqformula "27"))
                        (rule "applyEq" (formula "34") (term "0") (ifseqformula "27"))
                        (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "23"))
                        (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "51")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,0,0") (ifseqformula "19"))
                        (rule "replace_known_left" (formula "27") (term "0,0,0,0") (ifseqformula "5"))
                        (builtin "One Step Simplification" (formula "27"))
                        (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "19"))
                        (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "51")) (ifInst ""  (formula "5")))
                        (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "27"))
                        (rule "applyEqReverse" (formula "28") (term "0,1,1,1,0,0") (ifseqformula "27"))
                        (rule "applyEqReverse" (formula "28") (term "1,0,0,1,0") (ifseqformula "27"))
                        (rule "hideAuxiliaryEq" (formula "27"))
                        (rule "pullOutSelect" (formula "26") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_10"))
                        (rule "applyEq" (formula "27") (term "0,1,1,1,0,0") (ifseqformula "26"))
                        (rule "applyEq" (formula "33") (term "0") (ifseqformula "26"))
                        (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "23"))
                        (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "50")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,0,0") (ifseqformula "19"))
                        (rule "replace_known_left" (formula "26") (term "0,0,0,0") (ifseqformula "5"))
                        (builtin "One Step Simplification" (formula "26"))
                        (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "19"))
                        (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "50")) (ifInst ""  (formula "5")))
                        (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "26"))
                        (rule "applyEqReverse" (formula "27") (term "1,0,0,1,0") (ifseqformula "26"))
                        (rule "applyEqReverse" (formula "27") (term "0,1,1,1,0,0") (ifseqformula "26"))
                        (rule "hideAuxiliaryEq" (formula "26"))
                        (rule "commute_or_2" (formula "17") (term "0"))
                        (rule "commute_or_2" (formula "30") (term "0"))
                        (rule "nnf_imp2or" (formula "29") (term "0"))
                        (rule "nnf_imp2or" (formula "28") (term "0"))
                        (rule "nnf_imp2or" (formula "27") (term "0"))
                        (rule "nnf_imp2or" (formula "26") (term "0"))
                        (rule "nnf_notAnd" (formula "29") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0"))
                        (rule "mul_literals" (formula "29") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "29") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                        (rule "mul_literals" (formula "29") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "28") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                        (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "28") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                        (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "27") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                        (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "27") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                        (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "26") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                        (rule "mul_literals" (formula "26") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "26") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                        (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                        (rule "commute_or_2" (formula "16") (term "0"))
                        (rule "commute_or_2" (formula "15") (term "0"))
                        (rule "commute_or_2" (formula "14") (term "0"))
                        (rule "commute_or_2" (formula "13") (term "0"))
                        (rule "ifthenelse_split" (formula "3") (term "0"))
                        (branch "result_0.length ≥ 1 TRUE"
                           (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
                           (rule "andLeft" (formula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "4"))
                           (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                           (rule "add_literals" (formula "4") (term "1,1,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0"))
                           (rule "add_zero_right" (formula "4") (term "0"))
                           (rule "leq_literals" (formula "4"))
                           (rule "closeFalse" (formula "4"))
                        )
                        (branch "result_0.length ≥ 1 FALSE"
                           (rule "inEqSimp_geqRight" (formula "32"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_homoInEq1" (formula "4"))
                           (rule "times_zero_2" (formula "4") (term "1,0"))
                           (rule "add_zero_right" (formula "4") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                           (rule "mul_literals" (formula "4") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "3"))
                           (rule "qeq_literals" (formula "4") (term "0"))
                           (builtin "One Step Simplification" (formula "4"))
                           (rule "closeFalse" (formula "4"))
                        )
                     )
                  )
                  (branch "Case 2"
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (ifseqformula "13"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "1") (ifseqformula "13"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "1") (ifseqformula "18"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "0,1") (ifseqformula "13"))
                     (rule "andLeft" (formula "1"))
                     (rule "orRight" (formula "27"))
                     (rule "eqSymm" (formula "26"))
                     (rule "eqSymm" (formula "21"))
                     (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "33"))
                     (builtin "One Step Simplification" (formula "7"))
                     (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "30"))
                     (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "31")))
                     (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "29"))
                     (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "27")) (ifInst ""  (formula "28")))
                     (rule "inEqSimp_ltRight" (formula "25"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "10"))
                     (rule "polySimp_addComm1" (formula "10") (term "0"))
                     (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "18"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "10"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1"))
                     (rule "polySimp_rightDist" (formula "10") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                     (rule "mul_literals" (formula "10") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                     (rule "nonNull" (formula "24") (inst "i=i"))
                     (rule "sub_literals" (formula "24") (term "2,1,0,1,1"))
                     (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "29")))
                     (rule "greater_literals" (formula "24") (term "0"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                     (rule "array2seqDef" (formula "11") (term "0,0") (inst "u=u"))
                     (rule "narrowSelectArrayType" (formula "11") (term "2,0,0") (ifseqformula "4") (ifseqformula "33"))
                     (rule "array2seqDef" (formula "18") (term "0") (inst "u=u"))
                     (rule "array2seqDef" (formula "18") (term "0,1") (inst "u=u"))
                     (rule "nonNull" (formula "13") (inst "i=i"))
                     (rule "greater_literals" (formula "13") (term "0,1"))
                     (builtin "One Step Simplification" (formula "13"))
                     (rule "sub_literals" (formula "13") (term "2,1,0,1"))
                     (builtin "One Step Simplification" (formula "13"))
                     (rule "andLeft" (formula "13"))
                     (rule "notLeft" (formula "13"))
                     (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "26"))
                     (builtin "One Step Simplification" (formula "7"))
                     (rule "narrowSelectArrayType" (formula "13") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "26"))
                     (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                     (rule "array2seqDef" (formula "27") (term "0,1") (inst "u=u"))
                     (rule "eqSymm" (formula "27"))
                     (rule "getOfSeqDef" (formula "27") (term "0"))
                     (rule "castDel" (formula "27") (term "2,0"))
                     (rule "castDel" (formula "27") (term "1,0"))
                     (rule "add_zero_right" (formula "27") (term "0,2,1,0"))
                     (rule "polySimp_elimSub" (formula "27") (term "1,1,0,0"))
                     (rule "times_zero_2" (formula "27") (term "1,1,1,0,0"))
                     (rule "add_zero_right" (formula "27") (term "1,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                     (rule "polySimp_addComm1" (formula "27") (term "0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                     (rule "replace_known_left" (formula "27") (term "0,0,0") (ifseqformula "2"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0"))
                     (rule "polySimp_elimOne" (formula "27") (term "0,0,0"))
                     (rule "inEqSimp_contradInEq0" (formula "27") (term "0,0") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0,0"))
                     (rule "add_literals" (formula "27") (term "1,1,0,0,0,0"))
                     (rule "times_zero_1" (formula "27") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "27") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "27") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "27"))
                     (rule "eqSymm" (formula "27"))
                     (rule "array2seqDef" (formula "22") (term "0,1,0") (inst "u=u"))
                     (rule "array2seqDef" (formula "3") (term "0,0") (inst "u=u"))
                     (rule "lenOfSeqDef" (formula "3") (term "0"))
                     (rule "polySimp_elimSub" (formula "3") (term "1,0"))
                     (rule "times_zero_2" (formula "3") (term "1,1,0"))
                     (rule "add_zero_right" (formula "3") (term "1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "3") (term "0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0,0,0"))
                     (rule "array2seqDef" (formula "10") (term "0,0") (inst "u=u"))
                     (rule "narrowSelectArrayType" (formula "10") (term "2,0,0") (ifseqformula "4") (ifseqformula "34"))
                     (rule "array2seqDef" (formula "27") (term "0,0,0") (inst "u=u"))
                     (rule "eqSeqDef2" (formula "18") (inst "iv=iv") (ifseqformula "18"))
                     (builtin "One Step Simplification" (formula "18"))
                     (rule "true_left" (formula "18"))
                     (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "10"))
                     (rule "times_zero_1" (formula "11") (term "0,0"))
                     (rule "add_zero_left" (formula "11") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                     (rule "mul_literals" (formula "11") (term "1"))
                     (rule "nnf_imp2or" (formula "24") (term "0"))
                     (rule "nnf_imp2or" (formula "14") (term "0"))
                     (rule "nnf_notAnd" (formula "24") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                     (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "24") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                     (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "14") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                     (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                     (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                     (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "23") (ifseqformula "6"))
                     (rule "andLeft" (formula "23"))
                     (rule "andLeft" (formula "23"))
                     (rule "notLeft" (formula "25"))
                     (rule "andLeft" (formula "23"))
                     (rule "notLeft" (formula "25"))
                     (rule "andLeft" (formula "23"))
                     (rule "notLeft" (formula "25"))
                     (rule "notLeft" (formula "24"))
                     (rule "andLeft" (formula "23"))
                     (rule "andLeft" (formula "23"))
                     (rule "andLeft" (formula "23"))
                     (rule "andLeft" (formula "23"))
                     (rule "notLeft" (formula "23"))
                     (rule "nonNull" (formula "26") (inst "i=i"))
                     (rule "sub_literals" (formula "26") (term "2,1,0,1,1"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "greater_literals" (formula "26") (term "0,1"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "andLeft" (formula "26"))
                     (rule "notLeft" (formula "26"))
                     (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "25") (inst "i=i"))
                     (rule "greater_literals" (formula "25") (term "0,1"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "sub_literals" (formula "25") (term "2,1,0,1"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "andLeft" (formula "25"))
                     (rule "notLeft" (formula "25"))
                     (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "24") (inst "i=i"))
                     (rule "greater_literals" (formula "24") (term "0,1"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "sub_literals" (formula "24") (term "2,1,0,1"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "andLeft" (formula "24"))
                     (rule "notLeft" (formula "24"))
                     (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "23") (inst "i=i"))
                     (rule "sub_literals" (formula "23") (term "2,1,0,1,1"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "greater_literals" (formula "23") (term "0,1"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "andLeft" (formula "23"))
                     (rule "notLeft" (formula "23"))
                     (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                     (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_9"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "17"))
                     (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "6"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")) (ifInst ""  (formula "6")))
                     (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_9"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "17"))
                     (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "6"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")) (ifInst ""  (formula "6")))
                     (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_9"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "17"))
                     (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "6"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")) (ifInst ""  (formula "6")))
                     (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_9"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "17"))
                     (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "6"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")) (ifInst ""  (formula "6")))
                     (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_9"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "17"))
                     (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "6"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")) (ifInst ""  (formula "6")))
                     (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "26") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_9"))
                     (rule "applyEq" (formula "33") (term "0") (ifseqformula "26"))
                     (rule "applyEq" (formula "27") (term "0,1,1,1,0,0") (ifseqformula "26"))
                     (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "20"))
                     (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "46")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,0,0") (ifseqformula "16"))
                     (rule "replace_known_left" (formula "26") (term "0,0,0,0") (ifseqformula "5"))
                     (builtin "One Step Simplification" (formula "26"))
                     (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "16"))
                     (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "46")) (ifInst ""  (formula "5")))
                     (rule "applyEqReverse" (formula "27") (term "0,1,1,1,0,0") (ifseqformula "26"))
                     (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "26"))
                     (rule "applyEqReverse" (formula "27") (term "1,0,0,1,0") (ifseqformula "26"))
                     (rule "hideAuxiliaryEq" (formula "26"))
                     (rule "pullOutSelect" (formula "25") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_9"))
                     (rule "applyEq" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "25"))
                     (rule "applyEq" (formula "32") (term "0") (ifseqformula "25"))
                     (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "20"))
                     (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "46")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,0,0") (ifseqformula "16"))
                     (rule "replace_known_left" (formula "25") (term "0,0,0,0") (ifseqformula "5"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "16"))
                     (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "46")) (ifInst ""  (formula "5")))
                     (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "25"))
                     (rule "applyEqReverse" (formula "26") (term "0,1,1,1,0,0") (ifseqformula "25"))
                     (rule "applyEqReverse" (formula "26") (term "1,0,0,1,0") (ifseqformula "25"))
                     (rule "hideAuxiliaryEq" (formula "25"))
                     (rule "pullOutSelect" (formula "24") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_9"))
                     (rule "applyEq" (formula "25") (term "0,1,1,1,0,0") (ifseqformula "24"))
                     (rule "applyEq" (formula "31") (term "0") (ifseqformula "24"))
                     (rule "simplifySelectOfAnonEQ" (formula "24") (ifseqformula "20"))
                     (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "46")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,0,0") (ifseqformula "16"))
                     (rule "replace_known_left" (formula "24") (term "0,0,0,0") (ifseqformula "5"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "simplifySelectOfAnonEQ" (formula "24") (ifseqformula "16"))
                     (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "46")) (ifInst ""  (formula "5")))
                     (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "24"))
                     (rule "applyEqReverse" (formula "25") (term "1,0,0,1,0") (ifseqformula "24"))
                     (rule "applyEqReverse" (formula "25") (term "0,1,1,1,0,0") (ifseqformula "24"))
                     (rule "hideAuxiliaryEq" (formula "24"))
                     (rule "pullOutSelect" (formula "23") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_9"))
                     (rule "applyEq" (formula "24") (term "0,1,1,1,0,0") (ifseqformula "23"))
                     (rule "applyEq" (formula "30") (term "0") (ifseqformula "23"))
                     (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "20"))
                     (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "46")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "0,0,0") (ifseqformula "16"))
                     (rule "replace_known_left" (formula "23") (term "0,0,0,0") (ifseqformula "5"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "16"))
                     (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "46")) (ifInst ""  (formula "5")))
                     (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "23"))
                     (rule "applyEqReverse" (formula "24") (term "0,1,1,1,0,0") (ifseqformula "23"))
                     (rule "applyEqReverse" (formula "24") (term "1,0,0,1,0") (ifseqformula "23"))
                     (rule "hideAuxiliaryEq" (formula "23"))
                     (rule "nnf_imp2or" (formula "26") (term "0"))
                     (rule "nnf_imp2or" (formula "25") (term "0"))
                     (rule "nnf_imp2or" (formula "24") (term "0"))
                     (rule "nnf_imp2or" (formula "23") (term "0"))
                     (rule "nnf_notAnd" (formula "26") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                     (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "26") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                     (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "25") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                     (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "25") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                     (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "24") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                     (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "24") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                     (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "23") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
                     (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "23") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                     (rule "mul_literals" (formula "23") (term "1,0,0,0"))
                     (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "13") (ifseqformula "6"))
                     (rule "andLeft" (formula "13"))
                     (rule "andLeft" (formula "13"))
                     (rule "notLeft" (formula "15"))
                     (rule "andLeft" (formula "13"))
                     (rule "notLeft" (formula "15"))
                     (rule "andLeft" (formula "13"))
                     (rule "notLeft" (formula "15"))
                     (rule "notLeft" (formula "14"))
                     (rule "andLeft" (formula "13"))
                     (rule "andLeft" (formula "13"))
                     (rule "andLeft" (formula "13"))
                     (rule "andLeft" (formula "13"))
                     (rule "notLeft" (formula "13"))
                     (rule "nonNull" (formula "16") (inst "i=i"))
                     (rule "greater_literals" (formula "16") (term "0,1"))
                     (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "35")))
                     (rule "sub_literals" (formula "16") (term "2,1,0"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "narrowSelectArrayType" (formula "16") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "35"))
                     (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "15") (inst "i=i"))
                     (rule "sub_literals" (formula "15") (term "2,1,0,1,1"))
                     (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "34")))
                     (rule "greater_literals" (formula "15") (term "0"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "narrowSelectArrayType" (formula "15") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "34"))
                     (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "14") (inst "i=i"))
                     (rule "sub_literals" (formula "14") (term "2,1,0,1,1"))
                     (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "33")))
                     (rule "greater_literals" (formula "14") (term "0"))
                     (builtin "One Step Simplification" (formula "14"))
                     (rule "narrowSelectArrayType" (formula "14") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "33"))
                     (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                     (rule "nonNull" (formula "13") (inst "i=i"))
                     (rule "sub_literals" (formula "13") (term "2,1,0,1,1"))
                     (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "32")))
                     (rule "greater_literals" (formula "13") (term "0"))
                     (builtin "One Step Simplification" (formula "13"))
                     (rule "narrowSelectArrayType" (formula "13") (term "0,0,1,0") (ifseqformula "4") (ifseqformula "32"))
                     (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                     (rule "commute_or_2" (formula "30") (term "0"))
                     (rule "commute_or_2" (formula "17") (term "0"))
                     (rule "nnf_imp2or" (formula "16") (term "0"))
                     (rule "nnf_imp2or" (formula "15") (term "0"))
                     (rule "nnf_imp2or" (formula "14") (term "0"))
                     (rule "nnf_imp2or" (formula "13") (term "0"))
                     (rule "nnf_notAnd" (formula "16") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                     (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                     (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "15") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                     (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                     (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "14") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                     (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                     (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "13") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                     (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                     (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                     (rule "arrayLengthIsAShort" (formula "1") (term "0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "arrayLengthNotNegative" (formula "1") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "commute_or_2" (formula "30") (term "0"))
                     (rule "arrayLengthIsAShort" (formula "11") (term "1,1"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "true_left" (formula "11"))
                     (rule "arrayLengthNotNegative" (formula "11") (term "1,1"))
                     (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "13"))
                     (rule "leq_literals" (formula "11") (term "0"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "true_left" (formula "11"))
                     (rule "ifthenelse_split" (formula "4") (term "0"))
                     (branch "result_0.length ≥ 1 TRUE"
                        (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "4"))
                        (rule "leq_literals" (formula "1") (term "0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "4"))
                        (rule "andLeft" (formula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "1"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,1,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0"))
                        (rule "add_zero_right" (formula "1") (term "0"))
                        (rule "leq_literals" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "result_0.length ≥ 1 FALSE"
                        (rule "inEqSimp_geqRight" (formula "33"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_homoInEq1" (formula "5"))
                        (rule "times_zero_2" (formula "5") (term "1,0"))
                        (rule "add_zero_right" (formula "5") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                        (rule "mul_literals" (formula "5") (term "1"))
                        (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "5"))
                        (rule "qeq_literals" (formula "4") (term "0"))
                        (builtin "One Step Simplification" (formula "4"))
                        (rule "closeFalse" (formula "4"))
                     )
                  )
               )
            )
         )
         (branch "Case 2"
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (ifseqformula "12"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "1") (ifseqformula "12"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "1") (ifseqformula "17"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "0,1") (ifseqformula "12"))
            (rule "orRight" (formula "23"))
            (rule "eqSymm" (formula "19"))
            (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "29"))
            (builtin "One Step Simplification" (formula "5"))
            (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "26"))
            (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "27")))
            (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "25"))
            (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "23")) (ifInst ""  (formula "24")))
            (rule "replace_known_left" (formula "30") (term "1,1") (ifseqformula "21"))
            (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "23")) (ifInst ""  (formula "25")) (ifInst ""  (formula "20")))
            (rule "closeTrue" (formula "30"))
         )
      )
      (branch "Case 2"
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (ifseqformula "12"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "1") (ifseqformula "12"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "1") (ifseqformula "17"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "18") (term "0,1") (ifseqformula "12"))
         (rule "orRight" (formula "23"))
         (rule "allRight" (formula "30") (inst "sk=f_0"))
         (rule "allRight" (formula "30") (inst "sk=o_0"))
         (rule "orRight" (formula "30"))
         (rule "eqSymm" (formula "19"))
         (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "29"))
         (builtin "One Step Simplification" (formula "5"))
         (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "26"))
         (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "27")))
         (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "25"))
         (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "23")) (ifInst ""  (formula "24")))
         (rule "inEqSimp_homoInEq1" (formula "7"))
         (rule "polySimp_addComm1" (formula "7") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "7"))
         (rule "polySimp_mulComm0" (formula "7") (term "1"))
         (rule "polySimp_rightDist" (formula "7") (term "1"))
         (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
         (rule "mul_literals" (formula "7") (term "0,1"))
         (rule "polySimp_elimOne" (formula "7") (term "1,1"))
         (rule "array2seqDef" (formula "15") (term "0,1") (inst "u=u"))
         (rule "eqSymm" (formula "15"))
         (rule "nonNull" (formula "10") (inst "i=i"))
         (rule "greater_literals" (formula "10") (term "0,1"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "sub_literals" (formula "10") (term "2,1,0,1"))
         (builtin "One Step Simplification" (formula "10"))
         (rule "andLeft" (formula "10"))
         (rule "notLeft" (formula "10"))
         (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "23"))
         (builtin "One Step Simplification" (formula "4"))
         (rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "23"))
         (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
         (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "21") (inst "i=i"))
         (rule "sub_literals" (formula "21") (term "2,1,0,1,1"))
         (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "26")))
         (rule "greater_literals" (formula "21") (term "0"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
         (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
         (rule "array2seqDef" (formula "8") (term "0,0") (inst "u=u"))
         (rule "narrowSelectArrayType" (formula "8") (term "2,0,0") (ifseqformula "1") (ifseqformula "30"))
         (rule "array2seqDef" (formula "19") (term "0,1,0") (inst "u=u"))
         (rule "array2seqDef" (formula "7") (term "0,0") (inst "u=u"))
         (rule "narrowSelectArrayType" (formula "7") (term "2,0,0") (ifseqformula "1") (ifseqformula "30"))
         (rule "array2seqDef" (formula "15") (term "1") (inst "u=u"))
         (rule "eqSymm" (formula "15"))
         (rule "eqSeqDef2" (formula "15") (inst "iv=iv") (ifseqformula "15"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "true_left" (formula "15"))
         (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=f_0_0"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "13"))
         (rule "eqSymm" (formula "32"))
         (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
         (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "8"))
         (rule "times_zero_1" (formula "9") (term "0,0"))
         (rule "add_zero_left" (formula "9") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "9"))
         (rule "mul_literals" (formula "9") (term "1"))
         (rule "nnf_imp2or" (formula "12") (term "0"))
         (rule "nnf_imp2or" (formula "22") (term "0"))
         (rule "nnf_notAnd" (formula "12") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
         (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
         (rule "mul_literals" (formula "12") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "22") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
         (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "22") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
         (rule "mul_literals" (formula "22") (term "1,0,0,0"))
         (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "21") (ifseqformula "4"))
         (rule "andLeft" (formula "21"))
         (rule "andLeft" (formula "21"))
         (rule "notLeft" (formula "23"))
         (rule "andLeft" (formula "21"))
         (rule "notLeft" (formula "23"))
         (rule "andLeft" (formula "21"))
         (rule "notLeft" (formula "23"))
         (rule "notLeft" (formula "22"))
         (rule "andLeft" (formula "21"))
         (rule "andLeft" (formula "21"))
         (rule "andLeft" (formula "21"))
         (rule "andLeft" (formula "21"))
         (rule "notLeft" (formula "21"))
         (rule "nonNull" (formula "24") (inst "i=i"))
         (rule "greater_literals" (formula "24") (term "0,1"))
         (builtin "One Step Simplification" (formula "24"))
         (rule "sub_literals" (formula "24") (term "2,1,0,1"))
         (builtin "One Step Simplification" (formula "24"))
         (rule "andLeft" (formula "24"))
         (rule "notLeft" (formula "24"))
         (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
         (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "23") (inst "i=i"))
         (rule "greater_literals" (formula "23") (term "0,1"))
         (builtin "One Step Simplification" (formula "23"))
         (rule "sub_literals" (formula "23") (term "2,1,0,1"))
         (builtin "One Step Simplification" (formula "23"))
         (rule "andLeft" (formula "23"))
         (rule "notLeft" (formula "23"))
         (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
         (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "22") (inst "i=i"))
         (rule "sub_literals" (formula "22") (term "2,1,0,1,1"))
         (builtin "One Step Simplification" (formula "22"))
         (rule "greater_literals" (formula "22") (term "0,1"))
         (builtin "One Step Simplification" (formula "22"))
         (rule "andLeft" (formula "22"))
         (rule "notLeft" (formula "22"))
         (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
         (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "21") (inst "i=i"))
         (rule "greater_literals" (formula "21") (term "0,1"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "sub_literals" (formula "21") (term "2,1,0,1"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "andLeft" (formula "21"))
         (rule "notLeft" (formula "21"))
         (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
         (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_2"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "15"))
         (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "4"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")) (ifInst ""  (formula "4")))
         (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_2"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "15"))
         (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "4"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")) (ifInst ""  (formula "4")))
         (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_2"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "15"))
         (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "4"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")) (ifInst ""  (formula "4")))
         (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "pullOutSelect" (formula "32") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_2"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "15"))
         (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "4"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")) (ifInst ""  (formula "4")))
         (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "pullOutSelect" (formula "31") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_2"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "15"))
         (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "4"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "15"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")) (ifInst ""  (formula "4")))
         (rule "applyEqReverse" (formula "32") (term "0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "pullOutSelect" (formula "24") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_2"))
         (rule "applyEq" (formula "31") (term "0") (ifseqformula "24"))
         (rule "applyEq" (formula "25") (term "0,1,1,1,0,0") (ifseqformula "24"))
         (rule "simplifySelectOfAnonEQ" (formula "24") (ifseqformula "18"))
         (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "43")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,0,0") (ifseqformula "14"))
         (rule "replace_known_left" (formula "24") (term "0,0,0,0") (ifseqformula "3"))
         (builtin "One Step Simplification" (formula "24"))
         (rule "simplifySelectOfAnonEQ" (formula "24") (ifseqformula "14"))
         (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "43")) (ifInst ""  (formula "3")))
         (rule "applyEqReverse" (formula "25") (term "0,1,1,1,0,0") (ifseqformula "24"))
         (rule "applyEqReverse" (formula "25") (term "1,0,0,1,0") (ifseqformula "24"))
         (rule "applyEqReverse" (formula "31") (term "0") (ifseqformula "24"))
         (rule "hideAuxiliaryEq" (formula "24"))
         (rule "pullOutSelect" (formula "23") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_2"))
         (rule "applyEq" (formula "24") (term "0,1,1,1,0,0") (ifseqformula "23"))
         (rule "applyEq" (formula "30") (term "0") (ifseqformula "23"))
         (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "18"))
         (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "43")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "0,0,0") (ifseqformula "14"))
         (rule "replace_known_left" (formula "23") (term "0,0,0,0") (ifseqformula "3"))
         (builtin "One Step Simplification" (formula "23"))
         (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "14"))
         (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "43")) (ifInst ""  (formula "3")))
         (rule "applyEqReverse" (formula "30") (term "0") (ifseqformula "23"))
         (rule "applyEqReverse" (formula "24") (term "1,0,0,1,0") (ifseqformula "23"))
         (rule "applyEqReverse" (formula "24") (term "0,1,1,1,0,0") (ifseqformula "23"))
         (rule "hideAuxiliaryEq" (formula "23"))
         (rule "pullOutSelect" (formula "22") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_2"))
         (rule "applyEq" (formula "29") (term "0") (ifseqformula "22"))
         (rule "applyEq" (formula "23") (term "0,1,1,1,0,0") (ifseqformula "22"))
         (rule "simplifySelectOfAnonEQ" (formula "22") (ifseqformula "18"))
         (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "43")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "0,0,0") (ifseqformula "14"))
         (rule "replace_known_left" (formula "22") (term "0,0,0,0") (ifseqformula "3"))
         (builtin "One Step Simplification" (formula "22"))
         (rule "simplifySelectOfAnonEQ" (formula "22") (ifseqformula "14"))
         (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "43")) (ifInst ""  (formula "3")))
         (rule "applyEqReverse" (formula "23") (term "0,1,1,1,0,0") (ifseqformula "22"))
         (rule "applyEqReverse" (formula "29") (term "0") (ifseqformula "22"))
         (rule "applyEqReverse" (formula "23") (term "1,0,0,1,0") (ifseqformula "22"))
         (rule "hideAuxiliaryEq" (formula "22"))
         (rule "pullOutSelect" (formula "21") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_2"))
         (rule "applyEq" (formula "28") (term "0") (ifseqformula "21"))
         (rule "applyEq" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "21"))
         (rule "simplifySelectOfAnonEQ" (formula "21") (ifseqformula "18"))
         (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "43")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,0,0") (ifseqformula "14"))
         (rule "replace_known_left" (formula "21") (term "0,0,0,0") (ifseqformula "3"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "simplifySelectOfAnonEQ" (formula "21") (ifseqformula "14"))
         (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "43")) (ifInst ""  (formula "3")))
         (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "21"))
         (rule "applyEqReverse" (formula "22") (term "1,0,0,1,0") (ifseqformula "21"))
         (rule "applyEqReverse" (formula "22") (term "0,1,1,1,0,0") (ifseqformula "21"))
         (rule "hideAuxiliaryEq" (formula "21"))
         (rule "nnf_imp2or" (formula "24") (term "0"))
         (rule "nnf_imp2or" (formula "23") (term "0"))
         (rule "nnf_imp2or" (formula "22") (term "0"))
         (rule "nnf_imp2or" (formula "21") (term "0"))
         (rule "nnf_notAnd" (formula "24") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
         (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "24") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
         (rule "mul_literals" (formula "24") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "23") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
         (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "23") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
         (rule "mul_literals" (formula "23") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "22") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
         (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "22") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
         (rule "mul_literals" (formula "22") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "21") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
         (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "21") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
         (rule "mul_literals" (formula "21") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "21") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
         (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "11") (ifseqformula "4"))
         (rule "andLeft" (formula "11"))
         (rule "notLeft" (formula "12"))
         (rule "andLeft" (formula "11"))
         (rule "andLeft" (formula "11"))
         (rule "notLeft" (formula "13"))
         (rule "notLeft" (formula "12"))
         (rule "andLeft" (formula "11"))
         (rule "notLeft" (formula "12"))
         (rule "andLeft" (formula "11"))
         (rule "andLeft" (formula "11"))
         (rule "andLeft" (formula "11"))
         (rule "andLeft" (formula "11"))
         (rule "notLeft" (formula "11"))
         (rule "nonNull" (formula "14") (inst "i=i"))
         (rule "greater_literals" (formula "14") (term "0,1"))
         (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "33")))
         (rule "sub_literals" (formula "14") (term "2,1,0"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "narrowSelectArrayType" (formula "14") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "33"))
         (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "13") (inst "i=i"))
         (rule "sub_literals" (formula "13") (term "2,1,0,1,1"))
         (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "32")))
         (rule "greater_literals" (formula "13") (term "0"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "narrowSelectArrayType" (formula "13") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "32"))
         (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "12") (inst "i=i"))
         (rule "greater_literals" (formula "12") (term "0,1"))
         (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "31")))
         (rule "sub_literals" (formula "12") (term "2,1,0"))
         (builtin "One Step Simplification" (formula "12"))
         (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "31"))
         (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "11") (inst "i=i"))
         (rule "greater_literals" (formula "11") (term "0,1"))
         (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "30")))
         (rule "sub_literals" (formula "11") (term "2,1,0"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "30"))
         (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
         (rule "commute_or_2" (formula "15") (term "0"))
         (rule "commute_or_2" (formula "28") (term "0"))
         (rule "nnf_imp2or" (formula "14") (term "0"))
         (rule "nnf_imp2or" (formula "13") (term "0"))
         (rule "nnf_imp2or" (formula "12") (term "0"))
         (rule "nnf_imp2or" (formula "11") (term "0"))
         (rule "nnf_notAnd" (formula "14") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
         (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
         (rule "mul_literals" (formula "14") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "13") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
         (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
         (rule "mul_literals" (formula "13") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "12") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
         (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
         (rule "mul_literals" (formula "12") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "11") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
         (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
         (rule "mul_literals" (formula "11") (term "1,0,0,0"))
         (rule "commute_or_2" (formula "27") (term "0"))
         (rule "ifthenelse_split" (formula "1") (term "0"))
         (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_first«anonHeapFunction» = TRUE) TRUE"
            (rule "andLeft" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "orRight" (formula "30"))
            (rule "applyEqReverse" (formula "51") (term "1") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "eqSymm" (formula "50"))
            (rule "replace_known_right" (formula "49") (term "0,0") (ifseqformula "31"))
            (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "29")))
            (rule "closeTrue" (formula "49"))
         )
         (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_first«anonHeapFunction» = TRUE) FALSE"
            (rule "close" (formula "49") (ifseqformula "1"))
         )
      )
   )
   (branch "Exceptional Post (addEntry)"
      (builtin "One Step Simplification" (formula "14"))
      (builtin "One Step Simplification" (formula "12"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "andLeft" (formula "14"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "1,0") (ifseqformula "14"))
      (rule "andLeft" (formula "12"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "13") (term "1,1,0") (ifseqformula "12"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "0,1,0") (ifseqformula "12"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "0,0,0,1,0,1") (ifseqformula "12"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "17"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "15"))
      (rule "andLeft" (formula "18"))
      (rule "andLeft" (formula "20"))
      (rule "andLeft" (formula "15"))
      (rule "notLeft" (formula "19"))
      (rule "close" (formula "22") (ifseqformula "21"))
   )
   (branch "Pre (addEntry)"
      (builtin "One Step Simplification" (formula "12"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "andLeft" (formula "12"))
      (rule "wellFormedAnonEQ" (formula "16") (term "0,0,1") (ifseqformula "12"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "1,1,1") (ifseqformula "12"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "13") (term "1,1,0") (ifseqformula "12"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "1,1,0,1") (ifseqformula "12"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "14"))
      (rule "andLeft" (formula "13"))
      (rule "andLeft" (formula "14"))
      (rule "andLeft" (formula "15"))
      (rule "notLeft" (formula "15"))
      (rule "notLeft" (formula "15"))
      (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "19"))
      (builtin "One Step Simplification" (formula "5"))
      (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "16"))
      (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "17")))
      (rule "replace_known_right" (formula "20") (term "0,1,1") (ifseqformula "16"))
      (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "16")) (ifInst ""  (formula "1")) (ifInst ""  (formula "11")) (ifInst ""  (formula "17")) (ifInst ""  (formula "13")))
      (rule "inEqSimp_homoInEq1" (formula "7"))
      (rule "polySimp_addComm1" (formula "7") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "7"))
      (rule "polySimp_mulComm0" (formula "7") (term "1"))
      (rule "polySimp_rightDist" (formula "7") (term "1"))
      (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
      (rule "mul_literals" (formula "7") (term "0,1"))
      (rule "polySimp_elimOne" (formula "7") (term "1,1"))
      (rule "nonNull" (formula "10") (inst "i=i"))
      (rule "sub_literals" (formula "10") (term "2,1,0,1,1"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "greater_literals" (formula "10") (term "0,1"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "andLeft" (formula "10"))
      (rule "notLeft" (formula "10"))
      (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "16"))
      (builtin "One Step Simplification" (formula "4"))
      (rule "replace_known_left" (formula "21") (term "0,1,1") (ifseqformula "4"))
      (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "16")))
      (rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "16"))
      (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
      (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
      (rule "array2seqDef" (formula "8") (term "0,0") (inst "u=u"))
      (rule "narrowSelectArrayType" (formula "8") (term "2,0,0") (ifseqformula "1") (ifseqformula "20"))
      (rule "array2seqDef" (formula "14") (term "0,1") (inst "u=u"))
      (rule "eqSymm" (formula "14"))
      (rule "array2seqDef" (formula "7") (term "0,0") (inst "u=u"))
      (rule "narrowSelectArrayType" (formula "7") (term "2,0,0") (ifseqformula "1") (ifseqformula "20"))
      (rule "nonNull" (formula "21") (term "1") (inst "i=i"))
      (rule "greater_literals" (formula "21") (term "0,1,1"))
      (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "16")))
      (rule "sub_literals" (formula "21") (term "2,1,0,1"))
      (builtin "One Step Simplification" (formula "21"))
      (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,1"))
      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,1"))
      (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,1"))
      (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,1"))
      (rule "mul_literals" (formula "21") (term "0,1,1,0,0,1"))
      (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,1"))
      (rule "array2seqDef" (formula "14") (term "1") (inst "u=u"))
      (rule "eqSymm" (formula "14"))
      (rule "eqSeqDef2" (formula "14") (inst "iv=iv") (ifseqformula "14"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "true_left" (formula "14"))
      (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "7"))
      (rule "times_zero_1" (formula "8") (term "0,0"))
      (rule "add_zero_left" (formula "8") (term "0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "8"))
      (rule "mul_literals" (formula "8") (term "1"))
      (rule "nnf_imp2or" (formula "11") (term "0"))
      (rule "nnf_imp2or" (formula "21") (term "0,1"))
      (rule "nnf_notAnd" (formula "11") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
      (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
      (rule "mul_literals" (formula "11") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "21") (term "0,0,1"))
      (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0,1"))
      (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0,1"))
      (rule "add_zero_right" (formula "21") (term "0,0,0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,1"))
      (rule "mul_literals" (formula "21") (term "1,0,0,0,1"))
      (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0,1"))
      (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,1"))
      (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,1"))
      (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,1"))
      (rule "add_literals" (formula "21") (term "0,0,0,1,0,0,1"))
      (rule "add_zero_left" (formula "21") (term "0,0,1,0,0,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,1"))
      (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,1"))
      (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "21") (term "0") (ifseqformula "3"))
      (rule "nonNull" (formula "21") (term "1,0,0,0,0,0") (inst "i=i"))
      (rule "greater_literals" (formula "21") (term "0,1,1,0,0,0,0,0"))
      (builtin "One Step Simplification" (formula "21"))
      (rule "sub_literals" (formula "21") (term "2,1,0,1,1,0,0,0,0,0"))
      (builtin "One Step Simplification" (formula "21"))
      (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,1,1,0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,1,1,0,0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,1,1,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,1,1,0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,1,1,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,1,1,0,0,0,0,0"))
      (rule "mul_literals" (formula "21") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,1,1,0,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,1,1,0,0,0,0,0"))
      (rule "nonNull" (formula "21") (term "1,0,0,0,0,0,0") (inst "i=i"))
      (rule "greater_literals" (formula "21") (term "0,1,1,0,0,0,0,0,0"))
      (builtin "One Step Simplification" (formula "21"))
      (rule "sub_literals" (formula "21") (term "2,1,0,1,1,0,0,0,0,0,0"))
      (builtin "One Step Simplification" (formula "21"))
      (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,1,1,0,0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,1,1,0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,1,1,0,0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,1,1,0,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,1,1,0,0,0,0,0,0"))
      (rule "mul_literals" (formula "21") (term "0,1,1,0,0,1,1,0,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,1,1,0,0,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,1,1,0,0,0,0,0,0"))
      (rule "nonNull" (formula "21") (term "1,0,0,0,0,0,0,0") (inst "i=i"))
      (rule "sub_literals" (formula "21") (term "2,1,0,1,1,1,0,0,0,0,0,0,0"))
      (builtin "One Step Simplification" (formula "21"))
      (rule "greater_literals" (formula "21") (term "0,1,1,0,0,0,0,0,0,0"))
      (builtin "One Step Simplification" (formula "21"))
      (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,1,1,0,0,0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,1,1,0,0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,1,1,0,0,0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,1,1,0,0,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,1,1,0,0,0,0,0,0,0"))
      (rule "mul_literals" (formula "21") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0"))
      (rule "nonNull" (formula "21") (term "1,0,0,0,0,0,0,0,0") (inst "i=i"))
      (rule "greater_literals" (formula "21") (term "0,1,1,0,0,0,0,0,0,0,0"))
      (builtin "One Step Simplification" (formula "21"))
      (rule "sub_literals" (formula "21") (term "2,1,0,1,1,0,0,0,0,0,0,0,0"))
      (builtin "One Step Simplification" (formula "21"))
      (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,1,1,0,0,0,0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,1,1,0,0,0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,1,1,0,0,0,0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
      (rule "mul_literals" (formula "21") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
      (rule "pullOutSelect" (formula "21") (term "0,0,0,1,0,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_0"))
      (rule "applyEq" (formula "22") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
      (rule "applyEq" (formula "22") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")) (ifInst ""  (formula "3")))
      (rule "applyEqReverse" (formula "22") (term "0,0,0,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "22") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "22") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "pullOutSelect" (formula "21") (term "0,1,1,1,0,0,1,1,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_0"))
      (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "1"))
      (rule "applyEq" (formula "22") (term "1,0,0,1,0,1,1,0,0,0,0,0") (ifseqformula "1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")) (ifInst ""  (formula "3")))
      (rule "applyEqReverse" (formula "22") (term "0,1,1,1,0,0,1,1,0,0,0,0,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "22") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "22") (term "1,0,0,1,0,1,1,0,0,0,0,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "pullOutSelect" (formula "21") (term "0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")) (ifInst ""  (formula "3")))
      (rule "applyEqReverse" (formula "22") (term "0,0,1,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "pullOutSelect" (formula "21") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_0"))
      (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "1"))
      (rule "applyEq" (formula "22") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")) (ifInst ""  (formula "3")))
      (rule "applyEqReverse" (formula "22") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "22") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "22") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "pullOutSelect" (formula "21") (term "0,0,1,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")) (ifInst ""  (formula "3")))
      (rule "applyEqReverse" (formula "22") (term "0,0,1,0,0,0,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "pullOutSelect" (formula "21") (term "1,0,0,1,0,1,1,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_0"))
      (rule "applyEq" (formula "22") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
      (rule "applyEq" (formula "22") (term "0,0,0,1,0,0,0,0,0,0") (ifseqformula "1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")) (ifInst ""  (formula "3")))
      (rule "applyEqReverse" (formula "22") (term "1,0,0,1,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "22") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "22") (term "0,0,0,1,0,0,0,0,0,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "pullOutSelect" (formula "21") (term "0,0,0,0,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")) (ifInst ""  (formula "3")))
      (rule "applyEqReverse" (formula "22") (term "0,0,0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "pullOutSelect" (formula "21") (term "0,0,1,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")) (ifInst ""  (formula "3")))
      (rule "applyEqReverse" (formula "22") (term "0,0,1,0,0,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "pullOutSelect" (formula "21") (term "0,0,1,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")) (ifInst ""  (formula "3")))
      (rule "applyEqReverse" (formula "22") (term "0,0,1,0,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "nnf_imp2or" (formula "21") (term "0,1,1,0,0,0,0,0"))
      (rule "nnf_imp2or" (formula "21") (term "0,1,1,0,0,0,0,0,0,0,0"))
      (rule "nnf_imp2or" (formula "21") (term "0,1,1,0,0,0,0,0,0,0"))
      (rule "nnf_imp2or" (formula "21") (term "0,1,1,0,0,0,0,0,0"))
      (rule "nnf_notAnd" (formula "21") (term "0,0,1,1,0,0,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0,1,1,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,1,1,0,0,0,0,0"))
      (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,1,1,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,1,1,0,0,0,0,0"))
      (rule "add_literals" (formula "21") (term "0,0,0,1,0,0,1,1,0,0,0,0,0"))
      (rule "add_zero_left" (formula "21") (term "0,0,1,0,0,1,1,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0,1,1,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,1,1,0,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,1,1,0,0,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0,1,1,0,0,0,0,0"))
      (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0,1,1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "21") (term "0,0,0,0,0,1,1,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,1,1,0,0,0,0,0"))
      (rule "mul_literals" (formula "21") (term "1,0,0,0,1,1,0,0,0,0,0"))
      (rule "nnf_notAnd" (formula "21") (term "0,0,1,1,0,0,0,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0,1,1,0,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0"))
      (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,1,1,0,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,1,1,0,0,0,0,0,0"))
      (rule "add_literals" (formula "21") (term "0,0,0,1,0,0,1,1,0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "21") (term "0,0,1,0,0,1,1,0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0,1,1,0,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,1,1,0,0,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,1,1,0,0,0,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0,1,1,0,0,0,0,0,0"))
      (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0,1,1,0,0,0,0,0,0"))
      (rule "add_zero_right" (formula "21") (term "0,0,0,0,0,1,1,0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,1,1,0,0,0,0,0,0"))
      (rule "mul_literals" (formula "21") (term "1,0,0,0,1,1,0,0,0,0,0,0"))
      (rule "nnf_notAnd" (formula "21") (term "0,0,1,1,0,0,0,0,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0,1,1,0,0,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0"))
      (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,1,1,0,0,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,1,1,0,0,0,0,0,0,0"))
      (rule "add_literals" (formula "21") (term "0,0,0,1,0,0,1,1,0,0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "21") (term "0,0,1,0,0,1,1,0,0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0,1,1,0,0,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,1,1,0,0,0,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,1,1,0,0,0,0,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0,1,1,0,0,0,0,0,0,0"))
      (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0,1,1,0,0,0,0,0,0,0"))
      (rule "add_zero_right" (formula "21") (term "0,0,0,0,0,1,1,0,0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,1,1,0,0,0,0,0,0,0"))
      (rule "mul_literals" (formula "21") (term "1,0,0,0,1,1,0,0,0,0,0,0,0"))
      (rule "nnf_notAnd" (formula "21") (term "0,0,1,1,0,0,0,0,0,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0,1,1,0,0,0,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0"))
      (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,1,1,0,0,0,0,0,0,0,0"))
      (rule "add_literals" (formula "21") (term "0,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "21") (term "0,0,1,0,0,1,1,0,0,0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0,1,1,0,0,0,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0,1,1,0,0,0,0,0,0,0,0"))
      (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0"))
      (rule "add_zero_right" (formula "21") (term "0,0,0,0,0,1,1,0,0,0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,1,1,0,0,0,0,0,0,0,0"))
      (rule "mul_literals" (formula "21") (term "1,0,0,0,1,1,0,0,0,0,0,0,0,0"))
      (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "10") (ifseqformula "3"))
      (rule "andLeft" (formula "10"))
      (rule "notLeft" (formula "11"))
      (rule "andLeft" (formula "10"))
      (rule "notLeft" (formula "11"))
      (rule "andLeft" (formula "10"))
      (rule "notLeft" (formula "11"))
      (rule "andLeft" (formula "10"))
      (rule "andLeft" (formula "10"))
      (rule "notLeft" (formula "12"))
      (rule "andLeft" (formula "10"))
      (rule "andLeft" (formula "10"))
      (rule "andLeft" (formula "10"))
      (rule "notLeft" (formula "10"))
      (rule "replace_known_right" (formula "29") (term "0,1,0,0") (ifseqformula "22"))
      (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "19")) (ifInst ""  (formula "20")) (ifInst ""  (formula "21")) (ifInst ""  (formula "23")))
      (rule "nonNull" (formula "13") (inst "i=i"))
      (rule "greater_literals" (formula "13") (term "0,1"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "sub_literals" (formula "13") (term "2,1,0,1"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "andLeft" (formula "13"))
      (rule "notLeft" (formula "13"))
      (rule "replace_known_right" (formula "30") (term "0,0,1,0") (ifseqformula "19"))
      (builtin "One Step Simplification" (formula "30"))
      (rule "narrowSelectArrayType" (formula "13") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "19"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
      (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
      (rule "nonNull" (formula "12") (inst "i=i"))
      (rule "greater_literals" (formula "12") (term "0,1"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "sub_literals" (formula "12") (term "2,1,0,1"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "andLeft" (formula "12"))
      (rule "notLeft" (formula "12"))
      (rule "replace_known_right" (formula "31") (term "0,0,1,0,0") (ifseqformula "19"))
      (builtin "One Step Simplification" (formula "31"))
      (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "19"))
      (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
      (rule "nonNull" (formula "11") (inst "i=i"))
      (rule "sub_literals" (formula "11") (term "2,1,0,1,1"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "greater_literals" (formula "11") (term "0,1"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "andLeft" (formula "11"))
      (rule "notLeft" (formula "11"))
      (rule "replace_known_right" (formula "32") (term "0,0,1,0,0,0") (ifseqformula "19"))
      (builtin "One Step Simplification" (formula "32"))
      (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "19"))
      (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
      (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
      (rule "nonNull" (formula "10") (inst "i=i"))
      (rule "sub_literals" (formula "10") (term "2,1,0,1,1"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "greater_literals" (formula "10") (term "0,1"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "andLeft" (formula "10"))
      (rule "notLeft" (formula "10"))
      (rule "replace_known_right" (formula "33") (term "0,0,0,0,0,0") (ifseqformula "19"))
      (builtin "One Step Simplification" (formula "33"))
      (rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "19"))
      (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
      (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
      (rule "nnf_imp2or" (formula "13") (term "0"))
      (rule "nnf_imp2or" (formula "12") (term "0"))
      (rule "commute_or_2" (formula "14") (term "0"))
      (rule "nnf_imp2or" (formula "11") (term "0"))
      (rule "nnf_imp2or" (formula "10") (term "0"))
      (rule "nnf_notAnd" (formula "13") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
      (rule "mul_literals" (formula "13") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "12") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
      (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
      (rule "mul_literals" (formula "12") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "11") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
      (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
      (rule "mul_literals" (formula "11") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "10") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
      (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
      (rule "mul_literals" (formula "10") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
      (rule "arrayLengthIsAShort" (formula "7") (term "1,1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "true_left" (formula "7"))
      (rule "arrayLengthNotNegative" (formula "7") (term "1,1"))
      (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "9"))
      (rule "leq_literals" (formula "7") (term "0"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "true_left" (formula "7"))
      (rule "commute_or_2" (formula "13") (term "0"))
      (rule "commute_or" (formula "14") (term "0,0"))
      (rule "commute_or_2" (formula "12") (term "0"))
      (rule "commute_or_2" (formula "11") (term "0"))
      (rule "commute_or_2" (formula "10") (term "0"))
      (rule "andRight" (formula "33"))
      (branch "Case 1"
         (rule "commute_or" (formula "13") (term "0,0"))
         (rule "commute_or" (formula "12") (term "0,0"))
         (rule "commute_or" (formula "11") (term "0,0"))
         (rule "commute_or" (formula "10") (term "0,0"))
         (rule "andRight" (formula "33"))
         (branch "Case 1"
            (rule "andRight" (formula "33"))
            (branch "Case 1"
               (rule "andRight" (formula "33"))
               (branch "Case 1"
                  (rule "allRight" (formula "33") (inst "sk=i_4"))
                  (rule "orRight" (formula "33"))
                  (rule "orRight" (formula "33"))
                  (rule "notRight" (formula "35"))
                  (rule "inEqSimp_geqRight" (formula "35"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_leqRight" (formula "35"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                  (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_4"))
                  (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "20"))
                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "23")))
                  (rule "ifthenelse_negated" (formula "3") (term "0"))
                  (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "19") (ifseqformula "23"))
                  (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "5") (ifseqformula "23"))
                  (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                  (rule "ifEqualsNull" (formula "3"))
                  (rule "cnf_rightDist" (formula "3"))
                  (rule "andLeft" (formula "3"))
                  (rule "commute_or" (formula "3"))
                  (rule "cnf_rightDist" (formula "4"))
                  (rule "andLeft" (formula "4"))
                  (rule "commute_or" (formula "4"))
                  (rule "cnf_rightDist" (formula "3"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "commute_or" (formula "3"))
                  (rule "arrayLengthIsAShort" (formula "20") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "true_left" (formula "20"))
                  (rule "arrayLengthNotNegative" (formula "20") (term "1,1,0"))
                  (rule "allLeft" (formula "16") (inst "t=i_4"))
                  (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                  (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "2"))
                  (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                  (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "16") (term "0,0,1"))
                  (rule "leq_literals" (formula "16") (term "0,1"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "inEqSimp_contradInEq1" (formula "16") (term "1") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "16") (term "0,1"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "notLeft" (formula "16"))
                  (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "26"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "notLeft" (formula "3"))
                  (rule "referencedObjectIsCreatedRight" (formula "25") (ifseqformula "27"))
                  (rule "close" (formula "25") (ifseqformula "6"))
               )
               (branch "Case 2"
                  (rule "allRight" (formula "33") (inst "sk=i_3"))
                  (rule "orRight" (formula "33"))
                  (rule "orRight" (formula "33"))
                  (rule "notRight" (formula "35"))
                  (rule "inEqSimp_geqRight" (formula "35"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_leqRight" (formula "35"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                  (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_3"))
                  (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "20"))
                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "24")))
                  (rule "ifthenelse_negated" (formula "3") (term "0"))
                  (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "19") (ifseqformula "24"))
                  (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "5") (ifseqformula "24"))
                  (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                  (rule "ifEqualsNull" (formula "3"))
                  (rule "cnf_rightDist" (formula "3"))
                  (rule "andLeft" (formula "3"))
                  (rule "commute_or" (formula "3"))
                  (rule "cnf_rightDist" (formula "4"))
                  (rule "andLeft" (formula "4"))
                  (rule "commute_or" (formula "4"))
                  (rule "cnf_rightDist" (formula "3"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "commute_or" (formula "3"))
                  (rule "arrayLengthIsAShort" (formula "20") (term "1,1,0"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "true_left" (formula "20"))
                  (rule "arrayLengthNotNegative" (formula "20") (term "1,1,0"))
                  (rule "allLeft" (formula "17") (inst "t=i_3"))
                  (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
                  (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "2"))
                  (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                  (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "17") (term "0,0,1"))
                  (rule "leq_literals" (formula "17") (term "0,1"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "17") (term "0,1"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "notLeft" (formula "17"))
                  (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "26"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "notLeft" (formula "3"))
                  (rule "referencedObjectIsCreatedRight" (formula "25") (ifseqformula "28"))
                  (rule "close" (formula "25") (ifseqformula "6"))
               )
            )
            (branch "Case 2"
               (rule "allRight" (formula "33") (inst "sk=i_2"))
               (rule "orRight" (formula "33"))
               (rule "orRight" (formula "33"))
               (rule "notRight" (formula "35"))
               (rule "inEqSimp_geqRight" (formula "35"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "inEqSimp_leqRight" (formula "35"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "2"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
               (rule "polySimp_elimOne" (formula "2") (term "0"))
               (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_2"))
               (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "20"))
               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "25")))
               (rule "ifthenelse_negated" (formula "3") (term "0"))
               (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "19") (ifseqformula "25"))
               (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "5") (ifseqformula "25"))
               (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
               (rule "ifEqualsNull" (formula "3"))
               (rule "cnf_rightDist" (formula "3"))
               (rule "andLeft" (formula "3"))
               (rule "commute_or" (formula "3"))
               (rule "cnf_rightDist" (formula "4"))
               (rule "andLeft" (formula "4"))
               (rule "commute_or" (formula "4"))
               (rule "cnf_rightDist" (formula "3"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "commute_or" (formula "3"))
               (rule "arrayLengthIsAShort" (formula "20") (term "1,1,0"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "true_left" (formula "20"))
               (rule "arrayLengthNotNegative" (formula "20") (term "1,1,0"))
               (rule "allLeft" (formula "18") (inst "t=i_2"))
               (rule "inEqSimp_commuteGeq" (formula "18") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "2"))
               (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
               (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "18") (term "0,0,1"))
               (rule "leq_literals" (formula "18") (term "0,1"))
               (builtin "One Step Simplification" (formula "18"))
               (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "1"))
               (rule "qeq_literals" (formula "18") (term "0,1"))
               (builtin "One Step Simplification" (formula "18"))
               (rule "notLeft" (formula "18"))
               (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "26"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "notLeft" (formula "3"))
               (rule "referencedObjectIsCreatedRight" (formula "25") (ifseqformula "29"))
               (rule "close" (formula "25") (ifseqformula "6"))
            )
         )
         (branch "Case 2"
            (rule "allRight" (formula "33") (inst "sk=i_1"))
            (rule "orRight" (formula "33"))
            (rule "orRight" (formula "33"))
            (rule "notRight" (formula "35"))
            (rule "inEqSimp_leqRight" (formula "34"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_geqRight" (formula "35"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_1"))
            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "20"))
            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "26")))
            (rule "ifthenelse_negated" (formula "3") (term "0"))
            (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "19") (ifseqformula "26"))
            (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "5") (ifseqformula "26"))
            (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
            (rule "ifEqualsNull" (formula "3"))
            (rule "cnf_rightDist" (formula "3"))
            (rule "andLeft" (formula "3"))
            (rule "commute_or" (formula "3"))
            (rule "cnf_rightDist" (formula "4"))
            (rule "andLeft" (formula "4"))
            (rule "commute_or" (formula "4"))
            (rule "cnf_rightDist" (formula "3"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "commute_or" (formula "3"))
            (rule "arrayLengthIsAShort" (formula "20") (term "1,1,0"))
            (builtin "One Step Simplification" (formula "20"))
            (rule "true_left" (formula "20"))
            (rule "arrayLengthNotNegative" (formula "20") (term "1,1,0"))
            (rule "allLeft" (formula "19") (inst "t=i_1"))
            (rule "inEqSimp_commuteGeq" (formula "19") (term "1"))
            (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "1"))
            (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
            (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "19") (term "0,0,1"))
            (rule "leq_literals" (formula "19") (term "0,1"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "2"))
            (rule "qeq_literals" (formula "19") (term "0,1"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "notLeft" (formula "19"))
            (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "26"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "notLeft" (formula "3"))
            (rule "referencedObjectIsCreatedRight" (formula "25") (ifseqformula "30"))
            (rule "close" (formula "25") (ifseqformula "6"))
         )
      )
      (branch "Case 2"
         (rule "allRight" (formula "33") (inst "sk=i_0"))
         (rule "orRight" (formula "33"))
         (rule "notRight" (formula "34"))
         (rule "orRight" (formula "34"))
         (rule "inEqSimp_geqRight" (formula "35"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "inEqSimp_leqRight" (formula "35"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "add_zero_left" (formula "1") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
         (rule "polySimp_elimOne" (formula "2") (term "0"))
         (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_0"))
         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "20"))
         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "32")) (ifInst ""  (formula "8")))
         (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
         (rule "hideAuxiliaryEq" (formula "3"))
         (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "4") (ifseqformula "31"))
         (rule "commute_or" (formula "16") (term "0,0"))
         (rule "commute_or" (formula "15") (term "0,0"))
         (rule "commute_or" (formula "14") (term "0,0"))
         (rule "commute_or" (formula "13") (term "0,0"))
         (rule "allLeft" (formula "17") (inst "t=i_0"))
         (rule "replace_known_left" (formula "17") (term "0,0,0") (ifseqformula "3"))
         (builtin "One Step Simplification" (formula "17"))
         (rule "inEqSimp_commuteGeq" (formula "17") (term "1"))
         (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "1"))
         (rule "qeq_literals" (formula "17") (term "0,0"))
         (builtin "One Step Simplification" (formula "17"))
         (rule "inEqSimp_contradInEq1" (formula "17") (ifseqformula "2"))
         (rule "andLeft" (formula "17"))
         (rule "inEqSimp_homoInEq1" (formula "17"))
         (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
         (rule "add_literals" (formula "17") (term "1,1,0"))
         (rule "times_zero_1" (formula "17") (term "1,0"))
         (rule "add_zero_right" (formula "17") (term "0"))
         (rule "leq_literals" (formula "17"))
         (rule "closeFalse" (formula "17"))
      )
   )
)
(branch "Exceptional Post (first)"
   (builtin "One Step Simplification" (formula "12"))
   (builtin "One Step Simplification" (formula "15"))
   (rule "andLeft" (formula "12"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "13") (term "1,0") (ifseqformula "12"))
   (rule "andLeft" (formula "13"))
   (rule "andLeft" (formula "13"))
   (rule "andLeft" (formula "15"))
   (rule "notLeft" (formula "13"))
   (rule "close" (formula "16") (ifseqformula "15"))
)
(branch "Pre (first)"
   (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "12")) (ifInst ""  (formula "1")) (ifInst ""  (formula "12")))
   (builtin "Evaluate Query" (formula "13") (term "0,1,0") (newnames "b,callee,queryResult,res_byteArrayToInt"))
   (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,bal)_2_0" (formula "14") (term "0,1,0") (userinteraction))
   (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,bal)_2_0" (formula "14") (term "1,1,0,0") (userinteraction))
   (rule "notLeft" (formula "1") (userinteraction))
   (rule "variableDeclaration" (formula "11") (term "1") (newnames "queryResult") (userinteraction))
   (builtin "Use Operation Contract" (formula "11") (newnames "heapBefore_byteArrayToInt,result_1,exc_1") (contract "verif.utils.MessageTools[verif.utils.MessageTools::byteArrayToInt([B)].JML normal_behavior operation contract.0"))
   (branch "Post (byteArrayToInt)"
      (builtin "One Step Simplification" (formula "11"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "translateJavaAddInt" (formula "15") (term "1,0,0"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "12"))
      (rule "eqSymm" (formula "13") (term "0,0,1"))
      (rule "eqSymm" (formula "12"))
      (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "15"))
      (builtin "One Step Simplification" (formula "5"))
      (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "5"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "inEqSimp_homoInEq1" (formula "7"))
      (rule "polySimp_addComm1" (formula "7") (term "0"))
      (rule "assignment" (formula "13") (term "1"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "12"))
      (rule "polySimp_addComm1" (formula "7") (term "0"))
      (rule "applyEq" (formula "8") (term "0") (ifseqformula "12"))
      (rule "inEqSimp_sepNegMonomial0" (formula "7"))
      (rule "polySimp_mulLiterals" (formula "7") (term "0"))
      (rule "polySimp_elimOne" (formula "7") (term "0"))
      (rule "nonNull" (formula "10") (inst "i=i"))
      (rule "greater_literals" (formula "10") (term "0,1"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "sub_literals" (formula "10") (term "2,1,0,1"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "andLeft" (formula "10"))
      (rule "notLeft" (formula "10"))
      (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "13"))
      (builtin "One Step Simplification" (formula "4"))
      (rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "13"))
      (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
      (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
      (rule "array2seqDef" (formula "12") (term "0,0") (inst "u=u"))
      (rule "narrowSelectArrayType" (formula "12") (term "2,0,0") (ifseqformula "1") (ifseqformula "16"))
      (rule "nnf_imp2or" (formula "10") (term "0"))
      (rule "nnf_notAnd" (formula "10") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
      (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
      (rule "mul_literals" (formula "10") (term "1,0,0,0"))
      (rule "commute_and" (formula "17"))
      (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "9") (ifseqformula "3"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "9"))
      (rule "notLeft" (formula "11"))
      (rule "andLeft" (formula "9"))
      (rule "notLeft" (formula "11"))
      (rule "notLeft" (formula "10"))
      (rule "andLeft" (formula "9"))
      (rule "notLeft" (formula "10"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "9"))
      (rule "notLeft" (formula "9"))
      (rule "nonNull" (formula "12") (inst "i=i"))
      (rule "sub_literals" (formula "12") (term "2,1,0,1,1"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "greater_literals" (formula "12") (term "0,1"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "andLeft" (formula "12"))
      (rule "notLeft" (formula "12"))
      (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "16"))
      (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
      (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
      (rule "nonNull" (formula "11") (inst "i=i"))
      (rule "greater_literals" (formula "11") (term "0,1"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "sub_literals" (formula "11") (term "2,1,0,1"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "andLeft" (formula "11"))
      (rule "notLeft" (formula "11"))
      (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "16"))
      (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
      (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
      (rule "nonNull" (formula "10") (inst "i=i"))
      (rule "greater_literals" (formula "10") (term "0,1"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "sub_literals" (formula "10") (term "2,1,0,1"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "andLeft" (formula "10"))
      (rule "notLeft" (formula "10"))
      (rule "narrowSelectArrayType" (formula "10") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "16"))
      (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
      (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
      (rule "nonNull" (formula "9") (inst "i=i"))
      (rule "greater_literals" (formula "9") (term "0,1"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "sub_literals" (formula "9") (term "2,1,0,1"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "andLeft" (formula "9"))
      (rule "notLeft" (formula "9"))
      (rule "narrowSelectArrayType" (formula "9") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "16"))
      (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
      (rule "nnf_imp2or" (formula "12") (term "0"))
      (rule "nnf_imp2or" (formula "11") (term "0"))
      (rule "nnf_imp2or" (formula "10") (term "0"))
      (rule "nnf_imp2or" (formula "9") (term "0"))
      (rule "nnf_notAnd" (formula "12") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
      (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
      (rule "mul_literals" (formula "12") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "11") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
      (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
      (rule "mul_literals" (formula "11") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "10") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
      (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
      (rule "mul_literals" (formula "10") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "9") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
      (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "9") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
      (rule "mul_literals" (formula "9") (term "1,0,0,0"))
      (rule "commute_or_2" (formula "13") (term "0"))
      (rule "methodCallEmpty" (formula "26") (term "1"))
      (builtin "One Step Simplification" (formula "26"))
      (rule "commute_or_2" (formula "12") (term "0"))
      (rule "commute_or_2" (formula "11") (term "0"))
      (rule "commute_or_2" (formula "10") (term "0"))
      (rule "commute_or_2" (formula "9") (term "0"))
      (rule "commute_or" (formula "13") (term "0,0"))
      (rule "commute_or" (formula "12") (term "0,0"))
      (rule "commute_or" (formula "11") (term "0,0"))
      (rule "commute_or" (formula "10") (term "0,0"))
      (rule "commute_or" (formula "9") (term "0,0"))
      (rule "emptyModality" (formula "26") (term "1"))
      (builtin "One Step Simplification" (formula "26"))
      (rule "notRight" (formula "26"))
      (rule "eqSymm" (formula "1"))
      (rule "applyEq" (formula "9") (term "0") (ifseqformula "1"))
      (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "9"))
      (builtin "One Step Simplification" (formula "29"))
      (rule "inEqSimp_geqRight" (formula "29"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0"))
      (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "2"))
      (rule "applyEq" (formula "17") (term "1") (ifseqformula "2"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1"))
      (rule "polySimp_rightDist" (formula "1") (term "1"))
      (rule "mul_literals" (formula "1") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
      (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "9"))
      (rule "andLeft" (formula "1"))
      (rule "inEqSimp_homoInEq1" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0"))
      (rule "mul_literals" (formula "1") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0"))
      (rule "polySimp_addComm1" (formula "1") (term "0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
      (rule "add_literals" (formula "1") (term "1,1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0"))
      (rule "add_zero_right" (formula "1") (term "0"))
      (rule "leq_literals" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch "Exceptional Post (byteArrayToInt)"
      (builtin "One Step Simplification" (formula "11"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "translateJavaAddInt" (formula "15") (term "1,0,0"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "12"))
      (rule "andLeft" (formula "11"))
      (rule "notLeft" (formula "11"))
      (rule "close" (formula "14") (ifseqformula "13"))
   )
   (branch "Pre (byteArrayToInt)"
      (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "13")) (ifInst ""  (formula "1")) (ifInst ""  (formula "13")))
      (rule "translateJavaAddInt" (formula "14") (term "1,0,0"))
      (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "13"))
      (builtin "One Step Simplification" (formula "5"))
      (rule "replace_known_left" (formula "11") (term "1") (ifseqformula "5"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "5"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "inEqSimp_geqRight" (formula "11"))
      (rule "mul_literals" (formula "1") (term "1,0,0"))
      (rule "add_literals" (formula "1") (term "0,0"))
      (rule "inEqSimp_homoInEq1" (formula "8"))
      (rule "polySimp_addComm1" (formula "8") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "8"))
      (rule "polySimp_mulComm0" (formula "8") (term "1"))
      (rule "polySimp_rightDist" (formula "8") (term "1"))
      (rule "mul_literals" (formula "8") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
      (rule "polySimp_elimOne" (formula "8") (term "1,1"))
      (rule "nonNull" (formula "11") (inst "i=i"))
      (rule "greater_literals" (formula "11") (term "0,1"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "sub_literals" (formula "11") (term "2,1,0,1"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "andLeft" (formula "11"))
      (rule "notLeft" (formula "11"))
      (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "12"))
      (builtin "One Step Simplification" (formula "5"))
      (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "12"))
      (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
      (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
      (rule "array2seqDef" (formula "9") (term "0,0") (inst "u=u"))
      (rule "narrowSelectArrayType" (formula "9") (term "2,0,0") (ifseqformula "2") (ifseqformula "14"))
      (rule "array2seqDef" (formula "8") (term "0,0") (inst "u=u"))
      (rule "narrowSelectArrayType" (formula "8") (term "2,0,0") (ifseqformula "2") (ifseqformula "14"))
      (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "8"))
      (rule "times_zero_1" (formula "9") (term "0,0"))
      (rule "add_zero_left" (formula "9") (term "0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "9"))
      (rule "mul_literals" (formula "9") (term "1"))
      (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "9"))
      (rule "qeq_literals" (formula "1") (term "0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
)
)

}
