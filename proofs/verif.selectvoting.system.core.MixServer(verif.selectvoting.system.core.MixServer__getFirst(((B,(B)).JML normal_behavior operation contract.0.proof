\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sun Dec 04 18:37:21 CET 2016
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=\\#begexpand_inByte\\#end,\\#begexpand_inChar\\#end,\\#begexpand_inShort\\#end,\\#begexpand_inInt\\#end,\\#begexpand_inLong\\#end
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=4000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Sun Dec 04 18:37:21 CET 2016
name=verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer\\:\\:getFirst([[B,[B)].JML normal_behavior operation contract.0
contract=verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer\\:\\:getFirst([[B,[B)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mihai" ) (keyVersion "467f4054054b19a48d0d06e2e8bae6f9716b2959"))
(keyLog "1" (keyUser "mihai" ) (keyVersion "467f4054054b19a48d0d06e2e8bae6f9716b2959"))
(keyLog "2" (keyUser "mihai" ) (keyVersion "467f4054054b19a48d0d06e2e8bae6f9716b2959"))
(keyLog "3" (keyUser "mihai" ) (keyVersion "467f4054054b19a48d0d06e2e8bae6f9716b2959"))
(keyLog "4" (keyUser "mihai" ) (keyVersion "467f4054054b19a48d0d06e2e8bae6f9716b2959"))
(keyLog "5" (keyUser "mihai" ) (keyVersion "467f4054054b19a48d0d06e2e8bae6f9716b2959"))

(autoModeTime "331821")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "messages,bal,self,result,exc,heapAtPre,o,f") (userinteraction))
(builtin "One Step Simplification" (formula "2"))
(rule "assignment" (formula "2") (term "1") (userinteraction))
(rule "methodBodyExpand" (formula "2") (term "1,1") (newnames "heapBefore_getFirst,savedHeapBefore_getFirst") (userinteraction))
(rule "variableDeclarationAssign" (formula "2") (term "1,1,1") (userinteraction))
(builtin "One Step Simplification" (formula "2"))
(rule "variableDeclaration" (formula "2") (term "1") (newnames "first_1") (userinteraction))
(builtin "Use Operation Contract" (formula "2") (newnames "heapBefore_first,result_0,exc_0,heapAfter_first,anon_heap_first") (contract "verif.utils.MessageTools[verif.utils.MessageTools::first([B)].JML normal_behavior operation contract.0"))
(branch "Post (first)"
   (rule "assignment" (formula "4") (term "1,1") (userinteraction))
   (builtin "One Step Simplification" (formula "4"))
   (builtin "Use Operation Contract" (formula "4") (newnames "heapBefore_addEntry,result_1,exc_1,heapAfter_addEntry,anon_heap_addEntry") (contract "verif.selectvoting.system.core.MixServer[verif.selectvoting.system.core.MixServer::addEntry([[B,[B)].JML normal_behavior operation contract.0"))
   (branch "Post (addEntry)"
      (rule "assignment" (formula "6") (term "1,1") (userinteraction))
      (rule "methodCallReturn" (formula "6") (term "1,1,1") (userinteraction))
      (rule "assignment" (formula "6") (term "1,1,1") (userinteraction))
      (rule "methodCallEmpty" (formula "6") (term "1,1,1,1") (userinteraction))
      (rule "tryEmpty" (formula "6") (term "1,1,1,1") (userinteraction))
      (rule "emptyModality" (formula "6") (term "1,1,1,1") (userinteraction))
      (builtin "One Step Simplification" (formula "6"))
      (rule "andRight" (formula "6") (userinteraction))
      (branch "Case 1"
         (rule "cut_direct" (formula "6") (term "0,1") (userinteraction))
         (branch "CUT: result_1.length = javaAddInt(messages.length, 1) TRUE"
            (rule "translateJavaAddInt" (formula "1") (term "1") (userinteraction))
            (builtin "One Step Simplification" (formula "7"))
            (rule "andRight" (formula "7") (userinteraction))
            (branch "Case 1"
               (builtin "One Step Simplification" (formula "6"))
               (builtin "One Step Simplification" (formula "4"))
               (rule "andLeft" (formula "2"))
               (rule "andLeft" (formula "7"))
               (rule "andLeft" (formula "5"))
               (rule "andLeft" (formula "2"))
               (rule "andLeft" (formula "4"))
               (rule "andLeft" (formula "11"))
               (rule "andLeft" (formula "8"))
               (rule "andLeft" (formula "2"))
               (rule "andLeft" (formula "6"))
               (rule "andLeft" (formula "15"))
               (rule "andLeft" (formula "14"))
               (rule "andLeft" (formula "10"))
               (rule "andLeft" (formula "12"))
               (rule "andLeft" (formula "3"))
               (rule "andLeft" (formula "2"))
               (rule "andLeft" (formula "9"))
               (rule "andLeft" (formula "19"))
               (rule "andLeft" (formula "15"))
               (rule "andLeft" (formula "2"))
               (rule "andLeft" (formula "11"))
               (rule "andLeft" (formula "23"))
               (rule "andLeft" (formula "18"))
               (rule "andLeft" (formula "2"))
               (rule "andLeft" (formula "13"))
               (rule "andLeft" (formula "27"))
               (rule "andLeft" (formula "26"))
               (rule "notLeft" (formula "21"))
               (rule "notLeft" (formula "20"))
               (rule "notLeft" (formula "3"))
               (rule "andLeft" (formula "13"))
               (rule "notLeft" (formula "25"))
               (rule "notLeft" (formula "24"))
               (rule "allRight" (formula "32") (inst "sk=i_5") (userinteraction))
               (rule "impRight" (formula "32") (userinteraction))
               (rule "cut" (inst "cutFormula=i_5 = length(messages)") (userinteraction))
               (branch "CUT: i_5 = messages.length TRUE"
                  (rule "cut" (inst "cutFormula=lt(length(messages),
   length(byte[][]::select(heap,
                           self,
                           verif.selectvoting.system.core.MixServer::$sorted)))") (userinteraction))
                  (branch "CUT: messages.length < self.sorted.length TRUE"
                     (rule "cut" (inst "cutFormula=  array2seq(heapAfter_addEntry,
            byte[]::select(heapAfter_addEntry,
                           result_1,
                           arr(i_5)))
= array2seq(heapAfter_addEntry, result_0)") (userinteraction))
                     (branch "CUT: array2seq(heapAfter_addEntry, result_1[i_5]@heapAfter_addEntry) = array2seq(heapAfter_addEntry, result_0) TRUE"
                        (rule "applyEq" (formula "36") (term "0") (ifseqformula "1") (userinteraction))
                        (rule "cut" (inst "cutFormula=  array2seq(heapAfter_addEntry, result_0)
= array2seq(heapAfter_first, result_0)") (userinteraction))
                        (branch "CUT: array2seq(heapAfter_addEntry, result_0) = array2seq(heapAfter_first, result_0) TRUE"
                           (rule "cut" (inst "cutFormula=array2seq(heapAfter_first, bal) = array2seq(heap, bal)") (userinteraction))
                           (branch "CUT: array2seq(heapAfter_first, bal) = array2seq(heap, bal) TRUE"
                              (rule "applyEq" (formula "25") (term "0,1") (ifseqformula "1") (userinteraction))
                              (rule "applyEq" (formula "25") (term "0,1") (ifseqformula "16") (userinteraction))
                              (rule "defOfarrConcat" (formula "25") (term "0,1") (userinteraction))
                              (rule "ifthenelse_split" (formula "25") (term "0,1") (userinteraction))
                              (branch "messages.length = array2seq2d(heap, self.sorted).length TRUE"
                                 (rule "array2seq2dDef" (formula "25") (term "0,1") (inst "u=u") (userinteraction))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (ifseqformula "22"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "1") (ifseqformula "22"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "1") (ifseqformula "28"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,1") (ifseqformula "22"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "andLeft" (formula "6"))
                                 (rule "orRight" (formula "36"))
                                 (rule "notLeft" (formula "22"))
                                 (rule "eqSymm" (formula "26"))
                                 (rule "eqSymm" (formula "31"))
                                 (rule "eqSymm" (formula "17"))
                                 (rule "eqSymm" (formula "42"))
                                 (rule "eqSymm" (formula "5"))
                                 (rule "eqSymm" (formula "2"))
                                 (rule "eqSymm" (formula "18") (term "1,0"))
                                 (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "35"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "replace_known_right" (formula "25") (term "0,1") (ifseqformula "40"))
                                 (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "41")))
                                 (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "38"))
                                 (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "36")) (ifInst ""  (formula "37")))
                                 (rule "polySimp_addComm0" (formula "8") (term "1"))
                                 (rule "lenOfSeqDef" (formula "26") (term "0"))
                                 (rule "polySimp_elimSub" (formula "26") (term "1,0"))
                                 (rule "times_zero_2" (formula "26") (term "1,1,0"))
                                 (rule "add_zero_right" (formula "26") (term "1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "7"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0"))
                                 (rule "add_zero_right" (formula "26") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "19"))
                                 (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "15"))
                                 (rule "polySimp_addComm1" (formula "15") (term "0"))
                                 (rule "applyEq" (formula "19") (term "1") (ifseqformula "5"))
                                 (rule "applyEq" (formula "27") (term "0") (ifseqformula "2"))
                                 (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "5"))
                                 (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "8"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                 (rule "mul_literals" (formula "7") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                 (rule "add_literals" (formula "7") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "7") (term "0,0"))
                                 (rule "applyEq" (formula "26") (term "1") (ifseqformula "5"))
                                 (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0") (ifseqformula "5"))
                                 (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "5"))
                                 (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "5"))
                                 (rule "applyEq" (formula "31") (term "0,1,0") (ifseqformula "27"))
                                 (rule "applyEq" (formula "3") (term "1") (ifseqformula "27"))
                                 (rule "applyEq" (formula "42") (term "1") (ifseqformula "27"))
                                 (rule "applyEq" (formula "2") (term "1") (ifseqformula "27"))
                                 (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "5"))
                                 (rule "polySimp_pullOutFactor1" (formula "7") (term "0"))
                                 (rule "add_literals" (formula "7") (term "1,0"))
                                 (rule "times_zero_1" (formula "7") (term "0"))
                                 (rule "leq_literals" (formula "7"))
                                 (rule "true_left" (formula "7"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1"))
                                 (rule "mul_literals" (formula "14") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                 (rule "polySimp_elimOne" (formula "4") (term "0"))
                                 (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                                 (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                 (rule "add_literals" (formula "18") (term "0,0"))
                                 (rule "qeq_literals" (formula "18") (term "0"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "array2seqDef" (formula "3") (term "0") (inst "u=u"))
                                 (rule "array2seqDef" (formula "1") (term "1") (inst "u=u"))
                                 (rule "eqSymm" (formula "1"))
                                 (rule "narrowSelectArrayType" (formula "1") (term "2,0") (ifseqformula "8") (ifseqformula "33"))
                                 (rule "array2seqDef" (formula "15") (term "0,0") (inst "u=u"))
                                 (rule "narrowSelectArrayType" (formula "15") (term "2,0,0") (ifseqformula "8") (ifseqformula "33"))
                                 (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "1"))
                                 (rule "nonNull" (formula "31") (inst "i=i"))
                                 (rule "sub_literals" (formula "31") (term "2,1,0,1,1"))
                                 (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "36")))
                                 (rule "greater_literals" (formula "31") (term "0"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                                 (rule "applyEq" (formula "31") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                                 (rule "nonNull" (formula "19") (inst "i=i"))
                                 (rule "greater_literals" (formula "19") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "sub_literals" (formula "19") (term "2,1,0,1"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "andLeft" (formula "19"))
                                 (rule "notLeft" (formula "19"))
                                 (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "33"))
                                 (builtin "One Step Simplification" (formula "11"))
                                 (rule "narrowSelectArrayType" (formula "19") (term "0,0,1,0") (ifseqformula "8") (ifseqformula "33"))
                                 (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                 (rule "applyEq" (formula "19") (term "0,1,0,0,1,0,0") (ifseqformula "5"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                                 (rule "array2seqDef" (formula "16") (term "1") (inst "u=u"))
                                 (rule "eqSymm" (formula "16"))
                                 (rule "narrowSelectArrayType" (formula "16") (term "2,0") (ifseqformula "8") (ifseqformula "34"))
                                 (rule "applyEq" (formula "16") (term "0") (ifseqformula "1"))
                                 (rule "eqSymm" (formula "16"))
                                 (rule "array2seqDef" (formula "41") (term "0") (inst "u=u"))
                                 (rule "array2seqDef" (formula "2") (term "0") (inst "u=u"))
                                 (rule "array2seqDef" (formula "17") (term "1,1,0") (inst "u=u"))
                                 (rule "eqSymm" (formula "17") (term "1,0"))
                                 (rule "array2seqDef" (formula "25") (term "0") (inst "u=u"))
                                 (rule "array2seqDef" (formula "14") (term "0,0") (inst "u=u"))
                                 (rule "narrowSelectArrayType" (formula "14") (term "2,0,0") (ifseqformula "8") (ifseqformula "34"))
                                 (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "1"))
                                 (rule "array2seqDef" (formula "1") (term "1") (inst "u=u"))
                                 (rule "eqSymm" (formula "1"))
                                 (rule "array2seqDef" (formula "15") (term "0,0") (inst "u=u"))
                                 (rule "array2seqDef" (formula "16") (term "1") (inst "u=u"))
                                 (rule "eqSymm" (formula "16"))
                                 (rule "equalityToSeqGetAndSeqLenRight" (formula "41") (inst "iv=iv"))
                                 (rule "lenOfSeqDef" (formula "41") (term "0,0"))
                                 (rule "polySimp_elimSub" (formula "41") (term "1,0,0"))
                                 (rule "mul_literals" (formula "41") (term "1,1,0,0"))
                                 (rule "add_zero_right" (formula "41") (term "1,0,0"))
                                 (rule "lenOfSeqDef" (formula "41") (term "1,1,0,0,1"))
                                 (rule "polySimp_elimSub" (formula "41") (term "1,1,1,0,0,1"))
                                 (rule "mul_literals" (formula "41") (term "1,1,1,1,0,0,1"))
                                 (rule "add_zero_right" (formula "41") (term "1,1,1,0,0,1"))
                                 (rule "getOfSeqDef" (formula "41") (term "0,1,0,1"))
                                 (rule "castDel" (formula "41") (term "2,0,1,0,1"))
                                 (rule "castDel" (formula "41") (term "1,0,1,0,1"))
                                 (rule "add_zero_right" (formula "41") (term "0,2,1,0,1,0,1"))
                                 (rule "polySimp_elimSub" (formula "41") (term "1,1,0,0,1,0,1"))
                                 (rule "times_zero_2" (formula "41") (term "1,1,1,0,0,1,0,1"))
                                 (rule "add_zero_right" (formula "41") (term "1,1,0,0,1,0,1"))
                                 (rule "lenOfSeqDefEQ" (formula "41") (term "1,0") (ifseqformula "3"))
                                 (rule "polySimp_elimSub" (formula "41") (term "1,1,0"))
                                 (rule "times_zero_2" (formula "41") (term "1,1,1,0"))
                                 (rule "add_zero_right" (formula "41") (term "1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0"))
                                 (rule "add_zero_right" (formula "41") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,1,0,0,1"))
                                 (rule "add_zero_right" (formula "41") (term "0,0,1,1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,1,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,1,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0,1,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "41") (term "0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "41") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "41") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,1,0,1"))
                                 (rule "mul_literals" (formula "41") (term "0,1,1,0,0,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,1,0,1"))
                                 (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,1,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,1"))
                                 (rule "mul_literals" (formula "41") (term "0,1,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "41") (term "0,1,1,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "0,0,1,1,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "41") (term "0,0,1,1,1,0,0,1"))
                                 (rule "array2seqDef" (formula "17") (term "1,1,0") (inst "u=u"))
                                 (rule "eqSymm" (formula "17") (term "1,0"))
                                 (rule "array2seqDef" (formula "14") (term "0,0") (inst "u=u"))
                                 (rule "eqSeqDef2" (formula "3") (inst "iv=iv") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "eqSeqDef" (formula "1") (inst "iv=iv"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "getOfSeqDef" (formula "2") (term "1,1,0"))
                                 (rule "castDel" (formula "2") (term "1,1,1,0"))
                                 (rule "castDel" (formula "2") (term "2,1,1,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,2,1,1,1,0"))
                                 (rule "polySimp_elimSub" (formula "2") (term "1,1,0,1,1,0"))
                                 (rule "times_zero_2" (formula "2") (term "1,1,1,0,1,1,0"))
                                 (rule "add_zero_right" (formula "2") (term "1,1,0,1,1,0"))
                                 (rule "lenOfSeqDef" (formula "1") (term "1"))
                                 (rule "polySimp_elimSub" (formula "1") (term "1,1"))
                                 (rule "times_zero_2" (formula "1") (term "1,1,1"))
                                 (rule "add_zero_right" (formula "1") (term "1,1"))
                                 (rule "lenOfSeqDef" (formula "2") (term "1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "2") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "2") (term "1,1,1,1,0,0"))
                                 (rule "add_zero_right" (formula "2") (term "1,1,1,0,0"))
                                 (rule "lenOfSeqDef" (formula "1") (term "0"))
                                 (rule "polySimp_elimSub" (formula "1") (term "1,0"))
                                 (rule "times_zero_2" (formula "1") (term "1,1,0"))
                                 (rule "add_zero_right" (formula "1") (term "1,0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "getOfSeqDef" (formula "1") (term "0,1,0"))
                                 (rule "castDel" (formula "1") (term "1,0,1,0"))
                                 (rule "castDel" (formula "1") (term "2,0,1,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,2,1,0,1,0"))
                                 (rule "polySimp_elimSub" (formula "1") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_2" (formula "1") (term "1,1,1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "1") (term "1,1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,1,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0,1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0,1,0"))
                                 (rule "eqSymm" (formula "1") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,1,1,0"))
                                 (rule "eqSymm" (formula "1") (term "1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,1,0,1,1,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,1,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,0,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                 (rule "eqSeqDef2" (formula "2") (inst "iv=iv") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "eqSeqDef" (formula "15") (term "1,0") (inst "iv=iv"))
                                 (rule "lenOfSeqDef" (formula "15") (term "0,0,1,0"))
                                 (rule "eqSymm" (formula "15") (term "0,1,0"))
                                 (rule "polySimp_elimSub" (formula "15") (term "1,1,0,1,0"))
                                 (rule "mul_literals" (formula "15") (term "1,1,1,0,1,0"))
                                 (rule "add_zero_right" (formula "15") (term "1,1,0,1,0"))
                                 (rule "getOfSeqDef" (formula "15") (term "0,1,0,1,1,0"))
                                 (rule "castDel" (formula "15") (term "1,0,1,0,1,1,0"))
                                 (rule "castDel" (formula "15") (term "2,0,1,0,1,1,0"))
                                 (rule "add_zero_right" (formula "15") (term "0,2,1,0,1,0,1,1,0"))
                                 (rule "eqSymm" (formula "15") (term "1,0,1,1,0"))
                                 (rule "polySimp_elimSub" (formula "15") (term "1,1,0,1,1,0,1,1,0"))
                                 (rule "mul_literals" (formula "15") (term "1,1,1,0,1,1,0,1,1,0"))
                                 (rule "add_zero_right" (formula "15") (term "1,1,0,1,1,0,1,1,0"))
                                 (rule "lenOfSeqDef" (formula "15") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_elimSub" (formula "15") (term "1,1,1,0,0,1,1,0"))
                                 (rule "times_zero_2" (formula "15") (term "1,1,1,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "15") (term "1,1,1,0,0,1,1,0"))
                                 (rule "lenOfSeqDef" (formula "15") (term "0,0,1,0"))
                                 (rule "eqSymm" (formula "15") (term "0,1,0"))
                                 (rule "polySimp_elimSub" (formula "15") (term "1,1,0,1,0"))
                                 (rule "times_zero_2" (formula "15") (term "1,1,1,0,1,0"))
                                 (rule "add_zero_right" (formula "15") (term "1,1,0,1,0"))
                                 (rule "getOfSeqDef" (formula "15") (term "0,1,0,1,1,0"))
                                 (rule "castDel" (formula "15") (term "1,0,1,0,1,1,0"))
                                 (rule "castDel" (formula "15") (term "2,0,1,0,1,1,0"))
                                 (rule "add_zero_right" (formula "15") (term "0,2,1,0,1,0,1,1,0"))
                                 (rule "eqSymm" (formula "15") (term "1,0,1,1,0"))
                                 (rule "polySimp_elimSub" (formula "15") (term "1,1,0,1,1,0,1,1,0"))
                                 (rule "times_zero_2" (formula "15") (term "1,1,1,0,1,1,0,1,1,0"))
                                 (rule "add_zero_right" (formula "15") (term "1,1,0,1,1,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "15") (term "0,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,0,1,0"))
                                 (rule "add_zero_right" (formula "15") (term "0,0,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0,1,0"))
                                 (rule "add_zero_right" (formula "15") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0,1,1,0"))
                                 (rule "eqSymm" (formula "15") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,1,1,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0,1,1,0"))
                                 (rule "eqSymm" (formula "15") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,1,1,0,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,1,1,0,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0,1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "0,0,1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "0,0,1,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "0,0,0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0,1,1,0"))
                                 (rule "eqSymm" (formula "15") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,1,1,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,1,0,1,1,0,1,1,0"))
                                 (rule "mul_literals" (formula "15") (term "0,1,1,0,1,1,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,1,1,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,1,1,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0,1,1,0"))
                                 (rule "eqSymm" (formula "15") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,1,1,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,1,0,1,1,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,1,1,0,1,1,0"))
                                 (rule "mul_literals" (formula "15") (term "0,1,1,0,1,1,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,1,1,0,1,1,0"))
                                 (rule "eqSeqDef2" (formula "23") (inst "iv=iv") (ifseqformula "23"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "true_left" (formula "23"))
                                 (rule "pullOutSelect" (formula "38") (term "1,0,1,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_15"))
                                 (rule "applyEq" (formula "39") (term "1,1,1,0,1,0,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "39") (term "1,0,1,1,1,0,0,1,0,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "39") (term "1,0,0,0,1,1,1,0,0,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "39") (term "1,0,0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "39") (term "1,0,1,1,1,1,0,0,1") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "20"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "8"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")) (ifInst ""  (formula "8")))
                                 (rule "applyEqReverse" (formula "39") (term "1,0,0,0,1,1,1,0,0,1") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "39") (term "1,1,1,0,1,0,1") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "39") (term "1,0,1,1,1,1,0,0,1") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "39") (term "1,0,1,0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "39") (term "1,0,1,1,1,0,0,1,0,1") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "39") (term "1,0,0,0,0,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "38") (term "0,1,1,0") (inst "selectSK=arr_138"))
                                 (rule "applyEq" (formula "39") (term "0,0,0,1,0") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "20"))
                                 (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "34"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                                 (rule "applyEqReverse" (formula "39") (term "0,0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "39") (term "0,1,1,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "eqSeqDef2" (formula "14") (inst "iv=iv") (ifseqformula "14"))
                                 (builtin "One Step Simplification" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "12"))
                                 (rule "mul_literals" (formula "13") (term "0,0"))
                                 (rule "add_zero_left" (formula "13") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                 (rule "mul_literals" (formula "13") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "1") (term "0,1,1,1,0,0") (ifseqformula "13"))
                                 (rule "leq_literals" (formula "1") (term "0,0,1,1,1,0,0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "pullOutSelect" (formula "38") (term "0,0,0,1,1,1,0,0,1") (inst "selectSK=arr_139"))
                                 (rule "applyEq" (formula "39") (term "1,1,0,1,0,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "39") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "39") (term "0,1,1,1,1,0,0,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "39") (term "0,0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "39") (term "0,1,1,1,0,0,1,0,1") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "20"))
                                 (rule "eqSymm" (formula "39") (term "0"))
                                 (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_140"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "nnf_imp2or" (formula "30") (term "0"))
                                 (rule "nnf_imp2or" (formula "19") (term "0"))
                                 (rule "nnf_imp2or" (formula "17") (term "0"))
                                 (rule "nnf_imp2or" (formula "3") (term "0"))
                                 (rule "nnf_imp2or" (formula "40") (term "0,1"))
                                 (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "30") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                                 (rule "mul_literals" (formula "30") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                 (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                                 (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "3") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "3") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "3") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "3") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "3") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,0"))
                                 (rule "mul_literals" (formula "3") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "40") (term "0,0,1"))
                                 (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0,1"))
                                 (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0,1"))
                                 (rule "add_literals" (formula "40") (term "0,0,0,1,0,0,1"))
                                 (rule "add_zero_left" (formula "40") (term "0,0,1,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,1"))
                                 (rule "inEqSimp_notGeq" (formula "40") (term "0,0,0,1"))
                                 (rule "times_zero_1" (formula "40") (term "1,0,0,0,0,0,1"))
                                 (rule "add_literals" (formula "40") (term "0,0,0,0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,1"))
                                 (rule "mul_literals" (formula "40") (term "1,0,0,0,1"))
                                 (rule "nnf_imp2or" (formula "17") (term "0,1,1,0"))
                                 (rule "nnf_notAnd" (formula "17") (term "0,0,1,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "17") (term "0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "17") (term "1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "17") (term "0,0,0,1,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "17") (term "0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,1,1,0"))
                                 (rule "ifthenelse_split" (formula "24") (term "0"))
                                 (branch "self.sorted.length ≥ 1 TRUE"
                                    (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                                    (rule "applyEq" (formula "4") (term "0") (ifseqformula "25"))
                                    (rule "inEqSimp_homoInEq1" (formula "4"))
                                    (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0"))
                                    (rule "add_zero_right" (formula "4") (term "0"))
                                    (rule "leq_literals" (formula "4"))
                                    (rule "closeFalse" (formula "4"))
                                 )
                                 (branch "self.sorted.length ≥ 1 FALSE"
                                    (rule "eqSymm" (formula "24"))
                                    (rule "inEqSimp_geqRight" (formula "32"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "applyEq" (formula "18") (term "1,1,0,0") (ifseqformula "25"))
                                    (rule "applyEqRigid" (formula "41") (term "0,2,0,1,0,0") (ifseqformula "25"))
                                    (rule "applyEqRigid" (formula "2") (term "0,2,1,0") (ifseqformula "25"))
                                    (rule "applyEqRigid" (formula "3") (term "0,2,1,0") (ifseqformula "25"))
                                    (rule "applyEqRigid" (formula "20") (term "1,1,0,0") (ifseqformula "25"))
                                    (rule "applyEqRigid" (formula "31") (term "1,1,1,0,0") (ifseqformula "25"))
                                    (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                    (rule "applyEqRigid" (formula "41") (term "0,2,0,0,0,0,0") (ifseqformula "25"))
                                    (rule "applyEq" (formula "2") (term "0,2,2,0") (ifseqformula "25"))
                                    (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "25"))
                                    (rule "qeq_literals" (formula "7"))
                                    (rule "true_left" (formula "7"))
                                    (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "24"))
                                    (rule "add_literals" (formula "5") (term "1"))
                                    (rule "applyEq" (formula "6") (term "1") (ifseqformula "24"))
                                    (rule "applyEqRigid" (formula "7") (term "1,1") (ifseqformula "24"))
                                    (rule "add_literals" (formula "7") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "5"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                              (branch "messages.length = array2seq2d(heap, self.sorted).length FALSE"
                                 (rule "mFirstofmConcat" (formula "25") (term "1") (userinteraction))
                                 (rule "applyEq" (formula "39") (term "0") (ifseqformula "2") (userinteraction))
                                 (rule "applyEq" (formula "39") (term "0") (ifseqformula "25") (userinteraction))
                                 (rule "array2seq2dDef" (formula "39") (term "0,0") (inst "u=u") (userinteraction))
                                 (rule "getOfSeqDef" (formula "39") (term "0") (userinteraction))
                                 (rule "ifthenelse_split" (formula "39") (term "0") (userinteraction))
                                 (branch " 0 ≤ messages.length ∧ messages.length < self.sorted.length - 0 TRUE"
                                    (rule "add_zero_right" (formula "40") (term "0,2,1,0,0") (userinteraction))
                                    (rule "applyEq" (formula "40") (term "0,2,1,1") (ifseqformula "6") (userinteraction))
                                    (rule "castDel" (formula "40") (term "0") (userinteraction))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (ifseqformula "23"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "1") (ifseqformula "23"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "1") (ifseqformula "28"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,1") (ifseqformula "23"))
                                    (rule "andLeft" (formula "21"))
                                    (rule "andLeft" (formula "7"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "orRight" (formula "38"))
                                    (rule "notLeft" (formula "24"))
                                    (rule "eqSymm" (formula "19"))
                                    (rule "eqSymm" (formula "7"))
                                    (rule "eqSymm" (formula "44"))
                                    (rule "eqSymm" (formula "4"))
                                    (rule "eqSymm" (formula "32"))
                                    (rule "eqSymm" (formula "37"))
                                    (rule "eqSymm" (formula "28"))
                                    (rule "eqSymm" (formula "20") (term "1,0"))
                                    (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "36"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "43"))
                                    (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "42")))
                                    (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "40"))
                                    (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "38")) (ifInst ""  (formula "39")))
                                    (rule "polySimp_elimSub" (formula "2") (term "1"))
                                    (rule "times_zero_2" (formula "2") (term "1,1"))
                                    (rule "add_zero_right" (formula "2") (term "1"))
                                    (rule "polySimp_addComm0" (formula "9") (term "1"))
                                    (rule "inEqSimp_ltToLeq" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "8"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "20"))
                                    (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "7"))
                                    (rule "inEqSimp_commuteLeq" (formula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "16"))
                                    (rule "polySimp_addComm1" (formula "16") (term "0"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "42") (term "0,2,1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "8"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                    (rule "mul_literals" (formula "7") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                    (rule "add_literals" (formula "7") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "7") (term "0,0"))
                                    (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "19") (term "1") (ifseqformula "5"))
                                    (rule "applyEq" (formula "26") (term "1") (ifseqformula "2"))
                                    (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "5"))
                                    (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "42") (term "0,2,1,1") (ifseqformula "5"))
                                    (rule "applyEq" (formula "35") (term "1") (ifseqformula "5"))
                                    (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "5"))
                                    (rule "polySimp_pullOutFactor1" (formula "7") (term "0"))
                                    (rule "add_literals" (formula "7") (term "1,0"))
                                    (rule "times_zero_1" (formula "7") (term "0"))
                                    (rule "leq_literals" (formula "7"))
                                    (rule "true_left" (formula "7"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "14"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1"))
                                    (rule "mul_literals" (formula "14") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                    (rule "polySimp_elimOne" (formula "4") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "4"))
                                    (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "18") (term "0,0"))
                                    (rule "qeq_literals" (formula "18") (term "0"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "array2seqDef" (formula "15") (term "0,0") (inst "u=u"))
                                    (rule "narrowSelectArrayType" (formula "15") (term "2,0,0") (ifseqformula "8") (ifseqformula "32"))
                                    (rule "array2seqDef" (formula "1") (term "0") (inst "u=u"))
                                    (rule "array2seqDef" (formula "1") (term "1") (inst "u=u"))
                                    (rule "narrowSelectArrayType" (formula "1") (term "2,1") (ifseqformula "8") (ifseqformula "32"))
                                    (rule "array2seqDef" (formula "3") (term "0") (inst "u=u"))
                                    (rule "nonNull" (formula "30") (inst "i=i"))
                                    (rule "greater_literals" (formula "30") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "36")))
                                    (rule "sub_literals" (formula "30") (term "2,1,0"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                                    (rule "applyEq" (formula "30") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                                    (rule "array2seqDef" (formula "3") (term "1") (inst "u=u"))
                                    (rule "nonNull" (formula "19") (inst "i=i"))
                                    (rule "greater_literals" (formula "19") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "sub_literals" (formula "19") (term "2,1,0,1"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "andLeft" (formula "19"))
                                    (rule "notLeft" (formula "19"))
                                    (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "32"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "narrowSelectArrayType" (formula "19") (term "0,0,1,0") (ifseqformula "8") (ifseqformula "32"))
                                    (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                    (rule "applyEq" (formula "19") (term "0,1,0,0,1,0,0") (ifseqformula "5"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                                    (rule "array2seqDef" (formula "16") (term "1") (inst "u=u"))
                                    (rule "eqSymm" (formula "16"))
                                    (rule "narrowSelectArrayType" (formula "16") (term "2,0") (ifseqformula "8") (ifseqformula "33"))
                                    (rule "applyEq" (formula "1") (term "1") (ifseqformula "16"))
                                    (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "16"))
                                    (rule "array2seqDef" (formula "2") (term "1") (inst "u=u"))
                                    (rule "eqSymm" (formula "2"))
                                    (rule "array2seqDef" (formula "28") (term "0,1,0") (inst "u=u"))
                                    (rule "array2seqDef" (formula "17") (term "0,1,0") (inst "u=u"))
                                    (rule "array2seqDef" (formula "17") (term "1,1,0") (inst "u=u"))
                                    (rule "array2seqDef" (formula "41") (term "0") (inst "u=u"))
                                    (rule "array2seqDef" (formula "24") (term "1") (inst "u=u"))
                                    (rule "eqSymm" (formula "24"))
                                    (rule "array2seqDef" (formula "41") (term "1") (inst "u=u"))
                                    (rule "array2seqDef" (formula "14") (term "0,0") (inst "u=u"))
                                    (rule "narrowSelectArrayType" (formula "14") (term "2,0,0") (ifseqformula "8") (ifseqformula "33"))
                                    (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "16"))
                                    (rule "eqSeqDef" (formula "3") (inst "iv=iv"))
                                    (rule "andLeft" (formula "3"))
                                    (rule "getOfSeqDef" (formula "4") (term "0,1,0"))
                                    (rule "castDel" (formula "4") (term "1,0,1,0"))
                                    (rule "castDel" (formula "4") (term "2,0,1,0"))
                                    (rule "add_zero_right" (formula "4") (term "0,2,1,0,1,0"))
                                    (rule "eqSymm" (formula "4") (term "1,0"))
                                    (rule "polySimp_elimSub" (formula "4") (term "1,1,0,1,1,0"))
                                    (rule "times_zero_2" (formula "4") (term "1,1,1,0,1,1,0"))
                                    (rule "add_zero_right" (formula "4") (term "1,1,0,1,1,0"))
                                    (rule "lenOfSeqDef" (formula "4") (term "1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "4") (term "1,1,1,0,0"))
                                    (rule "times_zero_2" (formula "4") (term "1,1,1,1,0,0"))
                                    (rule "add_zero_right" (formula "4") (term "1,1,1,0,0"))
                                    (rule "lenOfSeqDef" (formula "3") (term "1"))
                                    (rule "polySimp_elimSub" (formula "3") (term "1,1"))
                                    (rule "times_zero_2" (formula "3") (term "1,1,1"))
                                    (rule "add_zero_right" (formula "3") (term "1,1"))
                                    (rule "lenOfSeqDef" (formula "3") (term "0"))
                                    (rule "polySimp_elimSub" (formula "3") (term "1,0"))
                                    (rule "mul_literals" (formula "3") (term "1,1,0"))
                                    (rule "add_zero_right" (formula "3") (term "1,0"))
                                    (rule "getOfSeqDef" (formula "4") (term "0,1,0"))
                                    (rule "castDel" (formula "4") (term "1,0,1,0"))
                                    (rule "castDel" (formula "4") (term "2,0,1,0"))
                                    (rule "add_zero_right" (formula "4") (term "0,2,1,0,1,0"))
                                    (rule "eqSymm" (formula "4") (term "1,0"))
                                    (rule "polySimp_elimSub" (formula "4") (term "1,1,0,1,1,0"))
                                    (rule "times_zero_2" (formula "4") (term "1,1,1,0,1,1,0"))
                                    (rule "add_zero_right" (formula "4") (term "1,1,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "4") (term "0,1,1,0,0"))
                                    (rule "add_zero_right" (formula "4") (term "0,0,1,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "3") (term "0,1"))
                                    (rule "add_zero_right" (formula "3") (term "0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "3") (term "0,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0,1,0"))
                                    (rule "eqSymm" (formula "4") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0,1,0"))
                                    (rule "eqSymm" (formula "4") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,1,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,1,1,0"))
                                    (rule "apply_eq_monomials" (formula "4") (term "1,0,0,1,0,0") (ifseqformula "3"))
                                    (rule "polySimp_rightDist" (formula "4") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "4") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "4") (term "1,1,1,0,0,1,0,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "4") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0,0,1"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0,0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,0,1,0"))
                                    (rule "eqSymm" (formula "4") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,1,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,1,1,0"))
                                    (rule "mul_literals" (formula "4") (term "0,1,1,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "0,0,1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0,1,0,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "4") (term "0,0,0,1,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,0,1,0"))
                                    (rule "eqSymm" (formula "4") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,1,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,1,1,0"))
                                    (rule "mul_literals" (formula "4") (term "0,1,1,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "4") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0"))
                                    (rule "array2seqDef" (formula "2") (term "1") (inst "u=u"))
                                    (rule "eqSymm" (formula "2"))
                                    (rule "eqSeqDef" (formula "18") (term "1,0") (inst "iv=iv"))
                                    (rule "getOfSeqDef" (formula "18") (term "0,1,0,1,1,0"))
                                    (rule "castDel" (formula "18") (term "2,0,1,0,1,1,0"))
                                    (rule "castDel" (formula "18") (term "1,0,1,0,1,1,0"))
                                    (rule "add_zero_right" (formula "18") (term "0,2,1,0,1,0,1,1,0"))
                                    (rule "eqSymm" (formula "18") (term "1,0,1,1,0"))
                                    (rule "polySimp_elimSub" (formula "18") (term "1,1,0,1,1,0,1,1,0"))
                                    (rule "times_zero_2" (formula "18") (term "1,1,1,0,1,1,0,1,1,0"))
                                    (rule "add_zero_right" (formula "18") (term "1,1,0,1,1,0,1,1,0"))
                                    (rule "lenOfSeqDef" (formula "18") (term "1,0,1,0"))
                                    (rule "polySimp_elimSub" (formula "18") (term "1,1,0,1,0"))
                                    (rule "times_zero_2" (formula "18") (term "1,1,1,0,1,0"))
                                    (rule "add_zero_right" (formula "18") (term "1,1,0,1,0"))
                                    (rule "lenOfSeqDef" (formula "18") (term "0,0,1,0"))
                                    (rule "polySimp_elimSub" (formula "18") (term "1,0,0,1,0"))
                                    (rule "times_zero_2" (formula "18") (term "1,1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "18") (term "1,0,0,1,0"))
                                    (rule "lenOfSeqDef" (formula "18") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_elimSub" (formula "18") (term "1,1,1,0,0,1,1,0"))
                                    (rule "times_zero_2" (formula "18") (term "1,1,1,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "18") (term "1,1,1,0,0,1,1,0"))
                                    (rule "getOfSeqDef" (formula "18") (term "0,1,0,1,1,0"))
                                    (rule "castDel" (formula "18") (term "1,0,1,0,1,1,0"))
                                    (rule "castDel" (formula "18") (term "2,0,1,0,1,1,0"))
                                    (rule "add_zero_right" (formula "18") (term "0,2,1,0,1,0,1,1,0"))
                                    (rule "eqSymm" (formula "18") (term "1,0,1,1,0"))
                                    (rule "polySimp_elimSub" (formula "18") (term "1,1,0,1,1,0,1,1,0"))
                                    (rule "times_zero_2" (formula "18") (term "1,1,1,0,1,1,0,1,1,0"))
                                    (rule "add_zero_right" (formula "18") (term "1,1,0,1,1,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1,0,1,0"))
                                    (rule "add_zero_right" (formula "18") (term "0,0,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "18") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "18") (term "0,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,1,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,1,0,1,1,0"))
                                    (rule "eqSymm" (formula "18") (term "1,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,1,1,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,1,0,1,1,0"))
                                    (rule "eqSymm" (formula "18") (term "1,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,1,1,0,1,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,1,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,1,0,1,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,1,1,0,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0,0,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0,0,1,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1,0,1,1,0"))
                                    (rule "eqSymm" (formula "18") (term "1,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,1,1,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,1,0,1,1,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,1,1,0,1,1,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,1,0,1,1,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,1,1,0,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,1,1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0,0,1,1,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0,0,1,1,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1,0,1,1,0"))
                                    (rule "eqSymm" (formula "18") (term "1,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,1,1,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,1,0,1,1,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,1,1,0,1,1,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,1,0,1,1,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,1,1,0,1,1,0"))
                                    (rule "equalityToSeqGetAndSeqLenRight" (formula "42") (inst "iv=iv"))
                                    (rule "getOfSeqDef" (formula "42") (term "1,1,0,1"))
                                    (rule "castDel" (formula "42") (term "2,1,1,0,1"))
                                    (rule "castDel" (formula "42") (term "1,1,1,0,1"))
                                    (rule "add_zero_right" (formula "42") (term "0,2,1,1,1,0,1"))
                                    (rule "polySimp_elimSub" (formula "42") (term "1,1,0,1,1,0,1"))
                                    (rule "times_zero_2" (formula "42") (term "1,1,1,0,1,1,0,1"))
                                    (rule "add_zero_right" (formula "42") (term "1,1,0,1,1,0,1"))
                                    (rule "lenOfSeqDef" (formula "42") (term "0,0"))
                                    (rule "eqSymm" (formula "42") (term "0"))
                                    (rule "polySimp_elimSub" (formula "42") (term "1,1,0"))
                                    (rule "mul_literals" (formula "42") (term "1,1,1,0"))
                                    (rule "add_zero_right" (formula "42") (term "1,1,0"))
                                    (rule "getOfSeqDef" (formula "42") (term "0,1,0,1"))
                                    (rule "castDel" (formula "42") (term "1,0,1,0,1"))
                                    (rule "castDel" (formula "42") (term "2,0,1,0,1"))
                                    (rule "add_zero_right" (formula "42") (term "0,2,1,0,1,0,1"))
                                    (rule "polySimp_elimSub" (formula "42") (term "1,1,0,0,1,0,1"))
                                    (rule "times_zero_2" (formula "42") (term "1,1,1,0,0,1,0,1"))
                                    (rule "add_zero_right" (formula "42") (term "1,1,0,0,1,0,1"))
                                    (rule "lenOfSeqDef" (formula "42") (term "1,1,0,0,1"))
                                    (rule "polySimp_elimSub" (formula "42") (term "1,1,1,0,0,1"))
                                    (rule "times_zero_2" (formula "42") (term "1,1,1,1,0,0,1"))
                                    (rule "add_zero_right" (formula "42") (term "1,1,1,0,0,1"))
                                    (rule "lenOfSeqDef" (formula "42") (term "0,0"))
                                    (rule "eqSymm" (formula "42") (term "0"))
                                    (rule "polySimp_elimSub" (formula "42") (term "1,1,0"))
                                    (rule "times_zero_2" (formula "42") (term "1,1,1,0"))
                                    (rule "add_zero_right" (formula "42") (term "1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,1,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,1,1,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,1,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "42") (term "0,1,1,0,0,1"))
                                    (rule "add_zero_right" (formula "42") (term "0,0,1,1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,1,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0"))
                                    (rule "add_zero_right" (formula "42") (term "0,0,0,0"))
                                    (rule "eqSymm" (formula "42") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,0"))
                                    (rule "add_zero_right" (formula "42") (term "0,0,0,0"))
                                    (rule "eqSymm" (formula "42") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,1,1,0,1"))
                                    (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,1,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,1,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,1,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "42") (term "1,1,0,1,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,1,1,0,1"))
                                    (rule "mul_literals" (formula "42") (term "0,1,1,0,1,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,1,1,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,1,0,1"))
                                    (rule "mul_literals" (formula "42") (term "0,1,1,0,0,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,1,0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "42") (term "0,0,1,0,0,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "0,0,0,1,0,0,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "42") (term "0,0,0,1,0,0,1,0,0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "42") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "0,0,0,0"))
                                    (rule "eqSymm" (formula "42") (term "0"))
                                    (rule "polySimp_elimOne" (formula "42") (term "0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,1"))
                                    (rule "mul_literals" (formula "42") (term "0,1,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "42") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "0,0,0,0"))
                                    (rule "eqSymm" (formula "42") (term "0"))
                                    (rule "polySimp_elimOne" (formula "42") (term "0,0,1,0"))
                                    (rule "eqSeqDef2" (formula "1") (inst "iv=iv") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "eqSeqDef2" (formula "16") (inst "iv=iv") (ifseqformula "16"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "true_left" (formula "16"))
                                    (rule "eqSeqDef" (formula "1") (inst "iv=iv"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "lenOfSeqDef" (formula "1") (term "0"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "polySimp_elimSub" (formula "1") (term "1,1"))
                                    (rule "mul_literals" (formula "1") (term "1,1,1"))
                                    (rule "add_zero_right" (formula "1") (term "1,1"))
                                    (rule "getOfSeqDef" (formula "2") (term "1,1,0"))
                                    (rule "castDel" (formula "2") (term "1,1,1,0"))
                                    (rule "castDel" (formula "2") (term "2,1,1,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,2,1,1,1,0"))
                                    (rule "polySimp_elimSub" (formula "2") (term "1,1,0,1,1,0"))
                                    (rule "times_zero_2" (formula "2") (term "1,1,1,0,1,1,0"))
                                    (rule "add_zero_right" (formula "2") (term "1,1,0,1,1,0"))
                                    (rule "lenOfSeqDef" (formula "2") (term "1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "2") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "2") (term "1,1,1,1,0,0"))
                                    (rule "add_zero_right" (formula "2") (term "1,1,1,0,0"))
                                    (rule "getOfSeqDef" (formula "2") (term "0,1,0"))
                                    (rule "castDel" (formula "2") (term "1,0,1,0"))
                                    (rule "castDel" (formula "2") (term "2,0,1,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,2,1,0,1,0"))
                                    (rule "polySimp_elimSub" (formula "2") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_2" (formula "2") (term "1,1,1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "2") (term "1,1,0,0,1,0"))
                                    (rule "lenOfSeqDef" (formula "1") (term "0"))
                                    (rule "polySimp_elimSub" (formula "1") (term "1,0"))
                                    (rule "times_zero_2" (formula "1") (term "1,1,0"))
                                    (rule "add_zero_right" (formula "1") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,1,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0,1,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,1,1,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,1,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0,1,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,1,0,1,1,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,1,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,0,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0,1,0"))
                                    (rule "eqSymm" (formula "1") (term "1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                    (rule "pullOutSelect" (formula "2") (term "0,1,0") (inst "selectSK=arr_141"))
                                    (rule "applyEq" (formula "4") (term "1,1,0,1,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "4") (term "0,1,1,1,0,0,1,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "3") (term "0,0,0,0") (ifseqformula "2"))
                                    (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "26"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "37")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0") (ifseqformula "21"))
                                    (rule "eqSymm" (formula "4") (term "1,0"))
                                    (rule "eqSymm" (formula "3"))
                                    (rule "replace_known_right" (formula "2") (term "1,0,0,0") (ifseqformula "36"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "35")))
                                    (rule "applyEqReverse" (formula "3") (term "0,1,1") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "4") (term "0,1,1,1,0,1,1,0") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "0,0,0,1") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "4") (term "1,1,1,1,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "eqSymm" (formula "2"))
                                    (rule "eqSymm" (formula "3") (term "1,0"))
                                    (rule "eqSeqDef2" (formula "23") (inst "iv=iv") (ifseqformula "23"))
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "true_left" (formula "23"))
                                    (rule "pullOutSelect" (formula "39") (term "1,1,0,1,0,1") (inst "selectSK=arr_142"))
                                    (rule "applyEq" (formula "40") (term "0,1,1,1,0,0,1,0,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "40") (term "0,1,1,1,1,0,0,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "40") (term "0,0,0,1,1,1,0,0,1") (ifseqformula "1"))
                                    (rule "applyEq" (formula "40") (term "0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "40") (term "0,0,0,0,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "21"))
                                    (rule "eqSymm" (formula "40") (term "1,0,1"))
                                    (rule "eqSymm" (formula "40") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "15"))
                                    (rule "mul_literals" (formula "16") (term "0,0"))
                                    (rule "add_zero_left" (formula "16") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                    (rule "mul_literals" (formula "16") (term "1"))
                                    (rule "pullOutSelect" (formula "1") (term "1,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_16"))
                                    (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "23"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "11"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")) (ifInst ""  (formula "11")))
                                    (rule "applyEqReverse" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,0,0,0,1,0,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_143"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "nnf_imp2or" (formula "31") (term "0"))
                                    (rule "nnf_imp2or" (formula "21") (term "0"))
                                    (rule "nnf_imp2or" (formula "19") (term "0"))
                                    (rule "nnf_imp2or" (formula "3") (term "0"))
                                    (rule "nnf_imp2or" (formula "5") (term "0"))
                                    (rule "nnf_imp2or" (formula "42") (term "0,1"))
                                    (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
                                    (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "31") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                                    (rule "mul_literals" (formula "31") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "21") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "21") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "21") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                    (rule "mul_literals" (formula "21") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                    (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "3") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "3") (term "0,0,0"))
                                    (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,0"))
                                    (rule "mul_literals" (formula "3") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "3") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "5") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "5") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "5") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "5") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "5") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "5") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0"))
                                    (rule "mul_literals" (formula "5") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "42") (term "0,0,1"))
                                    (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,1"))
                                    (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,1"))
                                    (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,1"))
                                    (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,1"))
                                    (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0,1"))
                                    (rule "mul_literals" (formula "42") (term "1,0,0,0,0,0,1"))
                                    (rule "add_zero_right" (formula "42") (term "0,0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,1"))
                                    (rule "mul_literals" (formula "42") (term "1,0,0,0,1"))
                                    (rule "nnf_imp2or" (formula "19") (term "0,1,1,0"))
                                    (rule "arrayLengthIsAShort" (formula "9") (term "0"))
                                    (builtin "One Step Simplification" (formula "9"))
                                    (rule "true_left" (formula "9"))
                                    (rule "arrayLengthNotNegative" (formula "9") (term "0"))
                                    (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                    (rule "mul_literals" (formula "9") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "8"))
                                    (rule "leq_literals" (formula "9") (term "0"))
                                    (builtin "One Step Simplification" (formula "9"))
                                    (rule "true_left" (formula "9"))
                                    (rule "arrayLengthIsAShort" (formula "7") (term "0"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "true_left" (formula "7"))
                                    (rule "arrayLengthNotNegative" (formula "7") (term "0"))
                                    (rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
                                    (rule "lenNonNegative" (formula "35") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "1"))
                                    (rule "arrayLengthIsAShort" (formula "17") (term "1,1"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "arrayLengthNotNegative" (formula "17") (term "1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "19"))
                                    (rule "leq_literals" (formula "17") (term "0"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "nnf_notAnd" (formula "20") (term "0,0,1,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,1,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "20") (term "0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "20") (term "0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "20") (term "1,0,0,0,1,1,0"))
                                    (rule "arrayLengthIsAShort" (formula "7") (term "0"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "true_left" (formula "7"))
                                    (rule "arrayLengthNotNegative" (formula "7") (term "0"))
                                    (rule "equalityToSeqGetAndSeqLenLeft" (formula "31") (inst "iv=iv"))
                                    (rule "andLeft" (formula "31"))
                                    (rule "lenOfSeqConcat" (formula "32") (term "1,1,0,0"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "polySimp_addComm0" (formula "32") (term "1,1,0,0"))
                                    (rule "lenOfSeqConcat" (formula "31") (term "0"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "polySimp_homoEq" (formula "31"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                    (rule "polySimp_addComm0" (formula "31") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                    (rule "mul_literals" (formula "31") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                    (rule "polySimp_addComm0" (formula "31") (term "0,0"))
                                    (rule "lenOfSeqConcatEQ" (formula "31") (term "1,0,0") (ifseqformula "33"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "polySimp_addComm0" (formula "31") (term "1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                    (rule "add_literals" (formula "31") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "31") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "31") (term "0"))
                                    (rule "add_literals" (formula "31") (term "1,0"))
                                    (rule "times_zero_1" (formula "31") (term "0"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "true_left" (formula "31"))
                                    (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                                    (rule "getOfSeqConcat" (formula "31") (term "0,1,0"))
                                    (rule "polySimp_elimSub" (formula "31") (term "1,2,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "31") (term "1,2,0,1,0"))
                                    (rule "getOfSeqSingleton" (formula "31") (term "2,0,1,0"))
                                    (rule "castDel" (formula "31") (term "2,2,0,1,0"))
                                    (rule "castDel" (formula "31") (term "1,2,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,1,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "31") (term "0,2,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "1,0,2,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "31") (term "1,0,2,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,1,0"))
                                    (rule "getOfSeqConcatEQ" (formula "31") (term "1,1,0") (ifseqformula "32"))
                                    (rule "eqSymm" (formula "31") (term "1,0"))
                                    (rule "polySimp_elimSub" (formula "31") (term "1,2,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "31") (term "1,2,0,1,0"))
                                    (rule "getOfSeqSingleton" (formula "31") (term "2,0,1,0"))
                                    (rule "castDel" (formula "31") (term "1,2,0,1,0"))
                                    (rule "castDel" (formula "31") (term "2,2,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,1,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "31") (term "0,2,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "1,0,2,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "31") (term "1,0,2,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,1,0"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "true_left" (formula "31"))
                                    (rule "arrayLengthIsAShort" (formula "31") (term "1,0,1,0"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "true_left" (formula "31"))
                                    (rule "arrayLengthNotNegative" (formula "31") (term "1,0,1,0"))
                                    (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "22") (ifseqformula "14"))
                                    (rule "andLeft" (formula "22"))
                                    (rule "notLeft" (formula "23"))
                                    (rule "andLeft" (formula "22"))
                                    (rule "notLeft" (formula "23"))
                                    (rule "andLeft" (formula "22"))
                                    (rule "notLeft" (formula "23"))
                                    (rule "andLeft" (formula "22"))
                                    (rule "notLeft" (formula "23"))
                                    (rule "andLeft" (formula "22"))
                                    (rule "andLeft" (formula "22"))
                                    (rule "andLeft" (formula "22"))
                                    (rule "andLeft" (formula "22"))
                                    (rule "notLeft" (formula "22"))
                                    (rule "nonNull" (formula "25") (inst "i=i"))
                                    (rule "sub_literals" (formula "25") (term "2,1,0,1,1"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "greater_literals" (formula "25") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "andLeft" (formula "25"))
                                    (rule "notLeft" (formula "25"))
                                    (rule "narrowSelectArrayType" (formula "25") (term "0,0,1,0") (ifseqformula "12") (ifseqformula "39"))
                                    (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "24") (inst "i=i"))
                                    (rule "greater_literals" (formula "24") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "sub_literals" (formula "24") (term "2,1,0,1"))
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "andLeft" (formula "24"))
                                    (rule "notLeft" (formula "24"))
                                    (rule "narrowSelectArrayType" (formula "24") (term "0,0,1,0") (ifseqformula "12") (ifseqformula "39"))
                                    (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "23") (inst "i=i"))
                                    (rule "greater_literals" (formula "23") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "sub_literals" (formula "23") (term "2,1,0,1"))
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "notLeft" (formula "23"))
                                    (rule "narrowSelectArrayType" (formula "23") (term "0,0,1,0") (ifseqformula "12") (ifseqformula "39"))
                                    (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "22") (inst "i=i"))
                                    (rule "sub_literals" (formula "22") (term "2,1,0,1,1"))
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "greater_literals" (formula "22") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "andLeft" (formula "22"))
                                    (rule "notLeft" (formula "22"))
                                    (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "39"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "39"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "ifthenelse_negated" (formula "2") (term "0"))
                                    (rule "ifthenelse_negated" (formula "3") (term "0"))
                                    (rule "narrowSelectArrayType" (formula "22") (term "0,0,1,0") (ifseqformula "12") (ifseqformula "39"))
                                    (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                                    (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "36") (ifseqformula "14"))
                                    (rule "replaceKnownSelect_taclet010000000000_3" (formula "36") (term "1,1,0,0,0,0,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet010000000000_5" (formula "36") (term "1,1,0,0,0,0,0,0,0"))
                                    (rule "andLeft" (formula "36"))
                                    (rule "notLeft" (formula "37"))
                                    (rule "andLeft" (formula "36"))
                                    (rule "andLeft" (formula "36"))
                                    (rule "notLeft" (formula "38"))
                                    (rule "notLeft" (formula "37"))
                                    (rule "andLeft" (formula "36"))
                                    (rule "notLeft" (formula "37"))
                                    (rule "andLeft" (formula "36"))
                                    (rule "andLeft" (formula "36"))
                                    (rule "andLeft" (formula "36"))
                                    (rule "andLeft" (formula "36"))
                                    (rule "notLeft" (formula "36"))
                                    (rule "nonNull" (formula "39") (inst "i=i"))
                                    (rule "greater_literals" (formula "39") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "sub_literals" (formula "39") (term "2,1,0,1"))
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "notLeft" (formula "39"))
                                    (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "38") (inst "i=i"))
                                    (rule "sub_literals" (formula "38") (term "2,1,0,1,1"))
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "greater_literals" (formula "38") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "andLeft" (formula "38"))
                                    (rule "notLeft" (formula "38"))
                                    (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "38") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "37") (inst "i=i"))
                                    (rule "sub_literals" (formula "37") (term "2,1,0,1,1"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "greater_literals" (formula "37") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "notLeft" (formula "37"))
                                    (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "36") (inst "i=i"))
                                    (rule "greater_literals" (formula "36") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "50")))
                                    (rule "sub_literals" (formula "36") (term "2,1,0"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0"))
                                    (rule "pullOutSelect" (formula "49") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_14"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "29"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "14"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")) (ifInst ""  (formula "14")))
                                    (rule "applyEqReverse" (formula "50") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_14"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "29"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "14"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")) (ifInst ""  (formula "14")))
                                    (rule "applyEqReverse" (formula "49") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_14"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "29"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "14"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")) (ifInst ""  (formula "14")))
                                    (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_14"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "63")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "29"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "14"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "63")) (ifInst ""  (formula "14")))
                                    (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_14"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "62")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "29"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "14"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "62")) (ifInst ""  (formula "14")))
                                    (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "39") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_14"))
                                    (rule "applyEq" (formula "45") (term "0") (ifseqformula "39"))
                                    (rule "applyEq" (formula "40") (term "0,1,1,1,0,0") (ifseqformula "39"))
                                    (rule "simplifySelectOfAnonEQ" (formula "39") (ifseqformula "32"))
                                    (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "61")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "0,0,0") (ifseqformula "28"))
                                    (rule "replace_known_left" (formula "39") (term "0,0,0,0") (ifseqformula "13"))
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "simplifySelectOfAnonEQ" (formula "39") (ifseqformula "28"))
                                    (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "61")) (ifInst ""  (formula "13")))
                                    (rule "applyEqReverse" (formula "40") (term "0,1,1,1,0,0") (ifseqformula "39"))
                                    (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "39"))
                                    (rule "applyEqReverse" (formula "40") (term "1,0,0,1,0") (ifseqformula "39"))
                                    (rule "hideAuxiliaryEq" (formula "39"))
                                    (rule "pullOutSelect" (formula "38") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_14"))
                                    (rule "applyEq" (formula "44") (term "0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "39") (term "0,1,1,1,0,0") (ifseqformula "38"))
                                    (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "32"))
                                    (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "60")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "0,0,0") (ifseqformula "28"))
                                    (rule "replace_known_left" (formula "38") (term "0,0,0,0") (ifseqformula "13"))
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "28"))
                                    (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "60")) (ifInst ""  (formula "13")))
                                    (rule "applyEqReverse" (formula "39") (term "0,1,1,1,0,0") (ifseqformula "38"))
                                    (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "38"))
                                    (rule "applyEqReverse" (formula "39") (term "1,0,0,1,0") (ifseqformula "38"))
                                    (rule "hideAuxiliaryEq" (formula "38"))
                                    (rule "pullOutSelect" (formula "37") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_14"))
                                    (rule "applyEq" (formula "38") (term "0,1,1,1,0,0") (ifseqformula "37"))
                                    (rule "applyEq" (formula "43") (term "0") (ifseqformula "37"))
                                    (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "32"))
                                    (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "59")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,0,0") (ifseqformula "28"))
                                    (rule "replace_known_left" (formula "37") (term "0,0,0,0") (ifseqformula "13"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "28"))
                                    (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "59")) (ifInst ""  (formula "13")))
                                    (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "37"))
                                    (rule "applyEqReverse" (formula "38") (term "0,1,1,1,0,0") (ifseqformula "37"))
                                    (rule "applyEqReverse" (formula "38") (term "1,0,0,1,0") (ifseqformula "37"))
                                    (rule "hideAuxiliaryEq" (formula "37"))
                                    (rule "nnf_imp2or" (formula "25") (term "0"))
                                    (rule "nnf_imp2or" (formula "24") (term "0"))
                                    (rule "commute_or_2" (formula "40") (term "0"))
                                    (rule "nnf_imp2or" (formula "23") (term "0"))
                                    (rule "commute_or_2" (formula "26") (term "0"))
                                    (rule "nnf_imp2or" (formula "22") (term "0"))
                                    (rule "commute_or_2" (formula "4") (term "0"))
                                    (rule "commute_or_2" (formula "6") (term "0"))
                                    (rule "nnf_imp2or" (formula "36") (term "0"))
                                    (rule "ifthenelse_to_or_left" (formula "21") (term "0,1,0"))
                                    (rule "eqSymm" (formula "21") (term "1,1,0,1,0"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "eqSymm" (formula "21") (term "1,0,0,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "21") (term "0,1,1,0,1,0"))
                                    (rule "mul_literals" (formula "21") (term "1,0,0,0,1,1,0,1,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,1,1,0,1,0"))
                                    (rule "add_zero_left" (formula "21") (term "0,0,1,1,0,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0,1,0"))
                                    (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0,1,0"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "21") (term "0,0,0,0,1,0"))
                                    (rule "nnf_imp2or" (formula "39") (term "0"))
                                    (rule "ifthenelse_split" (formula "5") (term "1"))
                                    (branch "result_0.length ≥ 1 TRUE"
                                       (rule "replace_known_left" (formula "7") (term "0,1,1,0") (ifseqformula "5"))
                                       (builtin "One Step Simplification" (formula "7"))
                                       (rule "replace_known_left" (formula "4") (term "0,1,1,0") (ifseqformula "5"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "inEqSimp_subsumption1" (formula "35") (ifseqformula "5"))
                                       (rule "leq_literals" (formula "35") (term "0"))
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "true_left" (formula "35"))
                                       (rule "nnf_imp2or" (formula "38") (term "0"))
                                       (rule "nnf_imp2or" (formula "37") (term "0"))
                                       (rule "ifthenelse_split" (formula "6") (term "0"))
                                       (branch " result_1[i_5]@anon_heap_addEntry«anonHeapFunction».length ≥ 1 TRUE"
                                          (rule "applyEq" (formula "6") (term "0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "7") (term "1,1,1,0,0,1,0,0") (ifseqformula "6"))
                                          (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                          (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                                          (rule "mul_literals" (formula "25") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "25") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                          (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "24") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                                          (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                                          (rule "ifthenelse_split" (formula "60") (term "0,0"))
                                          (branch "self.sorted[i_5].length ≥ 1 TRUE"
                                             (rule "eqSymm" (formula "61") (term "0"))
                                             (rule "nnf_notAnd" (formula "24") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                                             (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0"))
                                             (rule "mul_literals" (formula "37") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "37") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0"))
                                             (rule "mul_literals" (formula "37") (term "1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "37") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "37") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "40") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "40") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "40") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "40") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0"))
                                             (rule "mul_literals" (formula "40") (term "1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "40") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "40") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "39") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
                                             (rule "mul_literals" (formula "39") (term "1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "39") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "39") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "38") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "38") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                                             (rule "mul_literals" (formula "38") (term "1,0,0,0"))
                                             (rule "arrayLengthNotNegative" (formula "61") (term "1,1,1,0,1,1,0,1"))
                                             (rule "arrayLengthIsAShort" (formula "62") (term "1,1,1,0,1,1,0,1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "arrayLengthIsAShort" (formula "62") (term "1,1,1,0,0,1,0,1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "arrayLengthNotNegative" (formula "62") (term "1,1,1,0,0,1,0,1"))
                                             (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "3"))
                                             (rule "leq_literals" (formula "1") (term "0"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "1,0,0") (ifseqformula "15"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "45"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "6") (term "1,0") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "applyEqReverse" (formula "62") (term "1,1,1,1,0,1") (ifseqformula "5"))
                                             (rule "applyEqReverse" (formula "62") (term "0,0,0,0,0") (ifseqformula "5"))
                                             (rule "applyEqReverse" (formula "62") (term "0,1,1,1,0,0,1") (ifseqformula "5"))
                                             (rule "applyEqReverse" (formula "62") (term "0,1,0,0") (ifseqformula "5"))
                                             (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "3")))
                                             (rule "allRight" (formula "62") (inst "sk=iv_20"))
                                             (rule "orRight" (formula "62"))
                                             (rule "orRight" (formula "62"))
                                             (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "5"))
                                             (rule "applyEqReverse" (formula "64") (term "0,1,1,1,0,1") (ifseqformula "5"))
                                             (rule "applyEqReverse" (formula "63") (term "0,0,0,1") (ifseqformula "5"))
                                             (rule "hideAuxiliaryEq" (formula "5"))
                                             (rule "eqSymm" (formula "63"))
                                             (rule "replace_known_left" (formula "62") (term "0,1") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "62"))
                                             (rule "inEqSimp_leqRight" (formula "61"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "replace_known_left" (formula "63") (term "0,0,1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "1")))
                                             (rule "inEqSimp_geqRight" (formula "62"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_homoInEq0" (formula "63") (term "0,1"))
                                             (rule "polySimp_addComm1" (formula "63") (term "0,0,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "63") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "63") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "63") (term "1,0,1"))
                                             (rule "polySimp_rightDist" (formula "63") (term "1,0,1"))
                                             (rule "mul_literals" (formula "63") (term "0,1,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,1"))
                                             (rule "polySimp_elimOne" (formula "63") (term "1,1,0,1"))
                                             (rule "replace_known_left" (formula "63") (term "0,1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "63"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "63") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "63") (term "1,0,0"))
                                             (rule "mul_literals" (formula "63") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0"))
                                             (rule "replace_known_left" (formula "63") (term "0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "63"))
                                             (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "5"))
                                             (rule "leq_literals" (formula "4") (term "0"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "true_left" (formula "4"))
                                             (rule "pullOutSelect" (formula "62") (term "0") (inst "selectSK=arr_148"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "32"))
                                             (rule "eqSymm" (formula "63"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_149"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "commute_or" (formula "44") (term "0,0"))
                                             (rule "commute_or" (formula "31") (term "0,0"))
                                             (rule "commute_or" (formula "8") (term "0,0"))
                                             (rule "commute_or_2" (formula "30") (term "0"))
                                             (rule "commute_or" (formula "11") (term "0,0"))
                                             (rule "commute_or_2" (formula "29") (term "0"))
                                             (rule "commute_or_2" (formula "26") (term "0,1,1,0"))
                                             (rule "commute_or" (formula "26") (term "1,0,1,0"))
                                             (rule "commute_or_2" (formula "28") (term "0"))
                                             (rule "commute_or_2" (formula "27") (term "0"))
                                             (rule "commute_or_2" (formula "40") (term "0"))
                                             (rule "commute_or_2" (formula "43") (term "0"))
                                             (rule "commute_or_2" (formula "42") (term "0"))
                                             (rule "commute_or_2" (formula "41") (term "0"))
                                             (rule "ifthenelse_to_or_left" (formula "26") (term "1,0,0,1,0"))
                                             (rule "eqSymm" (formula "26") (term "1,1,1,0,0,1,0"))
                                             (rule "eqSymm" (formula "26") (term "1,0,1,0,0,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "26") (term "0,0,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "26") (term "1,0,0,0,0,1,0,0,1,0"))
                                             (rule "add_literals" (formula "26") (term "0,0,0,0,1,0,0,1,0"))
                                             (rule "add_zero_left" (formula "26") (term "0,0,0,1,0,0,1,0"))
                                             (rule "commute_or" (formula "30") (term "0,0"))
                                             (rule "commute_or" (formula "29") (term "0,0"))
                                             (rule "commute_or" (formula "28") (term "0,0"))
                                             (rule "commute_or" (formula "27") (term "0,0"))
                                             (rule "commute_or" (formula "40") (term "0,0"))
                                             (rule "commute_or" (formula "43") (term "0,0"))
                                             (rule "commute_or" (formula "42") (term "0,0"))
                                             (rule "commute_or" (formula "41") (term "0,0"))
                                             (rule "commute_or" (formula "26") (term "0,0,1,1,0"))
                                             (rule "arrayLengthNotNegative" (formula "10") (term "0"))
                                             (rule "applyEq" (formula "10") (term "0") (ifseqformula "11"))
                                             (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "9"))
                                             (rule "leq_literals" (formula "10") (term "0"))
                                             (builtin "One Step Simplification" (formula "10"))
                                             (rule "true_left" (formula "10"))
                                             (rule "arrayLengthIsAShort" (formula "10") (term "0"))
                                             (builtin "One Step Simplification" (formula "10"))
                                             (rule "true_left" (formula "10"))
                                             (rule "cnf_rightDist" (formula "26") (term "0,0,1,0"))
                                             (rule "inEqSimp_or_subsumption5" (formula "26") (term "1,0,0,1,0"))
                                             (rule "greater_literals" (formula "26") (term "0,1,0,1,0,0,1,0"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "shift_paren_or" (formula "26") (term "0,0,0,1,0"))
                                             (rule "ifthenelse_to_or_left" (formula "8") (term "0,0,0"))
                                             (rule "eqSymm" (formula "8") (term "1,0,0,0,0"))
                                             (rule "eqSymm" (formula "8") (term "1,1,0,0,0"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "nnf_notAnd" (formula "8") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0,0,0,0"))
                                             (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "8") (term "0,0,0,1,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "8") (term "0,0,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0,0,0"))
                                             (rule "nnf_notAnd" (formula "8") (term "0,1,1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "8") (term "1,0,1,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,1,1,0,0,0"))
                                             (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,1,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,1,1,0,0,0"))
                                             (rule "add_literals" (formula "8") (term "0,0,0,1,0,1,1,0,0,0"))
                                             (rule "add_zero_left" (formula "8") (term "0,0,1,0,1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,1,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "8") (term "1,1,0,1,1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "8") (term "0,0,1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,1,1,0,0,0"))
                                             (rule "add_literals" (formula "8") (term "0,0,0,0,1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,1,1,0,0,0"))
                                             (rule "mul_literals" (formula "8") (term "1,0,0,1,1,0,0,0"))
                                             (rule "commute_or" (formula "8") (term "0,0"))
                                             (rule "commute_or_2" (formula "8") (term "0"))
                                             (rule "commute_or" (formula "8") (term "1,1,0"))
                                             (rule "commute_or_2" (formula "8") (term "0,1,0"))
                                             (rule "commute_or_2" (formula "8") (term "0,1,1,0"))
                                             (rule "commute_or" (formula "8") (term "0,0,1,0"))
                                             (rule "commute_or" (formula "26") (term "0,0,0,0,1,0"))
                                             (rule "ifthenelse_to_or_left" (formula "11") (term "0,0,0"))
                                             (rule "eqSymm" (formula "11") (term "1,0,0,0,0"))
                                             (rule "eqSymm" (formula "11") (term "1,1,0,0,0"))
                                             (builtin "One Step Simplification" (formula "11"))
                                             (rule "nnf_notAnd" (formula "11") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "11") (term "0,0,0,1,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "11") (term "0,0,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0,0,0,0"))
                                             (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "11") (term "0,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0,0"))
                                             (rule "nnf_notAnd" (formula "11") (term "0,1,1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "11") (term "0,0,1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,1,1,0,0,0"))
                                             (rule "add_literals" (formula "11") (term "0,0,0,0,1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,1,1,0,0,0"))
                                             (rule "mul_literals" (formula "11") (term "1,0,0,1,1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "11") (term "1,0,1,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,1,1,0,0,0"))
                                             (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,1,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,1,1,0,0,0"))
                                             (rule "add_literals" (formula "11") (term "0,0,0,1,0,1,1,0,0,0"))
                                             (rule "add_zero_left" (formula "11") (term "0,0,1,0,1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,1,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "11") (term "1,1,0,1,1,0,0,0"))
                                             (rule "commute_or" (formula "11") (term "0,0"))
                                             (rule "commute_or_2" (formula "11") (term "0"))
                                             (rule "commute_or_2" (formula "11") (term "0,1,0"))
                                             (rule "commute_or" (formula "11") (term "1,1,0"))
                                             (rule "commute_or" (formula "8") (term "0,0,1,1,0"))
                                             (rule "commute_or" (formula "11") (term "0,0,1,0"))
                                             (rule "commute_or_2" (formula "11") (term "0,1,1,0"))
                                             (rule "commute_or" (formula "11") (term "0,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "8") (term "1,1,0"))
                                             (rule "commute_or_2" (formula "8") (term "0,1,1,0"))
                                             (rule "inEqSimp_or_tautInEq1" (formula "8") (term "0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "8") (term "1,1,0,0,1,1,0"))
                                             (rule "qeq_literals" (formula "8") (term "1,0,0,1,1,0"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "shift_paren_or" (formula "8") (term "1,1,0"))
                                             (rule "commute_or" (formula "8") (term "0,1,1,0"))
                                             (rule "inEqSimp_or_tautInEq1" (formula "8") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "8") (term "1,1,1,0"))
                                             (rule "polySimp_pullOutFactor1" (formula "8") (term "0,1,1,1,0"))
                                             (rule "add_literals" (formula "8") (term "1,0,1,1,1,0"))
                                             (rule "times_zero_1" (formula "8") (term "0,1,1,1,0"))
                                             (rule "leq_literals" (formula "8") (term "1,1,1,0"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "shift_paren_or" (formula "8") (term "0"))
                                             (rule "commute_or_2" (formula "8") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "shift_paren_or" (formula "8") (term "0,0"))
                                             (rule "commute_or" (formula "8") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "cnf_rightDist" (formula "11") (term "1,1,0"))
                                             (rule "commute_or_2" (formula "11") (term "0,1,1,0"))
                                             (rule "inEqSimp_or_tautInEq1" (formula "11") (term "0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "11") (term "1,1,0,0,1,1,0"))
                                             (rule "qeq_literals" (formula "11") (term "1,0,0,1,1,0"))
                                             (builtin "One Step Simplification" (formula "11"))
                                             (rule "shift_paren_or" (formula "11") (term "1,1,0"))
                                             (rule "commute_or" (formula "11") (term "0,1,1,0"))
                                             (rule "inEqSimp_or_tautInEq1" (formula "11") (term "1,1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "11") (term "1,1,1,0"))
                                             (rule "polySimp_pullOutFactor1" (formula "11") (term "0,1,1,1,0"))
                                             (rule "add_literals" (formula "11") (term "1,0,1,1,1,0"))
                                             (rule "times_zero_1" (formula "11") (term "0,1,1,1,0"))
                                             (rule "leq_literals" (formula "11") (term "1,1,1,0"))
                                             (builtin "One Step Simplification" (formula "11"))
                                             (rule "shift_paren_or" (formula "11") (term "0"))
                                             (rule "commute_or_2" (formula "11") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "11"))
                                             (rule "shift_paren_or" (formula "11") (term "0,0"))
                                             (rule "commute_or" (formula "11") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "11"))
                                             (rule "ifthenelse_to_or_left" (formula "26") (term "0,0,0,1,1,0"))
                                             (rule "eqSymm" (formula "26") (term "1,0,0,0,0,1,1,0"))
                                             (rule "eqSymm" (formula "26") (term "1,1,0,0,0,1,1,0"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "nnf_notAnd" (formula "26") (term "0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "26") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "26") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "26") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "26") (term "1,0,0,0,0,0,0,1,1,0"))
                                             (rule "nnf_notAnd" (formula "26") (term "0,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "26") (term "1,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "26") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "26") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "26") (term "0,0,1,1,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "26") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,1,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "26") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch " ¬self.sorted[i_5] = null ∧ ¬self.sorted[i_5].<created> = TRUE TRUE"
                                                (rule "andLeft" (formula "1"))
                                                (rule "notLeft" (formula "2"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "referencedObjectIsCreatedRight" (formula "47") (ifseqformula "46"))
                                                (rule "close" (formula "47") (ifseqformula "17"))
                                             )
                                             (branch " ¬self.sorted[i_5] = null ∧ ¬self.sorted[i_5].<created> = TRUE FALSE"
                                                (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "commute_or" (formula "25") (term "0,0,1,1,0"))
                                                (rule "commute_or_2" (formula "25") (term "0,1,1,0"))
                                                (rule "ifthenelse_to_or_left" (formula "7") (term "0,0,0"))
                                                (rule "eqSymm" (formula "7") (term "1,0,0,0,0"))
                                                (rule "eqSymm" (formula "7") (term "1,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "7") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "7") (term "0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "7") (term "0,0,0,1,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "7") (term "0,0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0,0,0"))
                                                (rule "commute_or" (formula "7") (term "0,0"))
                                                (rule "commute_or_2" (formula "7") (term "0"))
                                                (rule "commute_or_2" (formula "7") (term "0,1,0"))
                                                (rule "commute_or" (formula "7") (term "1,1,0"))
                                                (rule "commute_or" (formula "7") (term "0,0,1,0"))
                                                (rule "commute_or_2" (formula "25") (term "0,1,0,1,1,0"))
                                                (rule "commute_or" (formula "25") (term "1,1,0,1,1,0"))
                                                (rule "ifthenelse_to_or_left" (formula "10") (term "0,0,0"))
                                                (rule "eqSymm" (formula "10") (term "1,1,0,0,0"))
                                                (rule "eqSymm" (formula "10") (term "1,0,0,0,0"))
                                                (rule "nnf_notAnd" (formula "10") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "10") (term "0,0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,0,0"))
                                                (rule "commute_or" (formula "10") (term "0,0"))
                                                (rule "commute_or_2" (formula "10") (term "0"))
                                                (rule "commute_or" (formula "10") (term "1,1,0"))
                                                (rule "commute_or_2" (formula "10") (term "0,1,0"))
                                                (rule "commute_or" (formula "10") (term "0,0,1,0"))
                                                (rule "cnf_rightDist" (formula "7") (term "1,1,0"))
                                                (rule "cnf_rightDist" (formula "7") (term "0"))
                                                (rule "distr_forallAnd" (formula "7"))
                                                (rule "andLeft" (formula "7"))
                                                (rule "commute_or" (formula "8") (term "0"))
                                                (rule "shift_paren_or" (formula "7") (term "0"))
                                                (rule "commute_or_2" (formula "7") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "commute_or" (formula "8") (term "1,1,0"))
                                                (rule "shift_paren_or" (formula "7") (term "0,0"))
                                                (rule "commute_or" (formula "7") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "7"))
                                                (rule "cnf_rightDist" (formula "8") (term "0"))
                                                (rule "distr_forallAnd" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "commute_or_2" (formula "8") (term "0"))
                                                (rule "shift_paren_or" (formula "9") (term "0"))
                                                (rule "commute_or_2" (formula "9") (term "0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "9") (term "0"))
                                                (rule "inEqSimp_homoInEq1" (formula "9") (term "1,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "9") (term "0,1,0"))
                                                (rule "add_literals" (formula "9") (term "1,0,1,0"))
                                                (rule "times_zero_1" (formula "9") (term "0,1,0"))
                                                (rule "leq_literals" (formula "9") (term "1,0"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "true_left" (formula "9"))
                                                (rule "shift_paren_or" (formula "8") (term "0,0"))
                                                (rule "commute_or" (formula "8") (term "0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "8") (term "0,0"))
                                                (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                (rule "qeq_literals" (formula "8") (term "1,0,0"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "true_left" (formula "8"))
                                                (rule "arrayLengthIsAShort" (formula "29") (term "1,1,0"))
                                                (builtin "One Step Simplification" (formula "29"))
                                                (rule "true_left" (formula "29"))
                                                (rule "arrayLengthNotNegative" (formula "29") (term "1,1,0"))
                                                (rule "arrayLengthIsAShort" (formula "28") (term "1,1,0"))
                                                (builtin "One Step Simplification" (formula "28"))
                                                (rule "true_left" (formula "28"))
                                                (rule "arrayLengthNotNegative" (formula "28") (term "1,1,0"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "16"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "17"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "18"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "19"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "20"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "21"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "arrayLengthNotNegative" (formula "33") (term "1,1,0"))
                                                (rule "arrayLengthIsAShort" (formula "34") (term "1,1,0"))
                                                (builtin "One Step Simplification" (formula "34"))
                                                (rule "true_left" (formula "34"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "22"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "23"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "cnf_rightDist" (formula "18") (term "1,1,0"))
                                                (rule "commute_or" (formula "33") (term "0,0,1,0,1,1,0"))
                                                (rule "commute_or_2" (formula "33") (term "0,1,1,0,1,1,0"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "17") (term "0,0") (ifseqformula "46"))
                                                (rule "cnf_rightDist" (formula "19") (term "0"))
                                                (rule "distr_forallAnd" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "commute_or" (formula "20") (term "0"))
                                                (rule "shift_paren_or" (formula "19") (term "0"))
                                                (rule "commute_or_2" (formula "19") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "19"))
                                                (rule "commute_or" (formula "20") (term "1,1,0"))
                                                (rule "shift_paren_or" (formula "19") (term "0,0"))
                                                (rule "commute_or" (formula "19") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "19"))
                                                (rule "cnf_rightDist" (formula "20") (term "0"))
                                                (rule "distr_forallAnd" (formula "20"))
                                                (rule "andLeft" (formula "20"))
                                                (rule "commute_or_2" (formula "20") (term "0"))
                                                (rule "shift_paren_or" (formula "21") (term "0"))
                                                (rule "commute_or_2" (formula "21") (term "0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "21") (term "0"))
                                                (rule "inEqSimp_homoInEq1" (formula "21") (term "1,0"))
                                                (rule "polySimp_pullOutFactor1" (formula "21") (term "0,1,0"))
                                                (rule "add_literals" (formula "21") (term "1,0,1,0"))
                                                (rule "times_zero_1" (formula "21") (term "0,1,0"))
                                                (rule "leq_literals" (formula "21") (term "1,0"))
                                                (builtin "One Step Simplification" (formula "21"))
                                                (rule "true_left" (formula "21"))
                                                (rule "shift_paren_or" (formula "20") (term "0,0"))
                                                (rule "commute_or" (formula "20") (term "0,0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "20") (term "0,0"))
                                                (rule "add_zero_right" (formula "20") (term "1,1,0,0"))
                                                (rule "qeq_literals" (formula "20") (term "1,0,0"))
                                                (builtin "One Step Simplification" (formula "20"))
                                                (rule "true_left" (formula "20"))
                                                (rule "allLeft" (formula "55") (inst "t=i_5"))
                                                (rule "inEqSimp_homoInEq1" (formula "55") (term "1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,1"))
                                                (rule "add_literals" (formula "55") (term "1,1,0,1"))
                                                (rule "times_zero_1" (formula "55") (term "1,0,1"))
                                                (rule "add_zero_right" (formula "55") (term "0,1"))
                                                (rule "leq_literals" (formula "55") (term "1"))
                                                (builtin "One Step Simplification" (formula "55"))
                                                (rule "inEqSimp_contradInEq1" (formula "55") (term "1") (ifseqformula "23"))
                                                (rule "qeq_literals" (formula "55") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "55"))
                                                (rule "notLeft" (formula "55"))
                                                (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=arr_150"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "49"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "45"))
                                                (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "72"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "73")))
                                                (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "narrowSelectArrayType" (formula "57") (term "0") (ifseqformula "47") (ifseqformula "73"))
                                                (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "57"))
                                                (builtin "One Step Simplification" (formula "17"))
                                                (rule "commute_and" (formula "34") (term "0,0,1,0"))
                                                (rule "allLeft" (formula "35") (inst "t=i_5"))
                                                (rule "inEqSimp_commuteGeq" (formula "35") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "21"))
                                                (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "35") (term "0,0,1"))
                                                (rule "leq_literals" (formula "35") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "35"))
                                                (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "23"))
                                                (rule "qeq_literals" (formula "35") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "35"))
                                                (rule "notLeft" (formula "35"))
                                                (rule "replace_known_right" (formula "9") (term "0,0,0,0") (ifseqformula "57"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "replace_known_right" (formula "59") (term "0,0") (ifseqformula "57"))
                                                (builtin "One Step Simplification" (formula "59"))
                                                (rule "notRight" (formula "59"))
                                                (rule "replace_known_left" (formula "10") (term "0,0,0,0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "78")))
                                                (rule "closeFalse" (formula "10"))
                                             )
                                          )
                                          (branch "self.sorted[i_5].length ≥ 1 FALSE"
                                             (rule "eqSymm" (formula "61") (term "0"))
                                             (builtin "One Step Simplification" (formula "61"))
                                             (rule "inEqSimp_geqRight" (formula "60"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_notGeq" (formula "61") (term "0,0"))
                                             (rule "mul_literals" (formula "61") (term "1,0,0,0,0"))
                                             (rule "add_literals" (formula "61") (term "0,0,0,0"))
                                             (rule "add_zero_left" (formula "61") (term "0,0,0"))
                                             (rule "nnf_notAnd" (formula "24") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                                             (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                                             (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "37") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "37") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0"))
                                             (rule "mul_literals" (formula "37") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "37") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0"))
                                             (rule "mul_literals" (formula "37") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "40") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "40") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "40") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "40") (term "0,0,0"))
                                             (rule "mul_literals" (formula "40") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "40") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0"))
                                             (rule "mul_literals" (formula "40") (term "1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0"))
                                             (rule "mul_literals" (formula "39") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "39") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
                                             (rule "mul_literals" (formula "39") (term "1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "39") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "39") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0"))
                                             (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "38") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "38") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                                             (rule "mul_literals" (formula "38") (term "1,0,0,0"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "1,0,0") (ifseqformula "14"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "44"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "61") (term "1,1,1,1,0,1") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "61") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "61") (term "0,1,1,1,0,0,1") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "61") (term "0,0,1,0") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "61") (term "0,0,0,1,1,0,0,1") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "61") (term "0,0,0,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "eqSymm" (formula "60") (term "1,0,1"))
                                             (rule "replace_known_left" (formula "60") (term "0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "60"))
                                             (rule "allRight" (formula "60") (inst "sk=iv_19"))
                                             (rule "orRight" (formula "60"))
                                             (rule "orRight" (formula "60"))
                                             (rule "inEqSimp_geqRight" (formula "61"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_leqRight" (formula "61"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "replace_known_left" (formula "62") (term "0,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "1")))
                                             (rule "inEqSimp_homoInEq0" (formula "62") (term "0,0"))
                                             (rule "eqSymm" (formula "62"))
                                             (rule "polySimp_addComm1" (formula "62") (term "0,0,1"))
                                             (rule "inEqSimp_homoInEq0" (formula "62") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "62") (term "0,0,0"))
                                             (rule "eqSymm" (formula "62"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "62") (term "1,0,1"))
                                             (rule "polySimp_rightDist" (formula "62") (term "1,0,1"))
                                             (rule "mul_literals" (formula "62") (term "0,1,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,1"))
                                             (rule "polySimp_elimOne" (formula "62") (term "1,1,0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "62") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "62") (term "0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0"))
                                             (rule "inEqSimp_contradInEq0" (formula "2") (term "0,0") (ifseqformula "4"))
                                             (rule "qeq_literals" (formula "2") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "2"))
                                             (rule "mul_literals" (formula "2") (term "1,0"))
                                             (rule "add_zero_right" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                             (rule "mul_literals" (formula "2") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "2") (term "0"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                       )
                                       (branch " result_1[i_5]@anon_heap_addEntry«anonHeapFunction».length ≥ 1 FALSE"
                                          (rule "eqSymm" (formula "6"))
                                          (rule "inEqSimp_geqRight" (formula "42"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "applyEq" (formula "36") (term "1,0,1,0") (ifseqformula "7"))
                                          (rule "seqDef_lower_equals_upper" (formula "36") (term "0,1,0"))
                                          (rule "applyEq" (formula "6") (term "0") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "6"))
                                          (rule "closeFalse" (formula "6"))
                                       )
                                    )
                                    (branch "result_0.length ≥ 1 FALSE"
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "replace_known_right" (formula "4") (term "0,1,1,0") (ifseqformula "42"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_right" (formula "6") (term "0,1,1,0") (ifseqformula "42"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "inEqSimp_geqRight" (formula "42"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_antiSymm" (formula "35") (ifseqformula "1"))
                                       (rule "applyEq" (formula "5") (term "1,1,1,0,0,1,0,0") (ifseqformula "35"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0,1,0,0"))
                                       (rule "eqSymm" (formula "5") (term "1,0,0"))
                                       (rule "applyEq" (formula "36") (term "0") (ifseqformula "35"))
                                       (rule "qeq_literals" (formula "36"))
                                       (rule "true_left" (formula "36"))
                                       (rule "applyEq" (formula "36") (term "1,0,1,0") (ifseqformula "35"))
                                       (rule "seqDef_lower_equals_upper" (formula "36") (term "0,1,0"))
                                       (rule "applyEq" (formula "1") (term "0") (ifseqformula "35"))
                                       (rule "leq_literals" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "applyEq" (formula "4") (term "1,1,1,0,0,1,0,0") (ifseqformula "34"))
                                       (rule "add_zero_right" (formula "4") (term "1,1,0,0,1,0,0"))
                                       (rule "eqSymm" (formula "4") (term "1,0,0"))
                                       (rule "applyEq" (formula "6") (term "1,1,1,0,1,1,0,0") (ifseqformula "34"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "5") (term "0"))
                                       (rule "mul_literals" (formula "5") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "5") (term "0,0"))
                                       (rule "nnf_imp2or" (formula "38") (term "0"))
                                       (rule "nnf_imp2or" (formula "37") (term "0"))
                                       (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                                       (rule "mul_literals" (formula "25") (term "1,0,0,0,0,0"))
                                       (rule "add_literals" (formula "25") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                       (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "24") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                                       (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0"))
                                       (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                                       (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "23") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
                                       (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0"))
                                       (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                                       (rule "mul_literals" (formula "23") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "22") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
                                       (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0"))
                                       (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                                       (rule "mul_literals" (formula "22") (term "1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                                       (rule "ifthenelse_split" (formula "60") (term "0,0"))
                                       (branch "self.sorted[i_5].length ≥ 1 TRUE"
                                          (rule "eqSymm" (formula "61") (term "0"))
                                          (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "37") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "37") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "37") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0"))
                                          (rule "mul_literals" (formula "37") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "40") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "40") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "40") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "40") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0"))
                                          (rule "mul_literals" (formula "40") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "40") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "40") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "39") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "39") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "39") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
                                          (rule "mul_literals" (formula "39") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "38") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "38") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                                          (rule "mul_literals" (formula "38") (term "1,0,0,0"))
                                          (rule "arrayLengthNotNegative" (formula "61") (term "1,1,1,0,1,1,0,1"))
                                          (rule "arrayLengthIsAShort" (formula "62") (term "1,1,1,0,1,1,0,1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "arrayLengthIsAShort" (formula "62") (term "1,1,1,0,0,1,0,1"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "arrayLengthNotNegative" (formula "62") (term "1,1,1,0,0,1,0,1"))
                                          (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "3"))
                                          (rule "leq_literals" (formula "1") (term "0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "1,0,0") (ifseqformula "14"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "45"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "63") (term "0,1,0,0") (ifseqformula "6"))
                                          (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "6"))
                                          (rule "applyEqReverse" (formula "63") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "6"))
                                          (rule "applyEqReverse" (formula "63") (term "0,1,1,1,0,0,1") (ifseqformula "6"))
                                          (rule "applyEqReverse" (formula "63") (term "0,0,0,0,0") (ifseqformula "6"))
                                          (rule "applyEqReverse" (formula "63") (term "0,0,0,1,1,0,0,1") (ifseqformula "6"))
                                          (rule "applyEqReverse" (formula "63") (term "1,1,1,1,0,1") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "62") (term "0,0,0,1,1,0,0,1") (ifseqformula "5"))
                                          (rule "applyEqReverse" (formula "62") (term "0,1,1,1,0,0,1") (ifseqformula "5"))
                                          (rule "applyEqReverse" (formula "62") (term "0,0,0,0,0") (ifseqformula "5"))
                                          (rule "applyEqReverse" (formula "62") (term "0,1,0,0") (ifseqformula "5"))
                                          (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "3")) (ifInst ""  (formula "3")))
                                          (rule "allRight" (formula "62") (inst "sk=iv_18"))
                                          (rule "orRight" (formula "62"))
                                          (rule "orRight" (formula "62"))
                                          (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "5"))
                                          (rule "applyEqReverse" (formula "64") (term "1,1,1") (ifseqformula "5"))
                                          (rule "applyEqReverse" (formula "64") (term "0,1,1,1,0,1") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "eqSymm" (formula "63"))
                                          (rule "inEqSimp_geqRight" (formula "62"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_leqRight" (formula "62"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "replace_known_left" (formula "63") (term "0,0,1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "1")))
                                          (rule "inEqSimp_homoInEq0" (formula "63") (term "0,1"))
                                          (rule "polySimp_addComm1" (formula "63") (term "0,0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "63") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "63") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "63") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "63") (term "1,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,1"))
                                          (rule "mul_literals" (formula "63") (term "0,1,0,1"))
                                          (rule "polySimp_elimOne" (formula "63") (term "1,1,0,1"))
                                          (rule "replace_known_left" (formula "63") (term "0,1") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "63"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "63") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "63") (term "1,0,0"))
                                          (rule "mul_literals" (formula "63") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "63") (term "1,1,0,0"))
                                          (rule "replace_known_left" (formula "63") (term "0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "63"))
                                          (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "5"))
                                          (rule "leq_literals" (formula "4") (term "0"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "pullOutSelect" (formula "62") (term "0") (inst "selectSK=arr_144"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "31"))
                                          (rule "eqSymm" (formula "63"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_145"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "commute_or" (formula "44") (term "0,0"))
                                          (rule "commute_or" (formula "30") (term "0,0"))
                                          (rule "commute_or" (formula "8") (term "0,0"))
                                          (rule "inEqSimp_or_tautInEq1" (formula "8") (term "0"))
                                          (rule "add_zero_right" (formula "8") (term "1,1,0"))
                                          (rule "qeq_literals" (formula "8") (term "1,0"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "true_left" (formula "8"))
                                          (rule "commute_or" (formula "9") (term "0,0"))
                                          (rule "inEqSimp_or_tautInEq1" (formula "9") (term "0"))
                                          (rule "add_zero_right" (formula "9") (term "1,1,0"))
                                          (rule "qeq_literals" (formula "9") (term "1,0"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "true_left" (formula "9"))
                                          (rule "commute_or_2" (formula "27") (term "0"))
                                          (rule "commute_or_2" (formula "23") (term "0,1,1,0"))
                                          (rule "commute_or" (formula "23") (term "1,0,1,0"))
                                          (rule "commute_or_2" (formula "26") (term "0"))
                                          (rule "commute_or_2" (formula "25") (term "0"))
                                          (rule "commute_or_2" (formula "24") (term "0"))
                                          (rule "commute_or_2" (formula "38") (term "0"))
                                          (rule "commute_or_2" (formula "41") (term "0"))
                                          (rule "commute_or_2" (formula "40") (term "0"))
                                          (rule "commute_or_2" (formula "39") (term "0"))
                                          (rule "ifthenelse_to_or_left" (formula "23") (term "1,0,0,1,0"))
                                          (rule "eqSymm" (formula "23") (term "1,1,1,0,0,1,0"))
                                          (rule "eqSymm" (formula "23") (term "1,0,1,0,0,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "23") (term "0,0,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "23") (term "1,0,0,0,0,1,0,0,1,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0,0,1,0,0,1,0"))
                                          (rule "add_zero_left" (formula "23") (term "0,0,0,1,0,0,1,0"))
                                          (rule "commute_or" (formula "27") (term "0,0"))
                                          (rule "commute_or" (formula "26") (term "0,0"))
                                          (rule "commute_or" (formula "25") (term "0,0"))
                                          (rule "commute_or" (formula "24") (term "0,0"))
                                          (rule "commute_or" (formula "38") (term "0,0"))
                                          (rule "commute_or" (formula "41") (term "0,0"))
                                          (rule "commute_or" (formula "40") (term "0,0"))
                                          (rule "commute_or" (formula "39") (term "0,0"))
                                          (rule "arrayLengthNotNegative" (formula "8") (term "0,1"))
                                          (rule "arrayLengthIsAShort" (formula "9") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "true_left" (formula "9"))
                                          (rule "commute_or" (formula "24") (term "0,0,1,1,0"))
                                          (rule "equalityToSeqGetAndSeqLenLeft" (formula "38") (inst "iv=iv"))
                                          (rule "andLeft" (formula "38"))
                                          (rule "lenOfSeqConcat" (formula "39") (term "1,1,0,0"))
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "polySimp_addComm0" (formula "39") (term "1,1,0,0"))
                                          (rule "lenOfSeqConcat" (formula "38") (term "0"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "polySimp_homoEq" (formula "38"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,0"))
                                          (rule "polySimp_addComm0" (formula "38") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "38") (term "1,0"))
                                          (rule "mul_literals" (formula "38") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "38") (term "0"))
                                          (rule "polySimp_addComm0" (formula "38") (term "0,0"))
                                          (rule "lenOfSeqConcatEQ" (formula "38") (term "1,0,0") (ifseqformula "40"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "polySimp_addComm0" (formula "38") (term "1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "38") (term "0,0"))
                                          (rule "add_literals" (formula "38") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "38") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "38") (term "0"))
                                          (rule "add_literals" (formula "38") (term "1,0"))
                                          (rule "times_zero_1" (formula "38") (term "0"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "true_left" (formula "38"))
                                          (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "38") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                                          (rule "applyEq" (formula "38") (term "0,0,1,0") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "true_left" (formula "38"))
                                          (rule "cnf_rightDist" (formula "24") (term "0,0,1,0"))
                                          (rule "inEqSimp_or_subsumption5" (formula "24") (term "1,0,0,1,0"))
                                          (rule "greater_literals" (formula "24") (term "0,1,0,1,0,0,1,0"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "shift_paren_or" (formula "24") (term "0,0,0,1,0"))
                                          (rule "commute_or" (formula "24") (term "0,0,0,0,1,0"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch " ¬self.sorted[i_5] = null ∧ ¬self.sorted[i_5].<created> = TRUE TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "notLeft" (formula "2"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "referencedObjectIsCreatedRight" (formula "46") (ifseqformula "45"))
                                             (rule "close" (formula "46") (ifseqformula "15"))
                                          )
                                          (branch " ¬self.sorted[i_5] = null ∧ ¬self.sorted[i_5].<created> = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "ifthenelse_to_or_left" (formula "23") (term "0,0,0,1,1,0"))
                                             (rule "eqSymm" (formula "23") (term "1,0,0,0,0,1,1,0"))
                                             (rule "eqSymm" (formula "23") (term "1,1,0,0,0,1,1,0"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "nnf_notAnd" (formula "23") (term "0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,0,0,1,1,0"))
                                             (rule "nnf_notAnd" (formula "23") (term "0,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "23") (term "1,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "23") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "23") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "23") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "23") (term "0,0,1,1,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "23") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,1,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "23") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "23") (term "0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "23") (term "0,1,1,0"))
                                             (rule "commute_or" (formula "23") (term "1,1,0,1,1,0"))
                                             (rule "commute_or_2" (formula "23") (term "0,1,0,1,1,0"))
                                             (rule "commute_or_2" (formula "23") (term "0,1,1,0,1,1,0"))
                                             (rule "commute_or" (formula "23") (term "0,0,1,0,1,1,0"))
                                             (rule "commute_or" (formula "23") (term "0,0,1,1,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "23") (term "1,1,0,1,1,0"))
                                             (rule "commute_or" (formula "23") (term "1,1,1,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "23") (term "0,1,1,0"))
                                             (rule "commute_or_2" (formula "23") (term "0,0,1,1,0"))
                                             (rule "commute_or" (formula "23") (term "1,0,1,1,0"))
                                             (rule "shift_paren_or" (formula "23") (term "0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "23") (term "0,1,1,0,1,1,0"))
                                             (rule "inEqSimp_or_tautInEq1" (formula "23") (term "0,0,1,1,0,1,1,0"))
                                             (rule "add_zero_right" (formula "23") (term "1,1,0,0,1,1,0,1,1,0"))
                                             (rule "qeq_literals" (formula "23") (term "1,0,0,1,1,0,1,1,0"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "commute_or_2" (formula "23") (term "1,0,1,1,0"))
                                             (rule "shift_paren_or" (formula "23") (term "0,1,0,1,1,0"))
                                             (rule "shift_paren_or" (formula "23") (term "0,0,0,0,1,1,0"))
                                             (rule "shift_paren_or" (formula "23") (term "0,0,1,0,1,1,0"))
                                             (rule "commute_or" (formula "23") (term "0,0,0,0,0,1,1,0"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "shift_paren_or" (formula "23") (term "0,0,0,1,0,1,1,0"))
                                             (rule "commute_or" (formula "23") (term "0,0,0,0,1,0,1,1,0"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "allLeft" (formula "42") (inst "t=i_5"))
                                             (rule "inEqSimp_homoInEq1" (formula "42") (term "1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,1"))
                                             (rule "add_literals" (formula "42") (term "1,1,0,1"))
                                             (rule "times_zero_1" (formula "42") (term "1,0,1"))
                                             (rule "add_literals" (formula "42") (term "0,1"))
                                             (rule "leq_literals" (formula "42") (term "1"))
                                             (builtin "One Step Simplification" (formula "42"))
                                             (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "12"))
                                             (rule "qeq_literals" (formula "42") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "42"))
                                             (rule "notLeft" (formula "42"))
                                             (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=arr_146"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "61")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "31"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "59"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
                                             (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "narrowSelectArrayType" (formula "44") (term "0") (ifseqformula "33") (ifseqformula "60"))
                                             (rule "allLeft" (formula "38") (inst "t=i_5"))
                                             (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "38") (term "1,0") (ifseqformula "12"))
                                             (rule "qeq_literals" (formula "38") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "inEqSimp_contradInEq1" (formula "38") (term "1") (ifseqformula "10"))
                                             (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                             (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "38") (term "0,0,1"))
                                             (rule "leq_literals" (formula "38") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "notLeft" (formula "38"))
                                             (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=arr_147"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "31"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")) (ifInst ""  (formula "5")))
                                             (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "narrowSelectArrayType" (formula "44") (term "0") (ifseqformula "14") (ifseqformula "47"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "44"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "replace_known_right" (formula "46") (term "0,0") (ifseqformula "44"))
                                             (builtin "One Step Simplification" (formula "46"))
                                             (rule "notRight" (formula "46"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "65")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                       )
                                       (branch "self.sorted[i_5].length ≥ 1 FALSE"
                                          (rule "eqSymm" (formula "61") (term "0"))
                                          (builtin "One Step Simplification" (formula "61"))
                                          (rule "inEqSimp_geqRight" (formula "60"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_notGeq" (formula "61") (term "0,0"))
                                          (rule "mul_literals" (formula "61") (term "1,0,0,0,0"))
                                          (rule "add_literals" (formula "61") (term "0,0,0,0"))
                                          (rule "add_zero_left" (formula "61") (term "0,0,0"))
                                          (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "37") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "37") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "37") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0"))
                                          (rule "mul_literals" (formula "37") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "40") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "40") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "40") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "40") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0"))
                                          (rule "mul_literals" (formula "40") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "40") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "40") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "39") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "39") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0"))
                                          (rule "mul_literals" (formula "39") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "39") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
                                          (rule "mul_literals" (formula "39") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0"))
                                          (rule "mul_literals" (formula "38") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "38") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                                          (rule "mul_literals" (formula "38") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "38") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "1,0,0") (ifseqformula "13"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "44"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "replace_known_left" (formula "5") (term "0,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "applyEqReverse" (formula "62") (term "0,0,1,0") (ifseqformula "5"))
                                          (rule "applyEqReverse" (formula "62") (term "0,0,0,0") (ifseqformula "5"))
                                          (rule "applyEqReverse" (formula "62") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "5"))
                                          (rule "applyEqReverse" (formula "62") (term "0,0,0,1,1,0,0,1") (ifseqformula "5"))
                                          (rule "applyEqReverse" (formula "62") (term "1,1,1,1,0,1") (ifseqformula "5"))
                                          (rule "applyEqReverse" (formula "62") (term "0,1,1,1,0,0,1") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "applyEqReverse" (formula "61") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "4"))
                                          (rule "applyEqReverse" (formula "61") (term "0,0,0,0") (ifseqformula "4"))
                                          (rule "applyEqReverse" (formula "61") (term "0,0,1,0") (ifseqformula "4"))
                                          (rule "applyEqReverse" (formula "61") (term "0,0,0,1,1,0,0,1") (ifseqformula "4"))
                                          (rule "applyEqReverse" (formula "61") (term "1,1,1,1,0,1") (ifseqformula "4"))
                                          (rule "applyEqReverse" (formula "61") (term "0,1,1,1,0,0,1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "eqSymm" (formula "60") (term "1,0,1"))
                                          (rule "replace_known_left" (formula "60") (term "0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "60"))
                                          (rule "allRight" (formula "60") (inst "sk=iv_17"))
                                          (rule "orRight" (formula "60"))
                                          (rule "orRight" (formula "60"))
                                          (rule "inEqSimp_leqRight" (formula "60"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "replace_known_left" (formula "62") (term "0,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "1")))
                                          (rule "inEqSimp_geqRight" (formula "61"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_homoInEq0" (formula "62") (term "0,1"))
                                          (rule "polySimp_addComm1" (formula "62") (term "0,0,1"))
                                          (rule "inEqSimp_homoInEq0" (formula "62") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "62") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "0,1"))
                                          (rule "polySimp_mulComm0" (formula "62") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "62") (term "1,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,1"))
                                          (rule "mul_literals" (formula "62") (term "0,1,0,1"))
                                          (rule "polySimp_elimOne" (formula "62") (term "1,1,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "62") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "62") (term "1,0,0"))
                                          (rule "mul_literals" (formula "62") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "62") (term "1,1,0,0"))
                                          (rule "inEqSimp_contradInEq0" (formula "1") (term "0,0") (ifseqformula "4"))
                                          (rule "qeq_literals" (formula "1") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "1"))
                                          (rule "times_zero_2" (formula "1") (term "1,0"))
                                          (rule "add_zero_right" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                                          (rule "qeq_literals" (formula "1") (term "0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                 )
                                 (branch " 0 ≤ messages.length ∧ messages.length < self.sorted.length - 0 FALSE"
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (ifseqformula "22"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "1") (ifseqformula "22"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "1") (ifseqformula "27"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,1") (ifseqformula "22"))
                                    (rule "andLeft" (formula "20"))
                                    (rule "andLeft" (formula "6"))
                                    (rule "orRight" (formula "36"))
                                    (rule "notLeft" (formula "22"))
                                    (rule "eqSymm" (formula "17"))
                                    (rule "eqSymm" (formula "30"))
                                    (rule "eqSymm" (formula "5"))
                                    (rule "eqSymm" (formula "2"))
                                    (rule "eqSymm" (formula "26"))
                                    (rule "eqSymm" (formula "35"))
                                    (rule "eqSymm" (formula "18") (term "1,0"))
                                    (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "41"))
                                    (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "40")))
                                    (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "38"))
                                    (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "36")) (ifInst ""  (formula "37")))
                                    (rule "polySimp_elimSub" (formula "42") (term "1,1"))
                                    (rule "times_zero_2" (formula "42") (term "1,1,1"))
                                    (rule "add_zero_right" (formula "42") (term "1,1"))
                                    (rule "replace_known_left" (formula "42") (term "1") (ifseqformula "4"))
                                    (builtin "One Step Simplification" (formula "42"))
                                    (rule "polySimp_addComm0" (formula "8") (term "1"))
                                    (rule "inEqSimp_ltToLeq" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "7"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "42"))
                                    (rule "add_zero_right" (formula "1") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "20"))
                                    (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "7"))
                                    (rule "inEqSimp_homoInEq1" (formula "16"))
                                    (rule "polySimp_addComm1" (formula "16") (term "0"))
                                    (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "20") (term "1") (ifseqformula "6"))
                                    (rule "applyEq" (formula "27") (term "1") (ifseqformula "3"))
                                    (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "9"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                    (rule "mul_literals" (formula "8") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                    (rule "add_literals" (formula "8") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "8") (term "0,0"))
                                    (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "6"))
                                    (rule "applyEq" (formula "19") (term "0,1,0,0,1,0,0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "5") (term "1,0,0") (ifseqformula "6"))
                                    (rule "applyEq" (formula "36") (term "1") (ifseqformula "6"))
                                    (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "6"))
                                    (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
                                    (rule "add_literals" (formula "8") (term "1,0"))
                                    (rule "times_zero_1" (formula "8") (term "0"))
                                    (rule "leq_literals" (formula "8"))
                                    (rule "true_left" (formula "8"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                    (rule "mul_literals" (formula "15") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                    (rule "polySimp_elimOne" (formula "5") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "7") (term "0"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "closeFalse" (formula "7"))
                                 )
                              )
                           )
                           (branch "CUT: array2seq(heapAfter_first, bal) = array2seq(heap, bal) FALSE"
                              (rule "hide_right" (formula "38") (userinteraction))
                              (rule "equalityToSeqGetAndSeqLenRight" (formula "32") (inst "iv=iv") (userinteraction))
                              (rule "andRight" (formula "32") (userinteraction))
                              (branch "Case 1"
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (ifseqformula "21"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "1") (ifseqformula "26"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "1") (ifseqformula "21"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,1") (ifseqformula "21"))
                                 (rule "andLeft" (formula "5"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "orRight" (formula "35"))
                                 (rule "notLeft" (formula "21"))
                                 (rule "eqSymm" (formula "1"))
                                 (rule "eqSymm" (formula "29"))
                                 (rule "eqSymm" (formula "4"))
                                 (rule "eqSymm" (formula "16"))
                                 (rule "eqSymm" (formula "17") (term "1,0"))
                                 (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "33"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "replace_known_right" (formula "24") (term "0,1") (ifseqformula "39"))
                                 (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "40")))
                                 (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "37"))
                                 (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "35")) (ifInst ""  (formula "36")))
                                 (rule "polySimp_addComm0" (formula "7") (term "1"))
                                 (rule "inEqSimp_ltToLeq" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "6"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "18"))
                                 (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "5"))
                                 (rule "inEqSimp_homoInEq1" (formula "14"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0"))
                                 (rule "applyEq" (formula "1") (term "0") (ifseqformula "25"))
                                 (rule "applyEq" (formula "18") (term "1") (ifseqformula "4"))
                                 (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "6") (term "0,1,0") (ifseqformula "7"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                 (rule "mul_literals" (formula "6") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                 (rule "add_literals" (formula "6") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "6") (term "0,0"))
                                 (rule "applyEq" (formula "25") (term "1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "7") (term "1,1") (ifseqformula "4"))
                                 (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "3") (term "1,0,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "6") (term "0,1,0") (ifseqformula "4"))
                                 (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                                 (rule "add_literals" (formula "6") (term "1,0"))
                                 (rule "times_zero_1" (formula "6") (term "0"))
                                 (rule "leq_literals" (formula "6"))
                                 (rule "true_left" (formula "6"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "13"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1"))
                                 (rule "mul_literals" (formula "13") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                                 (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                 (rule "add_literals" (formula "17") (term "0,0"))
                                 (rule "qeq_literals" (formula "17") (term "0"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "nonNull" (formula "29") (inst "i=i"))
                                 (rule "greater_literals" (formula "29") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "35")))
                                 (rule "sub_literals" (formula "29") (term "2,1,0"))
                                 (builtin "One Step Simplification" (formula "29"))
                                 (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                                 (rule "applyEq" (formula "29") (term "0,1,0,0,1,0,0") (ifseqformula "6"))
                                 (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                                 (rule "array2seqDef" (formula "14") (term "0,0") (inst "u=u"))
                                 (rule "narrowSelectArrayType" (formula "14") (term "2,0,0") (ifseqformula "7") (ifseqformula "31"))
                                 (rule "array2seqDef" (formula "23") (term "0") (inst "u=u"))
                                 (rule "array2seqDef" (formula "2") (term "1") (inst "u=u"))
                                 (rule "eqSymm" (formula "2"))
                                 (rule "array2seqDef" (formula "32") (term "0,1") (inst "u=u"))
                                 (rule "eqSymm" (formula "32"))
                                 (rule "lenOfSeqDef" (formula "32") (term "0"))
                                 (rule "polySimp_elimSub" (formula "32") (term "1,0"))
                                 (rule "times_zero_2" (formula "32") (term "1,1,0"))
                                 (rule "add_zero_right" (formula "32") (term "1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0"))
                                 (rule "add_zero_right" (formula "32") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "32") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "32") (term "0,0,0"))
                                 (rule "nonNull" (formula "18") (inst "i=i"))
                                 (rule "greater_literals" (formula "18") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "sub_literals" (formula "18") (term "2,1,0,1"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "andLeft" (formula "18"))
                                 (rule "notLeft" (formula "18"))
                                 (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "31"))
                                 (builtin "One Step Simplification" (formula "10"))
                                 (rule "narrowSelectArrayType" (formula "18") (term "0,0,1,0") (ifseqformula "7") (ifseqformula "31"))
                                 (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                 (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0") (ifseqformula "4"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                 (rule "array2seqDef" (formula "1") (term "1") (inst "u=u"))
                                 (rule "eqSymm" (formula "1"))
                                 (rule "array2seqDef" (formula "27") (term "0,1,0") (inst "u=u"))
                                 (rule "array2seqDef" (formula "15") (term "1") (inst "u=u"))
                                 (rule "eqSymm" (formula "15"))
                                 (rule "narrowSelectArrayType" (formula "15") (term "2,0") (ifseqformula "7") (ifseqformula "32"))
                                 (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "15"))
                                 (rule "array2seqDef" (formula "16") (term "1,1,0") (inst "u=u"))
                                 (rule "eqSymm" (formula "16") (term "1,0"))
                                 (rule "array2seqDef" (formula "23") (term "1") (inst "u=u"))
                                 (rule "array2seqDef" (formula "13") (term "0,0") (inst "u=u"))
                                 (rule "narrowSelectArrayType" (formula "13") (term "2,0,0") (ifseqformula "7") (ifseqformula "32"))
                                 (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "15"))
                                 (rule "array2seqDef" (formula "2") (term "1") (inst "u=u"))
                                 (rule "eqSymm" (formula "2"))
                                 (rule "array2seqDef" (formula "33") (term "0,1") (inst "u=u"))
                                 (rule "eqSymm" (formula "33"))
                                 (rule "lenOfSeqDef" (formula "33") (term "0"))
                                 (rule "polySimp_elimSub" (formula "33") (term "1,0"))
                                 (rule "times_zero_2" (formula "33") (term "1,1,0"))
                                 (rule "add_zero_right" (formula "33") (term "1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0"))
                                 (rule "add_zero_right" (formula "33") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "33") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "33"))
                                 (rule "closeTrue" (formula "33"))
                              )
                              (branch "Case 2"
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (ifseqformula "21"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "1") (ifseqformula "21"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "1") (ifseqformula "26"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,1") (ifseqformula "21"))
                                 (rule "andLeft" (formula "5"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "orRight" (formula "35"))
                                 (rule "notLeft" (formula "21"))
                                 (rule "allRight" (formula "34") (inst "sk=iv_13"))
                                 (rule "impRight" (formula "34"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "eqSymm" (formula "18"))
                                 (rule "eqSymm" (formula "3"))
                                 (rule "eqSymm" (formula "31"))
                                 (rule "eqSymm" (formula "6"))
                                 (rule "eqSymm" (formula "19") (term "1,0"))
                                 (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "35"))
                                 (builtin "One Step Simplification" (formula "14"))
                                 (rule "replace_known_right" (formula "26") (term "0,1") (ifseqformula "41"))
                                 (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "42")))
                                 (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "39"))
                                 (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "37")) (ifInst ""  (formula "38")))
                                 (rule "polySimp_addComm0" (formula "9") (term "1"))
                                 (rule "inEqSimp_ltToLeq" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "8"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "8") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "20"))
                                 (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "7"))
                                 (rule "inEqSimp_commuteLeq" (formula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "16"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0"))
                                 (rule "applyEq" (formula "20") (term "1") (ifseqformula "6"))
                                 (rule "applyEq" (formula "27") (term "0") (ifseqformula "3"))
                                 (rule "eqSymm" (formula "27"))
                                 (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "9"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                 (rule "mul_literals" (formula "8") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                 (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "8") (term "0,0"))
                                 (rule "applyEq" (formula "19") (term "0,1,0,0,1,0,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "6"))
                                 (rule "applyEq" (formula "5") (term "1,0,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "6"))
                                 (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
                                 (rule "add_literals" (formula "8") (term "1,0"))
                                 (rule "times_zero_1" (formula "8") (term "0"))
                                 (rule "leq_literals" (formula "8"))
                                 (rule "true_left" (formula "8"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "15"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1"))
                                 (rule "mul_literals" (formula "15") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "0"))
                                 (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                                 (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "19") (term "0,0"))
                                 (rule "qeq_literals" (formula "19") (term "0"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "array2seqDef" (formula "4") (term "1") (inst "u=u"))
                                 (rule "eqSymm" (formula "4"))
                                 (rule "array2seqDef" (formula "16") (term "0,0") (inst "u=u"))
                                 (rule "narrowSelectArrayType" (formula "16") (term "2,0,0") (ifseqformula "9") (ifseqformula "33"))
                                 (rule "nonNull" (formula "31") (inst "i=i"))
                                 (rule "greater_literals" (formula "31") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "37")))
                                 (rule "sub_literals" (formula "31") (term "2,1,0"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                                 (rule "applyEq" (formula "31") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                                 (rule "nonNull" (formula "20") (inst "i=i"))
                                 (rule "sub_literals" (formula "20") (term "2,1,0,1,1"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "greater_literals" (formula "20") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "notLeft" (formula "20"))
                                 (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "33"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "narrowSelectArrayType" (formula "20") (term "0,0,1,0") (ifseqformula "9") (ifseqformula "33"))
                                 (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                                 (rule "applyEq" (formula "20") (term "0,1,0,0,1,0,0") (ifseqformula "6"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                                 (rule "array2seqDef" (formula "35") (term "0,0") (inst "u=u"))
                                 (rule "getOfSeqDef" (formula "35") (term "0"))
                                 (rule "castDel" (formula "35") (term "2,0"))
                                 (rule "castDel" (formula "35") (term "1,0"))
                                 (rule "add_zero_right" (formula "35") (term "0,2,1,0"))
                                 (rule "polySimp_elimSub" (formula "35") (term "1,1,0,0"))
                                 (rule "times_zero_2" (formula "35") (term "1,1,1,0,0"))
                                 (rule "add_zero_right" (formula "35") (term "1,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "35") (term "0,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "35") (term "0,0,0"))
                                 (rule "array2seqDef" (formula "17") (term "1") (inst "u=u"))
                                 (rule "eqSymm" (formula "17"))
                                 (rule "narrowSelectArrayType" (formula "17") (term "2,0") (ifseqformula "9") (ifseqformula "34"))
                                 (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "17"))
                                 (rule "array2seqDef" (formula "3") (term "1") (inst "u=u"))
                                 (rule "eqSymm" (formula "3"))
                                 (rule "array2seqDef" (formula "29") (term "0,1,0") (inst "u=u"))
                                 (rule "array2seqDef" (formula "18") (term "1,1,0") (inst "u=u"))
                                 (rule "eqSymm" (formula "18") (term "1,0"))
                                 (rule "array2seqDef" (formula "25") (term "0,0") (inst "u=u"))
                                 (rule "array2seqDef" (formula "25") (term "1") (inst "u=u"))
                                 (rule "array2seqDef" (formula "2") (term "0,0") (inst "u=u"))
                                 (rule "lenOfSeqDef" (formula "2") (term "0"))
                                 (rule "polySimp_elimSub" (formula "2") (term "1,0"))
                                 (rule "times_zero_2" (formula "2") (term "1,1,0"))
                                 (rule "add_zero_right" (formula "2") (term "1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                                 (rule "array2seqDef" (formula "15") (term "0,0") (inst "u=u"))
                                 (rule "narrowSelectArrayType" (formula "15") (term "2,0,0") (ifseqformula "9") (ifseqformula "34"))
                                 (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "17"))
                                 (rule "array2seqDef" (formula "4") (term "1") (inst "u=u"))
                                 (rule "eqSymm" (formula "4"))
                                 (rule "array2seqDef" (formula "35") (term "0,1") (inst "u=u"))
                                 (rule "eqSymm" (formula "35"))
                                 (rule "getOfSeqDef" (formula "35") (term "0"))
                                 (rule "castDel" (formula "35") (term "1,0"))
                                 (rule "castDel" (formula "35") (term "2,0"))
                                 (rule "add_zero_right" (formula "35") (term "0,2,1,0"))
                                 (rule "polySimp_elimSub" (formula "35") (term "1,1,0,0"))
                                 (rule "times_zero_2" (formula "35") (term "1,1,1,0,0"))
                                 (rule "add_zero_right" (formula "35") (term "1,1,0,0"))
                                 (rule "narrowSelectArrayType" (formula "35") (term "1,0") (ifseqformula "9") (ifseqformula "34"))
                                 (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "35") (term "0,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "35") (term "0,0,0"))
                                 (rule "eqSymm" (formula "35"))
                                 (rule "array2seqDef" (formula "3") (term "1") (inst "u=u"))
                                 (rule "eqSymm" (formula "3"))
                                 (rule "array2seqDef" (formula "18") (term "1,1,0") (inst "u=u"))
                                 (rule "eqSymm" (formula "18") (term "1,0"))
                                 (rule "eqSeqDef" (formula "25") (inst "iv=iv"))
                                 (rule "andLeft" (formula "25"))
                                 (rule "lenOfSeqDef" (formula "25") (term "1"))
                                 (rule "polySimp_elimSub" (formula "25") (term "1,1"))
                                 (rule "times_zero_2" (formula "25") (term "1,1,1"))
                                 (rule "add_zero_right" (formula "25") (term "1,1"))
                                 (rule "getOfSeqDef" (formula "26") (term "1,1,0"))
                                 (rule "castDel" (formula "26") (term "2,1,1,0"))
                                 (rule "castDel" (formula "26") (term "1,1,1,0"))
                                 (rule "add_zero_right" (formula "26") (term "0,2,1,1,1,0"))
                                 (rule "polySimp_elimSub" (formula "26") (term "1,1,0,1,1,0"))
                                 (rule "times_zero_2" (formula "26") (term "1,1,1,0,1,1,0"))
                                 (rule "add_zero_right" (formula "26") (term "1,1,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "26") (term "0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1"))
                                 (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,1,1,0"))
                                 (rule "apply_eq_monomials" (formula "26") (term "1,0,1,0,0") (ifseqformula "25"))
                                 (rule "polySimp_rightDist" (formula "26") (term "0,1,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,0,1,0,1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "26") (term "1,0,1,0,0"))
                                 (rule "add_literals" (formula "26") (term "1,1,1,0,1,0,0"))
                                 (rule "times_zero_1" (formula "26") (term "1,1,0,1,0,0"))
                                 (rule "add_zero_right" (formula "26") (term "1,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "26") (term "0,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "0,0,1"))
                                 (rule "polySimp_elimOne" (formula "25") (term "0,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,1,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,1,1,0"))
                                 (rule "mul_literals" (formula "26") (term "0,1,1,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,0,1,0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0,1,0,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "26") (term "0,0,0,1,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                                 (rule "eqSeqDef" (formula "4") (inst "iv=iv"))
                                 (rule "andLeft" (formula "4"))
                                 (rule "getOfSeqDef" (formula "5") (term "1,1,0"))
                                 (rule "castDel" (formula "5") (term "1,1,1,0"))
                                 (rule "castDel" (formula "5") (term "2,1,1,0"))
                                 (rule "add_zero_right" (formula "5") (term "0,2,1,1,1,0"))
                                 (rule "polySimp_elimSub" (formula "5") (term "1,1,0,1,1,0"))
                                 (rule "times_zero_2" (formula "5") (term "1,1,1,0,1,1,0"))
                                 (rule "add_zero_right" (formula "5") (term "1,1,0,1,1,0"))
                                 (rule "lenOfSeqDef" (formula "4") (term "0"))
                                 (rule "eqSymm" (formula "4"))
                                 (rule "polySimp_elimSub" (formula "4") (term "1,1"))
                                 (rule "times_zero_2" (formula "4") (term "1,1,1"))
                                 (rule "add_zero_right" (formula "4") (term "1,1"))
                                 (rule "lenOfSeqDef" (formula "5") (term "1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "5") (term "1,1,1,0,0"))
                                 (rule "times_zero_2" (formula "5") (term "1,1,1,1,0,0"))
                                 (rule "add_zero_right" (formula "5") (term "1,1,1,0,0"))
                                 (rule "getOfSeqDef" (formula "5") (term "0,1,0"))
                                 (rule "castDel" (formula "5") (term "1,0,1,0"))
                                 (rule "castDel" (formula "5") (term "2,0,1,0"))
                                 (rule "add_zero_right" (formula "5") (term "0,2,1,0,1,0"))
                                 (rule "polySimp_elimSub" (formula "5") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_2" (formula "5") (term "1,1,1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "5") (term "1,1,0,0,1,0"))
                                 (rule "lenOfSeqDef" (formula "4") (term "0"))
                                 (rule "eqSymm" (formula "4"))
                                 (rule "polySimp_elimSub" (formula "4") (term "1,1"))
                                 (rule "mul_literals" (formula "4") (term "1,1,1"))
                                 (rule "add_zero_right" (formula "4") (term "1,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "5") (term "0,1,1,0,0"))
                                 (rule "add_zero_right" (formula "5") (term "0,0,1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "4") (term "0,1"))
                                 (rule "add_zero_right" (formula "4") (term "0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0"))
                                 (rule "add_zero_right" (formula "4") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0,1,0"))
                                 (rule "apply_eq_monomials" (formula "5") (term "1,0,0,1,0,0") (ifseqformula "4"))
                                 (rule "polySimp_rightDist" (formula "5") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,0,1,0,0,1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "5") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "5") (term "1,1,1,0,0,1,0,0"))
                                 (rule "times_zero_1" (formula "5") (term "1,1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "5") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,1,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,1,0,1,1,0"))
                                 (rule "mul_literals" (formula "5") (term "0,1,1,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "5") (term "0,1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "0,0,1"))
                                 (rule "polySimp_elimOne" (formula "4") (term "0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "4") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "0,0,1,0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0,1,0,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "0,0,0,1,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "5") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,0"))
                                 (rule "eqSeqDef2" (formula "18") (inst "iv=iv") (ifseqformula "18"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "eqSeqDef" (formula "3") (inst "iv=iv"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "getOfSeqDef" (formula "4") (term "1,1,0"))
                                 (rule "castDel" (formula "4") (term "1,1,1,0"))
                                 (rule "castDel" (formula "4") (term "2,1,1,0"))
                                 (rule "add_zero_right" (formula "4") (term "0,2,1,1,1,0"))
                                 (rule "polySimp_elimSub" (formula "4") (term "1,1,0,1,1,0"))
                                 (rule "times_zero_2" (formula "4") (term "1,1,1,0,1,1,0"))
                                 (rule "add_zero_right" (formula "4") (term "1,1,0,1,1,0"))
                                 (rule "lenOfSeqDef" (formula "4") (term "1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "4") (term "1,1,1,0,0"))
                                 (rule "times_zero_2" (formula "4") (term "1,1,1,1,0,0"))
                                 (rule "add_zero_right" (formula "4") (term "1,1,1,0,0"))
                                 (rule "getOfSeqDef" (formula "4") (term "0,1,0"))
                                 (rule "castDel" (formula "4") (term "1,0,1,0"))
                                 (rule "castDel" (formula "4") (term "2,0,1,0"))
                                 (rule "add_zero_right" (formula "4") (term "0,2,1,0,1,0"))
                                 (rule "polySimp_elimSub" (formula "4") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_2" (formula "4") (term "1,1,1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "4") (term "1,1,0,0,1,0"))
                                 (rule "lenOfSeqDef" (formula "3") (term "1"))
                                 (rule "polySimp_elimSub" (formula "3") (term "1,1"))
                                 (rule "times_zero_2" (formula "3") (term "1,1,1"))
                                 (rule "add_zero_right" (formula "3") (term "1,1"))
                                 (rule "lenOfSeqDef" (formula "3") (term "0"))
                                 (rule "polySimp_elimSub" (formula "3") (term "1,0"))
                                 (rule "mul_literals" (formula "3") (term "1,1,0"))
                                 (rule "add_zero_right" (formula "3") (term "1,0"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3") (term "0,1,1,0,0"))
                                 (rule "add_zero_right" (formula "3") (term "0,0,1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0,1,0"))
                                 (rule "eqSymm" (formula "3") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,1,1,0"))
                                 (rule "eqSymm" (formula "3") (term "1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0,1,0"))
                                 (rule "eqSymm" (formula "3") (term "1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0,1,0"))
                                 (rule "eqSymm" (formula "3") (term "1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "3") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0,1,0"))
                                 (rule "eqSymm" (formula "3") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,1,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,1,1,0"))
                                 (rule "mul_literals" (formula "3") (term "0,1,1,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,1,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0,0,1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0,0,1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "3") (term "0,1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0,1,0"))
                                 (rule "eqSymm" (formula "3") (term "1,0"))
                                 (rule "eqSeqDef" (formula "18") (term "1,0") (inst "iv=iv"))
                                 (rule "getOfSeqDef" (formula "18") (term "1,1,0,1,1,0"))
                                 (rule "castDel" (formula "18") (term "2,1,1,0,1,1,0"))
                                 (rule "castDel" (formula "18") (term "1,1,1,0,1,1,0"))
                                 (rule "add_zero_right" (formula "18") (term "0,2,1,1,1,0,1,1,0"))
                                 (rule "polySimp_elimSub" (formula "18") (term "1,1,0,1,1,0,1,1,0"))
                                 (rule "times_zero_2" (formula "18") (term "1,1,1,0,1,1,0,1,1,0"))
                                 (rule "add_zero_right" (formula "18") (term "1,1,0,1,1,0,1,1,0"))
                                 (rule "getOfSeqDef" (formula "18") (term "0,1,0,1,1,0"))
                                 (rule "castDel" (formula "18") (term "1,0,1,0,1,1,0"))
                                 (rule "castDel" (formula "18") (term "2,0,1,0,1,1,0"))
                                 (rule "add_zero_right" (formula "18") (term "0,2,1,0,1,0,1,1,0"))
                                 (rule "polySimp_elimSub" (formula "18") (term "1,1,0,0,1,0,1,1,0"))
                                 (rule "times_zero_2" (formula "18") (term "1,1,1,0,0,1,0,1,1,0"))
                                 (rule "add_zero_right" (formula "18") (term "1,1,0,0,1,0,1,1,0"))
                                 (rule "lenOfSeqDef" (formula "18") (term "1,0,1,0"))
                                 (rule "polySimp_elimSub" (formula "18") (term "1,1,0,1,0"))
                                 (rule "times_zero_2" (formula "18") (term "1,1,1,0,1,0"))
                                 (rule "add_zero_right" (formula "18") (term "1,1,0,1,0"))
                                 (rule "lenOfSeqDef" (formula "18") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_elimSub" (formula "18") (term "1,1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "18") (term "1,1,1,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "18") (term "1,1,1,0,0,1,1,0"))
                                 (rule "lenOfSeqDef" (formula "18") (term "0,0,1,0"))
                                 (rule "polySimp_elimSub" (formula "18") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "18") (term "1,1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "18") (term "1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,1,1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,1,1,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,1,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1,0,1,0"))
                                 (rule "add_zero_right" (formula "18") (term "0,0,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "18") (term "0,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0,1,0"))
                                 (rule "add_zero_right" (formula "18") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,1,1,0,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,1,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,1,1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,1,1,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,1,0,1,1,0,1,1,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,1,0,1,1,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,1,1,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,1,1,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,1,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,1,0,1,1,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,1,0,0,1,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,1,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,1,0,1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "0,0,1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "0,0,1,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "0,0,0,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,1,1,0"))
                                 (rule "pullOutSelect" (formula "36") (term "1,0") (inst "selectSK=arr_101"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")) (ifInst ""  (formula "15")))
                                 (rule "applyEqReverse" (formula "37") (term "1,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "narrowSelectArrayType" (formula "36") (term "1,0") (ifseqformula "10") (ifseqformula "35"))
                                 (builtin "One Step Simplification" (formula "36"))
                                 (rule "closeTrue" (formula "36"))
                              )
                           )
                        )
                        (branch "CUT: array2seq(heapAfter_addEntry, result_0) = array2seq(heapAfter_first, result_0) FALSE"
                           (rule "hide_right" (formula "37") (userinteraction))
                           (rule "equalityToSeqGetAndSeqLenRight" (formula "31") (inst "iv=iv") (userinteraction))
                           (rule "andRight" (formula "31") (userinteraction))
                           (branch "Case 1"
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (ifseqformula "20"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "1") (ifseqformula "20"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "1") (ifseqformula "25"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,1") (ifseqformula "20"))
                              (rule "andLeft" (formula "18"))
                              (rule "andLeft" (formula "4"))
                              (rule "orRight" (formula "34"))
                              (rule "notLeft" (formula "20"))
                              (rule "eqSymm" (formula "28"))
                              (rule "eqSymm" (formula "33"))
                              (rule "eqSymm" (formula "3"))
                              (rule "eqSymm" (formula "15"))
                              (rule "eqSymm" (formula "16") (term "1,0"))
                              (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "32"))
                              (builtin "One Step Simplification" (formula "11"))
                              (rule "replace_known_right" (formula "23") (term "0,1") (ifseqformula "38"))
                              (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "39")))
                              (rule "replace_known_right" (formula "27") (term "0") (ifseqformula "36"))
                              (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "34")) (ifInst ""  (formula "35")))
                              (rule "polySimp_addComm0" (formula "6") (term "1"))
                              (rule "inEqSimp_ltToLeq" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "5"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "17"))
                              (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "4"))
                              (rule "inEqSimp_homoInEq1" (formula "13"))
                              (rule "polySimp_addComm1" (formula "13") (term "0"))
                              (rule "applyEq" (formula "5") (term "0,1,0") (ifseqformula "6"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                              (rule "mul_literals" (formula "5") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                              (rule "add_literals" (formula "5") (term "0,0,0"))
                              (rule "add_zero_left" (formula "5") (term "0,0"))
                              (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "17") (term "1") (ifseqformula "3"))
                              (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "24"))
                              (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "3"))
                              (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "5") (term "0,1,0") (ifseqformula "3"))
                              (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                              (rule "add_literals" (formula "5") (term "1,0"))
                              (rule "times_zero_1" (formula "5") (term "0"))
                              (rule "leq_literals" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1"))
                              (rule "polySimp_rightDist" (formula "12") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                              (rule "mul_literals" (formula "12") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                              (rule "add_literals" (formula "16") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "16") (term "1,0,0"))
                              (rule "add_literals" (formula "16") (term "0,0"))
                              (rule "qeq_literals" (formula "16") (term "0"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "true_left" (formula "16"))
                              (rule "array2seqDef" (formula "1") (term "0") (inst "u=u"))
                              (rule "lenOfSeqDefEQ" (formula "31") (term "1") (ifseqformula "1"))
                              (rule "eqSymm" (formula "31"))
                              (rule "polySimp_elimSub" (formula "31") (term "1,0"))
                              (rule "mul_literals" (formula "31") (term "1,1,0"))
                              (rule "add_zero_right" (formula "31") (term "1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0"))
                              (rule "array2seqDef" (formula "22") (term "0,1") (inst "u=u"))
                              (rule "eqSymm" (formula "22"))
                              (rule "array2seqDef" (formula "13") (term "0,0") (inst "u=u"))
                              (rule "narrowSelectArrayType" (formula "13") (term "2,0,0") (ifseqformula "6") (ifseqformula "30"))
                              (rule "nonNull" (formula "28") (inst "i=i"))
                              (rule "greater_literals" (formula "28") (term "0,1"))
                              (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "34")))
                              (rule "sub_literals" (formula "28") (term "2,1,0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                              (rule "applyEq" (formula "28") (term "0,1,0,0,1,0,0") (ifseqformula "5"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                              (rule "array2seqDef" (formula "1") (term "1") (inst "u=u"))
                              (rule "nonNull" (formula "17") (inst "i=i"))
                              (rule "sub_literals" (formula "17") (term "2,1,0,1,1"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "greater_literals" (formula "17") (term "0,1"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "andLeft" (formula "17"))
                              (rule "notLeft" (formula "17"))
                              (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "30"))
                              (builtin "One Step Simplification" (formula "9"))
                              (rule "narrowSelectArrayType" (formula "17") (term "0,0,1,0") (ifseqformula "6") (ifseqformula "30"))
                              (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                              (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0") (ifseqformula "3"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                              (rule "array2seqDef" (formula "26") (term "0,1,0") (inst "u=u"))
                              (rule "array2seqDef" (formula "14") (term "1") (inst "u=u"))
                              (rule "eqSymm" (formula "14"))
                              (rule "narrowSelectArrayType" (formula "14") (term "2,0") (ifseqformula "6") (ifseqformula "31"))
                              (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "14"))
                              (rule "array2seqDef" (formula "15") (term "1,1,0") (inst "u=u"))
                              (rule "eqSymm" (formula "15") (term "1,0"))
                              (rule "array2seqDef" (formula "12") (term "0,0") (inst "u=u"))
                              (rule "narrowSelectArrayType" (formula "12") (term "2,0,0") (ifseqformula "6") (ifseqformula "31"))
                              (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "14"))
                              (rule "array2seqDef" (formula "32") (term "0,0,1") (inst "u=u"))
                              (rule "eqSymm" (formula "32"))
                              (rule "array2seqDef" (formula "22") (term "1") (inst "u=u"))
                              (rule "eqSymm" (formula "22"))
                              (rule "lenOfSeqDefEQ" (formula "32") (term "0") (ifseqformula "22"))
                              (rule "polySimp_elimSub" (formula "32") (term "1,0"))
                              (rule "times_zero_2" (formula "32") (term "1,1,0"))
                              (rule "add_zero_right" (formula "32") (term "1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0"))
                              (rule "eqSymm" (formula "32"))
                              (rule "eqSeqDef" (formula "1") (inst "iv=iv"))
                              (rule "andLeft" (formula "1"))
                              (rule "lenOfSeqDef" (formula "1") (term "1"))
                              (rule "polySimp_elimSub" (formula "1") (term "1,1"))
                              (rule "times_zero_2" (formula "1") (term "1,1,1"))
                              (rule "add_zero_right" (formula "1") (term "1,1"))
                              (rule "lenOfSeqDef" (formula "1") (term "0"))
                              (rule "polySimp_elimSub" (formula "1") (term "1,0"))
                              (rule "times_zero_2" (formula "1") (term "1,1,0"))
                              (rule "add_zero_right" (formula "1") (term "1,0"))
                              (rule "getOfSeqDef" (formula "2") (term "0,1,0"))
                              (rule "castDel" (formula "2") (term "2,0,1,0"))
                              (rule "castDel" (formula "2") (term "1,0,1,0"))
                              (rule "add_zero_right" (formula "2") (term "0,2,1,0,1,0"))
                              (rule "eqSymm" (formula "2") (term "1,0"))
                              (rule "polySimp_elimSub" (formula "2") (term "1,1,0,1,1,0"))
                              (rule "mul_literals" (formula "2") (term "1,1,1,0,1,1,0"))
                              (rule "add_zero_right" (formula "2") (term "1,1,0,1,1,0"))
                              (rule "lenOfSeqDef" (formula "2") (term "1,1,0,0"))
                              (rule "polySimp_elimSub" (formula "2") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "2") (term "1,1,1,1,0,0"))
                              (rule "add_zero_right" (formula "2") (term "1,1,1,0,0"))
                              (rule "getOfSeqDef" (formula "2") (term "0,1,0"))
                              (rule "castDel" (formula "2") (term "1,0,1,0"))
                              (rule "castDel" (formula "2") (term "2,0,1,0"))
                              (rule "add_zero_right" (formula "2") (term "0,2,1,0,1,0"))
                              (rule "eqSymm" (formula "2") (term "1,0"))
                              (rule "polySimp_elimSub" (formula "2") (term "1,1,0,1,1,0"))
                              (rule "times_zero_2" (formula "2") (term "1,1,1,0,1,1,0"))
                              (rule "add_zero_right" (formula "2") (term "1,1,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1"))
                              (rule "add_zero_right" (formula "1") (term "0,0,1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "2") (term "0,1,1,0,0"))
                              (rule "add_zero_right" (formula "2") (term "0,0,1,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "2") (term "1,0,0,1,0"))
                              (rule "eqSymm" (formula "2") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "2") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "2") (term "1,0,0,1,0"))
                              (rule "eqSymm" (formula "2") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,1,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "2") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "2") (term "0,0,1,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "2") (term "0,0,0,1,0"))
                              (rule "apply_eq_monomials" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0,1,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "2") (term "1,0,0,1,0,0"))
                              (rule "add_literals" (formula "2") (term "1,1,1,0,0,1,0,0"))
                              (rule "times_zero_1" (formula "2") (term "1,1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "2") (term "1,0,0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "0,0,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,0,0,1,0"))
                              (rule "eqSymm" (formula "2") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,1,0,1,1,0"))
                              (rule "mul_literals" (formula "2") (term "0,1,1,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "2") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,0,0,1,0"))
                              (rule "eqSymm" (formula "2") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,1,0,1,1,0"))
                              (rule "mul_literals" (formula "2") (term "0,1,1,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,1,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,1,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0,0,1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0,0,1,1,1,0,0"))
                              (rule "array2seqDef" (formula "16") (term "1,1,0") (inst "u=u"))
                              (rule "eqSymm" (formula "16") (term "1,0"))
                              (rule "eqSeqDef2" (formula "15") (inst "iv=iv") (ifseqformula "15"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "eqSeqDef" (formula "15") (term "1,0") (inst "iv=iv"))
                              (rule "lenOfSeqDef" (formula "15") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_elimSub" (formula "15") (term "1,1,1,0,0,1,1,0"))
                              (rule "times_zero_2" (formula "15") (term "1,1,1,1,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "15") (term "1,1,1,0,0,1,1,0"))
                              (rule "getOfSeqDef" (formula "15") (term "0,1,0,1,1,0"))
                              (rule "castDel" (formula "15") (term "2,0,1,0,1,1,0"))
                              (rule "castDel" (formula "15") (term "1,0,1,0,1,1,0"))
                              (rule "add_zero_right" (formula "15") (term "0,2,1,0,1,0,1,1,0"))
                              (rule "eqSymm" (formula "15") (term "1,0,1,1,0"))
                              (rule "polySimp_elimSub" (formula "15") (term "1,1,0,1,1,0,1,1,0"))
                              (rule "times_zero_2" (formula "15") (term "1,1,1,0,1,1,0,1,1,0"))
                              (rule "add_zero_right" (formula "15") (term "1,1,0,1,1,0,1,1,0"))
                              (rule "lenOfSeqDef" (formula "15") (term "1,0,1,0"))
                              (rule "polySimp_elimSub" (formula "15") (term "1,1,0,1,0"))
                              (rule "mul_literals" (formula "15") (term "1,1,1,0,1,0"))
                              (rule "add_zero_right" (formula "15") (term "1,1,0,1,0"))
                              (rule "lenOfSeqDef" (formula "15") (term "0,0,1,0"))
                              (rule "polySimp_elimSub" (formula "15") (term "1,0,0,1,0"))
                              (rule "times_zero_2" (formula "15") (term "1,1,0,0,1,0"))
                              (rule "add_zero_right" (formula "15") (term "1,0,0,1,0"))
                              (rule "getOfSeqDef" (formula "15") (term "0,1,0,1,1,0"))
                              (rule "castDel" (formula "15") (term "2,0,1,0,1,1,0"))
                              (rule "castDel" (formula "15") (term "1,0,1,0,1,1,0"))
                              (rule "add_zero_right" (formula "15") (term "0,2,1,0,1,0,1,1,0"))
                              (rule "eqSymm" (formula "15") (term "1,0,1,1,0"))
                              (rule "polySimp_elimSub" (formula "15") (term "1,1,0,1,1,0,1,1,0"))
                              (rule "mul_literals" (formula "15") (term "1,1,1,0,1,1,0,1,1,0"))
                              (rule "add_zero_right" (formula "15") (term "1,1,0,1,1,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,1,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "15") (term "0,0,1,1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,1,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,0,1,0"))
                              (rule "add_zero_right" (formula "15") (term "0,0,1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0,1,0"))
                              (rule "add_zero_right" (formula "15") (term "0,0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0,1,1,0"))
                              (rule "eqSymm" (formula "15") (term "1,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,1,1,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0,1,1,0"))
                              (rule "eqSymm" (formula "15") (term "1,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,1,1,0,1,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0,1,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,1,1,0,1,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "0,0,1,0,1,0"))
                              (rule "polySimp_elimOne" (formula "15") (term "0,0,1,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "15") (term "0,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,1,0"))
                              (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0,1,1,0"))
                              (rule "eqSymm" (formula "15") (term "1,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,1,1,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,1,0,1,1,0,1,1,0"))
                              (rule "mul_literals" (formula "15") (term "0,1,1,0,1,1,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,1,1,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,1,1,0,1,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,1,1,1,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "0,0,1,1,1,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "15") (term "0,0,1,1,1,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0,1,1,0"))
                              (rule "eqSymm" (formula "15") (term "1,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,1,1,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,1,0,1,1,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,1,1,0,1,1,0"))
                              (rule "mul_literals" (formula "15") (term "0,1,1,0,1,1,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,1,1,0,1,1,0"))
                              (rule "eqSeqDef2" (formula "22") (inst "iv=iv") (ifseqformula "22"))
                              (builtin "One Step Simplification" (formula "22"))
                              (rule "true_left" (formula "22"))
                              (rule "pullOutSelect" (formula "31") (term "0,0,0,0") (inst "selectSK=arr_45"))
                              (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "3") (term "0,1,1,1,0,0,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "3") (term "1,1,0,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "32") (term "0,1,0") (ifseqformula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "20"))
                              (rule "eqSymm" (formula "2"))
                              (rule "eqSymm" (formula "3") (term "1,0"))
                              (rule "eqSymm" (formula "32"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "33"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                              (rule "applyEqReverse" (formula "2") (term "0,0,0,1") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "32") (term "0,1,1") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "3") (term "0,1,1,1,0,1,1,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "2") (term "0,1,1") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "3") (term "1,1,1,1,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "32") (term "0,0,0,1") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "eqSymm" (formula "1"))
                              (rule "eqSymm" (formula "2") (term "1,0"))
                              (rule "eqSymm" (formula "31"))
                              (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "13"))
                              (rule "mul_literals" (formula "14") (term "0,0"))
                              (rule "add_zero_left" (formula "14") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                              (rule "mul_literals" (formula "14") (term "1"))
                              (rule "nnf_imp2or" (formula "28") (term "0"))
                              (rule "nnf_imp2or" (formula "18") (term "0"))
                              (rule "nnf_imp2or" (formula "16") (term "0"))
                              (rule "nnf_imp2or" (formula "2") (term "0"))
                              (rule "nnf_notAnd" (formula "28") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                              (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "28") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                              (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "18") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                              (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                              (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "16") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                              (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                              (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "2") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "2") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "2") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "2") (term "0,0,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "2") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0,0"))
                              (rule "mul_literals" (formula "2") (term "1,0,0,0"))
                              (rule "nnf_imp2or" (formula "16") (term "0,1,1,0"))
                              (rule "nnf_notAnd" (formula "16") (term "0,0,1,1,0"))
                              (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0,1,1,0"))
                              (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "16") (term "0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "16") (term "1,0,0,0,1,1,0"))
                              (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,1,1,0"))
                              (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,1,1,0"))
                              (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,1,1,0"))
                              (rule "add_zero_left" (formula "16") (term "0,0,1,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,1,1,0"))
                              (rule "arrayLengthIsAShort" (formula "6") (term "0"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "arrayLengthNotNegative" (formula "6") (term "0"))
                              (rule "applyEq" (formula "6") (term "0") (ifseqformula "7"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                              (rule "mul_literals" (formula "6") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "5"))
                              (rule "leq_literals" (formula "6") (term "0"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "true_left" (formula "6"))
                              (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "27") (ifseqformula "9"))
                              (rule "andLeft" (formula "27"))
                              (rule "notLeft" (formula "28"))
                              (rule "andLeft" (formula "27"))
                              (rule "andLeft" (formula "27"))
                              (rule "notLeft" (formula "29"))
                              (rule "andLeft" (formula "27"))
                              (rule "notLeft" (formula "29"))
                              (rule "notLeft" (formula "28"))
                              (rule "andLeft" (formula "27"))
                              (rule "andLeft" (formula "27"))
                              (rule "andLeft" (formula "27"))
                              (rule "andLeft" (formula "27"))
                              (rule "notLeft" (formula "27"))
                              (rule "nonNull" (formula "30") (inst "i=i"))
                              (rule "greater_literals" (formula "30") (term "0,1"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "sub_literals" (formula "30") (term "2,1,0,1"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "andLeft" (formula "30"))
                              (rule "notLeft" (formula "30"))
                              (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "29") (inst "i=i"))
                              (rule "sub_literals" (formula "29") (term "2,1,0,1,1"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "greater_literals" (formula "29") (term "0,1"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "andLeft" (formula "29"))
                              (rule "notLeft" (formula "29"))
                              (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "28") (inst "i=i"))
                              (rule "greater_literals" (formula "28") (term "0,1"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "sub_literals" (formula "28") (term "2,1,0,1"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "andLeft" (formula "28"))
                              (rule "notLeft" (formula "28"))
                              (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "27") (inst "i=i"))
                              (rule "greater_literals" (formula "27") (term "0,1"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "sub_literals" (formula "27") (term "2,1,0,1"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "andLeft" (formula "27"))
                              (rule "notLeft" (formula "27"))
                              (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                              (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_8"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "21"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "9"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")) (ifInst ""  (formula "9")))
                              (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_8"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "21"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "9"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")) (ifInst ""  (formula "9")))
                              (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_8"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "21"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "9"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")) (ifInst ""  (formula "9")))
                              (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_8"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "21"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "9"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")) (ifInst ""  (formula "9")))
                              (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_8"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "21"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "9"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")) (ifInst ""  (formula "9")))
                              (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "30") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_8"))
                              (rule "applyEq" (formula "37") (term "0") (ifseqformula "30"))
                              (rule "applyEq" (formula "31") (term "0,1,1,1,0,0") (ifseqformula "30"))
                              (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "24"))
                              (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "49")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,0,0") (ifseqformula "20"))
                              (rule "replace_known_left" (formula "30") (term "0,0,0,0") (ifseqformula "8"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "20"))
                              (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "49")) (ifInst ""  (formula "8")))
                              (rule "applyEqReverse" (formula "31") (term "0,1,1,1,0,0") (ifseqformula "30"))
                              (rule "applyEqReverse" (formula "31") (term "1,0,0,1,0") (ifseqformula "30"))
                              (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "30"))
                              (rule "hideAuxiliaryEq" (formula "30"))
                              (rule "pullOutSelect" (formula "29") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_8"))
                              (rule "applyEq" (formula "36") (term "0") (ifseqformula "29"))
                              (rule "applyEq" (formula "30") (term "0,1,1,1,0,0") (ifseqformula "29"))
                              (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "24"))
                              (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "49")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,0,0") (ifseqformula "20"))
                              (rule "replace_known_left" (formula "29") (term "0,0,0,0") (ifseqformula "8"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "20"))
                              (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "49")) (ifInst ""  (formula "8")))
                              (rule "applyEqReverse" (formula "30") (term "0,1,1,1,0,0") (ifseqformula "29"))
                              (rule "applyEqReverse" (formula "30") (term "1,0,0,1,0") (ifseqformula "29"))
                              (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "29"))
                              (rule "hideAuxiliaryEq" (formula "29"))
                              (rule "pullOutSelect" (formula "28") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_8"))
                              (rule "applyEq" (formula "29") (term "0,1,1,1,0,0") (ifseqformula "28"))
                              (rule "applyEq" (formula "35") (term "0") (ifseqformula "28"))
                              (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "24"))
                              (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "49")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,0,0") (ifseqformula "20"))
                              (rule "replace_known_left" (formula "28") (term "0,0,0,0") (ifseqformula "8"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "20"))
                              (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "49")) (ifInst ""  (formula "8")))
                              (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "28"))
                              (rule "applyEqReverse" (formula "29") (term "0,1,1,1,0,0") (ifseqformula "28"))
                              (rule "applyEqReverse" (formula "29") (term "1,0,0,1,0") (ifseqformula "28"))
                              (rule "hideAuxiliaryEq" (formula "28"))
                              (rule "pullOutSelect" (formula "27") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_9"))
                              (rule "applyEq" (formula "34") (term "0") (ifseqformula "27"))
                              (rule "applyEq" (formula "28") (term "0,1,1,1,0,0") (ifseqformula "27"))
                              (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "24"))
                              (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "49")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,0,0") (ifseqformula "20"))
                              (rule "replace_known_left" (formula "27") (term "0,0,0,0") (ifseqformula "8"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "20"))
                              (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "49")) (ifInst ""  (formula "8")))
                              (rule "applyEqReverse" (formula "28") (term "0,1,1,1,0,0") (ifseqformula "27"))
                              (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "27"))
                              (rule "applyEqReverse" (formula "28") (term "1,0,0,1,0") (ifseqformula "27"))
                              (rule "hideAuxiliaryEq" (formula "27"))
                              (rule "nnf_imp2or" (formula "30") (term "0"))
                              (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "17") (ifseqformula "9"))
                              (rule "andLeft" (formula "17"))
                              (rule "andLeft" (formula "17"))
                              (rule "notLeft" (formula "19"))
                              (rule "andLeft" (formula "17"))
                              (rule "notLeft" (formula "19"))
                              (rule "andLeft" (formula "17"))
                              (rule "notLeft" (formula "19"))
                              (rule "notLeft" (formula "18"))
                              (rule "andLeft" (formula "17"))
                              (rule "andLeft" (formula "17"))
                              (rule "andLeft" (formula "17"))
                              (rule "andLeft" (formula "17"))
                              (rule "notLeft" (formula "17"))
                              (rule "nonNull" (formula "20") (inst "i=i"))
                              (rule "greater_literals" (formula "20") (term "0,1"))
                              (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "39")))
                              (rule "sub_literals" (formula "20") (term "2,1,0"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "narrowSelectArrayType" (formula "20") (term "0,0,1,0") (ifseqformula "7") (ifseqformula "39"))
                              (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "19") (inst "i=i"))
                              (rule "greater_literals" (formula "19") (term "0,1"))
                              (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "38")))
                              (rule "sub_literals" (formula "19") (term "2,1,0"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "narrowSelectArrayType" (formula "19") (term "0,0,1,0") (ifseqformula "7") (ifseqformula "38"))
                              (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "18") (inst "i=i"))
                              (rule "greater_literals" (formula "18") (term "0,1"))
                              (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "37")))
                              (rule "sub_literals" (formula "18") (term "2,1,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "narrowSelectArrayType" (formula "18") (term "0,0,1,0") (ifseqformula "7") (ifseqformula "37"))
                              (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "17") (inst "i=i"))
                              (rule "sub_literals" (formula "17") (term "2,1,0,1,1"))
                              (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "36")))
                              (rule "greater_literals" (formula "17") (term "0"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "narrowSelectArrayType" (formula "17") (term "0,0,1,0") (ifseqformula "7") (ifseqformula "36"))
                              (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                              (rule "nnf_imp2or" (formula "32") (term "0"))
                              (rule "arrayLengthNotNegative" (formula "4") (term "0"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                              (rule "arrayLengthIsAShort" (formula "4") (term "0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "nnf_imp2or" (formula "31") (term "0"))
                              (rule "nnf_imp2or" (formula "30") (term "0"))
                              (rule "commute_or_2" (formula "34") (term "0"))
                              (rule "nnf_notAnd" (formula "33") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0"))
                              (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "33") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                              (rule "mul_literals" (formula "33") (term "1,0,0,0"))
                              (rule "commute_or_2" (formula "21") (term "0"))
                              (rule "arrayLengthIsAShort" (formula "13") (term "1,1"))
                              (builtin "One Step Simplification" (formula "13"))
                              (rule "true_left" (formula "13"))
                              (rule "arrayLengthNotNegative" (formula "13") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "15"))
                              (rule "leq_literals" (formula "13") (term "0"))
                              (builtin "One Step Simplification" (formula "13"))
                              (rule "true_left" (formula "13"))
                              (rule "nnf_imp2or" (formula "20") (term "0"))
                              (rule "arrayLengthIsAShort" (formula "3") (term "0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "true_left" (formula "3"))
                              (rule "arrayLengthNotNegative" (formula "3") (term "0"))
                              (rule "nnf_imp2or" (formula "20") (term "0"))
                              (rule "commute_or_2" (formula "2") (term "0"))
                              (rule "nnf_imp2or" (formula "19") (term "0"))
                              (rule "nnf_imp2or" (formula "18") (term "0"))
                              (rule "nnf_notAnd" (formula "33") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0"))
                              (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "33") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                              (rule "mul_literals" (formula "33") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "32") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "32") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0"))
                              (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "32") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0"))
                              (rule "mul_literals" (formula "32") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "31") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
                              (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0"))
                              (rule "add_literals" (formula "31") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                              (rule "mul_literals" (formula "31") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                              (rule "equalityToSeqGetAndSeqLenLeft" (formula "30") (inst "iv=iv"))
                              (rule "andLeft" (formula "30"))
                              (rule "lenOfSeqConcat" (formula "30") (term "0"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "polySimp_homoEq" (formula "30"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "30") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                              (rule "mul_literals" (formula "30") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "30") (term "0"))
                              (rule "polySimp_addComm0" (formula "30") (term "0,0"))
                              (rule "lenOfSeqConcat" (formula "31") (term "1,1,0,0"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "polySimp_addComm0" (formula "31") (term "1,1,0,0"))
                              (rule "lenOfSeqConcatEQ" (formula "30") (term "1,0,0") (ifseqformula "32"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "polySimp_addComm0" (formula "30") (term "1,0,0"))
                              (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                              (rule "add_literals" (formula "30") (term "0,0,0"))
                              (rule "add_zero_left" (formula "30") (term "0,0"))
                              (rule "polySimp_pullOutFactor1" (formula "30") (term "0"))
                              (rule "add_literals" (formula "30") (term "1,0"))
                              (rule "times_zero_1" (formula "30") (term "0"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "true_left" (formula "30"))
                              (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                              (rule "getOfSeqConcat" (formula "30") (term "0,1,0"))
                              (rule "polySimp_elimSub" (formula "30") (term "1,2,0,1,0"))
                              (rule "polySimp_addComm0" (formula "30") (term "1,2,0,1,0"))
                              (rule "getOfSeqSingleton" (formula "30") (term "2,0,1,0"))
                              (rule "castDel" (formula "30") (term "2,2,0,1,0"))
                              (rule "castDel" (formula "30") (term "1,2,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,1,0"))
                              (rule "polySimp_sepPosMonomial" (formula "30") (term "0,2,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,0,2,0,1,0"))
                              (rule "polySimp_elimOne" (formula "30") (term "1,0,2,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,1,0"))
                              (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,1,0"))
                              (rule "getOfSeqConcatEQ" (formula "30") (term "1,1,0") (ifseqformula "31"))
                              (rule "eqSymm" (formula "30") (term "1,0"))
                              (rule "polySimp_elimSub" (formula "30") (term "1,2,0,1,0"))
                              (rule "polySimp_addComm0" (formula "30") (term "1,2,0,1,0"))
                              (rule "getOfSeqSingleton" (formula "30") (term "2,0,1,0"))
                              (rule "castDel" (formula "30") (term "1,2,0,1,0"))
                              (rule "castDel" (formula "30") (term "2,2,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,1,0"))
                              (rule "polySimp_sepPosMonomial" (formula "30") (term "0,2,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,0,2,0,1,0"))
                              (rule "polySimp_elimOne" (formula "30") (term "1,0,2,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,1,0"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "true_left" (formula "30"))
                              (rule "arrayLengthNotNegative" (formula "30") (term "1,0,1,0"))
                              (rule "replace_known_left" (formula "49") (term "0,1") (ifseqformula "30"))
                              (builtin "One Step Simplification" (formula "49"))
                              (rule "arrayLengthIsAShort" (formula "31") (term "1,0,1,0"))
                              (builtin "One Step Simplification" (formula "31"))
                              (rule "true_left" (formula "31"))
                              (rule "nnf_notAnd" (formula "21") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
                              (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "21") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                              (rule "mul_literals" (formula "21") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "21") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "20") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
                              (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                              (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                              (rule "commute_or_2" (formula "17") (term "0,1,1,0"))
                              (rule "nnf_notAnd" (formula "19") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                              (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                              (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "18") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                              (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                              (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                              (rule "ifthenelse_to_or_left" (formula "17") (term "0,1,0"))
                              (rule "eqSymm" (formula "17") (term "1,1,0,1,0"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "eqSymm" (formula "17") (term "1,0,0,1,0"))
                              (rule "inEqSimp_notGeq" (formula "17") (term "0,1,1,0,1,0"))
                              (rule "mul_literals" (formula "17") (term "1,0,0,0,1,1,0,1,0"))
                              (rule "add_literals" (formula "17") (term "0,0,0,1,1,0,1,0"))
                              (rule "add_zero_left" (formula "17") (term "0,0,1,1,0,1,0"))
                              (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0,1,0"))
                              (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0,1,0"))
                              (rule "add_literals" (formula "17") (term "0,0,0,0,0,1,0"))
                              (rule "add_zero_left" (formula "17") (term "0,0,0,0,1,0"))
                              (rule "ifthenelse_split" (formula "1") (term "1"))
                              (branch "result_0.length ≥ 1 TRUE"
                                 (rule "replace_known_left" (formula "3") (term "0,1,1,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "1"))
                                 (rule "leq_literals" (formula "31") (term "0"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "true_left" (formula "31"))
                                 (rule "ifthenelse_split" (formula "2") (term "0"))
                                 (branch " result_1[i_5]@anon_heap_addEntry«anonHeapFunction».length ≥ 1 TRUE"
                                    (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "49") (term "0,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "3") (term "1,1,1,0,0,1,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "49") (term "1,0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "49"))
                                    (rule "orRight" (formula "49"))
                                    (rule "eqSymm" (formula "50"))
                                    (rule "inEqSimp_geqRight" (formula "49"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_contradEq3" (formula "50") (ifseqformula "1"))
                                    (rule "mul_literals" (formula "50") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "50") (term "0,0"))
                                    (rule "qeq_literals" (formula "50") (term "0"))
                                    (builtin "One Step Simplification" (formula "50"))
                                    (rule "false_right" (formula "50"))
                                    (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "2") (term "0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "closeFalse" (formula "2"))
                                 )
                                 (branch " result_1[i_5]@anon_heap_addEntry«anonHeapFunction».length ≥ 1 FALSE"
                                    (rule "eqSymm" (formula "2"))
                                    (rule "inEqSimp_geqRight" (formula "38"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "applyEq" (formula "4") (term "1,1,0") (ifseqformula "3"))
                                    (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "2"))
                                    (rule "closeFalse" (formula "2"))
                                 )
                              )
                              (branch "result_0.length ≥ 1 FALSE"
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "replace_known_right" (formula "2") (term "0,1,1,0") (ifseqformula "38"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "inEqSimp_geqRight" (formula "38"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_antiSymm" (formula "31") (ifseqformula "1"))
                                 (rule "applyEq" (formula "32") (term "0") (ifseqformula "31"))
                                 (rule "qeq_literals" (formula "32"))
                                 (rule "true_left" (formula "32"))
                                 (rule "applyEq" (formula "32") (term "1,0,1,0") (ifseqformula "31"))
                                 (rule "seqDef_lower_equals_upper" (formula "32") (term "0,1,0"))
                                 (rule "applyEq" (formula "1") (term "0") (ifseqformula "31"))
                                 (rule "leq_literals" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "applyEq" (formula "49") (term "1") (ifseqformula "30"))
                                 (builtin "One Step Simplification" (formula "49"))
                                 (rule "orRight" (formula "49"))
                                 (rule "notRight" (formula "49"))
                                 (rule "replace_known_right" (formula "2") (term "1") (ifseqformula "50"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "notLeft" (formula "2"))
                                 (rule "inEqSimp_geqRight" (formula "38"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "applyEq" (formula "3") (term "1,1,1,0,1,1,0,0") (ifseqformula "31"))
                                 (rule "add_literals" (formula "3") (term "1,1,0,1,1,0,0"))
                                 (rule "inEqSimp_strengthen1" (formula "2") (ifseqformula "50"))
                                 (rule "add_literals" (formula "2") (term "1"))
                                 (rule "inEqSimp_contradEq7" (formula "50") (ifseqformula "2"))
                                 (rule "times_zero_1" (formula "50") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "50") (term "0,0"))
                                 (rule "leq_literals" (formula "50") (term "0"))
                                 (builtin "One Step Simplification" (formula "50"))
                                 (rule "false_right" (formula "50"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "1") (term "0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                           (branch "Case 2"
                              (rule "allRight" (formula "31") (inst "sk=iv_12") (userinteraction))
                              (rule "impRight" (formula "31") (userinteraction))
                              (rule "getOfArray2seq" (formula "32") (term "0") (userinteraction))
                              (branch "Case 1"
                                 (rule "getOfArray2seq" (formula "32") (term "1") (userinteraction))
                                 (branch "Case 1"
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (ifseqformula "21"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "1") (ifseqformula "21"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "1") (ifseqformula "26"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,1") (ifseqformula "21"))
                                    (rule "andLeft" (formula "5"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "21"))
                                    (rule "orRight" (formula "36"))
                                    (rule "notLeft" (formula "22"))
                                    (rule "eqSymm" (formula "30"))
                                    (rule "eqSymm" (formula "5"))
                                    (rule "eqSymm" (formula "35"))
                                    (rule "eqSymm" (formula "17"))
                                    (rule "eqSymm" (formula "18") (term "1,0"))
                                    (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "replace_known_right" (formula "25") (term "0,1") (ifseqformula "40"))
                                    (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "41")))
                                    (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "38"))
                                    (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "36")) (ifInst ""  (formula "37")))
                                    (rule "polySimp_addComm0" (formula "8") (term "1"))
                                    (rule "inEqSimp_ltToLeq" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "7"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "19"))
                                    (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "6"))
                                    (rule "inEqSimp_commuteLeq" (formula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "15"))
                                    (rule "polySimp_addComm1" (formula "15") (term "0"))
                                    (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "8"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                    (rule "mul_literals" (formula "7") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                    (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                    (rule "add_literals" (formula "7") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "7") (term "0,0"))
                                    (rule "applyEq" (formula "19") (term "1") (ifseqformula "5"))
                                    (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "5"))
                                    (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "5"))
                                    (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "5"))
                                    (rule "polySimp_pullOutFactor1" (formula "7") (term "0"))
                                    (rule "add_literals" (formula "7") (term "1,0"))
                                    (rule "times_zero_1" (formula "7") (term "0"))
                                    (rule "leq_literals" (formula "7"))
                                    (rule "true_left" (formula "7"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "14"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1"))
                                    (rule "mul_literals" (formula "14") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                    (rule "polySimp_elimOne" (formula "4") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "4"))
                                    (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "18") (term "0,0"))
                                    (rule "qeq_literals" (formula "18") (term "0"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "array2seqDef" (formula "3") (term "0") (inst "u=u"))
                                    (rule "lenOfSeqDefEQ" (formula "2") (term "0") (ifseqformula "3"))
                                    (rule "polySimp_elimSub" (formula "2") (term "1,0"))
                                    (rule "times_zero_2" (formula "2") (term "1,1,0"))
                                    (rule "add_zero_right" (formula "2") (term "1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "2") (term "0,0"))
                                    (rule "array2seqDef" (formula "3") (term "1") (inst "u=u"))
                                    (rule "array2seqDef" (formula "15") (term "0,0") (inst "u=u"))
                                    (rule "narrowSelectArrayType" (formula "15") (term "2,0,0") (ifseqformula "8") (ifseqformula "32"))
                                    (rule "nonNull" (formula "30") (inst "i=i"))
                                    (rule "sub_literals" (formula "30") (term "2,1,0,1,1"))
                                    (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "36")))
                                    (rule "greater_literals" (formula "30") (term "0"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                                    (rule "applyEq" (formula "30") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                                    (rule "array2seqDef" (formula "24") (term "0") (inst "u=u"))
                                    (rule "array2seqDef" (formula "24") (term "0,1") (inst "u=u"))
                                    (rule "nonNull" (formula "19") (inst "i=i"))
                                    (rule "greater_literals" (formula "19") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "sub_literals" (formula "19") (term "2,1,0,1"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "andLeft" (formula "19"))
                                    (rule "notLeft" (formula "19"))
                                    (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "32"))
                                    (builtin "One Step Simplification" (formula "11"))
                                    (rule "narrowSelectArrayType" (formula "19") (term "0,0,1,0") (ifseqformula "8") (ifseqformula "32"))
                                    (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                    (rule "applyEq" (formula "19") (term "0,1,0,0,1,0,0") (ifseqformula "5"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                                    (rule "array2seqDef" (formula "28") (term "0,1,0") (inst "u=u"))
                                    (rule "array2seqDef" (formula "16") (term "1") (inst "u=u"))
                                    (rule "eqSymm" (formula "16"))
                                    (rule "narrowSelectArrayType" (formula "16") (term "2,0") (ifseqformula "8") (ifseqformula "33"))
                                    (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "16"))
                                    (rule "array2seqDef" (formula "17") (term "1,1,0") (inst "u=u"))
                                    (rule "eqSymm" (formula "17") (term "1,0"))
                                    (rule "array2seqDef" (formula "14") (term "0,0") (inst "u=u"))
                                    (rule "narrowSelectArrayType" (formula "14") (term "2,0,0") (ifseqformula "8") (ifseqformula "33"))
                                    (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "16"))
                                    (rule "eqSeqDef" (formula "3") (inst "iv=iv"))
                                    (rule "andLeft" (formula "3"))
                                    (rule "getOfSeqDef" (formula "4") (term "1,1,0"))
                                    (rule "castDel" (formula "4") (term "1,1,1,0"))
                                    (rule "castDel" (formula "4") (term "2,1,1,0"))
                                    (rule "add_zero_right" (formula "4") (term "0,2,1,1,1,0"))
                                    (rule "polySimp_elimSub" (formula "4") (term "1,1,0,1,1,0"))
                                    (rule "mul_literals" (formula "4") (term "1,1,1,0,1,1,0"))
                                    (rule "add_zero_right" (formula "4") (term "1,1,0,1,1,0"))
                                    (rule "lenOfSeqDef" (formula "4") (term "1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "4") (term "1,1,1,0,0"))
                                    (rule "times_zero_2" (formula "4") (term "1,1,1,1,0,0"))
                                    (rule "add_zero_right" (formula "4") (term "1,1,1,0,0"))
                                    (rule "getOfSeqDef" (formula "4") (term "0,1,0"))
                                    (rule "castDel" (formula "4") (term "2,0,1,0"))
                                    (rule "castDel" (formula "4") (term "1,0,1,0"))
                                    (rule "add_zero_right" (formula "4") (term "0,2,1,0,1,0"))
                                    (rule "polySimp_elimSub" (formula "4") (term "1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "4") (term "1,1,1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "4") (term "1,1,0,0,1,0"))
                                    (rule "lenOfSeqDef" (formula "3") (term "0"))
                                    (rule "eqSymm" (formula "3"))
                                    (rule "polySimp_elimSub" (formula "3") (term "1,1"))
                                    (rule "times_zero_2" (formula "3") (term "1,1,1"))
                                    (rule "add_zero_right" (formula "3") (term "1,1"))
                                    (rule "lenOfSeqDef" (formula "3") (term "0"))
                                    (rule "eqSymm" (formula "3"))
                                    (rule "polySimp_elimSub" (formula "3") (term "1,1"))
                                    (rule "times_zero_2" (formula "3") (term "1,1,1"))
                                    (rule "add_zero_right" (formula "3") (term "1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "4") (term "0,1,1,0,0"))
                                    (rule "add_zero_right" (formula "4") (term "0,0,1,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "3") (term "0,1"))
                                    (rule "add_zero_right" (formula "3") (term "0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "3") (term "0,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,1,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0,1,0"))
                                    (rule "apply_eq_monomials" (formula "4") (term "1,0,0,1,0,0") (ifseqformula "3"))
                                    (rule "polySimp_rightDist" (formula "4") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "4") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "4") (term "1,1,1,0,0,1,0,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "4") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,1,0,1,1,0"))
                                    (rule "mul_literals" (formula "4") (term "0,1,1,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "4") (term "0,1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0,0,1"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0,0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "4") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "0,1,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "0,0,1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "4") (term "0,0,1,1,1,0,0"))
                                    (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=arr_98"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")) (ifInst ""  (formula "41")))
                                    (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "eqSymm" (formula "35"))
                                    (rule "narrowSelectArrayType" (formula "35") (term "1") (ifseqformula "21") (ifseqformula "41"))
                                    (rule "array2seqDef" (formula "18") (term "1,1,0") (inst "u=u"))
                                    (rule "eqSymm" (formula "18") (term "1,0"))
                                    (rule "pullOutSelect" (formula "2") (term "0,1,0") (inst "selectSK=arr_99"))
                                    (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "4") (term "0,0,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "3") (term "0,0,0,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "5") (term "0,1,1,1,0,0,1,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "5") (term "1,1,0,1,0") (ifseqformula "2"))
                                    (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "28"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "39")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0") (ifseqformula "23"))
                                    (rule "eqSymm" (formula "4"))
                                    (rule "eqSymm" (formula "5") (term "1,0"))
                                    (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "37"))
                                    (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "38")))
                                    (rule "applyEqReverse" (formula "3") (term "0,0,0,0") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "4") (term "0,0,0,1") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "4") (term "0,1,1") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "5") (term "0,1,1,1,0,1,1,0") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "5") (term "1,1,1,1,0") (ifseqformula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "0,1,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "eqSymm" (formula "3"))
                                    (rule "eqSymm" (formula "4") (term "1,0"))
                                    (rule "eqSeqDef2" (formula "17") (inst "iv=iv") (ifseqformula "17"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "eqSeqDef2" (formula "24") (inst "iv=iv") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "true_left" (formula "24"))
                                    (rule "eqSeqDef" (formula "17") (term "1,0") (inst "iv=iv"))
                                    (rule "lenOfSeqDef" (formula "17") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_elimSub" (formula "17") (term "1,1,1,0,0,1,1,0"))
                                    (rule "times_zero_2" (formula "17") (term "1,1,1,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "17") (term "1,1,1,0,0,1,1,0"))
                                    (rule "lenOfSeqDef" (formula "17") (term "1,0,1,0"))
                                    (rule "polySimp_elimSub" (formula "17") (term "1,1,0,1,0"))
                                    (rule "mul_literals" (formula "17") (term "1,1,1,0,1,0"))
                                    (rule "add_zero_right" (formula "17") (term "1,1,0,1,0"))
                                    (rule "lenOfSeqDef" (formula "17") (term "0,0,1,0"))
                                    (rule "polySimp_elimSub" (formula "17") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "17") (term "1,1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "17") (term "1,0,0,1,0"))
                                    (rule "getOfSeqDef" (formula "17") (term "1,1,0,1,1,0"))
                                    (rule "castDel" (formula "17") (term "1,1,1,0,1,1,0"))
                                    (rule "castDel" (formula "17") (term "2,1,1,0,1,1,0"))
                                    (rule "add_zero_right" (formula "17") (term "0,2,1,1,1,0,1,1,0"))
                                    (rule "polySimp_elimSub" (formula "17") (term "1,1,0,1,1,0,1,1,0"))
                                    (rule "times_zero_2" (formula "17") (term "1,1,1,0,1,1,0,1,1,0"))
                                    (rule "add_zero_right" (formula "17") (term "1,1,0,1,1,0,1,1,0"))
                                    (rule "getOfSeqDef" (formula "17") (term "0,1,0,1,1,0"))
                                    (rule "castDel" (formula "17") (term "2,0,1,0,1,1,0"))
                                    (rule "castDel" (formula "17") (term "1,0,1,0,1,1,0"))
                                    (rule "add_zero_right" (formula "17") (term "0,2,1,0,1,0,1,1,0"))
                                    (rule "polySimp_elimSub" (formula "17") (term "1,1,0,0,1,0,1,1,0"))
                                    (rule "times_zero_2" (formula "17") (term "1,1,1,0,0,1,0,1,1,0"))
                                    (rule "add_zero_right" (formula "17") (term "1,1,0,0,1,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "17") (term "0,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,1,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1,0,1,0"))
                                    (rule "add_zero_right" (formula "17") (term "0,0,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "17") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,1,1,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,1,1,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,1,1,0,1,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,0,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "0,0,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "0,0,1,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "0,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,1,1,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,1,1,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,1,0,1,1,0,1,1,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,1,0,1,1,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,1,1,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,1,1,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1,0,1,1,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1,0,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,0,1,0,0,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1,1,0"))
                                    (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_100"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                    (rule "replaceKnownSelect_taclet001100000000_1" (formula "1") (term "2,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet001100000000_2" (formula "1") (term "2,0"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "22"))
                                    (rule "replace_known_left" (formula "1") (term "1,0,0,0") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                    (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "narrowSelectArrayType" (formula "33") (term "0") (ifseqformula "20") (ifseqformula "39"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "closeTrue" (formula "33"))
                                 )
                                 (branch "Case 2"
                                    (rule "lenOfArray2seq" (formula "1") (term "1,1") (userinteraction))
                                    (rule "close" (formula "32") (ifseqformula "1") (userinteraction))
                                 )
                              )
                              (branch "Case 2"
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (ifseqformula "21"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "1") (ifseqformula "21"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "1") (ifseqformula "26"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,1") (ifseqformula "21"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "andLeft" (formula "6"))
                                 (rule "orRight" (formula "37"))
                                 (rule "notLeft" (formula "22"))
                                 (rule "eqSymm" (formula "30"))
                                 (rule "eqSymm" (formula "5"))
                                 (rule "eqSymm" (formula "17"))
                                 (rule "eqSymm" (formula "36"))
                                 (rule "eqSymm" (formula "18") (term "1,0"))
                                 (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "34"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "replace_known_right" (formula "25") (term "0,1") (ifseqformula "41"))
                                 (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "42")))
                                 (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "39"))
                                 (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "37")) (ifInst ""  (formula "38")))
                                 (rule "polySimp_addComm0" (formula "8") (term "1"))
                                 (rule "inEqSimp_ltToLeq" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "inEqSimp_ltRight" (formula "35"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "8"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "8") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "20"))
                                 (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "2"))
                                 (rule "inEqSimp_commuteLeq" (formula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "16"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0"))
                                 (rule "applyEq" (formula "20") (term "1") (ifseqformula "6"))
                                 (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "9"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                 (rule "mul_literals" (formula "8") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                 (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "8") (term "0,0"))
                                 (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "36") (term "0,0") (ifseqformula "27"))
                                 (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "6"))
                                 (rule "applyEq" (formula "19") (term "0,1,0,0,1,0,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "5") (term "1,0,0") (ifseqformula "6"))
                                 (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "6"))
                                 (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
                                 (rule "add_literals" (formula "8") (term "1,0"))
                                 (rule "times_zero_1" (formula "8") (term "0"))
                                 (rule "leq_literals" (formula "8"))
                                 (rule "true_left" (formula "8"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "15"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1"))
                                 (rule "mul_literals" (formula "15") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "0"))
                                 (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                                 (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "19") (term "0,0"))
                                 (rule "qeq_literals" (formula "19") (term "0"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "array2seqDef" (formula "4") (term "1") (inst "u=u"))
                                 (rule "eqSymm" (formula "4"))
                                 (rule "array2seqDef" (formula "25") (term "0") (inst "u=u"))
                                 (rule "array2seqDef" (formula "25") (term "0,1") (inst "u=u"))
                                 (rule "nonNull" (formula "31") (inst "i=i"))
                                 (rule "greater_literals" (formula "31") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "37")))
                                 (rule "sub_literals" (formula "31") (term "2,1,0"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                                 (rule "applyEq" (formula "31") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                                 (rule "array2seqDef" (formula "16") (term "0,0") (inst "u=u"))
                                 (rule "narrowSelectArrayType" (formula "16") (term "2,0,0") (ifseqformula "9") (ifseqformula "33"))
                                 (rule "nonNull" (formula "20") (inst "i=i"))
                                 (rule "greater_literals" (formula "20") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "sub_literals" (formula "20") (term "2,1,0,1"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "notLeft" (formula "20"))
                                 (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "33"))
                                 (builtin "One Step Simplification" (formula "12"))
                                 (rule "narrowSelectArrayType" (formula "20") (term "0,0,1,0") (ifseqformula "9") (ifseqformula "33"))
                                 (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                                 (rule "applyEq" (formula "20") (term "0,1,0,0,1,0,0") (ifseqformula "6"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                                 (rule "array2seqDef" (formula "29") (term "0,1,0") (inst "u=u"))
                                 (rule "array2seqDef" (formula "17") (term "1") (inst "u=u"))
                                 (rule "eqSymm" (formula "17"))
                                 (rule "narrowSelectArrayType" (formula "17") (term "2,0") (ifseqformula "9") (ifseqformula "34"))
                                 (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "17"))
                                 (rule "array2seqDef" (formula "35") (term "0,1") (inst "u=u"))
                                 (rule "eqSymm" (formula "35"))
                                 (rule "getOfSeqDef" (formula "35") (term "0"))
                                 (rule "castDel" (formula "35") (term "1,0"))
                                 (rule "castDel" (formula "35") (term "2,0"))
                                 (rule "add_zero_right" (formula "35") (term "0,2,1,0"))
                                 (rule "polySimp_elimSub" (formula "35") (term "1,1,0,0"))
                                 (rule "times_zero_2" (formula "35") (term "1,1,1,0,0"))
                                 (rule "add_zero_right" (formula "35") (term "1,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                 (rule "replace_known_left" (formula "35") (term "0,0,0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "35") (term "0,0,0"))
                                 (rule "inEqSimp_contradInEq0" (formula "35") (term "0,0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "35") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "35") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "35") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "35") (term "0,0,0,0"))
                                 (rule "leq_literals" (formula "35") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "eqSymm" (formula "35"))
                                 (rule "array2seqDef" (formula "18") (term "0,1,0") (inst "u=u"))
                                 (rule "array2seqDef" (formula "18") (term "1,1,0") (inst "u=u"))
                                 (rule "array2seqDef" (formula "3") (term "0,0") (inst "u=u"))
                                 (rule "lenOfSeqDef" (formula "3") (term "0"))
                                 (rule "polySimp_elimSub" (formula "3") (term "1,0"))
                                 (rule "times_zero_2" (formula "3") (term "1,1,0"))
                                 (rule "add_zero_right" (formula "3") (term "1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3") (term "0,0"))
                                 (rule "add_zero_right" (formula "3") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0,0,0"))
                                 (rule "array2seqDef" (formula "15") (term "0,0") (inst "u=u"))
                                 (rule "narrowSelectArrayType" (formula "15") (term "2,0,0") (ifseqformula "9") (ifseqformula "34"))
                                 (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "17"))
                                 (rule "array2seqDef" (formula "4") (term "1") (inst "u=u"))
                                 (rule "eqSymm" (formula "4"))
                                 (rule "array2seqDef" (formula "35") (term "0,0,0") (inst "u=u"))
                                 (rule "eqSeqDef" (formula "18") (term "1,0") (inst "iv=iv"))
                                 (rule "lenOfSeqDef" (formula "18") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_elimSub" (formula "18") (term "1,1,1,0,0,1,1,0"))
                                 (rule "times_zero_2" (formula "18") (term "1,1,1,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "18") (term "1,1,1,0,0,1,1,0"))
                                 (rule "getOfSeqDef" (formula "18") (term "1,1,0,1,1,0"))
                                 (rule "castDel" (formula "18") (term "2,1,1,0,1,1,0"))
                                 (rule "castDel" (formula "18") (term "1,1,1,0,1,1,0"))
                                 (rule "add_zero_right" (formula "18") (term "0,2,1,1,1,0,1,1,0"))
                                 (rule "polySimp_elimSub" (formula "18") (term "1,1,0,1,1,0,1,1,0"))
                                 (rule "times_zero_2" (formula "18") (term "1,1,1,0,1,1,0,1,1,0"))
                                 (rule "add_zero_right" (formula "18") (term "1,1,0,1,1,0,1,1,0"))
                                 (rule "lenOfSeqDef" (formula "18") (term "1,0,1,0"))
                                 (rule "polySimp_elimSub" (formula "18") (term "1,1,0,1,0"))
                                 (rule "times_zero_2" (formula "18") (term "1,1,1,0,1,0"))
                                 (rule "add_zero_right" (formula "18") (term "1,1,0,1,0"))
                                 (rule "lenOfSeqDef" (formula "18") (term "0,0,1,0"))
                                 (rule "polySimp_elimSub" (formula "18") (term "1,0,0,1,0"))
                                 (rule "times_zero_2" (formula "18") (term "1,1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "18") (term "1,0,0,1,0"))
                                 (rule "getOfSeqDef" (formula "18") (term "0,1,0,1,1,0"))
                                 (rule "castDel" (formula "18") (term "2,0,1,0,1,1,0"))
                                 (rule "castDel" (formula "18") (term "1,0,1,0,1,1,0"))
                                 (rule "add_zero_right" (formula "18") (term "0,2,1,0,1,0,1,1,0"))
                                 (rule "polySimp_elimSub" (formula "18") (term "1,1,0,0,1,0,1,1,0"))
                                 (rule "mul_literals" (formula "18") (term "1,1,1,0,0,1,0,1,1,0"))
                                 (rule "add_zero_right" (formula "18") (term "1,1,0,0,1,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "18") (term "0,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,1,1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,1,1,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1,0,1,0"))
                                 (rule "add_zero_right" (formula "18") (term "0,0,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0,1,0"))
                                 (rule "add_zero_right" (formula "18") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,1,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,1,1,0,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,1,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,1,1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,1,1,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,1,0,1,1,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,1,1,0,1,1,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,1,0,1,1,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,1,1,0,1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "0,0,1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "0,0,1,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "0,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,1,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,1,0,1,1,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,1,0,0,1,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,1,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,1,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,1,1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "0,0,1,1,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "0,0,1,1,1,0,0,1,1,0"))
                                 (rule "eqSeqDef" (formula "4") (inst "iv=iv"))
                                 (rule "andLeft" (formula "4"))
                                 (rule "lenOfSeqDef" (formula "5") (term "1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "5") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "5") (term "1,1,1,1,0,0"))
                                 (rule "add_zero_right" (formula "5") (term "1,1,1,0,0"))
                                 (rule "lenOfSeqDef" (formula "4") (term "1"))
                                 (rule "polySimp_elimSub" (formula "4") (term "1,1"))
                                 (rule "times_zero_2" (formula "4") (term "1,1,1"))
                                 (rule "add_zero_right" (formula "4") (term "1,1"))
                                 (rule "getOfSeqDef" (formula "5") (term "0,1,0"))
                                 (rule "castDel" (formula "5") (term "2,0,1,0"))
                                 (rule "castDel" (formula "5") (term "1,0,1,0"))
                                 (rule "add_zero_right" (formula "5") (term "0,2,1,0,1,0"))
                                 (rule "eqSymm" (formula "5") (term "1,0"))
                                 (rule "polySimp_elimSub" (formula "5") (term "1,1,0,1,1,0"))
                                 (rule "times_zero_2" (formula "5") (term "1,1,1,0,1,1,0"))
                                 (rule "add_zero_right" (formula "5") (term "1,1,0,1,1,0"))
                                 (rule "lenOfSeqDef" (formula "4") (term "0"))
                                 (rule "polySimp_elimSub" (formula "4") (term "1,0"))
                                 (rule "times_zero_2" (formula "4") (term "1,1,0"))
                                 (rule "add_zero_right" (formula "4") (term "1,0"))
                                 (rule "getOfSeqDef" (formula "5") (term "0,1,0"))
                                 (rule "castDel" (formula "5") (term "1,0,1,0"))
                                 (rule "castDel" (formula "5") (term "2,0,1,0"))
                                 (rule "add_zero_right" (formula "5") (term "0,2,1,0,1,0"))
                                 (rule "eqSymm" (formula "5") (term "1,0"))
                                 (rule "polySimp_elimSub" (formula "5") (term "1,1,0,1,1,0"))
                                 (rule "times_zero_2" (formula "5") (term "1,1,1,0,1,1,0"))
                                 (rule "add_zero_right" (formula "5") (term "1,1,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "5") (term "0,1,1,0,0"))
                                 (rule "add_zero_right" (formula "5") (term "0,0,1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "4") (term "0,1"))
                                 (rule "add_zero_right" (formula "4") (term "0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0"))
                                 (rule "add_zero_right" (formula "4") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0,1,0"))
                                 (rule "eqSymm" (formula "5") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0,1,0"))
                                 (rule "eqSymm" (formula "5") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,1,1,0"))
                                 (rule "apply_eq_monomials" (formula "5") (term "1,0,0,1,0,0") (ifseqformula "4"))
                                 (rule "polySimp_rightDist" (formula "5") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,0,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,0,1,0,0,1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "5") (term "1,0,0,1,0,0"))
                                 (rule "add_literals" (formula "5") (term "1,1,1,0,0,1,0,0"))
                                 (rule "times_zero_1" (formula "5") (term "1,1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "5") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "0,0,1"))
                                 (rule "polySimp_elimOne" (formula "4") (term "0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "4") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0,1,0"))
                                 (rule "eqSymm" (formula "5") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,1,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,1,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,1,1,0"))
                                 (rule "mul_literals" (formula "5") (term "0,1,1,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "5") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0,1,0"))
                                 (rule "eqSymm" (formula "5") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,1,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,1,0,1,1,0"))
                                 (rule "mul_literals" (formula "5") (term "0,1,1,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "5") (term "0,1,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "0,0,1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "0,0,1,1,1,0,0"))
                                 (rule "eqSeqDef2" (formula "18") (inst "iv=iv") (ifseqformula "18"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "eqSeqDef2" (formula "25") (inst "iv=iv") (ifseqformula "25"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "true_left" (formula "25"))
                                 (rule "pullOutSelect" (formula "4") (term "0,1,0") (inst "selectSK=arr_85"))
                                 (rule "applyEq" (formula "6") (term "0,1,1,1,0,0,1,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "5") (term "0,0,0,0") (ifseqformula "4"))
                                 (rule "applyEq" (formula "6") (term "1,1,0,1,0") (ifseqformula "4"))
                                 (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "27"))
                                 (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "38")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,0,0") (ifseqformula "23"))
                                 (rule "eqSymm" (formula "5"))
                                 (rule "eqSymm" (formula "6") (term "1,0"))
                                 (rule "replace_known_right" (formula "4") (term "1,0,0,0") (ifseqformula "37"))
                                 (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "36")))
                                 (rule "applyEqReverse" (formula "6") (term "1,1,1,1,0") (ifseqformula "4"))
                                 (rule "applyEqReverse" (formula "5") (term "0,0,0,1") (ifseqformula "4"))
                                 (rule "applyEqReverse" (formula "5") (term "0,1,1") (ifseqformula "4"))
                                 (rule "applyEqReverse" (formula "6") (term "0,1,1,1,0,1,1,0") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "eqSymm" (formula "4"))
                                 (rule "eqSymm" (formula "5") (term "1,0"))
                                 (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "16"))
                                 (rule "times_zero_1" (formula "17") (term "0,0"))
                                 (rule "add_zero_left" (formula "17") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                 (rule "mul_literals" (formula "17") (term "1"))
                                 (rule "nnf_imp2or" (formula "31") (term "0"))
                                 (rule "nnf_imp2or" (formula "21") (term "0"))
                                 (rule "nnf_imp2or" (formula "19") (term "0"))
                                 (rule "nnf_imp2or" (formula "5") (term "0"))
                                 (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "31") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                                 (rule "mul_literals" (formula "31") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "21") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "21") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "21") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                 (rule "mul_literals" (formula "21") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                 (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "5") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "5") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "5") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "5") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "5") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "5") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "5") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0"))
                                 (rule "mul_literals" (formula "5") (term "1,0,0,0"))
                                 (rule "nnf_imp2or" (formula "19") (term "0,1,1,0"))
                                 (rule "nnf_notAnd" (formula "19") (term "0,0,1,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,1,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "19") (term "0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0,1,1,0"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "19") (term "0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "19") (term "1,0,0,0,1,1,0"))
                                 (rule "arrayLengthIsAShort" (formula "9") (term "0"))
                                 (builtin "One Step Simplification" (formula "9"))
                                 (rule "true_left" (formula "9"))
                                 (rule "arrayLengthNotNegative" (formula "9") (term "0"))
                                 (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                 (rule "mul_literals" (formula "9") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "8"))
                                 (rule "leq_literals" (formula "9") (term "0"))
                                 (builtin "One Step Simplification" (formula "9"))
                                 (rule "true_left" (formula "9"))
                                 (rule "arrayLengthIsAShort" (formula "7") (term "0"))
                                 (builtin "One Step Simplification" (formula "7"))
                                 (rule "true_left" (formula "7"))
                                 (rule "arrayLengthNotNegative" (formula "7") (term "0"))
                                 (rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
                                 (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "20") (ifseqformula "12"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "notLeft" (formula "21"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "notLeft" (formula "22"))
                                 (rule "notLeft" (formula "21"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "notLeft" (formula "22"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "notLeft" (formula "20"))
                                 (rule "nonNull" (formula "23") (inst "i=i"))
                                 (rule "sub_literals" (formula "23") (term "2,1,0,1,1"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "greater_literals" (formula "23") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "andLeft" (formula "23"))
                                 (rule "notLeft" (formula "23"))
                                 (rule "narrowSelectArrayType" (formula "23") (term "0,0,1,0") (ifseqformula "10") (ifseqformula "36"))
                                 (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                                 (rule "nonNull" (formula "22") (inst "i=i"))
                                 (rule "greater_literals" (formula "22") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "sub_literals" (formula "22") (term "2,1,0,1"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "andLeft" (formula "22"))
                                 (rule "notLeft" (formula "22"))
                                 (rule "narrowSelectArrayType" (formula "22") (term "0,0,1,0") (ifseqformula "10") (ifseqformula "36"))
                                 (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                                 (rule "nonNull" (formula "21") (inst "i=i"))
                                 (rule "greater_literals" (formula "21") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "sub_literals" (formula "21") (term "2,1,0,1"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "andLeft" (formula "21"))
                                 (rule "notLeft" (formula "21"))
                                 (rule "narrowSelectArrayType" (formula "21") (term "0,0,1,0") (ifseqformula "10") (ifseqformula "36"))
                                 (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                                 (rule "nonNull" (formula "20") (inst "i=i"))
                                 (rule "greater_literals" (formula "20") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "sub_literals" (formula "20") (term "2,1,0,1"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "notLeft" (formula "20"))
                                 (rule "narrowSelectArrayType" (formula "20") (term "0,0,1,0") (ifseqformula "10") (ifseqformula "36"))
                                 (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                                 (rule "nnf_imp2or" (formula "23") (term "0"))
                                 (rule "nnf_imp2or" (formula "22") (term "0"))
                                 (rule "nnf_imp2or" (formula "21") (term "0"))
                                 (rule "nnf_imp2or" (formula "20") (term "0"))
                                 (rule "nnf_notAnd" (formula "23") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "23") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                                 (rule "mul_literals" (formula "23") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "22") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
                                 (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "22") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                                 (rule "mul_literals" (formula "22") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "21") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "21") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "21") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                 (rule "mul_literals" (formula "21") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "20") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                 (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                                 (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "33") (ifseqformula "12"))
                                 (rule "andLeft" (formula "33"))
                                 (rule "andLeft" (formula "33"))
                                 (rule "notLeft" (formula "35"))
                                 (rule "andLeft" (formula "33"))
                                 (rule "notLeft" (formula "35"))
                                 (rule "notLeft" (formula "34"))
                                 (rule "andLeft" (formula "33"))
                                 (rule "andLeft" (formula "33"))
                                 (rule "notLeft" (formula "35"))
                                 (rule "andLeft" (formula "33"))
                                 (rule "andLeft" (formula "33"))
                                 (rule "andLeft" (formula "33"))
                                 (rule "notLeft" (formula "33"))
                                 (rule "nonNull" (formula "36") (inst "i=i"))
                                 (rule "greater_literals" (formula "36") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "36"))
                                 (rule "sub_literals" (formula "36") (term "2,1,0,1"))
                                 (builtin "One Step Simplification" (formula "36"))
                                 (rule "andLeft" (formula "36"))
                                 (rule "notLeft" (formula "36"))
                                 (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "36") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0"))
                                 (rule "nonNull" (formula "35") (inst "i=i"))
                                 (rule "greater_literals" (formula "35") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "sub_literals" (formula "35") (term "2,1,0,1"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "andLeft" (formula "35"))
                                 (rule "notLeft" (formula "35"))
                                 (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0"))
                                 (rule "nonNull" (formula "34") (inst "i=i"))
                                 (rule "greater_literals" (formula "34") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "sub_literals" (formula "34") (term "2,1,0,1"))
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "andLeft" (formula "34"))
                                 (rule "notLeft" (formula "34"))
                                 (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "34") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0"))
                                 (rule "nonNull" (formula "33") (inst "i=i"))
                                 (rule "sub_literals" (formula "33") (term "2,1,0,1,1"))
                                 (builtin "One Step Simplification" (formula "33"))
                                 (rule "greater_literals" (formula "33") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "33"))
                                 (rule "andLeft" (formula "33"))
                                 (rule "notLeft" (formula "33"))
                                 (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0"))
                                 (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_11"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "27"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "12"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")) (ifInst ""  (formula "12")))
                                 (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_11"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "63")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "27"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "12"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "63")) (ifInst ""  (formula "12")))
                                 (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_11"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "62")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "27"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "12"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "62")) (ifInst ""  (formula "12")))
                                 (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "44") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_11"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "61")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "27"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "12"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "61")) (ifInst ""  (formula "12")))
                                 (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_11"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "27"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "12"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")) (ifInst ""  (formula "12")))
                                 (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "36") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_11"))
                                 (rule "applyEq" (formula "37") (term "0,1,1,1,0,0") (ifseqformula "36"))
                                 (rule "applyEq" (formula "43") (term "0") (ifseqformula "36"))
                                 (rule "simplifySelectOfAnonEQ" (formula "36") (ifseqformula "30"))
                                 (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "59")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "0,0,0") (ifseqformula "26"))
                                 (rule "replace_known_left" (formula "36") (term "0,0,0,0") (ifseqformula "11"))
                                 (builtin "One Step Simplification" (formula "36"))
                                 (rule "simplifySelectOfAnonEQ" (formula "36") (ifseqformula "26"))
                                 (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "59")) (ifInst ""  (formula "11")))
                                 (rule "applyEqReverse" (formula "37") (term "1,0,0,1,0") (ifseqformula "36"))
                                 (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "36"))
                                 (rule "applyEqReverse" (formula "37") (term "0,1,1,1,0,0") (ifseqformula "36"))
                                 (rule "hideAuxiliaryEq" (formula "36"))
                                 (rule "pullOutSelect" (formula "35") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_11"))
                                 (rule "applyEq" (formula "36") (term "0,1,1,1,0,0") (ifseqformula "35"))
                                 (rule "applyEq" (formula "42") (term "0") (ifseqformula "35"))
                                 (rule "simplifySelectOfAnonEQ" (formula "35") (ifseqformula "30"))
                                 (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "58")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,0") (ifseqformula "26"))
                                 (rule "replace_known_left" (formula "35") (term "0,0,0,0") (ifseqformula "11"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "simplifySelectOfAnonEQ" (formula "35") (ifseqformula "26"))
                                 (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "58")) (ifInst ""  (formula "11")))
                                 (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "35"))
                                 (rule "applyEqReverse" (formula "36") (term "0,1,1,1,0,0") (ifseqformula "35"))
                                 (rule "applyEqReverse" (formula "36") (term "1,0,0,1,0") (ifseqformula "35"))
                                 (rule "hideAuxiliaryEq" (formula "35"))
                                 (rule "pullOutSelect" (formula "34") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_11"))
                                 (rule "applyEq" (formula "35") (term "0,1,1,1,0,0") (ifseqformula "34"))
                                 (rule "applyEq" (formula "41") (term "0") (ifseqformula "34"))
                                 (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "30"))
                                 (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "57")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "0,0,0") (ifseqformula "26"))
                                 (rule "replace_known_left" (formula "34") (term "0,0,0,0") (ifseqformula "11"))
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "26"))
                                 (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "57")) (ifInst ""  (formula "11")))
                                 (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "34"))
                                 (rule "applyEqReverse" (formula "35") (term "0,1,1,1,0,0") (ifseqformula "34"))
                                 (rule "applyEqReverse" (formula "35") (term "1,0,0,1,0") (ifseqformula "34"))
                                 (rule "hideAuxiliaryEq" (formula "34"))
                                 (rule "pullOutSelect" (formula "33") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_12"))
                                 (rule "applyEq" (formula "40") (term "0") (ifseqformula "33"))
                                 (rule "applyEq" (formula "34") (term "0,1,1,1,0,0") (ifseqformula "33"))
                                 (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "30"))
                                 (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "56")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "0,0,0") (ifseqformula "26"))
                                 (rule "replace_known_left" (formula "33") (term "0,0,0,0") (ifseqformula "11"))
                                 (builtin "One Step Simplification" (formula "33"))
                                 (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "26"))
                                 (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "56")) (ifInst ""  (formula "11")))
                                 (rule "applyEqReverse" (formula "34") (term "0,1,1,1,0,0") (ifseqformula "33"))
                                 (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "33"))
                                 (rule "applyEqReverse" (formula "34") (term "1,0,0,1,0") (ifseqformula "33"))
                                 (rule "hideAuxiliaryEq" (formula "33"))
                                 (rule "commute_or_2" (formula "37") (term "0"))
                                 (rule "arrayLengthIsAShort" (formula "1") (term "0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "arrayLengthNotNegative" (formula "1") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                 (rule "mul_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "arrayLengthNotNegative" (formula "17") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "19"))
                                 (rule "leq_literals" (formula "17") (term "0"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "arrayLengthIsAShort" (formula "17") (term "1,1"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "commute_or_2" (formula "25") (term "0"))
                                 (rule "arrayLengthIsAShort" (formula "7") (term "0"))
                                 (builtin "One Step Simplification" (formula "7"))
                                 (rule "true_left" (formula "7"))
                                 (rule "arrayLengthNotNegative" (formula "7") (term "0"))
                                 (rule "ifthenelse_split" (formula "4") (term "0"))
                                 (branch "result_0.length ≥ 1 TRUE"
                                    (rule "replace_known_left" (formula "6") (term "0,1") (ifseqformula "4"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "replace_known_left" (formula "7") (term "0,1,1,0,0") (ifseqformula "4"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "2"))
                                    (rule "andLeft" (formula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "5"))
                                    (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                    (rule "add_literals" (formula "5") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "5") (term "1,0"))
                                    (rule "add_zero_right" (formula "5") (term "0"))
                                    (rule "leq_literals" (formula "5"))
                                    (rule "closeFalse" (formula "5"))
                                 )
                                 (branch "result_0.length ≥ 1 FALSE"
                                    (rule "replace_known_right" (formula "6") (term "0,1,1,0,0") (ifseqformula "41"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "replace_known_right" (formula "5") (term "0,1") (ifseqformula "41"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "inEqSimp_geqRight" (formula "41"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "5"))
                                    (rule "times_zero_2" (formula "5") (term "1,0"))
                                    (rule "add_zero_right" (formula "5") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                    (rule "mul_literals" (formula "5") (term "1"))
                                    (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "5"))
                                    (rule "qeq_literals" (formula "4") (term "0"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "closeFalse" (formula "4"))
                                 )
                              )
                           )
                        )
                     )
                     (branch "CUT: array2seq(heapAfter_addEntry, result_1[i_5]@heapAfter_addEntry) = array2seq(heapAfter_addEntry, result_0) FALSE"
                        (rule "hide_right" (formula "36") (userinteraction))
                        (rule "equalityToSeqGetAndSeqLenLeft" (formula "26") (inst "iv=iv") (userinteraction))
                        (rule "andLeft" (formula "26") (userinteraction))
                        (rule "allLeftHide" (formula "27") (inst "t=i_5") (userinteraction))
                        (rule "impLeft" (formula "27") (userinteraction))
                        (branch "Case 1"
                           (rule "array2seq2dDef" (formula "31") (term "0,1,1") (inst "u=u") (userinteraction))
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (ifseqformula "19"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "1") (ifseqformula "19"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "1") (ifseqformula "24"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,1") (ifseqformula "19"))
                           (rule "andLeft" (formula "17"))
                           (rule "andLeft" (formula "3"))
                           (rule "orRight" (formula "35"))
                           (rule "notLeft" (formula "19"))
                           (rule "eqSymm" (formula "14"))
                           (rule "eqSymm" (formula "28"))
                           (rule "eqSymm" (formula "2"))
                           (rule "eqSymm" (formula "27"))
                           (rule "eqSymm" (formula "15") (term "1,0"))
                           (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "32"))
                           (builtin "One Step Simplification" (formula "10"))
                           (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "40"))
                           (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "39")))
                           (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "37"))
                           (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "35")) (ifInst ""  (formula "36")))
                           (rule "polySimp_addComm0" (formula "5") (term "1"))
                           (rule "lenOfSeqConcat" (formula "27") (term "0"))
                           (builtin "One Step Simplification" (formula "27"))
                           (rule "polySimp_homoEq" (formula "27"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "27") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,0"))
                           (rule "lenOfSeqDef" (formula "33") (term "1"))
                           (rule "polySimp_elimSub" (formula "33") (term "1,1"))
                           (rule "mul_literals" (formula "33") (term "1,1,1"))
                           (rule "add_zero_right" (formula "33") (term "1,1"))
                           (rule "inEqSimp_ltToLeq" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0"))
                           (rule "polySimp_addComm0" (formula "27") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                           (rule "inEqSimp_ltRight" (formula "33"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0"))
                           (rule "lenOfSeqConcatEQ" (formula "28") (term "1,0,0") (ifseqformula "29"))
                           (builtin "One Step Simplification" (formula "28"))
                           (rule "polySimp_addComm0" (formula "28") (term "1,0,0"))
                           (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                           (rule "add_literals" (formula "28") (term "0,0,0"))
                           (rule "add_zero_left" (formula "28") (term "0,0"))
                           (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                           (rule "add_literals" (formula "28") (term "1,0"))
                           (rule "times_zero_1" (formula "28") (term "0"))
                           (builtin "One Step Simplification" (formula "28"))
                           (rule "true_left" (formula "28"))
                           (rule "inEqSimp_commuteLeq" (formula "17"))
                           (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,1,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "4"))
                           (rule "inEqSimp_homoInEq1" (formula "13"))
                           (rule "polySimp_addComm1" (formula "13") (term "0"))
                           (rule "applyEq" (formula "1") (term "0,1,0,0,0,1,0") (ifseqformula "6"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,0,1,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0,0,1,0"))
                           (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "6"))
                           (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "17") (term "1") (ifseqformula "3"))
                           (rule "applyEq" (formula "5") (term "0,1,0") (ifseqformula "6"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                           (rule "mul_literals" (formula "5") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "5") (term "0"))
                           (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                           (rule "add_literals" (formula "5") (term "0,0,0"))
                           (rule "add_zero_left" (formula "5") (term "0,0"))
                           (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "3"))
                           (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "5") (term "0,1,0") (ifseqformula "3"))
                           (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                           (rule "add_literals" (formula "5") (term "1,0"))
                           (rule "times_zero_1" (formula "5") (term "0"))
                           (rule "leq_literals" (formula "5"))
                           (rule "true_left" (formula "5"))
                           (rule "applyEq" (formula "1") (term "1,1,0,1,0") (ifseqformula "3"))
                           (rule "applyEq" (formula "1") (term "0,0,0,0,1,0") (ifseqformula "3"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1"))
                           (rule "polySimp_rightDist" (formula "12") (term "1"))
                           (rule "mul_literals" (formula "12") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                           (rule "inEqSimp_invertInEq0" (formula "1") (term "0,0,1,0"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,0"))
                           (rule "replace_known_left" (formula "1") (term "0,0,1,0") (ifseqformula "4"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                           (rule "add_literals" (formula "1") (term "1,1,0"))
                           (rule "times_zero_1" (formula "1") (term "1,0"))
                           (rule "add_literals" (formula "1") (term "0"))
                           (rule "qeq_literals" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "Case 2"
                           (rule "array2seq2dDef" (formula "27") (term "0,0") (inst "u=u") (userinteraction))
                           (rule "array2seq2dDef" (formula "27") (term "0,0,1") (inst "u=u") (userinteraction))
                           (rule "getOfSeqConcat" (formula "27") (term "1") (userinteraction))
                           (rule "ifthenelse_split" (formula "27") (term "1") (userinteraction))
                           (branch " i_5 < seqDef{int u;}(0, messages.length, array2seq(heapAfter_first, messages[u]@heapAfter_first)).length TRUE"
                              (builtin "One Step Simplification" (formula "14"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (ifseqformula "19"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "1") (ifseqformula "19"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "1") (ifseqformula "24"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,1") (ifseqformula "19"))
                              (rule "andLeft" (formula "17"))
                              (rule "andLeft" (formula "3"))
                              (rule "orRight" (formula "36"))
                              (rule "notLeft" (formula "19"))
                              (rule "eqSymm" (formula "30"))
                              (rule "eqSymm" (formula "14"))
                              (rule "eqSymm" (formula "2"))
                              (rule "eqSymm" (formula "27"))
                              (rule "eqSymm" (formula "15") (term "1,0"))
                              (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "34"))
                              (builtin "One Step Simplification" (formula "10"))
                              (rule "replace_known_right" (formula "22") (term "0,1") (ifseqformula "40"))
                              (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "41")))
                              (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "38"))
                              (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "36")) (ifInst ""  (formula "37")))
                              (rule "polySimp_addComm0" (formula "5") (term "1"))
                              (rule "getOfSeqDef" (formula "29") (term "0"))
                              (rule "castDel" (formula "29") (term "2,0"))
                              (rule "castDel" (formula "29") (term "1,0"))
                              (rule "add_zero_right" (formula "29") (term "0,2,1,1,0"))
                              (rule "eqSymm" (formula "29"))
                              (rule "replace_known_left" (formula "29") (term "0,0,1") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "polySimp_elimSub" (formula "29") (term "1,0,1"))
                              (rule "mul_literals" (formula "29") (term "1,1,0,1"))
                              (rule "add_zero_right" (formula "29") (term "1,0,1"))
                              (rule "replace_known_left" (formula "29") (term "0,1") (ifseqformula "4"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "lenOfSeqDef" (formula "28") (term "1"))
                              (rule "polySimp_elimSub" (formula "28") (term "1,1"))
                              (rule "times_zero_2" (formula "28") (term "1,1,1"))
                              (rule "add_zero_right" (formula "28") (term "1,1"))
                              (rule "lenOfSeqConcat" (formula "27") (term "0"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "polySimp_homoEq" (formula "27"))
                              (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "27") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                              (rule "mul_literals" (formula "27") (term "0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0"))
                              (rule "getOfSeqDef" (formula "29") (term "0"))
                              (rule "castDel" (formula "29") (term "2,0"))
                              (rule "castDel" (formula "29") (term "1,0"))
                              (rule "add_zero_right" (formula "29") (term "0,2,1,1,0"))
                              (rule "replace_known_left" (formula "29") (term "0,0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "polySimp_elimSub" (formula "29") (term "1,0,0"))
                              (rule "mul_literals" (formula "29") (term "1,1,0,0"))
                              (rule "add_zero_right" (formula "29") (term "1,0,0"))
                              (rule "polySimp_addAssoc" (formula "27") (term "0"))
                              (rule "polySimp_addComm0" (formula "27") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "28") (term "0,1"))
                              (rule "add_zero_right" (formula "28") (term "0,0,1"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "16"))
                              (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "3"))
                              (rule "lenOfSeqConcatEQ" (formula "27") (term "1,0,0") (ifseqformula "30"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "polySimp_addComm0" (formula "27") (term "1,0,0"))
                              (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                              (rule "add_literals" (formula "27") (term "0,0,0"))
                              (rule "add_zero_left" (formula "27") (term "0,0"))
                              (rule "polySimp_pullOutFactor1" (formula "27") (term "0"))
                              (rule "add_literals" (formula "27") (term "1,0"))
                              (rule "times_zero_1" (formula "27") (term "0"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "true_left" (formula "27"))
                              (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "27"))
                              (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "27") (term "0"))
                              (rule "inEqSimp_homoInEq1" (formula "12"))
                              (rule "polySimp_addComm1" (formula "12") (term "0"))
                              (rule "applyEq" (formula "27") (term "1,0,1,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "16") (term "1") (ifseqformula "2"))
                              (rule "applyEq" (formula "28") (term "0,1,0,0,0") (ifseqformula "2"))
                              (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0"))
                              (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                              (rule "add_literals" (formula "28") (term "0,0,0"))
                              (rule "leq_literals" (formula "28") (term "0,0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "applyEq" (formula "27") (term "0,1,0,0,0,1,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "5"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                              (rule "mul_literals" (formula "4") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                              (rule "add_literals" (formula "4") (term "0,0,0"))
                              (rule "add_zero_left" (formula "4") (term "0,0"))
                              (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "2"))
                              (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "2"))
                              (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "2"))
                              (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                              (rule "add_literals" (formula "4") (term "1,0"))
                              (rule "times_zero_1" (formula "4") (term "0"))
                              (rule "leq_literals" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1"))
                              (rule "polySimp_rightDist" (formula "11") (term "1"))
                              (rule "mul_literals" (formula "11") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "26") (term "0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                              (rule "polySimp_elimOne" (formula "26") (term "0"))
                              (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
                              (rule "add_literals" (formula "15") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "15") (term "1,0,0"))
                              (rule "add_literals" (formula "15") (term "0,0"))
                              (rule "qeq_literals" (formula "15") (term "0"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "true_left" (formula "15"))
                              (rule "array2seqDef" (formula "21") (term "0,1") (inst "u=u"))
                              (rule "eqSymm" (formula "21"))
                              (rule "array2seqDef" (formula "32") (term "0") (inst "u=u"))
                              (rule "array2seqDef" (formula "32") (term "1") (inst "u=u"))
                              (rule "nonNull" (formula "29") (inst "i=i"))
                              (rule "greater_literals" (formula "29") (term "0,1"))
                              (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "35")))
                              (rule "sub_literals" (formula "29") (term "2,1,0"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                              (rule "applyEq" (formula "29") (term "0,1,0,0,1,0,0") (ifseqformula "4"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                              (rule "array2seqDef" (formula "12") (term "0,0") (inst "u=u"))
                              (rule "narrowSelectArrayType" (formula "12") (term "2,0,0") (ifseqformula "5") (ifseqformula "31"))
                              (rule "nonNull" (formula "16") (inst "i=i"))
                              (rule "sub_literals" (formula "16") (term "2,1,0,1,1"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "greater_literals" (formula "16") (term "0,1"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "andLeft" (formula "16"))
                              (rule "notLeft" (formula "16"))
                              (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "31"))
                              (builtin "One Step Simplification" (formula "8"))
                              (rule "narrowSelectArrayType" (formula "16") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "31"))
                              (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                              (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "2"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                              (rule "array2seqDef" (formula "27") (term "0,1,0") (inst "u=u"))
                              (rule "array2seqDef" (formula "13") (term "1") (inst "u=u"))
                              (rule "eqSymm" (formula "13"))
                              (rule "narrowSelectArrayType" (formula "13") (term "2,0") (ifseqformula "5") (ifseqformula "32"))
                              (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "13"))
                              (rule "array2seqDef" (formula "14") (term "1,1,0") (inst "u=u"))
                              (rule "eqSymm" (formula "14") (term "1,0"))
                              (rule "array2seqDef" (formula "26") (term "1") (inst "u=u"))
                              (rule "eqSymm" (formula "26"))
                              (rule "array2seqDef" (formula "11") (term "0,0") (inst "u=u"))
                              (rule "narrowSelectArrayType" (formula "11") (term "2,0,0") (ifseqformula "5") (ifseqformula "32"))
                              (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "13"))
                              (rule "array2seqDef" (formula "21") (term "1") (inst "u=u"))
                              (rule "eqSymm" (formula "21"))
                              (rule "eqSeqDef" (formula "33") (inst "iv=iv"))
                              (rule "lenOfSeqDef" (formula "33") (term "1,0"))
                              (rule "polySimp_elimSub" (formula "33") (term "1,1,0"))
                              (rule "times_zero_2" (formula "33") (term "1,1,1,0"))
                              (rule "add_zero_right" (formula "33") (term "1,1,0"))
                              (rule "lenOfSeqDef" (formula "33") (term "1,1,0,0,1"))
                              (rule "polySimp_elimSub" (formula "33") (term "1,1,1,0,0,1"))
                              (rule "mul_literals" (formula "33") (term "1,1,1,1,0,0,1"))
                              (rule "add_zero_right" (formula "33") (term "1,1,1,0,0,1"))
                              (rule "getOfSeqDef" (formula "33") (term "0,1,0,1"))
                              (rule "castDel" (formula "33") (term "2,0,1,0,1"))
                              (rule "castDel" (formula "33") (term "1,0,1,0,1"))
                              (rule "add_zero_right" (formula "33") (term "0,2,1,0,1,0,1"))
                              (rule "eqSymm" (formula "33") (term "1,0,1"))
                              (rule "polySimp_elimSub" (formula "33") (term "1,1,0,1,1,0,1"))
                              (rule "times_zero_2" (formula "33") (term "1,1,1,0,1,1,0,1"))
                              (rule "add_zero_right" (formula "33") (term "1,1,0,1,1,0,1"))
                              (rule "lenOfSeqDef" (formula "33") (term "0,0"))
                              (rule "polySimp_elimSub" (formula "33") (term "1,0,0"))
                              (rule "times_zero_2" (formula "33") (term "1,1,0,0"))
                              (rule "add_zero_right" (formula "33") (term "1,0,0"))
                              (rule "getOfSeqDef" (formula "33") (term "0,1,0,1"))
                              (rule "castDel" (formula "33") (term "1,0,1,0,1"))
                              (rule "castDel" (formula "33") (term "2,0,1,0,1"))
                              (rule "add_zero_right" (formula "33") (term "0,2,1,0,1,0,1"))
                              (rule "eqSymm" (formula "33") (term "1,0,1"))
                              (rule "polySimp_elimSub" (formula "33") (term "1,1,0,1,1,0,1"))
                              (rule "times_zero_2" (formula "33") (term "1,1,1,0,1,1,0,1"))
                              (rule "add_zero_right" (formula "33") (term "1,1,0,1,1,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "33") (term "0,1,0"))
                              (rule "add_zero_right" (formula "33") (term "0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "33") (term "0,1,1,0,0,1"))
                              (rule "add_zero_right" (formula "33") (term "0,0,1,1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,1,0,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0,0"))
                              (rule "add_zero_right" (formula "33") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,1,0,1"))
                              (rule "eqSymm" (formula "33") (term "1,0,1"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,1,1,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,1,0,1"))
                              (rule "eqSymm" (formula "33") (term "1,0,1"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,1,1,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,1,1,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,1,0,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "33") (term "0,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "33") (term "0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,1"))
                              (rule "mul_literals" (formula "33") (term "0,1,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,1,0,1"))
                              (rule "eqSymm" (formula "33") (term "1,0,1"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,1,1,0,1"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,1,0,1,1,0,1"))
                              (rule "mul_literals" (formula "33") (term "0,1,1,0,1,1,0,1"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,1,1,0,1"))
                              (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,1,1,0,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "0,1,1,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "0,0,1,1,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "33") (term "0,0,1,1,1,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,1,0,1"))
                              (rule "eqSymm" (formula "33") (term "1,0,1"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,1,1,0,1"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,1,0,1,1,0,1"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,1,1,0,1"))
                              (rule "mul_literals" (formula "33") (term "0,1,1,0,1,1,0,1"))
                              (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,1,1,0,1"))
                              (rule "array2seqDef" (formula "14") (term "1,1,0") (inst "u=u"))
                              (rule "eqSymm" (formula "14") (term "1,0"))
                              (rule "eqSeqDef2" (formula "13") (inst "iv=iv") (ifseqformula "13"))
                              (builtin "One Step Simplification" (formula "13"))
                              (rule "true_left" (formula "13"))
                              (rule "eqSeqDef2" (formula "20") (inst "iv=iv") (ifseqformula "20"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "true_left" (formula "20"))
                              (rule "eqSeqDef" (formula "13") (term "1,0") (inst "iv=iv"))
                              (rule "lenOfSeqDef" (formula "13") (term "0,0,1,0"))
                              (rule "eqSymm" (formula "13") (term "0,1,0"))
                              (rule "polySimp_elimSub" (formula "13") (term "1,1,0,1,0"))
                              (rule "times_zero_2" (formula "13") (term "1,1,1,0,1,0"))
                              (rule "add_zero_right" (formula "13") (term "1,1,0,1,0"))
                              (rule "getOfSeqDef" (formula "13") (term "1,1,0,1,1,0"))
                              (rule "castDel" (formula "13") (term "1,1,1,0,1,1,0"))
                              (rule "castDel" (formula "13") (term "2,1,1,0,1,1,0"))
                              (rule "add_zero_right" (formula "13") (term "0,2,1,1,1,0,1,1,0"))
                              (rule "polySimp_elimSub" (formula "13") (term "1,1,0,1,1,0,1,1,0"))
                              (rule "times_zero_2" (formula "13") (term "1,1,1,0,1,1,0,1,1,0"))
                              (rule "add_zero_right" (formula "13") (term "1,1,0,1,1,0,1,1,0"))
                              (rule "lenOfSeqDef" (formula "13") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_elimSub" (formula "13") (term "1,1,1,0,0,1,1,0"))
                              (rule "times_zero_2" (formula "13") (term "1,1,1,1,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "13") (term "1,1,1,0,0,1,1,0"))
                              (rule "getOfSeqDef" (formula "13") (term "0,1,0,1,1,0"))
                              (rule "castDel" (formula "13") (term "1,0,1,0,1,1,0"))
                              (rule "castDel" (formula "13") (term "2,0,1,0,1,1,0"))
                              (rule "add_zero_right" (formula "13") (term "0,2,1,0,1,0,1,1,0"))
                              (rule "polySimp_elimSub" (formula "13") (term "1,1,0,0,1,0,1,1,0"))
                              (rule "times_zero_2" (formula "13") (term "1,1,1,0,0,1,0,1,1,0"))
                              (rule "add_zero_right" (formula "13") (term "1,1,0,0,1,0,1,1,0"))
                              (rule "lenOfSeqDef" (formula "13") (term "0,0,1,0"))
                              (rule "eqSymm" (formula "13") (term "0,1,0"))
                              (rule "polySimp_elimSub" (formula "13") (term "1,1,0,1,0"))
                              (rule "times_zero_2" (formula "13") (term "1,1,1,0,1,0"))
                              (rule "add_zero_right" (formula "13") (term "1,1,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,1,1,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,1,1,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,1,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "13") (term "0,0,1,1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,1,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,0,1,0"))
                              (rule "add_zero_right" (formula "13") (term "0,0,1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0,1,0"))
                              (rule "add_zero_right" (formula "13") (term "0,0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,1,1,0,1,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,1,1,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,1,1,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,1,0,1,1,0,1,1,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,1,0,1,1,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,1,1,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,1,1,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1,0,1,1,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1,0,1,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "0,0,1,0,1,0"))
                              (rule "polySimp_elimOne" (formula "13") (term "0,0,1,0,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "13") (term "0,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1,1,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0,1,1,1,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "0,0,1,1,1,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "13") (term "0,0,1,1,1,0,0,1,1,0"))
                              (rule "pullOutSelect" (formula "24") (term "0,1,0") (inst "selectSK=arr_6"))
                              (rule "applyEq" (formula "25") (term "1,2,0") (ifseqformula "24"))
                              (rule "applyEq" (formula "32") (term "0,0,0,0,0") (ifseqformula "24"))
                              (rule "applyEq" (formula "32") (term "0,1,0,0") (ifseqformula "24"))
                              (rule "applyEq" (formula "32") (term "0,0,0,1,1,1,0,0,1") (ifseqformula "24"))
                              (rule "applyEq" (formula "32") (term "0,1,1,1,0,0,1,0,1") (ifseqformula "24"))
                              (rule "applyEq" (formula "32") (term "1,1,0,1,0,1") (ifseqformula "24"))
                              (rule "applyEq" (formula "32") (term "0,1,1,1,1,0,0,1") (ifseqformula "24"))
                              (rule "simplifySelectOfAnonEQ" (formula "24") (ifseqformula "21"))
                              (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "35")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,0,0") (ifseqformula "17"))
                              (rule "eqSymm" (formula "32") (term "0"))
                              (rule "eqSymm" (formula "32") (term "1,0,1"))
                              (rule "replace_known_right" (formula "24") (term "1,0,0,0") (ifseqformula "34"))
                              (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "33")))
                              (rule "applyEqReverse" (formula "32") (term "1,1,1,1,0,1") (ifseqformula "24"))
                              (rule "applyEqReverse" (formula "32") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "24"))
                              (rule "applyEqReverse" (formula "32") (term "0,0,0,1,0") (ifseqformula "24"))
                              (rule "applyEqReverse" (formula "32") (term "0,1,1,1,1,0,0,1") (ifseqformula "24"))
                              (rule "applyEqReverse" (formula "32") (term "0,1,1,0") (ifseqformula "24"))
                              (rule "applyEqReverse" (formula "25") (term "1,2,0") (ifseqformula "24"))
                              (rule "applyEqReverse" (formula "25") (term "0,1,0") (ifseqformula "24"))
                              (rule "applyEqReverse" (formula "32") (term "0,0,0,1,1,1,0,0,1") (ifseqformula "24"))
                              (rule "hideAuxiliaryEq" (formula "24"))
                              (rule "eqSymm" (formula "31") (term "1,0,1"))
                              (rule "eqSymm" (formula "31") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "11"))
                              (rule "times_zero_1" (formula "12") (term "0,0"))
                              (rule "add_zero_left" (formula "12") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                              (rule "mul_literals" (formula "12") (term "1"))
                              (rule "nnf_imp2or" (formula "28") (term "0"))
                              (rule "nnf_imp2or" (formula "16") (term "0"))
                              (rule "nnf_imp2or" (formula "14") (term "0"))
                              (rule "nnf_imp2or" (formula "32") (term "0,1"))
                              (rule "nnf_notAnd" (formula "28") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                              (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "28") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                              (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                              (rule "nnf_notAnd" (formula "16") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                              (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                              (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "14") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                              (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                              (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "32") (term "0,0,1"))
                              (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0,1"))
                              (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0,1"))
                              (rule "add_zero_right" (formula "32") (term "0,0,0,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0,1"))
                              (rule "mul_literals" (formula "32") (term "1,0,0,0,1"))
                              (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,1"))
                              (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,1"))
                              (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,1"))
                              (rule "add_zero_left" (formula "32") (term "0,0,1,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,1"))
                              (rule "nnf_imp2or" (formula "14") (term "0,1,1,0"))
                              (rule "nnf_notAnd" (formula "14") (term "0,0,1,1,0"))
                              (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0,1,1,0"))
                              (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0,1,1,0"))
                              (rule "add_literals" (formula "14") (term "0,0,0,1,0,0,1,1,0"))
                              (rule "add_zero_left" (formula "14") (term "0,0,1,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,1,1,0"))
                              (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "14") (term "0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "14") (term "1,0,0,0,1,1,0"))
                              (rule "arrayLengthIsAShort" (formula "4") (term "0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "arrayLengthNotNegative" (formula "4") (term "0"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                              (rule "mul_literals" (formula "4") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "3"))
                              (rule "leq_literals" (formula "4") (term "0"))
                              (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "arrayLengthNotNegative" (formula "2") (term "0"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                              (rule "arrayLengthIsAShort" (formula "2") (term "0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "27") (ifseqformula "7"))
                              (rule "andLeft" (formula "27"))
                              (rule "notLeft" (formula "28"))
                              (rule "andLeft" (formula "27"))
                              (rule "andLeft" (formula "27"))
                              (rule "notLeft" (formula "29"))
                              (rule "andLeft" (formula "27"))
                              (rule "notLeft" (formula "29"))
                              (rule "notLeft" (formula "28"))
                              (rule "andLeft" (formula "27"))
                              (rule "andLeft" (formula "27"))
                              (rule "andLeft" (formula "27"))
                              (rule "andLeft" (formula "27"))
                              (rule "notLeft" (formula "27"))
                              (rule "nonNull" (formula "30") (inst "i=i"))
                              (rule "sub_literals" (formula "30") (term "2,1,0,1,1"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "greater_literals" (formula "30") (term "0,1"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "andLeft" (formula "30"))
                              (rule "notLeft" (formula "30"))
                              (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "29") (inst "i=i"))
                              (rule "greater_literals" (formula "29") (term "0,1"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "sub_literals" (formula "29") (term "2,1,0,1"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "andLeft" (formula "29"))
                              (rule "notLeft" (formula "29"))
                              (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "28") (inst "i=i"))
                              (rule "greater_literals" (formula "28") (term "0,1"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "sub_literals" (formula "28") (term "2,1,0,1"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "andLeft" (formula "28"))
                              (rule "notLeft" (formula "28"))
                              (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "27") (inst "i=i"))
                              (rule "greater_literals" (formula "27") (term "0,1"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "sub_literals" (formula "27") (term "2,1,0,1"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "andLeft" (formula "27"))
                              (rule "notLeft" (formula "27"))
                              (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                              (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_5"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "19"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "7"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")) (ifInst ""  (formula "7")))
                              (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_5"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "19"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "7"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")) (ifInst ""  (formula "7")))
                              (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_5"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "19"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "7"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")) (ifInst ""  (formula "7")))
                              (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_5"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "19"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "7"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")) (ifInst ""  (formula "7")))
                              (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_5"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "19"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "7"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")) (ifInst ""  (formula "7")))
                              (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "30") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_5"))
                              (rule "applyEq" (formula "31") (term "0,1,1,1,0,0") (ifseqformula "30"))
                              (rule "applyEq" (formula "37") (term "0") (ifseqformula "30"))
                              (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "22"))
                              (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "49")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,0,0") (ifseqformula "18"))
                              (rule "replace_known_left" (formula "30") (term "0,0,0,0") (ifseqformula "6"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "18"))
                              (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "49")) (ifInst ""  (formula "6")))
                              (rule "applyEqReverse" (formula "31") (term "1,0,0,1,0") (ifseqformula "30"))
                              (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "30"))
                              (rule "applyEqReverse" (formula "31") (term "0,1,1,1,0,0") (ifseqformula "30"))
                              (rule "hideAuxiliaryEq" (formula "30"))
                              (rule "pullOutSelect" (formula "29") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_5"))
                              (rule "applyEq" (formula "30") (term "0,1,1,1,0,0") (ifseqformula "29"))
                              (rule "applyEq" (formula "36") (term "0") (ifseqformula "29"))
                              (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "22"))
                              (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "49")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,0,0") (ifseqformula "18"))
                              (rule "replace_known_left" (formula "29") (term "0,0,0,0") (ifseqformula "6"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "18"))
                              (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "49")) (ifInst ""  (formula "6")))
                              (rule "applyEqReverse" (formula "30") (term "1,0,0,1,0") (ifseqformula "29"))
                              (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "29"))
                              (rule "applyEqReverse" (formula "30") (term "0,1,1,1,0,0") (ifseqformula "29"))
                              (rule "hideAuxiliaryEq" (formula "29"))
                              (rule "pullOutSelect" (formula "28") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_5"))
                              (rule "applyEq" (formula "35") (term "0") (ifseqformula "28"))
                              (rule "applyEq" (formula "29") (term "0,1,1,1,0,0") (ifseqformula "28"))
                              (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "22"))
                              (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "49")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,0,0") (ifseqformula "18"))
                              (rule "replace_known_left" (formula "28") (term "0,0,0,0") (ifseqformula "6"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "18"))
                              (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "49")) (ifInst ""  (formula "6")))
                              (rule "applyEqReverse" (formula "29") (term "1,0,0,1,0") (ifseqformula "28"))
                              (rule "applyEqReverse" (formula "29") (term "0,1,1,1,0,0") (ifseqformula "28"))
                              (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "28"))
                              (rule "hideAuxiliaryEq" (formula "28"))
                              (rule "pullOutSelect" (formula "27") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_6"))
                              (rule "applyEq" (formula "28") (term "0,1,1,1,0,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "34") (term "0") (ifseqformula "27"))
                              (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "22"))
                              (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "49")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,0,0") (ifseqformula "18"))
                              (rule "replace_known_left" (formula "27") (term "0,0,0,0") (ifseqformula "6"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "18"))
                              (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "49")) (ifInst ""  (formula "6")))
                              (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "27"))
                              (rule "applyEqReverse" (formula "28") (term "0,1,1,1,0,0") (ifseqformula "27"))
                              (rule "applyEqReverse" (formula "28") (term "1,0,0,1,0") (ifseqformula "27"))
                              (rule "hideAuxiliaryEq" (formula "27"))
                              (rule "nnf_imp2or" (formula "30") (term "0"))
                              (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "15") (ifseqformula "7"))
                              (rule "andLeft" (formula "15"))
                              (rule "andLeft" (formula "15"))
                              (rule "notLeft" (formula "17"))
                              (rule "andLeft" (formula "15"))
                              (rule "notLeft" (formula "17"))
                              (rule "andLeft" (formula "15"))
                              (rule "notLeft" (formula "17"))
                              (rule "notLeft" (formula "16"))
                              (rule "andLeft" (formula "15"))
                              (rule "andLeft" (formula "15"))
                              (rule "andLeft" (formula "15"))
                              (rule "andLeft" (formula "15"))
                              (rule "notLeft" (formula "15"))
                              (rule "nonNull" (formula "18") (inst "i=i"))
                              (rule "greater_literals" (formula "18") (term "0,1"))
                              (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "39")))
                              (rule "sub_literals" (formula "18") (term "2,1,0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "narrowSelectArrayType" (formula "18") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "39"))
                              (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "17") (inst "i=i"))
                              (rule "greater_literals" (formula "17") (term "0,1"))
                              (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "38")))
                              (rule "sub_literals" (formula "17") (term "2,1,0"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "narrowSelectArrayType" (formula "17") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "38"))
                              (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "16") (inst "i=i"))
                              (rule "greater_literals" (formula "16") (term "0,1"))
                              (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "37")))
                              (rule "sub_literals" (formula "16") (term "2,1,0"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "narrowSelectArrayType" (formula "16") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "37"))
                              (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "15") (inst "i=i"))
                              (rule "sub_literals" (formula "15") (term "2,1,0,1,1"))
                              (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "36")))
                              (rule "greater_literals" (formula "15") (term "0"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "narrowSelectArrayType" (formula "15") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "36"))
                              (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                              (rule "nnf_imp2or" (formula "32") (term "0"))
                              (rule "ifthenelse_split" (formula "27") (term "0"))
                              (branch "i_5 ≥ 1 TRUE"
                                 (rule "inEqSimp_homoInEq1" (formula "28"))
                                 (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                 (rule "add_literals" (formula "28") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "28") (term "1,0"))
                                 (rule "add_zero_right" (formula "28") (term "0"))
                                 (rule "leq_literals" (formula "28"))
                                 (rule "closeFalse" (formula "28"))
                              )
                              (branch "i_5 ≥ 1 FALSE"
                                 (rule "inEqSimp_geqRight" (formula "36"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_homoInEq1" (formula "28"))
                                 (rule "times_zero_2" (formula "28") (term "1,0"))
                                 (rule "add_zero_right" (formula "28") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                                 (rule "mul_literals" (formula "28") (term "1"))
                                 (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "28"))
                                 (rule "qeq_literals" (formula "4") (term "0"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "closeFalse" (formula "4"))
                              )
                           )
                           (branch " i_5 < seqDef{int u;}(0, messages.length, array2seq(heapAfter_first, messages[u]@heapAfter_first)).length FALSE"
                              (builtin "One Step Simplification" (formula "14"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (ifseqformula "19"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "1") (ifseqformula "19"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "1") (ifseqformula "24"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,1") (ifseqformula "19"))
                              (rule "andLeft" (formula "17"))
                              (rule "andLeft" (formula "3"))
                              (rule "orRight" (formula "36"))
                              (rule "notLeft" (formula "19"))
                              (rule "eqSymm" (formula "14"))
                              (rule "eqSymm" (formula "29"))
                              (rule "eqSymm" (formula "2"))
                              (rule "eqSymm" (formula "27"))
                              (rule "eqSymm" (formula "15") (term "1,0"))
                              (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "33"))
                              (builtin "One Step Simplification" (formula "10"))
                              (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "41"))
                              (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "40")))
                              (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "38"))
                              (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "36")) (ifInst ""  (formula "37")))
                              (rule "polySimp_elimSub" (formula "28") (term "1,1"))
                              (rule "polySimp_addComm0" (formula "5") (term "1"))
                              (rule "lenOfSeqDef" (formula "34") (term "1"))
                              (rule "polySimp_elimSub" (formula "34") (term "1,1"))
                              (rule "times_zero_2" (formula "34") (term "1,1,1"))
                              (rule "add_zero_right" (formula "34") (term "1,1"))
                              (rule "getOfSeqDef" (formula "28") (term "0"))
                              (rule "castDel" (formula "28") (term "1,0"))
                              (rule "castDel" (formula "28") (term "2,0"))
                              (rule "add_zero_right" (formula "28") (term "0,2,1,1,0"))
                              (rule "eqSymm" (formula "28"))
                              (rule "replace_known_left" (formula "28") (term "0,0,1") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "polySimp_elimSub" (formula "28") (term "1,0,1"))
                              (rule "times_zero_2" (formula "28") (term "1,1,0,1"))
                              (rule "add_zero_right" (formula "28") (term "1,0,1"))
                              (rule "replace_known_left" (formula "28") (term "0,1") (ifseqformula "4"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "lenOfSeqConcat" (formula "27") (term "0"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "polySimp_homoEq" (formula "27"))
                              (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "27") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                              (rule "mul_literals" (formula "27") (term "0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0"))
                              (rule "polySimp_addAssoc" (formula "27") (term "0"))
                              (rule "polySimp_addComm0" (formula "27") (term "0,0"))
                              (rule "inEqSimp_ltRight" (formula "34"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0"))
                              (rule "lenOfSeqDef" (formula "29") (term "0,1,1,0"))
                              (rule "polySimp_elimSub" (formula "29") (term "1,0,1,1,0"))
                              (rule "times_zero_2" (formula "29") (term "1,1,0,1,1,0"))
                              (rule "add_zero_right" (formula "29") (term "1,0,1,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "17"))
                              (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                              (rule "getOfSeqSingleton" (formula "29") (term "0"))
                              (rule "castDel" (formula "29") (term "2,0"))
                              (rule "castDel" (formula "29") (term "1,0"))
                              (rule "lenOfSeqConcatEQ" (formula "28") (term "1,0,0") (ifseqformula "30"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "polySimp_addComm0" (formula "28") (term "1,0,0"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                              (rule "add_literals" (formula "28") (term "0,0,0"))
                              (rule "add_zero_left" (formula "28") (term "0,0"))
                              (rule "polySimp_pullOutFactor1" (formula "28") (term "0"))
                              (rule "add_literals" (formula "28") (term "1,0"))
                              (rule "times_zero_1" (formula "28") (term "0"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "true_left" (formula "28"))
                              (rule "inEqSimp_commuteLeq" (formula "4"))
                              (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,1,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,1,0,0,0"))
                              (rule "add_zero_right" (formula "28") (term "0,0,0,1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,0,0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "13"))
                              (rule "polySimp_addComm1" (formula "13") (term "0"))
                              (rule "applyEq" (formula "17") (term "1") (ifseqformula "3"))
                              (rule "applyEq" (formula "5") (term "0,1,0") (ifseqformula "6"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                              (rule "mul_literals" (formula "5") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                              (rule "add_literals" (formula "5") (term "0,0,0"))
                              (rule "add_zero_left" (formula "5") (term "0,0"))
                              (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "28") (term "0,1,0,0,0,1,0,0,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "1") (term "0,1,0,0,0,1,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "28") (term "1,0,1,0,0,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "3"))
                              (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "2") (term "1,0,0") (ifseqformula "3"))
                              (rule "applyEq" (formula "5") (term "0,1,0") (ifseqformula "3"))
                              (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                              (rule "add_literals" (formula "5") (term "1,0"))
                              (rule "times_zero_1" (formula "5") (term "0"))
                              (rule "leq_literals" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "polySimp_sepNegMonomial" (formula "27") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0"))
                              (rule "polySimp_elimOne" (formula "27") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "27"))
                              (rule "eqSymm" (formula "27") (term "1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1"))
                              (rule "polySimp_rightDist" (formula "12") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                              (rule "mul_literals" (formula "12") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "27") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "27") (term "0,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                              (rule "add_literals" (formula "16") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "16") (term "1,0,0"))
                              (rule "add_literals" (formula "16") (term "0,0"))
                              (rule "qeq_literals" (formula "16") (term "0"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "true_left" (formula "16"))
                              (rule "equalityToSeqGetAndSeqLenRight" (formula "32") (inst "iv=iv"))
                              (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,1"))
                              (rule "mul_literals" (formula "32") (term "0,1,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,1"))
                              (rule "array2seqDef" (formula "22") (term "0") (inst "u=u"))
                              (rule "nonNull" (formula "29") (inst "i=i"))
                              (rule "greater_literals" (formula "29") (term "0,1"))
                              (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "35")))
                              (rule "sub_literals" (formula "29") (term "2,1,0"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                              (rule "applyEq" (formula "29") (term "0,1,0,0,1,0,0") (ifseqformula "5"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                              (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                              (rule "array2seqDef" (formula "22") (term "0,1") (inst "u=u"))
                              (rule "array2seqDef" (formula "13") (term "0,0") (inst "u=u"))
                              (rule "narrowSelectArrayType" (formula "13") (term "2,0,0") (ifseqformula "6") (ifseqformula "31"))
                              (rule "nonNull" (formula "17") (inst "i=i"))
                              (rule "sub_literals" (formula "17") (term "2,1,0,1,1"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "greater_literals" (formula "17") (term "0,1"))
                              (builtin "One Step Simplification" (formula "17"))
                              (rule "andLeft" (formula "17"))
                              (rule "notLeft" (formula "17"))
                              (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "31"))
                              (builtin "One Step Simplification" (formula "9"))
                              (rule "narrowSelectArrayType" (formula "17") (term "0,0,1,0") (ifseqformula "6") (ifseqformula "31"))
                              (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                              (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0") (ifseqformula "3"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                              (rule "array2seqDef" (formula "14") (term "1") (inst "u=u"))
                              (rule "eqSymm" (formula "14"))
                              (rule "narrowSelectArrayType" (formula "14") (term "2,0") (ifseqformula "6") (ifseqformula "32"))
                              (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "14"))
                              (rule "array2seqDef" (formula "27") (term "0,1,0") (inst "u=u"))
                              (rule "array2seqDef" (formula "15") (term "1,1,0") (inst "u=u"))
                              (rule "eqSymm" (formula "15") (term "1,0"))
                              (rule "array2seqDef" (formula "26") (term "1") (inst "u=u"))
                              (rule "eqSymm" (formula "26"))
                              (rule "array2seqDef" (formula "12") (term "0,0") (inst "u=u"))
                              (rule "narrowSelectArrayType" (formula "12") (term "2,0,0") (ifseqformula "6") (ifseqformula "32"))
                              (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "14"))
                              (rule "array2seqDef" (formula "33") (term "0,1,1,0,1") (inst "u=u"))
                              (rule "eqSymm" (formula "33") (term "1,0,1"))
                              (rule "getOfSeqDef" (formula "33") (term "0,1,0,1"))
                              (rule "castDel" (formula "33") (term "1,0,1,0,1"))
                              (rule "castDel" (formula "33") (term "2,0,1,0,1"))
                              (rule "add_zero_right" (formula "33") (term "0,2,1,0,1,0,1"))
                              (rule "polySimp_elimSub" (formula "33") (term "1,1,0,0,1,0,1"))
                              (rule "times_zero_2" (formula "33") (term "1,1,1,0,0,1,0,1"))
                              (rule "add_zero_right" (formula "33") (term "1,1,0,0,1,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,1,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,1,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,1,0,1"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,1,0,1"))
                              (rule "mul_literals" (formula "33") (term "0,1,1,0,0,1,0,1"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,1,0,1"))
                              (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,1,0,1"))
                              (rule "array2seqDef" (formula "33") (term "0,1,0") (inst "u=u"))
                              (rule "eqSymm" (formula "33") (term "0"))
                              (rule "lenOfSeqDef" (formula "33") (term "0,0"))
                              (rule "polySimp_elimSub" (formula "33") (term "1,0,0"))
                              (rule "times_zero_2" (formula "33") (term "1,1,0,0"))
                              (rule "add_zero_right" (formula "33") (term "1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0,0"))
                              (rule "add_zero_right" (formula "33") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "33") (term "0,0,0,0"))
                              (rule "array2seqDef" (formula "33") (term "0,1,1,1,0,0,1") (inst "u=u"))
                              (rule "lenOfSeqDef" (formula "33") (term "1,1,1,0,0,1"))
                              (rule "polySimp_elimSub" (formula "33") (term "1,1,1,1,0,0,1"))
                              (rule "times_zero_2" (formula "33") (term "1,1,1,1,1,0,0,1"))
                              (rule "add_zero_right" (formula "33") (term "1,1,1,1,0,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "33") (term "0,1,1,1,0,0,1"))
                              (rule "add_zero_right" (formula "33") (term "0,0,1,1,1,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,1,1,0,0,1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "0,1,1,1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "0,0,1,1,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "33") (term "0,0,1,1,1,0,0,1"))
                              (rule "array2seqDef" (formula "15") (term "1,1,0") (inst "u=u"))
                              (rule "eqSymm" (formula "15") (term "1,0"))
                              (rule "array2seqDef" (formula "26") (term "1,1") (inst "u=u"))
                              (rule "eqSymm" (formula "26"))
                              (rule "array2seqDef" (formula "33") (term "0,1,1,0,1") (inst "u=u"))
                              (rule "eqSymm" (formula "33") (term "1,0,1"))
                              (rule "getOfSeqDef" (formula "33") (term "0,1,0,1"))
                              (rule "castDel" (formula "33") (term "1,0,1,0,1"))
                              (rule "castDel" (formula "33") (term "2,0,1,0,1"))
                              (rule "add_zero_right" (formula "33") (term "0,2,1,0,1,0,1"))
                              (rule "polySimp_elimSub" (formula "33") (term "1,1,0,0,1,0,1"))
                              (rule "mul_literals" (formula "33") (term "1,1,1,0,0,1,0,1"))
                              (rule "add_zero_right" (formula "33") (term "1,1,0,0,1,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,1,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,1,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,1,0,1"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,1,0,1"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,1,0,1"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,1,0,1"))
                              (rule "mul_literals" (formula "33") (term "0,1,1,0,0,1,0,1"))
                              (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,1,0,1"))
                              (rule "array2seqDef" (formula "33") (term "0,1,0") (inst "u=u"))
                              (rule "eqSymm" (formula "33") (term "0"))
                              (rule "lenOfSeqDef" (formula "33") (term "0,0"))
                              (rule "polySimp_elimSub" (formula "33") (term "1,0,0"))
                              (rule "mul_literals" (formula "33") (term "1,1,0,0"))
                              (rule "add_zero_right" (formula "33") (term "1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0,0"))
                              (rule "add_zero_right" (formula "33") (term "0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "33") (term "0,0,0,0"))
                              (rule "eqSeqDef2" (formula "14") (inst "iv=iv") (ifseqformula "14"))
                              (builtin "One Step Simplification" (formula "14"))
                              (rule "true_left" (formula "14"))
                              (rule "eqSeqDef2" (formula "21") (inst "iv=iv") (ifseqformula "21"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "true_left" (formula "21"))
                              (rule "eqSeqDef" (formula "14") (term "1,0") (inst "iv=iv"))
                              (rule "lenOfSeqDef" (formula "14") (term "1,0,1,0"))
                              (rule "polySimp_elimSub" (formula "14") (term "1,1,0,1,0"))
                              (rule "times_zero_2" (formula "14") (term "1,1,1,0,1,0"))
                              (rule "add_zero_right" (formula "14") (term "1,1,0,1,0"))
                              (rule "getOfSeqDef" (formula "14") (term "1,1,0,1,1,0"))
                              (rule "castDel" (formula "14") (term "2,1,1,0,1,1,0"))
                              (rule "castDel" (formula "14") (term "1,1,1,0,1,1,0"))
                              (rule "add_zero_right" (formula "14") (term "0,2,1,1,1,0,1,1,0"))
                              (rule "polySimp_elimSub" (formula "14") (term "1,1,0,1,1,0,1,1,0"))
                              (rule "times_zero_2" (formula "14") (term "1,1,1,0,1,1,0,1,1,0"))
                              (rule "add_zero_right" (formula "14") (term "1,1,0,1,1,0,1,1,0"))
                              (rule "getOfSeqDef" (formula "14") (term "0,1,0,1,1,0"))
                              (rule "castDel" (formula "14") (term "2,0,1,0,1,1,0"))
                              (rule "castDel" (formula "14") (term "1,0,1,0,1,1,0"))
                              (rule "add_zero_right" (formula "14") (term "0,2,1,0,1,0,1,1,0"))
                              (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0,1,0,1,1,0"))
                              (rule "mul_literals" (formula "14") (term "1,1,1,0,0,1,0,1,1,0"))
                              (rule "add_zero_right" (formula "14") (term "1,1,0,0,1,0,1,1,0"))
                              (rule "lenOfSeqDef" (formula "14") (term "0,0,1,0"))
                              (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "14") (term "1,1,0,0,1,0"))
                              (rule "add_zero_right" (formula "14") (term "1,0,0,1,0"))
                              (rule "lenOfSeqDef" (formula "14") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_elimSub" (formula "14") (term "1,1,1,0,0,1,1,0"))
                              (rule "times_zero_2" (formula "14") (term "1,1,1,1,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "14") (term "1,1,1,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "14") (term "0,1,0,1,0"))
                              (rule "add_zero_right" (formula "14") (term "0,0,1,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,1,1,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,1,1,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,1,0"))
                              (rule "add_zero_right" (formula "14") (term "0,0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "14") (term "0,1,1,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "14") (term "0,0,1,1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,1,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,1,1,0,1,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0,1,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,1,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "0,0,1,0,1,0"))
                              (rule "polySimp_elimOne" (formula "14") (term "0,0,1,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,1,1,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,1,1,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "1,1,0,1,1,0,1,1,0"))
                              (rule "mul_literals" (formula "14") (term "0,1,1,0,1,1,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,1,1,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,1,1,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0,1,1,0"))
                              (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0,1,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "14") (term "0,0,0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,1,0"))
                              (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,1,1,1,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "0,0,1,1,1,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "14") (term "0,0,1,1,1,0,0,1,1,0"))
                              (rule "pullOutSelect" (formula "31") (term "0,1,1,1,1,0,0,1") (inst "selectSK=arr_7"))
                              (rule "applyEq" (formula "32") (term "0,1,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "25") (term "0,1,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "32") (term "1,1,0,1,0,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "25") (term "1,2,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "32") (term "0,0,0,0,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "32") (term "0,1,1,1,0,0,1,0,1") (ifseqformula "1"))
                              (rule "applyEq" (formula "32") (term "0,0,0,1,1,1,0,0,1") (ifseqformula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "19"))
                              (rule "eqSymm" (formula "32") (term "0"))
                              (rule "eqSymm" (formula "32") (term "1,0,1"))
                              (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "34"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                              (rule "applyEqReverse" (formula "32") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "32") (term "0,1,1,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "32") (term "0,0,0,1,0") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "32") (term "0,0,0,1,1,1,0,0,1") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "32") (term "1,1,1,1,0,1") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "25") (term "0,1,1") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "32") (term "0,1,1,1,1,0,0,1") (ifseqformula "1"))
                              (rule "applyEqReverse" (formula "25") (term "1,2,1") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "eqSymm" (formula "31") (term "0"))
                              (rule "eqSymm" (formula "31") (term "1,0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "12"))
                              (rule "mul_literals" (formula "13") (term "0,0"))
                              (rule "add_zero_left" (formula "13") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                              (rule "mul_literals" (formula "13") (term "1"))
                              (rule "nnf_imp2or" (formula "28") (term "0"))
                              (rule "nnf_imp2or" (formula "17") (term "0"))
                              (rule "nnf_imp2or" (formula "15") (term "0"))
                              (rule "nnf_imp2or" (formula "32") (term "0,1"))
                              (rule "nnf_notAnd" (formula "28") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                              (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "28") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                              (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                              (rule "nnf_notAnd" (formula "17") (term "0,0"))
                              (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                              (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                              (rule "times_zero_1" (formula "17") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                              (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                              (rule "nnf_notAnd" (formula "15") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                              (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                              (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                              (rule "nnf_notAnd" (formula "32") (term "0,0,1"))
                              (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,1"))
                              (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,1"))
                              (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,1"))
                              (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,1"))
                              (rule "add_zero_left" (formula "32") (term "0,0,1,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,1"))
                              (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,1"))
                              (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0,1"))
                              (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0,1"))
                              (rule "add_zero_right" (formula "32") (term "0,0,0,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0,1"))
                              (rule "mul_literals" (formula "32") (term "1,0,0,0,1"))
                              (rule "nnf_imp2or" (formula "15") (term "0,1,1,0"))
                              (rule "nnf_notAnd" (formula "15") (term "0,0,1,1,0"))
                              (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0,1,1,0"))
                              (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0,1,1,0"))
                              (rule "add_literals" (formula "15") (term "0,0,0,1,0,0,1,1,0"))
                              (rule "add_zero_left" (formula "15") (term "0,0,1,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,1,1,0"))
                              (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0,1,1,0"))
                              (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0,1,1,0"))
                              (rule "add_zero_right" (formula "15") (term "0,0,0,0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,1,1,0"))
                              (rule "mul_literals" (formula "15") (term "1,0,0,0,1,1,0"))
                              (rule "commute_or" (formula "25") (term "0,0"))
                              (rule "inEqSimp_or_weaken1" (formula "25") (term "0,0"))
                              (rule "add_zero_right" (formula "25") (term "1,0,0,0"))
                              (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "4")))
                              (rule "eqSymm" (formula "25"))
                              (rule "eqSeqDef" (formula "25") (inst "iv=iv"))
                              (rule "andLeft" (formula "25"))
                              (rule "getOfSeqDef" (formula "26") (term "0,1,0"))
                              (rule "castDel" (formula "26") (term "1,0,1,0"))
                              (rule "castDel" (formula "26") (term "2,0,1,0"))
                              (rule "add_zero_right" (formula "26") (term "0,2,1,0,1,0"))
                              (rule "eqSymm" (formula "26") (term "1,0"))
                              (rule "polySimp_elimSub" (formula "26") (term "1,1,0,1,1,0"))
                              (rule "mul_literals" (formula "26") (term "1,1,1,0,1,1,0"))
                              (rule "add_zero_right" (formula "26") (term "1,1,0,1,1,0"))
                              (rule "lenOfSeqDef" (formula "25") (term "0"))
                              (rule "eqSymm" (formula "25"))
                              (rule "polySimp_elimSub" (formula "25") (term "1,1"))
                              (rule "times_zero_2" (formula "25") (term "1,1,1"))
                              (rule "add_zero_right" (formula "25") (term "1,1"))
                              (rule "lenOfSeqDef" (formula "26") (term "1,1,0,0"))
                              (rule "polySimp_elimSub" (formula "26") (term "1,1,1,0,0"))
                              (rule "times_zero_2" (formula "26") (term "1,1,1,1,0,0"))
                              (rule "add_zero_right" (formula "26") (term "1,1,1,0,0"))
                              (rule "getOfSeqDef" (formula "26") (term "0,1,0"))
                              (rule "castDel" (formula "26") (term "1,0,1,0"))
                              (rule "castDel" (formula "26") (term "2,0,1,0"))
                              (rule "add_zero_right" (formula "26") (term "0,2,1,0,1,0"))
                              (rule "eqSymm" (formula "26") (term "1,0"))
                              (rule "polySimp_elimSub" (formula "26") (term "1,1,0,1,1,0"))
                              (rule "mul_literals" (formula "26") (term "1,1,1,0,1,1,0"))
                              (rule "add_zero_right" (formula "26") (term "1,1,0,1,1,0"))
                              (rule "lenOfSeqDef" (formula "25") (term "0"))
                              (rule "eqSymm" (formula "25"))
                              (rule "polySimp_elimSub" (formula "25") (term "1,1"))
                              (rule "mul_literals" (formula "25") (term "1,1,1"))
                              (rule "add_zero_right" (formula "25") (term "1,1"))
                              (rule "inEqSimp_ltToLeq" (formula "26") (term "0,1,1,0,0"))
                              (rule "add_zero_right" (formula "26") (term "0,0,1,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,1,0"))
                              (rule "eqSymm" (formula "26") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0"))
                              (rule "add_zero_right" (formula "25") (term "0,0,0"))
                              (rule "eqSymm" (formula "25"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                              (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,1,0"))
                              (rule "eqSymm" (formula "26") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0"))
                              (rule "add_zero_right" (formula "25") (term "0,0,0"))
                              (rule "eqSymm" (formula "25"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                              (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,1,1,0"))
                              (rule "applyEq" (formula "26") (term "0,1,0,0,1,0,0") (ifseqformula "25"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,1,0"))
                              (rule "eqSymm" (formula "26") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "26") (term "1,1,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,1,1,0"))
                              (rule "mul_literals" (formula "26") (term "0,1,1,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,1,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0"))
                              (rule "eqSymm" (formula "25"))
                              (rule "polySimp_elimOne" (formula "25") (term "0,0,1"))
                              (rule "applyEq" (formula "26") (term "0,1,0,0,1,0,0") (ifseqformula "25"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,1,0"))
                              (rule "eqSymm" (formula "26") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "26") (term "1,1,0,1,1,0"))
                              (rule "mul_literals" (formula "26") (term "0,1,1,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,1,1,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0"))
                              (rule "eqSymm" (formula "25"))
                              (rule "polySimp_elimOne" (formula "25") (term "0,0,1"))
                              (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "25"))
                              (builtin "One Step Simplification" (formula "33"))
                              (rule "allRight" (formula "33") (inst "sk=iv_0"))
                              (rule "orRight" (formula "33"))
                              (rule "orRight" (formula "33"))
                              (rule "inEqSimp_geqRight" (formula "34"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "inEqSimp_leqRight" (formula "34"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "replace_known_left" (formula "35") (term "0,0,1") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "1")))
                              (rule "inEqSimp_homoInEq0" (formula "35") (term "0,1"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "35") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                              (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "27"))
                              (rule "applyEq" (formula "28") (term "0,1,0,0,1,0,0") (ifseqformula "27"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,0,1"))
                              (rule "mul_literals" (formula "35") (term "0,1,0,1"))
                              (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,1"))
                              (rule "polySimp_elimOne" (formula "35") (term "1,1,0,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "35") (term "0,1,0,0"))
                              (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                              (rule "pullOutSelect" (formula "35") (term "1,0") (inst "selectSK=arr_8"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "22"))
                              (rule "pullOutSelect" (formula "36") (term "1,1") (inst "selectSK=arr_9"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "23"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "42"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")) (ifInst ""  (formula "42")))
                              (rule "applyEqReverse" (formula "37") (term "1,1") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "narrowSelectArrayType" (formula "36") (term "1,1") (ifseqformula "21") (ifseqformula "42"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_10"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "arrayLengthNotNegative" (formula "9") (term "0"))
                              (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                              (rule "mul_literals" (formula "9") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "8"))
                              (rule "leq_literals" (formula "9") (term "0"))
                              (builtin "One Step Simplification" (formula "9"))
                              (rule "true_left" (formula "9"))
                              (rule "arrayLengthIsAShort" (formula "9") (term "0"))
                              (builtin "One Step Simplification" (formula "9"))
                              (rule "true_left" (formula "9"))
                              (rule "nnf_imp2or" (formula "30") (term "0"))
                              (rule "arrayLengthNotNegative" (formula "7") (term "0"))
                              (rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
                              (rule "arrayLengthIsAShort" (formula "7") (term "0"))
                              (builtin "One Step Simplification" (formula "7"))
                              (rule "true_left" (formula "7"))
                              (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "20") (ifseqformula "12"))
                              (rule "andLeft" (formula "20"))
                              (rule "notLeft" (formula "21"))
                              (rule "andLeft" (formula "20"))
                              (rule "andLeft" (formula "20"))
                              (rule "notLeft" (formula "22"))
                              (rule "andLeft" (formula "20"))
                              (rule "notLeft" (formula "22"))
                              (rule "andLeft" (formula "20"))
                              (rule "notLeft" (formula "22"))
                              (rule "andLeft" (formula "20"))
                              (rule "andLeft" (formula "20"))
                              (rule "andLeft" (formula "20"))
                              (rule "notLeft" (formula "20"))
                              (rule "nonNull" (formula "23") (inst "i=i"))
                              (rule "greater_literals" (formula "23") (term "0,1"))
                              (builtin "One Step Simplification" (formula "23"))
                              (rule "sub_literals" (formula "23") (term "2,1,0,1"))
                              (builtin "One Step Simplification" (formula "23"))
                              (rule "andLeft" (formula "23"))
                              (rule "notLeft" (formula "23"))
                              (rule "narrowSelectArrayType" (formula "23") (term "0,0,1,0") (ifseqformula "10") (ifseqformula "38"))
                              (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "22") (inst "i=i"))
                              (rule "sub_literals" (formula "22") (term "2,1,0,1,1"))
                              (builtin "One Step Simplification" (formula "22"))
                              (rule "greater_literals" (formula "22") (term "0,1"))
                              (builtin "One Step Simplification" (formula "22"))
                              (rule "andLeft" (formula "22"))
                              (rule "notLeft" (formula "22"))
                              (rule "narrowSelectArrayType" (formula "22") (term "0,0,1,0") (ifseqformula "10") (ifseqformula "38"))
                              (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "21") (inst "i=i"))
                              (rule "sub_literals" (formula "21") (term "2,1,0,1,1"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "greater_literals" (formula "21") (term "0,1"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "andLeft" (formula "21"))
                              (rule "notLeft" (formula "21"))
                              (rule "narrowSelectArrayType" (formula "21") (term "0,0,1,0") (ifseqformula "10") (ifseqformula "38"))
                              (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "20") (inst "i=i"))
                              (rule "greater_literals" (formula "20") (term "0,1"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "sub_literals" (formula "20") (term "2,1,0,1"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "andLeft" (formula "20"))
                              (rule "notLeft" (formula "20"))
                              (rule "narrowSelectArrayType" (formula "20") (term "0,0,1,0") (ifseqformula "10") (ifseqformula "38"))
                              (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                              (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "35") (ifseqformula "12"))
                              (rule "andLeft" (formula "35"))
                              (rule "notLeft" (formula "36"))
                              (rule "andLeft" (formula "35"))
                              (rule "notLeft" (formula "36"))
                              (rule "andLeft" (formula "35"))
                              (rule "notLeft" (formula "36"))
                              (rule "andLeft" (formula "35"))
                              (rule "notLeft" (formula "36"))
                              (rule "andLeft" (formula "35"))
                              (rule "andLeft" (formula "35"))
                              (rule "andLeft" (formula "35"))
                              (rule "andLeft" (formula "35"))
                              (rule "notLeft" (formula "35"))
                              (rule "nonNull" (formula "38") (inst "i=i"))
                              (rule "greater_literals" (formula "38") (term "0,1"))
                              (builtin "One Step Simplification" (formula "38"))
                              (rule "sub_literals" (formula "38") (term "2,1,0,1"))
                              (builtin "One Step Simplification" (formula "38"))
                              (rule "andLeft" (formula "38"))
                              (rule "notLeft" (formula "38"))
                              (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "38") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "37") (inst "i=i"))
                              (rule "sub_literals" (formula "37") (term "2,1,0,1,1"))
                              (builtin "One Step Simplification" (formula "37"))
                              (rule "greater_literals" (formula "37") (term "0,1"))
                              (builtin "One Step Simplification" (formula "37"))
                              (rule "andLeft" (formula "37"))
                              (rule "notLeft" (formula "37"))
                              (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "37") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "36") (inst "i=i"))
                              (rule "sub_literals" (formula "36") (term "2,1,0,1,1"))
                              (builtin "One Step Simplification" (formula "36"))
                              (rule "greater_literals" (formula "36") (term "0,1"))
                              (builtin "One Step Simplification" (formula "36"))
                              (rule "andLeft" (formula "36"))
                              (rule "notLeft" (formula "36"))
                              (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "36") (term "0,1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0"))
                              (rule "nonNull" (formula "35") (inst "i=i"))
                              (rule "sub_literals" (formula "35") (term "2,1,0,1,1"))
                              (builtin "One Step Simplification" (formula "35"))
                              (rule "greater_literals" (formula "35") (term "0,1"))
                              (builtin "One Step Simplification" (formula "35"))
                              (rule "andLeft" (formula "35"))
                              (rule "notLeft" (formula "35"))
                              (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0"))
                              (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0"))
                              (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0"))
                              (rule "mul_literals" (formula "35") (term "0,1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0"))
                              (rule "pullOutSelect" (formula "49") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_6"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "27"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "12"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")) (ifInst ""  (formula "12")))
                              (rule "applyEqReverse" (formula "50") (term "0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_6"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "27"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "12"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")) (ifInst ""  (formula "12")))
                              (rule "applyEqReverse" (formula "49") (term "0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_6"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "27"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "12"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")) (ifInst ""  (formula "12")))
                              (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_6"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "63")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "27"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "12"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "63")) (ifInst ""  (formula "12")))
                              (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_6"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "62")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "27"))
                              (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "12"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "62")) (ifInst ""  (formula "12")))
                              (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "pullOutSelect" (formula "38") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_6"))
                              (rule "applyEq" (formula "45") (term "0") (ifseqformula "38"))
                              (rule "applyEq" (formula "39") (term "0,1,1,1,0,0") (ifseqformula "38"))
                              (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "30"))
                              (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "61")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "0,0,0") (ifseqformula "26"))
                              (rule "replace_known_left" (formula "38") (term "0,0,0,0") (ifseqformula "11"))
                              (builtin "One Step Simplification" (formula "38"))
                              (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "26"))
                              (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "61")) (ifInst ""  (formula "11")))
                              (rule "applyEqReverse" (formula "39") (term "1,0,0,1,0") (ifseqformula "38"))
                              (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "38"))
                              (rule "applyEqReverse" (formula "39") (term "0,1,1,1,0,0") (ifseqformula "38"))
                              (rule "hideAuxiliaryEq" (formula "38"))
                              (rule "pullOutSelect" (formula "37") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_6"))
                              (rule "applyEq" (formula "44") (term "0") (ifseqformula "37"))
                              (rule "applyEq" (formula "38") (term "0,1,1,1,0,0") (ifseqformula "37"))
                              (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "30"))
                              (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "60")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,0,0") (ifseqformula "26"))
                              (rule "replace_known_left" (formula "37") (term "0,0,0,0") (ifseqformula "11"))
                              (builtin "One Step Simplification" (formula "37"))
                              (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "26"))
                              (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "60")) (ifInst ""  (formula "11")))
                              (rule "applyEqReverse" (formula "38") (term "1,0,0,1,0") (ifseqformula "37"))
                              (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "37"))
                              (rule "applyEqReverse" (formula "38") (term "0,1,1,1,0,0") (ifseqformula "37"))
                              (rule "hideAuxiliaryEq" (formula "37"))
                              (rule "pullOutSelect" (formula "36") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_6"))
                              (rule "applyEq" (formula "37") (term "0,1,1,1,0,0") (ifseqformula "36"))
                              (rule "applyEq" (formula "43") (term "0") (ifseqformula "36"))
                              (rule "simplifySelectOfAnonEQ" (formula "36") (ifseqformula "30"))
                              (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "59")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "0,0,0") (ifseqformula "26"))
                              (rule "replace_known_left" (formula "36") (term "0,0,0,0") (ifseqformula "11"))
                              (builtin "One Step Simplification" (formula "36"))
                              (rule "simplifySelectOfAnonEQ" (formula "36") (ifseqformula "26"))
                              (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "59")) (ifInst ""  (formula "11")))
                              (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "36"))
                              (rule "applyEqReverse" (formula "37") (term "0,1,1,1,0,0") (ifseqformula "36"))
                              (rule "applyEqReverse" (formula "37") (term "1,0,0,1,0") (ifseqformula "36"))
                              (rule "hideAuxiliaryEq" (formula "36"))
                              (rule "pullOutSelect" (formula "35") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_7"))
                              (rule "applyEq" (formula "36") (term "0,1,1,1,0,0") (ifseqformula "35"))
                              (rule "applyEq" (formula "42") (term "0") (ifseqformula "35"))
                              (rule "simplifySelectOfAnonEQ" (formula "35") (ifseqformula "30"))
                              (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "58")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,0") (ifseqformula "26"))
                              (rule "replace_known_left" (formula "35") (term "0,0,0,0") (ifseqformula "11"))
                              (builtin "One Step Simplification" (formula "35"))
                              (rule "simplifySelectOfAnonEQ" (formula "35") (ifseqformula "26"))
                              (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "58")) (ifInst ""  (formula "11")))
                              (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "35"))
                              (rule "applyEqReverse" (formula "36") (term "0,1,1,1,0,0") (ifseqformula "35"))
                              (rule "applyEqReverse" (formula "36") (term "1,0,0,1,0") (ifseqformula "35"))
                              (rule "hideAuxiliaryEq" (formula "35"))
                              (rule "nnf_notAnd" (formula "33") (term "0,0"))
                              (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0"))
                              (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "33") (term "0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                              (rule "mul_literals" (formula "33") (term "1,0,0,0"))
                              (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
                              (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
                              (rule "ifthenelse_split" (formula "5") (term "0"))
                              (branch "i_5 ≥ 1 TRUE"
                                 (rule "inEqSimp_homoInEq0" (formula "6"))
                                 (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                                 (rule "add_literals" (formula "6") (term "1,0"))
                                 (rule "times_zero_1" (formula "6") (term "0"))
                                 (rule "qeq_literals" (formula "6"))
                                 (rule "true_left" (formula "6"))
                                 (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "5"))
                                 (rule "leq_literals" (formula "8") (term "0"))
                                 (builtin "One Step Simplification" (formula "8"))
                                 (rule "true_left" (formula "8"))
                                 (rule "nnf_imp2or" (formula "22") (term "0"))
                                 (rule "commute_or_2" (formula "38") (term "0"))
                                 (rule "nnf_imp2or" (formula "21") (term "0"))
                                 (rule "commute_or_2" (formula "23") (term "0"))
                                 (rule "nnf_imp2or" (formula "20") (term "0"))
                                 (rule "arrayLengthIsAShort" (formula "15") (term "1,1"))
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "true_left" (formula "15"))
                                 (rule "arrayLengthNotNegative" (formula "15") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "17"))
                                 (rule "leq_literals" (formula "15") (term "0"))
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "true_left" (formula "15"))
                                 (rule "nnf_imp2or" (formula "19") (term "0"))
                                 (rule "arrayLengthIsAShort" (formula "6") (term "0"))
                                 (builtin "One Step Simplification" (formula "6"))
                                 (rule "true_left" (formula "6"))
                                 (rule "arrayLengthNotNegative" (formula "6") (term "0"))
                                 (rule "equalityToSeqGetAndSeqLenLeft" (formula "34") (inst "iv=iv"))
                                 (rule "andLeft" (formula "34"))
                                 (rule "lenOfSeqConcat" (formula "35") (term "1,1,0,0"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "polySimp_addComm0" (formula "35") (term "1,1,0,0"))
                                 (rule "lenOfSeqConcat" (formula "34") (term "0"))
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "polySimp_homoEq" (formula "34"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "34") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                                 (rule "mul_literals" (formula "34") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                 (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                 (rule "lenOfSeqConcatEQ" (formula "34") (term "1,0,0") (ifseqformula "36"))
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "polySimp_addComm0" (formula "34") (term "1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                 (rule "add_literals" (formula "34") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "34") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "34") (term "0"))
                                 (rule "add_literals" (formula "34") (term "1,0"))
                                 (rule "times_zero_1" (formula "34") (term "0"))
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "true_left" (formula "34"))
                                 (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "34") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0"))
                                 (rule "getOfSeqConcat" (formula "34") (term "0,1,0"))
                                 (rule "polySimp_elimSub" (formula "34") (term "1,2,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "34") (term "1,2,0,1,0"))
                                 (rule "getOfSeqSingleton" (formula "34") (term "2,0,1,0"))
                                 (rule "castDel" (formula "34") (term "2,2,0,1,0"))
                                 (rule "castDel" (formula "34") (term "1,2,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,1,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "34") (term "0,2,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,0,2,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "34") (term "1,0,2,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,1,0"))
                                 (rule "getOfSeqConcatEQ" (formula "34") (term "1,1,0") (ifseqformula "35"))
                                 (rule "eqSymm" (formula "34") (term "1,0"))
                                 (rule "polySimp_elimSub" (formula "34") (term "1,2,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "34") (term "1,2,0,1,0"))
                                 (rule "getOfSeqSingleton" (formula "34") (term "2,0,1,0"))
                                 (rule "castDel" (formula "34") (term "2,2,0,1,0"))
                                 (rule "castDel" (formula "34") (term "1,2,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,1,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "34") (term "0,2,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,0,2,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "34") (term "1,0,2,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,1,0"))
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "true_left" (formula "34"))
                                 (rule "arrayLengthIsAShort" (formula "34") (term "1,0,1,0"))
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "true_left" (formula "34"))
                                 (rule "commute_or_2" (formula "19") (term "0,1,1,0"))
                                 (rule "arrayLengthNotNegative" (formula "34") (term "1,0,1,0"))
                                 (rule "ifthenelse_to_or_right" (formula "19") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "inEqSimp_notGeq" (formula "19") (term "0,1,1,0,1,0"))
                                 (rule "mul_literals" (formula "19") (term "1,0,0,0,1,1,0,1,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,1,1,0,1,0"))
                                 (rule "add_zero_left" (formula "19") (term "0,0,1,1,0,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0,1,0"))
                                 (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0,1,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,0,0,1,0"))
                                 (rule "add_zero_left" (formula "19") (term "0,0,0,0,1,0"))
                                 (rule "nnf_imp2or" (formula "39") (term "0"))
                                 (rule "nnf_imp2or" (formula "38") (term "0"))
                                 (rule "nnf_imp2or" (formula "37") (term "0"))
                                 (rule "nnf_imp2or" (formula "36") (term "0"))
                                 (rule "nnf_notAnd" (formula "23") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "23") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                                 (rule "mul_literals" (formula "23") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "22") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "22") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                                 (rule "mul_literals" (formula "22") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "21") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "21") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                 (rule "mul_literals" (formula "21") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "21") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "20") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                 (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
                                 (rule "ifthenelse_to_or_left" (formula "33") (term "1,0"))
                                 (rule "eqSymm" (formula "33") (term "1,0,1,0"))
                                 (rule "eqSymm" (formula "33") (term "1,1,1,0"))
                                 (builtin "One Step Simplification" (formula "33"))
                                 (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "39") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "39") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0"))
                                 (rule "mul_literals" (formula "39") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "39") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
                                 (rule "mul_literals" (formula "39") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "38") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "38") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                                 (rule "mul_literals" (formula "38") (term "1,0,0,0"))
                                 (rule "ifthenelse_split" (formula "32") (term "0"))
                                 (branch " result_1[i_5]@anon_heap_addEntry«anonHeapFunction».length ≥ 1 TRUE"
                                    (rule "eqSymm" (formula "33"))
                                    (rule "applyEq" (formula "34") (term "1,1,0,0") (ifseqformula "33"))
                                    (rule "applyEq" (formula "4") (term "0") (ifseqformula "33"))
                                    (rule "replace_known_left" (formula "54") (term "0,0") (ifseqformula "4"))
                                    (builtin "One Step Simplification" (formula "54"))
                                    (rule "eqSymm" (formula "54"))
                                    (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "38") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "38") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                                    (rule "mul_literals" (formula "38") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "37") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0"))
                                    (rule "mul_literals" (formula "37") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "37") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "37") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "34") (term "0,0,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0,1,0"))
                                    (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "34") (term "0,0,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0,1,0"))
                                    (rule "mul_literals" (formula "34") (term "1,0,0,0,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0,1,0"))
                                    (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,1,0"))
                                    (rule "add_zero_left" (formula "34") (term "0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,1,0"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch " ¬ result_1[i_5]@anon_heap_addEntry«anonHeapFunction» = null ∧ ¬ (result_1[i_5]@anon_heap_addEntry«anonHeapFunction»).<created> = TRUE TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "43"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                       (rule "ifthenelse_negated" (formula "1") (term "0"))
                                       (rule "narrowSelectArrayType" (formula "1") (term "2,0") (ifseqformula "28") (ifseqformula "42"))
                                       (rule "narrowSelectArrayType" (formula "1") (term "1,0") (ifseqformula "24") (ifseqformula "42"))
                                       (rule "nnf_notAnd" (formula "33") (term "0,1,1,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "33") (term "1,0,1,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,1,1,1,0"))
                                       (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,1,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,1,1,1,0"))
                                       (rule "add_literals" (formula "33") (term "0,0,0,1,0,1,1,1,0"))
                                       (rule "add_zero_left" (formula "33") (term "0,0,1,0,1,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,1,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,1,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "33") (term "1,1,0,1,1,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "33") (term "0,0,1,1,1,0"))
                                       (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,1,1,1,0"))
                                       (rule "add_zero_right" (formula "33") (term "0,0,0,0,1,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,1,1,1,0"))
                                       (rule "mul_literals" (formula "33") (term "1,0,0,1,1,1,0"))
                                       (rule "commute_or" (formula "40") (term "0,0"))
                                       (rule "commute_or" (formula "23") (term "0,0"))
                                       (rule "commute_or_2" (formula "22") (term "0"))
                                       (rule "commute_or_2" (formula "21") (term "0"))
                                       (rule "commute_or_2" (formula "20") (term "0"))
                                       (rule "commute_or_2" (formula "19") (term "0"))
                                       (rule "commute_or" (formula "18") (term "0,0,1,1,0"))
                                       (rule "shift_paren_or" (formula "18") (term "1,0,1,0"))
                                       (rule "commute_or_2" (formula "39") (term "0"))
                                       (rule "commute_or_2" (formula "38") (term "0"))
                                       (rule "commute_or_2" (formula "37") (term "0"))
                                       (rule "commute_or_2" (formula "36") (term "0"))
                                       (rule "ifthenelse_to_or_left" (formula "18") (term "1,0,0,1,0"))
                                       (rule "eqSymm" (formula "18") (term "1,1,1,0,0,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "18") (term "0,0,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "18") (term "1,0,0,0,0,1,0,0,1,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0,0,1,0,0,1,0"))
                                       (rule "add_zero_left" (formula "18") (term "0,0,0,1,0,0,1,0"))
                                       (rule "commute_or_2" (formula "33") (term "0,1,0"))
                                       (rule "commute_or" (formula "22") (term "0,0"))
                                       (rule "commute_or" (formula "21") (term "0,0"))
                                       (rule "commute_or" (formula "20") (term "0,0"))
                                       (rule "commute_or" (formula "19") (term "0,0"))
                                       (rule "commute_or" (formula "39") (term "0,0"))
                                       (rule "commute_or" (formula "38") (term "0,0"))
                                       (rule "commute_or" (formula "37") (term "0,0"))
                                       (rule "commute_or" (formula "36") (term "0,0"))
                                       (rule "commute_or" (formula "33") (term "1,1,0"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "6") (term "0,0") (ifseqformula "9"))
                                       (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "45"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "commute_or" (formula "34") (term "0,0,1,0"))
                                       (rule "commute_or_2" (formula "34") (term "0,1,1,0"))
                                       (rule "commute_or" (formula "34") (term "0,0,1,1,0"))
                                       (rule "commute_or" (formula "19") (term "1,1,0,0,1,0"))
                                       (rule "cnf_rightDist" (formula "34") (term "1,1,0"))
                                       (rule "commute_or_2" (formula "34") (term "0,1,1,0"))
                                       (rule "inEqSimp_or_tautInEq1" (formula "34") (term "0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "34") (term "1,1,0,0,1,1,0"))
                                       (rule "qeq_literals" (formula "34") (term "1,0,0,1,1,0"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "commute_or" (formula "34") (term "1,1,0"))
                                       (rule "cnf_rightDist" (formula "34") (term "0"))
                                       (rule "distr_forallAnd" (formula "34"))
                                       (rule "andLeft" (formula "34"))
                                       (rule "shift_paren_or" (formula "34") (term "0"))
                                       (rule "shift_paren_or" (formula "35") (term "0"))
                                       (rule "commute_or_2" (formula "34") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "commute_or_2" (formula "35") (term "0,0"))
                                       (rule "inEqSimp_or_tautInEq1" (formula "35") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "35") (term "1,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "35") (term "0,1,0"))
                                       (rule "add_literals" (formula "35") (term "1,0,1,0"))
                                       (rule "times_zero_1" (formula "35") (term "0,1,0"))
                                       (rule "leq_literals" (formula "35") (term "1,0"))
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "true_left" (formula "35"))
                                       (rule "shift_paren_or" (formula "34") (term "0,0"))
                                       (rule "commute_or" (formula "34") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "cnf_rightDist" (formula "19") (term "0,0,1,0"))
                                       (rule "commute_or_2" (formula "19") (term "1,0,0,1,0"))
                                       (rule "inEqSimp_or_subsumption4" (formula "19") (term "0,1,0,0,1,0"))
                                       (rule "greater_literals" (formula "19") (term "0,0,0,1,0,0,1,0"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "ifthenelse_split" (formula "33") (term "0"))
                                       (branch "result_0.length ≥ 1 TRUE"
                                          (rule "eqSymm" (formula "34"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "34"))
                                          (rule "replace_known_left" (formula "57") (term "0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "57"))
                                          (rule "eqSymm" (formula "57"))
                                          (rule "applyEq" (formula "35") (term "1,1,0") (ifseqformula "34"))
                                          (rule "applyEq" (formula "32") (term "0") (ifseqformula "34"))
                                          (rule "inEqSimp_subsumption1" (formula "35") (ifseqformula "32"))
                                          (rule "leq_literals" (formula "35") (term "0"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "true_left" (formula "35"))
                                          (rule "shift_paren_or" (formula "19") (term "0,0,0,1,0"))
                                          (rule "ifthenelse_to_or_left" (formula "34") (term "0,0,0"))
                                          (rule "eqSymm" (formula "34") (term "1,0,0,0,0"))
                                          (rule "eqSymm" (formula "34") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "34") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "34") (term "1,0,0,0,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "34") (term "0,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "34") (term "1,0,0,0,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "34") (term "0,0,1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,0,0,0"))
                                          (rule "commute_or" (formula "34") (term "0,0"))
                                          (rule "commute_or_2" (formula "34") (term "0"))
                                          (rule "commute_or" (formula "34") (term "1,1,0"))
                                          (rule "commute_or_2" (formula "34") (term "0,1,0"))
                                          (rule "commute_or" (formula "34") (term "0,0,1,0"))
                                          (rule "cnf_rightDist" (formula "34") (term "1,1,0"))
                                          (rule "cnf_rightDist" (formula "34") (term "0"))
                                          (rule "distr_forallAnd" (formula "34"))
                                          (rule "andLeft" (formula "34"))
                                          (rule "commute_or" (formula "35") (term "0"))
                                          (rule "shift_paren_or" (formula "34") (term "0"))
                                          (rule "commute_or_2" (formula "34") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "commute_or" (formula "35") (term "1,1,0"))
                                          (rule "shift_paren_or" (formula "34") (term "0,0"))
                                          (rule "commute_or" (formula "34") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "cnf_rightDist" (formula "35") (term "0"))
                                          (rule "distr_forallAnd" (formula "35"))
                                          (rule "andLeft" (formula "35"))
                                          (rule "commute_or_2" (formula "35") (term "0"))
                                          (rule "shift_paren_or" (formula "36") (term "0"))
                                          (rule "commute_or_2" (formula "36") (term "0,0"))
                                          (rule "inEqSimp_or_tautInEq1" (formula "36") (term "0"))
                                          (rule "inEqSimp_homoInEq1" (formula "36") (term "1,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "36") (term "0,1,0"))
                                          (rule "add_literals" (formula "36") (term "1,0,1,0"))
                                          (rule "times_zero_1" (formula "36") (term "0,1,0"))
                                          (rule "leq_literals" (formula "36") (term "1,0"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "true_left" (formula "36"))
                                          (rule "shift_paren_or" (formula "35") (term "0,0"))
                                          (rule "commute_or" (formula "35") (term "0,0,0"))
                                          (rule "inEqSimp_or_tautInEq1" (formula "35") (term "0,0"))
                                          (rule "add_zero_right" (formula "35") (term "1,1,0,0"))
                                          (rule "qeq_literals" (formula "35") (term "1,0,0"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "true_left" (formula "35"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch " (result_1[i_5]@anon_heap_addEntry«anonHeapFunction»).<created>@anon_heap_first«anonHeapFunction» = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "56") (term "0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "ifthenelse_to_or_left" (formula "19") (term "0,0,0,1,1,0"))
                                             (rule "eqSymm" (formula "19") (term "1,0,0,0,0,1,1,0"))
                                             (rule "eqSymm" (formula "19") (term "1,1,0,0,0,1,1,0"))
                                             (builtin "One Step Simplification" (formula "19"))
                                             (rule "nnf_notAnd" (formula "19") (term "0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "19") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "19") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "19") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0,0,1,1,0"))
                                             (rule "nnf_notAnd" (formula "19") (term "0,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "19") (term "0,0,1,1,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "19") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,1,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "19") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "19") (term "1,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "19") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "19") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "19") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "19") (term "0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "19") (term "0,1,1,0"))
                                             (rule "commute_or" (formula "19") (term "1,1,0,1,1,0"))
                                             (rule "commute_or_2" (formula "19") (term "0,1,0,1,1,0"))
                                             (rule "commute_or_2" (formula "19") (term "0,1,1,0,1,1,0"))
                                             (rule "commute_or" (formula "19") (term "0,0,1,0,1,1,0"))
                                             (rule "commute_or" (formula "19") (term "0,0,1,1,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "19") (term "1,1,0,1,1,0"))
                                             (rule "commute_or_2" (formula "19") (term "0,1,1,0,1,1,0"))
                                             (rule "inEqSimp_or_tautInEq1" (formula "19") (term "0,0,1,1,0,1,1,0"))
                                             (rule "add_zero_right" (formula "19") (term "1,1,0,0,1,1,0,1,1,0"))
                                             (rule "qeq_literals" (formula "19") (term "1,0,0,1,1,0,1,1,0"))
                                             (builtin "One Step Simplification" (formula "19"))
                                             (rule "commute_or" (formula "19") (term "1,1,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "19") (term "0,1,1,0"))
                                             (rule "commute_or_2" (formula "19") (term "0,0,1,1,0"))
                                             (rule "shift_paren_or" (formula "19") (term "1,0,1,1,0"))
                                             (rule "commute_or_2" (formula "19") (term "0,1,0,1,1,0"))
                                             (rule "shift_paren_or" (formula "19") (term "0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "19") (term "0,0,1,0,1,1,0"))
                                             (builtin "One Step Simplification" (formula "19"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "45") (term "0") (ifseqformula "10"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "46"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "48") (term "0") (ifseqformula "11"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "49"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "0") (ifseqformula "12"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "52"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "13"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "14"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "0") (ifseqformula "15"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "52"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "54") (term "0") (ifseqformula "16"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "55"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "17"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "shift_paren_or" (formula "27") (term "0,0,0,0,1,1,0"))
                                             (rule "arrayLengthNotNegative" (formula "31") (term "1,1,0"))
                                             (rule "arrayLengthIsAShort" (formula "32") (term "1,1,0"))
                                             (builtin "One Step Simplification" (formula "32"))
                                             (rule "true_left" (formula "32"))
                                             (rule "arrayLengthIsAShort" (formula "30") (term "1,1,0"))
                                             (builtin "One Step Simplification" (formula "30"))
                                             (rule "true_left" (formula "30"))
                                             (rule "arrayLengthNotNegative" (formula "30") (term "1,1,0"))
                                             (rule "arrayLengthNotNegative" (formula "29") (term "1,1,0"))
                                             (rule "arrayLengthIsAShort" (formula "30") (term "1,1,0"))
                                             (builtin "One Step Simplification" (formula "30"))
                                             (rule "true_left" (formula "30"))
                                             (rule "commute_or" (formula "27") (term "0,0,0,0,0,1,1,0"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "allLeft" (formula "51") (inst "t=i_5"))
                                             (rule "inEqSimp_homoInEq1" (formula "51") (term "1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,1"))
                                             (rule "add_literals" (formula "51") (term "1,1,0,1"))
                                             (rule "times_zero_1" (formula "51") (term "1,0,1"))
                                             (rule "add_zero_right" (formula "51") (term "0,1"))
                                             (rule "leq_literals" (formula "51") (term "1"))
                                             (builtin "One Step Simplification" (formula "51"))
                                             (rule "inEqSimp_contradInEq1" (formula "51") (term "1") (ifseqformula "12"))
                                             (rule "qeq_literals" (formula "51") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "51"))
                                             (rule "notLeft" (formula "51"))
                                             (rule "pullOutSelect" (formula "53") (term "0") (inst "selectSK=arr_21"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "42"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "71")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "38"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "69"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "70")))
                                             (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "narrowSelectArrayType" (formula "53") (term "0") (ifseqformula "40") (ifseqformula "70"))
                                             (rule "allLeft" (formula "47") (inst "t=i_5"))
                                             (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "47") (term "1") (ifseqformula "15"))
                                             (rule "inEqSimp_homoInEq1" (formula "47") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "47") (term "0,0,1"))
                                             (rule "leq_literals" (formula "47") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "inEqSimp_contradInEq1" (formula "47") (term "1") (ifseqformula "12"))
                                             (rule "qeq_literals" (formula "47") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "notLeft" (formula "47"))
                                             (rule "pullOutSelect" (formula "53") (term "0") (inst "selectSK=arr_22"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "42"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "38"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "15"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")) (ifInst ""  (formula "15")))
                                             (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "narrowSelectArrayType" (formula "53") (term "0") (ifseqformula "18") (ifseqformula "56"))
                                             (rule "arrayLengthIsAShort" (formula "44") (term "0"))
                                             (builtin "One Step Simplification" (formula "44"))
                                             (rule "true_left" (formula "44"))
                                             (rule "arrayLengthNotNegative" (formula "44") (term "0"))
                                             (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                                             (rule "inEqSimp_subsumption1" (formula "44") (ifseqformula "43"))
                                             (rule "leq_literals" (formula "44") (term "0"))
                                             (builtin "One Step Simplification" (formula "44"))
                                             (rule "true_left" (formula "44"))
                                             (rule "all_pull_out1" (formula "27") (term "1,0"))
                                             (rule "shift_paren_and" (formula "27") (term "0,1,0"))
                                             (rule "allLeft" (formula "45") (inst "t=iv_0"))
                                             (rule "replaceKnownSelect_taclet1110000000_4" (formula "45") (term "0,0,0"))
                                             (rule "replaceKnownSelect_taclet1110000000_5" (formula "45") (term "1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet000001110000000_37" (formula "45") (term "0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1110000000_7" (formula "45") (term "1,0,0"))
                                             (rule "eqSymm" (formula "45") (term "0,0"))
                                             (rule "narrowSelectArrayType" (formula "45") (term "0,0,0") (ifseqformula "36") (ifseqformula "74"))
                                             (rule "eqSymm" (formula "45") (term "0,0"))
                                             (rule "replace_known_right" (formula "45") (term "0,0") (ifseqformula "68"))
                                             (builtin "One Step Simplification" (formula "45"))
                                             (rule "inEqSimp_commuteGeq" (formula "45") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "45") (term "1") (ifseqformula "11"))
                                             (rule "inEqSimp_homoInEq1" (formula "45") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,1"))
                                             (rule "add_literals" (formula "45") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "45") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "45") (term "0,0,1"))
                                             (rule "leq_literals" (formula "45") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "45"))
                                             (rule "inEqSimp_contradInEq1" (formula "45") (ifseqformula "10"))
                                             (rule "qeq_literals" (formula "45") (term "0"))
                                             (builtin "One Step Simplification" (formula "45"))
                                             (rule "closeFalse" (formula "45"))
                                          )
                                          (branch " (result_1[i_5]@anon_heap_addEntry«anonHeapFunction»).<created>@anon_heap_first«anonHeapFunction» = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "56") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "eqSymm" (formula "55"))
                                             (rule "ifthenelse_to_or_left" (formula "18") (term "0,0,0,1,1,0"))
                                             (rule "eqSymm" (formula "18") (term "1,1,0,0,0,1,1,0"))
                                             (builtin "One Step Simplification" (formula "18"))
                                             (rule "eqSymm" (formula "18") (term "1,0,0,0,0,1,1,0"))
                                             (rule "nnf_notAnd" (formula "18") (term "0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "18") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "18") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0,0,1,1,0"))
                                             (rule "nnf_notAnd" (formula "18") (term "0,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "18") (term "1,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "18") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "18") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "18") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "18") (term "0,0,1,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "18") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "18") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,1,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "18") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "18") (term "0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "18") (term "0,1,1,0"))
                                             (rule "commute_or_2" (formula "18") (term "0,1,0,1,1,0"))
                                             (rule "commute_or" (formula "18") (term "1,1,0,1,1,0"))
                                             (rule "commute_or" (formula "18") (term "0,0,1,0,1,1,0"))
                                             (rule "commute_or_2" (formula "18") (term "0,1,1,0,1,1,0"))
                                             (rule "commute_or" (formula "18") (term "0,0,1,1,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "18") (term "1,1,0,1,1,0"))
                                             (rule "commute_or_2" (formula "18") (term "0,1,1,0,1,1,0"))
                                             (rule "inEqSimp_or_tautInEq1" (formula "18") (term "0,0,1,1,0,1,1,0"))
                                             (rule "add_literals" (formula "18") (term "1,1,0,0,1,1,0,1,1,0"))
                                             (rule "qeq_literals" (formula "18") (term "1,0,0,1,1,0,1,1,0"))
                                             (builtin "One Step Simplification" (formula "18"))
                                             (rule "commute_or" (formula "18") (term "1,1,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "18") (term "0,1,1,0"))
                                             (rule "commute_or_2" (formula "18") (term "0,0,1,1,0"))
                                             (rule "shift_paren_or" (formula "18") (term "1,0,1,1,0"))
                                             (rule "commute_or_2" (formula "18") (term "0,1,0,1,1,0"))
                                             (rule "shift_paren_or" (formula "18") (term "0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "18") (term "0,0,1,0,1,1,0"))
                                             (builtin "One Step Simplification" (formula "18"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "47") (term "0") (ifseqformula "9"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "48"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "0") (ifseqformula "10"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "51"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "11"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "55") (term "0") (ifseqformula "12"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "56"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "13"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "0") (ifseqformula "14"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "51"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "15"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "58") (term "0") (ifseqformula "16"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "59"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "arrayLengthNotNegative" (formula "30") (term "1,1,0"))
                                             (rule "arrayLengthIsAShort" (formula "31") (term "1,1,0"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "true_left" (formula "31"))
                                             (rule "shift_paren_or" (formula "26") (term "0,0,0,0,1,1,0"))
                                             (rule "arrayLengthNotNegative" (formula "29") (term "1,1,0"))
                                             (rule "arrayLengthIsAShort" (formula "30") (term "1,1,0"))
                                             (builtin "One Step Simplification" (formula "30"))
                                             (rule "true_left" (formula "30"))
                                             (rule "arrayLengthIsAShort" (formula "28") (term "1,1,0"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "arrayLengthNotNegative" (formula "28") (term "1,1,0"))
                                             (rule "commute_or" (formula "26") (term "0,0,0,0,0,1,1,0"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "allLeft" (formula "50") (inst "t=i_5"))
                                             (rule "inEqSimp_homoInEq1" (formula "50") (term "1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,1"))
                                             (rule "add_literals" (formula "50") (term "1,1,0,1"))
                                             (rule "times_zero_1" (formula "50") (term "1,0,1"))
                                             (rule "add_literals" (formula "50") (term "0,1"))
                                             (rule "leq_literals" (formula "50") (term "1"))
                                             (builtin "One Step Simplification" (formula "50"))
                                             (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "11"))
                                             (rule "qeq_literals" (formula "50") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "50"))
                                             (rule "notLeft" (formula "50"))
                                             (rule "pullOutSelect" (formula "52") (term "0") (inst "selectSK=arr_19"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "71")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "37"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "69"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "70")))
                                             (rule "applyEqReverse" (formula "53") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "narrowSelectArrayType" (formula "52") (term "0") (ifseqformula "39") (ifseqformula "70"))
                                             (rule "allLeft" (formula "27") (inst "t=i_5"))
                                             (rule "inEqSimp_commuteGeq" (formula "27") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "27") (term "1,0") (ifseqformula "11"))
                                             (rule "qeq_literals" (formula "27") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "14"))
                                             (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "27") (term "0,0,1"))
                                             (rule "leq_literals" (formula "27") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "notLeft" (formula "27"))
                                             (rule "allLeft" (formula "46") (inst "t=i_5"))
                                             (rule "inEqSimp_commuteGeq" (formula "46") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "46") (term "1") (ifseqformula "14"))
                                             (rule "inEqSimp_homoInEq1" (formula "46") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,1"))
                                             (rule "add_literals" (formula "46") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "46") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "46") (term "0,0,1"))
                                             (rule "leq_literals" (formula "46") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "46"))
                                             (rule "inEqSimp_contradInEq1" (formula "46") (term "1") (ifseqformula "11"))
                                             (rule "qeq_literals" (formula "46") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "46"))
                                             (rule "notLeft" (formula "46"))
                                             (rule "pullOutSelect" (formula "52") (term "0") (inst "selectSK=arr_20"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "37"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "14"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")) (ifInst ""  (formula "14")))
                                             (rule "applyEqReverse" (formula "53") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "narrowSelectArrayType" (formula "52") (term "0") (ifseqformula "17") (ifseqformula "57"))
                                             (rule "arrayLengthIsAShort" (formula "43") (term "0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "true_left" (formula "43"))
                                             (rule "arrayLengthNotNegative" (formula "43") (term "0"))
                                             (rule "applyEq" (formula "43") (term "0") (ifseqformula "44"))
                                             (rule "inEqSimp_subsumption1" (formula "43") (ifseqformula "42"))
                                             (rule "leq_literals" (formula "43") (term "0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "true_left" (formula "43"))
                                             (rule "all_pull_out1" (formula "26") (term "1,0"))
                                             (rule "shift_paren_and" (formula "26") (term "0,1,0"))
                                             (rule "allLeft" (formula "44") (inst "t=iv_0"))
                                             (rule "replaceKnownSelect_taclet1110000000_4" (formula "44") (term "0,0,0"))
                                             (rule "replaceKnownSelect_taclet1110000000_5" (formula "44") (term "1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet100001110000000_37" (formula "44") (term "0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1110000000_7" (formula "44") (term "1,0,0"))
                                             (rule "eqSymm" (formula "44") (term "0,0"))
                                             (rule "narrowSelectArrayType" (formula "44") (term "0,0,0") (ifseqformula "35") (ifseqformula "74"))
                                             (rule "replace_known_right" (formula "44") (term "0,0") (ifseqformula "68"))
                                             (builtin "One Step Simplification" (formula "44"))
                                             (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "10"))
                                             (rule "inEqSimp_homoInEq1" (formula "44") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1"))
                                             (rule "add_literals" (formula "44") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "44") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "44") (term "0,0,1"))
                                             (rule "leq_literals" (formula "44") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "44"))
                                             (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "44"))
                                             (rule "qeq_literals" (formula "9") (term "0"))
                                             (builtin "One Step Simplification" (formula "9"))
                                             (rule "closeFalse" (formula "9"))
                                          )
                                       )
                                       (branch "result_0.length ≥ 1 FALSE"
                                          (rule "eqSymm" (formula "33"))
                                          (rule "inEqSimp_geqRight" (formula "43"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "applyEq" (formula "33") (term "0") (ifseqformula "34"))
                                          (rule "qeq_literals" (formula "33"))
                                          (rule "closeFalse" (formula "33"))
                                       )
                                    )
                                    (branch " ¬ result_1[i_5]@anon_heap_addEntry«anonHeapFunction» = null ∧ ¬ (result_1[i_5]@anon_heap_addEntry«anonHeapFunction»).<created> = TRUE FALSE"
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "nnf_notAnd" (formula "33") (term "0,1,1,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "33") (term "1,0,1,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,1,1,1,0"))
                                       (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,1,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,1,1,1,0"))
                                       (rule "add_literals" (formula "33") (term "0,0,0,1,0,1,1,1,0"))
                                       (rule "add_zero_left" (formula "33") (term "0,0,1,0,1,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,1,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,1,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "33") (term "1,1,0,1,1,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "33") (term "0,0,1,1,1,0"))
                                       (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,1,1,1,0"))
                                       (rule "add_zero_right" (formula "33") (term "0,0,0,0,1,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,1,1,1,0"))
                                       (rule "mul_literals" (formula "33") (term "1,0,0,1,1,1,0"))
                                       (rule "commute_or" (formula "40") (term "0,0"))
                                       (rule "commute_or" (formula "23") (term "0,0"))
                                       (rule "commute_or_2" (formula "22") (term "0"))
                                       (rule "commute_or_2" (formula "21") (term "0"))
                                       (rule "commute_or_2" (formula "20") (term "0"))
                                       (rule "commute_or_2" (formula "19") (term "0"))
                                       (rule "commute_or" (formula "18") (term "0,0,1,1,0"))
                                       (rule "shift_paren_or" (formula "18") (term "1,0,1,0"))
                                       (rule "commute_or_2" (formula "39") (term "0"))
                                       (rule "commute_or_2" (formula "38") (term "0"))
                                       (rule "commute_or_2" (formula "37") (term "0"))
                                       (rule "commute_or_2" (formula "36") (term "0"))
                                       (rule "ifthenelse_to_or_left" (formula "18") (term "1,0,0,1,0"))
                                       (rule "eqSymm" (formula "18") (term "1,1,1,0,0,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "18") (term "0,0,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "18") (term "1,0,0,0,0,1,0,0,1,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0,0,1,0,0,1,0"))
                                       (rule "add_zero_left" (formula "18") (term "0,0,0,1,0,0,1,0"))
                                       (rule "commute_or_2" (formula "33") (term "0,1,0"))
                                       (rule "commute_or" (formula "22") (term "0,0"))
                                       (rule "commute_or" (formula "21") (term "0,0"))
                                       (rule "commute_or" (formula "20") (term "0,0"))
                                       (rule "commute_or" (formula "19") (term "0,0"))
                                       (rule "commute_or" (formula "39") (term "0,0"))
                                       (rule "commute_or" (formula "38") (term "0,0"))
                                       (rule "commute_or" (formula "37") (term "0,0"))
                                       (rule "commute_or" (formula "36") (term "0,0"))
                                       (rule "commute_or" (formula "33") (term "1,1,0"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "6") (term "0,0") (ifseqformula "9"))
                                       (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "44"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "commute_or" (formula "34") (term "0,0,1,0"))
                                       (rule "commute_or_2" (formula "34") (term "0,1,1,0"))
                                       (rule "commute_or" (formula "34") (term "0,0,1,1,0"))
                                       (rule "commute_or" (formula "19") (term "1,1,0,0,1,0"))
                                       (rule "cnf_rightDist" (formula "34") (term "1,1,0"))
                                       (rule "commute_or" (formula "34") (term "1,1,1,0"))
                                       (rule "cnf_rightDist" (formula "34") (term "0"))
                                       (rule "distr_forallAnd" (formula "34"))
                                       (rule "andLeft" (formula "34"))
                                       (rule "commute_or" (formula "35") (term "0"))
                                       (rule "shift_paren_or" (formula "34") (term "0"))
                                       (rule "commute_or_2" (formula "34") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "commute_or_2" (formula "35") (term "0,1,0"))
                                       (rule "inEqSimp_or_tautInEq1" (formula "35") (term "0,0,1,0"))
                                       (rule "add_zero_right" (formula "35") (term "1,1,0,0,1,0"))
                                       (rule "qeq_literals" (formula "35") (term "1,0,0,1,0"))
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "commute_or_2" (formula "35") (term "0"))
                                       (rule "shift_paren_or" (formula "34") (term "0,0"))
                                       (rule "shift_paren_or" (formula "35") (term "0,0"))
                                       (rule "inEqSimp_or_tautInEq1" (formula "35") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "35") (term "1,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "35") (term "0,1,0"))
                                       (rule "add_literals" (formula "35") (term "1,0,1,0"))
                                       (rule "times_zero_1" (formula "35") (term "0,1,0"))
                                       (rule "leq_literals" (formula "35") (term "1,0"))
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "true_left" (formula "35"))
                                       (rule "commute_or" (formula "34") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "cnf_rightDist" (formula "19") (term "0,0,1,0"))
                                       (rule "commute_or_2" (formula "19") (term "1,0,0,1,0"))
                                       (rule "inEqSimp_or_subsumption4" (formula "19") (term "0,1,0,0,1,0"))
                                       (rule "greater_literals" (formula "19") (term "0,0,0,1,0,0,1,0"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "shift_paren_or" (formula "19") (term "0,0,0,1,0"))
                                       (rule "ifthenelse_split" (formula "33") (term "0"))
                                       (branch "result_0.length ≥ 1 TRUE"
                                          (rule "eqSymm" (formula "34"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "34"))
                                          (rule "replace_known_left" (formula "56") (term "0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "56"))
                                          (rule "eqSymm" (formula "56"))
                                          (rule "applyEq" (formula "32") (term "0") (ifseqformula "34"))
                                          (rule "applyEq" (formula "34") (term "1,1,0") (ifseqformula "33"))
                                          (rule "inEqSimp_subsumption1" (formula "35") (ifseqformula "32"))
                                          (rule "leq_literals" (formula "35") (term "0"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "true_left" (formula "35"))
                                          (rule "ifthenelse_to_or_left" (formula "34") (term "0,0,0"))
                                          (rule "eqSymm" (formula "34") (term "1,0,0,0,0"))
                                          (rule "eqSymm" (formula "34") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "34") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "34") (term "0,0,1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0,0,0,0"))
                                          (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "34") (term "0,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "34") (term "1,0,0,0,0,0,0"))
                                          (rule "commute_or" (formula "34") (term "0,0"))
                                          (rule "commute_or_2" (formula "34") (term "0"))
                                          (rule "commute_or" (formula "34") (term "1,1,0"))
                                          (rule "commute_or_2" (formula "34") (term "0,1,0"))
                                          (rule "commute_or" (formula "34") (term "0,0,1,0"))
                                          (rule "cnf_rightDist" (formula "34") (term "1,1,0"))
                                          (rule "cnf_rightDist" (formula "34") (term "0"))
                                          (rule "distr_forallAnd" (formula "34"))
                                          (rule "andLeft" (formula "34"))
                                          (rule "commute_or" (formula "35") (term "0"))
                                          (rule "shift_paren_or" (formula "34") (term "0"))
                                          (rule "commute_or_2" (formula "34") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "commute_or" (formula "35") (term "1,1,0"))
                                          (rule "shift_paren_or" (formula "34") (term "0,0"))
                                          (rule "commute_or" (formula "34") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "cnf_rightDist" (formula "35") (term "0"))
                                          (rule "distr_forallAnd" (formula "35"))
                                          (rule "andLeft" (formula "35"))
                                          (rule "commute_or_2" (formula "35") (term "0"))
                                          (rule "shift_paren_or" (formula "36") (term "0"))
                                          (rule "commute_or_2" (formula "36") (term "0,0"))
                                          (rule "inEqSimp_or_tautInEq1" (formula "36") (term "0"))
                                          (rule "inEqSimp_homoInEq1" (formula "36") (term "1,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "36") (term "0,1,0"))
                                          (rule "add_literals" (formula "36") (term "1,0,1,0"))
                                          (rule "times_zero_1" (formula "36") (term "0,1,0"))
                                          (rule "leq_literals" (formula "36") (term "1,0"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "true_left" (formula "36"))
                                          (rule "shift_paren_or" (formula "35") (term "0,0"))
                                          (rule "commute_or" (formula "35") (term "0,0,0"))
                                          (rule "inEqSimp_or_tautInEq1" (formula "35") (term "0,0"))
                                          (rule "add_zero_right" (formula "35") (term "1,1,0,0"))
                                          (rule "qeq_literals" (formula "35") (term "1,0,0"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "true_left" (formula "35"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch " ¬ result_1[i_5]@anon_heap_addEntry«anonHeapFunction» = null ∧ ¬( (result_1[i_5]@anon_heap_addEntry«anonHeapFunction»).<created> = TRUE ∨ (result_1[i_5]@anon_heap_addEntry«anonHeapFunction»).<created>@anon_heap_first«anonHeapFunction» = TRUE) TRUE"
                                             (rule "andLeft" (formula "1"))
                                             (rule "notLeft" (formula "2"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "orRight" (formula "43"))
                                             (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_right" (formula "44") (term "0,0") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "42")))
                                             (rule "closeTrue" (formula "44"))
                                          )
                                          (branch " ¬ result_1[i_5]@anon_heap_addEntry«anonHeapFunction» = null ∧ ¬( (result_1[i_5]@anon_heap_addEntry«anonHeapFunction»).<created> = TRUE ∨ (result_1[i_5]@anon_heap_addEntry«anonHeapFunction»).<created>@anon_heap_first«anonHeapFunction» = TRUE) FALSE"
                                             (rule "applyEqReverse" (formula "55") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "ifthenelse_to_or_right" (formula "18") (term "0,0,0,1,1,0"))
                                             (builtin "One Step Simplification" (formula "18"))
                                             (rule "nnf_notAnd" (formula "18") (term "0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "18") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "18") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0,0,1,1,0"))
                                             (rule "nnf_notAnd" (formula "18") (term "0,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "18") (term "0,0,1,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "18") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "18") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,1,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "18") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "18") (term "1,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "18") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "18") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "18") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "18") (term "0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "18") (term "0,1,1,0"))
                                             (rule "commute_or_2" (formula "18") (term "0,1,0,1,1,0"))
                                             (rule "commute_or" (formula "18") (term "1,1,0,1,1,0"))
                                             (rule "commute_or" (formula "18") (term "0,0,1,0,1,1,0"))
                                             (rule "commute_or_2" (formula "18") (term "0,1,1,0,1,1,0"))
                                             (rule "commute_or" (formula "18") (term "0,0,1,1,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "18") (term "1,1,0,1,1,0"))
                                             (rule "commute_or_2" (formula "18") (term "0,1,1,0,1,1,0"))
                                             (rule "inEqSimp_or_tautInEq1" (formula "18") (term "0,0,1,1,0,1,1,0"))
                                             (rule "add_zero_right" (formula "18") (term "1,1,0,0,1,1,0,1,1,0"))
                                             (rule "qeq_literals" (formula "18") (term "1,0,0,1,1,0,1,1,0"))
                                             (builtin "One Step Simplification" (formula "18"))
                                             (rule "shift_paren_or" (formula "18") (term "1,1,0,1,1,0"))
                                             (rule "commute_or" (formula "18") (term "0,1,1,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "18") (term "0,1,1,0"))
                                             (rule "commute_or_2" (formula "18") (term "0,0,1,1,0"))
                                             (rule "shift_paren_or" (formula "18") (term "1,0,1,1,0"))
                                             (rule "commute_or_2" (formula "18") (term "0,1,0,1,1,0"))
                                             (rule "shift_paren_or" (formula "18") (term "0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "18") (term "0,0,1,0,1,1,0"))
                                             (builtin "One Step Simplification" (formula "18"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "49") (term "0") (ifseqformula "9"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "50"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "45") (term "0") (ifseqformula "10"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "46"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "47") (term "0") (ifseqformula "11"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "48"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "50") (term "0") (ifseqformula "12"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "51"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "13"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "56") (term "0") (ifseqformula "14"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "57"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "52") (term "0") (ifseqformula "15"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "57") (term "0") (ifseqformula "16"))
                                             (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "58"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "shift_paren_or" (formula "26") (term "0,0,0,0,1,1,0"))
                                             (rule "arrayLengthIsAShort" (formula "30") (term "1,1,0"))
                                             (builtin "One Step Simplification" (formula "30"))
                                             (rule "true_left" (formula "30"))
                                             (rule "arrayLengthNotNegative" (formula "30") (term "1,1,0"))
                                             (rule "arrayLengthIsAShort" (formula "29") (term "1,1,0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "true_left" (formula "29"))
                                             (rule "arrayLengthNotNegative" (formula "29") (term "1,1,0"))
                                             (rule "arrayLengthIsAShort" (formula "28") (term "1,1,0"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "arrayLengthNotNegative" (formula "28") (term "1,1,0"))
                                             (rule "commute_or" (formula "26") (term "0,0,0,0,0,1,1,0"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "allLeft" (formula "50") (inst "t=i_5"))
                                             (rule "inEqSimp_homoInEq1" (formula "50") (term "1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,1"))
                                             (rule "add_literals" (formula "50") (term "1,1,0,1"))
                                             (rule "times_zero_1" (formula "50") (term "1,0,1"))
                                             (rule "add_zero_right" (formula "50") (term "0,1"))
                                             (rule "leq_literals" (formula "50") (term "1"))
                                             (builtin "One Step Simplification" (formula "50"))
                                             (rule "inEqSimp_contradInEq1" (formula "50") (term "1") (ifseqformula "11"))
                                             (rule "qeq_literals" (formula "50") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "50"))
                                             (rule "notLeft" (formula "50"))
                                             (rule "pullOutSelect" (formula "52") (term "0") (inst "selectSK=arr_17"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "70")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "37"))
                                             (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "69"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")))
                                             (rule "applyEqReverse" (formula "53") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "narrowSelectArrayType" (formula "52") (term "0") (ifseqformula "39") (ifseqformula "69"))
                                             (rule "replace_known_right" (formula "54") (term "0,0") (ifseqformula "52"))
                                             (builtin "One Step Simplification" (formula "54"))
                                             (rule "notRight" (formula "54"))
                                             (rule "replace_known_left" (formula "54") (term "0,0,1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "53")))
                                             (rule "false_right" (formula "54"))
                                             (rule "narrowSelectArrayType" (formula "65") (term "0") (ifseqformula "18") (ifseqformula "53"))
                                             (rule "eqSymm" (formula "65"))
                                             (rule "allLeft" (formula "28") (inst "t=i_5"))
                                             (rule "inEqSimp_commuteGeq" (formula "28") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "15"))
                                             (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                                             (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "28") (term "0,0,1"))
                                             (rule "leq_literals" (formula "28") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "12"))
                                             (rule "qeq_literals" (formula "28") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "notLeft" (formula "28"))
                                             (rule "allLeft" (formula "47") (inst "t=i_5"))
                                             (rule "inEqSimp_commuteGeq" (formula "47") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "47") (term "1") (ifseqformula "15"))
                                             (rule "inEqSimp_homoInEq1" (formula "47") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "47") (term "0,0,1"))
                                             (rule "leq_literals" (formula "47") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "inEqSimp_contradInEq1" (formula "47") (term "1") (ifseqformula "12"))
                                             (rule "qeq_literals" (formula "47") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "notLeft" (formula "47"))
                                             (rule "pullOutSelect" (formula "53") (term "0") (inst "selectSK=arr_18"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "42"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "38"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "15"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")) (ifInst ""  (formula "15")))
                                             (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "narrowSelectArrayType" (formula "53") (term "0") (ifseqformula "18") (ifseqformula "56"))
                                             (rule "arrayLengthNotNegative" (formula "44") (term "0"))
                                             (rule "applyEq" (formula "44") (term "0") (ifseqformula "45"))
                                             (rule "inEqSimp_subsumption1" (formula "44") (ifseqformula "43"))
                                             (rule "leq_literals" (formula "44") (term "0"))
                                             (builtin "One Step Simplification" (formula "44"))
                                             (rule "true_left" (formula "44"))
                                             (rule "arrayLengthIsAShort" (formula "44") (term "0"))
                                             (builtin "One Step Simplification" (formula "44"))
                                             (rule "true_left" (formula "44"))
                                             (rule "all_pull_out1" (formula "27") (term "1,0"))
                                             (rule "shift_paren_and" (formula "27") (term "0,1,0"))
                                             (rule "allLeft" (formula "45") (inst "t=iv_0"))
                                             (rule "replaceKnownSelect_taclet1110000000_5" (formula "45") (term "1,0,0"))
                                             (rule "replaceKnownSelect_taclet1110000000_4" (formula "45") (term "0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1110000000_7" (formula "45") (term "1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet101001110000000_37" (formula "45") (term "0,0,0"))
                                             (rule "eqSymm" (formula "45") (term "0,0"))
                                             (rule "narrowSelectArrayType" (formula "45") (term "0,0,0") (ifseqformula "36") (ifseqformula "73"))
                                             (rule "eqSymm" (formula "45") (term "0,0"))
                                             (rule "narrowSelectArrayType" (formula "45") (term "0,0,0") (ifseqformula "18") (ifseqformula "55"))
                                             (rule "eqSymm" (formula "45") (term "0,0"))
                                             (rule "replace_known_right" (formula "45") (term "0,0") (ifseqformula "67"))
                                             (builtin "One Step Simplification" (formula "45"))
                                             (rule "inEqSimp_commuteGeq" (formula "45") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "45") (term "1") (ifseqformula "11"))
                                             (rule "inEqSimp_homoInEq1" (formula "45") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,1"))
                                             (rule "add_literals" (formula "45") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "45") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "45") (term "0,0,1"))
                                             (rule "leq_literals" (formula "45") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "45"))
                                             (rule "inEqSimp_contradInEq1" (formula "45") (ifseqformula "10"))
                                             (rule "qeq_literals" (formula "45") (term "0"))
                                             (builtin "One Step Simplification" (formula "45"))
                                             (rule "closeFalse" (formula "45"))
                                          )
                                       )
                                       (branch "result_0.length ≥ 1 FALSE"
                                          (rule "eqSymm" (formula "33"))
                                          (rule "inEqSimp_geqRight" (formula "43"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "applyEq" (formula "4") (term "0") (ifseqformula "34"))
                                          (rule "inEqSimp_homoInEq1" (formula "4"))
                                          (rule "times_zero_2" (formula "4") (term "1,0"))
                                          (rule "add_zero_right" (formula "4") (term "0"))
                                          (rule "applyEq" (formula "33") (term "0") (ifseqformula "34"))
                                          (rule "qeq_literals" (formula "33"))
                                          (rule "closeFalse" (formula "33"))
                                       )
                                    )
                                 )
                                 (branch " result_1[i_5]@anon_heap_addEntry«anonHeapFunction».length ≥ 1 FALSE"
                                    (rule "eqSymm" (formula "32"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "inEqSimp_geqRight" (formula "42"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_notGeq" (formula "33") (term "0"))
                                    (rule "mul_literals" (formula "33") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "33") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "33") (term "0,0"))
                                    (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "38") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "38") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                                    (rule "mul_literals" (formula "38") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "38") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "38") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "37") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0"))
                                    (rule "mul_literals" (formula "37") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "37") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "37") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "37") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0"))
                                    (rule "ifthenelse_split" (formula "5") (term "0"))
                                    (branch "result_0.length ≥ 1 TRUE"
                                       (rule "replace_known_left" (formula "55") (term "0,1") (ifseqformula "6"))
                                       (builtin "One Step Simplification" (formula "55"))
                                       (rule "replace_known_left" (formula "35") (term "0,1,1,0,0") (ifseqformula "5"))
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "inEqSimp_contradEq7" (formula "34") (term "1") (ifseqformula "5"))
                                       (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                       (rule "leq_literals" (formula "34") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "inEqSimp_contradInEq1" (formula "34") (ifseqformula "5"))
                                       (rule "qeq_literals" (formula "34") (term "0"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "closeFalse" (formula "34"))
                                    )
                                    (branch "result_0.length ≥ 1 FALSE"
                                       (rule "replace_known_right" (formula "34") (term "0,1,1,0,0") (ifseqformula "43"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "inEqSimp_geqRight" (formula "43"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "true_left" (formula "34"))
                                       (rule "inEqSimp_homoInEq1" (formula "6"))
                                       (rule "times_zero_2" (formula "6") (term "1,0"))
                                       (rule "add_zero_right" (formula "6") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                       (rule "mul_literals" (formula "6") (term "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "5"))
                                       (rule "qeq_literals" (formula "6") (term "0"))
                                       (builtin "One Step Simplification" (formula "6"))
                                       (rule "closeFalse" (formula "6"))
                                    )
                                 )
                              )
                              (branch "i_5 ≥ 1 FALSE"
                                 (rule "inEqSimp_geqRight" (formula "41"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "6"))
                                 (rule "inEqSimp_antiSymm" (formula "8") (ifseqformula "1"))
                                 (rule "applyEqRigid" (formula "3") (term "0,2,0,0,0,0,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "25") (term "1,1,0,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "20") (term "1,1,0,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "2") (term "0,2,0,0,0,0,0") (ifseqformula "8"))
                                 (rule "applyEq" (formula "33") (term "0,2,0,1,0") (ifseqformula "8"))
                                 (rule "applyEqRigid" (formula "34") (term "0,2,1,1,0,1,0") (ifseqformula "8"))
                                 (rule "applyEqRigid" (formula "3") (term "0,2,1,0,1,0,1,0,0") (ifseqformula "8"))
                                 (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "8"))
                                 (rule "leq_literals" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "applyEqRigid" (formula "2") (term "0,2,1,0,0,0,1,0,0") (ifseqformula "7"))
                                 (rule "applyEq" (formula "16") (term "0,0,0") (ifseqformula "7"))
                                 (rule "applyEqRigid" (formula "1") (term "0,2,1,2,0") (ifseqformula "7"))
                                 (rule "applyEq" (formula "1") (term "0,2,1,0,0,1,0,0") (ifseqformula "7"))
                                 (rule "applyEq" (formula "1") (term "0,2,1,1,0") (ifseqformula "7"))
                                 (rule "applyEqRigid" (formula "33") (term "0,2,0,1,1,1,0,0,1,0") (ifseqformula "7"))
                                 (rule "applyEq" (formula "2") (term "0,2,1,1,0") (ifseqformula "7"))
                                 (rule "applyEqRigid" (formula "8") (term "0") (ifseqformula "7"))
                                 (rule "qeq_literals" (formula "8"))
                                 (rule "true_left" (formula "8"))
                                 (rule "applyEqRigid" (formula "31") (term "0,2,0,0,0,0") (ifseqformula "7"))
                                 (rule "applyEqRigid" (formula "17") (term "0,0,0") (ifseqformula "7"))
                                 (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "7"))
                                 (rule "add_literals" (formula "5") (term "1"))
                                 (rule "applyEqRigid" (formula "51") (term "0,2,0,0,0,0") (ifseqformula "7"))
                                 (rule "applyEqRigid" (formula "38") (term "1,1,1,0,0") (ifseqformula "7"))
                                 (rule "add_zero_right" (formula "38") (term "1,1,0,0"))
                                 (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "7"))
                                 (rule "add_literals" (formula "8") (term "1"))
                                 (rule "applyEq" (formula "6") (term "1") (ifseqformula "7"))
                                 (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "15"))
                                 (rule "times_zero_1" (formula "17") (term "0,0"))
                                 (rule "add_zero_left" (formula "17") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                 (rule "mul_literals" (formula "17") (term "1"))
                                 (rule "inEqSimp_or_tautInEq0" (formula "23") (term "0,0"))
                                 (rule "add_zero_right" (formula "23") (term "1,1,0,0"))
                                 (rule "qeq_literals" (formula "23") (term "1,0,0"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "true_left" (formula "23"))
                                 (rule "inEqSimp_or_tautInEq0" (formula "18") (term "0,0"))
                                 (rule "add_zero_right" (formula "18") (term "1,1,0,0"))
                                 (rule "qeq_literals" (formula "18") (term "1,0,0"))
                                 (builtin "One Step Simplification" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "inEqSimp_or_antiSymm0" (formula "36") (term "0,0"))
                                 (rule "add_literals" (formula "36") (term "0,0,0,0"))
                                 (builtin "One Step Simplification" (formula "36"))
                                 (rule "add_literals" (formula "36") (term "1,0,0,0"))
                                 (rule "nnf_imp2or" (formula "21") (term "0"))
                                 (rule "nnf_imp2or" (formula "20") (term "0"))
                                 (rule "nnf_imp2or" (formula "19") (term "0"))
                                 (rule "arrayLengthIsAShort" (formula "15") (term "1,1"))
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "true_left" (formula "15"))
                                 (rule "arrayLengthNotNegative" (formula "15") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "17"))
                                 (rule "leq_literals" (formula "15") (term "0"))
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "true_left" (formula "15"))
                                 (rule "nnf_imp2or" (formula "18") (term "0"))
                                 (rule "arrayLengthIsAShort" (formula "5") (term "0"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "arrayLengthNotNegative" (formula "5") (term "0"))
                                 (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "6"))
                                 (rule "leq_literals" (formula "5") (term "0"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "arrayLengthIsAShort" (formula "31") (term "1,0,1,0"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "true_left" (formula "31"))
                                 (rule "equalityToSeqGetAndSeqLenLeft" (formula "31") (inst "iv=iv"))
                                 (rule "andLeft" (formula "31"))
                                 (rule "lenOfSeqConcat" (formula "32") (term "1,1,0,0"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "polySimp_addComm0" (formula "32") (term "1,1,0,0"))
                                 (rule "lenOfSeqConcat" (formula "31") (term "0"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "polySimp_homoEq" (formula "31"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "31") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                 (rule "mul_literals" (formula "31") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                 (rule "polySimp_addComm0" (formula "31") (term "0,0"))
                                 (rule "lenOfSeqConcatEQ" (formula "31") (term "1,0,0") (ifseqformula "33"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "polySimp_addComm0" (formula "31") (term "1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                 (rule "add_literals" (formula "31") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "31") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "31") (term "0"))
                                 (rule "add_literals" (formula "31") (term "1,0"))
                                 (rule "times_zero_1" (formula "31") (term "0"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "true_left" (formula "31"))
                                 (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                                 (rule "getOfSeqConcat" (formula "31") (term "0,1,0"))
                                 (rule "polySimp_elimSub" (formula "31") (term "1,2,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "31") (term "1,2,0,1,0"))
                                 (rule "getOfSeqSingleton" (formula "31") (term "2,0,1,0"))
                                 (rule "castDel" (formula "31") (term "2,2,0,1,0"))
                                 (rule "castDel" (formula "31") (term "1,2,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,1,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "31") (term "0,2,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,0,2,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1,0,2,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,1,0"))
                                 (rule "getOfSeqConcatEQ" (formula "31") (term "1,1,0") (ifseqformula "32"))
                                 (rule "eqSymm" (formula "31") (term "1,0"))
                                 (rule "polySimp_elimSub" (formula "31") (term "1,2,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "31") (term "1,2,0,1,0"))
                                 (rule "getOfSeqSingleton" (formula "31") (term "2,0,1,0"))
                                 (rule "castDel" (formula "31") (term "2,2,0,1,0"))
                                 (rule "castDel" (formula "31") (term "1,2,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,0,1,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "31") (term "0,2,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,0,2,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1,0,2,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,1,0"))
                                 (builtin "One Step Simplification" (formula "31"))
                                 (rule "true_left" (formula "31"))
                                 (rule "arrayLengthNotNegative" (formula "31") (term "1,0,1,0"))
                                 (rule "nnf_imp2or" (formula "36") (term "0"))
                                 (rule "nnf_imp2or" (formula "35") (term "0"))
                                 (rule "nnf_imp2or" (formula "34") (term "0"))
                                 (rule "nnf_imp2or" (formula "33") (term "0"))
                                 (rule "nnf_notAnd" (formula "21") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "21") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "21") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                 (rule "mul_literals" (formula "21") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "20") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                 (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "20") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                 (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                 (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                                 (rule "ifthenelse_split" (formula "29") (term "1"))
                                 (branch "result_0.length ≥ 1 TRUE"
                                    (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "replace_known_left" (formula "31") (term "0,1,1,0,0") (ifseqformula "29"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "replace_known_left" (formula "51") (term "0,1") (ifseqformula "4"))
                                    (builtin "One Step Simplification" (formula "51"))
                                    (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "29"))
                                    (rule "leq_literals" (formula "32") (term "0"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "true_left" (formula "32"))
                                    (rule "nnf_notAnd" (formula "36") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "36") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0"))
                                    (rule "mul_literals" (formula "36") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "36") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "36") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "35") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "35") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "35") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
                                    (rule "mul_literals" (formula "35") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "34") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "34") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "34") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
                                    (rule "mul_literals" (formula "34") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "33") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "33") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                                    (rule "mul_literals" (formula "33") (term "1,0,0,0"))
                                    (rule "commute_or" (formula "37") (term "0"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "castDel" (formula "37") (term "0,2,0,0"))
                                    (rule "notLeft" (formula "37"))
                                    (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=arr_11"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "54")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "24"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "52"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                                    (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "narrowSelectArrayType" (formula "38") (term "0") (ifseqformula "26") (ifseqformula "53"))
                                    (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "38"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "38"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "ifthenelse_negated" (formula "2") (term "0"))
                                    (rule "ifthenelse_negated" (formula "1") (term "0"))
                                    (rule "narrowSelectArrayType" (formula "2") (term "2,0") (ifseqformula "26") (ifseqformula "38"))
                                    (rule "narrowSelectArrayType" (formula "1") (term "1,0") (ifseqformula "9") (ifseqformula "38"))
                                    (rule "narrowSelectArrayType" (formula "1") (term "2,0") (ifseqformula "22") (ifseqformula "38"))
                                    (rule "commute_or_2" (formula "21") (term "0"))
                                    (rule "commute_or_2" (formula "20") (term "0"))
                                    (rule "commute_or_2" (formula "19") (term "0"))
                                    (rule "commute_or_2" (formula "18") (term "0"))
                                    (rule "commute_or_2" (formula "31") (term "0"))
                                    (rule "commute_or_2" (formula "36") (term "0"))
                                    (rule "commute_or_2" (formula "35") (term "0"))
                                    (rule "commute_or_2" (formula "34") (term "0"))
                                    (rule "ifthenelse_split" (formula "30") (term "0"))
                                    (branch " result_1[0]@anon_heap_addEntry«anonHeapFunction».length ≥ 1 TRUE"
                                       (rule "applyEq" (formula "32") (term "1,1,1,0,0,1,0,0") (ifseqformula "31"))
                                       (rule "applyEq" (formula "30") (term "0") (ifseqformula "31"))
                                       (rule "applyEq" (formula "50") (term "0,0,0") (ifseqformula "30"))
                                       (rule "replace_known_left" (formula "50") (term "0,0") (ifseqformula "4"))
                                       (builtin "One Step Simplification" (formula "50"))
                                       (rule "commute_or_2" (formula "33") (term "0"))
                                       (rule "commute_or" (formula "21") (term "0,0"))
                                       (rule "commute_or" (formula "20") (term "0,0"))
                                       (rule "commute_or" (formula "19") (term "0,0"))
                                       (rule "commute_or" (formula "18") (term "0,0"))
                                       (rule "commute_or" (formula "36") (term "0,0"))
                                       (rule "commute_or" (formula "35") (term "0,0"))
                                       (rule "commute_or" (formula "34") (term "0,0"))
                                       (rule "commute_or" (formula "31") (term "0,0"))
                                       (rule "commute_or" (formula "33") (term "0,0"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "5") (term "0,0") (ifseqformula "9"))
                                       (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "40"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "ifthenelse_to_or_right" (formula "32") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "nnf_notAnd" (formula "32") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,0,0,0"))
                                       (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "32") (term "0,0,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "32") (term "1,0,0,0,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "32") (term "0,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "32") (term "1,0,0,0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "32") (term "0,1,1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "32") (term "0,0,1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,1,1,0,0,0"))
                                       (rule "add_zero_right" (formula "32") (term "0,0,0,0,1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,1,1,0,0,0"))
                                       (rule "mul_literals" (formula "32") (term "1,0,0,1,1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "32") (term "1,0,1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,1,1,0,0,0"))
                                       (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,1,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,1,1,0,0,0"))
                                       (rule "add_literals" (formula "32") (term "0,0,0,1,0,1,1,0,0,0"))
                                       (rule "add_zero_left" (formula "32") (term "0,0,1,0,1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "32") (term "1,1,0,1,1,0,0,0"))
                                       (rule "commute_or" (formula "32") (term "0,0"))
                                       (rule "commute_or_2" (formula "32") (term "0"))
                                       (rule "commute_or_2" (formula "32") (term "0,1,0"))
                                       (rule "commute_or" (formula "32") (term "1,1,0"))
                                       (rule "commute_or" (formula "32") (term "0,0,1,0"))
                                       (rule "commute_or_2" (formula "32") (term "0,1,1,0"))
                                       (rule "commute_or" (formula "32") (term "0,0,1,1,0"))
                                       (rule "cnf_rightDist" (formula "32") (term "1,1,0"))
                                       (rule "commute_or_2" (formula "32") (term "0,1,1,0"))
                                       (rule "inEqSimp_or_tautInEq1" (formula "32") (term "0,0,1,1,0"))
                                       (rule "add_literals" (formula "32") (term "1,1,0,0,1,1,0"))
                                       (rule "qeq_literals" (formula "32") (term "1,0,0,1,1,0"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "shift_paren_or" (formula "32") (term "1,1,0"))
                                       (rule "commute_or" (formula "32") (term "0,1,1,0"))
                                       (rule "inEqSimp_or_tautInEq1" (formula "32") (term "1,1,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "32") (term "1,1,1,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "32") (term "0,1,1,1,0"))
                                       (rule "add_literals" (formula "32") (term "1,0,1,1,1,0"))
                                       (rule "times_zero_1" (formula "32") (term "0,1,1,1,0"))
                                       (rule "leq_literals" (formula "32") (term "1,1,1,0"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "shift_paren_or" (formula "32") (term "0"))
                                       (rule "commute_or_2" (formula "32") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "shift_paren_or" (formula "32") (term "0,0"))
                                       (rule "commute_or" (formula "32") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "ifthenelse_to_or_left" (formula "32") (term "0,0,0"))
                                       (rule "eqSymm" (formula "32") (term "1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "32") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,0,0,0"))
                                       (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "32") (term "0,0,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0,0,0,0"))
                                       (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "32") (term "0,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "32") (term "1,0,0,0,0,0,0"))
                                       (rule "commute_or" (formula "32") (term "0,0"))
                                       (rule "commute_or_2" (formula "32") (term "0"))
                                       (rule "commute_or_2" (formula "32") (term "0,1,0"))
                                       (rule "commute_or" (formula "32") (term "1,1,0"))
                                       (rule "commute_or" (formula "32") (term "0,0,1,0"))
                                       (rule "cnf_rightDist" (formula "32") (term "1,1,0"))
                                       (rule "cnf_rightDist" (formula "32") (term "0"))
                                       (rule "distr_forallAnd" (formula "32"))
                                       (rule "andLeft" (formula "32"))
                                       (rule "commute_or" (formula "33") (term "0"))
                                       (rule "shift_paren_or" (formula "32") (term "0"))
                                       (rule "commute_or_2" (formula "32") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "commute_or" (formula "33") (term "1,1,0"))
                                       (rule "shift_paren_or" (formula "32") (term "0,0"))
                                       (rule "commute_or" (formula "32") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "cnf_rightDist" (formula "33") (term "0"))
                                       (rule "distr_forallAnd" (formula "33"))
                                       (rule "andLeft" (formula "33"))
                                       (rule "commute_or_2" (formula "33") (term "0"))
                                       (rule "shift_paren_or" (formula "34") (term "0"))
                                       (rule "commute_or_2" (formula "34") (term "0,0"))
                                       (rule "inEqSimp_or_tautInEq1" (formula "34") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "34") (term "1,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "34") (term "0,1,0"))
                                       (rule "add_literals" (formula "34") (term "1,0,1,0"))
                                       (rule "times_zero_1" (formula "34") (term "0,1,0"))
                                       (rule "leq_literals" (formula "34") (term "1,0"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "true_left" (formula "34"))
                                       (rule "shift_paren_or" (formula "33") (term "0,0"))
                                       (rule "commute_or" (formula "33") (term "0,0,0"))
                                       (rule "inEqSimp_or_tautInEq1" (formula "33") (term "0,0"))
                                       (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                       (rule "qeq_literals" (formula "33") (term "1,0,0"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "true_left" (formula "33"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch " (result_1[0]@anon_heap_addEntry«anonHeapFunction»).<created> = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "51") (term "0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "eqSymm" (formula "50"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "46") (term "0") (ifseqformula "9"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "47"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "48") (term "0") (ifseqformula "10"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "49"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "43") (term "0") (ifseqformula "11"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "44"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "46") (term "0") (ifseqformula "12"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "47"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "48") (term "0") (ifseqformula "13"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "49"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "47") (term "0") (ifseqformula "14"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "48"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "0") (ifseqformula "15"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "52"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "47") (term "0") (ifseqformula "16"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "48"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "arrayLengthIsAShort" (formula "29") (term "1,1,0"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "true_left" (formula "29"))
                                          (rule "arrayLengthNotNegative" (formula "29") (term "1,1,0"))
                                          (rule "arrayLengthNotNegative" (formula "28") (term "1,1,0"))
                                          (rule "arrayLengthIsAShort" (formula "29") (term "1,1,0"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "true_left" (formula "29"))
                                          (rule "arrayLengthIsAShort" (formula "27") (term "1,1,0"))
                                          (builtin "One Step Simplification" (formula "27"))
                                          (rule "true_left" (formula "27"))
                                          (rule "arrayLengthNotNegative" (formula "27") (term "1,1,0"))
                                          (rule "arrayLengthIsAShort" (formula "41") (term "0"))
                                          (builtin "One Step Simplification" (formula "41"))
                                          (rule "true_left" (formula "41"))
                                          (rule "arrayLengthNotNegative" (formula "41") (term "0"))
                                          (rule "applyEq" (formula "41") (term "0") (ifseqformula "42"))
                                          (rule "inEqSimp_subsumption1" (formula "41") (ifseqformula "40"))
                                          (rule "leq_literals" (formula "41") (term "0"))
                                          (builtin "One Step Simplification" (formula "41"))
                                          (rule "true_left" (formula "41"))
                                          (rule "allLeft" (formula "44") (inst "t=Z(0(#))"))
                                          (rule "leq_literals" (formula "44") (term "1,0"))
                                          (builtin "One Step Simplification" (formula "44"))
                                          (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "13"))
                                          (rule "qeq_literals" (formula "44") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "44"))
                                          (rule "notLeft" (formula "44"))
                                          (rule "pullOutSelect" (formula "49") (term "0") (inst "selectSK=arr_15"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "35"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "13"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")) (ifInst ""  (formula "13")))
                                          (rule "applyEqReverse" (formula "50") (term "0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "narrowSelectArrayType" (formula "49") (term "0") (ifseqformula "17") (ifseqformula "51"))
                                          (rule "allLeft" (formula "42") (inst "t=iv_0"))
                                          (rule "replaceKnownSelect_taclet1110000000_5" (formula "42") (term "1,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet1110000000_7" (formula "42") (term "1,0,0"))
                                          (rule "narrowSelectArrayType" (formula "42") (term "1,0,0") (ifseqformula "33") (ifseqformula "69"))
                                          (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "11"))
                                          (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                                          (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "42") (term "0,0,1"))
                                          (rule "leq_literals" (formula "42") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "42"))
                                          (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "10"))
                                          (rule "qeq_literals" (formula "42") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "42"))
                                          (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=arr_16"))
                                          (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "52")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,0,0") (ifseqformula "34"))
                                          (rule "replace_known_left" (formula "42") (term "0,0,0,0") (ifseqformula "9"))
                                          (builtin "One Step Simplification" (formula "42"))
                                          (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "52")) (ifInst ""  (formula "9")))
                                          (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "42"))
                                          (rule "hideAuxiliaryEq" (formula "42"))
                                          (rule "narrowSelectArrayType" (formula "42") (term "0") (ifseqformula "17") (ifseqformula "51"))
                                          (rule "eqSymm" (formula "42"))
                                          (rule "close" (formula "63") (ifseqformula "42"))
                                       )
                                       (branch " (result_1[0]@anon_heap_addEntry«anonHeapFunction»).<created> = TRUE FALSE"
                                          (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "38"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "48") (term "0") (ifseqformula "9"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "49"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "48") (term "0") (ifseqformula "10"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "49"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "44") (term "0") (ifseqformula "11"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "45"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "44") (term "0") (ifseqformula "12"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "45"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "47") (term "0") (ifseqformula "13"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "48"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "49") (term "0") (ifseqformula "14"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "50"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "51") (term "0") (ifseqformula "15"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "52"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "53") (term "0") (ifseqformula "16"))
                                          (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "arrayLengthNotNegative" (formula "29") (term "1,1,0"))
                                          (rule "arrayLengthIsAShort" (formula "30") (term "1,1,0"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "true_left" (formula "30"))
                                          (rule "arrayLengthNotNegative" (formula "28") (term "1,1,0"))
                                          (rule "arrayLengthIsAShort" (formula "29") (term "1,1,0"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "true_left" (formula "29"))
                                          (rule "arrayLengthNotNegative" (formula "27") (term "1,1,0"))
                                          (rule "arrayLengthIsAShort" (formula "28") (term "1,1,0"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "true_left" (formula "28"))
                                          (rule "arrayLengthNotNegative" (formula "41") (term "0"))
                                          (rule "applyEq" (formula "41") (term "0") (ifseqformula "42"))
                                          (rule "inEqSimp_subsumption1" (formula "41") (ifseqformula "40"))
                                          (rule "leq_literals" (formula "41") (term "0"))
                                          (builtin "One Step Simplification" (formula "41"))
                                          (rule "true_left" (formula "41"))
                                          (rule "arrayLengthIsAShort" (formula "41") (term "0"))
                                          (builtin "One Step Simplification" (formula "41"))
                                          (rule "true_left" (formula "41"))
                                          (rule "allLeft" (formula "44") (inst "t=Z(0(#))"))
                                          (rule "leq_literals" (formula "44") (term "1,0"))
                                          (builtin "One Step Simplification" (formula "44"))
                                          (rule "inEqSimp_commuteGeq" (formula "44") (term "1"))
                                          (rule "inEqSimp_contradInEq1" (formula "44") (term "1") (ifseqformula "13"))
                                          (rule "qeq_literals" (formula "44") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "44"))
                                          (rule "notLeft" (formula "44"))
                                          (rule "pullOutSelect" (formula "49") (term "0") (inst "selectSK=arr_12"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "35"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "13"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")) (ifInst ""  (formula "13")))
                                          (rule "applyEqReverse" (formula "50") (term "0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "narrowSelectArrayType" (formula "49") (term "0") (ifseqformula "17") (ifseqformula "52"))
                                          (rule "ifthenelse_split" (formula "9") (term "0"))
                                          (branch " (result_1[0]@anon_heap_addEntry«anonHeapFunction»).<created>@anon_heap_first«anonHeapFunction» = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "10"))
                                             (rule "hideAuxiliaryEq" (formula "10"))
                                             (rule "allLeft" (formula "42") (inst "t=iv_0"))
                                             (rule "replaceKnownSelect_taclet1110000000_5" (formula "42") (term "1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1110000000_7" (formula "42") (term "1,0,0"))
                                             (rule "narrowSelectArrayType" (formula "42") (term "1,0,0") (ifseqformula "33") (ifseqformula "70"))
                                             (rule "inEqSimp_commuteGeq" (formula "42") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0") (ifseqformula "10"))
                                             (rule "qeq_literals" (formula "42") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "42"))
                                             (rule "inEqSimp_contradInEq1" (formula "42") (term "1") (ifseqformula "11"))
                                             (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1"))
                                             (rule "add_literals" (formula "42") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                                             (rule "add_literals" (formula "42") (term "0,0,1"))
                                             (rule "leq_literals" (formula "42") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "42"))
                                             (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=arr_14"))
                                             (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "53")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,0,0") (ifseqformula "34"))
                                             (rule "replace_known_left" (formula "42") (term "1,0,0,0") (ifseqformula "9"))
                                             (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "52")))
                                             (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "53")) (ifInst ""  (formula "52")))
                                             (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "42"))
                                             (rule "hideAuxiliaryEq" (formula "42"))
                                             (rule "narrowSelectArrayType" (formula "42") (term "0") (ifseqformula "33") (ifseqformula "52"))
                                             (rule "close" (formula "64") (ifseqformula "42"))
                                          )
                                          (branch " (result_1[0]@anon_heap_addEntry«anonHeapFunction»).<created>@anon_heap_first«anonHeapFunction» = TRUE FALSE"
                                             (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "9"))
                                             (rule "hideAuxiliaryEq" (formula "9"))
                                             (rule "eqSymm" (formula "63"))
                                             (rule "allLeft" (formula "41") (inst "t=iv_0"))
                                             (rule "replaceKnownSelect_taclet1110000000_5" (formula "41") (term "1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet1110000000_7" (formula "41") (term "1,0,0"))
                                             (rule "narrowSelectArrayType" (formula "41") (term "1,0,0") (ifseqformula "32") (ifseqformula "70"))
                                             (rule "inEqSimp_commuteGeq" (formula "41") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "41") (term "1,0") (ifseqformula "9"))
                                             (rule "qeq_literals" (formula "41") (term "0,1,0"))
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "inEqSimp_contradInEq1" (formula "41") (term "1") (ifseqformula "10"))
                                             (rule "inEqSimp_homoInEq1" (formula "41") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1"))
                                             (rule "add_literals" (formula "41") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "41") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "41") (term "0,0,1"))
                                             (rule "leq_literals" (formula "41") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=arr_13"))
                                             (rule "simplifySelectOfAnonEQ" (formula "41") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "53")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "0,0,0") (ifseqformula "33"))
                                             (rule "replace_known_right" (formula "41") (term "0,0,0,0") (ifseqformula "52"))
                                             (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "50")))
                                             (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "41"))
                                             (rule "hideAuxiliaryEq" (formula "41"))
                                             (rule "narrowSelectArrayType" (formula "41") (term "0") (ifseqformula "36") (ifseqformula "52"))
                                             (rule "eqSymm" (formula "41"))
                                             (rule "close" (formula "64") (ifseqformula "41"))
                                          )
                                       )
                                    )
                                    (branch " result_1[0]@anon_heap_addEntry«anonHeapFunction».length ≥ 1 FALSE"
                                       (rule "eqSymm" (formula "30"))
                                       (rule "inEqSimp_geqRight" (formula "38"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "applyEq" (formula "30") (term "0") (ifseqformula "31"))
                                       (rule "qeq_literals" (formula "30"))
                                       (rule "closeFalse" (formula "30"))
                                    )
                                 )
                                 (branch "result_0.length ≥ 1 FALSE"
                                    (builtin "One Step Simplification" (formula "29"))
                                    (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "39"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "replace_known_right" (formula "30") (term "0,1,1,0,0") (ifseqformula "39"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "inEqSimp_geqRight" (formula "39"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "5"))
                                    (rule "times_zero_2" (formula "5") (term "1,0"))
                                    (rule "add_zero_right" (formula "5") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                    (rule "mul_literals" (formula "5") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "5") (term "0"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "closeFalse" (formula "5"))
                                 )
                              )
                           )
                        )
                     )
                  )
                  (branch "CUT: messages.length < self.sorted.length FALSE"
                     (rule "defOfarrConcat" (formula "12") (term "1") (userinteraction))
                     (rule "ifthenelse_split" (formula "12") (term "1") (userinteraction))
                     (branch "messages.length = array2seq2d(heap, self.sorted).length TRUE"
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (ifseqformula "19"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "1") (ifseqformula "24"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "1") (ifseqformula "19"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,1") (ifseqformula "19"))
                        (rule "andLeft" (formula "2"))
                        (rule "andLeft" (formula "18"))
                        (rule "orRight" (formula "33"))
                        (rule "notLeft" (formula "19"))
                        (rule "eqSymm" (formula "13"))
                        (rule "eqSymm" (formula "1"))
                        (rule "eqSymm" (formula "39"))
                        (rule "eqSymm" (formula "27"))
                        (rule "eqSymm" (formula "15") (term "1,0"))
                        (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "31"))
                        (builtin "One Step Simplification" (formula "9"))
                        (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "38"))
                        (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "37")))
                        (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "35"))
                        (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "33")) (ifInst ""  (formula "34")))
                        (rule "polySimp_addComm0" (formula "4") (term "1"))
                        (rule "eqSeqEmpty" (formula "14"))
                        (rule "inEqSimp_ltRight" (formula "32"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "17"))
                        (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "3"))
                        (rule "inEqSimp_homoInEq1" (formula "12"))
                        (rule "polySimp_addComm1" (formula "12") (term "0"))
                        (rule "applyEq" (formula "17") (term "1") (ifseqformula "2"))
                        (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "5"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                        (rule "mul_literals" (formula "4") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                        (rule "add_literals" (formula "4") (term "0,0,0"))
                        (rule "add_zero_left" (formula "4") (term "0,0"))
                        (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "2"))
                        (rule "applyEq" (formula "14") (term "1") (ifseqformula "2"))
                        (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "2"))
                        (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                        (rule "add_literals" (formula "4") (term "1,0"))
                        (rule "times_zero_1" (formula "4") (term "0"))
                        (rule "leq_literals" (formula "4"))
                        (rule "true_left" (formula "4"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1"))
                        (rule "polySimp_rightDist" (formula "11") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                        (rule "mul_literals" (formula "11") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "array2seqDef" (formula "23") (term "0,1") (inst "u=u"))
                        (rule "eqSymm" (formula "23"))
                        (rule "array2seqDef" (formula "12") (term "0,0") (inst "u=u"))
                        (rule "narrowSelectArrayType" (formula "12") (term "2,0,0") (ifseqformula "5") (ifseqformula "31"))
                        (rule "nonNull" (formula "29") (inst "i=i"))
                        (rule "greater_literals" (formula "29") (term "0,1"))
                        (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "34")))
                        (rule "sub_literals" (formula "29") (term "2,1,0"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                        (rule "applyEq" (formula "29") (term "0,1,0,0,1,0,0") (ifseqformula "4"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                        (rule "nonNull" (formula "18") (inst "i=i"))
                        (rule "sub_literals" (formula "18") (term "2,1,0,1,1"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "greater_literals" (formula "18") (term "0,1"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "andLeft" (formula "18"))
                        (rule "notLeft" (formula "18"))
                        (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "31"))
                        (builtin "One Step Simplification" (formula "8"))
                        (rule "narrowSelectArrayType" (formula "18") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "31"))
                        (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                        (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0") (ifseqformula "2"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                        (rule "array2seqDef" (formula "39") (term "0") (inst "u=u"))
                        (rule "array2seqDef" (formula "39") (term "1") (inst "u=u"))
                        (rule "array2seqDef" (formula "27") (term "0,1,0") (inst "u=u"))
                        (rule "array2seqDef" (formula "15") (term "0,1,0") (inst "u=u"))
                        (rule "array2seqDef" (formula "15") (term "1,1,0") (inst "u=u"))
                        (rule "array2seqDef" (formula "14") (term "0,0") (inst "u=u"))
                        (rule "lenOfSeqDef" (formula "14") (term "0"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "polySimp_elimSub" (formula "14") (term "0,1"))
                        (rule "times_zero_2" (formula "14") (term "1,0,1"))
                        (rule "add_zero_right" (formula "14") (term "0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0"))
                        (rule "add_zero_right" (formula "14") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "0,0,0"))
                        (rule "array2seqDef" (formula "11") (term "0,0") (inst "u=u"))
                        (rule "narrowSelectArrayType" (formula "11") (term "2,0,0") (ifseqformula "5") (ifseqformula "32"))
                        (rule "array2seqDef" (formula "23") (term "1") (inst "u=u"))
                        (rule "eqSymm" (formula "23"))
                        (rule "equalityToSeqGetAndSeqLenRight" (formula "39") (inst "iv=iv"))
                        (rule "getOfSeqDef" (formula "39") (term "1,1,0,1"))
                        (rule "castDel" (formula "39") (term "1,1,1,0,1"))
                        (rule "castDel" (formula "39") (term "2,1,1,0,1"))
                        (rule "add_zero_right" (formula "39") (term "0,2,1,1,1,0,1"))
                        (rule "polySimp_elimSub" (formula "39") (term "1,1,0,1,1,0,1"))
                        (rule "times_zero_2" (formula "39") (term "1,1,1,0,1,1,0,1"))
                        (rule "add_zero_right" (formula "39") (term "1,1,0,1,1,0,1"))
                        (rule "getOfSeqDef" (formula "39") (term "0,1,0,1"))
                        (rule "castDel" (formula "39") (term "1,0,1,0,1"))
                        (rule "castDel" (formula "39") (term "2,0,1,0,1"))
                        (rule "add_zero_right" (formula "39") (term "0,2,1,0,1,0,1"))
                        (rule "polySimp_elimSub" (formula "39") (term "1,1,0,0,1,0,1"))
                        (rule "mul_literals" (formula "39") (term "1,1,1,0,0,1,0,1"))
                        (rule "add_zero_right" (formula "39") (term "1,1,0,0,1,0,1"))
                        (rule "lenOfSeqDef" (formula "39") (term "0,0"))
                        (rule "eqSymm" (formula "39") (term "0"))
                        (rule "polySimp_elimSub" (formula "39") (term "1,1,0"))
                        (rule "mul_literals" (formula "39") (term "1,1,1,0"))
                        (rule "add_zero_right" (formula "39") (term "1,1,0"))
                        (rule "lenOfSeqDef" (formula "39") (term "1,1,0,0,1"))
                        (rule "polySimp_elimSub" (formula "39") (term "1,1,1,0,0,1"))
                        (rule "times_zero_2" (formula "39") (term "1,1,1,1,0,0,1"))
                        (rule "add_zero_right" (formula "39") (term "1,1,1,0,0,1"))
                        (rule "lenOfSeqDef" (formula "39") (term "0,0"))
                        (rule "eqSymm" (formula "39") (term "0"))
                        (rule "polySimp_elimSub" (formula "39") (term "1,1,0"))
                        (rule "mul_literals" (formula "39") (term "1,1,1,0"))
                        (rule "add_zero_right" (formula "39") (term "1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,1,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,1,1,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,1,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,1,0,0,1"))
                        (rule "add_zero_right" (formula "39") (term "0,0,1,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,1,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,0"))
                        (rule "add_zero_right" (formula "39") (term "0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0"))
                        (rule "add_zero_right" (formula "39") (term "0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,1,1,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0,1,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,1,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,1,1,0,1"))
                        (rule "polySimp_rightDist" (formula "39") (term "1,1,0,1,1,0,1"))
                        (rule "mul_literals" (formula "39") (term "0,1,1,0,1,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,1,1,0,1"))
                        (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,1,1,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,1,0,1"))
                        (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,1,0,1"))
                        (rule "mul_literals" (formula "39") (term "0,1,1,0,0,1,0,1"))
                        (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,1,0,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "39") (term "0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "39") (term "0,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "39") (term "0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "39") (term "0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,1"))
                        (rule "mul_literals" (formula "39") (term "0,1,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "0,1,1,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "39") (term "0,0,1,1,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "39") (term "0,0,1,1,1,0,0,1"))
                        (rule "eqSeqDef" (formula "15") (term "1,0") (inst "iv=iv"))
                        (rule "getOfSeqDef" (formula "15") (term "1,1,0,1,1,0"))
                        (rule "castDel" (formula "15") (term "1,1,1,0,1,1,0"))
                        (rule "castDel" (formula "15") (term "2,1,1,0,1,1,0"))
                        (rule "add_zero_right" (formula "15") (term "0,2,1,1,1,0,1,1,0"))
                        (rule "polySimp_elimSub" (formula "15") (term "1,1,0,1,1,0,1,1,0"))
                        (rule "times_zero_2" (formula "15") (term "1,1,1,0,1,1,0,1,1,0"))
                        (rule "add_zero_right" (formula "15") (term "1,1,0,1,1,0,1,1,0"))
                        (rule "lenOfSeqDef" (formula "15") (term "1,0,1,0"))
                        (rule "polySimp_elimSub" (formula "15") (term "1,1,0,1,0"))
                        (rule "times_zero_2" (formula "15") (term "1,1,1,0,1,0"))
                        (rule "add_zero_right" (formula "15") (term "1,1,0,1,0"))
                        (rule "lenOfSeqDef" (formula "15") (term "0,0,1,0"))
                        (rule "polySimp_elimSub" (formula "15") (term "1,0,0,1,0"))
                        (rule "times_zero_2" (formula "15") (term "1,1,0,0,1,0"))
                        (rule "add_zero_right" (formula "15") (term "1,0,0,1,0"))
                        (rule "lenOfSeqDef" (formula "15") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_elimSub" (formula "15") (term "1,1,1,0,0,1,1,0"))
                        (rule "times_zero_2" (formula "15") (term "1,1,1,1,0,0,1,1,0"))
                        (rule "add_zero_right" (formula "15") (term "1,1,1,0,0,1,1,0"))
                        (rule "getOfSeqDef" (formula "15") (term "0,1,0,1,1,0"))
                        (rule "castDel" (formula "15") (term "1,0,1,0,1,1,0"))
                        (rule "castDel" (formula "15") (term "2,0,1,0,1,1,0"))
                        (rule "add_zero_right" (formula "15") (term "0,2,1,0,1,0,1,1,0"))
                        (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0,1,0,1,1,0"))
                        (rule "times_zero_2" (formula "15") (term "1,1,1,0,0,1,0,1,1,0"))
                        (rule "add_zero_right" (formula "15") (term "1,1,0,0,1,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,1,1,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,1,1,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,0,1,0"))
                        (rule "add_zero_right" (formula "15") (term "0,0,1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0,1,0"))
                        (rule "add_zero_right" (formula "15") (term "0,0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,1,0,0,1,1,0"))
                        (rule "add_zero_right" (formula "15") (term "0,0,1,1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,1,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,1,1,0,1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,1,1,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,1,1,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,1,0,1,1,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,1,1,0,1,1,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,1,0,1,1,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,1,1,0,1,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "0,0,1,0,1,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "0,0,1,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "0,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0,1,1,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,1,1,1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "0,0,1,1,1,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "0,0,1,1,1,0,0,1,1,0"))
                        (rule "pullOutSelect" (formula "39") (term "1,1,1,1,0,1") (inst "selectSK=arr_5"))
                        (rule "applyEq" (formula "40") (term "0,0,0,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "40") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "40") (term "0,1,1,0") (ifseqformula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "21"))
                        (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "35"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
                        (rule "applyEqReverse" (formula "40") (term "0,0,0,1,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "40") (term "1,1,1,1,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "40") (term "0,1,1,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "40") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "39") (term "1,1,1,0,1,0,1") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_5"))
                        (rule "applyEq" (formula "40") (term "1,0,1,1,1,0,0,1,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "40") (term "1,0,1,1,1,1,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "40") (term "1,0,0,0,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "40") (term "1,0,0,0,1,1,1,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "40") (term "1,0,1,0,0") (ifseqformula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "21"))
                        (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "7"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")) (ifInst ""  (formula "7")))
                        (rule "applyEqReverse" (formula "40") (term "1,0,0,0,0,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "40") (term "1,0,1,1,1,1,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "40") (term "1,0,1,1,1,0,0,1,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "40") (term "1,1,1,0,1,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "40") (term "1,0,1,0,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "40") (term "1,0,0,0,1,1,1,0,0,1") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "eqSeqDef2" (formula "23") (inst "iv=iv") (ifseqformula "23"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "true_left" (formula "23"))
                        (rule "inEqSimp_antiSymm" (formula "16") (ifseqformula "1"))
                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "16"))
                        (rule "inEqSimp_homoInEq0" (formula "1"))
                        (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,0"))
                        (rule "times_zero_1" (formula "1") (term "0"))
                        (rule "qeq_literals" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "applyEq" (formula "16") (term "0") (ifseqformula "15"))
                        (rule "inEqSimp_homoInEq1" (formula "16"))
                        (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                        (rule "add_literals" (formula "16") (term "1,0"))
                        (rule "times_zero_1" (formula "16") (term "0"))
                        (rule "leq_literals" (formula "16"))
                        (rule "true_left" (formula "16"))
                        (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "10"))
                        (rule "times_zero_1" (formula "11") (term "0,0"))
                        (rule "add_zero_left" (formula "11") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                        (rule "mul_literals" (formula "11") (term "1"))
                        (rule "inEqSimp_contradEq7" (formula "14") (term "1") (ifseqformula "11"))
                        (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "14") (term "0,0,1"))
                        (rule "leq_literals" (formula "14") (term "0,1"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "notLeft" (formula "14"))
                        (rule "inEqSimp_geqRight" (formula "29"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_contradInEq0" (formula "12") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "12") (term "0"))
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "closeFalse" (formula "12"))
                     )
                     (branch "messages.length = array2seq2d(heap, self.sorted).length FALSE"
                        (rule "array2seq2dDef" (formula "29") (term "0,1") (inst "u=u") (userinteraction))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (ifseqformula "18"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "1") (ifseqformula "23"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "1") (ifseqformula "18"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,1") (ifseqformula "18"))
                        (rule "andLeft" (formula "2"))
                        (rule "andLeft" (formula "17"))
                        (rule "orRight" (formula "33"))
                        (rule "notLeft" (formula "18"))
                        (rule "eqSymm" (formula "31"))
                        (rule "eqSymm" (formula "1"))
                        (rule "eqSymm" (formula "13"))
                        (rule "eqSymm" (formula "39"))
                        (rule "eqSymm" (formula "26"))
                        (rule "eqSymm" (formula "14") (term "1,0"))
                        (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "30"))
                        (builtin "One Step Simplification" (formula "9"))
                        (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "38"))
                        (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "37")))
                        (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "35"))
                        (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "33")) (ifInst ""  (formula "34")))
                        (rule "polySimp_addComm0" (formula "4") (term "1"))
                        (rule "polySimp_addComm0" (formula "13") (term "0,1,0"))
                        (rule "lenOfSeqDef" (formula "31") (term "0"))
                        (rule "polySimp_elimSub" (formula "31") (term "1,0"))
                        (rule "mul_literals" (formula "31") (term "1,1,0"))
                        (rule "add_zero_right" (formula "31") (term "1,0"))
                        (rule "inEqSimp_ltRight" (formula "32"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0"))
                        (rule "add_zero_right" (formula "32") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "16"))
                        (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "3"))
                        (rule "inEqSimp_homoInEq1" (formula "12"))
                        (rule "polySimp_addComm1" (formula "12") (term "0"))
                        (rule "applyEq" (formula "14") (term "1,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "5"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                        (rule "mul_literals" (formula "4") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                        (rule "add_literals" (formula "4") (term "0,0,0"))
                        (rule "add_zero_left" (formula "4") (term "0,0"))
                        (rule "applyEq" (formula "16") (term "1") (ifseqformula "2"))
                        (rule "applyEq" (formula "14") (term "1,0,1,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "2"))
                        (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "32") (term "1") (ifseqformula "2"))
                        (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "2"))
                        (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                        (rule "add_literals" (formula "4") (term "1,0"))
                        (rule "times_zero_1" (formula "4") (term "0"))
                        (rule "leq_literals" (formula "4"))
                        (rule "true_left" (formula "4"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "31") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1"))
                        (rule "polySimp_rightDist" (formula "11") (term "1"))
                        (rule "mul_literals" (formula "11") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                        (rule "array2seqDef" (formula "22") (term "0,1") (inst "u=u"))
                        (rule "eqSymm" (formula "22"))
                        (rule "nonNull" (formula "28") (inst "i=i"))
                        (rule "sub_literals" (formula "28") (term "2,1,0,1,1"))
                        (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "34")))
                        (rule "greater_literals" (formula "28") (term "0"))
                        (builtin "One Step Simplification" (formula "28"))
                        (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                        (rule "applyEq" (formula "28") (term "0,1,0,0,1,0,0") (ifseqformula "4"))
                        (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                        (rule "array2seqDef" (formula "12") (term "0,0") (inst "u=u"))
                        (rule "narrowSelectArrayType" (formula "12") (term "2,0,0") (ifseqformula "5") (ifseqformula "30"))
                        (rule "nonNull" (formula "17") (inst "i=i"))
                        (rule "sub_literals" (formula "17") (term "2,1,0,1,1"))
                        (builtin "One Step Simplification" (formula "17"))
                        (rule "greater_literals" (formula "17") (term "0,1"))
                        (builtin "One Step Simplification" (formula "17"))
                        (rule "andLeft" (formula "17"))
                        (rule "notLeft" (formula "17"))
                        (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "30"))
                        (builtin "One Step Simplification" (formula "8"))
                        (rule "narrowSelectArrayType" (formula "17") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "30"))
                        (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                        (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0") (ifseqformula "2"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                        (rule "array2seqDef" (formula "13") (term "1") (inst "u=u"))
                        (rule "eqSymm" (formula "13"))
                        (rule "narrowSelectArrayType" (formula "13") (term "2,0") (ifseqformula "5") (ifseqformula "31"))
                        (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "13"))
                        (rule "array2seqDef" (formula "39") (term "1") (inst "u=u"))
                        (rule "eqSymm" (formula "39"))
                        (rule "array2seqDef" (formula "26") (term "0,1,0") (inst "u=u"))
                        (rule "array2seqDef" (formula "14") (term "0,1,0") (inst "u=u"))
                        (rule "array2seqDef" (formula "14") (term "1,1,0") (inst "u=u"))
                        (rule "array2seqDef" (formula "11") (term "0,0") (inst "u=u"))
                        (rule "narrowSelectArrayType" (formula "11") (term "2,0,0") (ifseqformula "5") (ifseqformula "31"))
                        (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "13"))
                        (rule "array2seqDef" (formula "22") (term "1") (inst "u=u"))
                        (rule "eqSymm" (formula "22"))
                        (rule "array2seqDef" (formula "39") (term "1") (inst "u=u"))
                        (rule "eqSymm" (formula "39"))
                        (rule "eqSeqDef" (formula "14") (term "1,0") (inst "iv=iv"))
                        (rule "lenOfSeqDef" (formula "14") (term "0,0,1,0"))
                        (rule "eqSymm" (formula "14") (term "0,1,0"))
                        (rule "polySimp_elimSub" (formula "14") (term "1,1,0,1,0"))
                        (rule "mul_literals" (formula "14") (term "1,1,1,0,1,0"))
                        (rule "add_zero_right" (formula "14") (term "1,1,0,1,0"))
                        (rule "getOfSeqDef" (formula "14") (term "0,1,0,1,1,0"))
                        (rule "castDel" (formula "14") (term "1,0,1,0,1,1,0"))
                        (rule "castDel" (formula "14") (term "2,0,1,0,1,1,0"))
                        (rule "add_zero_right" (formula "14") (term "0,2,1,0,1,0,1,1,0"))
                        (rule "eqSymm" (formula "14") (term "1,0,1,1,0"))
                        (rule "polySimp_elimSub" (formula "14") (term "1,1,0,1,1,0,1,1,0"))
                        (rule "mul_literals" (formula "14") (term "1,1,1,0,1,1,0,1,1,0"))
                        (rule "add_zero_right" (formula "14") (term "1,1,0,1,1,0,1,1,0"))
                        (rule "lenOfSeqDef" (formula "14") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_elimSub" (formula "14") (term "1,1,1,0,0,1,1,0"))
                        (rule "times_zero_2" (formula "14") (term "1,1,1,1,0,0,1,1,0"))
                        (rule "add_zero_right" (formula "14") (term "1,1,1,0,0,1,1,0"))
                        (rule "lenOfSeqDef" (formula "14") (term "0,0,1,0"))
                        (rule "eqSymm" (formula "14") (term "0,1,0"))
                        (rule "polySimp_elimSub" (formula "14") (term "1,1,0,1,0"))
                        (rule "times_zero_2" (formula "14") (term "1,1,1,0,1,0"))
                        (rule "add_zero_right" (formula "14") (term "1,1,0,1,0"))
                        (rule "getOfSeqDef" (formula "14") (term "0,1,0,1,1,0"))
                        (rule "castDel" (formula "14") (term "1,0,1,0,1,1,0"))
                        (rule "castDel" (formula "14") (term "2,0,1,0,1,1,0"))
                        (rule "add_zero_right" (formula "14") (term "0,2,1,0,1,0,1,1,0"))
                        (rule "eqSymm" (formula "14") (term "1,0,1,1,0"))
                        (rule "polySimp_elimSub" (formula "14") (term "1,1,0,1,1,0,1,1,0"))
                        (rule "times_zero_2" (formula "14") (term "1,1,1,0,1,1,0,1,1,0"))
                        (rule "add_zero_right" (formula "14") (term "1,1,0,1,1,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "0,1,1,0,0,1,1,0"))
                        (rule "add_zero_right" (formula "14") (term "0,0,1,1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,1,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,1,0"))
                        (rule "add_zero_right" (formula "14") (term "0,0,0,0,1,0"))
                        (rule "eqSymm" (formula "14") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0,1,1,0"))
                        (rule "eqSymm" (formula "14") (term "1,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,1,1,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,1,0"))
                        (rule "add_zero_right" (formula "14") (term "0,0,0,0,1,0"))
                        (rule "eqSymm" (formula "14") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0,1,1,0"))
                        (rule "eqSymm" (formula "14") (term "1,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,1,1,0,1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0,1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,1,1,0,1,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,1,0,0,1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,0,1,0"))
                        (rule "eqSymm" (formula "14") (term "0,1,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "0,0,1,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0,1,1,0"))
                        (rule "eqSymm" (formula "14") (term "1,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,1,1,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,1,0,1,1,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,1,1,0,1,1,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,1,0,1,1,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,1,1,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,0,1,0"))
                        (rule "eqSymm" (formula "14") (term "0,1,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "0,0,1,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0,1,1,0"))
                        (rule "eqSymm" (formula "14") (term "1,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,1,1,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,1,0,1,1,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,1,1,0,1,1,0"))
                        (rule "mul_literals" (formula "14") (term "0,1,1,0,1,1,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,1,1,0,1,1,0"))
                        (rule "eqSeqDef2" (formula "13") (inst "iv=iv") (ifseqformula "13"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "true_left" (formula "13"))
                        (rule "eqSeqDef" (formula "38") (inst "iv=iv"))
                        (rule "getOfSeqDef" (formula "38") (term "1,1,0,1"))
                        (rule "castDel" (formula "38") (term "1,1,1,0,1"))
                        (rule "castDel" (formula "38") (term "2,1,1,0,1"))
                        (rule "add_zero_right" (formula "38") (term "0,2,1,1,1,0,1"))
                        (rule "polySimp_elimSub" (formula "38") (term "1,1,0,1,1,0,1"))
                        (rule "times_zero_2" (formula "38") (term "1,1,1,0,1,1,0,1"))
                        (rule "add_zero_right" (formula "38") (term "1,1,0,1,1,0,1"))
                        (rule "lenOfSeqDef" (formula "38") (term "0,0"))
                        (rule "eqSymm" (formula "38") (term "0"))
                        (rule "polySimp_elimSub" (formula "38") (term "1,1,0"))
                        (rule "mul_literals" (formula "38") (term "1,1,1,0"))
                        (rule "add_zero_right" (formula "38") (term "1,1,0"))
                        (rule "lenOfSeqDef" (formula "38") (term "1,1,0,0,1"))
                        (rule "polySimp_elimSub" (formula "38") (term "1,1,1,0,0,1"))
                        (rule "times_zero_2" (formula "38") (term "1,1,1,1,0,0,1"))
                        (rule "add_zero_right" (formula "38") (term "1,1,1,0,0,1"))
                        (rule "getOfSeqDef" (formula "38") (term "0,1,0,1"))
                        (rule "castDel" (formula "38") (term "2,0,1,0,1"))
                        (rule "castDel" (formula "38") (term "1,0,1,0,1"))
                        (rule "add_zero_right" (formula "38") (term "0,2,1,0,1,0,1"))
                        (rule "polySimp_elimSub" (formula "38") (term "1,1,0,0,1,0,1"))
                        (rule "times_zero_2" (formula "38") (term "1,1,1,0,0,1,0,1"))
                        (rule "add_zero_right" (formula "38") (term "1,1,0,0,1,0,1"))
                        (rule "lenOfSeqDef" (formula "38") (term "0,0"))
                        (rule "eqSymm" (formula "38") (term "0"))
                        (rule "polySimp_elimSub" (formula "38") (term "1,1,0"))
                        (rule "times_zero_2" (formula "38") (term "1,1,1,0"))
                        (rule "add_zero_right" (formula "38") (term "1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,1,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,1,1,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "38") (term "0,1,1,0,0,1"))
                        (rule "add_zero_right" (formula "38") (term "0,0,1,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,1,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,1,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0"))
                        (rule "add_zero_right" (formula "38") (term "0,0,0,0"))
                        (rule "eqSymm" (formula "38") (term "0"))
                        (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0"))
                        (rule "add_zero_right" (formula "38") (term "0,0,0,0"))
                        (rule "eqSymm" (formula "38") (term "0"))
                        (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,1,1,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0,1,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,1,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,1,1,0,1"))
                        (rule "polySimp_rightDist" (formula "38") (term "1,1,0,1,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,1,1,0,1"))
                        (rule "mul_literals" (formula "38") (term "0,1,1,0,1,1,0,1"))
                        (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,1,1,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,1,0,1"))
                        (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,1,0,1"))
                        (rule "mul_literals" (formula "38") (term "0,1,1,0,0,1,0,1"))
                        (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,1,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0,1"))
                        (rule "mul_literals" (formula "38") (term "0,1,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0,0"))
                        (rule "eqSymm" (formula "38") (term "0"))
                        (rule "polySimp_elimOne" (formula "38") (term "0,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "0,1,1,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "38") (term "0,0,1,1,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "38") (term "0,0,1,1,1,0,0,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0,0"))
                        (rule "eqSymm" (formula "38") (term "0"))
                        (rule "polySimp_elimOne" (formula "38") (term "0,0,1,0"))
                        (rule "inEqSimp_antiSymm" (formula "14") (ifseqformula "1"))
                        (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "14"))
                        (builtin "One Step Simplification" (formula "32"))
                        (rule "orRight" (formula "32"))
                        (rule "eqSymm" (formula "33"))
                        (rule "inEqSimp_geqRight" (formula "32"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "applyEq" (formula "16") (term "0") (ifseqformula "15"))
                        (rule "inEqSimp_homoInEq1" (formula "16"))
                        (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                        (rule "add_literals" (formula "16") (term "1,0"))
                        (rule "times_zero_1" (formula "16") (term "0"))
                        (rule "leq_literals" (formula "16"))
                        (rule "true_left" (formula "16"))
                        (rule "applyEq" (formula "2") (term "0") (ifseqformula "15"))
                        (rule "inEqSimp_homoInEq0" (formula "2"))
                        (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                        (rule "add_literals" (formula "2") (term "1,0"))
                        (rule "times_zero_1" (formula "2") (term "0"))
                        (rule "qeq_literals" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "14"))
                        (rule "inEqSimp_strengthen1" (formula "3") (ifseqformula "31"))
                        (rule "add_zero_right" (formula "3") (term "1"))
                        (rule "inEqSimp_contradEq7" (formula "31") (ifseqformula "3"))
                        (rule "times_zero_1" (formula "31") (term "1,0,0"))
                        (rule "add_zero_right" (formula "31") (term "0,0"))
                        (rule "leq_literals" (formula "31") (term "0"))
                        (builtin "One Step Simplification" (formula "31"))
                        (rule "false_right" (formula "31"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
                        (rule "qeq_literals" (formula "1") (term "0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
               )
               (branch "CUT: i_5 = messages.length FALSE"
                  (rule "instAll" (formula "34") (term "0,2,1,0") (ifseqformula "12") (userinteraction))
                  (rule "impLeft" (formula "1") (userinteraction))
                  (branch "Case 1"
                     (builtin "One Step Simplification" (formula "12"))
                     (builtin "One Step Simplification" (formula "28"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (ifseqformula "17"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "1") (ifseqformula "17"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "1") (ifseqformula "22"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "0,1") (ifseqformula "17"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "16"))
                     (rule "orRight" (formula "32"))
                     (rule "notLeft" (formula "17"))
                     (rule "eqSymm" (formula "12"))
                     (rule "eqSymm" (formula "25"))
                     (rule "eqSymm" (formula "31"))
                     (rule "eqSymm" (formula "38"))
                     (rule "eqSymm" (formula "13") (term "1,0"))
                     (rule "replace_known_left" (formula "30") (term "0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "30"))
                     (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "29"))
                     (builtin "One Step Simplification" (formula "8"))
                     (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "37"))
                     (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "36")))
                     (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "34"))
                     (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "32")) (ifInst ""  (formula "33")))
                     (rule "polySimp_addComm0" (formula "3") (term "1"))
                     (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_ltRight" (formula "30"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "15"))
                     (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "11"))
                     (rule "polySimp_addComm1" (formula "11") (term "0"))
                     (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "4"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                     (rule "mul_literals" (formula "3") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "0,0,0"))
                     (rule "add_zero_left" (formula "3") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1"))
                     (rule "polySimp_rightDist" (formula "11") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                     (rule "mul_literals" (formula "11") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "inEqSimp_strengthen1" (formula "3") (ifseqformula "31"))
                     (rule "inEqSimp_contradEq7" (formula "31") (ifseqformula "3"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                     (rule "add_literals" (formula "31") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "31") (term "1,0,0"))
                     (rule "add_literals" (formula "31") (term "0,0"))
                     (rule "leq_literals" (formula "31") (term "0"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "false_right" (formula "31"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
                     (rule "andLeft" (formula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "1"))
                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "1,1,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0"))
                     (rule "add_literals" (formula "1") (term "0"))
                     (rule "leq_literals" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "Case 2"
                     (rule "equalityToSeqGetAndSeqLenLeft" (formula "25") (inst "iv=iv") (userinteraction))
                     (rule "andLeft" (formula "25") (userinteraction))
                     (rule "allLeftHide" (formula "26") (inst "t=i_5") (userinteraction))
                     (rule "impLeft" (formula "26") (userinteraction))
                     (branch "Case 1"
                        (rule "array2seq2dDef" (formula "30") (term "0,1,1") (inst "u=u") (userinteraction))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (ifseqformula "18"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "1") (ifseqformula "18"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "1") (ifseqformula "23"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,1") (ifseqformula "18"))
                        (rule "andLeft" (formula "16"))
                        (rule "andLeft" (formula "2"))
                        (rule "orRight" (formula "34"))
                        (rule "notLeft" (formula "18"))
                        (rule "eqSymm" (formula "1"))
                        (rule "eqSymm" (formula "40"))
                        (rule "eqSymm" (formula "33"))
                        (rule "eqSymm" (formula "27"))
                        (rule "eqSymm" (formula "26"))
                        (rule "eqSymm" (formula "13"))
                        (rule "eqSymm" (formula "14") (term "1,0"))
                        (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "32"))
                        (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "31"))
                        (builtin "One Step Simplification" (formula "9"))
                        (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "39"))
                        (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "38")))
                        (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "36"))
                        (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "34")) (ifInst ""  (formula "35")))
                        (rule "polySimp_addComm0" (formula "4") (term "1"))
                        (rule "lenOfSeqConcat" (formula "26") (term "0"))
                        (builtin "One Step Simplification" (formula "26"))
                        (rule "polySimp_homoEq" (formula "26"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                        (rule "polySimp_addComm0" (formula "26") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                        (rule "mul_literals" (formula "26") (term "0,1,0"))
                        (rule "lenOfSeqDef" (formula "32") (term "1"))
                        (rule "polySimp_elimSub" (formula "32") (term "1,1"))
                        (rule "times_zero_2" (formula "32") (term "1,1,1"))
                        (rule "add_zero_right" (formula "32") (term "1,1"))
                        (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0"))
                        (rule "polySimp_addComm0" (formula "26") (term "0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "lenOfSeqConcatEQ" (formula "26") (term "1,0,0") (ifseqformula "27"))
                        (builtin "One Step Simplification" (formula "26"))
                        (rule "polySimp_addComm0" (formula "26") (term "1,0,0"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                        (rule "add_literals" (formula "26") (term "0,0,0"))
                        (rule "add_zero_left" (formula "26") (term "0,0"))
                        (rule "polySimp_pullOutFactor1" (formula "26") (term "0"))
                        (rule "add_literals" (formula "26") (term "1,0"))
                        (rule "times_zero_1" (formula "26") (term "0"))
                        (builtin "One Step Simplification" (formula "26"))
                        (rule "true_left" (formula "26"))
                        (rule "inEqSimp_ltRight" (formula "31"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "16"))
                        (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "3"))
                        (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,1,0"))
                        (rule "add_zero_right" (formula "1") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,0"))
                        (rule "inEqSimp_homoInEq1" (formula "12"))
                        (rule "polySimp_addComm1" (formula "12") (term "0"))
                        (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "5"))
                        (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "5"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                        (rule "mul_literals" (formula "4") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0"))
                        (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                        (rule "add_literals" (formula "4") (term "0,0,0"))
                        (rule "add_zero_left" (formula "4") (term "0,0"))
                        (rule "applyEq" (formula "1") (term "0,1,0,0,0,1,0") (ifseqformula "5"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,1,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0,0,1,0"))
                        (rule "add_zero_left" (formula "1") (term "0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1"))
                        (rule "polySimp_rightDist" (formula "12") (term "1"))
                        (rule "mul_literals" (formula "12") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                        (rule "polySimp_elimOne" (formula "4") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_invertInEq0" (formula "1") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                        (rule "inEqSimp_strengthen1" (formula "4") (ifseqformula "32"))
                        (rule "inEqSimp_contradEq7" (formula "32") (ifseqformula "4"))
                        (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0"))
                        (rule "add_literals" (formula "32") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "32") (term "1,0,0"))
                        (rule "add_zero_right" (formula "32") (term "0,0"))
                        (rule "leq_literals" (formula "32") (term "0"))
                        (builtin "One Step Simplification" (formula "32"))
                        (rule "false_right" (formula "32"))
                        (rule "array2seqDef" (formula "13") (term "0,0") (inst "u=u"))
                        (rule "narrowSelectArrayType" (formula "13") (term "2,0,0") (ifseqformula "6") (ifseqformula "31"))
                        (rule "array2seqDef" (formula "23") (term "0") (inst "u=u"))
                        (rule "array2seqDef" (formula "23") (term "0,1") (inst "u=u"))
                        (rule "nonNull" (formula "29") (inst "i=i"))
                        (rule "sub_literals" (formula "29") (term "2,1,0,1,1"))
                        (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "34")))
                        (rule "greater_literals" (formula "29") (term "0"))
                        (builtin "One Step Simplification" (formula "29"))
                        (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                        (rule "applyEq" (formula "29") (term "0,1,0,0,1,0,0") (ifseqformula "5"))
                        (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
                        (rule "nonNull" (formula "18") (inst "i=i"))
                        (rule "sub_literals" (formula "18") (term "2,1,0,1,1"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "greater_literals" (formula "18") (term "0,1"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "andLeft" (formula "18"))
                        (rule "notLeft" (formula "18"))
                        (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "31"))
                        (builtin "One Step Simplification" (formula "9"))
                        (rule "narrowSelectArrayType" (formula "18") (term "0,0,1,0") (ifseqformula "6") (ifseqformula "31"))
                        (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                        (rule "array2seqDef" (formula "2") (term "1") (inst "u=u"))
                        (rule "eqSymm" (formula "2"))
                        (rule "equalityToSeqGetAndSeqLenRight" (formula "39") (inst "iv=iv"))
                        (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,1"))
                        (rule "mul_literals" (formula "39") (term "0,1,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,1"))
                        (rule "array2seqDef" (formula "27") (term "0,1,0") (inst "u=u"))
                        (rule "array2seqDef" (formula "14") (term "1") (inst "u=u"))
                        (rule "eqSymm" (formula "14"))
                        (rule "narrowSelectArrayType" (formula "14") (term "2,0") (ifseqformula "6") (ifseqformula "32"))
                        (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "14"))
                        (rule "array2seqDef" (formula "15") (term "0,1,0") (inst "u=u"))
                        (rule "array2seqDef" (formula "15") (term "1,1,0") (inst "u=u"))
                        (rule "array2seqDef" (formula "12") (term "0,0") (inst "u=u"))
                        (rule "narrowSelectArrayType" (formula "12") (term "2,0,0") (ifseqformula "6") (ifseqformula "32"))
                        (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "14"))
                        (rule "array2seqDef" (formula "2") (term "1") (inst "u=u"))
                        (rule "eqSymm" (formula "2"))
                        (rule "array2seqDef" (formula "39") (term "0,0,0") (inst "u=u"))
                        (rule "lenOfSeqDef" (formula "39") (term "0,0"))
                        (rule "polySimp_elimSub" (formula "39") (term "1,0,0"))
                        (rule "times_zero_2" (formula "39") (term "1,1,0,0"))
                        (rule "add_zero_right" (formula "39") (term "1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0"))
                        (rule "add_zero_right" (formula "39") (term "0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "39") (term "0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "39") (term "0,0,0,0"))
                        (rule "array2seqDef" (formula "39") (term "0,0,1,0,1") (inst "u=u"))
                        (rule "getOfSeqDef" (formula "39") (term "0,1,0,1"))
                        (rule "castDel" (formula "39") (term "1,0,1,0,1"))
                        (rule "castDel" (formula "39") (term "2,0,1,0,1"))
                        (rule "add_zero_right" (formula "39") (term "0,2,1,0,1,0,1"))
                        (rule "polySimp_elimSub" (formula "39") (term "1,1,0,0,1,0,1"))
                        (rule "times_zero_2" (formula "39") (term "1,1,1,0,0,1,0,1"))
                        (rule "add_zero_right" (formula "39") (term "1,1,0,0,1,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,1,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0,1,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,1,0,1"))
                        (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,1,0,1"))
                        (rule "mul_literals" (formula "39") (term "0,1,1,0,0,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,1,0,1"))
                        (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,1,0,1"))
                        (rule "array2seqDef" (formula "39") (term "0,1,0") (inst "u=u"))
                        (rule "eqSymm" (formula "39") (term "0"))
                        (rule "lenOfSeqDef" (formula "39") (term "0,0"))
                        (rule "polySimp_elimSub" (formula "39") (term "1,0,0"))
                        (rule "times_zero_2" (formula "39") (term "1,1,0,0"))
                        (rule "add_zero_right" (formula "39") (term "1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0"))
                        (rule "add_zero_right" (formula "39") (term "0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "39") (term "0,0,0,0"))
                        (rule "eqSymm" (formula "39") (term "0"))
                        (rule "polySimp_elimOne" (formula "39") (term "0,0,1,0"))
                        (rule "array2seqDef" (formula "39") (term "0,1,1,0,1") (inst "u=u"))
                        (rule "eqSymm" (formula "39") (term "1,0,1"))
                        (rule "getOfSeqDef" (formula "39") (term "0,1,0,1"))
                        (rule "castDel" (formula "39") (term "1,0,1,0,1"))
                        (rule "castDel" (formula "39") (term "2,0,1,0,1"))
                        (rule "add_zero_right" (formula "39") (term "0,2,1,0,1,0,1"))
                        (rule "polySimp_elimSub" (formula "39") (term "1,1,0,0,1,0,1"))
                        (rule "mul_literals" (formula "39") (term "1,1,1,0,0,1,0,1"))
                        (rule "add_zero_right" (formula "39") (term "1,1,0,0,1,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,1,0,1"))
                        (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,1,0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0,1,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,1,0,1"))
                        (rule "eqSymm" (formula "39") (term "1,0,1"))
                        (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,1,1,0,1"))
                        (rule "polySimp_rightDist" (formula "39") (term "1,1,0,1,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,1,1,0,1"))
                        (rule "mul_literals" (formula "39") (term "0,1,1,0,1,1,0,1"))
                        (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,1,1,0,1"))
                        (rule "array2seqDef" (formula "39") (term "0,1,1,1,0,0,1") (inst "u=u"))
                        (rule "lenOfSeqDef" (formula "39") (term "1,1,1,0,0,1"))
                        (rule "polySimp_elimSub" (formula "39") (term "1,1,1,1,0,0,1"))
                        (rule "mul_literals" (formula "39") (term "1,1,1,1,1,0,0,1"))
                        (rule "add_zero_right" (formula "39") (term "1,1,1,1,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "39") (term "0,1,1,1,0,0,1"))
                        (rule "add_zero_right" (formula "39") (term "0,0,1,1,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,1,1,0,0,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "0,1,1,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "39") (term "0,0,1,1,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "39") (term "0,0,1,1,1,0,0,1"))
                        (rule "eqSeqDef" (formula "15") (term "1,0") (inst "iv=iv"))
                        (rule "lenOfSeqDef" (formula "15") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_elimSub" (formula "15") (term "1,1,1,0,0,1,1,0"))
                        (rule "times_zero_2" (formula "15") (term "1,1,1,1,0,0,1,1,0"))
                        (rule "add_zero_right" (formula "15") (term "1,1,1,0,0,1,1,0"))
                        (rule "lenOfSeqDef" (formula "15") (term "0,0,1,0"))
                        (rule "eqSymm" (formula "15") (term "0,1,0"))
                        (rule "polySimp_elimSub" (formula "15") (term "1,1,0,1,0"))
                        (rule "times_zero_2" (formula "15") (term "1,1,1,0,1,0"))
                        (rule "add_zero_right" (formula "15") (term "1,1,0,1,0"))
                        (rule "getOfSeqDef" (formula "15") (term "1,1,0,1,1,0"))
                        (rule "castDel" (formula "15") (term "2,1,1,0,1,1,0"))
                        (rule "castDel" (formula "15") (term "1,1,1,0,1,1,0"))
                        (rule "add_zero_right" (formula "15") (term "0,2,1,1,1,0,1,1,0"))
                        (rule "polySimp_elimSub" (formula "15") (term "1,1,0,1,1,0,1,1,0"))
                        (rule "mul_literals" (formula "15") (term "1,1,1,0,1,1,0,1,1,0"))
                        (rule "add_zero_right" (formula "15") (term "1,1,0,1,1,0,1,1,0"))
                        (rule "getOfSeqDef" (formula "15") (term "0,1,0,1,1,0"))
                        (rule "castDel" (formula "15") (term "1,0,1,0,1,1,0"))
                        (rule "castDel" (formula "15") (term "2,0,1,0,1,1,0"))
                        (rule "add_zero_right" (formula "15") (term "0,2,1,0,1,0,1,1,0"))
                        (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0,1,0,1,1,0"))
                        (rule "times_zero_2" (formula "15") (term "1,1,1,0,0,1,0,1,1,0"))
                        (rule "add_zero_right" (formula "15") (term "1,1,0,0,1,0,1,1,0"))
                        (rule "lenOfSeqDef" (formula "15") (term "0,0,1,0"))
                        (rule "eqSymm" (formula "15") (term "0,1,0"))
                        (rule "polySimp_elimSub" (formula "15") (term "1,1,0,1,0"))
                        (rule "mul_literals" (formula "15") (term "1,1,1,0,1,0"))
                        (rule "add_zero_right" (formula "15") (term "1,1,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,1,0,0,1,1,0"))
                        (rule "add_zero_right" (formula "15") (term "0,0,1,1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,1,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,1,1,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,1,1,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0,1,0"))
                        (rule "add_zero_right" (formula "15") (term "0,0,0,0,1,0"))
                        (rule "eqSymm" (formula "15") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0,1,0"))
                        (rule "add_zero_right" (formula "15") (term "0,0,0,0,1,0"))
                        (rule "eqSymm" (formula "15") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,1,1,0,1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,1,1,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,1,1,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,1,0,1,1,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,1,1,0,1,1,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,1,0,1,1,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,1,1,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0,1,1,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0,1,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,1,0,0,1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0,1,0"))
                        (rule "eqSymm" (formula "15") (term "0,1,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "0,0,1,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,0,1,0"))
                        (rule "eqSymm" (formula "15") (term "0,1,0"))
                        (rule "polySimp_elimOne" (formula "15") (term "0,0,1,0,1,0"))
                        (rule "eqSeqDef2" (formula "23") (inst "iv=iv") (ifseqformula "23"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "true_left" (formula "23"))
                        (rule "eqSeqDef" (formula "2") (inst "iv=iv"))
                        (rule "andLeft" (formula "2"))
                        (rule "lenOfSeqDef" (formula "2") (term "0"))
                        (rule "eqSymm" (formula "2"))
                        (rule "polySimp_elimSub" (formula "2") (term "1,1"))
                        (rule "times_zero_2" (formula "2") (term "1,1,1"))
                        (rule "add_zero_right" (formula "2") (term "1,1"))
                        (rule "lenOfSeqDef" (formula "3") (term "1,1,0,0"))
                        (rule "polySimp_elimSub" (formula "3") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "3") (term "1,1,1,1,0,0"))
                        (rule "add_zero_right" (formula "3") (term "1,1,1,0,0"))
                        (rule "getOfSeqDef" (formula "3") (term "0,1,0"))
                        (rule "castDel" (formula "3") (term "2,0,1,0"))
                        (rule "castDel" (formula "3") (term "1,0,1,0"))
                        (rule "add_zero_right" (formula "3") (term "0,2,1,0,1,0"))
                        (rule "eqSymm" (formula "3") (term "1,0"))
                        (rule "polySimp_elimSub" (formula "3") (term "1,1,0,1,1,0"))
                        (rule "times_zero_2" (formula "3") (term "1,1,1,0,1,1,0"))
                        (rule "add_zero_right" (formula "3") (term "1,1,0,1,1,0"))
                        (rule "lenOfSeqDef" (formula "2") (term "0"))
                        (rule "eqSymm" (formula "2"))
                        (rule "polySimp_elimSub" (formula "2") (term "1,1"))
                        (rule "times_zero_2" (formula "2") (term "1,1,1"))
                        (rule "add_zero_right" (formula "2") (term "1,1"))
                        (rule "getOfSeqDef" (formula "3") (term "0,1,0"))
                        (rule "castDel" (formula "3") (term "1,0,1,0"))
                        (rule "castDel" (formula "3") (term "2,0,1,0"))
                        (rule "add_zero_right" (formula "3") (term "0,2,1,0,1,0"))
                        (rule "eqSymm" (formula "3") (term "1,0"))
                        (rule "polySimp_elimSub" (formula "3") (term "1,1,0,1,1,0"))
                        (rule "times_zero_2" (formula "3") (term "1,1,1,0,1,1,0"))
                        (rule "add_zero_right" (formula "3") (term "1,1,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "3") (term "0,1,1,0,0"))
                        (rule "add_zero_right" (formula "3") (term "0,0,1,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "2") (term "0,1"))
                        (rule "add_zero_right" (formula "2") (term "0,0,1"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0"))
                        (rule "add_zero_right" (formula "2") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0,1,0"))
                        (rule "eqSymm" (formula "3") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0,1,0"))
                        (rule "eqSymm" (formula "3") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,1,1,0"))
                        (rule "applyEq" (formula "3") (term "0,1,0,0,1,0,0") (ifseqformula "2"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0,0,1"))
                        (rule "polySimp_elimOne" (formula "2") (term "0,0,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0,1,0"))
                        (rule "eqSymm" (formula "3") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,1,0,1,1,0"))
                        (rule "mul_literals" (formula "3") (term "0,1,1,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "3") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0,1,0"))
                        (rule "eqSymm" (formula "3") (term "1,0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,1,0,1,1,0"))
                        (rule "mul_literals" (formula "3") (term "0,1,1,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,1,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,1,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0,0,1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0,0,1,1,1,0,0"))
                        (rule "eqSeqDef2" (formula "15") (inst "iv=iv") (ifseqformula "15"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "true_left" (formula "15"))
                        (rule "pullOutSelect" (formula "38") (term "1,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_2"))
                        (rule "applyEq" (formula "39") (term "1,0,1,1,1,1,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "39") (term "1,0,1,1,1,0,0,1,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "39") (term "1,0,1,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "39") (term "1,0,0,0,1,1,1,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "39") (term "1,1,1,0,1,0,1") (ifseqformula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "21"))
                        (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "9"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")) (ifInst ""  (formula "9")))
                        (rule "applyEqReverse" (formula "39") (term "1,0,1,0,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "39") (term "1,0,1,1,1,1,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "39") (term "1,1,1,0,1,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "39") (term "1,0,0,0,1,1,1,0,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "39") (term "1,0,1,1,1,0,0,1,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "39") (term "1,0,0,0,0,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "pullOutSelect" (formula "38") (term "0,1,1,0") (inst "selectSK=arr_23"))
                        (rule "applyEq" (formula "39") (term "1,1,1,1,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "39") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "39") (term "0,0,0,1,0") (ifseqformula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "21"))
                        (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "34"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                        (rule "applyEqReverse" (formula "39") (term "0,0,0,1,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "39") (term "1,1,1,1,0,1") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "39") (term "0,1,1,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "39") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "13"))
                        (rule "times_zero_1" (formula "14") (term "0,0"))
                        (rule "add_zero_left" (formula "14") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                        (rule "mul_literals" (formula "14") (term "1"))
                        (rule "pullOutSelect" (formula "39") (term "0,1,0,0") (inst "selectSK=arr_24"))
                        (rule "applyEq" (formula "40") (term "0,1,1,1,0,0,1,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "40") (term "0,0,0,1,1,1,0,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "40") (term "1,1,0,1,0,1") (ifseqformula "1"))
                        (rule "applyEq" (formula "40") (term "0,0,0,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "40") (term "0,1,1,1,1,0,0,1") (ifseqformula "1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "22"))
                        (rule "eqSymm" (formula "40") (term "1,0,1"))
                        (rule "eqSymm" (formula "40") (term "0"))
                        (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_25"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "nnf_imp2or" (formula "31") (term "0"))
                        (rule "nnf_imp2or" (formula "21") (term "0"))
                        (rule "nnf_imp2or" (formula "18") (term "0"))
                        (rule "nnf_imp2or" (formula "5") (term "0"))
                        (rule "nnf_imp2or" (formula "41") (term "0,1"))
                        (rule "nnf_notAnd" (formula "31") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
                        (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "31") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                        (rule "mul_literals" (formula "31") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "21") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
                        (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "21") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                        (rule "mul_literals" (formula "21") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "21") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "18") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                        (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                        (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "5") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "5") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "5") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "5") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "5") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "5") (term "0,0,0"))
                        (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "5") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0"))
                        (rule "mul_literals" (formula "5") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "41") (term "0,0,1"))
                        (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,1"))
                        (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,1"))
                        (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,1"))
                        (rule "add_zero_left" (formula "41") (term "0,0,1,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,1"))
                        (rule "inEqSimp_notGeq" (formula "41") (term "0,0,0,1"))
                        (rule "times_zero_1" (formula "41") (term "1,0,0,0,0,0,1"))
                        (rule "add_literals" (formula "41") (term "0,0,0,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,1"))
                        (rule "mul_literals" (formula "41") (term "1,0,0,0,1"))
                        (rule "nnf_imp2or" (formula "18") (term "0,1,1,0"))
                        (rule "nnf_notAnd" (formula "18") (term "0,0,1,1,0"))
                        (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0,1,1,0"))
                        (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0,1,1,0"))
                        (rule "add_literals" (formula "18") (term "0,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "18") (term "1,0,0,0,1,1,0"))
                        (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,1,1,0"))
                        (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,1,1,0"))
                        (rule "add_zero_left" (formula "18") (term "0,0,1,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,1,1,0"))
                        (rule "arrayLengthIsAShort" (formula "8") (term "0"))
                        (builtin "One Step Simplification" (formula "8"))
                        (rule "true_left" (formula "8"))
                        (rule "arrayLengthNotNegative" (formula "8") (term "0"))
                        (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                        (rule "mul_literals" (formula "8") (term "1"))
                        (rule "arrayLengthNotNegative" (formula "9") (term "1,1"))
                        (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "9"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "inEqSimp_homoInEq0" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                        (rule "mul_literals" (formula "3") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0"))
                        (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                        (rule "polySimp_elimOne" (formula "3") (term "0"))
                        (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "3"))
                        (rule "andLeft" (formula "7"))
                        (rule "inEqSimp_homoInEq1" (formula "7"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                        (rule "mul_literals" (formula "7") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0"))
                        (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                        (rule "add_literals" (formula "7") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                        (rule "add_literals" (formula "7") (term "1,1,0"))
                        (rule "times_zero_1" (formula "7") (term "1,0"))
                        (rule "add_zero_right" (formula "7") (term "0"))
                        (rule "leq_literals" (formula "7"))
                        (rule "closeFalse" (formula "7"))
                     )
                     (branch "Case 2"
                        (rule "array2seq2dDef" (formula "26") (term "0,0") (inst "u=u") (userinteraction))
                        (rule "getOfSeqDef" (formula "26") (term "0") (userinteraction))
                        (rule "sub_zero_2" (formula "26") (term "1,1,0,0") (userinteraction))
                        (rule "replace_known_left" (formula "26") (term "0,0") (ifseqformula "2") (userinteraction))
                        (builtin "One Step Simplification" (formula "26"))
                        (rule "castDel" (formula "26") (term "0") (userinteraction))
                        (rule "add_zero_right" (formula "26") (term "0,2,1,0") (userinteraction))
                        (rule "getOfSeqConcat" (formula "26") (term "1") (userinteraction))
                        (rule "ifthenelse_split" (formula "26") (term "1") (userinteraction))
                        (branch "i_5 < array2seq2d(heapAfter_first, messages).length TRUE"
                           (rule "cut" (inst "cutFormula=  array2seq(heap,
            byte[]::select(heap, messages, arr(i_5)))
= any::seqGet(array2seq2d(heapAfter_first, messages),
              i_5)") (userinteraction))
                           (branch "CUT: array2seq(heap, messages[i_5]) = array2seq2d(heapAfter_first, messages)[i_5] TRUE"
                              (rule "cut" (inst "cutFormula=  array2seq(heapAfter_addEntry,
            byte[]::select(heapAfter_addEntry,
                           byte[][]::select(heapAfter_addEntry,
                                            self,
                                            verif.selectvoting.system.core.MixServer::$sorted),
                           arr(i_5)))
= array2seq(heap,
            byte[]::select(heap,
                           byte[][]::select(heap,
                                            self,
                                            verif.selectvoting.system.core.MixServer::$sorted),
                           arr(i_5)))") (userinteraction))
                              (branch "CUT: array2seq(heapAfter_addEntry, self.sorted[i_5]@heapAfter_addEntry) = array2seq(heap, self.sorted[i_5]) TRUE"
                                 (rule "applyEq" (formula "40") (term "1") (ifseqformula "1") (userinteraction))
                                 (rule "applyEq" (formula "40") (term "0") (ifseqformula "29") (userinteraction))
                                 (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "2") (userinteraction))
                                 (rule "close" (formula "40") (ifseqformula "3") (userinteraction))
                              )
                              (branch "CUT: array2seq(heapAfter_addEntry, self.sorted[i_5]@heapAfter_addEntry) = array2seq(heap, self.sorted[i_5]) FALSE"
                                 (rule "hide_right" (formula "40") (userinteraction))
                                 (rule "equalityToSeqGetAndSeqLenRight" (formula "33") (inst "iv=iv") (userinteraction))
                                 (rule "andRight" (formula "33") (userinteraction))
                                 (branch "Case 1"
                                    (builtin "One Step Simplification" (formula "14"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (ifseqformula "19"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "1") (ifseqformula "19"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "1") (ifseqformula "24"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,1") (ifseqformula "19"))
                                    (rule "andLeft" (formula "17"))
                                    (rule "andLeft" (formula "3"))
                                    (rule "orRight" (formula "37"))
                                    (rule "notLeft" (formula "19"))
                                    (rule "eqSymm" (formula "30"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "eqSymm" (formula "36"))
                                    (rule "eqSymm" (formula "2"))
                                    (rule "eqSymm" (formula "27"))
                                    (rule "eqSymm" (formula "14"))
                                    (rule "eqSymm" (formula "29"))
                                    (rule "eqSymm" (formula "15") (term "1,0"))
                                    (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "10"))
                                    (rule "replace_known_right" (formula "22") (term "0,1") (ifseqformula "41"))
                                    (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "42")))
                                    (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "39"))
                                    (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "37")) (ifInst ""  (formula "38")))
                                    (rule "polySimp_addComm0" (formula "5") (term "1"))
                                    (rule "lenOfSeqConcat" (formula "27") (term "0"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "polySimp_homoEq" (formula "27"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                    (rule "polySimp_addComm0" (formula "27") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                    (rule "mul_literals" (formula "27") (term "0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "28"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "28") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                    (rule "polySimp_addComm0" (formula "27") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0"))
                                    (rule "lenOfSeqConcatEQ" (formula "27") (term "1,0,0") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "polySimp_addComm0" (formula "27") (term "1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                    (rule "add_literals" (formula "27") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "27") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "27") (term "0"))
                                    (rule "add_literals" (formula "27") (term "1,0"))
                                    (rule "times_zero_1" (formula "27") (term "0"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "true_left" (formula "27"))
                                    (rule "inEqSimp_commuteLeq" (formula "16"))
                                    (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "12"))
                                    (rule "polySimp_addComm1" (formula "12") (term "0"))
                                    (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "5"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                    (rule "mul_literals" (formula "4") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "4") (term "0,0"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "28"))
                                    (rule "applyEq" (formula "34") (term "0,1") (ifseqformula "2"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                    (rule "polySimp_elimOne" (formula "27") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1"))
                                    (rule "mul_literals" (formula "12") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                    (rule "polySimp_elimOne" (formula "4") (term "0"))
                                    (rule "inEqSimp_strengthen1" (formula "4") (ifseqformula "35"))
                                    (rule "inEqSimp_contradEq7" (formula "35") (ifseqformula "4"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0"))
                                    (rule "add_literals" (formula "35") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "35") (term "1,0,0"))
                                    (rule "add_literals" (formula "35") (term "0,0"))
                                    (rule "leq_literals" (formula "35") (term "0"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "false_right" (formula "35"))
                                    (rule "array2seqDef" (formula "23") (term "0,1") (inst "u=u"))
                                    (rule "eqSymm" (formula "23"))
                                    (rule "array2seqDef" (formula "34") (term "0,0") (inst "u=u"))
                                    (rule "lenOfSeqDef" (formula "34") (term "0"))
                                    (rule "polySimp_elimSub" (formula "34") (term "1,0"))
                                    (rule "times_zero_2" (formula "34") (term "1,1,0"))
                                    (rule "add_zero_right" (formula "34") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0"))
                                    (rule "add_zero_right" (formula "34") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "34") (term "0,0,0"))
                                    (rule "array2seqDef" (formula "13") (term "0,0") (inst "u=u"))
                                    (rule "narrowSelectArrayType" (formula "13") (term "2,0,0") (ifseqformula "6") (ifseqformula "33"))
                                    (rule "nonNull" (formula "31") (inst "i=i"))
                                    (rule "greater_literals" (formula "31") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "37")))
                                    (rule "sub_literals" (formula "31") (term "2,1,0"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                                    (rule "applyEq" (formula "31") (term "0,1,0,0,1,0,0") (ifseqformula "5"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                                    (rule "nonNull" (formula "18") (inst "i=i"))
                                    (rule "sub_literals" (formula "18") (term "2,1,0,1,1"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "greater_literals" (formula "18") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "notLeft" (formula "18"))
                                    (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "33"))
                                    (builtin "One Step Simplification" (formula "9"))
                                    (rule "narrowSelectArrayType" (formula "18") (term "0,0,1,0") (ifseqformula "6") (ifseqformula "33"))
                                    (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                    (rule "array2seqDef" (formula "29") (term "0,1,0") (inst "u=u"))
                                    (rule "array2seqDef" (formula "1") (term "1") (inst "u=u"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "array2seqDef" (formula "2") (term "1") (inst "u=u"))
                                    (rule "eqSymm" (formula "2"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "array2seqDef" (formula "14") (term "1") (inst "u=u"))
                                    (rule "eqSymm" (formula "14"))
                                    (rule "narrowSelectArrayType" (formula "14") (term "2,0") (ifseqformula "6") (ifseqformula "34"))
                                    (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "14"))
                                    (rule "array2seqDef" (formula "28") (term "1") (inst "u=u"))
                                    (rule "eqSymm" (formula "28"))
                                    (rule "array2seqDef" (formula "15") (term "1,1,0") (inst "u=u"))
                                    (rule "eqSymm" (formula "15") (term "1,0"))
                                    (rule "array2seqDef" (formula "35") (term "0,1") (inst "u=u"))
                                    (rule "eqSymm" (formula "35"))
                                    (rule "lenOfSeqDef" (formula "35") (term "0"))
                                    (rule "polySimp_elimSub" (formula "35") (term "1,0"))
                                    (rule "times_zero_2" (formula "35") (term "1,1,0"))
                                    (rule "add_zero_right" (formula "35") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0"))
                                    (rule "add_zero_right" (formula "35") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "0,0,0"))
                                    (rule "eqSymm" (formula "35"))
                                    (rule "polySimp_elimOne" (formula "35") (term "0,0,1"))
                                    (rule "array2seqDef" (formula "12") (term "0,0") (inst "u=u"))
                                    (rule "narrowSelectArrayType" (formula "12") (term "2,0,0") (ifseqformula "6") (ifseqformula "34"))
                                    (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "14"))
                                    (rule "array2seqDef" (formula "23") (term "1") (inst "u=u"))
                                    (rule "eqSymm" (formula "23"))
                                    (rule "array2seqDef" (formula "2") (term "1") (inst "u=u"))
                                    (rule "eqSymm" (formula "2"))
                                    (rule "array2seqDef" (formula "1") (term "1") (inst "u=u"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "2") (term "1") (ifseqformula "1"))
                                    (rule "array2seqDef" (formula "15") (term "1,1,0") (inst "u=u"))
                                    (rule "eqSymm" (formula "15") (term "1,0"))
                                    (rule "array2seqDef" (formula "1") (term "1") (inst "u=u"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "array2seqDef" (formula "2") (term "1") (inst "u=u"))
                                    (rule "eqSymm" (formula "2"))
                                    (rule "eqSeqDef2" (formula "14") (inst "iv=iv") (ifseqformula "14"))
                                    (builtin "One Step Simplification" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "eqSeqDef" (formula "14") (term "1,0") (inst "iv=iv"))
                                    (rule "lenOfSeqDef" (formula "14") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_elimSub" (formula "14") (term "1,1,1,0,0,1,1,0"))
                                    (rule "times_zero_2" (formula "14") (term "1,1,1,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "14") (term "1,1,1,0,0,1,1,0"))
                                    (rule "lenOfSeqDef" (formula "14") (term "0,0,1,0"))
                                    (rule "eqSymm" (formula "14") (term "0,1,0"))
                                    (rule "polySimp_elimSub" (formula "14") (term "1,1,0,1,0"))
                                    (rule "times_zero_2" (formula "14") (term "1,1,1,0,1,0"))
                                    (rule "add_zero_right" (formula "14") (term "1,1,0,1,0"))
                                    (rule "getOfSeqDef" (formula "14") (term "1,1,0,1,1,0"))
                                    (rule "castDel" (formula "14") (term "2,1,1,0,1,1,0"))
                                    (rule "castDel" (formula "14") (term "1,1,1,0,1,1,0"))
                                    (rule "add_zero_right" (formula "14") (term "0,2,1,1,1,0,1,1,0"))
                                    (rule "polySimp_elimSub" (formula "14") (term "1,1,0,1,1,0,1,1,0"))
                                    (rule "times_zero_2" (formula "14") (term "1,1,1,0,1,1,0,1,1,0"))
                                    (rule "add_zero_right" (formula "14") (term "1,1,0,1,1,0,1,1,0"))
                                    (rule "getOfSeqDef" (formula "14") (term "0,1,0,1,1,0"))
                                    (rule "castDel" (formula "14") (term "2,0,1,0,1,1,0"))
                                    (rule "castDel" (formula "14") (term "1,0,1,0,1,1,0"))
                                    (rule "add_zero_right" (formula "14") (term "0,2,1,0,1,0,1,1,0"))
                                    (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0,1,0,1,1,0"))
                                    (rule "mul_literals" (formula "14") (term "1,1,1,0,0,1,0,1,1,0"))
                                    (rule "add_zero_right" (formula "14") (term "1,1,0,0,1,0,1,1,0"))
                                    (rule "lenOfSeqDef" (formula "14") (term "0,0,1,0"))
                                    (rule "eqSymm" (formula "14") (term "0,1,0"))
                                    (rule "polySimp_elimSub" (formula "14") (term "1,1,0,1,0"))
                                    (rule "times_zero_2" (formula "14") (term "1,1,1,0,1,0"))
                                    (rule "add_zero_right" (formula "14") (term "1,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "14") (term "0,1,1,0,0,1,1,0"))
                                    (rule "add_zero_right" (formula "14") (term "0,0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,1,0,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,1,1,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,1,1,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "14") (term "0,1,0,1,0"))
                                    (rule "add_zero_right" (formula "14") (term "0,0,1,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,1,0"))
                                    (rule "add_zero_right" (formula "14") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,1,1,0,1,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,1,1,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,1,1,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,1,0,1,1,0,1,1,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,1,0,1,1,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,1,1,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,1,1,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,0,1,1,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,0,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "0,0,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "0,0,1,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "0,0,0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,1,1,1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "0,0,1,1,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "0,0,1,1,1,0,0,1,1,0"))
                                    (rule "eqSeqDef2" (formula "22") (inst "iv=iv") (ifseqformula "22"))
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "true_left" (formula "22"))
                                    (rule "eqSeqDef" (formula "1") (inst "iv=iv"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "lenOfSeqDef" (formula "2") (term "1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "2") (term "1,1,1,0,0"))
                                    (rule "times_zero_2" (formula "2") (term "1,1,1,1,0,0"))
                                    (rule "add_zero_right" (formula "2") (term "1,1,1,0,0"))
                                    (rule "lenOfSeqDef" (formula "1") (term "0"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "polySimp_elimSub" (formula "1") (term "1,1"))
                                    (rule "times_zero_2" (formula "1") (term "1,1,1"))
                                    (rule "add_zero_right" (formula "1") (term "1,1"))
                                    (rule "getOfSeqDef" (formula "2") (term "1,1,0"))
                                    (rule "castDel" (formula "2") (term "2,1,1,0"))
                                    (rule "castDel" (formula "2") (term "1,1,1,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,2,1,1,1,0"))
                                    (rule "polySimp_elimSub" (formula "2") (term "1,1,0,1,1,0"))
                                    (rule "times_zero_2" (formula "2") (term "1,1,1,0,1,1,0"))
                                    (rule "add_zero_right" (formula "2") (term "1,1,0,1,1,0"))
                                    (rule "getOfSeqDef" (formula "2") (term "0,1,0"))
                                    (rule "castDel" (formula "2") (term "1,0,1,0"))
                                    (rule "castDel" (formula "2") (term "2,0,1,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,2,1,0,1,0"))
                                    (rule "polySimp_elimSub" (formula "2") (term "1,1,0,0,1,0"))
                                    (rule "times_zero_2" (formula "2") (term "1,1,1,0,0,1,0"))
                                    (rule "add_zero_right" (formula "2") (term "1,1,0,0,1,0"))
                                    (rule "lenOfSeqDef" (formula "1") (term "0"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "polySimp_elimSub" (formula "1") (term "1,1"))
                                    (rule "times_zero_2" (formula "1") (term "1,1,1"))
                                    (rule "add_zero_right" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "2") (term "0,1,1,0,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,0,1,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "2") (term "1,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "2") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "2") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "2") (term "0,0,1,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "2") (term "0,0,0,1,0"))
                                    (rule "apply_eq_monomials" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,0,1,0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "2") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,1,0,0,1,0,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "2") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,1,0,1,1,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,1,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0,1,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0,0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0,1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,1,0,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "0,0,0,1,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0"))
                                    (rule "eqSeqDef" (formula "3") (inst "iv=iv"))
                                    (rule "andLeft" (formula "3"))
                                    (rule "lenOfSeqDef" (formula "3") (term "1"))
                                    (rule "polySimp_elimSub" (formula "3") (term "1,1"))
                                    (rule "times_zero_2" (formula "3") (term "1,1,1"))
                                    (rule "add_zero_right" (formula "3") (term "1,1"))
                                    (rule "getOfSeqDef" (formula "4") (term "0,1,0"))
                                    (rule "castDel" (formula "4") (term "1,0,1,0"))
                                    (rule "castDel" (formula "4") (term "2,0,1,0"))
                                    (rule "add_zero_right" (formula "4") (term "0,2,1,0,1,0"))
                                    (rule "eqSymm" (formula "4") (term "1,0"))
                                    (rule "polySimp_elimSub" (formula "4") (term "1,1,0,1,1,0"))
                                    (rule "times_zero_2" (formula "4") (term "1,1,1,0,1,1,0"))
                                    (rule "add_zero_right" (formula "4") (term "1,1,0,1,1,0"))
                                    (rule "lenOfSeqDef" (formula "4") (term "1,1,0,0"))
                                    (rule "polySimp_elimSub" (formula "4") (term "1,1,1,0,0"))
                                    (rule "times_zero_2" (formula "4") (term "1,1,1,1,0,0"))
                                    (rule "add_zero_right" (formula "4") (term "1,1,1,0,0"))
                                    (rule "lenOfSeqDef" (formula "3") (term "0"))
                                    (rule "polySimp_elimSub" (formula "3") (term "1,0"))
                                    (rule "mul_literals" (formula "3") (term "1,1,0"))
                                    (rule "add_zero_right" (formula "3") (term "1,0"))
                                    (rule "getOfSeqDef" (formula "4") (term "0,1,0"))
                                    (rule "castDel" (formula "4") (term "1,0,1,0"))
                                    (rule "castDel" (formula "4") (term "2,0,1,0"))
                                    (rule "add_zero_right" (formula "4") (term "0,2,1,0,1,0"))
                                    (rule "eqSymm" (formula "4") (term "1,0"))
                                    (rule "polySimp_elimSub" (formula "4") (term "1,1,0,1,1,0"))
                                    (rule "times_zero_2" (formula "4") (term "1,1,1,0,1,1,0"))
                                    (rule "add_zero_right" (formula "4") (term "1,1,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "3") (term "0,1"))
                                    (rule "add_zero_right" (formula "3") (term "0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "4") (term "0,1,1,0,0"))
                                    (rule "add_zero_right" (formula "4") (term "0,0,1,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "3") (term "0,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0,1,0"))
                                    (rule "eqSymm" (formula "4") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,1,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0,1,0"))
                                    (rule "eqSymm" (formula "4") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,1,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,1,1,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0,1,0"))
                                    (rule "apply_eq_monomials" (formula "4") (term "1,0,0,1,0,0") (ifseqformula "3"))
                                    (rule "polySimp_rightDist" (formula "4") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "4") (term "1,0,1,0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "4") (term "1,0,0,1,0,0"))
                                    (rule "add_literals" (formula "4") (term "1,1,1,0,0,1,0,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "4") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0,0,1"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0,0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,0,1,0"))
                                    (rule "eqSymm" (formula "4") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,1,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,1,1,0"))
                                    (rule "mul_literals" (formula "4") (term "0,1,1,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "0,0,1,0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0,1,0,0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "4") (term "0,0,0,1,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,0,1,0"))
                                    (rule "eqSymm" (formula "4") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,1,0,1,1,0"))
                                    (rule "mul_literals" (formula "4") (term "0,1,1,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "4") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "4") (term "1,1,1,0,0"))
                                    (rule "pullOutSelect" (formula "28") (term "0,1,0") (inst "selectSK=arr_94"))
                                    (rule "applyEq" (formula "2") (term "1,1,0,1,0") (ifseqformula "28"))
                                    (rule "applyEq" (formula "2") (term "0,1,1,1,0,0,1,0") (ifseqformula "28"))
                                    (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "28"))
                                    (rule "applyEq" (formula "29") (term "1,2,0") (ifseqformula "28"))
                                    (rule "applyEq" (formula "4") (term "0,1,1,1,0,0,1,0") (ifseqformula "28"))
                                    (rule "applyEq" (formula "4") (term "1,1,0,1,0") (ifseqformula "28"))
                                    (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "28"))
                                    (rule "applyEq" (formula "3") (term "0,0,0,0") (ifseqformula "28"))
                                    (rule "applyEq" (formula "1") (term "0,0,0,0") (ifseqformula "28"))
                                    (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "25"))
                                    (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "39")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,0,0") (ifseqformula "21"))
                                    (rule "eqSymm" (formula "2") (term "1,0"))
                                    (rule "eqSymm" (formula "4") (term "1,0"))
                                    (rule "eqSymm" (formula "3"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "replace_known_right" (formula "28") (term "0,0,0,0") (ifseqformula "37"))
                                    (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "38")))
                                    (rule "applyEqReverse" (formula "3") (term "0,0,0,1") (ifseqformula "28"))
                                    (rule "applyEqReverse" (formula "2") (term "0,1,1,1,0,1,1,0") (ifseqformula "28"))
                                    (rule "applyEqReverse" (formula "4") (term "1,1,1,1,0") (ifseqformula "28"))
                                    (rule "applyEqReverse" (formula "1") (term "0,1,1") (ifseqformula "28"))
                                    (rule "applyEqReverse" (formula "3") (term "0,1,1") (ifseqformula "28"))
                                    (rule "applyEqReverse" (formula "4") (term "0,1,1,1,0,1,1,0") (ifseqformula "28"))
                                    (rule "applyEqReverse" (formula "29") (term "0,1,0") (ifseqformula "28"))
                                    (rule "applyEqReverse" (formula "2") (term "1,1,1,1,0") (ifseqformula "28"))
                                    (rule "applyEqReverse" (formula "29") (term "1,2,0") (ifseqformula "28"))
                                    (rule "applyEqReverse" (formula "1") (term "0,0,0,1") (ifseqformula "28"))
                                    (rule "hideAuxiliaryEq" (formula "28"))
                                    (rule "eqSymm" (formula "3"))
                                    (rule "eqSymm" (formula "4") (term "1,0"))
                                    (rule "eqSymm" (formula "2") (term "1,0"))
                                    (rule "eqSymm" (formula "1"))
                                    (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                    (rule "eqSymm" (formula "3"))
                                    (rule "applyEq" (formula "4") (term "1,1,1,0,0") (ifseqformula "3"))
                                    (rule "pullOutSelect" (formula "35") (term "1,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_17"))
                                    (rule "applyEq" (formula "36") (term "1,0,1,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "22"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "10"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")) (ifInst ""  (formula "10")))
                                    (rule "applyEqReverse" (formula "36") (term "1,0,1,0") (ifseqformula "1"))
                                    (rule "applyEqReverse" (formula "36") (term "1,0,0,0,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "14"))
                                    (rule "times_zero_1" (formula "15") (term "0,0"))
                                    (rule "add_zero_left" (formula "15") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                    (rule "mul_literals" (formula "15") (term "1"))
                                    (rule "pullOutSelect" (formula "36") (term "0,1,0") (inst "selectSK=arr_95"))
                                    (rule "applyEq" (formula "37") (term "0,0,0,0") (ifseqformula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "23"))
                                    (rule "eqSymm" (formula "37"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_96"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "nnf_imp2or" (formula "34") (term "0"))
                                    (rule "nnf_imp2or" (formula "22") (term "0"))
                                    (rule "nnf_imp2or" (formula "19") (term "0"))
                                    (rule "nnf_imp2or" (formula "4") (term "0"))
                                    (rule "nnf_imp2or" (formula "6") (term "0"))
                                    (rule "nnf_notAnd" (formula "34") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "34") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "34") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
                                    (rule "mul_literals" (formula "34") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "22") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
                                    (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                                    (rule "mul_literals" (formula "22") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                    (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                                    (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                                    (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                    (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "4") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "4") (term "0,0,0"))
                                    (rule "mul_literals" (formula "4") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0"))
                                    (rule "mul_literals" (formula "4") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "4") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "4") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "4") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "6") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "6") (term "0,0,0"))
                                    (rule "mul_literals" (formula "6") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
                                    (rule "mul_literals" (formula "6") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "6") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "6") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0"))
                                    (rule "nnf_imp2or" (formula "19") (term "0,1,1,0"))
                                    (rule "arrayLengthNotNegative" (formula "9") (term "0"))
                                    (rule "applyEq" (formula "9") (term "0") (ifseqformula "10"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                    (rule "mul_literals" (formula "9") (term "1"))
                                    (rule "arrayLengthIsAShort" (formula "10") (term "0"))
                                    (builtin "One Step Simplification" (formula "10"))
                                    (rule "true_left" (formula "10"))
                                    (rule "arrayLengthNotNegative" (formula "10") (term "1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "10"))
                                    (rule "leq_literals" (formula "9") (term "0"))
                                    (builtin "One Step Simplification" (formula "9"))
                                    (rule "true_left" (formula "9"))
                                    (rule "arrayLengthIsAShort" (formula "10") (term "1,1"))
                                    (builtin "One Step Simplification" (formula "10"))
                                    (rule "true_left" (formula "10"))
                                    (rule "nnf_notAnd" (formula "20") (term "0,0,1,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0,1,1,0"))
                                    (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0,1,1,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "20") (term "1,0,0,0,1,1,0"))
                                    (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0,1,1,0"))
                                    (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,1,1,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,1,0,0,1,1,0"))
                                    (rule "add_zero_left" (formula "20") (term "0,0,1,0,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,1,1,0"))
                                    (rule "arrayLengthNotNegative" (formula "21") (term "0"))
                                    (rule "arrayLengthIsAShort" (formula "22") (term "0"))
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "true_left" (formula "22"))
                                    (rule "lenNonNegative" (formula "32") (term "0"))
                                    (rule "inEqSimp_commuteLeq" (formula "32"))
                                    (rule "arrayLengthNotNegative" (formula "17") (term "1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "19"))
                                    (rule "leq_literals" (formula "17") (term "0"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "arrayLengthIsAShort" (formula "17") (term "1,1"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "true_left" (formula "17"))
                                    (rule "arrayLengthNotNegative" (formula "35") (term "1,0,1,0"))
                                    (rule "arrayLengthIsAShort" (formula "36") (term "1,0,1,0"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "true_left" (formula "36"))
                                    (rule "equalityToSeqGetAndSeqLenLeft" (formula "36") (inst "iv=iv"))
                                    (rule "andLeft" (formula "36"))
                                    (rule "lenOfSeqConcat" (formula "37") (term "1,1,0,0"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "polySimp_addComm0" (formula "37") (term "1,1,0,0"))
                                    (rule "lenOfSeqConcat" (formula "36") (term "0"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "polySimp_homoEq" (formula "36"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0"))
                                    (rule "polySimp_addComm0" (formula "36") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "36") (term "0"))
                                    (rule "polySimp_addComm0" (formula "36") (term "0,0"))
                                    (rule "lenOfSeqConcatEQ" (formula "36") (term "1,0,0") (ifseqformula "38"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "polySimp_addComm0" (formula "36") (term "1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "36") (term "0,0"))
                                    (rule "add_literals" (formula "36") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "36") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "36") (term "0"))
                                    (rule "add_literals" (formula "36") (term "1,0"))
                                    (rule "times_zero_1" (formula "36") (term "0"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "true_left" (formula "36"))
                                    (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "36") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "36") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0"))
                                    (rule "getOfSeqConcat" (formula "36") (term "0,1,0"))
                                    (rule "polySimp_elimSub" (formula "36") (term "1,2,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "36") (term "1,2,0,1,0"))
                                    (rule "getOfSeqSingleton" (formula "36") (term "2,0,1,0"))
                                    (rule "castDel" (formula "36") (term "2,2,0,1,0"))
                                    (rule "castDel" (formula "36") (term "1,2,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,1,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "36") (term "0,2,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,0,2,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "1,0,2,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,1,0"))
                                    (rule "getOfSeqConcatEQ" (formula "36") (term "1,1,0") (ifseqformula "37"))
                                    (rule "eqSymm" (formula "36") (term "1,0"))
                                    (rule "polySimp_elimSub" (formula "36") (term "1,2,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "36") (term "1,2,0,1,0"))
                                    (rule "getOfSeqSingleton" (formula "36") (term "2,0,1,0"))
                                    (rule "castDel" (formula "36") (term "1,2,0,1,0"))
                                    (rule "castDel" (formula "36") (term "2,2,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,1,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "36") (term "0,2,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,0,2,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "1,0,2,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,1,0"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "true_left" (formula "36"))
                                    (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "37") (ifseqformula "13"))
                                    (rule "replaceKnownSelect_taclet010011100000_4" (formula "37") (term "1,1,0,0,0,0,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet010011100000_6" (formula "37") (term "1,1,0,0,0,0,0,0,0"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "notLeft" (formula "39"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "notLeft" (formula "39"))
                                    (rule "notLeft" (formula "38"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "notLeft" (formula "38"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "notLeft" (formula "37"))
                                    (rule "nonNull" (formula "40") (inst "i=i"))
                                    (rule "sub_literals" (formula "40") (term "2,1,0,1,1"))
                                    (builtin "One Step Simplification" (formula "40"))
                                    (rule "greater_literals" (formula "40") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "40"))
                                    (rule "andLeft" (formula "40"))
                                    (rule "notLeft" (formula "40"))
                                    (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "40") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "39") (inst "i=i"))
                                    (rule "sub_literals" (formula "39") (term "2,1,0,1,1"))
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "greater_literals" (formula "39") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "andLeft" (formula "39"))
                                    (rule "notLeft" (formula "39"))
                                    (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "38") (inst "i=i"))
                                    (rule "sub_literals" (formula "38") (term "2,1,0,1,1"))
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "greater_literals" (formula "38") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "andLeft" (formula "38"))
                                    (rule "notLeft" (formula "38"))
                                    (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "38") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "37") (inst "i=i"))
                                    (rule "sub_literals" (formula "37") (term "2,1,0,1,1"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "greater_literals" (formula "37") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "andLeft" (formula "37"))
                                    (rule "notLeft" (formula "37"))
                                    (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "43"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "43"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "ifthenelse_negated" (formula "2") (term "0"))
                                    (rule "ifthenelse_negated" (formula "1") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0"))
                                    (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_12"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "27"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "13"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")) (ifInst ""  (formula "13")))
                                    (rule "applyEqReverse" (formula "52") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "50") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_12"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "27"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "13"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")) (ifInst ""  (formula "13")))
                                    (rule "applyEqReverse" (formula "51") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "49") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_12"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "27"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "13"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")) (ifInst ""  (formula "13")))
                                    (rule "applyEqReverse" (formula "50") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_12"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "27"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "13"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")) (ifInst ""  (formula "13")))
                                    (rule "applyEqReverse" (formula "49") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_12"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "27"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "13"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")) (ifInst ""  (formula "13")))
                                    (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "40") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_12"))
                                    (rule "applyEq" (formula "47") (term "0") (ifseqformula "40"))
                                    (rule "applyEq" (formula "41") (term "0,1,1,1,0,0") (ifseqformula "40"))
                                    (rule "simplifySelectOfAnonEQ" (formula "40") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "59")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,0,0") (ifseqformula "26"))
                                    (rule "replace_known_left" (formula "40") (term "0,0,0,0") (ifseqformula "12"))
                                    (builtin "One Step Simplification" (formula "40"))
                                    (rule "simplifySelectOfAnonEQ" (formula "40") (ifseqformula "26"))
                                    (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "59")) (ifInst ""  (formula "12")))
                                    (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "40"))
                                    (rule "applyEqReverse" (formula "41") (term "1,0,0,1,0") (ifseqformula "40"))
                                    (rule "applyEqReverse" (formula "41") (term "0,1,1,1,0,0") (ifseqformula "40"))
                                    (rule "hideAuxiliaryEq" (formula "40"))
                                    (rule "pullOutSelect" (formula "39") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_12"))
                                    (rule "applyEq" (formula "46") (term "0") (ifseqformula "39"))
                                    (rule "applyEq" (formula "40") (term "0,1,1,1,0,0") (ifseqformula "39"))
                                    (rule "simplifySelectOfAnonEQ" (formula "39") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "59")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "0,0,0") (ifseqformula "26"))
                                    (rule "replace_known_left" (formula "39") (term "0,0,0,0") (ifseqformula "12"))
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "simplifySelectOfAnonEQ" (formula "39") (ifseqformula "26"))
                                    (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "59")) (ifInst ""  (formula "12")))
                                    (rule "applyEqReverse" (formula "40") (term "0,1,1,1,0,0") (ifseqformula "39"))
                                    (rule "applyEqReverse" (formula "40") (term "1,0,0,1,0") (ifseqformula "39"))
                                    (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "39"))
                                    (rule "hideAuxiliaryEq" (formula "39"))
                                    (rule "pullOutSelect" (formula "38") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_12"))
                                    (rule "applyEq" (formula "45") (term "0") (ifseqformula "38"))
                                    (rule "applyEq" (formula "39") (term "0,1,1,1,0,0") (ifseqformula "38"))
                                    (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "59")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "0,0,0") (ifseqformula "26"))
                                    (rule "replace_known_left" (formula "38") (term "0,0,0,0") (ifseqformula "12"))
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "26"))
                                    (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "59")) (ifInst ""  (formula "12")))
                                    (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "38"))
                                    (rule "applyEqReverse" (formula "39") (term "1,0,0,1,0") (ifseqformula "38"))
                                    (rule "applyEqReverse" (formula "39") (term "0,1,1,1,0,0") (ifseqformula "38"))
                                    (rule "hideAuxiliaryEq" (formula "38"))
                                    (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "23") (ifseqformula "13"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "notLeft" (formula "24"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "notLeft" (formula "24"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "notLeft" (formula "24"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "notLeft" (formula "24"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "andLeft" (formula "23"))
                                    (rule "notLeft" (formula "23"))
                                    (rule "nonNull" (formula "26") (inst "i=i"))
                                    (rule "greater_literals" (formula "26") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "49")))
                                    (rule "sub_literals" (formula "26") (term "2,1,0"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "narrowSelectArrayType" (formula "26") (term "0,0,1,0") (ifseqformula "11") (ifseqformula "49"))
                                    (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "25") (inst "i=i"))
                                    (rule "greater_literals" (formula "25") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "48")))
                                    (rule "sub_literals" (formula "25") (term "2,1,0"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "narrowSelectArrayType" (formula "25") (term "0,0,1,0") (ifseqformula "11") (ifseqformula "48"))
                                    (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "24") (inst "i=i"))
                                    (rule "greater_literals" (formula "24") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "47")))
                                    (rule "sub_literals" (formula "24") (term "2,1,0"))
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "narrowSelectArrayType" (formula "24") (term "0,0,1,0") (ifseqformula "11") (ifseqformula "47"))
                                    (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                    (rule "nonNull" (formula "23") (inst "i=i"))
                                    (rule "sub_literals" (formula "23") (term "2,1,0,1,1"))
                                    (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "46")))
                                    (rule "greater_literals" (formula "23") (term "0"))
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "narrowSelectArrayType" (formula "23") (term "0,0,1,0") (ifseqformula "11") (ifseqformula "46"))
                                    (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                                    (rule "seqGetAlphaCast" (formula "37") (term "1"))
                                    (rule "castDel" (formula "37") (term "0"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "true_left" (formula "37"))
                                    (rule "commute_or_2" (formula "44") (term "0"))
                                    (rule "nnf_imp2or" (formula "40") (term "0"))
                                    (rule "commute_or_2" (formula "27") (term "0"))
                                    (rule "commute_or_2" (formula "4") (term "0"))
                                    (rule "commute_or_2" (formula "6") (term "0"))
                                    (rule "nnf_imp2or" (formula "43") (term "0"))
                                    (rule "nnf_imp2or" (formula "42") (term "0"))
                                    (rule "nnf_imp2or" (formula "41") (term "0"))
                                    (rule "ifthenelse_to_or_left" (formula "20") (term "0,1,0"))
                                    (rule "eqSymm" (formula "20") (term "1,0,0,1,0"))
                                    (rule "eqSymm" (formula "20") (term "1,1,0,1,0"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0,1,0"))
                                    (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0,1,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "20") (term "0,0,0,0,1,0"))
                                    (rule "inEqSimp_notGeq" (formula "20") (term "0,1,1,0,1,0"))
                                    (rule "mul_literals" (formula "20") (term "1,0,0,0,1,1,0,1,0"))
                                    (rule "add_literals" (formula "20") (term "0,0,0,1,1,0,1,0"))
                                    (rule "add_zero_left" (formula "20") (term "0,0,1,1,0,1,0"))
                                    (rule "nnf_imp2or" (formula "26") (term "0"))
                                    (rule "nnf_imp2or" (formula "25") (term "0"))
                                    (rule "nnf_imp2or" (formula "24") (term "0"))
                                    (rule "nnf_imp2or" (formula "23") (term "0"))
                                    (rule "ifthenelse_split" (formula "5") (term "1"))
                                    (branch "messages[i_5].length ≥ 1 TRUE"
                                       (rule "replace_known_left" (formula "4") (term "0,1,1,0") (ifseqformula "5"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_left" (formula "7") (term "0,1,1,0") (ifseqformula "5"))
                                       (builtin "One Step Simplification" (formula "7"))
                                       (rule "replace_known_left" (formula "58") (term "0,0") (ifseqformula "5"))
                                       (builtin "One Step Simplification" (formula "58"))
                                       (rule "eqSymm" (formula "58"))
                                       (rule "replace_known_left" (formula "3") (term "0,1") (ifseqformula "5"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "nnf_notAnd" (formula "41") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "41") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "41") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "41") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "41") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "41") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
                                       (rule "mul_literals" (formula "41") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "44") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "44") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "44") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "44") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "44") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "44") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                                       (rule "mul_literals" (formula "44") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "43") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "43") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "43") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "43") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "43") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "43") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                                       (rule "mul_literals" (formula "43") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "42") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "42") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "42") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "42") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "42") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0"))
                                       (rule "mul_literals" (formula "42") (term "1,0,0,0"))
                                       (rule "ifthenelse_split" (formula "6") (term "0"))
                                       (branch "self.sorted[i_5].length ≥ 1 TRUE"
                                          (rule "applyEq" (formula "6") (term "0") (ifseqformula "7"))
                                          (rule "applyEq" (formula "7") (term "1,1,1,0,1,1,0,0") (ifseqformula "6"))
                                          (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                                          (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "27") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                          (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                          (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                                          (rule "mul_literals" (formula "25") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "25") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                          (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "24") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "24") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                                          (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                                          (rule "arrayLengthIsAShort" (formula "38") (term "1,0"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "true_left" (formula "38"))
                                          (rule "arrayLengthNotNegative" (formula "38") (term "1,0"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "0,0") (ifseqformula "12"))
                                          (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "49"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "60") (term "0,1,0") (ifseqformula "2"))
                                          (rule "applyEqReverse" (formula "60") (term "0,0,0,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "22"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "59") (term "0,1,0") (ifseqformula "1"))
                                          (rule "applyEqReverse" (formula "59") (term "0,0,0,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "applyEq" (formula "58") (term "1,0") (ifseqformula "4"))
                                          (builtin "One Step Simplification" (formula "58"))
                                          (rule "orRight" (formula "58"))
                                          (rule "eqSymm" (formula "59"))
                                          (rule "inEqSimp_geqRight" (formula "58"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "5"))
                                          (rule "inEqSimp_contradEq7" (formula "59") (ifseqformula "4"))
                                          (rule "times_zero_1" (formula "59") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "59") (term "0,0"))
                                          (rule "leq_literals" (formula "59") (term "0"))
                                          (builtin "One Step Simplification" (formula "59"))
                                          (rule "false_right" (formula "59"))
                                          (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "4") (term "0"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "closeFalse" (formula "4"))
                                       )
                                       (branch "self.sorted[i_5].length ≥ 1 FALSE"
                                          (rule "eqSymm" (formula "6"))
                                          (rule "inEqSimp_geqRight" (formula "47"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "applyEq" (formula "6") (term "0") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "6"))
                                          (rule "closeFalse" (formula "6"))
                                       )
                                    )
                                    (branch "messages[i_5].length ≥ 1 FALSE"
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "replace_known_right" (formula "3") (term "0,1") (ifseqformula "46"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "replace_known_right" (formula "4") (term "0,1,1,0") (ifseqformula "46"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_right" (formula "58") (term "0,0") (ifseqformula "46"))
                                       (builtin "One Step Simplification" (formula "58"))
                                       (rule "eqSymm" (formula "58"))
                                       (builtin "One Step Simplification" (formula "58"))
                                       (rule "orRight" (formula "58"))
                                       (rule "notRight" (formula "58"))
                                       (rule "replace_known_right" (formula "7") (term "0,1,1,0") (ifseqformula "47"))
                                       (builtin "One Step Simplification" (formula "7"))
                                       (rule "inEqSimp_geqRight" (formula "47"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_contradEq7" (formula "59") (ifseqformula "2"))
                                       (rule "times_zero_1" (formula "59") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "59") (term "0,0"))
                                       (rule "leq_literals" (formula "59") (term "0"))
                                       (builtin "One Step Simplification" (formula "59"))
                                       (rule "false_right" (formula "59"))
                                       (rule "inEqSimp_notGeq" (formula "7") (term "0"))
                                       (rule "mul_literals" (formula "7") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "7") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "7") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "5") (term "0"))
                                       (rule "mul_literals" (formula "5") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "5") (term "0,0"))
                                       (rule "nnf_notAnd" (formula "42") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "42") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "42") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "42") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "42") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0"))
                                       (rule "mul_literals" (formula "42") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "45") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "45") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "45") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "45") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0"))
                                       (rule "mul_literals" (formula "45") (term "1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "45") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "45") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "44") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "44") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "44") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "44") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "44") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "44") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                                       (rule "mul_literals" (formula "44") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "43") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "43") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "43") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "43") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "43") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "43") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                                       (rule "mul_literals" (formula "43") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "28") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                                       (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "28") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                       (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "27") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                       (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                                       (rule "mul_literals" (formula "26") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "26") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                       (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "25") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                       (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                                       (rule "arrayLengthNotNegative" (formula "39") (term "1,0"))
                                       (rule "arrayLengthIsAShort" (formula "40") (term "1,0"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "true_left" (formula "40"))
                                       (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "0,0") (ifseqformula "13"))
                                       (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "50"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "24"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "23"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "2") (term "0,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "inEqSimp_contradEq7" (formula "5") (term "1") (ifseqformula "2"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "5") (term "0,0,1"))
                                       (rule "leq_literals" (formula "5") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "5") (term "0"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "closeFalse" (formula "5"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "33") (inst "sk=iv_9") (userinteraction))
                                    (rule "impRight" (formula "33") (userinteraction))
                                    (rule "getOfArray2seq" (formula "34") (term "0") (userinteraction))
                                    (branch "Case 1"
                                       (rule "getOfArray2seq" (formula "34") (term "1") (userinteraction))
                                       (branch "Case 1"
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (ifseqformula "20"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "1") (ifseqformula "20"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "1") (ifseqformula "25"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,1") (ifseqformula "20"))
                                          (rule "andLeft" (formula "18"))
                                          (rule "andLeft" (formula "4"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "orRight" (formula "39"))
                                          (rule "notLeft" (formula "21"))
                                          (rule "eqSymm" (formula "38"))
                                          (rule "eqSymm" (formula "3"))
                                          (rule "eqSymm" (formula "29"))
                                          (rule "eqSymm" (formula "32"))
                                          (rule "eqSymm" (formula "16"))
                                          (rule "eqSymm" (formula "4"))
                                          (rule "eqSymm" (formula "31"))
                                          (rule "eqSymm" (formula "17") (term "1,0"))
                                          (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "12"))
                                          (rule "replace_known_right" (formula "24") (term "0,1") (ifseqformula "43"))
                                          (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "44")))
                                          (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "41"))
                                          (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "39")) (ifInst ""  (formula "40")))
                                          (rule "polySimp_addComm0" (formula "7") (term "1"))
                                          (rule "lenOfSeqConcat" (formula "29") (term "0"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "polySimp_homoEq" (formula "29"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                          (rule "polySimp_addComm0" (formula "29") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "30"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "30") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                          (rule "polySimp_addComm0" (formula "29") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "6"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "6") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "lenOfSeqConcatEQ" (formula "29") (term "1,0,0") (ifseqformula "32"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "polySimp_addComm0" (formula "29") (term "1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                          (rule "add_literals" (formula "29") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "29") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "29") (term "0"))
                                          (rule "add_literals" (formula "29") (term "1,0"))
                                          (rule "times_zero_1" (formula "29") (term "0"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "true_left" (formula "29"))
                                          (rule "inEqSimp_commuteLeq" (formula "18"))
                                          (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "5"))
                                          (rule "inEqSimp_commuteLeq" (formula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "14"))
                                          (rule "polySimp_addComm1" (formula "14") (term "0"))
                                          (rule "applyEq" (formula "6") (term "0,1,0") (ifseqformula "7"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                          (rule "mul_literals" (formula "6") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                          (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                          (rule "add_literals" (formula "6") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "6") (term "0,0"))
                                          (rule "applyEq" (formula "30") (term "0") (ifseqformula "3"))
                                          (rule "eqSymm" (formula "30"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "29"))
                                          (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                          (rule "polySimp_elimOne" (formula "29") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1"))
                                          (rule "mul_literals" (formula "14") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                          (rule "polySimp_elimOne" (formula "6") (term "0"))
                                          (rule "inEqSimp_strengthen1" (formula "6") (ifseqformula "37"))
                                          (rule "inEqSimp_contradEq7" (formula "37") (ifseqformula "6"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0"))
                                          (rule "add_literals" (formula "37") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "37") (term "0,0"))
                                          (rule "leq_literals" (formula "37") (term "0"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "false_right" (formula "37"))
                                          (rule "nonNull" (formula "33") (inst "i=i"))
                                          (rule "sub_literals" (formula "33") (term "2,1,0,1,1"))
                                          (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "39")))
                                          (rule "greater_literals" (formula "33") (term "0"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                          (rule "applyEq" (formula "33") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
                                          (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
                                          (rule "array2seqDef" (formula "25") (term "0,1") (inst "u=u"))
                                          (rule "eqSymm" (formula "25"))
                                          (rule "array2seqDef" (formula "15") (term "0,0") (inst "u=u"))
                                          (rule "narrowSelectArrayType" (formula "15") (term "2,0,0") (ifseqformula "8") (ifseqformula "35"))
                                          (rule "nonNull" (formula "20") (inst "i=i"))
                                          (rule "greater_literals" (formula "20") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "sub_literals" (formula "20") (term "2,1,0,1"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "andLeft" (formula "20"))
                                          (rule "notLeft" (formula "20"))
                                          (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "11"))
                                          (rule "narrowSelectArrayType" (formula "20") (term "0,0,1,0") (ifseqformula "8") (ifseqformula "35"))
                                          (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                                          (rule "array2seqDef" (formula "3") (term "1") (inst "u=u"))
                                          (rule "eqSymm" (formula "3"))
                                          (rule "array2seqDef" (formula "31") (term "0,1,0") (inst "u=u"))
                                          (rule "array2seqDef" (formula "16") (term "1") (inst "u=u"))
                                          (rule "eqSymm" (formula "16"))
                                          (rule "narrowSelectArrayType" (formula "16") (term "2,0") (ifseqformula "8") (ifseqformula "36"))
                                          (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "16"))
                                          (rule "array2seqDef" (formula "4") (term "1") (inst "u=u"))
                                          (rule "eqSymm" (formula "4"))
                                          (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                                          (rule "array2seqDef" (formula "17") (term "1,1,0") (inst "u=u"))
                                          (rule "eqSymm" (formula "17") (term "1,0"))
                                          (rule "array2seqDef" (formula "30") (term "1") (inst "u=u"))
                                          (rule "eqSymm" (formula "30"))
                                          (rule "applyEq" (formula "30") (term "0") (ifseqformula "3"))
                                          (rule "eqSymm" (formula "30"))
                                          (rule "array2seqDef" (formula "2") (term "0,0") (inst "u=u"))
                                          (rule "lenOfSeqDef" (formula "2") (term "0"))
                                          (rule "polySimp_elimSub" (formula "2") (term "1,0"))
                                          (rule "times_zero_2" (formula "2") (term "1,1,0"))
                                          (rule "add_zero_right" (formula "2") (term "1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0"))
                                          (rule "add_zero_right" (formula "2") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                                          (rule "array2seqDef" (formula "14") (term "0,0") (inst "u=u"))
                                          (rule "narrowSelectArrayType" (formula "14") (term "2,0,0") (ifseqformula "8") (ifseqformula "36"))
                                          (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "16"))
                                          (rule "pullOutSelect" (formula "37") (term "1,0") (inst "selectSK=arr_116"))
                                          (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "1"))
                                          (rule "applyEq" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "23"))
                                          (rule "array2seqDef" (formula "26") (term "1") (inst "u=u"))
                                          (rule "eqSymm" (formula "26"))
                                          (rule "array2seqDef" (formula "5") (term "1") (inst "u=u"))
                                          (rule "eqSymm" (formula "5"))
                                          (rule "array2seqDef" (formula "4") (term "1") (inst "u=u"))
                                          (rule "eqSymm" (formula "4"))
                                          (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                                          (rule "eqSymm" (formula "4"))
                                          (rule "array2seqDef" (formula "18") (term "1,1,0") (inst "u=u"))
                                          (rule "eqSymm" (formula "18") (term "1,0"))
                                          (rule "array2seqDef" (formula "31") (term "0") (inst "u=u"))
                                          (rule "array2seqDef" (formula "31") (term "1") (inst "u=u"))
                                          (rule "applyEq" (formula "31") (term "1") (ifseqformula "5"))
                                          (rule "eqSeqDef2" (formula "17") (inst "iv=iv") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "eqSeqDef" (formula "17") (term "1,0") (inst "iv=iv"))
                                          (rule "lenOfSeqDef" (formula "17") (term "0,0,1,0"))
                                          (rule "eqSymm" (formula "17") (term "0,1,0"))
                                          (rule "polySimp_elimSub" (formula "17") (term "1,1,0,1,0"))
                                          (rule "times_zero_2" (formula "17") (term "1,1,1,0,1,0"))
                                          (rule "add_zero_right" (formula "17") (term "1,1,0,1,0"))
                                          (rule "getOfSeqDef" (formula "17") (term "0,1,0,1,1,0"))
                                          (rule "castDel" (formula "17") (term "2,0,1,0,1,1,0"))
                                          (rule "castDel" (formula "17") (term "1,0,1,0,1,1,0"))
                                          (rule "add_zero_right" (formula "17") (term "0,2,1,0,1,0,1,1,0"))
                                          (rule "eqSymm" (formula "17") (term "1,0,1,1,0"))
                                          (rule "polySimp_elimSub" (formula "17") (term "1,1,0,1,1,0,1,1,0"))
                                          (rule "times_zero_2" (formula "17") (term "1,1,1,0,1,1,0,1,1,0"))
                                          (rule "add_zero_right" (formula "17") (term "1,1,0,1,1,0,1,1,0"))
                                          (rule "lenOfSeqDef" (formula "17") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_elimSub" (formula "17") (term "1,1,1,0,0,1,1,0"))
                                          (rule "times_zero_2" (formula "17") (term "1,1,1,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "17") (term "1,1,1,0,0,1,1,0"))
                                          (rule "lenOfSeqDef" (formula "17") (term "0,0,1,0"))
                                          (rule "eqSymm" (formula "17") (term "0,1,0"))
                                          (rule "polySimp_elimSub" (formula "17") (term "1,1,0,1,0"))
                                          (rule "mul_literals" (formula "17") (term "1,1,1,0,1,0"))
                                          (rule "add_zero_right" (formula "17") (term "1,1,0,1,0"))
                                          (rule "getOfSeqDef" (formula "17") (term "0,1,0,1,1,0"))
                                          (rule "castDel" (formula "17") (term "1,0,1,0,1,1,0"))
                                          (rule "castDel" (formula "17") (term "2,0,1,0,1,1,0"))
                                          (rule "add_zero_right" (formula "17") (term "0,2,1,0,1,0,1,1,0"))
                                          (rule "eqSymm" (formula "17") (term "1,0,1,1,0"))
                                          (rule "polySimp_elimSub" (formula "17") (term "1,1,0,1,1,0,1,1,0"))
                                          (rule "times_zero_2" (formula "17") (term "1,1,1,0,1,1,0,1,1,0"))
                                          (rule "add_zero_right" (formula "17") (term "1,1,0,1,1,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "17") (term "0,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,1,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "17") (term "0,1,0,1,0"))
                                          (rule "add_zero_right" (formula "17") (term "0,0,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "17") (term "0,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0,1,1,0"))
                                          (rule "eqSymm" (formula "17") (term "1,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,1,1,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,1,0,1,1,0"))
                                          (rule "eqSymm" (formula "17") (term "1,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,1,1,0,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,1,1,0,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0,1,0,1,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "0,0,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "0,0,1,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "0,0,0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1,0,1,1,0"))
                                          (rule "eqSymm" (formula "17") (term "1,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,1,1,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,1,0,1,1,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,1,1,0,1,1,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,1,0,1,1,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,1,1,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,1,0,1,1,0"))
                                          (rule "eqSymm" (formula "17") (term "1,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,1,1,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "17") (term "1,1,0,1,1,0,1,1,0"))
                                          (rule "mul_literals" (formula "17") (term "0,1,1,0,1,1,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,1,1,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,1,1,0,1,1,0"))
                                          (rule "eqSeqDef2" (formula "25") (inst "iv=iv") (ifseqformula "25"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "true_left" (formula "25"))
                                          (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=arr_117"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "23"))
                                          (rule "eqSymm" (formula "37"))
                                          (rule "pullOutSelect" (formula "2") (term "0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_19"))
                                          (rule "applyEq" (formula "3") (term "1,0,1,0,1,0,0") (ifseqformula "2"))
                                          (rule "applyEq" (formula "3") (term "1,1,0") (ifseqformula "2"))
                                          (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "2"))
                                          (rule "applyEq" (formula "3") (term "1,0,0,0,1,0,0") (ifseqformula "2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "28"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "42")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0") (ifseqformula "24"))
                                          (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "12"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "42")) (ifInst ""  (formula "12")))
                                          (rule "applyEqReverse" (formula "3") (term "1,0,0,0,1,0,0") (ifseqformula "2"))
                                          (rule "applyEqReverse" (formula "3") (term "1,1,0") (ifseqformula "2"))
                                          (rule "applyEqReverse" (formula "3") (term "1,2,0") (ifseqformula "2"))
                                          (rule "applyEqReverse" (formula "3") (term "1,0,1,0,1,0,0") (ifseqformula "2"))
                                          (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "pullOutSelect" (formula "30") (term "1,2,0") (inst "selectSK=arr_118"))
                                          (rule "applyEq" (formula "31") (term "0,1,0") (ifseqformula "30"))
                                          (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "27"))
                                          (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "41")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,0,0") (ifseqformula "23"))
                                          (rule "replace_known_right" (formula "30") (term "0,0,0,0") (ifseqformula "39"))
                                          (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "40")))
                                          (rule "applyEqReverse" (formula "31") (term "1,2,0") (ifseqformula "30"))
                                          (rule "applyEqReverse" (formula "31") (term "0,1,0") (ifseqformula "30"))
                                          (rule "hideAuxiliaryEq" (formula "30"))
                                          (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "16"))
                                          (rule "mul_literals" (formula "17") (term "0,0"))
                                          (rule "add_zero_left" (formula "17") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                          (rule "mul_literals" (formula "17") (term "1"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_119"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_120"))
                                          (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "26"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "nnf_imp2or" (formula "36") (term "0"))
                                          (rule "nnf_imp2or" (formula "24") (term "0"))
                                          (rule "nnf_imp2or" (formula "21") (term "0"))
                                          (rule "nnf_notAnd" (formula "36") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "36") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0"))
                                          (rule "mul_literals" (formula "36") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "36") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "24") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                                          (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "24") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                                          (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "21") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
                                          (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "21") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                          (rule "mul_literals" (formula "21") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "21") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                                          (rule "nnf_imp2or" (formula "21") (term "0,1,1,0"))
                                          (rule "nnf_notAnd" (formula "21") (term "0,0,1,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "21") (term "0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "21") (term "1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "21") (term "0,0,0,1,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "21") (term "0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,1,1,0"))
                                          (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "23") (ifseqformula "14"))
                                          (rule "andLeft" (formula "23"))
                                          (rule "notLeft" (formula "24"))
                                          (rule "andLeft" (formula "23"))
                                          (rule "notLeft" (formula "24"))
                                          (rule "andLeft" (formula "23"))
                                          (rule "notLeft" (formula "24"))
                                          (rule "andLeft" (formula "23"))
                                          (rule "notLeft" (formula "24"))
                                          (rule "andLeft" (formula "23"))
                                          (rule "andLeft" (formula "23"))
                                          (rule "andLeft" (formula "23"))
                                          (rule "andLeft" (formula "23"))
                                          (rule "notLeft" (formula "23"))
                                          (rule "nonNull" (formula "26") (inst "i=i"))
                                          (rule "sub_literals" (formula "26") (term "2,1,0,1,1"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "greater_literals" (formula "26") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "andLeft" (formula "26"))
                                          (rule "notLeft" (formula "26"))
                                          (rule "narrowSelectArrayType" (formula "26") (term "0,0,1,0") (ifseqformula "12") (ifseqformula "41"))
                                          (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                                          (rule "nonNull" (formula "25") (inst "i=i"))
                                          (rule "sub_literals" (formula "25") (term "2,1,0,1,1"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "greater_literals" (formula "25") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "andLeft" (formula "25"))
                                          (rule "notLeft" (formula "25"))
                                          (rule "narrowSelectArrayType" (formula "25") (term "0,0,1,0") (ifseqformula "12") (ifseqformula "41"))
                                          (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                          (rule "nonNull" (formula "24") (inst "i=i"))
                                          (rule "sub_literals" (formula "24") (term "2,1,0,1,1"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "greater_literals" (formula "24") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "andLeft" (formula "24"))
                                          (rule "notLeft" (formula "24"))
                                          (rule "narrowSelectArrayType" (formula "24") (term "0,0,1,0") (ifseqformula "12") (ifseqformula "41"))
                                          (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                          (rule "nonNull" (formula "23") (inst "i=i"))
                                          (rule "sub_literals" (formula "23") (term "2,1,0,1,1"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "greater_literals" (formula "23") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "andLeft" (formula "23"))
                                          (rule "notLeft" (formula "23"))
                                          (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "41"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "41"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "ifthenelse_negated" (formula "3") (term "0"))
                                          (rule "ifthenelse_negated" (formula "4") (term "0"))
                                          (rule "narrowSelectArrayType" (formula "23") (term "0,0,1,0") (ifseqformula "12") (ifseqformula "41"))
                                          (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                                          (rule "nnf_imp2or" (formula "26") (term "0"))
                                          (rule "nnf_imp2or" (formula "25") (term "0"))
                                          (rule "nnf_imp2or" (formula "24") (term "0"))
                                          (rule "nnf_imp2or" (formula "23") (term "0"))
                                          (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                          (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "25") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                          (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "24") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                                          (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "23") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
                                          (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                                          (rule "mul_literals" (formula "23") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
                                          (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "38") (ifseqformula "14"))
                                          (rule "replaceKnownSelect_taclet00110011100000_4" (formula "38") (term "1,1,0,0,0,0,0,0,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00110011100000_6" (formula "38") (term "1,1,0,0,0,0,0,0,0"))
                                          (rule "andLeft" (formula "38"))
                                          (rule "andLeft" (formula "38"))
                                          (rule "notLeft" (formula "40"))
                                          (rule "notLeft" (formula "39"))
                                          (rule "andLeft" (formula "38"))
                                          (rule "andLeft" (formula "38"))
                                          (rule "notLeft" (formula "40"))
                                          (rule "andLeft" (formula "38"))
                                          (rule "notLeft" (formula "40"))
                                          (rule "andLeft" (formula "38"))
                                          (rule "andLeft" (formula "38"))
                                          (rule "andLeft" (formula "38"))
                                          (rule "notLeft" (formula "38"))
                                          (rule "nonNull" (formula "41") (inst "i=i"))
                                          (rule "sub_literals" (formula "41") (term "2,1,0,1,1"))
                                          (builtin "One Step Simplification" (formula "41"))
                                          (rule "greater_literals" (formula "41") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "41"))
                                          (rule "andLeft" (formula "41"))
                                          (rule "notLeft" (formula "41"))
                                          (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "41") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0"))
                                          (rule "nonNull" (formula "40") (inst "i=i"))
                                          (rule "sub_literals" (formula "40") (term "2,1,0,1,1"))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "greater_literals" (formula "40") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "andLeft" (formula "40"))
                                          (rule "notLeft" (formula "40"))
                                          (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "40") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0"))
                                          (rule "nonNull" (formula "39") (inst "i=i"))
                                          (rule "greater_literals" (formula "39") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "sub_literals" (formula "39") (term "2,1,0,1"))
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "andLeft" (formula "39"))
                                          (rule "notLeft" (formula "39"))
                                          (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "39") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0"))
                                          (rule "nonNull" (formula "38") (inst "i=i"))
                                          (rule "greater_literals" (formula "38") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "52")))
                                          (rule "sub_literals" (formula "38") (term "2,1,0"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "38") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0"))
                                          (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_15"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "30"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "14"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")) (ifInst ""  (formula "14")))
                                          (rule "applyEqReverse" (formula "52") (term "0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "50") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_15"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "30"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "14"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")) (ifInst ""  (formula "14")))
                                          (rule "applyEqReverse" (formula "51") (term "0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "49") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_15"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "30"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "14"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")) (ifInst ""  (formula "14")))
                                          (rule "applyEqReverse" (formula "50") (term "0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_15"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "30"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "14"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")) (ifInst ""  (formula "14")))
                                          (rule "applyEqReverse" (formula "49") (term "0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_15"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "30"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "14"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "64")) (ifInst ""  (formula "14")))
                                          (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "pullOutSelect" (formula "41") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_15"))
                                          (rule "applyEq" (formula "42") (term "0,1,1,1,0,0") (ifseqformula "41"))
                                          (rule "applyEq" (formula "47") (term "0") (ifseqformula "41"))
                                          (rule "simplifySelectOfAnonEQ" (formula "41") (ifseqformula "33"))
                                          (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "63")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "0,0,0") (ifseqformula "29"))
                                          (rule "replace_known_left" (formula "41") (term "0,0,0,0") (ifseqformula "13"))
                                          (builtin "One Step Simplification" (formula "41"))
                                          (rule "simplifySelectOfAnonEQ" (formula "41") (ifseqformula "29"))
                                          (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "63")) (ifInst ""  (formula "13")))
                                          (rule "applyEqReverse" (formula "42") (term "1,0,0,1,0") (ifseqformula "41"))
                                          (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "41"))
                                          (rule "applyEqReverse" (formula "42") (term "0,1,1,1,0,0") (ifseqformula "41"))
                                          (rule "hideAuxiliaryEq" (formula "41"))
                                          (rule "pullOutSelect" (formula "40") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_15"))
                                          (rule "applyEq" (formula "41") (term "0,1,1,1,0,0") (ifseqformula "40"))
                                          (rule "applyEq" (formula "46") (term "0") (ifseqformula "40"))
                                          (rule "simplifySelectOfAnonEQ" (formula "40") (ifseqformula "33"))
                                          (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "62")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,0,0") (ifseqformula "29"))
                                          (rule "replace_known_left" (formula "40") (term "0,0,0,0") (ifseqformula "13"))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "simplifySelectOfAnonEQ" (formula "40") (ifseqformula "29"))
                                          (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "62")) (ifInst ""  (formula "13")))
                                          (rule "applyEqReverse" (formula "41") (term "1,0,0,1,0") (ifseqformula "40"))
                                          (rule "applyEqReverse" (formula "41") (term "0,1,1,1,0,0") (ifseqformula "40"))
                                          (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "40"))
                                          (rule "hideAuxiliaryEq" (formula "40"))
                                          (rule "pullOutSelect" (formula "39") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_15"))
                                          (rule "applyEq" (formula "45") (term "0") (ifseqformula "39"))
                                          (rule "applyEq" (formula "40") (term "0,1,1,1,0,0") (ifseqformula "39"))
                                          (rule "simplifySelectOfAnonEQ" (formula "39") (ifseqformula "33"))
                                          (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "61")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "0,0,0") (ifseqformula "29"))
                                          (rule "replace_known_left" (formula "39") (term "0,0,0,0") (ifseqformula "13"))
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "simplifySelectOfAnonEQ" (formula "39") (ifseqformula "29"))
                                          (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "61")) (ifInst ""  (formula "13")))
                                          (rule "applyEqReverse" (formula "40") (term "1,0,0,1,0") (ifseqformula "39"))
                                          (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "39"))
                                          (rule "applyEqReverse" (formula "40") (term "0,1,1,1,0,0") (ifseqformula "39"))
                                          (rule "hideAuxiliaryEq" (formula "39"))
                                          (rule "arrayLengthIsAShort" (formula "11") (term "0"))
                                          (builtin "One Step Simplification" (formula "11"))
                                          (rule "true_left" (formula "11"))
                                          (rule "arrayLengthNotNegative" (formula "11") (term "0"))
                                          (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                          (rule "mul_literals" (formula "11") (term "1"))
                                          (rule "commute_or_2" (formula "43") (term "0"))
                                          (rule "arrayLengthIsAShort" (formula "12") (term "1,1"))
                                          (builtin "One Step Simplification" (formula "12"))
                                          (rule "true_left" (formula "12"))
                                          (rule "arrayLengthNotNegative" (formula "12") (term "1,1"))
                                          (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "12"))
                                          (rule "leq_literals" (formula "11") (term "0"))
                                          (builtin "One Step Simplification" (formula "11"))
                                          (rule "true_left" (formula "11"))
                                          (rule "commute_or_2" (formula "28") (term "0"))
                                          (rule "nnf_imp2or" (formula "39") (term "0"))
                                          (rule "arrayLengthIsAShort" (formula "23") (term "0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "true_left" (formula "23"))
                                          (rule "arrayLengthNotNegative" (formula "23") (term "0"))
                                          (rule "lenNonNegative" (formula "37") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "37"))
                                          (rule "nnf_imp2or" (formula "44") (term "0"))
                                          (rule "arrayLengthNotNegative" (formula "19") (term "1,1"))
                                          (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "21"))
                                          (rule "leq_literals" (formula "19") (term "0"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "true_left" (formula "19"))
                                          (rule "arrayLengthIsAShort" (formula "19") (term "1,1"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "true_left" (formula "19"))
                                          (rule "nnf_imp2or" (formula "43") (term "0"))
                                          (rule "commute_or_2" (formula "22") (term "0,1,1,0"))
                                          (rule "nnf_imp2or" (formula "42") (term "0"))
                                          (rule "ifthenelse_to_or_right" (formula "22") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,1,0"))
                                          (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0,1,0"))
                                          (rule "add_literals" (formula "22") (term "0,0,0,0,0,1,0"))
                                          (rule "add_zero_left" (formula "22") (term "0,0,0,0,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "22") (term "0,1,1,0,1,0"))
                                          (rule "mul_literals" (formula "22") (term "1,0,0,0,1,1,0,1,0"))
                                          (rule "add_literals" (formula "22") (term "0,0,0,1,1,0,1,0"))
                                          (rule "add_zero_left" (formula "22") (term "0,0,1,1,0,1,0"))
                                          (rule "nnf_notAnd" (formula "41") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "41") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "41") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "41") (term "0,0,0"))
                                          (rule "mul_literals" (formula "41") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "41") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
                                          (rule "mul_literals" (formula "41") (term "1,0,0,0"))
                                          (rule "equalityToSeqGetAndSeqLenLeft" (formula "40") (inst "iv=iv"))
                                          (rule "andLeft" (formula "40"))
                                          (rule "lenOfSeqConcat" (formula "40") (term "0"))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "polySimp_homoEq" (formula "40"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,0"))
                                          (rule "polySimp_addComm0" (formula "40") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "40") (term "1,0"))
                                          (rule "mul_literals" (formula "40") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "40") (term "0"))
                                          (rule "polySimp_addComm0" (formula "40") (term "0,0"))
                                          (rule "lenOfSeqConcat" (formula "41") (term "1,1,0,0"))
                                          (builtin "One Step Simplification" (formula "41"))
                                          (rule "polySimp_addComm0" (formula "41") (term "1,1,0,0"))
                                          (rule "lenOfSeqConcatEQ" (formula "40") (term "1,0,0") (ifseqformula "42"))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "polySimp_addComm0" (formula "40") (term "1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "40") (term "0,0"))
                                          (rule "add_literals" (formula "40") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "40") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "40") (term "0"))
                                          (rule "add_literals" (formula "40") (term "1,0"))
                                          (rule "times_zero_1" (formula "40") (term "0"))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "true_left" (formula "40"))
                                          (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "40") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "40") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0"))
                                          (rule "getOfSeqConcat" (formula "40") (term "0,1,0"))
                                          (rule "polySimp_elimSub" (formula "40") (term "1,2,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "40") (term "1,2,0,1,0"))
                                          (rule "getOfSeqSingleton" (formula "40") (term "2,0,1,0"))
                                          (rule "castDel" (formula "40") (term "1,2,0,1,0"))
                                          (rule "castDel" (formula "40") (term "2,2,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,1,0"))
                                          (rule "polySimp_sepPosMonomial" (formula "40") (term "0,2,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "1,0,2,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "40") (term "1,0,2,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,1,0"))
                                          (rule "getOfSeqConcatEQ" (formula "40") (term "1,1,0") (ifseqformula "41"))
                                          (rule "eqSymm" (formula "40") (term "1,0"))
                                          (rule "polySimp_elimSub" (formula "40") (term "1,2,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "40") (term "1,2,0,1,0"))
                                          (rule "getOfSeqSingleton" (formula "40") (term "2,0,1,0"))
                                          (rule "castDel" (formula "40") (term "1,2,0,1,0"))
                                          (rule "castDel" (formula "40") (term "2,2,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,1,0"))
                                          (rule "polySimp_sepPosMonomial" (formula "40") (term "0,2,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "1,0,2,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "40") (term "1,0,2,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,1,0"))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "true_left" (formula "40"))
                                          (rule "arrayLengthIsAShort" (formula "40") (term "1,0,1,0"))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "true_left" (formula "40"))
                                          (rule "arrayLengthNotNegative" (formula "40") (term "1,0,1,0"))
                                          (rule "nnf_notAnd" (formula "45") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "45") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "45") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "45") (term "0,0,0"))
                                          (rule "mul_literals" (formula "45") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "45") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0"))
                                          (rule "mul_literals" (formula "45") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "44") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "44") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "44") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "44") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "44") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "44") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "44") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "0,0,0"))
                                          (rule "mul_literals" (formula "44") (term "1,0,0,0"))
                                          (rule "commute_or_2" (formula "28") (term "0"))
                                          (rule "nnf_notAnd" (formula "43") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "43") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "43") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "43") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0"))
                                          (rule "mul_literals" (formula "43") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "43") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "43") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0"))
                                          (rule "arrayLengthIsAShort" (formula "6") (term "1,0"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "arrayLengthNotNegative" (formula "6") (term "1,0"))
                                          (rule "commute_or_2" (formula "28") (term "0"))
                                          (rule "arrayLengthNotNegative" (formula "9") (term "1,0"))
                                          (rule "seqGetAlphaCast" (formula "10") (term "1"))
                                          (rule "castDel" (formula "10") (term "0"))
                                          (builtin "One Step Simplification" (formula "10"))
                                          (rule "true_left" (formula "10"))
                                          (rule "arrayLengthIsAShort" (formula "10") (term "1,0"))
                                          (builtin "One Step Simplification" (formula "10"))
                                          (rule "true_left" (formula "10"))
                                          (rule "arrayLengthNotNegative" (formula "8") (term "1,0"))
                                          (rule "arrayLengthIsAShort" (formula "9") (term "1,0"))
                                          (builtin "One Step Simplification" (formula "9"))
                                          (rule "true_left" (formula "9"))
                                          (rule "commute_or_2" (formula "29") (term "0"))
                                          (rule "commute_or_2" (formula "28") (term "0"))
                                          (rule "arrayLengthIsAShort" (formula "42") (term "1,0"))
                                          (builtin "One Step Simplification" (formula "42"))
                                          (rule "true_left" (formula "42"))
                                          (rule "arrayLengthNotNegative" (formula "42") (term "1,0"))
                                          (rule "ifthenelse_split" (formula "3") (term "0"))
                                          (branch "self.sorted.<created> = TRUE TRUE"
                                             (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "1") (term "1,0,0,1,0,0") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "1") (term "0,0,0,0,0") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "2") (term "1,0,1,0,1,0,0") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "7") (term "0,0,0,0") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "7") (term "0,1,0") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "1") (term "1,1,0") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "6") (term "0,0") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "2") (term "1,0,0,0,1,0,0") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "1") (term "1,2,0") (ifseqformula "4"))
                                             (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "commute_or" (formula "48") (term "0,0"))
                                             (rule "commute_or" (formula "30") (term "0,0"))
                                             (rule "commute_or_2" (formula "44") (term "0"))
                                             (rule "commute_or" (formula "23") (term "0,0,1,1,0"))
                                             (rule "shift_paren_or" (formula "23") (term "1,0,1,0"))
                                             (rule "commute_or_2" (formula "47") (term "0"))
                                             (rule "commute_or_2" (formula "46") (term "0"))
                                             (rule "commute_or_2" (formula "45") (term "0"))
                                             (rule "commute_or" (formula "29") (term "0,0"))
                                             (rule "commute_or" (formula "28") (term "0,0"))
                                             (rule "ifthenelse_to_or_left" (formula "23") (term "1,0,0,1,0"))
                                             (rule "eqSymm" (formula "23") (term "1,1,1,0,0,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "23") (term "0,0,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "23") (term "1,0,0,0,0,1,0,0,1,0"))
                                             (rule "add_literals" (formula "23") (term "0,0,0,0,1,0,0,1,0"))
                                             (rule "add_zero_left" (formula "23") (term "0,0,0,1,0,0,1,0"))
                                             (rule "commute_or" (formula "27") (term "0,0"))
                                             (rule "commute_or" (formula "26") (term "0,0"))
                                             (rule "commute_or" (formula "44") (term "0,0"))
                                             (rule "commute_or" (formula "47") (term "0,0"))
                                             (rule "commute_or" (formula "46") (term "0,0"))
                                             (rule "commute_or" (formula "45") (term "0,0"))
                                             (rule "commute_or" (formula "23") (term "1,1,0,0,1,0"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "0,0") (ifseqformula "14"))
                                             (rule "replace_known_left" (formula "25") (term "1") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "51")))
                                             (rule "true_left" (formula "25"))
                                             (rule "cnf_rightDist" (formula "23") (term "0,0,1,0"))
                                             (rule "commute_or_2" (formula "23") (term "1,0,0,1,0"))
                                             (rule "inEqSimp_or_subsumption4" (formula "23") (term "0,1,0,0,1,0"))
                                             (rule "greater_literals" (formula "23") (term "0,0,0,1,0,0,1,0"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "shift_paren_or" (formula "23") (term "0,0,0,1,0"))
                                             (rule "ifthenelse_to_or_right" (formula "23") (term "0,0,0,1,1,0"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "nnf_notAnd" (formula "23") (term "0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "23") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0,0,1,1,0"))
                                             (rule "nnf_notAnd" (formula "23") (term "0,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "23") (term "0,0,1,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "23") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "add_zero_right" (formula "23") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,1,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "23") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "23") (term "1,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "add_literals" (formula "23") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "add_zero_left" (formula "23") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "23") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "23") (term "0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "23") (term "0,1,1,0"))
                                             (rule "commute_or" (formula "23") (term "1,1,0,1,1,0"))
                                             (rule "commute_or_2" (formula "23") (term "0,1,0,1,1,0"))
                                             (rule "commute_or_2" (formula "23") (term "0,1,1,0,1,1,0"))
                                             (rule "commute_or" (formula "23") (term "0,0,1,0,1,1,0"))
                                             (rule "commute_or" (formula "23") (term "0,0,1,1,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "23") (term "1,1,0,1,1,0"))
                                             (rule "commute_or_2" (formula "23") (term "0,1,1,0,1,1,0"))
                                             (rule "inEqSimp_or_tautInEq1" (formula "23") (term "0,0,1,1,0,1,1,0"))
                                             (rule "add_zero_right" (formula "23") (term "1,1,0,0,1,1,0,1,1,0"))
                                             (rule "qeq_literals" (formula "23") (term "1,0,0,1,1,0,1,1,0"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "shift_paren_or" (formula "23") (term "1,1,0,1,1,0"))
                                             (rule "commute_or" (formula "23") (term "0,1,1,0,1,1,0"))
                                             (rule "cnf_rightDist" (formula "23") (term "0,1,1,0"))
                                             (rule "commute_or_2" (formula "23") (term "0,0,1,1,0"))
                                             (rule "shift_paren_or" (formula "23") (term "1,0,1,1,0"))
                                             (rule "commute_or_2" (formula "23") (term "0,1,0,1,1,0"))
                                             (rule "shift_paren_or" (formula "23") (term "0,0,0,1,1,0"))
                                             (rule "commute_or_2" (formula "23") (term "0,0,1,0,1,1,0"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "shift_paren_or" (formula "23") (term "0,0,0,0,1,1,0"))
                                             (rule "commute_or" (formula "23") (term "0,0,0,0,0,1,1,0"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "ifthenelse_split" (formula "5") (term "0"))
                                             (branch "self.sorted[i_5].length ≥ 1 TRUE"
                                                (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "5"))
                                                (rule "leq_literals" (formula "9") (term "0"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "true_left" (formula "9"))
                                                (rule "ifthenelse_split" (formula "1") (term "0"))
                                                (branch " ¬self.sorted[i_5] = null ∧ ¬self.sorted[i_5].<created> = TRUE TRUE"
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "notLeft" (formula "2"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "referencedObjectIsCreatedRight" (formula "51") (ifseqformula "50"))
                                                   (rule "close" (formula "51") (ifseqformula "14"))
                                                )
                                                (branch " ¬self.sorted[i_5] = null ∧ ¬self.sorted[i_5].<created> = TRUE FALSE"
                                                   (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "allLeft" (formula "47") (inst "t=i_5"))
                                                   (rule "inEqSimp_homoInEq1" (formula "47") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "47") (term "0,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "47") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "47") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1"))
                                                   (rule "mul_literals" (formula "47") (term "0,1,1"))
                                                   (rule "polySimp_elimOne" (formula "47") (term "1,1,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "47") (term "1,0") (ifseqformula "9"))
                                                   (rule "qeq_literals" (formula "47") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "47"))
                                                   (rule "inEqSimp_contradInEq1" (formula "47") (term "1") (ifseqformula "10"))
                                                   (rule "inEqSimp_homoInEq1" (formula "47") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "47") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "47") (term "0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "47") (term "0,0,0,1"))
                                                   (rule "add_literals" (formula "47") (term "0,0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1"))
                                                   (rule "add_literals" (formula "47") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "47") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "47") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "47") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "47"))
                                                   (rule "notLeft" (formula "47"))
                                                   (rule "pullOutSelect" (formula "49") (term "0") (inst "selectSK=arr_121"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "32"))
                                                   (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "64"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")))
                                                   (rule "applyEqReverse" (formula "50") (term "0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "narrowSelectArrayType" (formula "49") (term "0") (ifseqformula "34") (ifseqformula "65"))
                                                   (rule "arrayLengthNotNegative" (formula "28") (term "1,1,0"))
                                                   (rule "arrayLengthIsAShort" (formula "29") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "29"))
                                                   (rule "true_left" (formula "29"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "8") (term "1,2,0") (ifseqformula "13"))
                                                   (rule "arrayLengthNotNegative" (formula "28") (term "1,1,0"))
                                                   (rule "arrayLengthIsAShort" (formula "29") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "29"))
                                                   (rule "true_left" (formula "29"))
                                                   (rule "all_pull_out1" (formula "23") (term "1,0"))
                                                   (rule "shift_paren_and" (formula "23") (term "0,1,0"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "7") (term "0,1,0") (ifseqformula "14"))
                                                   (rule "arrayLengthIsAShort" (formula "28") (term "1,1,0"))
                                                   (builtin "One Step Simplification" (formula "28"))
                                                   (rule "true_left" (formula "28"))
                                                   (rule "arrayLengthNotNegative" (formula "28") (term "1,1,0"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "45") (term "1,2,0") (ifseqformula "39"))
                                                   (rule "replace_known_right" (formula "45") (term "0") (ifseqformula "55"))
                                                   (builtin "One Step Simplification" (formula "45"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "61") (term "0") (ifseqformula "15"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "62"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "65") (term "0") (ifseqformula "16"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "66"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "64") (term "0") (ifseqformula "17"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "65"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "68") (term "0") (ifseqformula "18"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "69"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "67") (term "0") (ifseqformula "19"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "68"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "allLeft" (formula "39") (inst "t=i_5"))
                                                   (rule "inEqSimp_commuteGeq" (formula "39") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0") (ifseqformula "16"))
                                                   (rule "qeq_literals" (formula "39") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "39"))
                                                   (rule "inEqSimp_contradInEq1" (formula "39") (term "1") (ifseqformula "17"))
                                                   (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                                   (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "39") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "39"))
                                                   (rule "notLeft" (formula "39"))
                                                   (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "60"))
                                                   (builtin "One Step Simplification" (formula "12"))
                                                   (rule "narrowSelectArrayType" (formula "13") (term "2,0") (ifseqformula "20") (ifseqformula "60"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "0") (ifseqformula "20"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "0") (ifseqformula "21"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "66") (term "0") (ifseqformula "22"))
                                                   (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "67"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "ifthenelse_split" (formula "9") (term "0"))
                                                   (branch " ¬self.sorted[i_5] = null ∧ ¬( self.sorted[i_5].<created> = TRUE ∨ (self.sorted[i_5]@heap).<created>@anon_heap_first«anonHeapFunction» = TRUE) TRUE"
                                                      (rule "andLeft" (formula "9"))
                                                      (rule "notLeft" (formula "9"))
                                                      (rule "notLeft" (formula "9"))
                                                      (rule "orRight" (formula "63"))
                                                      (rule "referencedObjectIsCreatedRight" (formula "63") (ifseqformula "65"))
                                                      (rule "close" (formula "63") (ifseqformula "23"))
                                                   )
                                                   (branch " ¬self.sorted[i_5] = null ∧ ¬( self.sorted[i_5].<created> = TRUE ∨ (self.sorted[i_5]@heap).<created>@anon_heap_first«anonHeapFunction» = TRUE) FALSE"
                                                      (rule "close" (formula "78") (ifseqformula "9"))
                                                   )
                                                )
                                             )
                                             (branch "self.sorted[i_5].length ≥ 1 FALSE"
                                                (rule "inEqSimp_geqRight" (formula "50"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_homoInEq1" (formula "6"))
                                                (rule "times_zero_2" (formula "6") (term "1,0"))
                                                (rule "add_zero_right" (formula "6") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                (rule "mul_literals" (formula "6") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "5"))
                                                (rule "qeq_literals" (formula "6") (term "0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "closeFalse" (formula "6"))
                                             )
                                          )
                                          (branch "self.sorted.<created> = TRUE FALSE"
                                             (rule "referencedObjectIsCreatedRight" (formula "52") (ifseqformula "53"))
                                             (rule "close" (formula "52") (ifseqformula "16"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (ifseqformula "20"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "1") (ifseqformula "20"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "1") (ifseqformula "25"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,1") (ifseqformula "20"))
                                          (rule "andLeft" (formula "18"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "andLeft" (formula "5"))
                                          (rule "orRight" (formula "40"))
                                          (rule "notLeft" (formula "21"))
                                          (rule "eqSymm" (formula "32"))
                                          (rule "eqSymm" (formula "16"))
                                          (rule "eqSymm" (formula "31"))
                                          (rule "eqSymm" (formula "3"))
                                          (rule "eqSymm" (formula "39"))
                                          (rule "eqSymm" (formula "29"))
                                          (rule "eqSymm" (formula "4"))
                                          (rule "eqSymm" (formula "17") (term "1,0"))
                                          (rule "replace_known_left" (formula "37") (term "0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "12"))
                                          (rule "replace_known_right" (formula "24") (term "0,1") (ifseqformula "44"))
                                          (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "45")))
                                          (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "42"))
                                          (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "40")) (ifInst ""  (formula "41")))
                                          (rule "polySimp_addComm0" (formula "7") (term "1"))
                                          (rule "lenOfSeqConcat" (formula "29") (term "0"))
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "polySimp_homoEq" (formula "29"))
                                          (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                          (rule "polySimp_addComm0" (formula "29") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                          (rule "mul_literals" (formula "29") (term "0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "30"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "30") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                          (rule "polySimp_addComm0" (formula "29") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "6"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "6") (term "0"))
                                          (rule "inEqSimp_ltRight" (formula "37"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "1") (term "0"))
                                          (rule "lenOfSeqConcatEQ" (formula "30") (term "1,0,0") (ifseqformula "33"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "polySimp_addComm0" (formula "30") (term "1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                          (rule "add_literals" (formula "30") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "30") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "30") (term "0"))
                                          (rule "add_literals" (formula "30") (term "1,0"))
                                          (rule "times_zero_1" (formula "30") (term "0"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "true_left" (formula "30"))
                                          (rule "inEqSimp_commuteLeq" (formula "19"))
                                          (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "2"))
                                          (rule "inEqSimp_commuteLeq" (formula "6"))
                                          (rule "inEqSimp_homoInEq1" (formula "15"))
                                          (rule "polySimp_addComm1" (formula "15") (term "0"))
                                          (rule "applyEq" (formula "4") (term "0") (ifseqformula "31"))
                                          (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "8"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                          (rule "mul_literals" (formula "7") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                          (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                          (rule "add_literals" (formula "7") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "7") (term "0,0"))
                                          (rule "applyEq" (formula "37") (term "0,1") (ifseqformula "5"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                          (rule "polySimp_elimOne" (formula "30") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "15"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                          (rule "mul_literals" (formula "15") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                          (rule "polySimp_elimOne" (formula "7") (term "0"))
                                          (rule "inEqSimp_strengthen1" (formula "7") (ifseqformula "38"))
                                          (rule "inEqSimp_contradEq7" (formula "38") (ifseqformula "7"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0"))
                                          (rule "add_literals" (formula "38") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "38") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "38") (term "0,0"))
                                          (rule "leq_literals" (formula "38") (term "0"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "false_right" (formula "38"))
                                          (rule "array2seqDef" (formula "16") (term "0,0") (inst "u=u"))
                                          (rule "narrowSelectArrayType" (formula "16") (term "2,0,0") (ifseqformula "9") (ifseqformula "36"))
                                          (rule "array2seqDef" (formula "26") (term "0,1") (inst "u=u"))
                                          (rule "eqSymm" (formula "26"))
                                          (rule "nonNull" (formula "34") (inst "i=i"))
                                          (rule "greater_literals" (formula "34") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "40")))
                                          (rule "sub_literals" (formula "34") (term "2,1,0"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                          (rule "applyEq" (formula "34") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "34") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0"))
                                          (rule "nonNull" (formula "21") (inst "i=i"))
                                          (rule "greater_literals" (formula "21") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "21"))
                                          (rule "sub_literals" (formula "21") (term "2,1,0,1"))
                                          (builtin "One Step Simplification" (formula "21"))
                                          (rule "andLeft" (formula "21"))
                                          (rule "notLeft" (formula "21"))
                                          (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "12"))
                                          (rule "narrowSelectArrayType" (formula "21") (term "0,0,1,0") (ifseqformula "9") (ifseqformula "36"))
                                          (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                                          (rule "array2seqDef" (formula "32") (term "0,1,0") (inst "u=u"))
                                          (rule "array2seqDef" (formula "17") (term "1") (inst "u=u"))
                                          (rule "eqSymm" (formula "17"))
                                          (rule "narrowSelectArrayType" (formula "17") (term "2,0") (ifseqformula "9") (ifseqformula "37"))
                                          (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "17"))
                                          (rule "array2seqDef" (formula "31") (term "1") (inst "u=u"))
                                          (rule "eqSymm" (formula "31"))
                                          (rule "array2seqDef" (formula "4") (term "1") (inst "u=u"))
                                          (rule "eqSymm" (formula "4"))
                                          (rule "array2seqDef" (formula "5") (term "1") (inst "u=u"))
                                          (rule "eqSymm" (formula "5"))
                                          (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                                          (rule "array2seqDef" (formula "18") (term "0,1,0") (inst "u=u"))
                                          (rule "array2seqDef" (formula "18") (term "1,1,0") (inst "u=u"))
                                          (rule "array2seqDef" (formula "38") (term "0,1") (inst "u=u"))
                                          (rule "eqSymm" (formula "38"))
                                          (rule "getOfSeqDef" (formula "38") (term "0"))
                                          (rule "castDel" (formula "38") (term "1,0"))
                                          (rule "castDel" (formula "38") (term "2,0"))
                                          (rule "add_zero_right" (formula "38") (term "0,2,1,0"))
                                          (rule "polySimp_elimSub" (formula "38") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "38") (term "1,1,1,0,0"))
                                          (rule "add_zero_right" (formula "38") (term "1,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "38") (term "0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "38") (term "0,0,0") (ifseqformula "2"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "38") (term "0,0,0"))
                                          (rule "array2seqDef" (formula "3") (term "0,0") (inst "u=u"))
                                          (rule "lenOfSeqDef" (formula "3") (term "0"))
                                          (rule "polySimp_elimSub" (formula "3") (term "1,0"))
                                          (rule "times_zero_2" (formula "3") (term "1,1,0"))
                                          (rule "add_zero_right" (formula "3") (term "1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "3") (term "0,0"))
                                          (rule "add_zero_right" (formula "3") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0,0,0"))
                                          (rule "array2seqDef" (formula "15") (term "0,0") (inst "u=u"))
                                          (rule "narrowSelectArrayType" (formula "15") (term "2,0,0") (ifseqformula "9") (ifseqformula "37"))
                                          (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "17"))
                                          (rule "array2seqDef" (formula "26") (term "1") (inst "u=u"))
                                          (rule "eqSymm" (formula "26"))
                                          (rule "array2seqDef" (formula "4") (term "1") (inst "u=u"))
                                          (rule "eqSymm" (formula "4"))
                                          (rule "array2seqDef" (formula "5") (term "1") (inst "u=u"))
                                          (rule "eqSymm" (formula "5"))
                                          (rule "eqSeqDef" (formula "18") (term "1,0") (inst "iv=iv"))
                                          (rule "getOfSeqDef" (formula "18") (term "1,1,0,1,1,0"))
                                          (rule "castDel" (formula "18") (term "1,1,1,0,1,1,0"))
                                          (rule "castDel" (formula "18") (term "2,1,1,0,1,1,0"))
                                          (rule "add_zero_right" (formula "18") (term "0,2,1,1,1,0,1,1,0"))
                                          (rule "polySimp_elimSub" (formula "18") (term "1,1,0,1,1,0,1,1,0"))
                                          (rule "times_zero_2" (formula "18") (term "1,1,1,0,1,1,0,1,1,0"))
                                          (rule "add_zero_right" (formula "18") (term "1,1,0,1,1,0,1,1,0"))
                                          (rule "lenOfSeqDef" (formula "18") (term "1,0,1,0"))
                                          (rule "polySimp_elimSub" (formula "18") (term "1,1,0,1,0"))
                                          (rule "times_zero_2" (formula "18") (term "1,1,1,0,1,0"))
                                          (rule "add_zero_right" (formula "18") (term "1,1,0,1,0"))
                                          (rule "lenOfSeqDef" (formula "18") (term "0,0,1,0"))
                                          (rule "polySimp_elimSub" (formula "18") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "18") (term "1,1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "18") (term "1,0,0,1,0"))
                                          (rule "getOfSeqDef" (formula "18") (term "0,1,0,1,1,0"))
                                          (rule "castDel" (formula "18") (term "1,0,1,0,1,1,0"))
                                          (rule "castDel" (formula "18") (term "2,0,1,0,1,1,0"))
                                          (rule "add_zero_right" (formula "18") (term "0,2,1,0,1,0,1,1,0"))
                                          (rule "polySimp_elimSub" (formula "18") (term "1,1,0,0,1,0,1,1,0"))
                                          (rule "times_zero_2" (formula "18") (term "1,1,1,0,0,1,0,1,1,0"))
                                          (rule "add_zero_right" (formula "18") (term "1,1,0,0,1,0,1,1,0"))
                                          (rule "lenOfSeqDef" (formula "18") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_elimSub" (formula "18") (term "1,1,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "18") (term "1,1,1,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "18") (term "1,1,1,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,1,1,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,1,1,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1,0,1,0"))
                                          (rule "add_zero_right" (formula "18") (term "0,0,1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0,1,0"))
                                          (rule "add_zero_right" (formula "18") (term "0,0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,1,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,1,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1,1,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "18") (term "0,0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,1,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,1,1,0,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,1,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,1,1,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,1,1,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,1,0,1,1,0,1,1,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,1,0,1,1,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,1,1,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,1,1,0,1,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "0,0,1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "0,0,1,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "0,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,1,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,1,0,1,1,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,1,0,0,1,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,1,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,1,0,1,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,1,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,1,1,0"))
                                          (rule "eqSeqDef2" (formula "17") (inst "iv=iv") (ifseqformula "17"))
                                          (builtin "One Step Simplification" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "eqSeqDef" (formula "4") (inst "iv=iv"))
                                          (rule "andLeft" (formula "4"))
                                          (rule "lenOfSeqDef" (formula "4") (term "0"))
                                          (rule "eqSymm" (formula "4"))
                                          (rule "polySimp_elimSub" (formula "4") (term "1,1"))
                                          (rule "times_zero_2" (formula "4") (term "1,1,1"))
                                          (rule "add_zero_right" (formula "4") (term "1,1"))
                                          (rule "getOfSeqDef" (formula "5") (term "1,1,0"))
                                          (rule "castDel" (formula "5") (term "2,1,1,0"))
                                          (rule "castDel" (formula "5") (term "1,1,1,0"))
                                          (rule "add_zero_right" (formula "5") (term "0,2,1,1,1,0"))
                                          (rule "polySimp_elimSub" (formula "5") (term "1,1,0,1,1,0"))
                                          (rule "times_zero_2" (formula "5") (term "1,1,1,0,1,1,0"))
                                          (rule "add_zero_right" (formula "5") (term "1,1,0,1,1,0"))
                                          (rule "lenOfSeqDef" (formula "5") (term "1,1,0,0"))
                                          (rule "polySimp_elimSub" (formula "5") (term "1,1,1,0,0"))
                                          (rule "times_zero_2" (formula "5") (term "1,1,1,1,0,0"))
                                          (rule "add_zero_right" (formula "5") (term "1,1,1,0,0"))
                                          (rule "getOfSeqDef" (formula "5") (term "0,1,0"))
                                          (rule "castDel" (formula "5") (term "2,0,1,0"))
                                          (rule "castDel" (formula "5") (term "1,0,1,0"))
                                          (rule "add_zero_right" (formula "5") (term "0,2,1,0,1,0"))
                                          (rule "polySimp_elimSub" (formula "5") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_2" (formula "5") (term "1,1,1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "5") (term "1,1,0,0,1,0"))
                                          (rule "lenOfSeqDef" (formula "4") (term "0"))
                                          (rule "eqSymm" (formula "4"))
                                          (rule "polySimp_elimSub" (formula "4") (term "1,1"))
                                          (rule "mul_literals" (formula "4") (term "1,1,1"))
                                          (rule "add_zero_right" (formula "4") (term "1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "5") (term "0,1,1,0,0"))
                                          (rule "add_zero_right" (formula "5") (term "0,0,1,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0"))
                                          (rule "add_zero_right" (formula "4") (term "0,0,0"))
                                          (rule "eqSymm" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0"))
                                          (rule "add_zero_right" (formula "4") (term "0,0,0"))
                                          (rule "eqSymm" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0,1,0"))
                                          (rule "apply_eq_monomials" (formula "5") (term "1,0,0,1,0,0") (ifseqformula "4"))
                                          (rule "polySimp_rightDist" (formula "5") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,0,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "5") (term "1,0,1,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "5") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "5") (term "1,1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "5") (term "1,1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "5") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,1,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "5") (term "1,1,0,1,1,0"))
                                          (rule "mul_literals" (formula "5") (term "0,1,1,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "5") (term "1,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "5") (term "0,1,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0"))
                                          (rule "eqSymm" (formula "4"))
                                          (rule "polySimp_elimOne" (formula "4") (term "0,0,1"))
                                          (rule "applyEq" (formula "5") (term "0,1,0,0,1,0,0") (ifseqformula "4"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0"))
                                          (rule "eqSymm" (formula "4"))
                                          (rule "polySimp_elimOne" (formula "4") (term "0,0,1"))
                                          (rule "apply_eq_monomials" (formula "5") (term "1,0,0,1,0,0") (ifseqformula "4"))
                                          (rule "polySimp_rightDist" (formula "5") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "5") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "5") (term "1,1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "5") (term "1,1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "5") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "5") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "5") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,0"))
                                          (rule "array2seqDef" (formula "6") (term "1") (inst "u=u"))
                                          (rule "eqSymm" (formula "6"))
                                          (rule "pullOutSelect" (formula "31") (term "1,2,0") (inst "selectSK=arr_122"))
                                          (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "31"))
                                          (rule "applyEq" (formula "6") (term "1,2,0") (ifseqformula "31"))
                                          (rule "applyEq" (formula "5") (term "0,1,1,1,0,0,1,0") (ifseqformula "31"))
                                          (rule "applyEq" (formula "6") (term "0,1,0") (ifseqformula "31"))
                                          (rule "applyEq" (formula "4") (term "0,0,0,0") (ifseqformula "31"))
                                          (rule "applyEq" (formula "5") (term "1,1,0,1,0") (ifseqformula "31"))
                                          (rule "applyEq" (formula "32") (term "0,1,0") (ifseqformula "31"))
                                          (rule "simplifySelectOfAnonEQ" (formula "31") (ifseqformula "28"))
                                          (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "42")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0,0,0") (ifseqformula "23"))
                                          (rule "eqSymm" (formula "4"))
                                          (rule "eqSymm" (formula "5") (term "1,0"))
                                          (rule "replace_known_right" (formula "31") (term "0,0,0,0") (ifseqformula "40"))
                                          (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "41")))
                                          (rule "applyEqReverse" (formula "5") (term "0,1,1,1,0,1,1,0") (ifseqformula "31"))
                                          (rule "applyEqReverse" (formula "4") (term "0,0,0,1") (ifseqformula "31"))
                                          (rule "applyEqReverse" (formula "32") (term "1,2,0") (ifseqformula "31"))
                                          (rule "applyEqReverse" (formula "32") (term "0,1,0") (ifseqformula "31"))
                                          (rule "applyEqReverse" (formula "5") (term "1,1,1,1,0") (ifseqformula "31"))
                                          (rule "applyEqReverse" (formula "4") (term "0,1,1") (ifseqformula "31"))
                                          (rule "applyEqReverse" (formula "6") (term "0,1,0") (ifseqformula "31"))
                                          (rule "applyEqReverse" (formula "6") (term "1,2,0") (ifseqformula "31"))
                                          (rule "hideAuxiliaryEq" (formula "31"))
                                          (rule "eqSymm" (formula "5") (term "1,0"))
                                          (rule "eqSymm" (formula "4"))
                                          (rule "eqSeqDef2" (formula "26") (inst "iv=iv") (ifseqformula "26"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "true_left" (formula "26"))
                                          (rule "pullOutSelect" (formula "37") (term "1") (inst "selectSK=arr_123"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "24"))
                                          (rule "pullOutSelect" (formula "4") (term "0,1,0") (inst "selectSK=arr_124"))
                                          (rule "applyEq" (formula "1") (term "1,0,1,0,1,0,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "1") (term "0,0,0,0,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "1") (term "1,2,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "5") (term "0,0,0,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "1") (term "1,1,0") (ifseqformula "4"))
                                          (rule "applyEq" (formula "1") (term "1,0,0,0,1,0,0") (ifseqformula "4"))
                                          (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "29"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,1,0,0") (ifseqformula "25"))
                                          (rule "eqSeqDef" (formula "8") (inst "iv=iv"))
                                          (rule "andLeft" (formula "8"))
                                          (rule "lenOfSeqDef" (formula "8") (term "0"))
                                          (rule "eqSymm" (formula "8"))
                                          (rule "polySimp_elimSub" (formula "8") (term "1,1"))
                                          (rule "times_zero_2" (formula "8") (term "1,1,1"))
                                          (rule "add_zero_right" (formula "8") (term "1,1"))
                                          (rule "getOfSeqDef" (formula "9") (term "1,1,0"))
                                          (rule "castDel" (formula "9") (term "1,1,1,0"))
                                          (rule "castDel" (formula "9") (term "2,1,1,0"))
                                          (rule "add_zero_right" (formula "9") (term "0,2,1,1,1,0"))
                                          (rule "polySimp_elimSub" (formula "9") (term "1,1,0,1,1,0"))
                                          (rule "times_zero_2" (formula "9") (term "1,1,1,0,1,1,0"))
                                          (rule "add_zero_right" (formula "9") (term "1,1,0,1,1,0"))
                                          (rule "getOfSeqDef" (formula "9") (term "0,1,0"))
                                          (rule "castDel" (formula "9") (term "2,0,1,0"))
                                          (rule "castDel" (formula "9") (term "1,0,1,0"))
                                          (rule "add_zero_right" (formula "9") (term "0,2,1,0,1,0"))
                                          (rule "polySimp_elimSub" (formula "9") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_2" (formula "9") (term "1,1,1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "9") (term "1,1,0,0,1,0"))
                                          (rule "lenOfSeqDef" (formula "9") (term "1,1,0,0"))
                                          (rule "polySimp_elimSub" (formula "9") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "9") (term "1,1,1,1,0,0"))
                                          (rule "add_zero_right" (formula "9") (term "1,1,1,0,0"))
                                          (rule "lenOfSeqDef" (formula "8") (term "0"))
                                          (rule "eqSymm" (formula "8"))
                                          (rule "polySimp_elimSub" (formula "8") (term "1,1"))
                                          (rule "times_zero_2" (formula "8") (term "1,1,1"))
                                          (rule "add_zero_right" (formula "8") (term "1,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "9") (term "0,1,1,0,0"))
                                          (rule "add_zero_right" (formula "9") (term "0,0,1,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0"))
                                          (rule "add_zero_right" (formula "8") (term "0,0,0"))
                                          (rule "eqSymm" (formula "8"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0"))
                                          (rule "add_zero_right" (formula "8") (term "0,0,0"))
                                          (rule "eqSymm" (formula "8"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1"))
                                          (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,1,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,0"))
                                          (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,1,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,1,1,0"))
                                          (rule "mul_literals" (formula "9") (term "0,1,1,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "9") (term "0,1,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "0,0,0"))
                                          (rule "eqSymm" (formula "8"))
                                          (rule "polySimp_elimOne" (formula "8") (term "0,0,1"))
                                          (rule "applyEq" (formula "8") (term "1") (ifseqformula "6"))
                                          (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "8") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "8") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "19"))
                                          (rule "mul_literals" (formula "20") (term "0,0"))
                                          (rule "add_zero_left" (formula "20") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                          (rule "mul_literals" (formula "20") (term "1"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_125"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "5") (term "1,2,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_20"))
                                          (rule "applyEq" (formula "6") (term "0,0,0,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "6") (term "1,0,0,0,1,0,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "6") (term "1,1,0") (ifseqformula "5"))
                                          (rule "applyEq" (formula "6") (term "1,0,1,0,1,0,0") (ifseqformula "5"))
                                          (rule "simplifySelectOfAnonEQ" (formula "5") (ifseqformula "33"))
                                          (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "47")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "5") (term "0,0,0") (ifseqformula "29"))
                                          (rule "replace_known_left" (formula "5") (term "0,0,0,0") (ifseqformula "16"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "simplifySelectOfAnonEQ" (formula "5") (ifseqformula "29"))
                                          (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "47")) (ifInst ""  (formula "16")))
                                          (rule "applyEqReverse" (formula "6") (term "1,0,0,0,1,0,0") (ifseqformula "5"))
                                          (rule "applyEqReverse" (formula "6") (term "0,0,0,0,0") (ifseqformula "5"))
                                          (rule "applyEqReverse" (formula "6") (term "1,2,0") (ifseqformula "5"))
                                          (rule "applyEqReverse" (formula "6") (term "1,0,1,0,1,0,0") (ifseqformula "5"))
                                          (rule "applyEqReverse" (formula "6") (term "1,1,0") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "pullOutSelect" (formula "5") (term "2,0") (inst "selectSK=arr_126"))
                                          (rule "simplifySelectOfAnonEQ" (formula "5") (ifseqformula "29"))
                                          (builtin "One Step Simplification" (formula "5"))
                                          (rule "nnf_imp2or" (formula "39") (term "0"))
                                          (rule "nnf_imp2or" (formula "27") (term "0"))
                                          (rule "nnf_imp2or" (formula "24") (term "0"))
                                          (rule "nnf_imp2or" (formula "9") (term "0"))
                                          (rule "nnf_imp2or" (formula "11") (term "0"))
                                          (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
                                          (rule "mul_literals" (formula "39") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "39") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "27") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                          (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "24") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "24") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                                          (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "9") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "9") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                                          (rule "mul_literals" (formula "9") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "11") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                          (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                                          (rule "nnf_imp2or" (formula "24") (term "0,1,1,0"))
                                          (rule "arrayLengthNotNegative" (formula "14") (term "0"))
                                          (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                          (rule "mul_literals" (formula "14") (term "1"))
                                          (rule "arrayLengthIsAShort" (formula "15") (term "0"))
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "true_left" (formula "15"))
                                          (rule "arrayLengthNotNegative" (formula "15") (term "1,1"))
                                          (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "15"))
                                          (rule "leq_literals" (formula "14") (term "0"))
                                          (builtin "One Step Simplification" (formula "14"))
                                          (rule "true_left" (formula "14"))
                                          (rule "arrayLengthIsAShort" (formula "15") (term "1,1"))
                                          (builtin "One Step Simplification" (formula "15"))
                                          (rule "true_left" (formula "15"))
                                          (rule "nnf_notAnd" (formula "25") (term "0,0,1,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0,1,1,0"))
                                          (rule "add_literals" (formula "25") (term "0,0,0,1,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "25") (term "0,0,1,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,1,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "25") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "25") (term "0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "25") (term "1,0,0,0,1,1,0"))
                                          (rule "arrayLengthIsAShort" (formula "26") (term "0"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "true_left" (formula "26"))
                                          (rule "arrayLengthNotNegative" (formula "26") (term "0"))
                                          (rule "lenNonNegative" (formula "37") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "37"))
                                          (rule "arrayLengthNotNegative" (formula "3") (term "0"))
                                          (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "4"))
                                          (rule "times_zero_1" (formula "3") (term "0,0"))
                                          (rule "add_zero_left" (formula "3") (term "0"))
                                          (rule "arrayLengthIsAShort" (formula "4") (term "0"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "arrayLengthIsAShort" (formula "23") (term "1,1"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "true_left" (formula "23"))
                                          (rule "arrayLengthNotNegative" (formula "23") (term "1,1"))
                                          (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "25"))
                                          (rule "leq_literals" (formula "23") (term "0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "true_left" (formula "23"))
                                          (rule "ifthenelse_split" (formula "47") (term "0"))
                                          (branch "messages[i_5].length ≥ 1 + iv_9 TRUE"
                                             (rule "arrayLengthNotNegative" (formula "42") (term "1,0,1,0"))
                                             (rule "arrayLengthIsAShort" (formula "43") (term "1,0,1,0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "true_left" (formula "43"))
                                             (rule "equalityToSeqGetAndSeqLenLeft" (formula "43") (inst "iv=iv"))
                                             (rule "andLeft" (formula "43"))
                                             (rule "lenOfSeqConcat" (formula "43") (term "0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "polySimp_homoEq" (formula "43"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0"))
                                             (rule "polySimp_addComm0" (formula "43") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,0"))
                                             (rule "mul_literals" (formula "43") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "43") (term "0"))
                                             (rule "polySimp_addComm0" (formula "43") (term "0,0"))
                                             (rule "lenOfSeqConcat" (formula "44") (term "1,1,0,0"))
                                             (builtin "One Step Simplification" (formula "44"))
                                             (rule "polySimp_addComm0" (formula "44") (term "1,1,0,0"))
                                             (rule "lenOfSeqConcatEQ" (formula "43") (term "1,0,0") (ifseqformula "45"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "polySimp_addComm0" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "43") (term "0,0"))
                                             (rule "add_literals" (formula "43") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "43") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1" (formula "43") (term "0"))
                                             (rule "add_literals" (formula "43") (term "1,0"))
                                             (rule "times_zero_1" (formula "43") (term "0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "true_left" (formula "43"))
                                             (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "43") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "43") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0"))
                                             (rule "getOfSeqConcat" (formula "43") (term "0,1,0"))
                                             (rule "polySimp_elimSub" (formula "43") (term "1,2,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "43") (term "1,2,0,1,0"))
                                             (rule "getOfSeqSingleton" (formula "43") (term "2,0,1,0"))
                                             (rule "castDel" (formula "43") (term "1,2,0,1,0"))
                                             (rule "castDel" (formula "43") (term "2,2,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,1,0"))
                                             (rule "polySimp_sepPosMonomial" (formula "43") (term "0,2,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,0,2,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "43") (term "1,0,2,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,1,0"))
                                             (rule "getOfSeqConcatEQ" (formula "43") (term "1,1,0") (ifseqformula "44"))
                                             (rule "eqSymm" (formula "43") (term "1,0"))
                                             (rule "polySimp_elimSub" (formula "43") (term "1,2,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "43") (term "1,2,0,1,0"))
                                             (rule "getOfSeqSingleton" (formula "43") (term "2,0,1,0"))
                                             (rule "castDel" (formula "43") (term "1,2,0,1,0"))
                                             (rule "castDel" (formula "43") (term "2,2,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,1,0"))
                                             (rule "polySimp_sepPosMonomial" (formula "43") (term "0,2,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,0,2,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "43") (term "1,0,2,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0"))
                                             (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,1,0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "true_left" (formula "43"))
                                             (rule "seqGetAlphaCast" (formula "41") (term "1"))
                                             (rule "castDel" (formula "41") (term "0"))
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "true_left" (formula "41"))
                                             (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "44") (ifseqformula "20"))
                                             (rule "replaceKnownSelect_taclet10110011100000_7" (formula "44") (term "1,1,0,0,0,0,0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet10110011100000_9" (formula "44") (term "1,1,0,0,0,0,0,0,0"))
                                             (rule "andLeft" (formula "44"))
                                             (rule "notLeft" (formula "45"))
                                             (rule "andLeft" (formula "44"))
                                             (rule "notLeft" (formula "45"))
                                             (rule "andLeft" (formula "44"))
                                             (rule "andLeft" (formula "44"))
                                             (rule "notLeft" (formula "46"))
                                             (rule "andLeft" (formula "44"))
                                             (rule "notLeft" (formula "46"))
                                             (rule "andLeft" (formula "44"))
                                             (rule "andLeft" (formula "44"))
                                             (rule "andLeft" (formula "44"))
                                             (rule "notLeft" (formula "44"))
                                             (rule "nonNull" (formula "47") (inst "i=i"))
                                             (rule "sub_literals" (formula "47") (term "2,1,0,1,1"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "greater_literals" (formula "47") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "andLeft" (formula "47"))
                                             (rule "notLeft" (formula "47"))
                                             (rule "inEqSimp_ltToLeq" (formula "47") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "47") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "47") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "47") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0,0"))
                                             (rule "nonNull" (formula "46") (inst "i=i"))
                                             (rule "greater_literals" (formula "46") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "46"))
                                             (rule "sub_literals" (formula "46") (term "2,1,0,1"))
                                             (builtin "One Step Simplification" (formula "46"))
                                             (rule "andLeft" (formula "46"))
                                             (rule "notLeft" (formula "46"))
                                             (rule "inEqSimp_ltToLeq" (formula "46") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "46") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "46") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0"))
                                             (rule "nonNull" (formula "45") (inst "i=i"))
                                             (rule "greater_literals" (formula "45") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "45"))
                                             (rule "sub_literals" (formula "45") (term "2,1,0,1"))
                                             (builtin "One Step Simplification" (formula "45"))
                                             (rule "andLeft" (formula "45"))
                                             (rule "notLeft" (formula "45"))
                                             (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "45") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0"))
                                             (rule "nonNull" (formula "44") (inst "i=i"))
                                             (rule "greater_literals" (formula "44") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "44"))
                                             (rule "sub_literals" (formula "44") (term "2,1,0,1"))
                                             (builtin "One Step Simplification" (formula "44"))
                                             (rule "andLeft" (formula "44"))
                                             (rule "notLeft" (formula "44"))
                                             (rule "replace_known_right" (formula "8") (term "0,0,0,0") (ifseqformula "50"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "50"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "ifthenelse_negated" (formula "8") (term "0"))
                                             (rule "ifthenelse_negated" (formula "7") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "44") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0"))
                                             (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_17"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "34"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "20"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")) (ifInst ""  (formula "20")))
                                             (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_17"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "34"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "20"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")) (ifInst ""  (formula "20")))
                                             (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "56") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_17"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "34"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "20"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")) (ifInst ""  (formula "20")))
                                             (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "55") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_17"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "34"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "20"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")) (ifInst ""  (formula "20")))
                                             (rule "applyEqReverse" (formula "56") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "54") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_17"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "34"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "20"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")) (ifInst ""  (formula "20")))
                                             (rule "applyEqReverse" (formula "55") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "47") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_17"))
                                             (rule "applyEq" (formula "48") (term "0,1,1,1,0,0") (ifseqformula "47"))
                                             (rule "applyEq" (formula "54") (term "0") (ifseqformula "47"))
                                             (rule "simplifySelectOfAnonEQ" (formula "47") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "66")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "0,0,0") (ifseqformula "33"))
                                             (rule "replace_known_left" (formula "47") (term "0,0,0,0") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "simplifySelectOfAnonEQ" (formula "47") (ifseqformula "33"))
                                             (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "66")) (ifInst ""  (formula "19")))
                                             (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "47"))
                                             (rule "applyEqReverse" (formula "48") (term "0,1,1,1,0,0") (ifseqformula "47"))
                                             (rule "applyEqReverse" (formula "48") (term "1,0,0,1,0") (ifseqformula "47"))
                                             (rule "hideAuxiliaryEq" (formula "47"))
                                             (rule "pullOutSelect" (formula "46") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_17"))
                                             (rule "applyEq" (formula "53") (term "0") (ifseqformula "46"))
                                             (rule "applyEq" (formula "47") (term "0,1,1,1,0,0") (ifseqformula "46"))
                                             (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "66")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "0,0,0") (ifseqformula "33"))
                                             (rule "replace_known_left" (formula "46") (term "0,0,0,0") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "46"))
                                             (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "33"))
                                             (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "66")) (ifInst ""  (formula "19")))
                                             (rule "applyEqReverse" (formula "47") (term "1,0,0,1,0") (ifseqformula "46"))
                                             (rule "applyEqReverse" (formula "53") (term "0") (ifseqformula "46"))
                                             (rule "applyEqReverse" (formula "47") (term "0,1,1,1,0,0") (ifseqformula "46"))
                                             (rule "hideAuxiliaryEq" (formula "46"))
                                             (rule "pullOutSelect" (formula "45") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_17"))
                                             (rule "applyEq" (formula "46") (term "0,1,1,1,0,0") (ifseqformula "45"))
                                             (rule "applyEq" (formula "52") (term "0") (ifseqformula "45"))
                                             (rule "simplifySelectOfAnonEQ" (formula "45") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "66")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "45") (term "0,0,0") (ifseqformula "33"))
                                             (rule "replace_known_left" (formula "45") (term "0,0,0,0") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "45"))
                                             (rule "simplifySelectOfAnonEQ" (formula "45") (ifseqformula "33"))
                                             (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "66")) (ifInst ""  (formula "19")))
                                             (rule "applyEqReverse" (formula "52") (term "0") (ifseqformula "45"))
                                             (rule "applyEqReverse" (formula "46") (term "0,1,1,1,0,0") (ifseqformula "45"))
                                             (rule "applyEqReverse" (formula "46") (term "1,0,0,1,0") (ifseqformula "45"))
                                             (rule "hideAuxiliaryEq" (formula "45"))
                                             (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "30") (ifseqformula "20"))
                                             (rule "andLeft" (formula "30"))
                                             (rule "notLeft" (formula "31"))
                                             (rule "andLeft" (formula "30"))
                                             (rule "andLeft" (formula "30"))
                                             (rule "notLeft" (formula "32"))
                                             (rule "notLeft" (formula "31"))
                                             (rule "andLeft" (formula "30"))
                                             (rule "andLeft" (formula "30"))
                                             (rule "notLeft" (formula "32"))
                                             (rule "andLeft" (formula "30"))
                                             (rule "andLeft" (formula "30"))
                                             (rule "andLeft" (formula "30"))
                                             (rule "notLeft" (formula "30"))
                                             (rule "nonNull" (formula "33") (inst "i=i"))
                                             (rule "sub_literals" (formula "33") (term "2,1,0,1,1"))
                                             (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "56")))
                                             (rule "greater_literals" (formula "33") (term "0"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "narrowSelectArrayType" (formula "33") (term "0,0,1,0") (ifseqformula "18") (ifseqformula "56"))
                                             (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0"))
                                             (rule "nonNull" (formula "32") (inst "i=i"))
                                             (rule "sub_literals" (formula "32") (term "2,1,0,1,1"))
                                             (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "55")))
                                             (rule "greater_literals" (formula "32") (term "0"))
                                             (builtin "One Step Simplification" (formula "32"))
                                             (rule "narrowSelectArrayType" (formula "32") (term "0,0,1,0") (ifseqformula "18") (ifseqformula "55"))
                                             (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "32") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0"))
                                             (rule "nonNull" (formula "31") (inst "i=i"))
                                             (rule "sub_literals" (formula "31") (term "2,1,0,1,1"))
                                             (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "54")))
                                             (rule "greater_literals" (formula "31") (term "0"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "narrowSelectArrayType" (formula "31") (term "0,0,1,0") (ifseqformula "18") (ifseqformula "54"))
                                             (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                                             (rule "nonNull" (formula "30") (inst "i=i"))
                                             (rule "sub_literals" (formula "30") (term "2,1,0,1,1"))
                                             (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "53")))
                                             (rule "greater_literals" (formula "30") (term "0"))
                                             (builtin "One Step Simplification" (formula "30"))
                                             (rule "narrowSelectArrayType" (formula "30") (term "0,0,1,0") (ifseqformula "18") (ifseqformula "53"))
                                             (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                                             (rule "commute_or_2" (formula "51") (term "0"))
                                             (rule "commute_or_2" (formula "34") (term "0"))
                                             (rule "nnf_imp2or" (formula "47") (term "0"))
                                             (rule "commute_or_2" (formula "11") (term "0"))
                                             (rule "commute_or_2" (formula "13") (term "0"))
                                             (rule "nnf_imp2or" (formula "50") (term "0"))
                                             (rule "nnf_imp2or" (formula "49") (term "0"))
                                             (rule "ifthenelse_split" (formula "10") (term "1"))
                                             (branch "messages[i_5].length ≥ 1 TRUE"
                                                (rule "replace_known_left" (formula "13") (term "0,1") (ifseqformula "10"))
                                                (builtin "One Step Simplification" (formula "13"))
                                                (rule "replace_known_left" (formula "12") (term "0,1,1,0") (ifseqformula "10"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "replace_known_left" (formula "14") (term "0,1,1,0") (ifseqformula "10"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "nnf_imp2or" (formula "49") (term "0"))
                                                (rule "ifthenelse_split" (formula "11") (term "0"))
                                                (branch " result_1[i_5]@anon_heap_addEntry«anonHeapFunction».length ≥ 1 TRUE"
                                                   (rule "applyEq" (formula "15") (term "1,1,1,0,0,1,0,0") (ifseqformula "12"))
                                                   (rule "eqSymm" (formula "15") (term "1,0,0"))
                                                   (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                                                   (rule "applyEq" (formula "45") (term "1,0") (ifseqformula "11"))
                                                   (rule "applyEq" (formula "12") (term "1,1,1,0,0,1,0,0") (ifseqformula "11"))
                                                   (rule "ifthenelse_to_or_right" (formula "28") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "28"))
                                                   (rule "inEqSimp_notGeq" (formula "28") (term "0,1,1,0,1,0"))
                                                   (rule "mul_literals" (formula "28") (term "1,0,0,0,1,1,0,1,0"))
                                                   (rule "add_literals" (formula "28") (term "0,0,0,1,1,0,1,0"))
                                                   (rule "add_zero_left" (formula "28") (term "0,0,1,1,0,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0,1,0"))
                                                   (rule "add_literals" (formula "28") (term "0,0,0,0,0,1,0"))
                                                   (rule "add_zero_left" (formula "28") (term "0,0,0,0,1,0"))
                                                   (rule "nnf_imp2or" (formula "34") (term "0"))
                                                   (rule "nnf_imp2or" (formula "33") (term "0"))
                                                   (rule "nnf_imp2or" (formula "32") (term "0"))
                                                   (rule "nnf_imp2or" (formula "31") (term "0"))
                                                   (rule "arrayLengthNotNegative" (formula "9") (term "1,0"))
                                                   (rule "arrayLengthIsAShort" (formula "10") (term "1,0"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "true_left" (formula "10"))
                                                   (rule "nnf_notAnd" (formula "49") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "49") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "49") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "49") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "49") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "49") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "49") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "49") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "52") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "52") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "52") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "52") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "52") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "52") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "52") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "52") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "52") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "51") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "51") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "51") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "51") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "51") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "51") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "51") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "51") (term "1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "50") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "50") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "50") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "50") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "50") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "50") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "50") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "50") (term "1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "35") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "35") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "35") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "35") (term "1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "34") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "34") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "34") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "34") (term "1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "33") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "33") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "33") (term "1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "32") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "32") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "32") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "32") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "31") (term "0,0") (ifseqformula "20"))
                                                   (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "56"))
                                                   (builtin "One Step Simplification" (formula "31"))
                                                   (rule "replace_known_left" (formula "8") (term "0,0,0") (ifseqformula "31"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "8"))
                                                   (rule "applyEqReverse" (formula "10") (term "0,0,0,0") (ifseqformula "8"))
                                                   (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "8"))
                                                   (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "8"))
                                                   (rule "applyEqReverse" (formula "9") (term "0,0") (ifseqformula "8"))
                                                   (rule "applyEqReverse" (formula "10") (term "0,1,0") (ifseqformula "8"))
                                                   (rule "applyEqReverse" (formula "3") (term "1,1,0") (ifseqformula "8"))
                                                   (rule "applyEqReverse" (formula "3") (term "1,0,0,0,1,0,0") (ifseqformula "8"))
                                                   (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "8"))
                                                   (rule "applyEqReverse" (formula "3") (term "1,0,1,0,1,0,0") (ifseqformula "8"))
                                                   (rule "applyEqReverse" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "8"))
                                                   (rule "hideAuxiliaryEq" (formula "8"))
                                                   (rule "replace_known_left" (formula "7") (term "0,0") (ifseqformula "30"))
                                                   (builtin "One Step Simplification" (formula "7"))
                                                   (rule "applyEqReverse" (formula "3") (term "1,1,0") (ifseqformula "7"))
                                                   (rule "applyEqReverse" (formula "9") (term "0,1,0") (ifseqformula "7"))
                                                   (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "7"))
                                                   (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "7"))
                                                   (rule "applyEqReverse" (formula "8") (term "0,0") (ifseqformula "7"))
                                                   (rule "applyEqReverse" (formula "3") (term "1,0,1,0,1,0,0") (ifseqformula "7"))
                                                   (rule "applyEqReverse" (formula "8") (term "0,0,0,0") (ifseqformula "7"))
                                                   (rule "applyEqReverse" (formula "3") (term "1,0,0,0,1,0,0") (ifseqformula "7"))
                                                   (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "7"))
                                                   (rule "applyEqReverse" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "7"))
                                                   (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "7"))
                                                   (rule "hideAuxiliaryEq" (formula "7"))
                                                   (rule "applyEq" (formula "7") (term "0") (ifseqformula "11"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "5") (term "0,0") (ifseqformula "16"))
                                                   (rule "arrayLengthIsAShort" (formula "1") (term "0"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "arrayLengthNotNegative" (formula "1") (term "0"))
                                                   (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "9"))
                                                   (rule "leq_literals" (formula "1") (term "0"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "commute_or" (formula "51") (term "0,0"))
                                                   (rule "commute_or" (formula "34") (term "0,0"))
                                                   (rule "commute_or" (formula "12") (term "0,0"))
                                                   (rule "commute_or" (formula "10") (term "0,0"))
                                                   (rule "commute_or_2" (formula "47") (term "0"))
                                                   (rule "commute_or_2" (formula "50") (term "0"))
                                                   (rule "commute_or_2" (formula "26") (term "0,1,1,0"))
                                                   (rule "commute_or_2" (formula "49") (term "0"))
                                                   (rule "commute_or_2" (formula "48") (term "0"))
                                                   (rule "shift_paren_or" (formula "26") (term "1,0,1,0"))
                                                   (rule "commute_or_2" (formula "33") (term "0"))
                                                   (rule "commute_or_2" (formula "32") (term "0"))
                                                   (rule "commute_or_2" (formula "31") (term "0"))
                                                   (rule "commute_or_2" (formula "30") (term "0"))
                                                   (rule "ifthenelse_to_or_left" (formula "26") (term "1,0,0,1,0"))
                                                   (rule "eqSymm" (formula "26") (term "1,1,1,0,0,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "26") (term "0,0,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "26") (term "1,0,0,0,0,1,0,0,1,0"))
                                                   (rule "add_literals" (formula "26") (term "0,0,0,0,1,0,0,1,0"))
                                                   (rule "add_zero_left" (formula "26") (term "0,0,0,1,0,0,1,0"))
                                                   (rule "commute_or" (formula "47") (term "0,0"))
                                                   (rule "commute_or" (formula "50") (term "0,0"))
                                                   (rule "commute_or" (formula "49") (term "0,0"))
                                                   (rule "commute_or" (formula "48") (term "0,0"))
                                                   (rule "commute_or" (formula "33") (term "0,0"))
                                                   (rule "commute_or" (formula "32") (term "0,0"))
                                                   (rule "commute_or" (formula "31") (term "0,0"))
                                                   (rule "commute_or" (formula "30") (term "0,0"))
                                                   (rule "ifthenelse_split" (formula "11") (term "0"))
                                                   (branch "self.sorted[i_5].length ≥ 1 TRUE"
                                                      (rule "applyEq" (formula "6") (term "0") (ifseqformula "12"))
                                                      (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                                                      (rule "applyEq" (formula "4") (term "0") (ifseqformula "11"))
                                                      (rule "applyEq" (formula "12") (term "1,1,1,0,0,0,0,0") (ifseqformula "11"))
                                                      (rule "eqSymm" (formula "12") (term "0,0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "1"))
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "inEqSimp_homoInEq1" (formula "6"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                                      (rule "add_literals" (formula "6") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "6") (term "1,0"))
                                                      (rule "add_literals" (formula "6") (term "0"))
                                                      (rule "leq_literals" (formula "6"))
                                                      (rule "closeFalse" (formula "6"))
                                                   )
                                                   (branch "self.sorted[i_5].length ≥ 1 FALSE"
                                                      (rule "eqSymm" (formula "11"))
                                                      (rule "inEqSimp_geqRight" (formula "53"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "applyEq" (formula "2") (term "0") (ifseqformula "12"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2"))
                                                      (rule "mul_literals" (formula "2") (term "1,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0"))
                                                      (rule "applyEq" (formula "45") (term "1,0") (ifseqformula "12"))
                                                      (rule "seqDef_lower_equals_upper" (formula "45") (term "0"))
                                                      (rule "eqSymm" (formula "45"))
                                                      (rule "applyEq" (formula "9") (term "0") (ifseqformula "12"))
                                                      (rule "qeq_literals" (formula "9"))
                                                      (rule "closeFalse" (formula "9"))
                                                   )
                                                )
                                                (branch " result_1[i_5]@anon_heap_addEntry«anonHeapFunction».length ≥ 1 FALSE"
                                                   (rule "eqSymm" (formula "11"))
                                                   (rule "inEqSimp_geqRight" (formula "54"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                                                   (rule "qeq_literals" (formula "11"))
                                                   (rule "closeFalse" (formula "11"))
                                                )
                                             )
                                             (branch "messages[i_5].length ≥ 1 FALSE"
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "replace_known_right" (formula "13") (term "0,1,1,0") (ifseqformula "53"))
                                                (builtin "One Step Simplification" (formula "13"))
                                                (rule "replace_known_right" (formula "12") (term "0,1") (ifseqformula "53"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "replace_known_right" (formula "11") (term "0,1,1,0") (ifseqformula "53"))
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "inEqSimp_geqRight" (formula "53"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                                (rule "add_zero_right" (formula "2") (term "0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "0"))
                                                (rule "mul_literals" (formula "2") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "8"))
                                                (rule "qeq_literals" (formula "2") (term "0"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                          )
                                          (branch "messages[i_5].length ≥ 1 + iv_9 FALSE"
                                             (rule "inEqSimp_geqRight" (formula "47"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1"))
                                             (rule "arrayLengthNotNegative" (formula "42") (term "1,0,1,0"))
                                             (rule "arrayLengthIsAShort" (formula "43") (term "1,0,1,0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "true_left" (formula "43"))
                                             (rule "equalityToSeqGetAndSeqLenLeft" (formula "43") (inst "iv=iv"))
                                             (rule "andLeft" (formula "43"))
                                             (rule "lenOfSeqConcat" (formula "44") (term "1,1,0,0"))
                                             (builtin "One Step Simplification" (formula "44"))
                                             (rule "polySimp_addComm0" (formula "44") (term "1,1,0,0"))
                                             (rule "lenOfSeqConcat" (formula "43") (term "0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "polySimp_homoEq" (formula "43"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0"))
                                             (rule "polySimp_addComm0" (formula "43") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,0"))
                                             (rule "mul_literals" (formula "43") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "43") (term "0"))
                                             (rule "polySimp_addComm0" (formula "43") (term "0,0"))
                                             (rule "lenOfSeqConcatEQ" (formula "43") (term "1,0,0") (ifseqformula "45"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "polySimp_addComm0" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "43") (term "0,0"))
                                             (rule "add_literals" (formula "43") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "43") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1" (formula "43") (term "0"))
                                             (rule "add_literals" (formula "43") (term "1,0"))
                                             (rule "times_zero_1" (formula "43") (term "0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "true_left" (formula "43"))
                                             (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "43") (term "0,0,0,1,0,0"))
                                             (rule "add_zero_left" (formula "43") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0"))
                                             (rule "getOfSeqConcat" (formula "43") (term "0,1,0"))
                                             (rule "polySimp_elimSub" (formula "43") (term "1,2,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "43") (term "1,2,0,1,0"))
                                             (rule "getOfSeqSingleton" (formula "43") (term "2,0,1,0"))
                                             (rule "castDel" (formula "43") (term "1,2,0,1,0"))
                                             (rule "castDel" (formula "43") (term "2,2,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,1,0"))
                                             (rule "polySimp_sepPosMonomial" (formula "43") (term "0,2,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,0,2,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "43") (term "1,0,2,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0"))
                                             (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,1,0"))
                                             (rule "getOfSeqConcatEQ" (formula "43") (term "1,1,0") (ifseqformula "44"))
                                             (rule "eqSymm" (formula "43") (term "1,0"))
                                             (rule "polySimp_elimSub" (formula "43") (term "1,2,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "43") (term "1,2,0,1,0"))
                                             (rule "getOfSeqSingleton" (formula "43") (term "2,0,1,0"))
                                             (rule "castDel" (formula "43") (term "1,2,0,1,0"))
                                             (rule "castDel" (formula "43") (term "2,2,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "43") (term "0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,1,0"))
                                             (rule "polySimp_sepPosMonomial" (formula "43") (term "0,2,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,0,2,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "43") (term "1,0,2,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0"))
                                             (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,1,0"))
                                             (builtin "One Step Simplification" (formula "43"))
                                             (rule "true_left" (formula "43"))
                                             (rule "seqGetAlphaCast" (formula "41") (term "1"))
                                             (rule "castDel" (formula "41") (term "0"))
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "true_left" (formula "41"))
                                             (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "30") (ifseqformula "20"))
                                             (rule "andLeft" (formula "30"))
                                             (rule "notLeft" (formula "31"))
                                             (rule "andLeft" (formula "30"))
                                             (rule "notLeft" (formula "31"))
                                             (rule "andLeft" (formula "30"))
                                             (rule "notLeft" (formula "31"))
                                             (rule "andLeft" (formula "30"))
                                             (rule "notLeft" (formula "31"))
                                             (rule "andLeft" (formula "30"))
                                             (rule "andLeft" (formula "30"))
                                             (rule "andLeft" (formula "30"))
                                             (rule "andLeft" (formula "30"))
                                             (rule "notLeft" (formula "30"))
                                             (rule "nonNull" (formula "33") (inst "i=i"))
                                             (rule "greater_literals" (formula "33") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "sub_literals" (formula "33") (term "2,1,0,1"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "andLeft" (formula "33"))
                                             (rule "notLeft" (formula "33"))
                                             (rule "narrowSelectArrayType" (formula "33") (term "0,0,1,0") (ifseqformula "18") (ifseqformula "50"))
                                             (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0"))
                                             (rule "nonNull" (formula "32") (inst "i=i"))
                                             (rule "sub_literals" (formula "32") (term "2,1,0,1,1"))
                                             (builtin "One Step Simplification" (formula "32"))
                                             (rule "greater_literals" (formula "32") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "32"))
                                             (rule "andLeft" (formula "32"))
                                             (rule "notLeft" (formula "32"))
                                             (rule "narrowSelectArrayType" (formula "32") (term "0,0,1,0") (ifseqformula "18") (ifseqformula "50"))
                                             (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "32") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0"))
                                             (rule "nonNull" (formula "31") (inst "i=i"))
                                             (rule "sub_literals" (formula "31") (term "2,1,0,1,1"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "greater_literals" (formula "31") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "andLeft" (formula "31"))
                                             (rule "notLeft" (formula "31"))
                                             (rule "narrowSelectArrayType" (formula "31") (term "0,0,1,0") (ifseqformula "18") (ifseqformula "50"))
                                             (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                                             (rule "nonNull" (formula "30") (inst "i=i"))
                                             (rule "sub_literals" (formula "30") (term "2,1,0,1,1"))
                                             (builtin "One Step Simplification" (formula "30"))
                                             (rule "greater_literals" (formula "30") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "30"))
                                             (rule "andLeft" (formula "30"))
                                             (rule "notLeft" (formula "30"))
                                             (rule "replace_known_right" (formula "8") (term "0,0,0,0") (ifseqformula "50"))
                                             (builtin "One Step Simplification" (formula "8"))
                                             (rule "replace_known_right" (formula "7") (term "0,0,0,0") (ifseqformula "50"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "ifthenelse_negated" (formula "8") (term "0"))
                                             (rule "narrowSelectArrayType" (formula "30") (term "0,0,1,0") (ifseqformula "18") (ifseqformula "50"))
                                             (rule "ifthenelse_negated" (formula "7") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                                             (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "47") (ifseqformula "20"))
                                             (rule "replaceKnownSelect_taclet10110011100000_7" (formula "47") (term "1,1,0,0,0,0,0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet10110011100000_9" (formula "47") (term "1,1,0,0,0,0,0,0,0"))
                                             (rule "andLeft" (formula "47"))
                                             (rule "notLeft" (formula "48"))
                                             (rule "andLeft" (formula "47"))
                                             (rule "andLeft" (formula "47"))
                                             (rule "notLeft" (formula "49"))
                                             (rule "andLeft" (formula "47"))
                                             (rule "notLeft" (formula "49"))
                                             (rule "notLeft" (formula "48"))
                                             (rule "andLeft" (formula "47"))
                                             (rule "andLeft" (formula "47"))
                                             (rule "andLeft" (formula "47"))
                                             (rule "andLeft" (formula "47"))
                                             (rule "notLeft" (formula "47"))
                                             (rule "nonNull" (formula "50") (inst "i=i"))
                                             (rule "greater_literals" (formula "50") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "50"))
                                             (rule "sub_literals" (formula "50") (term "2,1,0,1"))
                                             (builtin "One Step Simplification" (formula "50"))
                                             (rule "andLeft" (formula "50"))
                                             (rule "notLeft" (formula "50"))
                                             (rule "inEqSimp_ltToLeq" (formula "50") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "50") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "50") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "50") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "50") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0"))
                                             (rule "nonNull" (formula "49") (inst "i=i"))
                                             (rule "sub_literals" (formula "49") (term "2,1,0,1,1"))
                                             (builtin "One Step Simplification" (formula "49"))
                                             (rule "greater_literals" (formula "49") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "49"))
                                             (rule "andLeft" (formula "49"))
                                             (rule "notLeft" (formula "49"))
                                             (rule "inEqSimp_ltToLeq" (formula "49") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "49") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "49") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0"))
                                             (rule "nonNull" (formula "48") (inst "i=i"))
                                             (rule "sub_literals" (formula "48") (term "2,1,0,1,1"))
                                             (builtin "One Step Simplification" (formula "48"))
                                             (rule "greater_literals" (formula "48") (term "0,1"))
                                             (builtin "One Step Simplification" (formula "48"))
                                             (rule "andLeft" (formula "48"))
                                             (rule "notLeft" (formula "48"))
                                             (rule "inEqSimp_ltToLeq" (formula "48") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "48") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "48") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "48") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "48") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0,0"))
                                             (rule "nonNull" (formula "47") (inst "i=i"))
                                             (rule "sub_literals" (formula "47") (term "2,1,0,1,1"))
                                             (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "61")))
                                             (rule "greater_literals" (formula "47") (term "0"))
                                             (builtin "One Step Simplification" (formula "47"))
                                             (rule "inEqSimp_ltToLeq" (formula "47") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "47") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "47") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "47") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0,0"))
                                             (rule "pullOutSelect" (formula "60") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_16"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "77")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "37"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "20"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "77")) (ifInst ""  (formula "20")))
                                             (rule "applyEqReverse" (formula "61") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "59") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_16"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "76")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "37"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "20"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "76")) (ifInst ""  (formula "20")))
                                             (rule "applyEqReverse" (formula "60") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_16"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "75")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "37"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "20"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "75")) (ifInst ""  (formula "20")))
                                             (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "57") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_16"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "37"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "20"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")) (ifInst ""  (formula "20")))
                                             (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "56") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_16"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "73")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "37"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "20"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "73")) (ifInst ""  (formula "20")))
                                             (rule "applyEqReverse" (formula "57") (term "0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "50") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_16"))
                                             (rule "applyEq" (formula "56") (term "0") (ifseqformula "50"))
                                             (rule "applyEq" (formula "51") (term "0,1,1,1,0,0") (ifseqformula "50"))
                                             (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "72")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "50") (term "0,0,0") (ifseqformula "36"))
                                             (rule "replace_known_left" (formula "50") (term "0,0,0,0") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "50"))
                                             (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "72")) (ifInst ""  (formula "19")))
                                             (rule "applyEqReverse" (formula "51") (term "1,0,0,1,0") (ifseqformula "50"))
                                             (rule "applyEqReverse" (formula "51") (term "0,1,1,1,0,0") (ifseqformula "50"))
                                             (rule "applyEqReverse" (formula "56") (term "0") (ifseqformula "50"))
                                             (rule "hideAuxiliaryEq" (formula "50"))
                                             (rule "pullOutSelect" (formula "49") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_16"))
                                             (rule "applyEq" (formula "55") (term "0") (ifseqformula "49"))
                                             (rule "applyEq" (formula "50") (term "0,1,1,1,0,0") (ifseqformula "49"))
                                             (rule "simplifySelectOfAnonEQ" (formula "49") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "71")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "49") (term "0,0,0") (ifseqformula "36"))
                                             (rule "replace_known_left" (formula "49") (term "0,0,0,0") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "49"))
                                             (rule "simplifySelectOfAnonEQ" (formula "49") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "71")) (ifInst ""  (formula "19")))
                                             (rule "applyEqReverse" (formula "55") (term "0") (ifseqformula "49"))
                                             (rule "applyEqReverse" (formula "50") (term "0,1,1,1,0,0") (ifseqformula "49"))
                                             (rule "applyEqReverse" (formula "50") (term "1,0,0,1,0") (ifseqformula "49"))
                                             (rule "hideAuxiliaryEq" (formula "49"))
                                             (rule "pullOutSelect" (formula "48") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_16"))
                                             (rule "applyEq" (formula "54") (term "0") (ifseqformula "48"))
                                             (rule "applyEq" (formula "49") (term "0,1,1,1,0,0") (ifseqformula "48"))
                                             (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "70")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "48") (term "0,0,0") (ifseqformula "36"))
                                             (rule "replace_known_left" (formula "48") (term "0,0,0,0") (ifseqformula "19"))
                                             (builtin "One Step Simplification" (formula "48"))
                                             (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "70")) (ifInst ""  (formula "19")))
                                             (rule "applyEqReverse" (formula "49") (term "0,1,1,1,0,0") (ifseqformula "48"))
                                             (rule "applyEqReverse" (formula "49") (term "1,0,0,1,0") (ifseqformula "48"))
                                             (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "48"))
                                             (rule "hideAuxiliaryEq" (formula "48"))
                                             (rule "nnf_imp2or" (formula "33") (term "0"))
                                             (rule "nnf_imp2or" (formula "32") (term "0"))
                                             (rule "commute_or_2" (formula "51") (term "0"))
                                             (rule "nnf_imp2or" (formula "31") (term "0"))
                                             (rule "commute_or_2" (formula "34") (term "0"))
                                             (rule "nnf_imp2or" (formula "30") (term "0"))
                                             (rule "commute_or_2" (formula "11") (term "0"))
                                             (rule "commute_or_2" (formula "13") (term "0"))
                                             (rule "ifthenelse_split" (formula "10") (term "1"))
                                             (branch "messages[i_5].length ≥ 1 TRUE"
                                                (rule "replace_known_left" (formula "12") (term "0,1,1,0") (ifseqformula "10"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "replace_known_left" (formula "14") (term "0,1,1,0") (ifseqformula "10"))
                                                (builtin "One Step Simplification" (formula "14"))
                                                (rule "replace_known_left" (formula "13") (term "0,1") (ifseqformula "10"))
                                                (builtin "One Step Simplification" (formula "13"))
                                                (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "1"))
                                                (rule "mul_literals" (formula "10") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                (rule "mul_literals" (formula "10") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "10"))
                                                (rule "leq_literals" (formula "6") (term "0"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "true_left" (formula "6"))
                                                (rule "nnf_imp2or" (formula "48") (term "0"))
                                                (rule "ifthenelse_split" (formula "11") (term "0"))
                                                (branch " result_1[i_5]@anon_heap_addEntry«anonHeapFunction».length ≥ 1 TRUE"
                                                   (rule "applyEq" (formula "46") (term "1,0") (ifseqformula "12"))
                                                   (rule "applyEq" (formula "15") (term "1,1,1,0,0,1,0,0") (ifseqformula "12"))
                                                   (rule "eqSymm" (formula "15") (term "1,0,0"))
                                                   (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                                                   (rule "applyEq" (formula "12") (term "1,1,1,0,0,1,0,0") (ifseqformula "11"))
                                                   (rule "ifthenelse_to_or_left" (formula "28") (term "0,1,0"))
                                                   (rule "eqSymm" (formula "28") (term "1,1,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "28"))
                                                   (rule "eqSymm" (formula "28") (term "1,0,0,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0,1,0"))
                                                   (rule "add_literals" (formula "28") (term "0,0,0,0,0,1,0"))
                                                   (rule "add_zero_left" (formula "28") (term "0,0,0,0,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "28") (term "0,1,1,0,1,0"))
                                                   (rule "mul_literals" (formula "28") (term "1,0,0,0,1,1,0,1,0"))
                                                   (rule "add_literals" (formula "28") (term "0,0,0,1,1,0,1,0"))
                                                   (rule "add_zero_left" (formula "28") (term "0,0,1,1,0,1,0"))
                                                   (rule "nnf_imp2or" (formula "51") (term "0"))
                                                   (rule "nnf_imp2or" (formula "50") (term "0"))
                                                   (rule "arrayLengthNotNegative" (formula "8") (term "1,0"))
                                                   (rule "arrayLengthIsAShort" (formula "9") (term "1,0"))
                                                   (builtin "One Step Simplification" (formula "9"))
                                                   (rule "true_left" (formula "9"))
                                                   (rule "nnf_imp2or" (formula "50") (term "0"))
                                                   (rule "nnf_notAnd" (formula "35") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "35") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "35") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "35") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "34") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "34") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "34") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "34") (term "1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "33") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "33") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "33") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "32") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "32") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "32") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "32") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "32") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "49") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "49") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "49") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "49") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "49") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "49") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "49") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "49") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "49") (term "1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "52") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "52") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "52") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "52") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "52") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "52") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "52") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "52") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "52") (term "1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "51") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "51") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "51") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "51") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "51") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "51") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "51") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "51") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "50") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "50") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "50") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "50") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "50") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "50") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "50") (term "0,0,0,1,0,0"))
                                                   (rule "add_zero_left" (formula "50") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "31") (term "0,0") (ifseqformula "20"))
                                                   (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "56"))
                                                   (builtin "One Step Simplification" (formula "31"))
                                                   (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "31"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "30"))
                                                   (builtin "One Step Simplification" (formula "6"))
                                                   (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "6"))
                                                   (rule "applyEqReverse" (formula "8") (term "0,1,0") (ifseqformula "6"))
                                                   (rule "applyEqReverse" (formula "3") (term "1,0,0,0,1,0,0") (ifseqformula "6"))
                                                   (rule "applyEqReverse" (formula "2") (term "1,0,0,1,0,0") (ifseqformula "6"))
                                                   (rule "applyEqReverse" (formula "3") (term "1,1,0") (ifseqformula "6"))
                                                   (rule "applyEqReverse" (formula "2") (term "1,1,0") (ifseqformula "6"))
                                                   (rule "applyEqReverse" (formula "8") (term "0,0,0,0") (ifseqformula "6"))
                                                   (rule "applyEqReverse" (formula "2") (term "1,2,0") (ifseqformula "6"))
                                                   (rule "applyEqReverse" (formula "2") (term "0,0,0,0,0") (ifseqformula "6"))
                                                   (rule "applyEqReverse" (formula "7") (term "0,0") (ifseqformula "6"))
                                                   (rule "applyEqReverse" (formula "3") (term "1,0,1,0,1,0,0") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "applyEq" (formula "6") (term "0") (ifseqformula "11"))
                                                   (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "6"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0"))
                                                   (rule "leq_literals" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                                (branch " result_1[i_5]@anon_heap_addEntry«anonHeapFunction».length ≥ 1 FALSE"
                                                   (rule "eqSymm" (formula "11"))
                                                   (rule "inEqSimp_geqRight" (formula "54"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "applyEq" (formula "2") (term "0") (ifseqformula "12"))
                                                   (rule "inEqSimp_commuteLeq" (formula "2"))
                                                   (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                                                   (rule "qeq_literals" (formula "11"))
                                                   (rule "closeFalse" (formula "11"))
                                                )
                                             )
                                             (branch "messages[i_5].length ≥ 1 FALSE"
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "replace_known_right" (formula "11") (term "0,1,1,0") (ifseqformula "53"))
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "replace_known_right" (formula "13") (term "0,1,1,0") (ifseqformula "53"))
                                                (builtin "One Step Simplification" (formula "13"))
                                                (rule "replace_known_right" (formula "12") (term "0,1") (ifseqformula "53"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "inEqSimp_geqRight" (formula "53"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_notGeq" (formula "11") (term "0"))
                                                (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                                                (rule "add_literals" (formula "11") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "11") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "13") (term "0"))
                                                (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                                                (rule "add_literals" (formula "13") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "13") (term "0,0"))
                                                (rule "nnf_imp2or" (formula "48") (term "0"))
                                                (rule "ifthenelse_to_or_left" (formula "28") (term "0,1,0"))
                                                (rule "eqSymm" (formula "28") (term "1,1,0,1,0"))
                                                (builtin "One Step Simplification" (formula "28"))
                                                (rule "eqSymm" (formula "28") (term "1,0,0,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "28") (term "0,1,1,0,1,0"))
                                                (rule "mul_literals" (formula "28") (term "1,0,0,0,1,1,0,1,0"))
                                                (rule "add_literals" (formula "28") (term "0,0,0,1,1,0,1,0"))
                                                (rule "add_zero_left" (formula "28") (term "0,0,1,1,0,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0,1,0"))
                                                (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0,1,0"))
                                                (rule "add_literals" (formula "28") (term "0,0,0,0,0,1,0"))
                                                (rule "add_zero_left" (formula "28") (term "0,0,0,0,1,0"))
                                                (rule "nnf_imp2or" (formula "51") (term "0"))
                                                (rule "arrayLengthIsAShort" (formula "45") (term "1,0"))
                                                (builtin "One Step Simplification" (formula "45"))
                                                (rule "true_left" (formula "45"))
                                                (rule "arrayLengthNotNegative" (formula "45") (term "1,0"))
                                                (rule "nnf_imp2or" (formula "51") (term "0"))
                                                (rule "arrayLengthNotNegative" (formula "10") (term "1,0"))
                                                (rule "arrayLengthIsAShort" (formula "11") (term "1,0"))
                                                (builtin "One Step Simplification" (formula "11"))
                                                (rule "true_left" (formula "11"))
                                                (rule "nnf_imp2or" (formula "51") (term "0"))
                                                (rule "nnf_notAnd" (formula "35") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "35") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "35") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
                                                (rule "mul_literals" (formula "35") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "34") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "34") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
                                                (rule "mul_literals" (formula "34") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "34") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "33") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "33") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                                                (rule "mul_literals" (formula "33") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "32") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "32") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0"))
                                                (rule "mul_literals" (formula "32") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "32") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "50") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "50") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "50") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "50") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "50") (term "0,0,0"))
                                                (rule "mul_literals" (formula "50") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "50") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,0"))
                                                (rule "mul_literals" (formula "50") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "53") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "53") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "53") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "53") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "53") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "53") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "53") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "53") (term "0,0,0"))
                                                (rule "mul_literals" (formula "53") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "53") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0"))
                                                (rule "mul_literals" (formula "53") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "52") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "52") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "52") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "52") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "52") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "52") (term "1,1,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "52") (term "0,0,0"))
                                                (rule "mul_literals" (formula "52") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "52") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "0,0,0"))
                                                (rule "mul_literals" (formula "52") (term "1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "51") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "51") (term "0,0,0"))
                                                (rule "times_zero_1" (formula "51") (term "1,0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "51") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0"))
                                                (rule "mul_literals" (formula "51") (term "1,0,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "51") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "51") (term "1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "51") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "51") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "51") (term "0,0,0,1,0,0"))
                                                (rule "add_zero_left" (formula "51") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "31") (term "0,0") (ifseqformula "20"))
                                                (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "57"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "replace_known_left" (formula "9") (term "0,0,0") (ifseqformula "31"))
                                                (builtin "One Step Simplification" (formula "9"))
                                                (rule "applyEqReverse" (formula "11") (term "0,1,0") (ifseqformula "9"))
                                                (rule "applyEqReverse" (formula "3") (term "1,1,0") (ifseqformula "9"))
                                                (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "9"))
                                                (rule "applyEqReverse" (formula "4") (term "1,1,0") (ifseqformula "9"))
                                                (rule "applyEqReverse" (formula "4") (term "1,0,0,0,1,0,0") (ifseqformula "9"))
                                                (rule "applyEqReverse" (formula "3") (term "1,0,0,1,0,0") (ifseqformula "9"))
                                                (rule "applyEqReverse" (formula "10") (term "0,0") (ifseqformula "9"))
                                                (rule "applyEqReverse" (formula "4") (term "0,0,0,0,0") (ifseqformula "9"))
                                                (rule "applyEqReverse" (formula "11") (term "0,0,0,0") (ifseqformula "9"))
                                                (rule "applyEqReverse" (formula "4") (term "1,0,1,0,1,0,0") (ifseqformula "9"))
                                                (rule "applyEqReverse" (formula "3") (term "1,2,0") (ifseqformula "9"))
                                                (rule "hideAuxiliaryEq" (formula "9"))
                                                (rule "replace_known_left" (formula "8") (term "0,0") (ifseqformula "30"))
                                                (builtin "One Step Simplification" (formula "8"))
                                                (rule "applyEqReverse" (formula "3") (term "1,2,0") (ifseqformula "8"))
                                                (rule "applyEqReverse" (formula "4") (term "1,1,0") (ifseqformula "8"))
                                                (rule "applyEqReverse" (formula "3") (term "1,0,0,1,0,0") (ifseqformula "8"))
                                                (rule "applyEqReverse" (formula "9") (term "0,0") (ifseqformula "8"))
                                                (rule "applyEqReverse" (formula "9") (term "0,1,0") (ifseqformula "8"))
                                                (rule "applyEqReverse" (formula "4") (term "1,0,1,0,1,0,0") (ifseqformula "8"))
                                                (rule "applyEqReverse" (formula "4") (term "1,0,0,0,1,0,0") (ifseqformula "8"))
                                                (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "8"))
                                                (rule "applyEqReverse" (formula "3") (term "1,1,0") (ifseqformula "8"))
                                                (rule "applyEqReverse" (formula "4") (term "0,0,0,0,0") (ifseqformula "8"))
                                                (rule "applyEqReverse" (formula "9") (term "0,0,0,0") (ifseqformula "8"))
                                                (rule "hideAuxiliaryEq" (formula "8"))
                                                (rule "onlyCreatedObjectsAreReferenced" (formula "6") (term "0,0") (ifseqformula "17"))
                                                (rule "arrayLengthNotNegative" (formula "2") (term "0"))
                                                (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "1"))
                                                (rule "applyEq" (formula "4") (term "0") (ifseqformula "2"))
                                                (rule "inEqSimp_commuteLeq" (formula "4"))
                                                (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                                                (rule "leq_literals" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "applyEq" (formula "10") (term "1,1,1,0,1,1,0,0") (ifseqformula "1"))
                                                (rule "add_literals" (formula "10") (term "1,1,0,1,1,0,0"))
                                                (rule "commute_or" (formula "52") (term "0,0"))
                                                (rule "commute_or" (formula "34") (term "0,0"))
                                                (rule "commute_or" (formula "12") (term "0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "12") (term "0"))
                                                (rule "add_zero_right" (formula "12") (term "1,1,0"))
                                                (rule "qeq_literals" (formula "12") (term "1,0"))
                                                (builtin "One Step Simplification" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "commute_or_2" (formula "32") (term "0"))
                                                (rule "commute_or_2" (formula "31") (term "0"))
                                                (rule "commute_or_2" (formula "25") (term "0,1,1,0"))
                                                (rule "commute_or" (formula "25") (term "1,0,1,0"))
                                                (rule "commute_or_2" (formula "30") (term "0"))
                                                (rule "commute_or_2" (formula "29") (term "0"))
                                                (rule "commute_or_2" (formula "47") (term "0"))
                                                (rule "commute_or_2" (formula "50") (term "0"))
                                                (rule "commute_or_2" (formula "49") (term "0"))
                                                (rule "commute_or_2" (formula "48") (term "0"))
                                                (rule "ifthenelse_to_or_left" (formula "25") (term "1,0,0,1,0"))
                                                (rule "eqSymm" (formula "25") (term "1,1,1,0,0,1,0"))
                                                (rule "eqSymm" (formula "25") (term "1,0,1,0,0,1,0"))
                                                (rule "inEqSimp_notGeq" (formula "25") (term "0,0,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "25") (term "1,0,0,0,0,1,0,0,1,0"))
                                                (rule "add_literals" (formula "25") (term "0,0,0,0,1,0,0,1,0"))
                                                (rule "add_zero_left" (formula "25") (term "0,0,0,1,0,0,1,0"))
                                                (rule "commute_or" (formula "10") (term "0,0"))
                                                (rule "inEqSimp_or_tautInEq1" (formula "10") (term "0"))
                                                (rule "add_zero_right" (formula "10") (term "1,1,0"))
                                                (rule "qeq_literals" (formula "10") (term "1,0"))
                                                (builtin "One Step Simplification" (formula "10"))
                                                (rule "true_left" (formula "10"))
                                                (rule "commute_or" (formula "31") (term "0,0"))
                                                (rule "commute_or" (formula "30") (term "0,0"))
                                                (rule "commute_or" (formula "29") (term "0,0"))
                                                (rule "commute_or" (formula "28") (term "0,0"))
                                                (rule "commute_or" (formula "46") (term "0,0"))
                                                (rule "commute_or" (formula "49") (term "0,0"))
                                                (rule "commute_or" (formula "48") (term "0,0"))
                                                (rule "commute_or" (formula "47") (term "0,0"))
                                                (rule "commute_or" (formula "24") (term "0,0,1,1,0"))
                                                (rule "cnf_rightDist" (formula "24") (term "0,0,1,0"))
                                                (rule "inEqSimp_or_subsumption5" (formula "24") (term "1,0,0,1,0"))
                                                (rule "greater_literals" (formula "24") (term "0,1,0,1,0,0,1,0"))
                                                (builtin "One Step Simplification" (formula "24"))
                                                (rule "cut_direct" (formula "10") (term "0"))
                                                (branch "CUT: self.sorted[i_5].length ≤ 0 TRUE"
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "true_left" (formula "11"))
                                                   (rule "inEqSimp_contradInEq0" (formula "8") (term "0,0") (ifseqformula "10"))
                                                   (rule "qeq_literals" (formula "8") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "inEqSimp_homoInEq1" (formula "8"))
                                                   (rule "times_zero_2" (formula "8") (term "1,0"))
                                                   (rule "add_zero_right" (formula "8") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "8"))
                                                   (rule "mul_literals" (formula "8") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "8") (ifseqformula "7"))
                                                   (rule "qeq_literals" (formula "8") (term "0"))
                                                   (builtin "One Step Simplification" (formula "8"))
                                                   (rule "closeFalse" (formula "8"))
                                                )
                                                (branch "CUT: self.sorted[i_5].length ≤ 0 FALSE"
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "inEqSimp_leqRight" (formula "52"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "11"))
                                                   (rule "add_zero_right" (formula "1") (term "0"))
                                                   (rule "qeq_literals" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch "Case 2"
                                       (builtin "One Step Simplification" (formula "15"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (ifseqformula "20"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "1") (ifseqformula "20"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "1") (ifseqformula "25"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,1") (ifseqformula "20"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "19"))
                                       (rule "andLeft" (formula "5"))
                                       (rule "orRight" (formula "40"))
                                       (rule "notLeft" (formula "21"))
                                       (rule "eqSymm" (formula "3"))
                                       (rule "eqSymm" (formula "4"))
                                       (rule "eqSymm" (formula "31"))
                                       (rule "eqSymm" (formula "29"))
                                       (rule "eqSymm" (formula "32"))
                                       (rule "eqSymm" (formula "16"))
                                       (rule "eqSymm" (formula "39"))
                                       (rule "eqSymm" (formula "17") (term "1,0"))
                                       (rule "replace_known_left" (formula "37") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "36"))
                                       (builtin "One Step Simplification" (formula "12"))
                                       (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "45"))
                                       (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "44")))
                                       (rule "replace_known_right" (formula "28") (term "0") (ifseqformula "42"))
                                       (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "40")) (ifInst ""  (formula "41")))
                                       (rule "polySimp_addComm0" (formula "7") (term "1"))
                                       (rule "lenOfSeqConcat" (formula "29") (term "0"))
                                       (builtin "One Step Simplification" (formula "29"))
                                       (rule "polySimp_homoEq" (formula "29"))
                                       (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                       (rule "polySimp_addComm0" (formula "29") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                       (rule "mul_literals" (formula "29") (term "0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "30"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "30") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                       (rule "polySimp_addComm0" (formula "29") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "6"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0"))
                                       (rule "inEqSimp_ltRight" (formula "37"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0"))
                                       (rule "lenOfSeqConcatEQ" (formula "30") (term "1,0,0") (ifseqformula "33"))
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "polySimp_addComm0" (formula "30") (term "1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                       (rule "add_literals" (formula "30") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "30") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "30") (term "0"))
                                       (rule "add_literals" (formula "30") (term "1,0"))
                                       (rule "times_zero_1" (formula "30") (term "0"))
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "true_left" (formula "30"))
                                       (rule "inEqSimp_commuteLeq" (formula "19"))
                                       (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "2"))
                                       (rule "inEqSimp_commuteLeq" (formula "6"))
                                       (rule "inEqSimp_homoInEq1" (formula "15"))
                                       (rule "polySimp_addComm1" (formula "15") (term "0"))
                                       (rule "applyEq" (formula "31") (term "0") (ifseqformula "4"))
                                       (rule "eqSymm" (formula "31"))
                                       (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "8"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                       (rule "mul_literals" (formula "7") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                       (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                       (rule "add_literals" (formula "7") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "7") (term "0,0"))
                                       (rule "applyEq" (formula "37") (term "0,1") (ifseqformula "5"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                                       (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                       (rule "polySimp_elimOne" (formula "30") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "15"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1"))
                                       (rule "mul_literals" (formula "15") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                       (rule "polySimp_elimOne" (formula "7") (term "0"))
                                       (rule "inEqSimp_strengthen1" (formula "7") (ifseqformula "38"))
                                       (rule "inEqSimp_contradEq7" (formula "38") (ifseqformula "7"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0"))
                                       (rule "add_literals" (formula "38") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "38") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "38") (term "0,0"))
                                       (rule "leq_literals" (formula "38") (term "0"))
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "false_right" (formula "38"))
                                       (rule "array2seqDef" (formula "37") (term "0,0") (inst "u=u"))
                                       (rule "getOfSeqDef" (formula "37") (term "0"))
                                       (rule "castDel" (formula "37") (term "1,0"))
                                       (rule "castDel" (formula "37") (term "2,0"))
                                       (rule "add_zero_right" (formula "37") (term "0,2,1,0"))
                                       (rule "polySimp_elimSub" (formula "37") (term "1,1,0,0"))
                                       (rule "times_zero_2" (formula "37") (term "1,1,1,0,0"))
                                       (rule "add_zero_right" (formula "37") (term "1,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "37") (term "0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0"))
                                       (rule "replace_known_left" (formula "37") (term "0,0,0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "37") (term "0,0,0"))
                                       (rule "inEqSimp_contradInEq0" (formula "37") (term "0,0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "37") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "37") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "37") (term "1,0,0,0,0"))
                                       (rule "add_literals" (formula "37") (term "0,0,0,0"))
                                       (rule "leq_literals" (formula "37") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "eqSymm" (formula "37"))
                                       (rule "array2seqDef" (formula "16") (term "0,0") (inst "u=u"))
                                       (rule "narrowSelectArrayType" (formula "16") (term "2,0,0") (ifseqformula "9") (ifseqformula "36"))
                                       (rule "array2seqDef" (formula "26") (term "0,1") (inst "u=u"))
                                       (rule "eqSymm" (formula "26"))
                                       (rule "nonNull" (formula "34") (inst "i=i"))
                                       (rule "greater_literals" (formula "34") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "40")))
                                       (rule "sub_literals" (formula "34") (term "2,1,0"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                       (rule "applyEq" (formula "34") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "34") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0"))
                                       (rule "nonNull" (formula "21") (inst "i=i"))
                                       (rule "greater_literals" (formula "21") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "21"))
                                       (rule "sub_literals" (formula "21") (term "2,1,0,1"))
                                       (builtin "One Step Simplification" (formula "21"))
                                       (rule "andLeft" (formula "21"))
                                       (rule "notLeft" (formula "21"))
                                       (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "36"))
                                       (builtin "One Step Simplification" (formula "12"))
                                       (rule "narrowSelectArrayType" (formula "21") (term "0,0,1,0") (ifseqformula "9") (ifseqformula "36"))
                                       (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                                       (rule "array2seqDef" (formula "4") (term "1") (inst "u=u"))
                                       (rule "eqSymm" (formula "4"))
                                       (rule "array2seqDef" (formula "5") (term "1") (inst "u=u"))
                                       (rule "eqSymm" (formula "5"))
                                       (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "4") (term "1") (ifseqformula "5"))
                                       (rule "array2seqDef" (formula "32") (term "0,1,0") (inst "u=u"))
                                       (rule "array2seqDef" (formula "17") (term "1") (inst "u=u"))
                                       (rule "eqSymm" (formula "17"))
                                       (rule "narrowSelectArrayType" (formula "17") (term "2,0") (ifseqformula "9") (ifseqformula "37"))
                                       (rule "applyEq" (formula "16") (term "0,0") (ifseqformula "17"))
                                       (rule "array2seqDef" (formula "18") (term "1,1,0") (inst "u=u"))
                                       (rule "eqSymm" (formula "18") (term "1,0"))
                                       (rule "array2seqDef" (formula "31") (term "1") (inst "u=u"))
                                       (rule "eqSymm" (formula "31"))
                                       (rule "applyEq" (formula "31") (term "0") (ifseqformula "4"))
                                       (rule "eqSymm" (formula "31"))
                                       (rule "array2seqDef" (formula "3") (term "0,0") (inst "u=u"))
                                       (rule "lenOfSeqDef" (formula "3") (term "0"))
                                       (rule "polySimp_elimSub" (formula "3") (term "1,0"))
                                       (rule "mul_literals" (formula "3") (term "1,1,0"))
                                       (rule "add_zero_right" (formula "3") (term "1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "3") (term "0,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0,0,0"))
                                       (rule "array2seqDef" (formula "15") (term "0,0") (inst "u=u"))
                                       (rule "narrowSelectArrayType" (formula "15") (term "2,0,0") (ifseqformula "9") (ifseqformula "37"))
                                       (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "17"))
                                       (rule "array2seqDef" (formula "38") (term "0,0") (inst "u=u"))
                                       (rule "getOfSeqDef" (formula "38") (term "0"))
                                       (rule "castDel" (formula "38") (term "2,0"))
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "castDel" (formula "38") (term "0,1"))
                                       (rule "add_zero_right" (formula "38") (term "0,2,0,1"))
                                       (rule "orRight" (formula "38"))
                                       (rule "notRight" (formula "38"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "polySimp_elimSub" (formula "2") (term "1"))
                                       (rule "times_zero_2" (formula "2") (term "1,1"))
                                       (rule "add_zero_right" (formula "2") (term "1"))
                                       (rule "inEqSimp_ltToLeq" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "array2seqDef" (formula "27") (term "1") (inst "u=u"))
                                       (rule "eqSymm" (formula "27"))
                                       (rule "array2seqDef" (formula "6") (term "1") (inst "u=u"))
                                       (rule "eqSymm" (formula "6"))
                                       (rule "array2seqDef" (formula "5") (term "1") (inst "u=u"))
                                       (rule "eqSymm" (formula "5"))
                                       (rule "applyEq" (formula "6") (term "0") (ifseqformula "5"))
                                       (rule "applyEq" (formula "5") (term "1") (ifseqformula "6"))
                                       (rule "array2seqDef" (formula "19") (term "1,1,0") (inst "u=u"))
                                       (rule "eqSymm" (formula "19") (term "1,0"))
                                       (rule "pullOutSelect" (formula "2") (term "1,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_21"))
                                       (rule "applyEq" (formula "5") (term "1,0,1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "5") (term "1,0,0,0,0") (ifseqformula "2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "30"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "44")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0") (ifseqformula "25"))
                                       (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "12"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "25"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "44")) (ifInst ""  (formula "12")))
                                       (rule "applyEqReverse" (formula "5") (term "1,0,0,0,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "5") (term "1,0,1,0") (ifseqformula "2"))
                                       (rule "applyEqReverse" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "array2seqDef" (formula "32") (term "0") (inst "u=u"))
                                       (rule "array2seqDef" (formula "32") (term "1") (inst "u=u"))
                                       (rule "applyEq" (formula "32") (term "1") (ifseqformula "5"))
                                       (rule "eqSeqDef2" (formula "18") (inst "iv=iv") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "eqSeqDef" (formula "18") (term "1,0") (inst "iv=iv"))
                                       (rule "lenOfSeqDef" (formula "18") (term "1,0,1,0"))
                                       (rule "polySimp_elimSub" (formula "18") (term "1,1,0,1,0"))
                                       (rule "times_zero_2" (formula "18") (term "1,1,1,0,1,0"))
                                       (rule "add_zero_right" (formula "18") (term "1,1,0,1,0"))
                                       (rule "lenOfSeqDef" (formula "18") (term "0,0,1,0"))
                                       (rule "polySimp_elimSub" (formula "18") (term "1,0,0,1,0"))
                                       (rule "times_zero_2" (formula "18") (term "1,1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "18") (term "1,0,0,1,0"))
                                       (rule "getOfSeqDef" (formula "18") (term "0,1,0,1,1,0"))
                                       (rule "castDel" (formula "18") (term "1,0,1,0,1,1,0"))
                                       (rule "castDel" (formula "18") (term "2,0,1,0,1,1,0"))
                                       (rule "add_zero_right" (formula "18") (term "0,2,1,0,1,0,1,1,0"))
                                       (rule "eqSymm" (formula "18") (term "1,0,1,1,0"))
                                       (rule "polySimp_elimSub" (formula "18") (term "1,1,0,1,1,0,1,1,0"))
                                       (rule "times_zero_2" (formula "18") (term "1,1,1,0,1,1,0,1,1,0"))
                                       (rule "add_zero_right" (formula "18") (term "1,1,0,1,1,0,1,1,0"))
                                       (rule "lenOfSeqDef" (formula "18") (term "1,1,0,0,1,1,0"))
                                       (rule "polySimp_elimSub" (formula "18") (term "1,1,1,0,0,1,1,0"))
                                       (rule "times_zero_2" (formula "18") (term "1,1,1,1,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "18") (term "1,1,1,0,0,1,1,0"))
                                       (rule "getOfSeqDef" (formula "18") (term "0,1,0,1,1,0"))
                                       (rule "castDel" (formula "18") (term "1,0,1,0,1,1,0"))
                                       (rule "castDel" (formula "18") (term "2,0,1,0,1,1,0"))
                                       (rule "add_zero_right" (formula "18") (term "0,2,1,0,1,0,1,1,0"))
                                       (rule "eqSymm" (formula "18") (term "1,0,1,1,0"))
                                       (rule "polySimp_elimSub" (formula "18") (term "1,1,0,1,1,0,1,1,0"))
                                       (rule "times_zero_2" (formula "18") (term "1,1,1,0,1,1,0,1,1,0"))
                                       (rule "add_zero_right" (formula "18") (term "1,1,0,1,1,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1,0,1,0"))
                                       (rule "add_zero_right" (formula "18") (term "0,0,1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0,1,0"))
                                       (rule "add_zero_right" (formula "18") (term "0,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1,1,0,0,1,1,0"))
                                       (rule "add_zero_right" (formula "18") (term "0,0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,1,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,1,0,1,1,0"))
                                       (rule "eqSymm" (formula "18") (term "1,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,1,1,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,1,0,1,1,0"))
                                       (rule "eqSymm" (formula "18") (term "1,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,1,1,0,1,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,1,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,1,1,0,1,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,1,0,1,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "0,0,1,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "0,0,1,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "0,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1,0,1,1,0"))
                                       (rule "eqSymm" (formula "18") (term "1,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,1,1,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,1,0,1,1,0,1,1,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,1,0,1,1,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,1,1,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,1,1,0,1,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,1,1,1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "0,0,1,1,1,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "0,0,1,1,1,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1,0,1,1,0"))
                                       (rule "eqSymm" (formula "18") (term "1,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,1,1,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,1,0,1,1,0,1,1,0"))
                                       (rule "mul_literals" (formula "18") (term "0,1,1,0,1,1,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,1,1,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,1,1,0,1,1,0"))
                                       (rule "eqSeqDef2" (formula "26") (inst "iv=iv") (ifseqformula "26"))
                                       (builtin "One Step Simplification" (formula "26"))
                                       (rule "true_left" (formula "26"))
                                       (rule "pullOutSelect" (formula "4") (term "0,0,0,0") (inst "selectSK=arr_127"))
                                       (rule "applyEq" (formula "5") (term "0,1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "4"))
                                       (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "28"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,1,0,0") (ifseqformula "24"))
                                       (rule "pullOutSelect" (formula "31") (term "0,1,0") (inst "selectSK=arr_128"))
                                       (rule "applyEq" (formula "32") (term "1,2,0") (ifseqformula "31"))
                                       (rule "simplifySelectOfAnonEQ" (formula "31") (ifseqformula "28"))
                                       (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "42")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0,0,0") (ifseqformula "24"))
                                       (rule "replace_known_right" (formula "31") (term "0,0,0,0") (ifseqformula "40"))
                                       (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "41")))
                                       (rule "applyEqReverse" (formula "32") (term "1,2,0") (ifseqformula "31"))
                                       (rule "applyEqReverse" (formula "32") (term "0,1,0") (ifseqformula "31"))
                                       (rule "hideAuxiliaryEq" (formula "31"))
                                       (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "17"))
                                       (rule "times_zero_1" (formula "18") (term "0,0"))
                                       (rule "add_zero_left" (formula "18") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                       (rule "mul_literals" (formula "18") (term "1"))
                                       (rule "pullOutSelect" (formula "4") (term "2,0") (inst "selectSK=arr_129"))
                                       (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "26"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "nnf_imp2or" (formula "36") (term "0"))
                                       (rule "nnf_imp2or" (formula "24") (term "0"))
                                       (rule "nnf_imp2or" (formula "21") (term "0"))
                                       (rule "nnf_notAnd" (formula "36") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,0"))
                                       (rule "add_literals" (formula "36") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0"))
                                       (rule "mul_literals" (formula "36") (term "1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "36") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "24") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
                                       (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                                       (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "21") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "21") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
                                       (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "21") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                       (rule "mul_literals" (formula "21") (term "1,0,0,0"))
                                       (rule "nnf_imp2or" (formula "21") (term "0,1,1,0"))
                                       (rule "nnf_notAnd" (formula "21") (term "0,0,1,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0,1,1,0"))
                                       (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0,1,1,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,0,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "21") (term "1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0,1,1,0"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0,1,1,0"))
                                       (rule "add_literals" (formula "21") (term "0,0,0,1,0,0,1,1,0"))
                                       (rule "add_zero_left" (formula "21") (term "0,0,1,0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,1,1,0"))
                                       (rule "arrayLengthNotNegative" (formula "11") (term "0"))
                                       (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                       (rule "mul_literals" (formula "11") (term "1"))
                                       (rule "arrayLengthIsAShort" (formula "12") (term "0"))
                                       (builtin "One Step Simplification" (formula "12"))
                                       (rule "true_left" (formula "12"))
                                       (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "36") (ifseqformula "15"))
                                       (rule "replaceKnownSelect_taclet1110011100000_2" (formula "36") (term "1,1,0,0,0,0,0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet1110011100000_4" (formula "36") (term "1,1,0,0,0,0,0,0,0"))
                                       (rule "andLeft" (formula "36"))
                                       (rule "andLeft" (formula "36"))
                                       (rule "notLeft" (formula "38"))
                                       (rule "andLeft" (formula "36"))
                                       (rule "notLeft" (formula "38"))
                                       (rule "notLeft" (formula "37"))
                                       (rule "andLeft" (formula "36"))
                                       (rule "notLeft" (formula "37"))
                                       (rule "andLeft" (formula "36"))
                                       (rule "andLeft" (formula "36"))
                                       (rule "andLeft" (formula "36"))
                                       (rule "andLeft" (formula "36"))
                                       (rule "notLeft" (formula "36"))
                                       (rule "nonNull" (formula "39") (inst "i=i"))
                                       (rule "greater_literals" (formula "39") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "sub_literals" (formula "39") (term "2,1,0,1"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "andLeft" (formula "39"))
                                       (rule "notLeft" (formula "39"))
                                       (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "39") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0"))
                                       (rule "nonNull" (formula "38") (inst "i=i"))
                                       (rule "sub_literals" (formula "38") (term "2,1,0,1,1"))
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "greater_literals" (formula "38") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "andLeft" (formula "38"))
                                       (rule "notLeft" (formula "38"))
                                       (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "38") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0"))
                                       (rule "nonNull" (formula "37") (inst "i=i"))
                                       (rule "greater_literals" (formula "37") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "sub_literals" (formula "37") (term "2,1,0,1"))
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "andLeft" (formula "37"))
                                       (rule "notLeft" (formula "37"))
                                       (rule "inEqSimp_ltToLeq" (formula "37") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "37") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0"))
                                       (rule "nonNull" (formula "36") (inst "i=i"))
                                       (rule "greater_literals" (formula "36") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "sub_literals" (formula "36") (term "2,1,0,1"))
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "andLeft" (formula "36"))
                                       (rule "notLeft" (formula "36"))
                                       (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "42"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "42"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "ifthenelse_negated" (formula "5") (term "0"))
                                       (rule "ifthenelse_negated" (formula "4") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "36") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0"))
                                       (rule "pullOutSelect" (formula "50") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_18"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "28"))
                                       (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "15"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")) (ifInst ""  (formula "15")))
                                       (rule "applyEqReverse" (formula "51") (term "0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "49") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_18"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "28"))
                                       (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "15"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")) (ifInst ""  (formula "15")))
                                       (rule "applyEqReverse" (formula "50") (term "0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_18"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "28"))
                                       (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "15"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")) (ifInst ""  (formula "15")))
                                       (rule "applyEqReverse" (formula "49") (term "0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_18"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "28"))
                                       (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "15"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")) (ifInst ""  (formula "15")))
                                       (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_18"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "28"))
                                       (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "15"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")) (ifInst ""  (formula "15")))
                                       (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "pullOutSelect" (formula "39") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_18"))
                                       (rule "applyEq" (formula "46") (term "0") (ifseqformula "39"))
                                       (rule "applyEq" (formula "40") (term "0,1,1,1,0,0") (ifseqformula "39"))
                                       (rule "simplifySelectOfAnonEQ" (formula "39") (ifseqformula "31"))
                                       (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "58")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "0,0,0") (ifseqformula "27"))
                                       (rule "replace_known_left" (formula "39") (term "0,0,0,0") (ifseqformula "14"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "simplifySelectOfAnonEQ" (formula "39") (ifseqformula "27"))
                                       (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "58")) (ifInst ""  (formula "14")))
                                       (rule "applyEqReverse" (formula "40") (term "0,1,1,1,0,0") (ifseqformula "39"))
                                       (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "39"))
                                       (rule "applyEqReverse" (formula "40") (term "1,0,0,1,0") (ifseqformula "39"))
                                       (rule "hideAuxiliaryEq" (formula "39"))
                                       (rule "pullOutSelect" (formula "38") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_18"))
                                       (rule "applyEq" (formula "45") (term "0") (ifseqformula "38"))
                                       (rule "applyEq" (formula "39") (term "0,1,1,1,0,0") (ifseqformula "38"))
                                       (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "31"))
                                       (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "58")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "0,0,0") (ifseqformula "27"))
                                       (rule "replace_known_left" (formula "38") (term "0,0,0,0") (ifseqformula "14"))
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "27"))
                                       (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "58")) (ifInst ""  (formula "14")))
                                       (rule "applyEqReverse" (formula "39") (term "0,1,1,1,0,0") (ifseqformula "38"))
                                       (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "38"))
                                       (rule "applyEqReverse" (formula "39") (term "1,0,0,1,0") (ifseqformula "38"))
                                       (rule "hideAuxiliaryEq" (formula "38"))
                                       (rule "pullOutSelect" (formula "37") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_18"))
                                       (rule "applyEq" (formula "38") (term "0,1,1,1,0,0") (ifseqformula "37"))
                                       (rule "applyEq" (formula "44") (term "0") (ifseqformula "37"))
                                       (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "31"))
                                       (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "58")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,0,0") (ifseqformula "27"))
                                       (rule "replace_known_left" (formula "37") (term "0,0,0,0") (ifseqformula "14"))
                                       (builtin "One Step Simplification" (formula "37"))
                                       (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "27"))
                                       (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "58")) (ifInst ""  (formula "14")))
                                       (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "37"))
                                       (rule "applyEqReverse" (formula "38") (term "1,0,0,1,0") (ifseqformula "37"))
                                       (rule "applyEqReverse" (formula "38") (term "0,1,1,1,0,0") (ifseqformula "37"))
                                       (rule "hideAuxiliaryEq" (formula "37"))
                                       (rule "nnf_imp2or" (formula "36") (term "0"))
                                       (rule "nnf_imp2or" (formula "39") (term "0"))
                                       (rule "nnf_imp2or" (formula "38") (term "0"))
                                       (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "24") (ifseqformula "15"))
                                       (rule "andLeft" (formula "24"))
                                       (rule "notLeft" (formula "25"))
                                       (rule "andLeft" (formula "24"))
                                       (rule "notLeft" (formula "25"))
                                       (rule "andLeft" (formula "24"))
                                       (rule "notLeft" (formula "25"))
                                       (rule "andLeft" (formula "24"))
                                       (rule "notLeft" (formula "25"))
                                       (rule "andLeft" (formula "24"))
                                       (rule "andLeft" (formula "24"))
                                       (rule "andLeft" (formula "24"))
                                       (rule "andLeft" (formula "24"))
                                       (rule "notLeft" (formula "24"))
                                       (rule "nonNull" (formula "27") (inst "i=i"))
                                       (rule "greater_literals" (formula "27") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "48")))
                                       (rule "sub_literals" (formula "27") (term "2,1,0"))
                                       (builtin "One Step Simplification" (formula "27"))
                                       (rule "narrowSelectArrayType" (formula "27") (term "0,0,1,0") (ifseqformula "13") (ifseqformula "48"))
                                       (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                                       (rule "nonNull" (formula "26") (inst "i=i"))
                                       (rule "sub_literals" (formula "26") (term "2,1,0,1,1"))
                                       (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "47")))
                                       (rule "greater_literals" (formula "26") (term "0"))
                                       (builtin "One Step Simplification" (formula "26"))
                                       (rule "narrowSelectArrayType" (formula "26") (term "0,0,1,0") (ifseqformula "13") (ifseqformula "47"))
                                       (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                                       (rule "nonNull" (formula "25") (inst "i=i"))
                                       (rule "sub_literals" (formula "25") (term "2,1,0,1,1"))
                                       (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "46")))
                                       (rule "greater_literals" (formula "25") (term "0"))
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "narrowSelectArrayType" (formula "25") (term "0,0,1,0") (ifseqformula "13") (ifseqformula "46"))
                                       (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                       (rule "nonNull" (formula "24") (inst "i=i"))
                                       (rule "greater_literals" (formula "24") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "45")))
                                       (rule "sub_literals" (formula "24") (term "2,1,0"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "narrowSelectArrayType" (formula "24") (term "0,0,1,0") (ifseqformula "13") (ifseqformula "45"))
                                       (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                       (rule "nnf_imp2or" (formula "40") (term "0"))
                                       (rule "arrayLengthIsAShort" (formula "12") (term "1,1"))
                                       (builtin "One Step Simplification" (formula "12"))
                                       (rule "true_left" (formula "12"))
                                       (rule "arrayLengthNotNegative" (formula "12") (term "1,1"))
                                       (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "12"))
                                       (rule "leq_literals" (formula "11") (term "0"))
                                       (builtin "One Step Simplification" (formula "11"))
                                       (rule "true_left" (formula "11"))
                                       (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "39") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0"))
                                       (rule "mul_literals" (formula "39") (term "1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "39") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "39") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "42") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "42") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "42") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "42") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "42") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0"))
                                       (rule "mul_literals" (formula "42") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "41") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "41") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "41") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "41") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0"))
                                       (rule "mul_literals" (formula "41") (term "1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "41") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "41") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0"))
                                       (rule "commute_or_2" (formula "43") (term "0"))
                                       (rule "nnf_imp2or" (formula "27") (term "0"))
                                       (rule "arrayLengthIsAShort" (formula "23") (term "0"))
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "true_left" (formula "23"))
                                       (rule "arrayLengthNotNegative" (formula "23") (term "0"))
                                       (rule "commute_or_2" (formula "29") (term "0"))
                                       (rule "nnf_imp2or" (formula "27") (term "0"))
                                       (rule "lenNonNegative" (formula "37") (term "0"))
                                       (rule "inEqSimp_commuteLeq" (formula "37"))
                                       (rule "nnf_imp2or" (formula "26") (term "0"))
                                       (rule "arrayLengthNotNegative" (formula "19") (term "1,1"))
                                       (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "21"))
                                       (rule "leq_literals" (formula "19") (term "0"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "true_left" (formula "19"))
                                       (rule "arrayLengthIsAShort" (formula "19") (term "1,1"))
                                       (builtin "One Step Simplification" (formula "19"))
                                       (rule "true_left" (formula "19"))
                                       (rule "nnf_imp2or" (formula "25") (term "0"))
                                       (rule "nnf_notAnd" (formula "42") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "42") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "42") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "42") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "42") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0"))
                                       (rule "mul_literals" (formula "42") (term "1,0,0,0"))
                                       (rule "commute_or_2" (formula "22") (term "0,1,1,0"))
                                       (rule "nnf_notAnd" (formula "28") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "28") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                       (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "27") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                                       (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "27") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "26") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "26") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                       (rule "mul_literals" (formula "26") (term "1,0,0,0"))
                                       (rule "ifthenelse_to_or_left" (formula "22") (term "0,1,0"))
                                       (rule "eqSymm" (formula "22") (term "1,1,0,1,0"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "eqSymm" (formula "22") (term "1,0,0,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,1,0"))
                                       (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0,1,0"))
                                       (rule "add_literals" (formula "22") (term "0,0,0,0,0,1,0"))
                                       (rule "add_zero_left" (formula "22") (term "0,0,0,0,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "22") (term "0,1,1,0,1,0"))
                                       (rule "mul_literals" (formula "22") (term "1,0,0,0,1,1,0,1,0"))
                                       (rule "add_literals" (formula "22") (term "0,0,0,1,1,0,1,0"))
                                       (rule "add_zero_left" (formula "22") (term "0,0,1,1,0,1,0"))
                                       (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "25") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                       (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                                       (rule "equalityToSeqGetAndSeqLenLeft" (formula "40") (inst "iv=iv"))
                                       (rule "andLeft" (formula "40"))
                                       (rule "lenOfSeqConcat" (formula "40") (term "0"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "polySimp_homoEq" (formula "40"))
                                       (rule "polySimp_mulComm0" (formula "40") (term "1,0"))
                                       (rule "polySimp_addComm0" (formula "40") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "40") (term "1,0"))
                                       (rule "mul_literals" (formula "40") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "40") (term "0"))
                                       (rule "polySimp_addComm0" (formula "40") (term "0,0"))
                                       (rule "lenOfSeqConcat" (formula "41") (term "1,1,0,0"))
                                       (builtin "One Step Simplification" (formula "41"))
                                       (rule "polySimp_addComm0" (formula "41") (term "1,1,0,0"))
                                       (rule "lenOfSeqConcatEQ" (formula "40") (term "1,0,0") (ifseqformula "42"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "polySimp_addComm0" (formula "40") (term "1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "40") (term "0,0"))
                                       (rule "add_literals" (formula "40") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "40") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "40") (term "0"))
                                       (rule "add_literals" (formula "40") (term "1,0"))
                                       (rule "times_zero_1" (formula "40") (term "0"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "true_left" (formula "40"))
                                       (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "40") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "40") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0"))
                                       (rule "getOfSeqConcat" (formula "40") (term "0,1,0"))
                                       (rule "polySimp_elimSub" (formula "40") (term "1,2,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "40") (term "1,2,0,1,0"))
                                       (rule "getOfSeqSingleton" (formula "40") (term "2,0,1,0"))
                                       (rule "castDel" (formula "40") (term "1,2,0,1,0"))
                                       (rule "castDel" (formula "40") (term "2,2,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,1,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "40") (term "0,2,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "40") (term "1,0,2,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "40") (term "1,0,2,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,1,0"))
                                       (rule "getOfSeqConcatEQ" (formula "40") (term "1,1,0") (ifseqformula "41"))
                                       (rule "eqSymm" (formula "40") (term "1,0"))
                                       (rule "polySimp_elimSub" (formula "40") (term "1,2,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "40") (term "1,2,0,1,0"))
                                       (rule "getOfSeqSingleton" (formula "40") (term "2,0,1,0"))
                                       (rule "castDel" (formula "40") (term "1,2,0,1,0"))
                                       (rule "castDel" (formula "40") (term "2,2,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,1,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "40") (term "0,2,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "40") (term "1,0,2,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "40") (term "1,0,2,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0,1,0"))
                                       (builtin "One Step Simplification" (formula "40"))
                                       (rule "true_left" (formula "40"))
                                       (rule "arrayLengthNotNegative" (formula "40") (term "1,0,1,0"))
                                       (rule "arrayLengthIsAShort" (formula "41") (term "1,0,1,0"))
                                       (builtin "One Step Simplification" (formula "41"))
                                       (rule "true_left" (formula "41"))
                                       (rule "arrayLengthNotNegative" (formula "1") (term "0"))
                                       (rule "arrayLengthIsAShort" (formula "2") (term "0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "seqGetAlphaCast" (formula "9") (term "1"))
                                       (rule "castDel" (formula "9") (term "0"))
                                       (builtin "One Step Simplification" (formula "9"))
                                       (rule "true_left" (formula "9"))
                                       (rule "arrayLengthIsAShort" (formula "8") (term "1,0"))
                                       (builtin "One Step Simplification" (formula "8"))
                                       (rule "true_left" (formula "8"))
                                       (rule "arrayLengthNotNegative" (formula "8") (term "1,0"))
                                       (rule "arrayLengthIsAShort" (formula "7") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "7"))
                                       (rule "true_left" (formula "7"))
                                       (rule "arrayLengthNotNegative" (formula "7") (term "0,0,0"))
                                       (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "3"))
                                       (rule "times_zero_1" (formula "7") (term "0,0"))
                                       (rule "add_zero_left" (formula "7") (term "0"))
                                       (rule "arrayLengthNotNegative" (formula "42") (term "1,0"))
                                       (rule "arrayLengthIsAShort" (formula "43") (term "1,0"))
                                       (builtin "One Step Simplification" (formula "43"))
                                       (rule "true_left" (formula "43"))
                                       (rule "commute_or_2" (formula "46") (term "0"))
                                       (rule "commute_or_2" (formula "49") (term "0"))
                                       (rule "commute_or_2" (formula "48") (term "0"))
                                       (rule "ifthenelse_split" (formula "5") (term "0"))
                                       (branch "self.sorted.<created> = TRUE TRUE"
                                          (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "replace_known_left" (formula "6") (term "0,0,0") (ifseqformula "5"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "6"))
                                          (rule "applyEqReverse" (formula "7") (term "0,0") (ifseqformula "6"))
                                          (rule "applyEqReverse" (formula "7") (term "0,0,0,0") (ifseqformula "6"))
                                          (rule "applyEqReverse" (formula "7") (term "0,1,0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "3"))
                                          (rule "mul_literals" (formula "7") (term "0,0"))
                                          (rule "add_zero_left" (formula "7") (term "0"))
                                          (rule "commute_or" (formula "48") (term "0,0"))
                                          (rule "commute_or" (formula "30") (term "0,0"))
                                          (rule "commute_or_2" (formula "45") (term "0"))
                                          (rule "commute_or_2" (formula "29") (term "0"))
                                          (rule "commute_or_2" (formula "28") (term "0"))
                                          (rule "commute_or_2" (formula "27") (term "0"))
                                          (rule "commute_or_2" (formula "26") (term "0"))
                                          (rule "commute_or" (formula "23") (term "1,0,1,0"))
                                          (rule "commute_or" (formula "23") (term "0,0,1,1,0"))
                                          (rule "commute_or" (formula "44") (term "0,0"))
                                          (rule "commute_or" (formula "47") (term "0,0"))
                                          (rule "commute_or" (formula "46") (term "0,0"))
                                          (rule "commute_or" (formula "45") (term "0,0"))
                                          (rule "commute_or" (formula "29") (term "0,0"))
                                          (rule "commute_or" (formula "28") (term "0,0"))
                                          (rule "commute_or" (formula "27") (term "0,0"))
                                          (rule "commute_or" (formula "26") (term "0,0"))
                                          (rule "ifthenelse_to_or_left" (formula "23") (term "1,0,0,1,0"))
                                          (rule "eqSymm" (formula "23") (term "1,1,1,0,0,1,0"))
                                          (rule "eqSymm" (formula "23") (term "1,0,1,0,0,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "23") (term "0,0,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "23") (term "1,0,0,0,0,1,0,0,1,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0,0,1,0,0,1,0"))
                                          (rule "add_zero_left" (formula "23") (term "0,0,0,1,0,0,1,0"))
                                          (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "0,0") (ifseqformula "14"))
                                          (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "51"))
                                          (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "5")))
                                          (rule "true_left" (formula "25"))
                                          (rule "cnf_rightDist" (formula "23") (term "0,0,1,0"))
                                          (rule "inEqSimp_or_subsumption5" (formula "23") (term "1,0,0,1,0"))
                                          (rule "greater_literals" (formula "23") (term "0,1,0,1,0,0,1,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "shift_paren_or" (formula "23") (term "0,0,0,1,0"))
                                          (rule "commute_or" (formula "23") (term "0,0,0,0,1,0"))
                                          (rule "ifthenelse_to_or_right" (formula "23") (term "0,0,0,1,1,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "nnf_notAnd" (formula "23") (term "0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,0,0,1,1,0"))
                                          (rule "nnf_notAnd" (formula "23") (term "0,1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "23") (term "0,0,1,1,0,0,0,1,1,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "add_zero_right" (formula "23") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,1,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "23") (term "1,0,0,1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "23") (term "1,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "add_zero_left" (formula "23") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "1,1,0,1,1,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "23") (term "0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "23") (term "0,1,1,0"))
                                          (rule "commute_or" (formula "23") (term "1,1,0,1,1,0"))
                                          (rule "commute_or_2" (formula "23") (term "0,1,0,1,1,0"))
                                          (rule "commute_or_2" (formula "23") (term "0,1,1,0,1,1,0"))
                                          (rule "commute_or" (formula "23") (term "0,0,1,0,1,1,0"))
                                          (rule "commute_or" (formula "23") (term "0,0,1,1,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "23") (term "1,1,0,1,1,0"))
                                          (rule "commute_or_2" (formula "23") (term "0,1,1,0,1,1,0"))
                                          (rule "inEqSimp_or_tautInEq1" (formula "23") (term "0,0,1,1,0,1,1,0"))
                                          (rule "add_zero_right" (formula "23") (term "1,1,0,0,1,1,0,1,1,0"))
                                          (rule "qeq_literals" (formula "23") (term "1,0,0,1,1,0,1,1,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "shift_paren_or" (formula "23") (term "1,1,0,1,1,0"))
                                          (rule "commute_or" (formula "23") (term "0,1,1,0,1,1,0"))
                                          (rule "cnf_rightDist" (formula "23") (term "0,1,1,0"))
                                          (rule "commute_or_2" (formula "23") (term "0,0,1,1,0"))
                                          (rule "shift_paren_or" (formula "23") (term "1,0,1,1,0"))
                                          (rule "commute_or_2" (formula "23") (term "0,1,0,1,1,0"))
                                          (rule "shift_paren_or" (formula "23") (term "0,0,0,1,1,0"))
                                          (rule "commute_or_2" (formula "23") (term "0,0,1,0,1,1,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "shift_paren_or" (formula "23") (term "0,0,0,0,1,1,0"))
                                          (rule "commute_or" (formula "23") (term "0,0,0,0,0,1,1,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "ifthenelse_split" (formula "6") (term "0"))
                                          (branch "self.sorted[i_5].length ≥ 1 TRUE"
                                             (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "7"))
                                             (rule "andLeft" (formula "3"))
                                             (rule "inEqSimp_homoInEq1" (formula "3"))
                                             (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                             (rule "add_literals" (formula "3") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "3") (term "1,0"))
                                             (rule "add_zero_right" (formula "3") (term "0"))
                                             (rule "leq_literals" (formula "3"))
                                             (rule "closeFalse" (formula "3"))
                                          )
                                          (branch "self.sorted[i_5].length ≥ 1 FALSE"
                                             (rule "inEqSimp_geqRight" (formula "50"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_homoInEq1" (formula "7"))
                                             (rule "times_zero_2" (formula "7") (term "1,0"))
                                             (rule "add_zero_right" (formula "7") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                             (rule "mul_literals" (formula "7") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "5"))
                                             (rule "qeq_literals" (formula "7") (term "0"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "closeFalse" (formula "7"))
                                          )
                                       )
                                       (branch "self.sorted.<created> = TRUE FALSE"
                                          (rule "referencedObjectIsCreatedRight" (formula "52") (ifseqformula "53"))
                                          (rule "close" (formula "52") (ifseqformula "16"))
                                       )
                                    )
                                 )
                              )
                           )
                           (branch "CUT: array2seq(heap, messages[i_5]) = array2seq2d(heapAfter_first, messages)[i_5] FALSE"
                              (rule "hide_right" (formula "39") (userinteraction))
                              (rule "array2seq2dDef" (formula "32") (term "0,1") (inst "u=u") (userinteraction))
                              (rule "getOfSeqDef" (formula "32") (term "1") (userinteraction))
                              (rule "ifthenelse_split" (formula "32") (term "1") (userinteraction))
                              (branch "0 ≤ i_5 ∧ i_5 < messages.length - 0 TRUE"
                                 (rule "castDel" (formula "33") (term "1") (userinteraction))
                                 (rule "add_zero_right" (formula "33") (term "0,2,1,1") (userinteraction))
                                 (rule "equalityToSeqGetAndSeqLenRight" (formula "33") (inst "iv=iv") (userinteraction))
                                 (builtin "One Step Simplification" (formula "14"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (ifseqformula "19"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "1") (ifseqformula "19"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "1") (ifseqformula "24"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "25") (term "0,1") (ifseqformula "19"))
                                 (rule "andLeft" (formula "3"))
                                 (rule "andLeft" (formula "18"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "orRight" (formula "37"))
                                 (rule "notLeft" (formula "19"))
                                 (rule "eqSymm" (formula "30"))
                                 (rule "eqSymm" (formula "29"))
                                 (rule "eqSymm" (formula "2"))
                                 (rule "eqSymm" (formula "35") (term "0"))
                                 (rule "eqSymm" (formula "36"))
                                 (rule "eqSymm" (formula "27"))
                                 (rule "eqSymm" (formula "14"))
                                 (rule "eqSymm" (formula "35") (term "1,0,1"))
                                 (rule "eqSymm" (formula "15") (term "1,0"))
                                 (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "34"))
                                 (builtin "One Step Simplification" (formula "10"))
                                 (rule "replace_known_right" (formula "22") (term "0,1") (ifseqformula "41"))
                                 (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "42")))
                                 (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "39"))
                                 (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "37")) (ifInst ""  (formula "38")))
                                 (rule "polySimp_elimSub" (formula "1") (term "1"))
                                 (rule "times_zero_2" (formula "1") (term "1,1"))
                                 (rule "add_zero_right" (formula "1") (term "1"))
                                 (rule "polySimp_addComm0" (formula "5") (term "1"))
                                 (rule "lenOfSeqConcat" (formula "27") (term "0"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "polySimp_homoEq" (formula "27"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "27") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                 (rule "mul_literals" (formula "27") (term "0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "28"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "28") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "4"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                 (rule "polySimp_addComm0" (formula "27") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "lenOfSeqConcatEQ" (formula "27") (term "1,0,0") (ifseqformula "30"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "polySimp_addComm0" (formula "27") (term "1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                 (rule "add_literals" (formula "27") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "27") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "27") (term "0"))
                                 (rule "add_literals" (formula "27") (term "1,0"))
                                 (rule "times_zero_1" (formula "27") (term "0"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "true_left" (formula "27"))
                                 (rule "inEqSimp_commuteLeq" (formula "16"))
                                 (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "12"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0"))
                                 (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "5"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                 (rule "mul_literals" (formula "4") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                 (rule "add_literals" (formula "4") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "4") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,1"))
                                 (rule "mul_literals" (formula "34") (term "0,1,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                 (rule "polySimp_elimOne" (formula "27") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1"))
                                 (rule "mul_literals" (formula "12") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                 (rule "polySimp_elimOne" (formula "4") (term "0"))
                                 (rule "inEqSimp_contradEq7" (formula "35") (ifseqformula "1"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0"))
                                 (rule "add_literals" (formula "35") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "35") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "35") (term "0,0"))
                                 (rule "leq_literals" (formula "35") (term "0"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "false_right" (formula "35"))
                                 (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "4") (term "0,0"))
                                 (rule "qeq_literals" (formula "4") (term "0"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "array2seqDef" (formula "22") (term "0") (inst "u=u"))
                                 (rule "nonNull" (formula "30") (inst "i=i"))
                                 (rule "greater_literals" (formula "30") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "36")))
                                 (rule "sub_literals" (formula "30") (term "2,1,0"))
                                 (builtin "One Step Simplification" (formula "30"))
                                 (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                                 (rule "applyEq" (formula "30") (term "0,1,0,0,1,0,0") (ifseqformula "4"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                                 (rule "array2seqDef" (formula "22") (term "0,1") (inst "u=u"))
                                 (rule "array2seqDef" (formula "12") (term "0,0") (inst "u=u"))
                                 (rule "narrowSelectArrayType" (formula "12") (term "2,0,0") (ifseqformula "5") (ifseqformula "32"))
                                 (rule "nonNull" (formula "17") (inst "i=i"))
                                 (rule "greater_literals" (formula "17") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "sub_literals" (formula "17") (term "2,1,0,1"))
                                 (builtin "One Step Simplification" (formula "17"))
                                 (rule "andLeft" (formula "17"))
                                 (rule "notLeft" (formula "17"))
                                 (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "32"))
                                 (builtin "One Step Simplification" (formula "8"))
                                 (rule "narrowSelectArrayType" (formula "17") (term "0,0,1,0") (ifseqformula "5") (ifseqformula "32"))
                                 (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                                 (rule "array2seqDef" (formula "28") (term "0,1,0") (inst "u=u"))
                                 (rule "array2seqDef" (formula "27") (term "1") (inst "u=u"))
                                 (rule "eqSymm" (formula "27"))
                                 (rule "array2seqDef" (formula "2") (term "1") (inst "u=u"))
                                 (rule "eqSymm" (formula "2"))
                                 (rule "array2seqDef" (formula "34") (term "0,0,0") (inst "u=u"))
                                 (rule "lenOfSeqDef" (formula "34") (term "0,0"))
                                 (rule "polySimp_elimSub" (formula "34") (term "1,0,0"))
                                 (rule "times_zero_2" (formula "34") (term "1,1,0,0"))
                                 (rule "add_zero_right" (formula "34") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,0"))
                                 (rule "add_zero_right" (formula "34") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "34") (term "0,0,0,0"))
                                 (rule "array2seqDef" (formula "34") (term "0,1,0") (inst "u=u"))
                                 (rule "eqSymm" (formula "34") (term "0"))
                                 (rule "lenOfSeqDef" (formula "34") (term "0,0"))
                                 (rule "polySimp_elimSub" (formula "34") (term "1,0,0"))
                                 (rule "times_zero_2" (formula "34") (term "1,1,0,0"))
                                 (rule "add_zero_right" (formula "34") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,0"))
                                 (rule "add_zero_right" (formula "34") (term "0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0,0"))
                                 (rule "eqSymm" (formula "34") (term "0"))
                                 (rule "polySimp_elimOne" (formula "34") (term "0,0,1,0"))
                                 (rule "array2seqDef" (formula "13") (term "1") (inst "u=u"))
                                 (rule "eqSymm" (formula "13"))
                                 (rule "narrowSelectArrayType" (formula "13") (term "2,0") (ifseqformula "5") (ifseqformula "33"))
                                 (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "13"))
                                 (rule "array2seqDef" (formula "34") (term "0,0,1,0,1") (inst "u=u"))
                                 (rule "getOfSeqDef" (formula "34") (term "0,1,0,1"))
                                 (rule "castDel" (formula "34") (term "2,0,1,0,1"))
                                 (rule "castDel" (formula "34") (term "1,0,1,0,1"))
                                 (rule "add_zero_right" (formula "34") (term "0,2,1,0,1,0,1"))
                                 (rule "polySimp_elimSub" (formula "34") (term "1,1,0,0,1,0,1"))
                                 (rule "times_zero_2" (formula "34") (term "1,1,1,0,0,1,0,1"))
                                 (rule "add_zero_right" (formula "34") (term "1,1,0,0,1,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,1,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,1,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,1,0,1"))
                                 (rule "mul_literals" (formula "34") (term "0,1,1,0,0,1,0,1"))
                                 (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,1,0,1"))
                                 (rule "array2seqDef" (formula "34") (term "0,1,1,0,1") (inst "u=u"))
                                 (rule "eqSymm" (formula "34") (term "1,0,1"))
                                 (rule "getOfSeqDef" (formula "34") (term "0,1,0,1"))
                                 (rule "castDel" (formula "34") (term "1,0,1,0,1"))
                                 (rule "castDel" (formula "34") (term "2,0,1,0,1"))
                                 (rule "add_zero_right" (formula "34") (term "0,2,1,0,1,0,1"))
                                 (rule "polySimp_elimSub" (formula "34") (term "1,1,0,0,1,0,1"))
                                 (rule "times_zero_2" (formula "34") (term "1,1,1,0,0,1,0,1"))
                                 (rule "add_zero_right" (formula "34") (term "1,1,0,0,1,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,1,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,1,0,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,1,0,1"))
                                 (rule "eqSymm" (formula "34") (term "1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,1,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1,1,0,1,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,1,1,0,1"))
                                 (rule "mul_literals" (formula "34") (term "0,1,1,0,1,1,0,1"))
                                 (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,1,1,0,1"))
                                 (rule "array2seqDef" (formula "14") (term "0,1,0") (inst "u=u"))
                                 (rule "array2seqDef" (formula "14") (term "1,1,0") (inst "u=u"))
                                 (rule "array2seqDef" (formula "34") (term "0,1,1,1,0,0,1") (inst "u=u"))
                                 (rule "lenOfSeqDef" (formula "34") (term "1,1,1,0,0,1"))
                                 (rule "polySimp_elimSub" (formula "34") (term "1,1,1,1,0,0,1"))
                                 (rule "times_zero_2" (formula "34") (term "1,1,1,1,1,0,0,1"))
                                 (rule "add_zero_right" (formula "34") (term "1,1,1,1,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "34") (term "0,1,1,1,0,0,1"))
                                 (rule "add_zero_right" (formula "34") (term "0,0,1,1,1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,1,1,0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,1,1,1,0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "0,0,1,1,1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "34") (term "0,0,1,1,1,0,0,1"))
                                 (rule "array2seqDef" (formula "11") (term "0,0") (inst "u=u"))
                                 (rule "narrowSelectArrayType" (formula "11") (term "2,0,0") (ifseqformula "5") (ifseqformula "33"))
                                 (rule "applyEq" (formula "11") (term "0,0") (ifseqformula "13"))
                                 (rule "array2seqDef" (formula "2") (term "1") (inst "u=u"))
                                 (rule "eqSymm" (formula "2"))
                                 (rule "eqSeqDef" (formula "14") (term "1,0") (inst "iv=iv"))
                                 (rule "getOfSeqDef" (formula "14") (term "0,1,0,1,1,0"))
                                 (rule "castDel" (formula "14") (term "2,0,1,0,1,1,0"))
                                 (rule "castDel" (formula "14") (term "1,0,1,0,1,1,0"))
                                 (rule "add_zero_right" (formula "14") (term "0,2,1,0,1,0,1,1,0"))
                                 (rule "eqSymm" (formula "14") (term "1,0,1,1,0"))
                                 (rule "polySimp_elimSub" (formula "14") (term "1,1,0,1,1,0,1,1,0"))
                                 (rule "times_zero_2" (formula "14") (term "1,1,1,0,1,1,0,1,1,0"))
                                 (rule "add_zero_right" (formula "14") (term "1,1,0,1,1,0,1,1,0"))
                                 (rule "lenOfSeqDef" (formula "14") (term "0,0,1,0"))
                                 (rule "eqSymm" (formula "14") (term "0,1,0"))
                                 (rule "polySimp_elimSub" (formula "14") (term "1,1,0,1,0"))
                                 (rule "times_zero_2" (formula "14") (term "1,1,1,0,1,0"))
                                 (rule "add_zero_right" (formula "14") (term "1,1,0,1,0"))
                                 (rule "lenOfSeqDef" (formula "14") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_elimSub" (formula "14") (term "1,1,1,0,0,1,1,0"))
                                 (rule "times_zero_2" (formula "14") (term "1,1,1,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "14") (term "1,1,1,0,0,1,1,0"))
                                 (rule "getOfSeqDef" (formula "14") (term "0,1,0,1,1,0"))
                                 (rule "castDel" (formula "14") (term "2,0,1,0,1,1,0"))
                                 (rule "castDel" (formula "14") (term "1,0,1,0,1,1,0"))
                                 (rule "add_zero_right" (formula "14") (term "0,2,1,0,1,0,1,1,0"))
                                 (rule "eqSymm" (formula "14") (term "1,0,1,1,0"))
                                 (rule "polySimp_elimSub" (formula "14") (term "1,1,0,1,1,0,1,1,0"))
                                 (rule "times_zero_2" (formula "14") (term "1,1,1,0,1,1,0,1,1,0"))
                                 (rule "add_zero_right" (formula "14") (term "1,1,0,1,1,0,1,1,0"))
                                 (rule "lenOfSeqDef" (formula "14") (term "0,0,1,0"))
                                 (rule "eqSymm" (formula "14") (term "0,1,0"))
                                 (rule "polySimp_elimSub" (formula "14") (term "1,1,0,1,0"))
                                 (rule "times_zero_2" (formula "14") (term "1,1,1,0,1,0"))
                                 (rule "add_zero_right" (formula "14") (term "1,1,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "14") (term "0,1,1,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "14") (term "0,0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0,1,1,0"))
                                 (rule "eqSymm" (formula "14") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,1,1,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "14") (term "0,1,0,1,0"))
                                 (rule "add_zero_right" (formula "14") (term "0,0,1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0,1,0"))
                                 (rule "add_zero_right" (formula "14") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0,1,0,1,1,0"))
                                 (rule "eqSymm" (formula "14") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,1,1,0,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,1,1,0,1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "0,0,1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "0,0,1,0,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "0,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0,1,1,0"))
                                 (rule "eqSymm" (formula "14") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,1,1,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,1,0,1,1,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,1,1,0,1,1,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,1,0,1,1,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,1,1,0,1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,1,1,1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "0,0,1,1,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "0,0,1,1,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0,1,0,1,1,0"))
                                 (rule "eqSymm" (formula "14") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,1,1,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,1,0,1,1,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,1,1,0,1,1,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,1,0,1,1,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,1,1,0,1,1,0"))
                                 (rule "eqSeqDef2" (formula "22") (inst "iv=iv") (ifseqformula "22"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "true_left" (formula "22"))
                                 (rule "eqSeqDef" (formula "2") (inst "iv=iv"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "lenOfSeqDef" (formula "2") (term "0"))
                                 (rule "eqSymm" (formula "2"))
                                 (rule "polySimp_elimSub" (formula "2") (term "1,1"))
                                 (rule "times_zero_2" (formula "2") (term "1,1,1"))
                                 (rule "add_zero_right" (formula "2") (term "1,1"))
                                 (rule "lenOfSeqDef" (formula "3") (term "1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "3") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "3") (term "1,1,1,1,0,0"))
                                 (rule "add_zero_right" (formula "3") (term "1,1,1,0,0"))
                                 (rule "getOfSeqDef" (formula "3") (term "0,1,0"))
                                 (rule "castDel" (formula "3") (term "2,0,1,0"))
                                 (rule "castDel" (formula "3") (term "1,0,1,0"))
                                 (rule "add_zero_right" (formula "3") (term "0,2,1,0,1,0"))
                                 (rule "eqSymm" (formula "3") (term "1,0"))
                                 (rule "polySimp_elimSub" (formula "3") (term "1,1,0,1,1,0"))
                                 (rule "times_zero_2" (formula "3") (term "1,1,1,0,1,1,0"))
                                 (rule "add_zero_right" (formula "3") (term "1,1,0,1,1,0"))
                                 (rule "lenOfSeqDef" (formula "2") (term "0"))
                                 (rule "eqSymm" (formula "2"))
                                 (rule "polySimp_elimSub" (formula "2") (term "1,1"))
                                 (rule "times_zero_2" (formula "2") (term "1,1,1"))
                                 (rule "add_zero_right" (formula "2") (term "1,1"))
                                 (rule "getOfSeqDef" (formula "3") (term "0,1,0"))
                                 (rule "castDel" (formula "3") (term "2,0,1,0"))
                                 (rule "castDel" (formula "3") (term "1,0,1,0"))
                                 (rule "add_zero_right" (formula "3") (term "0,2,1,0,1,0"))
                                 (rule "eqSymm" (formula "3") (term "1,0"))
                                 (rule "polySimp_elimSub" (formula "3") (term "1,1,0,1,1,0"))
                                 (rule "times_zero_2" (formula "3") (term "1,1,1,0,1,1,0"))
                                 (rule "add_zero_right" (formula "3") (term "1,1,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3") (term "0,1,1,0,0"))
                                 (rule "add_zero_right" (formula "3") (term "0,0,1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "2") (term "0,1"))
                                 (rule "add_zero_right" (formula "2") (term "0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0,1,0"))
                                 (rule "eqSymm" (formula "3") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0,1,0"))
                                 (rule "eqSymm" (formula "3") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0,1,0"))
                                 (rule "applyEq" (formula "3") (term "0,1,0,0,1,0,0") (ifseqformula "2"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0,0,1"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0,0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0,1,0"))
                                 (rule "eqSymm" (formula "3") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,1,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,1,1,0"))
                                 (rule "mul_literals" (formula "3") (term "0,1,1,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "3") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0,1,0"))
                                 (rule "eqSymm" (formula "3") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,1,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,1,1,0"))
                                 (rule "mul_literals" (formula "3") (term "0,1,1,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,1,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0,0,1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0,0,1,1,1,0,0"))
                                 (rule "eqSeqDef2" (formula "14") (inst "iv=iv") (ifseqformula "14"))
                                 (builtin "One Step Simplification" (formula "14"))
                                 (rule "true_left" (formula "14"))
                                 (rule "pullOutSelect" (formula "26") (term "1,2,0") (inst "selectSK=arr_40"))
                                 (rule "applyEq" (formula "27") (term "0,1,0") (ifseqformula "26"))
                                 (rule "simplifySelectOfAnonEQ" (formula "26") (ifseqformula "23"))
                                 (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "37")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,0,0") (ifseqformula "19"))
                                 (rule "replace_known_right" (formula "26") (term "0,0,0,0") (ifseqformula "35"))
                                 (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "36")))
                                 (rule "applyEqReverse" (formula "27") (term "0,1,0") (ifseqformula "26"))
                                 (rule "applyEqReverse" (formula "27") (term "1,2,0") (ifseqformula "26"))
                                 (rule "hideAuxiliaryEq" (formula "26"))
                                 (rule "pullOutSelect" (formula "33") (term "0,1,0,0") (inst "selectSK=arr_41"))
                                 (rule "applyEq" (formula "34") (term "0,0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "34") (term "0,1,1,1,0,0,1,0,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "34") (term "1,1,0,1,0,1") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")) (ifInst ""  (formula "10")))
                                 (rule "applyEqReverse" (formula "34") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "34") (term "0,0,0,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "allRight" (formula "34") (inst "sk=iv_2"))
                                 (rule "impRight" (formula "34"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "applyEqReverse" (formula "36") (term "1,1,0") (ifseqformula "3"))
                                 (rule "applyEqReverse" (formula "36") (term "0,1,1,1,0,0") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "replace_known_left" (formula "35") (term "0,0,1") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "1")))
                                 (rule "inEqSimp_homoInEq0" (formula "2"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "inEqSimp_homoInEq0" (formula "35") (term "0,1"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0,0,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "35") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1"))
                                 (rule "mul_literals" (formula "2") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,1"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,1"))
                                 (rule "polySimp_elimOne" (formula "35") (term "1,1,0,1"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0"))
                                 (rule "pullOutSelect" (formula "35") (term "1,0") (inst "selectSK=arr_42"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "eqSymm" (formula "36"))
                                 (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "15"))
                                 (rule "times_zero_1" (formula "16") (term "0,0"))
                                 (rule "add_zero_left" (formula "16") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                 (rule "mul_literals" (formula "16") (term "1"))
                                 (rule "nnf_imp2or" (formula "33") (term "0"))
                                 (rule "nnf_imp2or" (formula "21") (term "0"))
                                 (rule "nnf_imp2or" (formula "18") (term "0"))
                                 (rule "nnf_imp2or" (formula "6") (term "0"))
                                 (rule "nnf_notAnd" (formula "33") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0"))
                                 (rule "mul_literals" (formula "33") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "33") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                                 (rule "mul_literals" (formula "33") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "21") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
                                 (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "21") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                                 (rule "mul_literals" (formula "21") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "21") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                 (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "6") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "6") (term "0,0,0"))
                                 (rule "mul_literals" (formula "6") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "6") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
                                 (rule "mul_literals" (formula "6") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "6") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "6") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0"))
                                 (rule "nnf_imp2or" (formula "18") (term "0,1,1,0"))
                                 (rule "nnf_notAnd" (formula "18") (term "0,0,1,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0,1,1,0"))
                                 (rule "add_zero_right" (formula "18") (term "0,0,0,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "18") (term "1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,1,1,0"))
                                 (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,1,1,0"))
                                 (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,1,1,0"))
                                 (rule "add_zero_left" (formula "18") (term "0,0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,1,1,0"))
                                 (rule "arrayLengthIsAShort" (formula "8") (term "0"))
                                 (builtin "One Step Simplification" (formula "8"))
                                 (rule "true_left" (formula "8"))
                                 (rule "arrayLengthNotNegative" (formula "8") (term "0"))
                                 (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                 (rule "mul_literals" (formula "8") (term "1"))
                                 (rule "arrayLengthIsAShort" (formula "9") (term "1,1"))
                                 (builtin "One Step Simplification" (formula "9"))
                                 (rule "true_left" (formula "9"))
                                 (rule "arrayLengthNotNegative" (formula "9") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "9"))
                                 (rule "leq_literals" (formula "8") (term "0"))
                                 (builtin "One Step Simplification" (formula "8"))
                                 (rule "true_left" (formula "8"))
                                 (rule "arrayLengthNotNegative" (formula "20") (term "0"))
                                 (rule "arrayLengthIsAShort" (formula "21") (term "0"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "true_left" (formula "21"))
                                 (rule "lenNonNegative" (formula "31") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "31"))
                                 (rule "arrayLengthIsAShort" (formula "16") (term "1,1"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "arrayLengthNotNegative" (formula "16") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "18"))
                                 (rule "leq_literals" (formula "16") (term "0"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "true_left" (formula "16"))
                                 (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "22") (ifseqformula "12"))
                                 (rule "andLeft" (formula "22"))
                                 (rule "andLeft" (formula "22"))
                                 (rule "notLeft" (formula "24"))
                                 (rule "notLeft" (formula "23"))
                                 (rule "andLeft" (formula "22"))
                                 (rule "andLeft" (formula "22"))
                                 (rule "notLeft" (formula "24"))
                                 (rule "andLeft" (formula "22"))
                                 (rule "notLeft" (formula "24"))
                                 (rule "andLeft" (formula "22"))
                                 (rule "andLeft" (formula "22"))
                                 (rule "andLeft" (formula "22"))
                                 (rule "notLeft" (formula "22"))
                                 (rule "nonNull" (formula "25") (inst "i=i"))
                                 (rule "greater_literals" (formula "25") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "sub_literals" (formula "25") (term "2,1,0,1"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "andLeft" (formula "25"))
                                 (rule "notLeft" (formula "25"))
                                 (rule "narrowSelectArrayType" (formula "25") (term "0,0,1,0") (ifseqformula "10") (ifseqformula "41"))
                                 (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                 (rule "nonNull" (formula "24") (inst "i=i"))
                                 (rule "greater_literals" (formula "24") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "sub_literals" (formula "24") (term "2,1,0,1"))
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "andLeft" (formula "24"))
                                 (rule "notLeft" (formula "24"))
                                 (rule "narrowSelectArrayType" (formula "24") (term "0,0,1,0") (ifseqformula "10") (ifseqformula "41"))
                                 (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                 (rule "nonNull" (formula "23") (inst "i=i"))
                                 (rule "greater_literals" (formula "23") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "sub_literals" (formula "23") (term "2,1,0,1"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "andLeft" (formula "23"))
                                 (rule "notLeft" (formula "23"))
                                 (rule "narrowSelectArrayType" (formula "23") (term "0,0,1,0") (ifseqformula "10") (ifseqformula "41"))
                                 (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                                 (rule "nonNull" (formula "22") (inst "i=i"))
                                 (rule "greater_literals" (formula "22") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "sub_literals" (formula "22") (term "2,1,0,1"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "andLeft" (formula "22"))
                                 (rule "notLeft" (formula "22"))
                                 (rule "narrowSelectArrayType" (formula "22") (term "0,0,1,0") (ifseqformula "10") (ifseqformula "41"))
                                 (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
                                 (rule "nnf_imp2or" (formula "25") (term "0"))
                                 (rule "nnf_imp2or" (formula "24") (term "0"))
                                 (rule "nnf_imp2or" (formula "23") (term "0"))
                                 (rule "nnf_imp2or" (formula "22") (term "0"))
                                 (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "25") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                 (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "24") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                                 (rule "mul_literals" (formula "24") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "24") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                                 (rule "mul_literals" (formula "24") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "23") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "23") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "23") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                                 (rule "mul_literals" (formula "23") (term "1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "22") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "22") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
                                 (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "22") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
                                 (rule "mul_literals" (formula "22") (term "1,0,0,0"))
                                 (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "38") (ifseqformula "12"))
                                 (rule "andLeft" (formula "38"))
                                 (rule "notLeft" (formula "39"))
                                 (rule "andLeft" (formula "38"))
                                 (rule "andLeft" (formula "38"))
                                 (rule "notLeft" (formula "40"))
                                 (rule "notLeft" (formula "39"))
                                 (rule "andLeft" (formula "38"))
                                 (rule "notLeft" (formula "39"))
                                 (rule "andLeft" (formula "38"))
                                 (rule "andLeft" (formula "38"))
                                 (rule "andLeft" (formula "38"))
                                 (rule "andLeft" (formula "38"))
                                 (rule "notLeft" (formula "38"))
                                 (rule "nonNull" (formula "41") (inst "i=i"))
                                 (rule "sub_literals" (formula "41") (term "2,1,0,1,1"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "greater_literals" (formula "41") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "andLeft" (formula "41"))
                                 (rule "notLeft" (formula "41"))
                                 (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "41") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0"))
                                 (rule "nonNull" (formula "40") (inst "i=i"))
                                 (rule "greater_literals" (formula "40") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "sub_literals" (formula "40") (term "2,1,0,1"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "andLeft" (formula "40"))
                                 (rule "notLeft" (formula "40"))
                                 (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "40") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0"))
                                 (rule "nonNull" (formula "39") (inst "i=i"))
                                 (rule "sub_literals" (formula "39") (term "2,1,0,1,1"))
                                 (builtin "One Step Simplification" (formula "39"))
                                 (rule "greater_literals" (formula "39") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "39"))
                                 (rule "andLeft" (formula "39"))
                                 (rule "notLeft" (formula "39"))
                                 (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "39") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0"))
                                 (rule "nonNull" (formula "38") (inst "i=i"))
                                 (rule "sub_literals" (formula "38") (term "2,1,0,1,1"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "greater_literals" (formula "38") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "andLeft" (formula "38"))
                                 (rule "notLeft" (formula "38"))
                                 (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "38") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,0"))
                                 (rule "pullOutSelect" (formula "52") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "69")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "29"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "12"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "69")) (ifInst ""  (formula "12")))
                                 (rule "applyEqReverse" (formula "53") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "29"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "12"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")) (ifInst ""  (formula "12")))
                                 (rule "applyEqReverse" (formula "52") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "50") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "29"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "12"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")) (ifInst ""  (formula "12")))
                                 (rule "applyEqReverse" (formula "51") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "49") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "29"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "12"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")) (ifInst ""  (formula "12")))
                                 (rule "applyEqReverse" (formula "50") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "33"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "29"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "12"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "65")) (ifInst ""  (formula "12")))
                                 (rule "applyEqReverse" (formula "49") (term "0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "41") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_3"))
                                 (rule "applyEq" (formula "42") (term "0,1,1,1,0,0") (ifseqformula "41"))
                                 (rule "applyEq" (formula "48") (term "0") (ifseqformula "41"))
                                 (rule "simplifySelectOfAnonEQ" (formula "41") (ifseqformula "32"))
                                 (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "64")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "41") (term "0,0,0") (ifseqformula "28"))
                                 (rule "replace_known_left" (formula "41") (term "0,0,0,0") (ifseqformula "11"))
                                 (builtin "One Step Simplification" (formula "41"))
                                 (rule "simplifySelectOfAnonEQ" (formula "41") (ifseqformula "28"))
                                 (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "64")) (ifInst ""  (formula "11")))
                                 (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "41"))
                                 (rule "applyEqReverse" (formula "42") (term "1,0,0,1,0") (ifseqformula "41"))
                                 (rule "applyEqReverse" (formula "42") (term "0,1,1,1,0,0") (ifseqformula "41"))
                                 (rule "hideAuxiliaryEq" (formula "41"))
                                 (rule "pullOutSelect" (formula "40") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_3"))
                                 (rule "applyEq" (formula "47") (term "0") (ifseqformula "40"))
                                 (rule "applyEq" (formula "41") (term "0,1,1,1,0,0") (ifseqformula "40"))
                                 (rule "simplifySelectOfAnonEQ" (formula "40") (ifseqformula "32"))
                                 (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "63")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,0,0") (ifseqformula "28"))
                                 (rule "replace_known_left" (formula "40") (term "0,0,0,0") (ifseqformula "11"))
                                 (builtin "One Step Simplification" (formula "40"))
                                 (rule "simplifySelectOfAnonEQ" (formula "40") (ifseqformula "28"))
                                 (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "63")) (ifInst ""  (formula "11")))
                                 (rule "applyEqReverse" (formula "41") (term "0,1,1,1,0,0") (ifseqformula "40"))
                                 (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "40"))
                                 (rule "applyEqReverse" (formula "41") (term "1,0,0,1,0") (ifseqformula "40"))
                                 (rule "hideAuxiliaryEq" (formula "40"))
                                 (rule "pullOutSelect" (formula "39") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_3"))
                                 (rule "applyEq" (formula "40") (term "0,1,1,1,0,0") (ifseqformula "39"))
                                 (rule "applyEq" (formula "46") (term "0") (ifseqformula "39"))
                                 (rule "simplifySelectOfAnonEQ" (formula "39") (ifseqformula "32"))
                                 (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "62")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "0,0,0") (ifseqformula "28"))
                                 (rule "replace_known_left" (formula "39") (term "0,0,0,0") (ifseqformula "11"))
                                 (builtin "One Step Simplification" (formula "39"))
                                 (rule "simplifySelectOfAnonEQ" (formula "39") (ifseqformula "28"))
                                 (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "62")) (ifInst ""  (formula "11")))
                                 (rule "applyEqReverse" (formula "40") (term "1,0,0,1,0") (ifseqformula "39"))
                                 (rule "applyEqReverse" (formula "40") (term "0,1,1,1,0,0") (ifseqformula "39"))
                                 (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "39"))
                                 (rule "hideAuxiliaryEq" (formula "39"))
                                 (rule "pullOutSelect" (formula "38") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_10"))
                                 (rule "applyEq" (formula "45") (term "0") (ifseqformula "38"))
                                 (rule "applyEq" (formula "39") (term "0,1,1,1,0,0") (ifseqformula "38"))
                                 (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "32"))
                                 (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "61")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "0,0,0") (ifseqformula "28"))
                                 (rule "replace_known_left" (formula "38") (term "0,0,0,0") (ifseqformula "11"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "28"))
                                 (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "61")) (ifInst ""  (formula "11")))
                                 (rule "applyEqReverse" (formula "39") (term "1,0,0,1,0") (ifseqformula "38"))
                                 (rule "applyEqReverse" (formula "45") (term "0") (ifseqformula "38"))
                                 (rule "applyEqReverse" (formula "39") (term "0,1,1,1,0,0") (ifseqformula "38"))
                                 (rule "hideAuxiliaryEq" (formula "38"))
                                 (rule "arrayLengthNotNegative" (formula "37") (term "1,0,1,0"))
                                 (rule "equalityToSeqGetAndSeqLenLeft" (formula "38") (inst "iv=iv"))
                                 (rule "andLeft" (formula "38"))
                                 (rule "lenOfSeqConcat" (formula "39") (term "1,1,0,0"))
                                 (builtin "One Step Simplification" (formula "39"))
                                 (rule "polySimp_addComm0" (formula "39") (term "1,1,0,0"))
                                 (rule "lenOfSeqConcatEQ" (formula "38") (term "1") (ifseqformula "40"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "polySimp_addComm0" (formula "38") (term "1"))
                                 (rule "lenOfSeqConcat" (formula "38") (term "0"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "polySimp_homoEq" (formula "38"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "38") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1,0"))
                                 (rule "mul_literals" (formula "38") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "38") (term "0"))
                                 (rule "polySimp_addComm1" (formula "38") (term "0,0"))
                                 (rule "add_literals" (formula "38") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "38") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "38") (term "0"))
                                 (rule "add_literals" (formula "38") (term "1,0"))
                                 (rule "times_zero_1" (formula "38") (term "0"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "true_left" (formula "38"))
                                 (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
                                 (rule "add_zero_left" (formula "38") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0"))
                                 (rule "getOfSeqConcat" (formula "38") (term "0,1,0"))
                                 (rule "polySimp_elimSub" (formula "38") (term "1,2,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "38") (term "1,2,0,1,0"))
                                 (rule "getOfSeqSingleton" (formula "38") (term "2,0,1,0"))
                                 (rule "castDel" (formula "38") (term "1,2,0,1,0"))
                                 (rule "castDel" (formula "38") (term "2,2,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,1,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "38") (term "0,2,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,0,2,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "38") (term "1,0,2,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,1,0"))
                                 (rule "getOfSeqConcatEQ" (formula "38") (term "1,1,0") (ifseqformula "39"))
                                 (rule "eqSymm" (formula "38") (term "1,0"))
                                 (rule "polySimp_elimSub" (formula "38") (term "1,2,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "38") (term "1,2,0,1,0"))
                                 (rule "getOfSeqSingleton" (formula "38") (term "2,0,1,0"))
                                 (rule "castDel" (formula "38") (term "1,2,0,1,0"))
                                 (rule "castDel" (formula "38") (term "2,2,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,1,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "38") (term "0,2,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,0,2,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "38") (term "1,0,2,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,1,0"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "true_left" (formula "38"))
                                 (rule "arrayLengthIsAShort" (formula "38") (term "1,0,1,0"))
                                 (builtin "One Step Simplification" (formula "38"))
                                 (rule "true_left" (formula "38"))
                                 (rule "seqGetAlphaCast" (formula "36") (term "1"))
                                 (rule "castDel" (formula "36") (term "0"))
                                 (builtin "One Step Simplification" (formula "36"))
                                 (rule "true_left" (formula "36"))
                                 (rule "commute_or_2" (formula "43") (term "0"))
                                 (rule "commute_or_2" (formula "26") (term "0"))
                                 (rule "commute_or_2" (formula "6") (term "0"))
                                 (rule "nnf_imp2or" (formula "42") (term "0"))
                                 (rule "commute_or_2" (formula "19") (term "0,1,1,0"))
                                 (rule "ifthenelse_to_or_right" (formula "19") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "inEqSimp_notGeq" (formula "19") (term "0,1,1,0,1,0"))
                                 (rule "mul_literals" (formula "19") (term "1,0,0,0,1,1,0,1,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,1,1,0,1,0"))
                                 (rule "add_zero_left" (formula "19") (term "0,0,1,1,0,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0,1,0"))
                                 (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0,1,0"))
                                 (rule "add_literals" (formula "19") (term "0,0,0,0,0,1,0"))
                                 (rule "add_zero_left" (formula "19") (term "0,0,0,0,1,0"))
                                 (rule "ifthenelse_split" (formula "5") (term "1"))
                                 (branch "messages[i_5].length ≥ 1 TRUE"
                                    (rule "replace_known_left" (formula "7") (term "0,1,1,0") (ifseqformula "5"))
                                    (builtin "One Step Simplification" (formula "7"))
                                    (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "5"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "replace_known_left" (formula "57") (term "0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "3")))
                                    (rule "nnf_imp2or" (formula "42") (term "0"))
                                    (rule "nnf_imp2or" (formula "41") (term "0"))
                                    (rule "ifthenelse_split" (formula "6") (term "0"))
                                    (branch "self.sorted[i_5].length ≥ 1 TRUE"
                                       (rule "applyEq" (formula "8") (term "1,1,1,0,0,1,0,0") (ifseqformula "7"))
                                       (rule "applyEq" (formula "6") (term "0") (ifseqformula "7"))
                                       (rule "nnf_imp2or" (formula "40") (term "0"))
                                       (rule "commute_or_2" (formula "26") (term "0"))
                                       (rule "commute_or_2" (formula "25") (term "0"))
                                       (rule "commute_or_2" (formula "24") (term "0"))
                                       (rule "ifthenelse_split" (formula "1") (term "0"))
                                       (branch "¬messages[i_5] = null ∧ ¬messages[i_5].<created> = TRUE TRUE"
                                          (rule "andLeft" (formula "1"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "referencedObjectIsCreatedRight" (formula "47") (ifseqformula "46"))
                                          (rule "close" (formula "47") (ifseqformula "11"))
                                       )
                                       (branch "¬messages[i_5] = null ∧ ¬messages[i_5].<created> = TRUE FALSE"
                                          (rule "close" (formula "58") (ifseqformula "1"))
                                       )
                                    )
                                    (branch "self.sorted[i_5].length ≥ 1 FALSE"
                                       (rule "eqSymm" (formula "6"))
                                       (rule "inEqSimp_geqRight" (formula "46"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "applyEq" (formula "8") (term "1,1,0") (ifseqformula "7"))
                                       (rule "applyEq" (formula "4") (term "0") (ifseqformula "7"))
                                       (rule "inEqSimp_homoInEq1" (formula "4"))
                                       (rule "times_zero_2" (formula "4") (term "1,0"))
                                       (rule "add_zero_right" (formula "4") (term "0"))
                                       (rule "applyEq" (formula "6") (term "0") (ifseqformula "7"))
                                       (rule "qeq_literals" (formula "6"))
                                       (rule "closeFalse" (formula "6"))
                                    )
                                 )
                                 (branch "messages[i_5].length ≥ 1 FALSE"
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "replace_known_right" (formula "6") (term "0,1,1,0") (ifseqformula "45"))
                                    (builtin "One Step Simplification" (formula "6"))
                                    (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "45"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "inEqSimp_geqRight" (formula "45"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "4"))
                                    (rule "mul_literals" (formula "4") (term "1,0"))
                                    (rule "add_zero_right" (formula "4") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                    (rule "mul_literals" (formula "4") (term "1"))
                                    (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "4") (term "0"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "closeFalse" (formula "4"))
                                 )
                              )
                              (branch "0 ≤ i_5 ∧ i_5 < messages.length - 0 FALSE"
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (ifseqformula "18"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "1") (ifseqformula "18"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "1") (ifseqformula "23"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,1") (ifseqformula "18"))
                                 (rule "castDel" (formula "33") (term "1"))
                                 (rule "andLeft" (formula "16"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "orRight" (formula "37"))
                                 (rule "notLeft" (formula "18"))
                                 (rule "eqSymm" (formula "13"))
                                 (rule "eqSymm" (formula "29"))
                                 (rule "eqSymm" (formula "28"))
                                 (rule "eqSymm" (formula "36"))
                                 (rule "eqSymm" (formula "1"))
                                 (rule "eqSymm" (formula "26"))
                                 (rule "eqSymm" (formula "14") (term "1,0"))
                                 (rule "eqSymm" (formula "35"))
                                 (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "33"))
                                 (builtin "One Step Simplification" (formula "9"))
                                 (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "34"))
                                 (rule "replace_known_right" (formula "21") (term "0") (ifseqformula "42"))
                                 (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "41")))
                                 (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "39"))
                                 (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "37")) (ifInst ""  (formula "38")))
                                 (rule "polySimp_elimSub" (formula "34") (term "1"))
                                 (rule "times_zero_2" (formula "34") (term "1,1"))
                                 (rule "add_zero_right" (formula "34") (term "1"))
                                 (rule "polySimp_addComm0" (formula "4") (term "1"))
                                 (rule "lenOfSeqConcat" (formula "26") (term "0"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "polySimp_homoEq" (formula "26"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "26") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                 (rule "mul_literals" (formula "26") (term "0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "27"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "27") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                 (rule "polySimp_addComm0" (formula "26") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "inEqSimp_ltRight" (formula "34"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0"))
                                 (rule "lenOfSeqConcatEQ" (formula "27") (term "1,0,0") (ifseqformula "30"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "polySimp_addComm0" (formula "27") (term "1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                 (rule "add_literals" (formula "27") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "27") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "27") (term "0"))
                                 (rule "add_literals" (formula "27") (term "1,0"))
                                 (rule "times_zero_1" (formula "27") (term "0"))
                                 (builtin "One Step Simplification" (formula "27"))
                                 (rule "true_left" (formula "27"))
                                 (rule "inEqSimp_commuteLeq" (formula "16"))
                                 (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "12"))
                                 (rule "polySimp_addComm1" (formula "12") (term "0"))
                                 (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "5"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                 (rule "mul_literals" (formula "4") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                 (rule "add_literals" (formula "4") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "4") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                 (rule "polySimp_elimOne" (formula "27") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1"))
                                 (rule "mul_literals" (formula "12") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                 (rule "polySimp_elimOne" (formula "4") (term "0"))
                                 (rule "inEqSimp_strengthen1" (formula "4") (ifseqformula "35"))
                                 (rule "inEqSimp_contradEq7" (formula "35") (ifseqformula "4"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0"))
                                 (rule "add_literals" (formula "35") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "35") (term "1,0,0"))
                                 (rule "add_literals" (formula "35") (term "0,0"))
                                 (rule "leq_literals" (formula "35") (term "0"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "false_right" (formula "35"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "4"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0"))
                                 (rule "add_zero_right" (formula "1") (term "0"))
                                 (rule "leq_literals" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                        )
                        (branch "i_5 < array2seq2d(heapAfter_first, messages).length FALSE"
                           (rule "array2seq2dDef" (formula "31") (term "0,1") (inst "u=u") (userinteraction))
                           (builtin "One Step Simplification" (formula "13"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (ifseqformula "18"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "20") (term "1") (ifseqformula "18"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "1") (ifseqformula "23"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,1") (ifseqformula "18"))
                           (rule "andLeft" (formula "2"))
                           (rule "andLeft" (formula "17"))
                           (rule "orRight" (formula "35"))
                           (rule "notLeft" (formula "18"))
                           (rule "eqSymm" (formula "41"))
                           (rule "eqSymm" (formula "27"))
                           (rule "eqSymm" (formula "34"))
                           (rule "eqSymm" (formula "13"))
                           (rule "eqSymm" (formula "26"))
                           (rule "eqSymm" (formula "1"))
                           (rule "eqSymm" (formula "28"))
                           (rule "eqSymm" (formula "14") (term "1,0"))
                           (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "32"))
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "replace_known_right" (formula "21") (term "0,1") (ifseqformula "39"))
                           (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "40")))
                           (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "37"))
                           (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "35")) (ifInst ""  (formula "36")))
                           (rule "polySimp_elimSub" (formula "27") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "4") (term "1"))
                           (rule "lenOfSeqDef" (formula "33") (term "1"))
                           (rule "polySimp_elimSub" (formula "33") (term "1,1"))
                           (rule "times_zero_2" (formula "33") (term "1,1,1"))
                           (rule "add_zero_right" (formula "33") (term "1,1"))
                           (rule "lenOfSeqConcat" (formula "26") (term "0"))
                           (builtin "One Step Simplification" (formula "26"))
                           (rule "polySimp_homoEq" (formula "26"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "26") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                           (rule "mul_literals" (formula "26") (term "0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                           (rule "getOfSeqSingleton" (formula "27") (term "0"))
                           (rule "castDel" (formula "27") (term "1,0"))
                           (rule "castDel" (formula "27") (term "2,0"))
                           (rule "inEqSimp_ltToLeq" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "polySimp_addAssoc" (formula "26") (term "0"))
                           (rule "polySimp_addComm0" (formula "26") (term "0,0"))
                           (rule "inEqSimp_ltRight" (formula "33"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0"))
                           (rule "lenOfSeqConcatEQ" (formula "27") (term "1,0,0") (ifseqformula "29"))
                           (builtin "One Step Simplification" (formula "27"))
                           (rule "polySimp_addComm0" (formula "27") (term "1,0,0"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                           (rule "add_literals" (formula "27") (term "0,0,0"))
                           (rule "add_zero_left" (formula "27") (term "0,0"))
                           (rule "polySimp_pullOutFactor1" (formula "27") (term "0"))
                           (rule "add_literals" (formula "27") (term "1,0"))
                           (rule "times_zero_1" (formula "27") (term "0"))
                           (builtin "One Step Simplification" (formula "27"))
                           (rule "true_left" (formula "27"))
                           (rule "inEqSimp_commuteLeq" (formula "16"))
                           (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "3"))
                           (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,1,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,0"))
                           (rule "inEqSimp_homoInEq1" (formula "12"))
                           (rule "polySimp_addComm1" (formula "12") (term "0"))
                           (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "5"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                           (rule "mul_literals" (formula "4") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0"))
                           (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                           (rule "add_literals" (formula "4") (term "0,0,0"))
                           (rule "add_zero_left" (formula "4") (term "0,0"))
                           (rule "polySimp_sepNegMonomial" (formula "27") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "27") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1"))
                           (rule "polySimp_rightDist" (formula "12") (term "1"))
                           (rule "mul_literals" (formula "12") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                           (rule "polySimp_elimOne" (formula "4") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_strengthen1" (formula "4") (ifseqformula "33"))
                           (rule "inEqSimp_contradEq7" (formula "33") (ifseqformula "4"))
                           (rule "polySimp_mulComm0" (formula "33") (term "1,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                           (rule "add_literals" (formula "33") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "33") (term "1,0,0"))
                           (rule "add_literals" (formula "33") (term "0,0"))
                           (rule "leq_literals" (formula "33") (term "0"))
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "false_right" (formula "33"))
                           (rule "array2seqDef" (formula "23") (term "0,1") (inst "u=u"))
                           (rule "eqSymm" (formula "23"))
                           (rule "array2seqDef" (formula "13") (term "0,0") (inst "u=u"))
                           (rule "narrowSelectArrayType" (formula "13") (term "2,0,0") (ifseqformula "6") (ifseqformula "32"))
                           (rule "nonNull" (formula "30") (inst "i=i"))
                           (rule "greater_literals" (formula "30") (term "0,1"))
                           (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "35")))
                           (rule "sub_literals" (formula "30") (term "2,1,0"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                           (rule "applyEq" (formula "30") (term "0,1,0,0,1,0,0") (ifseqformula "5"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                           (rule "nonNull" (formula "18") (inst "i=i"))
                           (rule "sub_literals" (formula "18") (term "2,1,0,1,1"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "greater_literals" (formula "18") (term "0,1"))
                           (builtin "One Step Simplification" (formula "18"))
                           (rule "andLeft" (formula "18"))
                           (rule "notLeft" (formula "18"))
                           (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "32"))
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "narrowSelectArrayType" (formula "18") (term "0,0,1,0") (ifseqformula "6") (ifseqformula "32"))
                           (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                           (rule "array2seqDef" (formula "40") (term "1") (inst "u=u"))
                           (rule "eqSymm" (formula "40"))
                           (rule "array2seqDef" (formula "27") (term "1") (inst "u=u"))
                           (rule "eqSymm" (formula "27"))
                           (rule "array2seqDef" (formula "14") (term "1") (inst "u=u"))
                           (rule "eqSymm" (formula "14"))
                           (rule "narrowSelectArrayType" (formula "14") (term "2,0") (ifseqformula "6") (ifseqformula "33"))
                           (rule "applyEq" (formula "13") (term "0,0") (ifseqformula "14"))
                           (rule "array2seqDef" (formula "2") (term "0") (inst "u=u"))
                           (rule "array2seqDef" (formula "2") (term "1") (inst "u=u"))
                           (rule "array2seqDef" (formula "28") (term "0,1,0") (inst "u=u"))
                           (rule "array2seqDef" (formula "15") (term "0,1,0") (inst "u=u"))
                           (rule "array2seqDef" (formula "15") (term "1,1,0") (inst "u=u"))
                           (rule "array2seqDef" (formula "12") (term "0,0") (inst "u=u"))
                           (rule "narrowSelectArrayType" (formula "12") (term "2,0,0") (ifseqformula "6") (ifseqformula "33"))
                           (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "14"))
                           (rule "array2seqDef" (formula "23") (term "1") (inst "u=u"))
                           (rule "eqSymm" (formula "23"))
                           (rule "array2seqDef" (formula "40") (term "1") (inst "u=u"))
                           (rule "eqSymm" (formula "40"))
                           (rule "array2seqDef" (formula "27") (term "1,1") (inst "u=u"))
                           (rule "eqSymm" (formula "27"))
                           (rule "eqSeqDef" (formula "2") (inst "iv=iv"))
                           (rule "andLeft" (formula "2"))
                           (rule "lenOfSeqDef" (formula "2") (term "1"))
                           (rule "polySimp_elimSub" (formula "2") (term "1,1"))
                           (rule "times_zero_2" (formula "2") (term "1,1,1"))
                           (rule "add_zero_right" (formula "2") (term "1,1"))
                           (rule "getOfSeqDef" (formula "3") (term "0,1,0"))
                           (rule "castDel" (formula "3") (term "1,0,1,0"))
                           (rule "castDel" (formula "3") (term "2,0,1,0"))
                           (rule "add_zero_right" (formula "3") (term "0,2,1,0,1,0"))
                           (rule "eqSymm" (formula "3") (term "1,0"))
                           (rule "polySimp_elimSub" (formula "3") (term "1,1,0,1,1,0"))
                           (rule "times_zero_2" (formula "3") (term "1,1,1,0,1,1,0"))
                           (rule "add_zero_right" (formula "3") (term "1,1,0,1,1,0"))
                           (rule "lenOfSeqDef" (formula "2") (term "0"))
                           (rule "polySimp_elimSub" (formula "2") (term "1,0"))
                           (rule "times_zero_2" (formula "2") (term "1,1,0"))
                           (rule "add_zero_right" (formula "2") (term "1,0"))
                           (rule "lenOfSeqDef" (formula "3") (term "1,1,0,0"))
                           (rule "polySimp_elimSub" (formula "3") (term "1,1,1,0,0"))
                           (rule "times_zero_2" (formula "3") (term "1,1,1,1,0,0"))
                           (rule "add_zero_right" (formula "3") (term "1,1,1,0,0"))
                           (rule "getOfSeqDef" (formula "3") (term "0,1,0"))
                           (rule "castDel" (formula "3") (term "2,0,1,0"))
                           (rule "castDel" (formula "3") (term "1,0,1,0"))
                           (rule "add_zero_right" (formula "3") (term "0,2,1,0,1,0"))
                           (rule "eqSymm" (formula "3") (term "1,0"))
                           (rule "polySimp_elimSub" (formula "3") (term "1,1,0,1,1,0"))
                           (rule "times_zero_2" (formula "3") (term "1,1,1,0,1,1,0"))
                           (rule "add_zero_right" (formula "3") (term "1,1,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "2") (term "0,1"))
                           (rule "add_zero_right" (formula "2") (term "0,0,1"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0"))
                           (rule "add_zero_right" (formula "2") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "3") (term "0,1,1,0,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0,1,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0,1,0"))
                           (rule "eqSymm" (formula "3") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0,1,0"))
                           (rule "eqSymm" (formula "3") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,1,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,1,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0,1,0"))
                           (rule "applyEq" (formula "3") (term "0,1,0,0,1,0,0") (ifseqformula "2"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0,0,1"))
                           (rule "polySimp_elimOne" (formula "2") (term "0,0,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0,1,0"))
                           (rule "eqSymm" (formula "3") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,1,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,1,1,0"))
                           (rule "mul_literals" (formula "3") (term "0,1,1,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "3") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0,1,0"))
                           (rule "eqSymm" (formula "3") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1,1,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "3") (term "1,1,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,1,1,0"))
                           (rule "mul_literals" (formula "3") (term "0,1,1,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,1,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,1,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "0,0,1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "3") (term "0,0,1,1,1,0,0"))
                           (rule "eqSeqDef" (formula "16") (term "1,0") (inst "iv=iv"))
                           (rule "lenOfSeqDef" (formula "16") (term "1,0,1,0"))
                           (rule "polySimp_elimSub" (formula "16") (term "1,1,0,1,0"))
                           (rule "times_zero_2" (formula "16") (term "1,1,1,0,1,0"))
                           (rule "add_zero_right" (formula "16") (term "1,1,0,1,0"))
                           (rule "getOfSeqDef" (formula "16") (term "1,1,0,1,1,0"))
                           (rule "castDel" (formula "16") (term "1,1,1,0,1,1,0"))
                           (rule "castDel" (formula "16") (term "2,1,1,0,1,1,0"))
                           (rule "add_zero_right" (formula "16") (term "0,2,1,1,1,0,1,1,0"))
                           (rule "polySimp_elimSub" (formula "16") (term "1,1,0,1,1,0,1,1,0"))
                           (rule "times_zero_2" (formula "16") (term "1,1,1,0,1,1,0,1,1,0"))
                           (rule "add_zero_right" (formula "16") (term "1,1,0,1,1,0,1,1,0"))
                           (rule "lenOfSeqDef" (formula "16") (term "0,0,1,0"))
                           (rule "polySimp_elimSub" (formula "16") (term "1,0,0,1,0"))
                           (rule "times_zero_2" (formula "16") (term "1,1,0,0,1,0"))
                           (rule "add_zero_right" (formula "16") (term "1,0,0,1,0"))
                           (rule "lenOfSeqDef" (formula "16") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_elimSub" (formula "16") (term "1,1,1,0,0,1,1,0"))
                           (rule "times_zero_2" (formula "16") (term "1,1,1,1,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "16") (term "1,1,1,0,0,1,1,0"))
                           (rule "getOfSeqDef" (formula "16") (term "0,1,0,1,1,0"))
                           (rule "castDel" (formula "16") (term "1,0,1,0,1,1,0"))
                           (rule "castDel" (formula "16") (term "2,0,1,0,1,1,0"))
                           (rule "add_zero_right" (formula "16") (term "0,2,1,0,1,0,1,1,0"))
                           (rule "polySimp_elimSub" (formula "16") (term "1,1,0,0,1,0,1,1,0"))
                           (rule "times_zero_2" (formula "16") (term "1,1,1,0,0,1,0,1,1,0"))
                           (rule "add_zero_right" (formula "16") (term "1,1,0,0,1,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1,0,1,0"))
                           (rule "add_zero_right" (formula "16") (term "0,0,1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,1,1,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,1,1,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0,1,0"))
                           (rule "add_zero_right" (formula "16") (term "0,0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1,1,0,0,1,1,0"))
                           (rule "add_zero_right" (formula "16") (term "0,0,1,1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,1,0,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,1,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,0,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,1,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,1,1,0,1,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,1,0,1,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "0,0,1,0,1,0"))
                           (rule "polySimp_elimOne" (formula "16") (term "0,0,1,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,1,1,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,1,1,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,1,0,1,1,0,1,1,0"))
                           (rule "mul_literals" (formula "16") (term "0,1,1,0,1,1,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,1,1,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,1,1,0,1,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "16") (term "0,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,1,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,1,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,1,0,1,1,0"))
                           (rule "mul_literals" (formula "16") (term "0,1,1,0,0,1,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,1,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,1,0,1,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "16") (term "0,0,1,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "16") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "16") (term "0,1,1,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,1,1,0"))
                           (rule "equalityToSeqGetAndSeqLenRight" (formula "41") (inst "iv=iv"))
                           (rule "lenOfSeqDef" (formula "41") (term "1,0"))
                           (rule "polySimp_elimSub" (formula "41") (term "1,1,0"))
                           (rule "mul_literals" (formula "41") (term "1,1,1,0"))
                           (rule "add_zero_right" (formula "41") (term "1,1,0"))
                           (rule "lenOfSeqDef" (formula "41") (term "1,1,0,0,1"))
                           (rule "polySimp_elimSub" (formula "41") (term "1,1,1,0,0,1"))
                           (rule "times_zero_2" (formula "41") (term "1,1,1,1,0,0,1"))
                           (rule "add_zero_right" (formula "41") (term "1,1,1,0,0,1"))
                           (rule "lenOfSeqDef" (formula "41") (term "0,0"))
                           (rule "polySimp_elimSub" (formula "41") (term "1,0,0"))
                           (rule "mul_literals" (formula "41") (term "1,1,0,0"))
                           (rule "add_zero_right" (formula "41") (term "1,0,0"))
                           (rule "getOfSeqDef" (formula "41") (term "0,1,0,1"))
                           (rule "castDel" (formula "41") (term "1,0,1,0,1"))
                           (rule "castDel" (formula "41") (term "2,0,1,0,1"))
                           (rule "add_zero_right" (formula "41") (term "0,2,1,0,1,0,1"))
                           (rule "eqSymm" (formula "41") (term "1,0,1"))
                           (rule "polySimp_elimSub" (formula "41") (term "1,1,0,1,1,0,1"))
                           (rule "times_zero_2" (formula "41") (term "1,1,1,0,1,1,0,1"))
                           (rule "add_zero_right" (formula "41") (term "1,1,0,1,1,0,1"))
                           (rule "getOfSeqDef" (formula "41") (term "0,1,0,1"))
                           (rule "castDel" (formula "41") (term "2,0,1,0,1"))
                           (rule "castDel" (formula "41") (term "1,0,1,0,1"))
                           (rule "add_zero_right" (formula "41") (term "0,2,1,0,1,0,1"))
                           (rule "eqSymm" (formula "41") (term "1,0,1"))
                           (rule "polySimp_elimSub" (formula "41") (term "1,1,0,1,1,0,1"))
                           (rule "times_zero_2" (formula "41") (term "1,1,1,0,1,1,0,1"))
                           (rule "add_zero_right" (formula "41") (term "1,1,0,1,1,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,0"))
                           (rule "add_zero_right" (formula "41") (term "0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,1,0,0,1"))
                           (rule "add_zero_right" (formula "41") (term "0,0,1,1,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,1,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0"))
                           (rule "add_zero_right" (formula "41") (term "0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,1,0,1"))
                           (rule "eqSymm" (formula "41") (term "1,0,1"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,1,1,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "41") (term "1,0,0,1,0,1"))
                           (rule "eqSymm" (formula "41") (term "1,0,1"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,1,1,0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,0,1,0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0,1,1,0,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "41") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "41") (term "0,0,1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "41") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "41") (term "0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "41") (term "0,0,1,0,0,1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "0,0,0,1,0,0,1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "41") (term "0,0,0,1,0,0,1,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,1,0,1"))
                           (rule "eqSymm" (formula "41") (term "1,0,1"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,1,1,0,1"))
                           (rule "polySimp_rightDist" (formula "41") (term "1,1,0,1,1,0,1"))
                           (rule "mul_literals" (formula "41") (term "0,1,1,0,1,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,1,1,0,1"))
                           (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,1,1,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,1"))
                           (rule "mul_literals" (formula "41") (term "0,1,1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,1,0,1"))
                           (rule "eqSymm" (formula "41") (term "1,0,1"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,1,1,0,1"))
                           (rule "polySimp_rightDist" (formula "41") (term "1,1,0,1,1,0,1"))
                           (rule "mul_literals" (formula "41") (term "0,1,1,0,1,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,1,1,0,1"))
                           (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,1,1,0,1"))
                           (rule "eqSeqDef2" (formula "15") (inst "iv=iv") (ifseqformula "15"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "true_left" (formula "15"))
                           (rule "pullOutSelect" (formula "27") (term "1,2,1") (inst "selectSK=arr_26"))
                           (rule "applyEq" (formula "41") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "27"))
                           (rule "applyEq" (formula "41") (term "1,1,1,1,0,1") (ifseqformula "27"))
                           (rule "applyEq" (formula "41") (term "0,0,0,1,0") (ifseqformula "27"))
                           (rule "applyEq" (formula "41") (term "0,1,1,0") (ifseqformula "27"))
                           (rule "applyEq" (formula "28") (term "0,1,1") (ifseqformula "27"))
                           (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "25"))
                           (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "37")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,0,0") (ifseqformula "20"))
                           (rule "replace_known_right" (formula "27") (term "0,0,0,0") (ifseqformula "35"))
                           (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "36")))
                           (rule "applyEqReverse" (formula "28") (term "0,1,1") (ifseqformula "27"))
                           (rule "applyEqReverse" (formula "41") (term "0,0,0,1,0") (ifseqformula "27"))
                           (rule "applyEqReverse" (formula "41") (term "1,1,1,1,0,1") (ifseqformula "27"))
                           (rule "applyEqReverse" (formula "41") (term "0,1,1,0") (ifseqformula "27"))
                           (rule "applyEqReverse" (formula "41") (term "0,1,1,1,0,1,1,0,1") (ifseqformula "27"))
                           (rule "applyEqReverse" (formula "28") (term "1,2,1") (ifseqformula "27"))
                           (rule "hideAuxiliaryEq" (formula "27"))
                           (rule "eqSeqDef2" (formula "23") (inst "iv=iv") (ifseqformula "23"))
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "true_left" (formula "23"))
                           (rule "pullOutSelect" (formula "39") (term "0,1,0,0") (inst "selectSK=arr_27"))
                           (rule "applyEq" (formula "40") (term "1,1,0,1,0,1") (ifseqformula "1"))
                           (rule "applyEq" (formula "40") (term "0,0,0,1,1,1,0,0,1") (ifseqformula "1"))
                           (rule "applyEq" (formula "40") (term "0,1,1,1,0,0,1,0,1") (ifseqformula "1"))
                           (rule "applyEq" (formula "40") (term "0,1,1,1,1,0,0,1") (ifseqformula "1"))
                           (rule "applyEq" (formula "40") (term "0,0,0,0,0") (ifseqformula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "21"))
                           (rule "eqSymm" (formula "40") (term "1,0,1"))
                           (rule "eqSymm" (formula "40") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "14"))
                           (rule "times_zero_1" (formula "15") (term "0,0"))
                           (rule "add_zero_left" (formula "15") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                           (rule "mul_literals" (formula "15") (term "1"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_28"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "pullOutSelect" (formula "2") (term "1,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_3"))
                           (rule "applyEq" (formula "1") (term "0,0,0,0,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "3") (term "0,0,0,0,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "3") (term "1,0,0,0,1,0,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "1") (term "1,1,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "1") (term "1,0,0,1,0,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "3") (term "1,0,1,0,1,0,0") (ifseqformula "2"))
                           (rule "applyEq" (formula "1") (term "1,2,0") (ifseqformula "2"))
                           (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "28"))
                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "40")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0") (ifseqformula "24"))
                           (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "11"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "24"))
                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "40")) (ifInst ""  (formula "11")))
                           (rule "applyEqReverse" (formula "3") (term "1,1,0") (ifseqformula "2"))
                           (rule "applyEqReverse" (formula "1") (term "1,0,0,1,0,0") (ifseqformula "2"))
                           (rule "applyEqReverse" (formula "3") (term "0,0,0,0,0") (ifseqformula "2"))
                           (rule "applyEqReverse" (formula "3") (term "1,0,1,0,1,0,0") (ifseqformula "2"))
                           (rule "applyEqReverse" (formula "3") (term "1,0,0,0,1,0,0") (ifseqformula "2"))
                           (rule "applyEqReverse" (formula "1") (term "1,1,0") (ifseqformula "2"))
                           (rule "applyEqReverse" (formula "1") (term "0,0,0,0,0") (ifseqformula "2"))
                           (rule "applyEqReverse" (formula "1") (term "1,2,0") (ifseqformula "2"))
                           (rule "hideAuxiliaryEq" (formula "2"))
                           (rule "nnf_imp2or" (formula "32") (term "0"))
                           (rule "nnf_imp2or" (formula "21") (term "0"))
                           (rule "nnf_imp2or" (formula "5") (term "0"))
                           (rule "nnf_imp2or" (formula "18") (term "0"))
                           (rule "nnf_imp2or" (formula "42") (term "0,1"))
                           (rule "nnf_notAnd" (formula "32") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "32") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0"))
                           (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "32") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0"))
                           (rule "mul_literals" (formula "32") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "21") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
                           (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "21") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                           (rule "mul_literals" (formula "21") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "21") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "5") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "5") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "5") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "5") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "5") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "5") (term "0,0,0"))
                           (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0"))
                           (rule "add_literals" (formula "5") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0"))
                           (rule "mul_literals" (formula "5") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "18") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                           (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                           (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "42") (term "0,0,1"))
                           (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,1"))
                           (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,1"))
                           (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,1"))
                           (rule "add_zero_left" (formula "42") (term "0,0,1,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,1"))
                           (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0,1"))
                           (rule "times_zero_1" (formula "42") (term "1,0,0,0,0,0,1"))
                           (rule "add_zero_right" (formula "42") (term "0,0,0,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,1"))
                           (rule "mul_literals" (formula "42") (term "1,0,0,0,1"))
                           (rule "nnf_imp2or" (formula "18") (term "0,1,1,0"))
                           (rule "arrayLengthIsAShort" (formula "8") (term "0"))
                           (builtin "One Step Simplification" (formula "8"))
                           (rule "true_left" (formula "8"))
                           (rule "nnf_notAnd" (formula "18") (term "0,0,1,1,0"))
                           (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0,1,1,0"))
                           (rule "add_literals" (formula "18") (term "0,0,0,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,1,1,0"))
                           (rule "mul_literals" (formula "18") (term "1,0,0,0,1,1,0"))
                           (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0,1,1,0"))
                           (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0,1,1,0"))
                           (rule "add_literals" (formula "18") (term "0,0,0,1,0,0,1,1,0"))
                           (rule "add_zero_left" (formula "18") (term "0,0,1,0,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,1,1,0"))
                           (rule "arrayLengthNotNegative" (formula "8") (term "0"))
                           (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                           (rule "mul_literals" (formula "8") (term "1"))
                           (rule "arrayLengthNotNegative" (formula "9") (term "1,1"))
                           (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "9"))
                           (rule "leq_literals" (formula "8") (term "0"))
                           (builtin "One Step Simplification" (formula "8"))
                           (rule "true_left" (formula "8"))
                           (rule "arrayLengthIsAShort" (formula "9") (term "1,1"))
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "true_left" (formula "9"))
                           (rule "ifthenelse_split" (formula "3") (term "0"))
                           (branch "messages.length ≥ 1 TRUE"
                              (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "3"))
                              (rule "leq_literals" (formula "9") (term "0"))
                              (builtin "One Step Simplification" (formula "9"))
                              (rule "true_left" (formula "9"))
                              (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "4"))
                              (rule "andLeft" (formula "8"))
                              (rule "inEqSimp_homoInEq1" (formula "8"))
                              (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
                              (rule "add_literals" (formula "8") (term "1,1,0"))
                              (rule "times_zero_1" (formula "8") (term "1,0"))
                              (rule "add_literals" (formula "8") (term "0"))
                              (rule "leq_literals" (formula "8"))
                              (rule "closeFalse" (formula "8"))
                           )
                           (branch "messages.length ≥ 1 FALSE"
                              (rule "inEqSimp_geqRight" (formula "35"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "4"))
                              (rule "inEqSimp_antiSymm" (formula "8") (ifseqformula "1"))
                              (rule "applyEq" (formula "21") (term "1") (ifseqformula "8"))
                              (rule "applyEq" (formula "19") (term "0,0,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "8"))
                              (rule "leq_literals" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "applyEq" (formula "19") (term "1,1,0,0") (ifseqformula "7"))
                              (rule "applyEq" (formula "22") (term "1,1,0,0") (ifseqformula "7"))
                              (rule "applyEq" (formula "33") (term "1,1,1,0,0") (ifseqformula "7"))
                              (rule "add_zero_right" (formula "33") (term "1,1,0,0"))
                              (rule "applyEq" (formula "6") (term "0") (ifseqformula "7"))
                              (rule "inEqSimp_homoInEq1" (formula "6"))
                              (rule "times_zero_2" (formula "6") (term "1,0"))
                              (rule "add_zero_right" (formula "6") (term "0"))
                              (rule "applyEq" (formula "16") (term "0,0,0") (ifseqformula "7"))
                              (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                              (rule "qeq_literals" (formula "8"))
                              (rule "true_left" (formula "8"))
                              (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "7"))
                              (rule "add_zero_right" (formula "8") (term "1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                              (rule "mul_literals" (formula "6") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "5"))
                              (rule "qeq_literals" (formula "6") (term "0"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "closeFalse" (formula "6"))
                           )
                        )
                     )
                  )
               )
            )
            (branch "Case 2"
               (builtin "One Step Simplification" (formula "6"))
               (builtin "One Step Simplification" (formula "4"))
               (builtin "One Step Simplification" (formula "2"))
               (rule "andLeft" (formula "6"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "7") (term "1,1,0") (ifseqformula "6"))
               (rule "andLeft" (formula "4"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "5") (term "1,1,0") (ifseqformula "4"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "8") (term "0,1,1,0") (ifseqformula "4"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "8") (term "0,0,0,1,0,1") (ifseqformula "4"))
               (rule "andLeft" (formula "2"))
               (rule "andLeft" (formula "6"))
               (rule "andLeft" (formula "10"))
               (rule "andLeft" (formula "3"))
               (rule "andLeft" (formula "2"))
               (rule "andLeft" (formula "8"))
               (rule "andLeft" (formula "10"))
               (rule "andLeft" (formula "13"))
               (rule "andLeft" (formula "15"))
               (rule "andLeft" (formula "5"))
               (rule "andLeft" (formula "2"))
               (rule "andLeft" (formula "12"))
               (rule "andLeft" (formula "18"))
               (rule "andLeft" (formula "7"))
               (rule "andLeft" (formula "3"))
               (rule "andLeft" (formula "2"))
               (rule "andLeft" (formula "16"))
               (rule "andLeft" (formula "23"))
               (rule "andLeft" (formula "10"))
               (rule "andLeft" (formula "2"))
               (rule "notLeft" (formula "19"))
               (rule "notLeft" (formula "18"))
               (rule "andLeft" (formula "24"))
               (rule "andLeft" (formula "23"))
               (rule "andLeft" (formula "12"))
               (rule "andLeft" (formula "2"))
               (rule "notLeft" (formula "26"))
               (rule "notLeft" (formula "25"))
               (rule "andLeft" (formula "14"))
               (rule "notLeft" (formula "3"))
               (rule "orRight" (formula "28"))
               (rule "andLeft" (formula "14"))
               (rule "notLeft" (formula "15"))
               (rule "eqSymm" (formula "24"))
               (rule "eqSymm" (formula "10"))
               (rule "eqSymm" (formula "11") (term "1,0"))
               (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "27"))
               (builtin "One Step Simplification" (formula "6"))
               (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "33"))
               (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "32")))
               (rule "replace_known_right" (formula "23") (term "0") (ifseqformula "31"))
               (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "29")) (ifInst ""  (formula "30")))
               (rule "replace_known_right" (formula "34") (term "0,1,0") (ifseqformula "31"))
               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "29")) (ifInst ""  (formula "25")) (ifInst ""  (formula "26")))
               (rule "closeTrue" (formula "34"))
            )
         )
         (branch "CUT: result_1.length = javaAddInt(messages.length, 1) FALSE"
            (rule "hide_right" (formula "7") (userinteraction))
            (rule "translateJavaAddInt" (formula "6") (term "1") (userinteraction))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "2"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "4"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "6"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "3"))
            (rule "andLeft" (formula "9"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "11"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "13"))
            (rule "notLeft" (formula "2"))
            (builtin "One Step Simplification" (formula "17"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "andLeft" (formula "13"))
            (rule "andLeft" (formula "18"))
            (rule "andLeft" (formula "16"))
            (rule "notLeft" (formula "14"))
            (rule "andLeft" (formula "19"))
            (rule "andLeft" (formula "16"))
            (rule "andLeft" (formula "20"))
            (rule "andLeft" (formula "22"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "16"))
            (rule "andLeft" (formula "23"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "25"))
            (rule "andLeft" (formula "18"))
            (rule "andLeft" (formula "26"))
            (rule "andLeft" (formula "28"))
            (rule "notLeft" (formula "18"))
            (rule "notLeft" (formula "18"))
            (rule "notLeft" (formula "24"))
            (rule "notLeft" (formula "24"))
            (rule "orLeft" (formula "4"))
            (branch "messages = null"
               (rule "orLeft" (formula "5"))
               (branch "bal = null"
                  (rule "close" (formula "30") (ifseqformula "5"))
               )
               (branch "bal.<created> = TRUE"
                  (rule "orLeft" (formula "22"))
                  (branch "result_1 = null"
                     (rule "close" (formula "26") (ifseqformula "22"))
                  )
                  (branch "result_1.<created>@heapAfter_addEntry = TRUE"
                     (rule "orLeft" (formula "16"))
                     (branch "result_0 = null"
                        (rule "close" (formula "28") (ifseqformula "16"))
                     )
                     (branch "result_0.<created>@heapAfter_first = TRUE"
                        (rule "array2seq2dDef" (formula "23") (term "0") (inst "u=u") (userinteraction))
                        (rule "array2seq2dDef" (formula "23") (term "0,1") (inst "u=u") (userinteraction))
                        (rule "equalityToSeqGetAndSeqLenLeft" (formula "23") (inst "iv=iv") (userinteraction))
                        (builtin "One Step Simplification" (formula "10"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (ifseqformula "20"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (ifseqformula "15"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (ifseqformula "15"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "0") (ifseqformula "15"))
                        (rule "andLeft" (formula "23"))
                        (rule "orRight" (formula "29"))
                        (rule "eqSymm" (formula "9"))
                        (rule "eqSymm" (formula "10") (term "1,0"))
                        (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "32"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "replace_known_right" (formula "22") (term "0,0") (ifseqformula "29"))
                        (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "30")))
                        (rule "polySimp_addComm0" (formula "35") (term "1"))
                        (rule "getOfSeqDef" (formula "24") (term "0,1,0"))
                        (rule "castDel" (formula "24") (term "2,0,1,0"))
                        (rule "castDel" (formula "24") (term "1,0,1,0"))
                        (rule "add_zero_right" (formula "24") (term "0,2,1,1,0,1,0"))
                        (rule "eqSymm" (formula "24") (term "1,0"))
                        (rule "polySimp_elimSub" (formula "24") (term "1,1,0,1,1,0"))
                        (rule "mul_literals" (formula "24") (term "1,1,1,0,1,1,0"))
                        (rule "add_zero_right" (formula "24") (term "1,1,0,1,1,0"))
                        (rule "lenOfSeqDef" (formula "24") (term "1,1,0,0"))
                        (rule "polySimp_elimSub" (formula "24") (term "1,1,1,0,0"))
                        (rule "times_zero_2" (formula "24") (term "1,1,1,1,0,0"))
                        (rule "add_zero_right" (formula "24") (term "1,1,1,0,0"))
                        (rule "lenOfSeqDef" (formula "23") (term "0"))
                        (rule "eqSymm" (formula "23"))
                        (rule "polySimp_elimSub" (formula "23") (term "1,1"))
                        (rule "mul_literals" (formula "23") (term "1,1,1"))
                        (rule "add_zero_right" (formula "23") (term "1,1"))
                        (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                        (rule "lenOfSeqConcat" (formula "23") (term "0"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "polySimp_homoEq" (formula "23"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                        (rule "polySimp_addComm0" (formula "23") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                        (rule "mul_literals" (formula "23") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "23") (term "0"))
                        (rule "polySimp_addComm0" (formula "23") (term "0,0"))
                        (rule "lenOfSeqDef" (formula "23") (term "0,1,0"))
                        (rule "polySimp_elimSub" (formula "23") (term "1,0,1,0"))
                        (rule "mul_literals" (formula "23") (term "1,1,0,1,0"))
                        (rule "add_zero_right" (formula "23") (term "1,0,1,0"))
                        (rule "polySimp_addComm1" (formula "23") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "24") (term "0,1,1,0,0"))
                        (rule "add_zero_right" (formula "24") (term "0,0,1,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "11"))
                        (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,0"))
                        (rule "add_zero_right" (formula "23") (term "0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "23") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,1,0"))
                        (rule "add_zero_right" (formula "23") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "23") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,1,1,0"))
                        (rule "inEqSimp_homoInEq1" (formula "7"))
                        (rule "polySimp_addComm1" (formula "7") (term "0"))
                        (rule "applyEq" (formula "24") (term "0,1,0,0,0,1,0") (ifseqformula "4"))
                        (rule "applyEq" (formula "25") (term "0,1,0,1") (ifseqformula "4"))
                        (rule "applyEq" (formula "10") (term "0,0,1,0,0,1,0,0") (ifseqformula "4"))
                        (rule "applyEq" (formula "9") (term "0,0,0") (ifseqformula "4"))
                        (rule "applyEq" (formula "35") (term "0,1,1") (ifseqformula "4"))
                        (rule "applyEq" (formula "24") (term "1,1,2,0,0,0,1,0") (ifseqformula "4"))
                        (rule "applyEq" (formula "23") (term "0,0,1,0,0,0,1,0,0") (ifseqformula "4"))
                        (rule "applyEq" (formula "23") (term "0,1,0,1,0,0") (ifseqformula "4"))
                        (rule "applyEq" (formula "11") (term "0,1") (ifseqformula "4"))
                        (rule "applyEq" (formula "10") (term "1,1,1,1,0") (ifseqformula "4"))
                        (rule "applyEq" (formula "13") (term "1") (ifseqformula "4"))
                        (rule "applyEq" (formula "25") (term "1,1,2,0,1") (ifseqformula "4"))
                        (rule "polySimp_sepPosMonomial" (formula "23"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1"))
                        (rule "polySimp_rightDist" (formula "23") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                        (rule "mul_literals" (formula "23") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                        (rule "applyEq" (formula "24") (term "0,1,0,0,1,0,0") (ifseqformula "23"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,1,0,1,1,0"))
                        (rule "mul_literals" (formula "24") (term "0,1,1,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1"))
                        (rule "polySimp_rightDist" (formula "7") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                        (rule "mul_literals" (formula "7") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "23") (term "0,0,0"))
                        (rule "polySimp_homoEq" (formula "23"))
                        (rule "polySimp_addComm1" (formula "23") (term "0"))
                        (rule "polySimp_sepPosMonomial" (formula "23"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1"))
                        (rule "polySimp_rightDist" (formula "23") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                        (rule "mul_literals" (formula "23") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                        (rule "applyEq" (formula "24") (term "0,0,0,1,0,0") (ifseqformula "23"))
                        (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "0,0,1,0,0"))
                        (rule "mul_literals" (formula "24") (term "0,0,0,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "23") (term "0,0,0"))
                        (rule "polySimp_homoEq" (formula "23"))
                        (rule "polySimp_addComm1" (formula "23") (term "0"))
                        (rule "polySimp_sepPosMonomial" (formula "23"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1"))
                        (rule "polySimp_rightDist" (formula "23") (term "1"))
                        (rule "mul_literals" (formula "23") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                        (rule "applyEq" (formula "24") (term "0,1,0,0,1,0,0") (ifseqformula "23"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                        (rule "array2seqDef" (formula "17") (term "0") (inst "u=u"))
                        (rule "array2seqDef" (formula "25") (term "2,0") (inst "u=u_1"))
                        (rule "array2seqDef" (formula "17") (term "0,1") (inst "u=u"))
                        (rule "array2seqDef" (formula "8") (term "0,0") (inst "u=u"))
                        (rule "narrowSelectArrayType" (formula "8") (term "2,0,0") (ifseqformula "1") (ifseqformula "33"))
                        (rule "array2seqDef" (formula "25") (term "0,1,1") (inst "u=u"))
                        (rule "nonNull" (formula "27") (inst "i=i"))
                        (rule "sub_literals" (formula "27") (term "2,1,0,1,1"))
                        (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "28")))
                        (rule "greater_literals" (formula "27") (term "0"))
                        (builtin "One Step Simplification" (formula "27"))
                        (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                        (rule "array2seqDef" (formula "9") (term "1") (inst "u=u"))
                        (rule "eqSymm" (formula "9"))
                        (rule "narrowSelectArrayType" (formula "9") (term "2,0") (ifseqformula "1") (ifseqformula "33"))
                        (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "9"))
                        (rule "array2seqDef" (formula "10") (term "0,1,0") (inst "u=u"))
                        (rule "array2seqDef" (formula "24") (term "1,1,1,0") (inst "u=u"))
                        (rule "eqSymm" (formula "24") (term "1,0"))
                        (rule "array2seqDef" (formula "10") (term "1,1,0") (inst "u=u"))
                        (rule "array2seqDef" (formula "25") (term "2,0,1") (inst "u=u_1"))
                        (rule "eqSymm" (formula "25"))
                        (rule "array2seqDef" (formula "7") (term "0,0") (inst "u=u"))
                        (rule "narrowSelectArrayType" (formula "7") (term "2,0,0") (ifseqformula "1") (ifseqformula "33"))
                        (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "9"))
                        (rule "getOfSeqConcat" (formula "24") (term "1,1,0"))
                        (rule "eqSymm" (formula "24") (term "1,0"))
                        (rule "polySimp_elimSub" (formula "24") (term "1,2,0,1,0"))
                        (rule "lenOfSeqDef" (formula "24") (term "1,0,0,1,0"))
                        (rule "polySimp_elimSub" (formula "24") (term "1,1,0,0,1,0"))
                        (rule "times_zero_2" (formula "24") (term "1,1,1,0,0,1,0"))
                        (rule "add_zero_right" (formula "24") (term "1,1,0,0,1,0"))
                        (rule "getOfSeqDef" (formula "24") (term "1,0,1,0"))
                        (rule "castDel" (formula "24") (term "1,1,0,1,0"))
                        (rule "castDel" (formula "24") (term "2,1,0,1,0"))
                        (rule "add_zero_right" (formula "24") (term "0,2,1,1,1,0,1,0"))
                        (rule "polySimp_elimSub" (formula "24") (term "1,1,0,1,0,1,0"))
                        (rule "times_zero_2" (formula "24") (term "1,1,1,0,1,0,1,0"))
                        (rule "add_zero_right" (formula "24") (term "1,1,0,1,0,1,0"))
                        (rule "lenOfSeqDef" (formula "24") (term "0,1,1,2,0,1,0"))
                        (rule "eqSymm" (formula "24") (term "1,0"))
                        (rule "polySimp_elimSub" (formula "24") (term "1,0,1,1,2,1,1,0"))
                        (rule "times_zero_2" (formula "24") (term "1,1,0,1,1,2,1,1,0"))
                        (rule "add_zero_right" (formula "24") (term "1,0,1,1,2,1,1,0"))
                        (rule "polySimp_addComm0" (formula "24") (term "1,2,1,1,0"))
                        (rule "getOfSeqSingleton" (formula "24") (term "2,1,1,0"))
                        (rule "castDel" (formula "24") (term "1,2,1,1,0"))
                        (rule "castDel" (formula "24") (term "2,2,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "24") (term "0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,1,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,1,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0,0,0,2,1,1,0"))
                        (rule "add_zero_right" (formula "24") (term "0,0,0,0,0,0,2,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,0,2,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,1,0,0,0,1,1,0"))
                        (rule "add_zero_right" (formula "24") (term "0,0,0,1,0,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,1,0,0,0,1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,1,1,1,0"))
                        (rule "polySimp_sepPosMonomial" (formula "24") (term "0,2,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,0,2,1,1,0"))
                        (rule "polySimp_elimOne" (formula "24") (term "1,0,2,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,1,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,1,1,1,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,1,0,1,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,1,1,1,0"))
                        (rule "mul_literals" (formula "24") (term "0,1,1,0,1,1,1,0"))
                        (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,1,1,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,1,0,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,1,0,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "24") (term "0,0,0,1,0,0,0,1,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,1,0,2,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "0,0,1,0,2,1,1,0"))
                        (rule "polySimp_elimOne" (formula "24") (term "0,0,1,0,2,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,1,1,0"))
                        (rule "mul_literals" (formula "24") (term "0,1,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "24") (term "1,1,0,1,1,0"))
                        (rule "eqSeqDef" (formula "10") (term "1,0") (inst "iv=iv"))
                        (rule "lenOfSeqDef" (formula "10") (term "0,0,1,0"))
                        (rule "eqSymm" (formula "10") (term "0,1,0"))
                        (rule "polySimp_elimSub" (formula "10") (term "1,1,0,1,0"))
                        (rule "times_zero_2" (formula "10") (term "1,1,1,0,1,0"))
                        (rule "add_zero_right" (formula "10") (term "1,1,0,1,0"))
                        (rule "getOfSeqDef" (formula "10") (term "1,1,0,1,1,0"))
                        (rule "castDel" (formula "10") (term "2,1,1,0,1,1,0"))
                        (rule "castDel" (formula "10") (term "1,1,1,0,1,1,0"))
                        (rule "add_zero_right" (formula "10") (term "0,2,1,1,1,0,1,1,0"))
                        (rule "polySimp_elimSub" (formula "10") (term "1,1,0,1,1,0,1,1,0"))
                        (rule "times_zero_2" (formula "10") (term "1,1,1,0,1,1,0,1,1,0"))
                        (rule "add_zero_right" (formula "10") (term "1,1,0,1,1,0,1,1,0"))
                        (rule "getOfSeqDef" (formula "10") (term "0,1,0,1,1,0"))
                        (rule "castDel" (formula "10") (term "2,0,1,0,1,1,0"))
                        (rule "castDel" (formula "10") (term "1,0,1,0,1,1,0"))
                        (rule "add_zero_right" (formula "10") (term "0,2,1,0,1,0,1,1,0"))
                        (rule "polySimp_elimSub" (formula "10") (term "1,1,0,0,1,0,1,1,0"))
                        (rule "mul_literals" (formula "10") (term "1,1,1,0,0,1,0,1,1,0"))
                        (rule "add_zero_right" (formula "10") (term "1,1,0,0,1,0,1,1,0"))
                        (rule "lenOfSeqDef" (formula "10") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_elimSub" (formula "10") (term "1,1,1,0,0,1,1,0"))
                        (rule "times_zero_2" (formula "10") (term "1,1,1,1,0,0,1,1,0"))
                        (rule "add_zero_right" (formula "10") (term "1,1,1,0,0,1,1,0"))
                        (rule "lenOfSeqDef" (formula "10") (term "0,0,1,0"))
                        (rule "eqSymm" (formula "10") (term "0,1,0"))
                        (rule "polySimp_elimSub" (formula "10") (term "1,1,0,1,0"))
                        (rule "times_zero_2" (formula "10") (term "1,1,1,0,1,0"))
                        (rule "add_zero_right" (formula "10") (term "1,1,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,1,1,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,1,1,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "10") (term "0,1,1,0,0,1,1,0"))
                        (rule "add_zero_right" (formula "10") (term "0,0,1,1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,1,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,1,0"))
                        (rule "add_zero_right" (formula "10") (term "0,0,0,0,1,0"))
                        (rule "eqSymm" (formula "10") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,1,0"))
                        (rule "add_zero_right" (formula "10") (term "0,0,0,0,1,0"))
                        (rule "eqSymm" (formula "10") (term "0,1,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,1,1,0,1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,1,1,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,1,1,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,1,0,1,1,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,1,1,0,1,1,0"))
                        (rule "mul_literals" (formula "10") (term "0,1,1,0,1,1,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,1,1,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,0,1,1,0"))
                        (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,0,1,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,0,1,0,0,1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "10") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0,0,1,0"))
                        (rule "eqSymm" (formula "10") (term "0,1,0"))
                        (rule "polySimp_elimOne" (formula "10") (term "0,0,1,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0,0,1,0"))
                        (rule "eqSymm" (formula "10") (term "0,1,0"))
                        (rule "polySimp_elimOne" (formula "10") (term "0,0,1,0,1,0"))
                        (rule "eqSeqDef" (formula "25") (inst "iv=iv"))
                        (rule "andLeft" (formula "25"))
                        (rule "lenOfSeqConcat" (formula "25") (term "0"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "polySimp_homoEq" (formula "25"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                        (rule "polySimp_addComm0" (formula "25") (term "1,1,0"))
                        (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                        (rule "mul_literals" (formula "25") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "25") (term "0"))
                        (rule "polySimp_addComm0" (formula "25") (term "0,0"))
                        (rule "getOfSeqDef" (formula "26") (term "1,1,0"))
                        (rule "castDel" (formula "26") (term "1,1,1,0"))
                        (rule "castDel" (formula "26") (term "2,1,1,0"))
                        (rule "add_zero_right" (formula "26") (term "0,2,1,2,1,1,1,0"))
                        (rule "add_zero_right" (formula "26") (term "0,2,0,1,1,1,1,0"))
                        (rule "eqSymm" (formula "26") (term "1,0"))
                        (rule "polySimp_elimSub" (formula "26") (term "1,1,0,0,1,0"))
                        (rule "mul_literals" (formula "26") (term "1,1,1,0,0,1,0"))
                        (rule "add_zero_right" (formula "26") (term "1,1,0,0,1,0"))
                        (rule "lenOfSeqConcat" (formula "26") (term "1,1,0,0"))
                        (builtin "One Step Simplification" (formula "26"))
                        (rule "polySimp_addComm0" (formula "26") (term "1,1,0,0"))
                        (rule "lenOfSeqDef" (formula "25") (term "0,1,0"))
                        (rule "polySimp_elimSub" (formula "25") (term "1,0,1,0"))
                        (rule "times_zero_2" (formula "25") (term "1,1,0,1,0"))
                        (rule "add_zero_right" (formula "25") (term "1,0,1,0"))
                        (rule "polySimp_addComm1" (formula "25") (term "0"))
                        (rule "lenOfSeqDef" (formula "26") (term "1,1,1,0,0"))
                        (rule "polySimp_elimSub" (formula "26") (term "1,1,1,1,0,0"))
                        (rule "times_zero_2" (formula "26") (term "1,1,1,1,1,0,0"))
                        (rule "add_zero_right" (formula "26") (term "1,1,1,1,0,0"))
                        (rule "lenOfSeqDef" (formula "25") (term "1,0"))
                        (rule "polySimp_elimSub" (formula "25") (term "1,1,0"))
                        (rule "mul_literals" (formula "25") (term "1,1,1,0"))
                        (rule "add_zero_right" (formula "25") (term "1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,1,0,0"))
                        (rule "add_zero_right" (formula "25") (term "0,0,0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "26") (term "0,1,1,1,0,0"))
                        (rule "add_zero_right" (formula "26") (term "0,0,1,1,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,1,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1,0"))
                        (rule "add_zero_right" (formula "25") (term "0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,1,0"))
                        (rule "polySimp_sepPosMonomial" (formula "25"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1"))
                        (rule "polySimp_rightDist" (formula "25") (term "1"))
                        (rule "mul_literals" (formula "25") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,1,0"))
                        (rule "mul_literals" (formula "26") (term "0,1,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "25") (term "0,0,0"))
                        (rule "polySimp_homoEq" (formula "25"))
                        (rule "polySimp_addComm1" (formula "25") (term "0"))
                        (rule "applyEq" (formula "25") (term "0,1,0,0") (ifseqformula "23"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "25") (term "1,0,0"))
                        (rule "mul_literals" (formula "25") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                        (rule "add_literals" (formula "25") (term "0,0,0"))
                        (rule "add_zero_left" (formula "25") (term "0,0"))
                        (rule "polySimp_sepPosMonomial" (formula "25"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1"))
                        (rule "polySimp_elimOne" (formula "25") (term "1"))
                        (rule "applyEqRigid" (formula "26") (term "1,1,0,0") (ifseqformula "25"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "25") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "true_left" (formula "25"))
                        (rule "eqSeqDef2" (formula "9") (inst "iv=iv") (ifseqformula "9"))
                        (builtin "One Step Simplification" (formula "9"))
                        (rule "true_left" (formula "9"))
                        (rule "eqSeqDef2" (formula "16") (inst "iv=iv") (ifseqformula "16"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "true_left" (formula "16"))
                        (rule "array2seqDef" (formula "22") (term "1,1,1,1,0") (inst "u=u"))
                        (rule "eqSymm" (formula "22") (term "1,0"))
                        (rule "getOfSeqConcat" (formula "23") (term "1,1,0"))
                        (rule "eqSymm" (formula "23") (term "1,0"))
                        (rule "polySimp_elimSub" (formula "23") (term "1,2,0,1,0"))
                        (rule "lenOfSeqDef" (formula "23") (term "1,0,0,1,0"))
                        (rule "polySimp_elimSub" (formula "23") (term "1,1,0,0,1,0"))
                        (rule "times_zero_2" (formula "23") (term "1,1,1,0,0,1,0"))
                        (rule "add_zero_right" (formula "23") (term "1,1,0,0,1,0"))
                        (rule "getOfSeqDef" (formula "23") (term "1,0,1,0"))
                        (rule "castDel" (formula "23") (term "2,1,0,1,0"))
                        (rule "castDel" (formula "23") (term "1,1,0,1,0"))
                        (rule "add_zero_right" (formula "23") (term "0,2,1,2,1,1,0,1,0"))
                        (rule "add_zero_right" (formula "23") (term "0,2,0,1,1,1,0,1,0"))
                        (rule "polySimp_elimSub" (formula "23") (term "1,1,0,1,0,1,0"))
                        (rule "times_zero_2" (formula "23") (term "1,1,1,0,1,0,1,0"))
                        (rule "add_zero_right" (formula "23") (term "1,1,0,1,0,1,0"))
                        (rule "getOfSeqSingleton" (formula "23") (term "2,0,1,0"))
                        (rule "castDel" (formula "23") (term "1,2,0,1,0"))
                        (rule "castDel" (formula "23") (term "2,2,0,1,0"))
                        (rule "lenOfSeqDef" (formula "23") (term "0,1,0,0,2,0,1,0"))
                        (rule "polySimp_elimSub" (formula "23") (term "1,0,1,0,0,2,0,1,0"))
                        (rule "times_zero_2" (formula "23") (term "1,1,0,1,0,0,2,0,1,0"))
                        (rule "add_zero_right" (formula "23") (term "1,0,1,0,0,2,0,1,0"))
                        (rule "polySimp_addComm0" (formula "23") (term "0,0,2,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,0,0,1,0"))
                        (rule "add_zero_right" (formula "23") (term "0,0,1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,1,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0,0,0,2,0,1,0"))
                        (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,0,2,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,0,2,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,1,0,1,0"))
                        (rule "polySimp_sepPosMonomial" (formula "23") (term "0,2,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,0,2,0,1,0"))
                        (rule "polySimp_elimOne" (formula "23") (term "1,0,2,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,1,0,1,0,1,0"))
                        (rule "mul_literals" (formula "23") (term "0,1,1,0,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,1,0,1,0"))
                        (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,1,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0,1,0,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,1,0,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "23") (term "0,0,0,1,0,0,0,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,1,0,2,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "0,0,1,0,2,0,1,0"))
                        (rule "polySimp_elimOne" (formula "23") (term "0,0,1,0,2,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,0"))
                        (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,1,0"))
                        (rule "array2seqDef" (formula "22") (term "1,2,0,1,0") (inst "u=u"))
                        (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "7"))
                        (rule "times_zero_1" (formula "8") (term "0,0"))
                        (rule "add_zero_left" (formula "8") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                        (rule "mul_literals" (formula "8") (term "1"))
                        (rule "nnf_imp2or" (formula "25") (term "0"))
                        (rule "nnf_imp2or" (formula "10") (term "0"))
                        (rule "nnf_imp2or" (formula "23") (term "0"))
                        (rule "nnf_notAnd" (formula "25") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                        (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "25") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                        (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "10") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
                        (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                        (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "23") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
                        (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "23") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                        (rule "mul_literals" (formula "23") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                        (rule "nnf_imp2or" (formula "10") (term "0,1,1,0"))
                        (rule "nnf_notAnd" (formula "10") (term "0,0,1,1,0"))
                        (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0,1,1,0"))
                        (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,1,1,0"))
                        (rule "add_zero_left" (formula "10") (term "0,0,1,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,1,1,0"))
                        (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0,1,1,0"))
                        (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,1,1,0"))
                        (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "10") (term "1,0,0,0,1,1,0"))
                        (rule "arrayLengthNotNegative" (formula "33") (term "0"))
                        (rule "arrayLengthIsAShort" (formula "34") (term "0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "ifthenelse_split" (formula "23") (term "0"))
                        (branch "result_1.length ≥ 1 TRUE"
                           (rule "polySimp_homoEq" (formula "24"))
                           (rule "polySimp_addComm1" (formula "24") (term "0"))
                           (rule "polySimp_sepPosMonomial" (formula "24"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1"))
                           (rule "polySimp_rightDist" (formula "24") (term "1"))
                           (rule "mul_literals" (formula "24") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                           (rule "applyEq" (formula "25") (term "1,1,1,0,0") (ifseqformula "24"))
                           (rule "polySimp_addAssoc" (formula "25") (term "1,1,0,0"))
                           (rule "add_literals" (formula "25") (term "0,1,1,0,0"))
                           (rule "add_zero_left" (formula "25") (term "1,1,0,0"))
                           (rule "applyEq" (formula "25") (term "1,1,0,0,1,0") (ifseqformula "24"))
                           (rule "polySimp_addAssoc" (formula "25") (term "1,0,0,1,0"))
                           (rule "add_literals" (formula "25") (term "0,1,0,0,1,0"))
                           (rule "applyEq" (formula "25") (term "1,0,2,0,1,0") (ifseqformula "24"))
                           (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "23"))
                           (rule "leq_literals" (formula "1") (term "0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "arrayLengthNotNegative" (formula "11") (term "0"))
                           (rule "arrayLengthIsAShort" (formula "12") (term "0"))
                           (builtin "One Step Simplification" (formula "12"))
                           (rule "true_left" (formula "12"))
                           (rule "arrayLengthNotNegative" (formula "35") (term "1,1"))
                           (rule "arrayLengthIsAShort" (formula "36") (term "1,1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "arrayLengthIsAShort" (formula "8") (term "1,1"))
                           (builtin "One Step Simplification" (formula "8"))
                           (rule "true_left" (formula "8"))
                           (rule "arrayLengthNotNegative" (formula "8") (term "1,1"))
                           (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "10"))
                           (rule "leq_literals" (formula "8") (term "0"))
                           (builtin "One Step Simplification" (formula "8"))
                           (rule "true_left" (formula "8"))
                           (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "14") (ifseqformula "4"))
                           (rule "andLeft" (formula "14"))
                           (rule "notLeft" (formula "15"))
                           (rule "andLeft" (formula "14"))
                           (rule "notLeft" (formula "15"))
                           (rule "andLeft" (formula "14"))
                           (rule "notLeft" (formula "15"))
                           (rule "andLeft" (formula "14"))
                           (rule "andLeft" (formula "14"))
                           (rule "notLeft" (formula "16"))
                           (rule "andLeft" (formula "14"))
                           (rule "andLeft" (formula "14"))
                           (rule "andLeft" (formula "14"))
                           (rule "notLeft" (formula "14"))
                           (rule "nonNull" (formula "17") (inst "i=i"))
                           (rule "greater_literals" (formula "17") (term "0,1"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "sub_literals" (formula "17") (term "2,1,0,1"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "andLeft" (formula "17"))
                           (rule "notLeft" (formula "17"))
                           (rule "narrowSelectArrayType" (formula "17") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "32"))
                           (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                           (rule "nonNull" (formula "16") (inst "i=i"))
                           (rule "greater_literals" (formula "16") (term "0,1"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "sub_literals" (formula "16") (term "2,1,0,1"))
                           (builtin "One Step Simplification" (formula "16"))
                           (rule "andLeft" (formula "16"))
                           (rule "notLeft" (formula "16"))
                           (rule "narrowSelectArrayType" (formula "16") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "32"))
                           (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                           (rule "nonNull" (formula "15") (inst "i=i"))
                           (rule "greater_literals" (formula "15") (term "0,1"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "sub_literals" (formula "15") (term "2,1,0,1"))
                           (builtin "One Step Simplification" (formula "15"))
                           (rule "andLeft" (formula "15"))
                           (rule "notLeft" (formula "15"))
                           (rule "narrowSelectArrayType" (formula "15") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "32"))
                           (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                           (rule "nonNull" (formula "14") (inst "i=i"))
                           (rule "sub_literals" (formula "14") (term "2,1,0,1,1"))
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "greater_literals" (formula "14") (term "0,1"))
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "andLeft" (formula "14"))
                           (rule "notLeft" (formula "14"))
                           (rule "narrowSelectArrayType" (formula "14") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "32"))
                           (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
                           (rule "nnf_imp2or" (formula "17") (term "0"))
                           (rule "nnf_imp2or" (formula "16") (term "0"))
                           (rule "nnf_imp2or" (formula "15") (term "0"))
                           (rule "nnf_imp2or" (formula "14") (term "0"))
                           (rule "nnf_notAnd" (formula "17") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
                           (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "17") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                           (rule "mul_literals" (formula "17") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "16") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                           (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                           (rule "mul_literals" (formula "16") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "15") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                           (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                           (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "14") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                           (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                           (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                           (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "30") (ifseqformula "4"))
                           (rule "andLeft" (formula "30"))
                           (rule "notLeft" (formula "31"))
                           (rule "andLeft" (formula "30"))
                           (rule "andLeft" (formula "30"))
                           (rule "notLeft" (formula "32"))
                           (rule "andLeft" (formula "30"))
                           (rule "notLeft" (formula "32"))
                           (rule "andLeft" (formula "30"))
                           (rule "notLeft" (formula "32"))
                           (rule "andLeft" (formula "30"))
                           (rule "andLeft" (formula "30"))
                           (rule "andLeft" (formula "30"))
                           (rule "notLeft" (formula "30"))
                           (rule "nonNull" (formula "33") (inst "i=i"))
                           (rule "sub_literals" (formula "33") (term "2,1,0,1,1"))
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "greater_literals" (formula "33") (term "0,1"))
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "andLeft" (formula "33"))
                           (rule "notLeft" (formula "33"))
                           (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0"))
                           (rule "nonNull" (formula "32") (inst "i=i"))
                           (rule "greater_literals" (formula "32") (term "0,1"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "sub_literals" (formula "32") (term "2,1,0,1"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "andLeft" (formula "32"))
                           (rule "notLeft" (formula "32"))
                           (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "32") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0"))
                           (rule "nonNull" (formula "31") (inst "i=i"))
                           (rule "greater_literals" (formula "31") (term "0,1"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "sub_literals" (formula "31") (term "2,1,0,1"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "andLeft" (formula "31"))
                           (rule "notLeft" (formula "31"))
                           (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                           (rule "nonNull" (formula "30") (inst "i=i"))
                           (rule "sub_literals" (formula "30") (term "2,1,0,1,1"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "greater_literals" (formula "30") (term "0,1"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "andLeft" (formula "30"))
                           (rule "notLeft" (formula "30"))
                           (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
                           (rule "pullOutSelect" (formula "43") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_4"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "21"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "4"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")) (ifInst ""  (formula "4")))
                           (rule "applyEqReverse" (formula "44") (term "0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_4"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "21"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "4"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")) (ifInst ""  (formula "4")))
                           (rule "applyEqReverse" (formula "43") (term "0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_4"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "21"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "4"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")) (ifInst ""  (formula "4")))
                           (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_4"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "21"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "4"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")) (ifInst ""  (formula "4")))
                           (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_4"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "21"))
                           (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "4"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "56")) (ifInst ""  (formula "4")))
                           (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "pullOutSelect" (formula "33") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_4"))
                           (rule "applyEq" (formula "39") (term "0") (ifseqformula "33"))
                           (rule "applyEq" (formula "34") (term "0,1,1,1,0,0") (ifseqformula "33"))
                           (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "24"))
                           (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "55")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "0,0,0") (ifseqformula "20"))
                           (rule "replace_known_left" (formula "33") (term "0,0,0,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "33"))
                           (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "20"))
                           (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "55")) (ifInst ""  (formula "3")))
                           (rule "applyEqReverse" (formula "34") (term "0,1,1,1,0,0") (ifseqformula "33"))
                           (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "33"))
                           (rule "applyEqReverse" (formula "34") (term "1,0,0,1,0") (ifseqformula "33"))
                           (rule "hideAuxiliaryEq" (formula "33"))
                           (rule "pullOutSelect" (formula "32") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_4"))
                           (rule "applyEq" (formula "38") (term "0") (ifseqformula "32"))
                           (rule "applyEq" (formula "33") (term "0,1,1,1,0,0") (ifseqformula "32"))
                           (rule "simplifySelectOfAnonEQ" (formula "32") (ifseqformula "24"))
                           (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "54")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "0,0,0") (ifseqformula "20"))
                           (rule "replace_known_left" (formula "32") (term "0,0,0,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "32"))
                           (rule "simplifySelectOfAnonEQ" (formula "32") (ifseqformula "20"))
                           (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "54")) (ifInst ""  (formula "3")))
                           (rule "applyEqReverse" (formula "33") (term "0,1,1,1,0,0") (ifseqformula "32"))
                           (rule "applyEqReverse" (formula "33") (term "1,0,0,1,0") (ifseqformula "32"))
                           (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "32"))
                           (rule "hideAuxiliaryEq" (formula "32"))
                           (rule "pullOutSelect" (formula "31") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_4"))
                           (rule "applyEq" (formula "32") (term "0,1,1,1,0,0") (ifseqformula "31"))
                           (rule "applyEq" (formula "37") (term "0") (ifseqformula "31"))
                           (rule "simplifySelectOfAnonEQ" (formula "31") (ifseqformula "24"))
                           (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "53")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "31") (term "0,0,0") (ifseqformula "20"))
                           (rule "replace_known_left" (formula "31") (term "0,0,0,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "simplifySelectOfAnonEQ" (formula "31") (ifseqformula "20"))
                           (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "53")) (ifInst ""  (formula "3")))
                           (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "31"))
                           (rule "applyEqReverse" (formula "32") (term "1,0,0,1,0") (ifseqformula "31"))
                           (rule "applyEqReverse" (formula "32") (term "0,1,1,1,0,0") (ifseqformula "31"))
                           (rule "hideAuxiliaryEq" (formula "31"))
                           (rule "pullOutSelect" (formula "30") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_4"))
                           (rule "applyEq" (formula "36") (term "0") (ifseqformula "30"))
                           (rule "applyEq" (formula "31") (term "0,1,1,1,0,0") (ifseqformula "30"))
                           (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "24"))
                           (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "52")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,0,0") (ifseqformula "20"))
                           (rule "replace_known_left" (formula "30") (term "0,0,0,0") (ifseqformula "3"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "20"))
                           (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "52")) (ifInst ""  (formula "3")))
                           (rule "applyEqReverse" (formula "31") (term "0,1,1,1,0,0") (ifseqformula "30"))
                           (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "30"))
                           (rule "applyEqReverse" (formula "31") (term "1,0,0,1,0") (ifseqformula "30"))
                           (rule "hideAuxiliaryEq" (formula "30"))
                           (rule "commute_or_2" (formula "34") (term "0"))
                           (rule "commute_or_2" (formula "29") (term "0"))
                           (rule "commute_or_2" (formula "11") (term "0,1,1,0"))
                           (rule "nnf_imp2or" (formula "33") (term "0"))
                           (rule "ifthenelse_to_or_right" (formula "11") (term "0,1,0"))
                           (builtin "One Step Simplification" (formula "11"))
                           (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0,1,0"))
                           (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0,1,0"))
                           (rule "add_literals" (formula "11") (term "0,0,0,0,0,1,0"))
                           (rule "add_zero_left" (formula "11") (term "0,0,0,0,1,0"))
                           (rule "inEqSimp_notGeq" (formula "11") (term "0,1,1,0,1,0"))
                           (rule "mul_literals" (formula "11") (term "1,0,0,0,1,1,0,1,0"))
                           (rule "add_literals" (formula "11") (term "0,0,0,1,1,0,1,0"))
                           (rule "add_zero_left" (formula "11") (term "0,0,1,1,0,1,0"))
                           (rule "nnf_imp2or" (formula "32") (term "0"))
                           (rule "nnf_imp2or" (formula "31") (term "0"))
                           (rule "nnf_imp2or" (formula "30") (term "0"))
                           (rule "nnf_notAnd" (formula "33") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0"))
                           (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "33") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                           (rule "mul_literals" (formula "33") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "32") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "32") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0"))
                           (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "32") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0"))
                           (rule "mul_literals" (formula "32") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "31") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "31") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "31") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0"))
                           (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "31") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0"))
                           (rule "mul_literals" (formula "31") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "30") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
                           (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "30") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                           (rule "mul_literals" (formula "30") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
                           (rule "commute_or_2" (formula "17") (term "0"))
                           (rule "commute_or_2" (formula "16") (term "0"))
                           (rule "commute_or_2" (formula "15") (term "0"))
                           (rule "commute_or_2" (formula "14") (term "0"))
                           (rule "ifthenelse_split" (formula "28") (term "0"))
                           (branch "null.length ≥ 1 TRUE"
                              (rule "polySimp_homoEq" (formula "29"))
                              (rule "polySimp_addComm1" (formula "29") (term "0"))
                              (rule "polySimp_sepPosMonomial" (formula "29"))
                              (rule "polySimp_mulComm0" (formula "29") (term "1"))
                              (rule "polySimp_rightDist" (formula "29") (term "1"))
                              (rule "mul_literals" (formula "29") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "29") (term "1,1"))
                              (rule "close" (formula "52") (ifseqformula "29"))
                           )
                           (branch "null.length ≥ 1 FALSE"
                              (rule "polySimp_homoEq" (formula "28"))
                              (rule "times_zero_2" (formula "28") (term "1,0"))
                              (rule "add_zero_right" (formula "28") (term "0"))
                              (rule "inEqSimp_geqRight" (formula "35"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "polySimp_sepPosMonomial" (formula "29"))
                              (rule "mul_literals" (formula "29") (term "1"))
                              (rule "applyEq" (formula "30") (term "1,1,0") (ifseqformula "29"))
                              (rule "applyEq" (formula "35") (term "1,1,0") (ifseqformula "29"))
                              (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
                              (rule "qeq_literals" (formula "28"))
                              (rule "true_left" (formula "28"))
                              (rule "applyEq" (formula "29") (term "1,1,0,0,1,0,0") (ifseqformula "28"))
                              (rule "add_literals" (formula "29") (term "1,0,0,1,0,0"))
                              (rule "eqSymm" (formula "29") (term "1,0,0"))
                              (rule "applyEq" (formula "51") (term "0") (ifseqformula "28"))
                              (rule "polySimp_homoEq" (formula "51"))
                              (rule "mul_literals" (formula "51") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "51") (term "0"))
                              (rule "add_literals" (formula "51") (term "0,0"))
                              (rule "add_zero_left" (formula "51") (term "0"))
                              (rule "applyEq" (formula "29") (term "1,1,1,0,0,1,0,0") (ifseqformula "28"))
                              (rule "add_literals" (formula "29") (term "1,1,0,0,1,0,0"))
                              (rule "eqSymm" (formula "29") (term "1,0,0"))
                              (rule "applyEq" (formula "29") (term "1,1,0,2,0,1,0,0") (ifseqformula "28"))
                              (rule "add_literals" (formula "29") (term "1,0,2,0,1,0,0"))
                              (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "51"))
                              (rule "add_zero_right" (formula "1") (term "1"))
                              (rule "inEqSimp_contradEq3" (formula "51") (ifseqformula "1"))
                              (rule "times_zero_1" (formula "51") (term "1,0,0"))
                              (rule "add_zero_right" (formula "51") (term "0,0"))
                              (rule "qeq_literals" (formula "51") (term "0"))
                              (builtin "One Step Simplification" (formula "51"))
                              (rule "false_right" (formula "51"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "1") (term "0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "result_1.length ≥ 1 FALSE"
                           (rule "polySimp_homoEq" (formula "23"))
                           (rule "times_zero_2" (formula "23") (term "1,0"))
                           (rule "add_zero_right" (formula "23") (term "0"))
                           (rule "inEqSimp_geqRight" (formula "27"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "polySimp_sepPosMonomial" (formula "24"))
                           (rule "mul_literals" (formula "24") (term "1"))
                           (rule "ifEqualsInteger" (formula "24"))
                           (rule "equal_literals" (formula "24") (term "1,1"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "andLeft" (formula "24"))
                           (rule "replace_known_left" (formula "26") (term "0,1,1,0,0,1,0") (ifseqformula "24"))
                           (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "24")) (ifInst ""  (formula "24")))
                           (rule "eqSymm" (formula "26") (term "1,0"))
                           (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                           (rule "qeq_literals" (formula "24"))
                           (rule "closeFalse" (formula "24"))
                        )
                     )
                  )
               )
            )
            (branch "messages.<created> = TRUE"
               (rule "orLeft" (formula "5"))
               (branch "bal = null"
                  (rule "close" (formula "30") (ifseqformula "5"))
               )
               (branch "bal.<created> = TRUE"
                  (rule "orLeft" (formula "22"))
                  (branch "result_1 = null"
                     (rule "close" (formula "26") (ifseqformula "22"))
                  )
                  (branch "result_1.<created>@heapAfter_addEntry = TRUE"
                     (rule "orLeft" (formula "16"))
                     (branch "result_0 = null"
                        (rule "close" (formula "28") (ifseqformula "16"))
                     )
                     (branch "result_0.<created>@heapAfter_first = TRUE"
                        (rule "array2seq2dDef" (formula "23") (term "0") (inst "u=u") (userinteraction))
                        (rule "array2seq2dDef" (formula "23") (term "0,1") (inst "u=u") (userinteraction))
                        (rule "equalityToSeqGetAndSeqLenLeft" (formula "23") (inst "iv=iv") (userinteraction))
                        (builtin "One Step Simplification" (formula "10"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (ifseqformula "20"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (ifseqformula "15"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (ifseqformula "15"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "22") (term "0") (ifseqformula "15"))
                        (rule "andLeft" (formula "23"))
                        (rule "orRight" (formula "29"))
                        (rule "eqSymm" (formula "9"))
                        (rule "eqSymm" (formula "10") (term "1,0"))
                        (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "32"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "replace_known_right" (formula "22") (term "1,0") (ifseqformula "30"))
                        (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "29")))
                        (rule "polySimp_addComm0" (formula "35") (term "1"))
                        (rule "lenOfSeqConcat" (formula "23") (term "1"))
                        (builtin "One Step Simplification" (formula "23"))
                        (rule "polySimp_addComm0" (formula "23") (term "1"))
                        (rule "getOfSeqDef" (formula "24") (term "0,1,0"))
                        (rule "castDel" (formula "24") (term "1,0,1,0"))
                        (rule "castDel" (formula "24") (term "2,0,1,0"))
                        (rule "add_zero_right" (formula "24") (term "0,2,1,1,0,1,0"))
                        (rule "eqSymm" (formula "24") (term "1,0"))
                        (rule "polySimp_elimSub" (formula "24") (term "1,1,0,1,1,0"))
                        (rule "mul_literals" (formula "24") (term "1,1,1,0,1,1,0"))
                        (rule "add_zero_right" (formula "24") (term "1,1,0,1,1,0"))
                        (rule "lenOfSeqDef" (formula "24") (term "1,1,0,0"))
                        (rule "polySimp_elimSub" (formula "24") (term "1,1,1,0,0"))
                        (rule "times_zero_2" (formula "24") (term "1,1,1,1,0,0"))
                        (rule "add_zero_right" (formula "24") (term "1,1,1,0,0"))
                        (rule "lenOfSeqDef" (formula "23") (term "0"))
                        (rule "polySimp_elimSub" (formula "23") (term "1,0"))
                        (rule "mul_literals" (formula "23") (term "1,1,0"))
                        (rule "add_zero_right" (formula "23") (term "1,0"))
                        (rule "polySimp_homoEq" (formula "23"))
                        (rule "polySimp_addComm1" (formula "23") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
                        (rule "lenOfSeqDef" (formula "23") (term "1,0"))
                        (rule "polySimp_elimSub" (formula "23") (term "1,1,0"))
                        (rule "times_zero_2" (formula "23") (term "1,1,1,0"))
                        (rule "add_zero_right" (formula "23") (term "1,1,0"))
                        (rule "polySimp_addComm1" (formula "23") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "24") (term "0,1,1,0,0"))
                        (rule "add_zero_right" (formula "24") (term "0,0,1,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "11"))
                        (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "23") (term "0,1,0,0"))
                        (rule "add_zero_right" (formula "23") (term "0,0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,1,0"))
                        (rule "add_zero_right" (formula "23") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,1,1,0"))
                        (rule "inEqSimp_homoInEq1" (formula "7"))
                        (rule "polySimp_addComm1" (formula "7") (term "0"))
                        (rule "polySimp_sepNegMonomial" (formula "23"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                        (rule "polySimp_elimOne" (formula "23") (term "0"))
                        (rule "applyEq" (formula "24") (term "0,1,0,0,1,0,0") (ifseqformula "23"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "24") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "24") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,1,0,1,1,0"))
                        (rule "mul_literals" (formula "24") (term "0,1,1,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1"))
                        (rule "polySimp_rightDist" (formula "7") (term "1"))
                        (rule "mul_literals" (formula "7") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "0,0,1,1"))
                        (rule "polySimp_elimOne" (formula "23") (term "0,0,1,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "23") (term "0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,0,0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "24") (term "0,0,0,0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0"))
                        (rule "nonNull" (formula "27") (inst "i=i"))
                        (rule "sub_literals" (formula "27") (term "2,1,0,1,1"))
                        (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "28")))
                        (rule "greater_literals" (formula "27") (term "0"))
                        (builtin "One Step Simplification" (formula "27"))
                        (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                        (rule "array2seqDef" (formula "25") (term "0,1,1") (inst "u=u"))
                        (rule "eqSymm" (formula "25"))
                        (rule "nonNull" (formula "13") (inst "i=i"))
                        (rule "greater_literals" (formula "13") (term "0,1"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "sub_literals" (formula "13") (term "2,1,0,1"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "andLeft" (formula "13"))
                        (rule "notLeft" (formula "13"))
                        (rule "narrowSelectArrayType" (formula "13") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "28"))
                        (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                        (rule "array2seqDef" (formula "17") (term "0") (inst "u=u"))
                        (rule "array2seqDef" (formula "17") (term "0,1") (inst "u=u"))
                        (rule "array2seqDef" (formula "8") (term "0,0") (inst "u=u"))
                        (rule "narrowSelectArrayType" (formula "8") (term "2,0,0") (ifseqformula "1") (ifseqformula "34"))
                        (rule "array2seqDef" (formula "9") (term "1") (inst "u=u"))
                        (rule "eqSymm" (formula "9"))
                        (rule "narrowSelectArrayType" (formula "9") (term "2,0") (ifseqformula "1") (ifseqformula "34"))
                        (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "9"))
                        (rule "array2seqDef" (formula "10") (term "0,1,0") (inst "u=u"))
                        (rule "array2seqDef" (formula "10") (term "1,1,0") (inst "u=u"))
                        (rule "array2seqDef" (formula "24") (term "1,1,1,0") (inst "u=u"))
                        (rule "eqSymm" (formula "24") (term "1,0"))
                        (rule "array2seqDef" (formula "7") (term "0,0") (inst "u=u"))
                        (rule "narrowSelectArrayType" (formula "7") (term "2,0,0") (ifseqformula "1") (ifseqformula "34"))
                        (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "9"))
                        (rule "eqSeqDef" (formula "25") (inst "iv=iv"))
                        (rule "andLeft" (formula "25"))
                        (rule "getOfSeqDef" (formula "26") (term "1,1,0"))
                        (rule "castDel" (formula "26") (term "2,1,1,0"))
                        (rule "castDel" (formula "26") (term "1,1,1,0"))
                        (rule "add_zero_right" (formula "26") (term "0,2,1,1,1,1,0"))
                        (rule "polySimp_elimSub" (formula "26") (term "1,1,0,1,1,0"))
                        (rule "mul_literals" (formula "26") (term "1,1,1,0,1,1,0"))
                        (rule "add_zero_right" (formula "26") (term "1,1,0,1,1,0"))
                        (rule "lenOfSeqConcat" (formula "25") (term "0"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "eqSymm" (formula "25"))
                        (rule "polySimp_addComm0" (formula "25") (term "1"))
                        (rule "lenOfSeqConcat" (formula "26") (term "1,1,0,0"))
                        (builtin "One Step Simplification" (formula "26"))
                        (rule "polySimp_addComm0" (formula "26") (term "1,1,0,0"))
                        (rule "lenOfSeqDef" (formula "25") (term "0"))
                        (rule "polySimp_elimSub" (formula "25") (term "1,0"))
                        (rule "mul_literals" (formula "25") (term "1,1,0"))
                        (rule "add_zero_right" (formula "25") (term "1,0"))
                        (rule "polySimp_homoEq" (formula "25"))
                        (rule "polySimp_addComm1" (formula "25") (term "0"))
                        (rule "lenOfSeqDef" (formula "26") (term "1,1,1,0,0"))
                        (rule "polySimp_elimSub" (formula "26") (term "1,1,1,1,0,0"))
                        (rule "times_zero_2" (formula "26") (term "1,1,1,1,1,0,0"))
                        (rule "add_zero_right" (formula "26") (term "1,1,1,1,0,0"))
                        (rule "lenOfSeqDef" (formula "25") (term "1,0"))
                        (rule "polySimp_elimSub" (formula "25") (term "1,1,0"))
                        (rule "times_zero_2" (formula "25") (term "1,1,1,0"))
                        (rule "add_zero_right" (formula "25") (term "1,1,0"))
                        (rule "polySimp_addComm1" (formula "25") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "26") (term "0,1,1,1,0,0"))
                        (rule "add_zero_right" (formula "26") (term "0,0,1,1,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,1,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,1,0"))
                        (rule "add_zero_right" (formula "25") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "25") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "26") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "26") (term "0,0,1,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1,0"))
                        (rule "add_zero_right" (formula "25") (term "0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "25") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0"))
                        (rule "polySimp_sepNegMonomial" (formula "25"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                        (rule "polySimp_elimOne" (formula "25") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,1,0,1,1,0"))
                        (rule "mul_literals" (formula "26") (term "0,1,1,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,1,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0,0,0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "0,0,0,0,0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "26") (term "0,0,0,0,0,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "0,0,1,1"))
                        (rule "polySimp_elimOne" (formula "25") (term "0,0,1,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0"))
                        (rule "polySimp_elimOne" (formula "25") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                        (rule "eqSeqDef" (formula "10") (term "1,0") (inst "iv=iv"))
                        (rule "lenOfSeqDef" (formula "10") (term "1,0,1,0"))
                        (rule "polySimp_elimSub" (formula "10") (term "1,1,0,1,0"))
                        (rule "mul_literals" (formula "10") (term "1,1,1,0,1,0"))
                        (rule "add_zero_right" (formula "10") (term "1,1,0,1,0"))
                        (rule "getOfSeqDef" (formula "10") (term "1,1,0,1,1,0"))
                        (rule "castDel" (formula "10") (term "2,1,1,0,1,1,0"))
                        (rule "castDel" (formula "10") (term "1,1,1,0,1,1,0"))
                        (rule "add_zero_right" (formula "10") (term "0,2,1,1,1,0,1,1,0"))
                        (rule "polySimp_elimSub" (formula "10") (term "1,1,0,1,1,0,1,1,0"))
                        (rule "times_zero_2" (formula "10") (term "1,1,1,0,1,1,0,1,1,0"))
                        (rule "add_zero_right" (formula "10") (term "1,1,0,1,1,0,1,1,0"))
                        (rule "lenOfSeqDef" (formula "10") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_elimSub" (formula "10") (term "1,1,1,0,0,1,1,0"))
                        (rule "times_zero_2" (formula "10") (term "1,1,1,1,0,0,1,1,0"))
                        (rule "add_zero_right" (formula "10") (term "1,1,1,0,0,1,1,0"))
                        (rule "getOfSeqDef" (formula "10") (term "0,1,0,1,1,0"))
                        (rule "castDel" (formula "10") (term "2,0,1,0,1,1,0"))
                        (rule "castDel" (formula "10") (term "1,0,1,0,1,1,0"))
                        (rule "add_zero_right" (formula "10") (term "0,2,1,0,1,0,1,1,0"))
                        (rule "polySimp_elimSub" (formula "10") (term "1,1,0,0,1,0,1,1,0"))
                        (rule "times_zero_2" (formula "10") (term "1,1,1,0,0,1,0,1,1,0"))
                        (rule "add_zero_right" (formula "10") (term "1,1,0,0,1,0,1,1,0"))
                        (rule "lenOfSeqDef" (formula "10") (term "0,0,1,0"))
                        (rule "polySimp_elimSub" (formula "10") (term "1,0,0,1,0"))
                        (rule "times_zero_2" (formula "10") (term "1,1,0,0,1,0"))
                        (rule "add_zero_right" (formula "10") (term "1,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "10") (term "0,1,0,1,0"))
                        (rule "add_zero_right" (formula "10") (term "0,0,1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,1,1,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,1,1,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "10") (term "0,1,1,0,0,1,1,0"))
                        (rule "add_zero_right" (formula "10") (term "0,0,1,1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,1,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,1,0"))
                        (rule "add_zero_right" (formula "10") (term "0,0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,1,1,0,1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,0,1,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "0,0,1,0,1,0"))
                        (rule "polySimp_elimOne" (formula "10") (term "0,0,1,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,1,1,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,1,1,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,1,0,1,1,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,1,1,0,1,1,0"))
                        (rule "mul_literals" (formula "10") (term "0,1,1,0,1,1,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,1,1,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,0,1,1,0"))
                        (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,0,1,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "10") (term "0,0,0,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,0,1,0,0,1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "10") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,1,0"))
                        (rule "getOfSeqConcat" (formula "24") (term "1,1,0"))
                        (rule "eqSymm" (formula "24") (term "1,0"))
                        (rule "polySimp_elimSub" (formula "24") (term "1,2,0,1,0"))
                        (rule "lenOfSeqDef" (formula "24") (term "1,0,0,1,0"))
                        (rule "polySimp_elimSub" (formula "24") (term "1,1,0,0,1,0"))
                        (rule "times_zero_2" (formula "24") (term "1,1,1,0,0,1,0"))
                        (rule "add_zero_right" (formula "24") (term "1,1,0,0,1,0"))
                        (rule "getOfSeqDef" (formula "24") (term "1,0,1,0"))
                        (rule "castDel" (formula "24") (term "2,1,0,1,0"))
                        (rule "castDel" (formula "24") (term "1,1,0,1,0"))
                        (rule "add_zero_right" (formula "24") (term "0,2,1,1,1,0,1,0"))
                        (rule "polySimp_elimSub" (formula "24") (term "1,1,0,1,0,1,0"))
                        (rule "times_zero_2" (formula "24") (term "1,1,1,0,1,0,1,0"))
                        (rule "add_zero_right" (formula "24") (term "1,1,0,1,0,1,0"))
                        (rule "lenOfSeqDef" (formula "24") (term "0,1,1,2,0,1,0"))
                        (rule "eqSymm" (formula "24") (term "1,0"))
                        (rule "polySimp_elimSub" (formula "24") (term "1,0,1,1,2,1,1,0"))
                        (rule "times_zero_2" (formula "24") (term "1,1,0,1,1,2,1,1,0"))
                        (rule "add_zero_right" (formula "24") (term "1,0,1,1,2,1,1,0"))
                        (rule "polySimp_addComm0" (formula "24") (term "1,2,1,1,0"))
                        (rule "getOfSeqSingleton" (formula "24") (term "2,1,1,0"))
                        (rule "castDel" (formula "24") (term "2,2,1,1,0"))
                        (rule "castDel" (formula "24") (term "1,2,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "24") (term "0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,1,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,1,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0,0,0,2,1,1,0"))
                        (rule "add_zero_right" (formula "24") (term "0,0,0,0,0,0,2,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,0,2,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,1,0,0,0,1,1,0"))
                        (rule "add_zero_right" (formula "24") (term "0,0,0,1,0,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,1,0,0,0,1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,1,1,1,0"))
                        (rule "polySimp_sepPosMonomial" (formula "24") (term "0,2,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,0,2,1,1,0"))
                        (rule "polySimp_elimOne" (formula "24") (term "1,0,2,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,1,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,1,1,1,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,1,0,1,1,1,0"))
                        (rule "mul_literals" (formula "24") (term "0,1,1,0,1,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,1,1,1,0"))
                        (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,1,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,0,1,1,0"))
                        (rule "mul_literals" (formula "24") (term "0,1,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "24") (term "1,1,0,1,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,1,0,2,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "0,0,1,0,2,1,1,0"))
                        (rule "polySimp_elimOne" (formula "24") (term "0,0,1,0,2,1,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,1,1,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "0,0,1,1,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "24") (term "0,0,1,1,0,1,1,0"))
                        (rule "getOfSeqConcat" (formula "25") (term "0,1,0"))
                        (rule "polySimp_elimSub" (formula "25") (term "1,2,0,1,0"))
                        (rule "getOfSeqDef" (formula "25") (term "1,0,1,0"))
                        (rule "castDel" (formula "25") (term "1,1,0,1,0"))
                        (rule "castDel" (formula "25") (term "2,1,0,1,0"))
                        (rule "add_zero_right" (formula "25") (term "0,2,1,1,1,0,1,0"))
                        (rule "polySimp_elimSub" (formula "25") (term "1,1,0,1,0,1,0"))
                        (rule "times_zero_2" (formula "25") (term "1,1,1,0,1,0,1,0"))
                        (rule "add_zero_right" (formula "25") (term "1,1,0,1,0,1,0"))
                        (rule "lenOfSeqDef" (formula "25") (term "1,0,0,1,0"))
                        (rule "polySimp_elimSub" (formula "25") (term "1,1,0,0,1,0"))
                        (rule "times_zero_2" (formula "25") (term "1,1,1,0,0,1,0"))
                        (rule "add_zero_right" (formula "25") (term "1,1,0,0,1,0"))
                        (rule "lenOfSeqDef" (formula "25") (term "0,1,1,2,0,1,0"))
                        (rule "polySimp_elimSub" (formula "25") (term "1,0,1,1,2,0,1,0"))
                        (rule "times_zero_2" (formula "25") (term "1,1,0,1,1,2,0,1,0"))
                        (rule "add_zero_right" (formula "25") (term "1,0,1,1,2,0,1,0"))
                        (rule "polySimp_addComm0" (formula "25") (term "1,2,0,1,0"))
                        (rule "getOfSeqSingleton" (formula "25") (term "2,0,1,0"))
                        (rule "castDel" (formula "25") (term "2,2,0,1,0"))
                        (rule "castDel" (formula "25") (term "1,2,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,1,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "25") (term "0,1,0,0,1,0"))
                        (rule "add_zero_right" (formula "25") (term "0,0,1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,0,0,0,2,0,1,0"))
                        (rule "add_zero_right" (formula "25") (term "0,0,0,0,0,0,2,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,0,2,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "25") (term "0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,1,0,1,0"))
                        (rule "polySimp_sepPosMonomial" (formula "25") (term "0,2,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,0,2,0,1,0"))
                        (rule "polySimp_elimOne" (formula "25") (term "1,0,2,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "25") (term "1,1,0,1,0,1,0"))
                        (rule "mul_literals" (formula "25") (term "0,1,1,0,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,1,0,1,0"))
                        (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,1,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0"))
                        (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,1,0,2,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "0,0,1,0,2,0,1,0"))
                        (rule "polySimp_elimOne" (formula "25") (term "0,0,1,0,2,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0,1,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "0,0,1,1,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "25") (term "0,0,1,1,0,0,1,0"))
                        (rule "array2seqDef" (formula "25") (term "1,1,1,0") (inst "u=u"))
                        (rule "eqSeqDef2" (formula "17") (inst "iv=iv") (ifseqformula "17"))
                        (builtin "One Step Simplification" (formula "17"))
                        (rule "true_left" (formula "17"))
                        (rule "eqSeqDef2" (formula "9") (inst "iv=iv") (ifseqformula "9"))
                        (builtin "One Step Simplification" (formula "9"))
                        (rule "true_left" (formula "9"))
                        (rule "array2seqDef" (formula "22") (term "1,1,1,1,0") (inst "u=u"))
                        (rule "eqSymm" (formula "22") (term "1,0"))
                        (rule "array2seqDef" (formula "23") (term "1,1,0,1,0") (inst "u=u"))
                        (rule "array2seqDef" (formula "22") (term "1,2,0,1,0") (inst "u=u"))
                        (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "7"))
                        (rule "times_zero_1" (formula "8") (term "0,0"))
                        (rule "add_zero_left" (formula "8") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                        (rule "mul_literals" (formula "8") (term "1"))
                        (rule "nnf_imp2or" (formula "25") (term "0"))
                        (rule "nnf_imp2or" (formula "13") (term "0"))
                        (rule "nnf_imp2or" (formula "10") (term "0"))
                        (rule "nnf_imp2or" (formula "23") (term "0"))
                        (rule "nnf_notAnd" (formula "25") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                        (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "25") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                        (rule "mul_literals" (formula "25") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "13") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                        (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                        (rule "mul_literals" (formula "13") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "10") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
                        (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                        (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                        (rule "nnf_notAnd" (formula "23") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
                        (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0"))
                        (rule "add_zero_right" (formula "23") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                        (rule "mul_literals" (formula "23") (term "1,0,0,0"))
                        (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                        (rule "nnf_imp2or" (formula "10") (term "0,1,1,0"))
                        (rule "nnf_notAnd" (formula "10") (term "0,0,1,1,0"))
                        (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0,1,1,0"))
                        (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0,1,1,0"))
                        (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,1,1,0"))
                        (rule "add_zero_left" (formula "10") (term "0,0,1,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,1,1,0"))
                        (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0,1,1,0"))
                        (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,1,1,0"))
                        (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "10") (term "1,0,0,0,1,1,0"))
                        (rule "arrayLengthIsAShort" (formula "34") (term "0"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "arrayLengthNotNegative" (formula "34") (term "0"))
                        (rule "arrayLengthIsAShort" (formula "35") (term "1,1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "arrayLengthNotNegative" (formula "35") (term "1,1"))
                        (rule "ifthenelse_split" (formula "24") (term "1,1"))
                        (branch "messages.length ≥ 1 TRUE"
                           (rule "replace_known_left" (formula "26") (term "0,1,0,2,0,1,0") (ifseqformula "24"))
                           (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "24")) (ifInst ""  (formula "24")))
                           (rule "eqSymm" (formula "26") (term "1,0"))
                           (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "24"))
                           (rule "leq_literals" (formula "1") (term "0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "ifthenelse_split" (formula "24") (term "0"))
                           (branch "result_1.length ≥ 1 TRUE"
                              (rule "close" (formula "37") (ifseqformula "25"))
                           )
                           (branch "result_1.length ≥ 1 FALSE"
                              (rule "polySimp_homoEq" (formula "24"))
                              (rule "times_zero_2" (formula "24") (term "1,0"))
                              (rule "add_zero_right" (formula "24") (term "0"))
                              (rule "inEqSimp_geqRight" (formula "28"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "polySimp_sepPosMonomial" (formula "25"))
                              (rule "mul_literals" (formula "25") (term "1"))
                              (rule "applyEq" (formula "13") (term "1") (ifseqformula "25"))
                              (rule "applyEq" (formula "12") (term "1,1,0,0") (ifseqformula "25"))
                              (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                              (rule "qeq_literals" (formula "24"))
                              (rule "closeFalse" (formula "24"))
                           )
                        )
                        (branch "messages.length ≥ 1 FALSE"
                           (rule "add_zero_right" (formula "24") (term "1"))
                           (rule "replace_known_right" (formula "25") (term "0,1,0,2,0,1,0") (ifseqformula "28"))
                           (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "28")) (ifInst ""  (formula "28")))
                           (rule "add_literals" (formula "25") (term "1,0,0,1,0"))
                           (rule "add_zero_right" (formula "25") (term "1,1,0,0"))
                           (rule "eqSymm" (formula "25") (term "1,0"))
                           (rule "ifEqualsInteger" (formula "24"))
                           (rule "equal_literals" (formula "24") (term "1,1"))
                           (builtin "One Step Simplification" (formula "24"))
                           (rule "andLeft" (formula "24"))
                           (rule "inEqSimp_geqRight" (formula "29"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "applyEq" (formula "29") (term "1,1,0,0") (ifseqformula "26"))
                           (rule "applyEq" (formula "38") (term "0") (ifseqformula "26"))
                           (rule "polySimp_homoEq" (formula "38"))
                           (rule "mul_literals" (formula "38") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "38") (term "0"))
                           (rule "add_literals" (formula "38") (term "0,0"))
                           (rule "add_zero_left" (formula "38") (term "0"))
                           (rule "applyEq" (formula "3") (term "0") (ifseqformula "26"))
                           (rule "qeq_literals" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "applyEq" (formula "26") (term "1,1,1,0,0,1,0") (ifseqformula "25"))
                           (rule "add_literals" (formula "26") (term "1,1,0,0,1,0"))
                           (rule "eqSymm" (formula "26") (term "1,0"))
                           (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                           (rule "qeq_literals" (formula "24"))
                           (rule "true_left" (formula "24"))
                           (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "36"))
                           (rule "add_zero_right" (formula "1") (term "1"))
                           (rule "inEqSimp_contradEq3" (formula "36") (ifseqformula "1"))
                           (rule "times_zero_1" (formula "36") (term "1,0,0"))
                           (rule "add_zero_right" (formula "36") (term "0,0"))
                           (rule "qeq_literals" (formula "36") (term "0"))
                           (builtin "One Step Simplification" (formula "36"))
                           (rule "false_right" (formula "36"))
                           (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
                           (rule "qeq_literals" (formula "2") (term "0"))
                           (builtin "One Step Simplification" (formula "2"))
                           (rule "closeFalse" (formula "2"))
                        )
                     )
                  )
               )
            )
         )
      )
      (branch "Case 2"
         (builtin "One Step Simplification" (formula "5"))
         (builtin "One Step Simplification" (formula "3"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "andLeft" (formula "5"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "6") (term "1,1,0") (ifseqformula "5"))
         (rule "andLeft" (formula "3"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "1,1,0") (ifseqformula "3"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "7") (term "0,1,1,0") (ifseqformula "3"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "7") (term "0,0,0,1,0,1") (ifseqformula "3"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "5"))
         (rule "andLeft" (formula "9"))
         (rule "andLeft" (formula "2"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "7"))
         (rule "andLeft" (formula "9"))
         (rule "andLeft" (formula "12"))
         (rule "andLeft" (formula "14"))
         (rule "andLeft" (formula "4"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "11"))
         (rule "andLeft" (formula "17"))
         (rule "andLeft" (formula "6"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "3"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "9"))
         (rule "andLeft" (formula "1"))
         (rule "notLeft" (formula "18"))
         (rule "notLeft" (formula "17"))
         (rule "andLeft" (formula "23"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "11"))
         (rule "andLeft" (formula "1"))
         (rule "notLeft" (formula "25"))
         (rule "notLeft" (formula "24"))
         (rule "andLeft" (formula "13"))
         (rule "notLeft" (formula "2"))
         (rule "orRight" (formula "27"))
         (rule "andLeft" (formula "13"))
         (rule "notLeft" (formula "14"))
         (rule "allRight" (formula "33") (inst "sk=f_0"))
         (rule "allRight" (formula "33") (inst "sk=o_0"))
         (rule "orRight" (formula "33"))
         (rule "eqSymm" (formula "23"))
         (rule "eqSymm" (formula "10") (term "1,0"))
         (rule "eqSymm" (formula "9"))
         (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "26"))
         (builtin "One Step Simplification" (formula "5"))
         (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "32"))
         (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "31")))
         (rule "replace_known_right" (formula "22") (term "0,0,1") (ifseqformula "28"))
         (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "30")) (ifInst ""  (formula "29")))
         (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "11"))
         (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
         (rule "inEqSimp_homoInEq1" (formula "7"))
         (rule "polySimp_addComm1" (formula "7") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "7"))
         (rule "polySimp_mulComm0" (formula "7") (term "1"))
         (rule "polySimp_rightDist" (formula "7") (term "1"))
         (rule "mul_literals" (formula "7") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
         (rule "polySimp_elimOne" (formula "7") (term "1,1"))
         (rule "array2seqDef" (formula "18") (term "0") (inst "u=u"))
         (rule "array2seqDef" (formula "18") (term "0,1") (inst "u=u"))
         (rule "nonNull" (formula "25") (inst "i=i"))
         (rule "sub_literals" (formula "25") (term "2,1,0,1,1"))
         (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "30")))
         (rule "greater_literals" (formula "25") (term "0"))
         (builtin "One Step Simplification" (formula "25"))
         (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
         (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
         (rule "array2seqDef" (formula "8") (term "0,0") (inst "u=u"))
         (rule "narrowSelectArrayType" (formula "8") (term "2,0,0") (ifseqformula "1") (ifseqformula "26"))
         (rule "nonNull" (formula "13") (inst "i=i"))
         (rule "greater_literals" (formula "13") (term "0,1"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "sub_literals" (formula "13") (term "2,1,0,1"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "andLeft" (formula "13"))
         (rule "notLeft" (formula "13"))
         (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "26"))
         (builtin "One Step Simplification" (formula "4"))
         (rule "narrowSelectArrayType" (formula "13") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "26"))
         (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
         (rule "array2seqDef" (formula "23") (term "0,1,0") (inst "u=u"))
         (rule "array2seqDef" (formula "10") (term "1,1,0") (inst "u=u"))
         (rule "eqSymm" (formula "10") (term "1,0"))
         (rule "array2seqDef" (formula "9") (term "1") (inst "u=u"))
         (rule "eqSymm" (formula "9"))
         (rule "narrowSelectArrayType" (formula "9") (term "2,0") (ifseqformula "1") (ifseqformula "27"))
         (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "9"))
         (rule "array2seqDef" (formula "7") (term "0,0") (inst "u=u"))
         (rule "narrowSelectArrayType" (formula "7") (term "2,0,0") (ifseqformula "1") (ifseqformula "27"))
         (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "9"))
         (rule "array2seqDef" (formula "10") (term "1,1,0") (inst "u=u"))
         (rule "eqSymm" (formula "10") (term "1,0"))
         (rule "eqSeqDef2" (formula "18") (inst "iv=iv") (ifseqformula "18"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "true_left" (formula "18"))
         (rule "eqSeqDef2" (formula "9") (inst "iv=iv") (ifseqformula "9"))
         (builtin "One Step Simplification" (formula "9"))
         (rule "true_left" (formula "9"))
         (rule "eqSeqDef" (formula "9") (term "1,0") (inst "iv=iv"))
         (rule "lenOfSeqDef" (formula "9") (term "1,0,1,0"))
         (rule "polySimp_elimSub" (formula "9") (term "1,1,0,1,0"))
         (rule "mul_literals" (formula "9") (term "1,1,1,0,1,0"))
         (rule "add_zero_right" (formula "9") (term "1,1,0,1,0"))
         (rule "lenOfSeqDef" (formula "9") (term "0,0,1,0"))
         (rule "polySimp_elimSub" (formula "9") (term "1,0,0,1,0"))
         (rule "times_zero_2" (formula "9") (term "1,1,0,0,1,0"))
         (rule "add_zero_right" (formula "9") (term "1,0,0,1,0"))
         (rule "lenOfSeqDef" (formula "9") (term "1,1,0,0,1,1,0"))
         (rule "polySimp_elimSub" (formula "9") (term "1,1,1,0,0,1,1,0"))
         (rule "times_zero_2" (formula "9") (term "1,1,1,1,0,0,1,1,0"))
         (rule "add_zero_right" (formula "9") (term "1,1,1,0,0,1,1,0"))
         (rule "getOfSeqDef" (formula "9") (term "0,1,0,1,1,0"))
         (rule "castDel" (formula "9") (term "2,0,1,0,1,1,0"))
         (rule "castDel" (formula "9") (term "1,0,1,0,1,1,0"))
         (rule "add_zero_right" (formula "9") (term "0,2,1,0,1,0,1,1,0"))
         (rule "eqSymm" (formula "9") (term "1,0,1,1,0"))
         (rule "polySimp_elimSub" (formula "9") (term "1,1,0,1,1,0,1,1,0"))
         (rule "mul_literals" (formula "9") (term "1,1,1,0,1,1,0,1,1,0"))
         (rule "add_zero_right" (formula "9") (term "1,1,0,1,1,0,1,1,0"))
         (rule "getOfSeqDef" (formula "9") (term "0,1,0,1,1,0"))
         (rule "castDel" (formula "9") (term "2,0,1,0,1,1,0"))
         (rule "castDel" (formula "9") (term "1,0,1,0,1,1,0"))
         (rule "add_zero_right" (formula "9") (term "0,2,1,0,1,0,1,1,0"))
         (rule "eqSymm" (formula "9") (term "1,0,1,1,0"))
         (rule "polySimp_elimSub" (formula "9") (term "1,1,0,1,1,0,1,1,0"))
         (rule "mul_literals" (formula "9") (term "1,1,1,0,1,1,0,1,1,0"))
         (rule "add_zero_right" (formula "9") (term "1,1,0,1,1,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "9") (term "0,1,0,1,0"))
         (rule "add_zero_right" (formula "9") (term "0,0,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,1,0"))
         (rule "add_zero_right" (formula "9") (term "0,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "9") (term "0,1,1,0,0,1,1,0"))
         (rule "add_zero_right" (formula "9") (term "0,0,1,1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,1,0,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,0,1,1,0"))
         (rule "eqSymm" (formula "9") (term "1,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,1,1,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,0,1,1,0"))
         (rule "eqSymm" (formula "9") (term "1,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,1,1,0,1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,0,1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,1,1,0,1,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,1,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "0,0,1,0,1,0"))
         (rule "polySimp_elimOne" (formula "9") (term "0,0,1,0,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "9") (term "0,0,0,0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,1,1,0"))
         (rule "mul_literals" (formula "9") (term "0,1,1,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1,0,1,1,0"))
         (rule "eqSymm" (formula "9") (term "1,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,1,1,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,1,0,1,1,0,1,1,0"))
         (rule "mul_literals" (formula "9") (term "0,1,1,0,1,1,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,1,1,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,1,1,0,1,1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,1,1,1,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "0,0,1,1,1,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "9") (term "0,0,1,1,1,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1,0,1,1,0"))
         (rule "eqSymm" (formula "9") (term "1,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,1,1,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,1,0,1,1,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,1,1,0,1,1,0"))
         (rule "mul_literals" (formula "9") (term "0,1,1,0,1,1,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,1,1,0,1,1,0"))
         (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=f_0_0"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "15"))
         (rule "eqSymm" (formula "34"))
         (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "34")))
         (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "8"))
         (rule "mul_literals" (formula "9") (term "0,0"))
         (rule "add_zero_left" (formula "9") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "9"))
         (rule "mul_literals" (formula "9") (term "1"))
         (rule "nnf_imp2or" (formula "25") (term "0"))
         (rule "nnf_imp2or" (formula "14") (term "0"))
         (rule "nnf_imp2or" (formula "11") (term "0"))
         (rule "nnf_notAnd" (formula "25") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "25") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "25") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
         (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "25") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
         (rule "mul_literals" (formula "25") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "14") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
         (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
         (rule "mul_literals" (formula "14") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "11") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
         (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
         (rule "mul_literals" (formula "11") (term "1,0,0,0"))
         (rule "nnf_imp2or" (formula "11") (term "0,1,1,0"))
         (rule "nnf_notAnd" (formula "11") (term "0,0,1,1,0"))
         (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0,1,1,0"))
         (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0,1,1,0"))
         (rule "add_zero_right" (formula "11") (term "0,0,0,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,1,1,0"))
         (rule "mul_literals" (formula "11") (term "1,0,0,0,1,1,0"))
         (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0,1,1,0"))
         (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0,1,1,0"))
         (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,1,1,0"))
         (rule "add_literals" (formula "11") (term "0,0,0,1,0,0,1,1,0"))
         (rule "add_zero_left" (formula "11") (term "0,0,1,0,0,1,1,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,1,1,0"))
         (rule "commute_or_2" (formula "25") (term "0"))
         (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "13") (ifseqformula "4"))
         (rule "andLeft" (formula "13"))
         (rule "andLeft" (formula "13"))
         (rule "notLeft" (formula "15"))
         (rule "andLeft" (formula "13"))
         (rule "notLeft" (formula "15"))
         (rule "notLeft" (formula "14"))
         (rule "andLeft" (formula "13"))
         (rule "notLeft" (formula "14"))
         (rule "andLeft" (formula "13"))
         (rule "andLeft" (formula "13"))
         (rule "andLeft" (formula "13"))
         (rule "andLeft" (formula "13"))
         (rule "notLeft" (formula "13"))
         (rule "nonNull" (formula "16") (inst "i=i"))
         (rule "greater_literals" (formula "16") (term "0,1"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "sub_literals" (formula "16") (term "2,1,0,1"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "andLeft" (formula "16"))
         (rule "notLeft" (formula "16"))
         (rule "narrowSelectArrayType" (formula "16") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "29"))
         (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
         (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "15") (inst "i=i"))
         (rule "sub_literals" (formula "15") (term "2,1,0,1,1"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "greater_literals" (formula "15") (term "0,1"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "andLeft" (formula "15"))
         (rule "notLeft" (formula "15"))
         (rule "narrowSelectArrayType" (formula "15") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "29"))
         (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "14") (inst "i=i"))
         (rule "greater_literals" (formula "14") (term "0,1"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "sub_literals" (formula "14") (term "2,1,0,1"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "andLeft" (formula "14"))
         (rule "notLeft" (formula "14"))
         (rule "narrowSelectArrayType" (formula "14") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "29"))
         (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "13") (inst "i=i"))
         (rule "sub_literals" (formula "13") (term "2,1,0,1,1"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "greater_literals" (formula "13") (term "0,1"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "andLeft" (formula "13"))
         (rule "notLeft" (formula "13"))
         (rule "narrowSelectArrayType" (formula "13") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "29"))
         (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
         (rule "nnf_imp2or" (formula "16") (term "0"))
         (rule "nnf_imp2or" (formula "15") (term "0"))
         (rule "nnf_imp2or" (formula "14") (term "0"))
         (rule "nnf_imp2or" (formula "13") (term "0"))
         (rule "nnf_notAnd" (formula "16") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
         (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "16") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
         (rule "mul_literals" (formula "16") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "16") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "16") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "15") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
         (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
         (rule "mul_literals" (formula "15") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "14") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
         (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
         (rule "mul_literals" (formula "14") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "13") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
         (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
         (rule "mul_literals" (formula "13") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
         (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "27") (ifseqformula "4"))
         (rule "andLeft" (formula "27"))
         (rule "notLeft" (formula "28"))
         (rule "andLeft" (formula "27"))
         (rule "notLeft" (formula "28"))
         (rule "andLeft" (formula "27"))
         (rule "andLeft" (formula "27"))
         (rule "notLeft" (formula "29"))
         (rule "notLeft" (formula "28"))
         (rule "andLeft" (formula "27"))
         (rule "andLeft" (formula "27"))
         (rule "andLeft" (formula "27"))
         (rule "andLeft" (formula "27"))
         (rule "notLeft" (formula "27"))
         (rule "nonNull" (formula "30") (inst "i=i"))
         (rule "greater_literals" (formula "30") (term "0,1"))
         (builtin "One Step Simplification" (formula "30"))
         (rule "sub_literals" (formula "30") (term "2,1,0,1"))
         (builtin "One Step Simplification" (formula "30"))
         (rule "andLeft" (formula "30"))
         (rule "notLeft" (formula "30"))
         (rule "inEqSimp_ltToLeq" (formula "30") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0"))
         (rule "mul_literals" (formula "30") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "29") (inst "i=i"))
         (rule "greater_literals" (formula "29") (term "0,1"))
         (builtin "One Step Simplification" (formula "29"))
         (rule "sub_literals" (formula "29") (term "2,1,0,1"))
         (builtin "One Step Simplification" (formula "29"))
         (rule "andLeft" (formula "29"))
         (rule "notLeft" (formula "29"))
         (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "28") (inst "i=i"))
         (rule "greater_literals" (formula "28") (term "0,1"))
         (builtin "One Step Simplification" (formula "28"))
         (rule "sub_literals" (formula "28") (term "2,1,0,1"))
         (builtin "One Step Simplification" (formula "28"))
         (rule "andLeft" (formula "28"))
         (rule "notLeft" (formula "28"))
         (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
         (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
         (rule "nonNull" (formula "27") (inst "i=i"))
         (rule "greater_literals" (formula "27") (term "0,1"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "sub_literals" (formula "27") (term "2,1,0,1"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "andLeft" (formula "27"))
         (rule "notLeft" (formula "27"))
         (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
         (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "20"))
         (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "4"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")) (ifInst ""  (formula "4")))
         (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "20"))
         (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "4"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")) (ifInst ""  (formula "4")))
         (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "20"))
         (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "4"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")) (ifInst ""  (formula "4")))
         (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "20"))
         (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "4"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")) (ifInst ""  (formula "4")))
         (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "20"))
         (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "4"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")) (ifInst ""  (formula "4")))
         (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "pullOutSelect" (formula "30") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_1"))
         (rule "applyEq" (formula "36") (term "0") (ifseqformula "30"))
         (rule "applyEq" (formula "31") (term "0,1,1,1,0,0") (ifseqformula "30"))
         (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "23"))
         (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "48")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,0,0") (ifseqformula "19"))
         (rule "replace_known_left" (formula "30") (term "0,0,0,0") (ifseqformula "3"))
         (builtin "One Step Simplification" (formula "30"))
         (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "19"))
         (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "48")) (ifInst ""  (formula "3")))
         (rule "applyEqReverse" (formula "31") (term "1,0,0,1,0") (ifseqformula "30"))
         (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "30"))
         (rule "applyEqReverse" (formula "31") (term "0,1,1,1,0,0") (ifseqformula "30"))
         (rule "hideAuxiliaryEq" (formula "30"))
         (rule "pullOutSelect" (formula "29") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_1"))
         (rule "applyEq" (formula "35") (term "0") (ifseqformula "29"))
         (rule "applyEq" (formula "30") (term "0,1,1,1,0,0") (ifseqformula "29"))
         (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "23"))
         (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "47")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,0,0") (ifseqformula "19"))
         (rule "replace_known_left" (formula "29") (term "0,0,0,0") (ifseqformula "3"))
         (builtin "One Step Simplification" (formula "29"))
         (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "19"))
         (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "47")) (ifInst ""  (formula "3")))
         (rule "applyEqReverse" (formula "30") (term "0,1,1,1,0,0") (ifseqformula "29"))
         (rule "applyEqReverse" (formula "30") (term "1,0,0,1,0") (ifseqformula "29"))
         (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "29"))
         (rule "hideAuxiliaryEq" (formula "29"))
         (rule "pullOutSelect" (formula "28") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_1"))
         (rule "applyEq" (formula "34") (term "0") (ifseqformula "28"))
         (rule "applyEq" (formula "29") (term "0,1,1,1,0,0") (ifseqformula "28"))
         (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "23"))
         (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "46")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,0,0") (ifseqformula "19"))
         (rule "replace_known_left" (formula "28") (term "0,0,0,0") (ifseqformula "3"))
         (builtin "One Step Simplification" (formula "28"))
         (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "19"))
         (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "46")) (ifInst ""  (formula "3")))
         (rule "applyEqReverse" (formula "29") (term "1,0,0,1,0") (ifseqformula "28"))
         (rule "applyEqReverse" (formula "34") (term "0") (ifseqformula "28"))
         (rule "applyEqReverse" (formula "29") (term "0,1,1,1,0,0") (ifseqformula "28"))
         (rule "hideAuxiliaryEq" (formula "28"))
         (rule "pullOutSelect" (formula "27") (term "1,0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_1"))
         (rule "applyEq" (formula "33") (term "0") (ifseqformula "27"))
         (rule "applyEq" (formula "28") (term "0,1,1,1,0,0") (ifseqformula "27"))
         (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "23"))
         (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "45")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,0,0") (ifseqformula "19"))
         (rule "replace_known_left" (formula "27") (term "0,0,0,0") (ifseqformula "3"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "19"))
         (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "45")) (ifInst ""  (formula "3")))
         (rule "applyEqReverse" (formula "28") (term "0,1,1,1,0,0") (ifseqformula "27"))
         (rule "applyEqReverse" (formula "33") (term "0") (ifseqformula "27"))
         (rule "applyEqReverse" (formula "28") (term "1,0,0,1,0") (ifseqformula "27"))
         (rule "hideAuxiliaryEq" (formula "27"))
         (rule "commute_or_2" (formula "17") (term "0"))
         (rule "commute_or" (formula "31") (term "0,0"))
         (rule "nnf_imp2or" (formula "30") (term "0"))
         (rule "nnf_imp2or" (formula "29") (term "0"))
         (rule "nnf_imp2or" (formula "28") (term "0"))
         (rule "commute_or_2" (formula "11") (term "0,1,1,0"))
         (rule "nnf_imp2or" (formula "27") (term "0"))
         (rule "ifthenelse_to_or_left" (formula "11") (term "0,1,0"))
         (rule "eqSymm" (formula "11") (term "1,0,0,1,0"))
         (rule "eqSymm" (formula "11") (term "1,1,0,1,0"))
         (builtin "One Step Simplification" (formula "11"))
         (rule "inEqSimp_notGeq" (formula "11") (term "0,1,1,0,1,0"))
         (rule "mul_literals" (formula "11") (term "1,0,0,0,1,1,0,1,0"))
         (rule "add_literals" (formula "11") (term "0,0,0,1,1,0,1,0"))
         (rule "add_zero_left" (formula "11") (term "0,0,1,1,0,1,0"))
         (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0,1,0"))
         (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0,1,0"))
         (rule "add_literals" (formula "11") (term "0,0,0,0,0,1,0"))
         (rule "add_zero_left" (formula "11") (term "0,0,0,0,1,0"))
         (rule "nnf_notAnd" (formula "30") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0"))
         (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "30") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
         (rule "mul_literals" (formula "30") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "30") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "30") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "29") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0"))
         (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,0"))
         (rule "add_literals" (formula "29") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
         (rule "mul_literals" (formula "29") (term "1,0,0,0"))
         (rule "cut_direct" (formula "49") (term "0,0"))
         (branch "CUT: o_0 = null TRUE"
            (builtin "One Step Simplification" (formula "50"))
            (rule "false_right" (formula "50"))
            (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "50")))
            (rule "closeFalse" (formula "2"))
         )
         (branch "CUT: o_0 = null FALSE"
            (builtin "One Step Simplification" (formula "50"))
            (rule "notRight" (formula "50"))
            (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "50"))
            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")) (ifInst ""  (formula "51")))
            (rule "closeFalse" (formula "2"))
         )
      )
   )
   (branch "Exceptional Post (addEntry)"
      (builtin "One Step Simplification" (formula "6"))
      (builtin "One Step Simplification" (formula "5"))
      (builtin "One Step Simplification" (formula "3"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "translateJavaAddInt" (formula "6") (term "1,0,1,0,0,0,1"))
      (rule "andLeft" (formula "5"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "6") (term "1,0") (ifseqformula "5"))
      (rule "andLeft" (formula "3"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "1,1,0") (ifseqformula "3"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "7") (term "0,1,0") (ifseqformula "3"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "7") (term "0,0,0,1,0,1") (ifseqformula "3"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "5"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "3"))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "7"))
      (rule "andLeft" (formula "12"))
      (rule "andLeft" (formula "14"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "5"))
      (rule "andLeft" (formula "10"))
      (rule "notLeft" (formula "15"))
      (rule "close" (formula "18") (ifseqformula "17"))
   )
   (branch "Pre (addEntry)"
      (builtin "One Step Simplification" (formula "4"))
      (builtin "One Step Simplification" (formula "3"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "andLeft" (formula "3"))
      (rule "wellFormedAnonEQ" (formula "5") (term "0,0,1") (ifseqformula "3"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "5") (term "1,1,1") (ifseqformula "3"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "1,1,0") (ifseqformula "3"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "5") (term "1,1,0,1") (ifseqformula "3"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "5"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "3"))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "7"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "5"))
      (rule "andLeft" (formula "10"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "3"))
      (rule "andLeft" (formula "8"))
      (rule "andLeft" (formula "14"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "10"))
      (rule "notLeft" (formula "16"))
      (rule "notLeft" (formula "16"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "12"))
      (rule "notLeft" (formula "2"))
      (rule "andLeft" (formula "12"))
      (rule "andLeft" (formula "13"))
      (rule "notLeft" (formula "14"))
      (rule "eqSymm" (formula "10") (term "1,0"))
      (rule "eqSymm" (formula "9"))
      (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "19"))
      (builtin "One Step Simplification" (formula "5"))
      (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "21"))
      (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "22")))
      (rule "replace_known_right" (formula "23") (term "0,1,1") (ifseqformula "21"))
      (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "21")) (ifInst ""  (formula "1")) (ifInst ""  (formula "14")) (ifInst ""  (formula "22")) (ifInst ""  (formula "16")))
      (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "11"))
      (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
      (rule "inEqSimp_homoInEq1" (formula "7"))
      (rule "polySimp_addComm1" (formula "7") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "7"))
      (rule "polySimp_mulComm0" (formula "7") (term "1"))
      (rule "polySimp_rightDist" (formula "7") (term "1"))
      (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
      (rule "mul_literals" (formula "7") (term "0,1"))
      (rule "polySimp_elimOne" (formula "7") (term "1,1"))
      (rule "array2seqDef" (formula "17") (term "0") (inst "u=u"))
      (rule "array2seqDef" (formula "17") (term "0,1") (inst "u=u"))
      (rule "array2seqDef" (formula "8") (term "0,0") (inst "u=u"))
      (rule "narrowSelectArrayType" (formula "8") (term "2,0,0") (ifseqformula "1") (ifseqformula "19"))
      (rule "nonNull" (formula "13") (inst "i=i"))
      (rule "greater_literals" (formula "13") (term "0,1"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "sub_literals" (formula "13") (term "2,1,0,1"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "andLeft" (formula "13"))
      (rule "notLeft" (formula "13"))
      (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "19"))
      (builtin "One Step Simplification" (formula "4"))
      (rule "replace_known_right" (formula "24") (term "0,1") (ifseqformula "19"))
      (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "4")))
      (rule "narrowSelectArrayType" (formula "13") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "19"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
      (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
      (rule "array2seqDef" (formula "10") (term "0,1,0") (inst "u=u"))
      (rule "array2seqDef" (formula "10") (term "1,1,0") (inst "u=u"))
      (rule "array2seqDef" (formula "9") (term "1") (inst "u=u"))
      (rule "eqSymm" (formula "9"))
      (rule "narrowSelectArrayType" (formula "9") (term "2,0") (ifseqformula "1") (ifseqformula "20"))
      (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "9"))
      (rule "array2seqDef" (formula "7") (term "0,0") (inst "u=u"))
      (rule "narrowSelectArrayType" (formula "7") (term "2,0,0") (ifseqformula "1") (ifseqformula "20"))
      (rule "applyEq" (formula "7") (term "0,0") (ifseqformula "9"))
      (rule "nonNull" (formula "24") (term "1") (inst "i=i"))
      (rule "greater_literals" (formula "24") (term "0,1,1"))
      (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "19")))
      (rule "sub_literals" (formula "24") (term "2,1,0,1"))
      (builtin "One Step Simplification" (formula "24"))
      (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,0,1"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,1"))
      (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,1"))
      (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,1"))
      (rule "mul_literals" (formula "24") (term "0,1,1,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,1"))
      (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0,1"))
      (rule "eqSeqDef" (formula "10") (term "1,0") (inst "iv=iv"))
      (rule "lenOfSeqDef" (formula "10") (term "1,0,1,0"))
      (rule "polySimp_elimSub" (formula "10") (term "1,1,0,1,0"))
      (rule "times_zero_2" (formula "10") (term "1,1,1,0,1,0"))
      (rule "add_zero_right" (formula "10") (term "1,1,0,1,0"))
      (rule "lenOfSeqDef" (formula "10") (term "1,1,0,0,1,1,0"))
      (rule "polySimp_elimSub" (formula "10") (term "1,1,1,0,0,1,1,0"))
      (rule "times_zero_2" (formula "10") (term "1,1,1,1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "10") (term "1,1,1,0,0,1,1,0"))
      (rule "getOfSeqDef" (formula "10") (term "1,1,0,1,1,0"))
      (rule "castDel" (formula "10") (term "2,1,1,0,1,1,0"))
      (rule "castDel" (formula "10") (term "1,1,1,0,1,1,0"))
      (rule "add_zero_right" (formula "10") (term "0,2,1,1,1,0,1,1,0"))
      (rule "polySimp_elimSub" (formula "10") (term "1,1,0,1,1,0,1,1,0"))
      (rule "times_zero_2" (formula "10") (term "1,1,1,0,1,1,0,1,1,0"))
      (rule "add_zero_right" (formula "10") (term "1,1,0,1,1,0,1,1,0"))
      (rule "lenOfSeqDef" (formula "10") (term "0,0,1,0"))
      (rule "polySimp_elimSub" (formula "10") (term "1,0,0,1,0"))
      (rule "times_zero_2" (formula "10") (term "1,1,0,0,1,0"))
      (rule "add_zero_right" (formula "10") (term "1,0,0,1,0"))
      (rule "getOfSeqDef" (formula "10") (term "0,1,0,1,1,0"))
      (rule "castDel" (formula "10") (term "1,0,1,0,1,1,0"))
      (rule "castDel" (formula "10") (term "2,0,1,0,1,1,0"))
      (rule "add_zero_right" (formula "10") (term "0,2,1,0,1,0,1,1,0"))
      (rule "polySimp_elimSub" (formula "10") (term "1,1,0,0,1,0,1,1,0"))
      (rule "times_zero_2" (formula "10") (term "1,1,1,0,0,1,0,1,1,0"))
      (rule "add_zero_right" (formula "10") (term "1,1,0,0,1,0,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "10") (term "0,1,0,1,0"))
      (rule "add_zero_right" (formula "10") (term "0,0,1,0,1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "10") (term "0,1,1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "10") (term "0,0,1,1,0,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,1,0,0,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,1,1,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,1,1,0,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,1,0"))
      (rule "add_zero_right" (formula "10") (term "0,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,1,1,0,1,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,0,1,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,1,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "0,0,1,0,1,0"))
      (rule "polySimp_elimOne" (formula "10") (term "0,0,1,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,1,1,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,1,1,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,1,0,1,1,0,1,1,0"))
      (rule "mul_literals" (formula "10") (term "0,1,1,0,1,1,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,1,1,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,1,1,0,1,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "10") (term "0,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,0,1,1,0"))
      (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,0,1,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,0,1,0,0,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "10") (term "0,0,0,1,0,0,1,0,0,1,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,1,0"))
      (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,1,0"))
      (rule "eqSeqDef2" (formula "17") (inst "iv=iv") (ifseqformula "17"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "true_left" (formula "17"))
      (rule "eqSeqDef2" (formula "9") (inst "iv=iv") (ifseqformula "9"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "true_left" (formula "9"))
      (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "7"))
      (rule "times_zero_1" (formula "8") (term "0,0"))
      (rule "add_zero_left" (formula "8") (term "0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "8"))
      (rule "mul_literals" (formula "8") (term "1"))
      (rule "nnf_imp2or" (formula "13") (term "0"))
      (rule "nnf_imp2or" (formula "23") (term "0,1"))
      (rule "nnf_imp2or" (formula "10") (term "0"))
      (rule "nnf_notAnd" (formula "13") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
      (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
      (rule "mul_literals" (formula "13") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "10") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
      (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
      (rule "mul_literals" (formula "10") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "23") (term "0,0,1"))
      (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,1"))
      (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0,1"))
      (rule "add_zero_right" (formula "23") (term "0,0,0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,1"))
      (rule "mul_literals" (formula "23") (term "1,0,0,0,1"))
      (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,1"))
      (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,1"))
      (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,1"))
      (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,1"))
      (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,1"))
      (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1"))
      (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,1"))
      (rule "nnf_imp2or" (formula "10") (term "0,1,1,0"))
      (rule "nnf_notAnd" (formula "10") (term "0,0,1,1,0"))
      (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0,1,1,0"))
      (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0,1,1,0"))
      (rule "add_literals" (formula "10") (term "0,0,0,1,0,0,1,1,0"))
      (rule "add_zero_left" (formula "10") (term "0,0,1,0,0,1,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,1,1,0"))
      (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0,1,1,0"))
      (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0,1,1,0"))
      (rule "add_zero_right" (formula "10") (term "0,0,0,0,0,1,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,1,1,0"))
      (rule "mul_literals" (formula "10") (term "1,0,0,0,1,1,0"))
      (rule "commute_or_2" (formula "13") (term "0"))
      (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "12") (ifseqformula "3"))
      (rule "andLeft" (formula "12"))
      (rule "notLeft" (formula "13"))
      (rule "andLeft" (formula "12"))
      (rule "notLeft" (formula "13"))
      (rule "andLeft" (formula "12"))
      (rule "notLeft" (formula "13"))
      (rule "andLeft" (formula "12"))
      (rule "andLeft" (formula "12"))
      (rule "notLeft" (formula "14"))
      (rule "andLeft" (formula "12"))
      (rule "andLeft" (formula "12"))
      (rule "andLeft" (formula "12"))
      (rule "notLeft" (formula "12"))
      (rule "nonNull" (formula "15") (inst "i=i"))
      (rule "sub_literals" (formula "15") (term "2,1,0,1,1"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "greater_literals" (formula "15") (term "0,1"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "andLeft" (formula "15"))
      (rule "notLeft" (formula "15"))
      (rule "narrowSelectArrayType" (formula "15") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "21"))
      (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
      (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
      (rule "nonNull" (formula "14") (inst "i=i"))
      (rule "greater_literals" (formula "14") (term "0,1"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "sub_literals" (formula "14") (term "2,1,0,1"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "andLeft" (formula "14"))
      (rule "notLeft" (formula "14"))
      (rule "narrowSelectArrayType" (formula "14") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "21"))
      (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
      (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
      (rule "nonNull" (formula "13") (inst "i=i"))
      (rule "greater_literals" (formula "13") (term "0,1"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "sub_literals" (formula "13") (term "2,1,0,1"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "andLeft" (formula "13"))
      (rule "notLeft" (formula "13"))
      (rule "narrowSelectArrayType" (formula "13") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "21"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
      (rule "nonNull" (formula "12") (inst "i=i"))
      (rule "greater_literals" (formula "12") (term "0,1"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "sub_literals" (formula "12") (term "2,1,0,1"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "andLeft" (formula "12"))
      (rule "notLeft" (formula "12"))
      (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "21"))
      (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
      (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
      (rule "nnf_imp2or" (formula "15") (term "0"))
      (rule "nnf_imp2or" (formula "14") (term "0"))
      (rule "nnf_imp2or" (formula "13") (term "0"))
      (rule "nnf_imp2or" (formula "12") (term "0"))
      (rule "nnf_notAnd" (formula "15") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
      (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
      (rule "mul_literals" (formula "15") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "14") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
      (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
      (rule "mul_literals" (formula "14") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "13") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
      (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
      (rule "mul_literals" (formula "13") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "12") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
      (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
      (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
      (rule "mul_literals" (formula "12") (term "1,0,0,0"))
      (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "35") (term "0") (ifseqformula "3"))
      (rule "nonNull" (formula "35") (term "1,0,0,0,0,0,0,0,0") (inst "i=i"))
      (rule "sub_literals" (formula "35") (term "2,1,0,1,1,1,0,0,0,0,0,0,0,0"))
      (builtin "One Step Simplification" (formula "35"))
      (rule "greater_literals" (formula "35") (term "0,1,1,0,0,0,0,0,0,0,0"))
      (builtin "One Step Simplification" (formula "35"))
      (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,1,1,0,0,0,0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0,1,1,0,0,0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,1,1,0,0,0,0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
      (rule "mul_literals" (formula "35") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0,0"))
      (rule "nonNull" (formula "35") (term "1,0,0,0,0,0,0,0") (inst "i=i"))
      (rule "greater_literals" (formula "35") (term "0,1,1,0,0,0,0,0,0,0"))
      (builtin "One Step Simplification" (formula "35"))
      (rule "sub_literals" (formula "35") (term "2,1,0,1,1,0,0,0,0,0,0,0"))
      (builtin "One Step Simplification" (formula "35"))
      (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,1,1,0,0,0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0,1,1,0,0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,1,1,0,0,0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,1,1,0,0,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,1,1,0,0,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0"))
      (rule "mul_literals" (formula "35") (term "0,1,1,0,0,1,1,0,0,0,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,1,1,0,0,0,0,0,0,0"))
      (rule "nonNull" (formula "35") (term "1,0,0,0,0,0") (inst "i=i"))
      (rule "greater_literals" (formula "35") (term "0,1,1,0,0,0,0,0"))
      (builtin "One Step Simplification" (formula "35"))
      (rule "sub_literals" (formula "35") (term "2,1,0,1,1,0,0,0,0,0"))
      (builtin "One Step Simplification" (formula "35"))
      (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,1,1,0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,1,1,0,0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0,1,1,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,1,1,0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,1,1,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,1,1,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,1,1,0,0,0,0,0"))
      (rule "mul_literals" (formula "35") (term "0,1,1,0,0,1,1,0,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,1,1,0,0,0,0,0"))
      (rule "nonNull" (formula "35") (term "1,0,0,0,0,0,0") (inst "i=i"))
      (rule "sub_literals" (formula "35") (term "2,1,0,1,1,1,0,0,0,0,0,0"))
      (builtin "One Step Simplification" (formula "35"))
      (rule "greater_literals" (formula "35") (term "0,1,1,0,0,0,0,0,0"))
      (builtin "One Step Simplification" (formula "35"))
      (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,1,1,0,0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,1,1,0,0,0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0,1,1,0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,1,1,0,0,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,1,1,0,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,1,1,0,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,1,1,0,0,0,0,0,0"))
      (rule "mul_literals" (formula "35") (term "0,1,1,0,0,1,1,0,0,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,1,1,0,0,0,0,0,0"))
      (rule "pullOutSelect" (formula "35") (term "0,0,0,1,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_a_0"))
      (rule "applyEq" (formula "36") (term "1,0,0,1,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
      (rule "applyEq" (formula "36") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")) (ifInst ""  (formula "3")))
      (rule "applyEqReverse" (formula "36") (term "0,0,0,1,0,0,0,0,0,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "36") (term "1,0,0,1,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "36") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replace_known_right" (formula "35") (term "0,0,1,0,0,0,0,0,0") (ifseqformula "23"))
      (builtin "One Step Simplification" (formula "35"))
      (rule "pullOutSelect" (formula "35") (term "0,0,1,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_signer_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")) (ifInst ""  (formula "3")))
      (rule "applyEqReverse" (formula "36") (term "0,0,1,0,0,0,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replace_known_right" (formula "35") (term "0,1,0,0,0,0") (ifseqformula "26"))
      (builtin "One Step Simplification" (formula "35"))
      (rule "pullOutSelect" (formula "35") (term "1,0,0,1,0,1,1,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_msg_0"))
      (rule "applyEq" (formula "36") (term "0,1,1,1,0,0,1,1,0,0,0,0") (ifseqformula "1"))
      (rule "applyEq" (formula "36") (term "0,0,0,1,0,0,0,0") (ifseqformula "1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")) (ifInst ""  (formula "3")))
      (rule "applyEqReverse" (formula "36") (term "1,0,0,1,0,1,1,0,0,0,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "36") (term "0,1,1,1,0,0,1,1,0,0,0,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "36") (term "0,0,0,1,0,0,0,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replace_known_right" (formula "35") (term "0,0,1,0,0,0,0") (ifseqformula "24"))
      (builtin "One Step Simplification" (formula "35"))
      (rule "pullOutSelect" (formula "35") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_b_0"))
      (rule "applyEq" (formula "36") (term "1,0,0,1,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
      (rule "applyEq" (formula "36") (term "0,0,0,1,0,0,0,0,0,0") (ifseqformula "1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")) (ifInst ""  (formula "3")))
      (rule "applyEqReverse" (formula "36") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "36") (term "1,0,0,1,0,1,1,0,0,0,0,0,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "36") (term "0,0,0,1,0,0,0,0,0,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replace_known_right" (formula "35") (term "0,0,1,0,0,0,0,0,0") (ifseqformula "22"))
      (builtin "One Step Simplification" (formula "35"))
      (rule "pullOutSelect" (formula "35") (term "0,0,0,1,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_sorted_0"))
      (rule "applyEq" (formula "36") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
      (rule "applyEq" (formula "36") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")) (ifInst ""  (formula "3")))
      (rule "applyEqReverse" (formula "36") (term "0,0,0,1,0,0,0,0,0,0,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "36") (term "1,0,0,1,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
      (rule "applyEqReverse" (formula "36") (term "0,1,1,1,0,0,1,1,0,0,0,0,0,0,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replace_known_right" (formula "35") (term "0,0,1,0,0,0,0,0,0,0") (ifseqformula "21"))
      (builtin "One Step Simplification" (formula "35"))
      (rule "pullOutSelect" (formula "35") (term "0,0,1,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_precServVerif_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")) (ifInst ""  (formula "3")))
      (rule "applyEqReverse" (formula "36") (term "0,0,1,0,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replace_known_right" (formula "35") (term "0,1,0,0") (ifseqformula "28"))
      (builtin "One Step Simplification" (formula "35"))
      (rule "pullOutSelect" (formula "35") (term "0,0,0,0,0,0,0,0,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_concatenated_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")) (ifInst ""  (formula "3")))
      (rule "applyEqReverse" (formula "36") (term "0,0,0,0,0,0,0,0,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replace_known_right" (formula "35") (term "0,0,0,0,0,0,0,0") (ifseqformula "25"))
      (builtin "One Step Simplification" (formula "35"))
      (rule "pullOutSelect" (formula "35") (term "0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_electionID_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")) (ifInst ""  (formula "3")))
      (rule "applyEqReverse" (formula "36") (term "0,0,1,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replace_known_right" (formula "35") (term "0,1,0") (ifseqformula "29"))
      (builtin "One Step Simplification" (formula "35"))
      (rule "pullOutSelect" (formula "35") (term "0,0,1,0") (inst "selectSK=verif_selectvoting_system_core_MixServer_decryptor_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")) (ifInst ""  (formula "3")))
      (rule "applyEqReverse" (formula "36") (term "0,0,1,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "replace_known_right" (formula "35") (term "0,1,0") (ifseqformula "27"))
      (builtin "One Step Simplification" (formula "35"))
      (rule "commute_or" (formula "16") (term "0,0"))
      (rule "nnf_imp2or" (formula "35") (term "0,1,0"))
      (rule "nnf_imp2or" (formula "35") (term "0,1,0,0"))
      (rule "nnf_notAnd" (formula "35") (term "0,0,1,0"))
      (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0,1,0"))
      (rule "mul_literals" (formula "35") (term "1,0,0,0,0,0,1,0"))
      (rule "add_literals" (formula "35") (term "0,0,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,1,0"))
      (rule "mul_literals" (formula "35") (term "1,0,0,0,1,0"))
      (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0,1,0"))
      (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0,1,0"))
      (rule "add_literals" (formula "35") (term "0,0,0,1,0,0,1,0"))
      (rule "add_zero_left" (formula "35") (term "0,0,1,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,1,0"))
      (rule "commute_or_2" (formula "10") (term "0,1,1,0"))
      (rule "nnf_imp2or" (formula "35") (term "0,1,0,0,0"))
      (rule "nnf_imp2or" (formula "35") (term "0,0,0,0,0"))
      (rule "nnf_notAnd" (formula "35") (term "0,0,1,0,0"))
      (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0,1,0,0"))
      (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0,1,0,0"))
      (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0,1,0,0"))
      (rule "add_literals" (formula "35") (term "0,0,0,1,0,0,1,0,0"))
      (rule "add_zero_left" (formula "35") (term "0,0,1,0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,1,0,0"))
      (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0,1,0,0"))
      (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0,1,0,0"))
      (rule "add_literals" (formula "35") (term "0,0,0,0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,1,0,0"))
      (rule "mul_literals" (formula "35") (term "1,0,0,0,1,0,0"))
      (rule "ifthenelse_to_or_right" (formula "10") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "inEqSimp_notGeq" (formula "10") (term "0,1,1,0,1,0"))
      (rule "mul_literals" (formula "10") (term "1,0,0,0,1,1,0,1,0"))
      (rule "add_literals" (formula "10") (term "0,0,0,1,1,0,1,0"))
      (rule "add_zero_left" (formula "10") (term "0,0,1,1,0,1,0"))
      (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0,1,0"))
      (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0,1,0"))
      (rule "add_literals" (formula "10") (term "0,0,0,0,0,1,0"))
      (rule "add_zero_left" (formula "10") (term "0,0,0,0,1,0"))
      (rule "nnf_notAnd" (formula "35") (term "0,0,1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0,1,0,0,0"))
      (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0,1,0,0,0"))
      (rule "add_literals" (formula "35") (term "0,0,0,1,0,0,1,0,0,0"))
      (rule "add_zero_left" (formula "35") (term "0,0,1,0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,1,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0,1,0,0,0"))
      (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0,1,0,0,0"))
      (rule "add_literals" (formula "35") (term "0,0,0,0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,1,0,0,0"))
      (rule "mul_literals" (formula "35") (term "1,0,0,0,1,0,0,0"))
      (rule "nnf_notAnd" (formula "35") (term "0,0,0,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0,0,0,0,0"))
      (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0,0,0,0,0"))
      (rule "add_literals" (formula "35") (term "0,0,0,1,0,0,0,0,0,0"))
      (rule "add_zero_left" (formula "35") (term "0,0,1,0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0,0,0,0,0"))
      (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0,0,0,0,0"))
      (rule "add_zero_right" (formula "35") (term "0,0,0,0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,0,0,0,0"))
      (rule "mul_literals" (formula "35") (term "1,0,0,0,0,0,0,0"))
      (rule "commute_or_2" (formula "15") (term "0"))
      (rule "commute_or_2" (formula "14") (term "0"))
      (rule "arrayLengthNotNegative" (formula "11") (term "0"))
      (rule "arrayLengthIsAShort" (formula "12") (term "0"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "true_left" (formula "12"))
      (rule "arrayLengthNotNegative" (formula "12") (term "1"))
      (rule "arrayLengthIsAShort" (formula "13") (term "1"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "true_left" (formula "13"))
      (rule "commute_or_2" (formula "15") (term "0"))
      (rule "arrayLengthNotNegative" (formula "7") (term "1,1"))
      (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "9"))
      (rule "leq_literals" (formula "7") (term "0"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "true_left" (formula "7"))
      (rule "arrayLengthIsAShort" (formula "7") (term "1,1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "true_left" (formula "7"))
      (rule "commute_or_2" (formula "14") (term "0"))
      (rule "commute_or" (formula "17") (term "0,0"))
      (rule "commute_or" (formula "16") (term "0,0"))
      (rule "commute_or" (formula "15") (term "0,0"))
      (rule "commute_or" (formula "14") (term "0,0"))
      (rule "commute_or" (formula "10") (term "0,0,1,1,0"))
      (rule "shift_paren_or" (formula "10") (term "1,0,1,0"))
      (rule "andRight" (formula "37"))
      (branch "Case 1"
         (rule "andRight" (formula "37"))
         (branch "Case 1"
            (rule "andRight" (formula "37"))
            (branch "Case 1"
               (rule "andRight" (formula "37"))
               (branch "Case 1"
                  (rule "allRight" (formula "37") (inst "sk=i_4"))
                  (rule "orRight" (formula "37"))
                  (rule "notRight" (formula "38"))
                  (rule "orRight" (formula "38"))
                  (rule "inEqSimp_leqRight" (formula "38"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_geqRight" (formula "39"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_4"))
                  (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "24"))
                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "27")))
                  (rule "ifthenelse_negated" (formula "3") (term "0"))
                  (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "23") (ifseqformula "27"))
                  (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "5") (ifseqformula "27"))
                  (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                  (rule "ifEqualsNull" (formula "3"))
                  (rule "cnf_rightDist" (formula "3"))
                  (rule "andLeft" (formula "3"))
                  (rule "commute_or" (formula "3"))
                  (rule "cnf_rightDist" (formula "4"))
                  (rule "andLeft" (formula "4"))
                  (rule "commute_or" (formula "4"))
                  (rule "cnf_rightDist" (formula "3"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "commute_or" (formula "3"))
                  (rule "ifthenelse_to_or_left" (formula "16") (term "1,0,0,1,0"))
                  (rule "eqSymm" (formula "16") (term "1,1,1,0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "16") (term "0,0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "16") (term "1,0,0,0,0,1,0,0,1,0"))
                  (rule "add_literals" (formula "16") (term "0,0,0,0,1,0,0,1,0"))
                  (rule "add_zero_left" (formula "16") (term "0,0,0,1,0,0,1,0"))
                  (rule "commute_or" (formula "16") (term "1,1,0,0,1,0"))
                  (rule "cnf_rightDist" (formula "16") (term "0,0,1,0"))
                  (rule "commute_or_2" (formula "16") (term "1,0,0,1,0"))
                  (rule "inEqSimp_or_subsumption4" (formula "16") (term "0,1,0,0,1,0"))
                  (rule "greater_literals" (formula "16") (term "0,0,0,1,0,0,1,0"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "shift_paren_or" (formula "16") (term "0,0,0,1,0"))
                  (rule "ifthenelse_to_or_right" (formula "16") (term "0,0,0,1,1,0"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "nnf_notAnd" (formula "16") (term "0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                  (rule "add_zero_right" (formula "16") (term "0,0,0,0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0,0,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,0,0,0,1,1,0"))
                  (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                  (rule "add_zero_left" (formula "16") (term "0,0,1,0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0,0,0,1,1,0"))
                  (rule "nnf_notAnd" (formula "16") (term "0,1,1,0,0,0,1,1,0"))
                  (rule "inEqSimp_notLeq" (formula "16") (term "1,0,1,1,0,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                  (rule "add_literals" (formula "16") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                  (rule "add_zero_left" (formula "16") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,1,1,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,1,1,0,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "1,1,0,1,1,0,0,0,1,1,0"))
                  (rule "inEqSimp_notGeq" (formula "16") (term "0,0,1,1,0,0,0,1,1,0"))
                  (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                  (rule "add_zero_right" (formula "16") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,1,1,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "16") (term "1,0,0,1,1,0,0,0,1,1,0"))
                  (rule "commute_or" (formula "16") (term "0,0,1,1,0"))
                  (rule "commute_or_2" (formula "16") (term "0,1,1,0"))
                  (rule "commute_or_2" (formula "16") (term "0,1,0,1,1,0"))
                  (rule "commute_or" (formula "16") (term "1,1,0,1,1,0"))
                  (rule "commute_or" (formula "16") (term "0,0,1,0,1,1,0"))
                  (rule "commute_or_2" (formula "16") (term "0,1,1,0,1,1,0"))
                  (rule "commute_or" (formula "16") (term "0,0,1,1,0,1,1,0"))
                  (rule "cnf_rightDist" (formula "16") (term "1,1,0,1,1,0"))
                  (rule "commute_or_2" (formula "16") (term "0,1,1,0,1,1,0"))
                  (rule "inEqSimp_or_tautInEq1" (formula "16") (term "0,0,1,1,0,1,1,0"))
                  (rule "add_zero_right" (formula "16") (term "1,1,0,0,1,1,0,1,1,0"))
                  (rule "qeq_literals" (formula "16") (term "1,0,0,1,1,0,1,1,0"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "shift_paren_or" (formula "16") (term "1,1,0,1,1,0"))
                  (rule "commute_or" (formula "16") (term "0,1,1,0,1,1,0"))
                  (rule "cnf_rightDist" (formula "16") (term "0,1,1,0"))
                  (rule "commute_or_2" (formula "16") (term "0,0,1,1,0"))
                  (rule "shift_paren_or" (formula "16") (term "1,0,1,1,0"))
                  (rule "commute_or_2" (formula "16") (term "0,1,0,1,1,0"))
                  (rule "shift_paren_or" (formula "16") (term "0,0,0,1,1,0"))
                  (rule "commute_or_2" (formula "16") (term "0,0,1,0,1,1,0"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "shift_paren_or" (formula "16") (term "0,0,0,0,1,1,0"))
                  (rule "commute_or" (formula "16") (term "0,0,0,0,0,1,1,0"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "allLeft" (formula "20") (inst "t=i_4"))
                  (rule "inEqSimp_commuteGeq" (formula "20") (term "1"))
                  (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "1"))
                  (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1"))
                  (rule "add_literals" (formula "20") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "20") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "20") (term "0,0,1"))
                  (rule "leq_literals" (formula "20") (term "0,1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "inEqSimp_contradInEq1" (formula "20") (term "1") (ifseqformula "2"))
                  (rule "qeq_literals" (formula "20") (term "0,1"))
                  (builtin "One Step Simplification" (formula "20"))
                  (rule "notLeft" (formula "20"))
                  (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "29"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "notLeft" (formula "3"))
                  (rule "referencedObjectIsCreatedRight" (formula "28") (ifseqformula "30"))
                  (rule "close" (formula "28") (ifseqformula "6"))
               )
               (branch "Case 2"
                  (rule "allRight" (formula "37") (inst "sk=i_3"))
                  (rule "orRight" (formula "37"))
                  (rule "orRight" (formula "37"))
                  (rule "notRight" (formula "39"))
                  (rule "inEqSimp_leqRight" (formula "38"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_geqRight" (formula "39"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_3"))
                  (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "24"))
                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "28")))
                  (rule "ifthenelse_negated" (formula "3") (term "0"))
                  (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "23") (ifseqformula "28"))
                  (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "5") (ifseqformula "28"))
                  (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                  (rule "ifEqualsNull" (formula "3"))
                  (rule "cnf_rightDist" (formula "3"))
                  (rule "andLeft" (formula "3"))
                  (rule "commute_or" (formula "3"))
                  (rule "cnf_rightDist" (formula "4"))
                  (rule "andLeft" (formula "4"))
                  (rule "commute_or" (formula "4"))
                  (rule "cnf_rightDist" (formula "3"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "commute_or" (formula "3"))
                  (rule "ifthenelse_to_or_left" (formula "16") (term "1,0,0,1,0"))
                  (rule "eqSymm" (formula "16") (term "1,1,1,0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "16") (term "0,0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "16") (term "1,0,0,0,0,1,0,0,1,0"))
                  (rule "add_literals" (formula "16") (term "0,0,0,0,1,0,0,1,0"))
                  (rule "add_zero_left" (formula "16") (term "0,0,0,1,0,0,1,0"))
                  (rule "commute_or" (formula "16") (term "1,1,0,0,1,0"))
                  (rule "cnf_rightDist" (formula "16") (term "0,0,1,0"))
                  (rule "commute_or_2" (formula "16") (term "1,0,0,1,0"))
                  (rule "inEqSimp_or_subsumption4" (formula "16") (term "0,1,0,0,1,0"))
                  (rule "greater_literals" (formula "16") (term "0,0,0,1,0,0,1,0"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "shift_paren_or" (formula "16") (term "0,0,0,1,0"))
                  (rule "ifthenelse_to_or_left" (formula "16") (term "0,0,0,1,1,0"))
                  (rule "eqSymm" (formula "16") (term "1,1,0,0,0,1,1,0"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "eqSymm" (formula "16") (term "1,0,0,0,0,1,1,0"))
                  (rule "nnf_notAnd" (formula "16") (term "0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
                  (rule "add_zero_right" (formula "16") (term "0,0,0,0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0,0,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,0,0,0,1,1,0"))
                  (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
                  (rule "add_zero_left" (formula "16") (term "0,0,1,0,0,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0,0,0,1,1,0"))
                  (rule "nnf_notAnd" (formula "16") (term "0,1,1,0,0,0,1,1,0"))
                  (rule "inEqSimp_notGeq" (formula "16") (term "0,0,1,1,0,0,0,1,1,0"))
                  (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
                  (rule "add_zero_right" (formula "16") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,1,1,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "16") (term "1,0,0,1,1,0,0,0,1,1,0"))
                  (rule "inEqSimp_notLeq" (formula "16") (term "1,0,1,1,0,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
                  (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                  (rule "add_literals" (formula "16") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
                  (rule "add_zero_left" (formula "16") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,1,1,0,0,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,1,1,0,0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "1,1,0,1,1,0,0,0,1,1,0"))
                  (rule "commute_or" (formula "16") (term "0,0,1,1,0"))
                  (rule "commute_or_2" (formula "16") (term "0,1,1,0"))
                  (rule "commute_or_2" (formula "16") (term "0,1,0,1,1,0"))
                  (rule "commute_or" (formula "16") (term "1,1,0,1,1,0"))
                  (rule "commute_or" (formula "16") (term "0,0,1,0,1,1,0"))
                  (rule "commute_or_2" (formula "16") (term "0,1,1,0,1,1,0"))
                  (rule "commute_or" (formula "16") (term "0,0,1,1,0,1,1,0"))
                  (rule "cnf_rightDist" (formula "16") (term "1,1,0,1,1,0"))
                  (rule "commute_or" (formula "16") (term "1,1,1,0,1,1,0"))
                  (rule "cnf_rightDist" (formula "16") (term "0,1,1,0"))
                  (rule "commute_or" (formula "16") (term "1,0,1,1,0"))
                  (rule "commute_or_2" (formula "16") (term "0,0,1,1,0"))
                  (rule "commute_or_2" (formula "16") (term "0,1,1,0,1,1,0"))
                  (rule "inEqSimp_or_tautInEq1" (formula "16") (term "0,0,1,1,0,1,1,0"))
                  (rule "add_zero_right" (formula "16") (term "1,1,0,0,1,1,0,1,1,0"))
                  (rule "qeq_literals" (formula "16") (term "1,0,0,1,1,0,1,1,0"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "commute_or_2" (formula "16") (term "1,0,1,1,0"))
                  (rule "shift_paren_or" (formula "16") (term "0,0,0,1,1,0"))
                  (rule "shift_paren_or" (formula "16") (term "0,1,0,1,1,0"))
                  (rule "shift_paren_or" (formula "16") (term "0,0,0,0,1,1,0"))
                  (rule "shift_paren_or" (formula "16") (term "0,0,1,0,1,1,0"))
                  (rule "commute_or" (formula "16") (term "0,0,0,0,0,1,1,0"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "shift_paren_or" (formula "16") (term "0,0,0,1,0,1,1,0"))
                  (rule "commute_or" (formula "16") (term "0,0,0,0,1,0,1,1,0"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "allLeft" (formula "21") (inst "t=i_3"))
                  (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
                  (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "2"))
                  (rule "qeq_literals" (formula "21") (term "0,1,0"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "1"))
                  (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                  (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "21") (term "0,0,1"))
                  (rule "leq_literals" (formula "21") (term "0,1"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "notLeft" (formula "21"))
                  (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "29"))
                  (builtin "One Step Simplification" (formula "3"))
                  (rule "notLeft" (formula "3"))
                  (rule "referencedObjectIsCreatedRight" (formula "28") (ifseqformula "31"))
                  (rule "close" (formula "28") (ifseqformula "6"))
               )
            )
            (branch "Case 2"
               (rule "allRight" (formula "37") (inst "sk=i_2"))
               (rule "orRight" (formula "37"))
               (rule "orRight" (formula "37"))
               (rule "notRight" (formula "39"))
               (rule "inEqSimp_leqRight" (formula "38"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_geqRight" (formula "39"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_2"))
               (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "24"))
               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "29")))
               (rule "ifthenelse_negated" (formula "3") (term "0"))
               (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "23") (ifseqformula "29"))
               (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "5") (ifseqformula "29"))
               (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
               (rule "ifEqualsNull" (formula "3"))
               (rule "cnf_rightDist" (formula "3"))
               (rule "andLeft" (formula "3"))
               (rule "commute_or" (formula "3"))
               (rule "cnf_rightDist" (formula "4"))
               (rule "andLeft" (formula "4"))
               (rule "commute_or" (formula "4"))
               (rule "cnf_rightDist" (formula "3"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "commute_or" (formula "3"))
               (rule "ifthenelse_to_or_left" (formula "16") (term "1,0,0,1,0"))
               (rule "eqSymm" (formula "16") (term "1,1,1,0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "16") (term "0,0,1,0,0,1,0"))
               (rule "mul_literals" (formula "16") (term "1,0,0,0,0,1,0,0,1,0"))
               (rule "add_literals" (formula "16") (term "0,0,0,0,1,0,0,1,0"))
               (rule "add_zero_left" (formula "16") (term "0,0,0,1,0,0,1,0"))
               (rule "commute_or" (formula "16") (term "1,1,0,0,1,0"))
               (rule "cnf_rightDist" (formula "16") (term "0,0,1,0"))
               (rule "commute_or_2" (formula "16") (term "1,0,0,1,0"))
               (rule "inEqSimp_or_subsumption4" (formula "16") (term "0,1,0,0,1,0"))
               (rule "greater_literals" (formula "16") (term "0,0,0,1,0,0,1,0"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "shift_paren_or" (formula "16") (term "0,0,0,1,0"))
               (rule "ifthenelse_to_or_right" (formula "16") (term "0,0,0,1,1,0"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "nnf_notAnd" (formula "16") (term "0,0,0,0,0,1,1,0"))
               (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
               (rule "add_zero_right" (formula "16") (term "0,0,0,0,0,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0,0,1,1,0"))
               (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0,0,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,0,0,0,1,1,0"))
               (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
               (rule "add_zero_left" (formula "16") (term "0,0,1,0,0,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0,0,0,1,1,0"))
               (rule "nnf_notAnd" (formula "16") (term "0,1,1,0,0,0,1,1,0"))
               (rule "inEqSimp_notGeq" (formula "16") (term "0,0,1,1,0,0,0,1,1,0"))
               (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
               (rule "add_literals" (formula "16") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,1,1,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "16") (term "1,0,0,1,1,0,0,0,1,1,0"))
               (rule "inEqSimp_notLeq" (formula "16") (term "1,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
               (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
               (rule "add_literals" (formula "16") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
               (rule "add_zero_left" (formula "16") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,1,1,0,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "16") (term "1,1,0,1,1,0,0,0,1,1,0"))
               (rule "commute_or" (formula "16") (term "0,0,1,1,0"))
               (rule "commute_or_2" (formula "16") (term "0,1,1,0"))
               (rule "commute_or" (formula "16") (term "1,1,0,1,1,0"))
               (rule "commute_or_2" (formula "16") (term "0,1,0,1,1,0"))
               (rule "commute_or_2" (formula "16") (term "0,1,1,0,1,1,0"))
               (rule "commute_or" (formula "16") (term "0,0,1,0,1,1,0"))
               (rule "commute_or" (formula "16") (term "0,0,1,1,0,1,1,0"))
               (rule "cnf_rightDist" (formula "16") (term "1,1,0,1,1,0"))
               (rule "commute_or_2" (formula "16") (term "0,1,1,0,1,1,0"))
               (rule "inEqSimp_or_tautInEq1" (formula "16") (term "0,0,1,1,0,1,1,0"))
               (rule "add_zero_right" (formula "16") (term "1,1,0,0,1,1,0,1,1,0"))
               (rule "qeq_literals" (formula "16") (term "1,0,0,1,1,0,1,1,0"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "shift_paren_or" (formula "16") (term "1,1,0,1,1,0"))
               (rule "commute_or" (formula "16") (term "0,1,1,0,1,1,0"))
               (rule "cnf_rightDist" (formula "16") (term "0,1,1,0"))
               (rule "commute_or_2" (formula "16") (term "0,0,1,1,0"))
               (rule "shift_paren_or" (formula "16") (term "1,0,1,1,0"))
               (rule "commute_or_2" (formula "16") (term "0,1,0,1,1,0"))
               (rule "shift_paren_or" (formula "16") (term "0,0,0,1,1,0"))
               (rule "commute_or_2" (formula "16") (term "0,0,1,0,1,1,0"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "shift_paren_or" (formula "16") (term "0,0,0,0,1,1,0"))
               (rule "commute_or" (formula "16") (term "0,0,0,0,0,1,1,0"))
               (builtin "One Step Simplification" (formula "16"))
               (rule "allLeft" (formula "22") (inst "t=i_2"))
               (rule "inEqSimp_commuteGeq" (formula "22") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "1"))
               (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
               (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
               (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
               (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "22") (term "0,0,1"))
               (rule "leq_literals" (formula "22") (term "0,1"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "2"))
               (rule "qeq_literals" (formula "22") (term "0,1"))
               (builtin "One Step Simplification" (formula "22"))
               (rule "notLeft" (formula "22"))
               (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "29"))
               (builtin "One Step Simplification" (formula "5"))
               (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "29"))
               (builtin "One Step Simplification" (formula "3"))
               (rule "notLeft" (formula "3"))
               (rule "referencedObjectIsCreatedRight" (formula "28") (ifseqformula "32"))
               (rule "close" (formula "28") (ifseqformula "6"))
            )
         )
         (branch "Case 2"
            (rule "allRight" (formula "37") (inst "sk=i_1"))
            (rule "orRight" (formula "37"))
            (rule "orRight" (formula "37"))
            (rule "notRight" (formula "39"))
            (rule "inEqSimp_leqRight" (formula "38"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_geqRight" (formula "39"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_1"))
            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "24"))
            (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "30")))
            (rule "ifthenelse_negated" (formula "3") (term "0"))
            (rule "narrowSelectArrayType" (formula "3") (term "2,0") (ifseqformula "23") (ifseqformula "30"))
            (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "5") (ifseqformula "30"))
            (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
            (rule "ifEqualsNull" (formula "3"))
            (rule "cnf_rightDist" (formula "3"))
            (rule "andLeft" (formula "3"))
            (rule "commute_or" (formula "3"))
            (rule "cnf_rightDist" (formula "4"))
            (rule "andLeft" (formula "4"))
            (rule "commute_or" (formula "4"))
            (rule "cnf_rightDist" (formula "3"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "commute_or" (formula "3"))
            (rule "ifthenelse_to_or_left" (formula "16") (term "1,0,0,1,0"))
            (rule "eqSymm" (formula "16") (term "1,1,1,0,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "16") (term "0,0,1,0,0,1,0"))
            (rule "mul_literals" (formula "16") (term "1,0,0,0,0,1,0,0,1,0"))
            (rule "add_literals" (formula "16") (term "0,0,0,0,1,0,0,1,0"))
            (rule "add_zero_left" (formula "16") (term "0,0,0,1,0,0,1,0"))
            (rule "commute_or" (formula "16") (term "1,1,0,0,1,0"))
            (rule "cnf_rightDist" (formula "16") (term "0,0,1,0"))
            (rule "commute_or_2" (formula "16") (term "1,0,0,1,0"))
            (rule "inEqSimp_or_subsumption4" (formula "16") (term "0,1,0,0,1,0"))
            (rule "greater_literals" (formula "16") (term "0,0,0,1,0,0,1,0"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "shift_paren_or" (formula "16") (term "0,0,0,1,0"))
            (rule "ifthenelse_to_or_left" (formula "16") (term "0,0,0,1,1,0"))
            (rule "eqSymm" (formula "16") (term "1,1,0,0,0,1,1,0"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "eqSymm" (formula "16") (term "1,0,0,0,0,1,1,0"))
            (rule "nnf_notAnd" (formula "16") (term "0,0,0,0,0,1,1,0"))
            (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0,0,0,0,1,1,0"))
            (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0,0,0,0,1,1,0"))
            (rule "add_zero_right" (formula "16") (term "0,0,0,0,0,0,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,0,0,0,1,1,0"))
            (rule "mul_literals" (formula "16") (term "1,0,0,0,0,0,0,1,1,0"))
            (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0,0,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,0,0,0,1,1,0"))
            (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,0,0,0,1,1,0"))
            (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,0,0,0,1,1,0"))
            (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,0,0,0,1,1,0"))
            (rule "add_zero_left" (formula "16") (term "0,0,1,0,0,0,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0,0,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0,0,0,1,1,0"))
            (rule "nnf_notAnd" (formula "16") (term "0,1,1,0,0,0,1,1,0"))
            (rule "inEqSimp_notGeq" (formula "16") (term "0,0,1,1,0,0,0,1,1,0"))
            (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,1,1,0,0,0,1,1,0"))
            (rule "add_zero_right" (formula "16") (term "0,0,0,0,1,1,0,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,1,1,0,0,0,1,1,0"))
            (rule "mul_literals" (formula "16") (term "1,0,0,1,1,0,0,0,1,1,0"))
            (rule "inEqSimp_notLeq" (formula "16") (term "1,0,1,1,0,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,1,1,0,0,0,1,1,0"))
            (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,1,1,0,0,0,1,1,0"))
            (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
            (rule "add_literals" (formula "16") (term "0,0,0,1,0,1,1,0,0,0,1,1,0"))
            (rule "add_zero_left" (formula "16") (term "0,0,1,0,1,1,0,0,0,1,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,1,1,0,0,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,1,1,0,0,0,1,1,0"))
            (rule "polySimp_elimOne" (formula "16") (term "1,1,0,1,1,0,0,0,1,1,0"))
            (rule "commute_or" (formula "16") (term "0,0,1,1,0"))
            (rule "commute_or_2" (formula "16") (term "0,1,1,0"))
            (rule "commute_or_2" (formula "16") (term "0,1,0,1,1,0"))
            (rule "commute_or" (formula "16") (term "1,1,0,1,1,0"))
            (rule "commute_or" (formula "16") (term "0,0,1,0,1,1,0"))
            (rule "commute_or_2" (formula "16") (term "0,1,1,0,1,1,0"))
            (rule "commute_or" (formula "16") (term "0,0,1,1,0,1,1,0"))
            (rule "cnf_rightDist" (formula "16") (term "1,1,0,1,1,0"))
            (rule "commute_or" (formula "16") (term "1,1,1,0,1,1,0"))
            (rule "cnf_rightDist" (formula "16") (term "0,1,1,0"))
            (rule "commute_or" (formula "16") (term "1,0,1,1,0"))
            (rule "commute_or_2" (formula "16") (term "0,0,1,1,0"))
            (rule "commute_or_2" (formula "16") (term "0,1,1,0,1,1,0"))
            (rule "inEqSimp_or_tautInEq1" (formula "16") (term "0,0,1,1,0,1,1,0"))
            (rule "add_zero_right" (formula "16") (term "1,1,0,0,1,1,0,1,1,0"))
            (rule "qeq_literals" (formula "16") (term "1,0,0,1,1,0,1,1,0"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "commute_or_2" (formula "16") (term "1,0,1,1,0"))
            (rule "shift_paren_or" (formula "16") (term "0,0,0,1,1,0"))
            (rule "shift_paren_or" (formula "16") (term "0,1,0,1,1,0"))
            (rule "shift_paren_or" (formula "16") (term "0,0,0,0,1,1,0"))
            (rule "shift_paren_or" (formula "16") (term "0,0,1,0,1,1,0"))
            (rule "commute_or" (formula "16") (term "0,0,0,0,0,1,1,0"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "shift_paren_or" (formula "16") (term "0,0,0,1,0,1,1,0"))
            (rule "commute_or" (formula "16") (term "0,0,0,0,1,0,1,1,0"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "allLeft" (formula "23") (inst "t=i_1"))
            (rule "inEqSimp_commuteGeq" (formula "23") (term "1"))
            (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "2"))
            (rule "qeq_literals" (formula "23") (term "0,1,0"))
            (builtin "One Step Simplification" (formula "23"))
            (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "1"))
            (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
            (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "23") (term "0,0,1"))
            (rule "leq_literals" (formula "23") (term "0,1"))
            (builtin "One Step Simplification" (formula "23"))
            (rule "notLeft" (formula "23"))
            (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "29"))
            (builtin "One Step Simplification" (formula "5"))
            (rule "replace_known_right" (formula "3") (term "1") (ifseqformula "29"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "notLeft" (formula "3"))
            (rule "referencedObjectIsCreatedRight" (formula "28") (ifseqformula "33"))
            (rule "close" (formula "28") (ifseqformula "6"))
         )
      )
      (branch "Case 2"
         (rule "allRight" (formula "37") (inst "sk=i_0"))
         (rule "orRight" (formula "37"))
         (rule "orRight" (formula "37"))
         (rule "notRight" (formula "39"))
         (rule "inEqSimp_geqRight" (formula "39"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "inEqSimp_leqRight" (formula "39"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "add_zero_left" (formula "1") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
         (rule "polySimp_elimOne" (formula "2") (term "0"))
         (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_0"))
         (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "24"))
         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "36")) (ifInst ""  (formula "8")))
         (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
         (rule "hideAuxiliaryEq" (formula "3"))
         (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "4") (ifseqformula "35"))
         (rule "ifthenelse_to_or_left" (formula "13") (term "1,0,0,1,0"))
         (rule "eqSymm" (formula "13") (term "1,1,1,0,0,1,0"))
         (rule "inEqSimp_notGeq" (formula "13") (term "0,0,1,0,0,1,0"))
         (rule "mul_literals" (formula "13") (term "1,0,0,0,0,1,0,0,1,0"))
         (rule "add_literals" (formula "13") (term "0,0,0,0,1,0,0,1,0"))
         (rule "add_zero_left" (formula "13") (term "0,0,0,1,0,0,1,0"))
         (rule "commute_or" (formula "13") (term "1,1,0,0,1,0"))
         (rule "allLeft" (formula "21") (inst "t=i_0"))
         (rule "replace_known_left" (formula "21") (term "0,0,0") (ifseqformula "3"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "inEqSimp_commuteGeq" (formula "21") (term "1"))
         (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "2"))
         (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
         (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
         (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
         (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
         (rule "add_zero_right" (formula "21") (term "0,0,1"))
         (rule "leq_literals" (formula "21") (term "0,1"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "inEqSimp_contradInEq1" (formula "21") (ifseqformula "1"))
         (rule "qeq_literals" (formula "21") (term "0"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "closeFalse" (formula "21"))
      )
   )
)
(branch "Exceptional Post (first)"
   (builtin "One Step Simplification" (formula "4"))
   (builtin "One Step Simplification" (formula "3"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "translateJavaAddInt" (formula "4") (term "1,0,1,0,0,0,1"))
   (rule "andLeft" (formula "3"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "1,0") (ifseqformula "3"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "5"))
   (rule "andLeft" (formula "2"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "4"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "11"))
   (rule "notLeft" (formula "9"))
   (rule "close" (formula "13") (ifseqformula "12"))
)
(branch "Pre (first)"
   (builtin "One Step Simplification" (formula "2"))
   (builtin "Evaluate Query" (formula "2") (term "0,0,1,0") (newnames "b,callee,queryResult,res_byteArrayToInt"))
   (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,bal)_2_0" (formula "3") (term "0,0,1,0") (userinteraction))
   (rule "replaceKnownQuery_verif_utils_MessageTools_byteArrayToInt(heap,bal)_2_0" (formula "3") (term "1,1,0,0") (userinteraction))
   (rule "notLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "2"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "4"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "3"))
   (rule "andLeft" (formula "9"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "11"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "13"))
   (rule "notLeft" (formula "2"))
   (rule "andLeft" (formula "13"))
   (rule "notLeft" (formula "14"))
   (rule "variableDeclaration" (formula "16") (term "1") (newnames "queryResult_1") (userinteraction))
   (builtin "Use Operation Contract" (formula "16") (newnames "heapBefore_byteArrayToInt_0,result_3,exc_3") (contract "verif.utils.MessageTools[verif.utils.MessageTools::byteArrayToInt([B)].JML normal_behavior operation contract.0"))
   (branch "Post (byteArrayToInt)"
      (builtin "One Step Simplification" (formula "14"))
      (builtin "One Step Simplification" (formula "10"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "translateJavaAddInt" (formula "18") (term "1,0,0"))
      (rule "andLeft" (formula "14"))
      (rule "andLeft" (formula "15"))
      (rule "eqSymm" (formula "9"))
      (rule "eqSymm" (formula "10") (term "1,0"))
      (rule "eqSymm" (formula "18") (term "0,0,1"))
      (rule "eqSymm" (formula "15"))
      (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "16"))
      (builtin "One Step Simplification" (formula "5"))
      (rule "replace_known_right" (formula "19") (term "0,1,1") (ifseqformula "16"))
      (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "16")) (ifInst ""  (formula "1")) (ifInst ""  (formula "5")))
      (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "11"))
      (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
      (rule "inEqSimp_homoInEq1" (formula "7"))
      (rule "polySimp_addComm1" (formula "7") (term "0"))
      (rule "assignment" (formula "18") (term "1"))
      (builtin "One Step Simplification" (formula "18"))
      (rule "applyEq" (formula "8") (term "0") (ifseqformula "15"))
      (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "15"))
      (rule "polySimp_addComm1" (formula "7") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "7"))
      (rule "polySimp_mulLiterals" (formula "7") (term "0"))
      (rule "polySimp_elimOne" (formula "7") (term "0"))
      (rule "nonNull" (formula "13") (inst "i=i"))
      (rule "sub_literals" (formula "13") (term "2,1,0,1,1"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "greater_literals" (formula "13") (term "0,1"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "andLeft" (formula "13"))
      (rule "notLeft" (formula "13"))
      (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "16"))
      (builtin "One Step Simplification" (formula "4"))
      (rule "narrowSelectArrayType" (formula "13") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "16"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
      (rule "array2seqDef" (formula "9") (term "1") (inst "u=u"))
      (rule "eqSymm" (formula "9"))
      (rule "narrowSelectArrayType" (formula "9") (term "2,0") (ifseqformula "1") (ifseqformula "17"))
      (rule "array2seqDef" (formula "10") (term "1,1,0") (inst "u=u"))
      (rule "eqSymm" (formula "10") (term "1,0"))
      (rule "array2seqDef" (formula "15") (term "0,0") (inst "u=u"))
      (rule "narrowSelectArrayType" (formula "15") (term "2,0,0") (ifseqformula "1") (ifseqformula "17"))
      (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "9"))
      (rule "array2seqDef" (formula "10") (term "1,1,0") (inst "u=u"))
      (rule "eqSymm" (formula "10") (term "1,0"))
      (rule "eqSeqDef2" (formula "9") (inst "iv=iv") (ifseqformula "9"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "true_left" (formula "9"))
      (rule "eqSeqDef" (formula "9") (term "1,0") (inst "iv=iv"))
      (rule "lenOfSeqDef" (formula "9") (term "1,1,0,0,1,1,0"))
      (rule "polySimp_elimSub" (formula "9") (term "1,1,1,0,0,1,1,0"))
      (rule "times_zero_2" (formula "9") (term "1,1,1,1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "9") (term "1,1,1,0,0,1,1,0"))
      (rule "lenOfSeqDef" (formula "9") (term "1,0,1,0"))
      (rule "polySimp_elimSub" (formula "9") (term "1,1,0,1,0"))
      (rule "times_zero_2" (formula "9") (term "1,1,1,0,1,0"))
      (rule "add_zero_right" (formula "9") (term "1,1,0,1,0"))
      (rule "lenOfSeqDef" (formula "9") (term "0,0,1,0"))
      (rule "polySimp_elimSub" (formula "9") (term "1,0,0,1,0"))
      (rule "times_zero_2" (formula "9") (term "1,1,0,0,1,0"))
      (rule "add_zero_right" (formula "9") (term "1,0,0,1,0"))
      (rule "getOfSeqDef" (formula "9") (term "0,1,0,1,1,0"))
      (rule "castDel" (formula "9") (term "2,0,1,0,1,1,0"))
      (rule "castDel" (formula "9") (term "1,0,1,0,1,1,0"))
      (rule "add_zero_right" (formula "9") (term "0,2,1,0,1,0,1,1,0"))
      (rule "eqSymm" (formula "9") (term "1,0,1,1,0"))
      (rule "polySimp_elimSub" (formula "9") (term "1,1,0,1,1,0,1,1,0"))
      (rule "times_zero_2" (formula "9") (term "1,1,1,0,1,1,0,1,1,0"))
      (rule "add_zero_right" (formula "9") (term "1,1,0,1,1,0,1,1,0"))
      (rule "getOfSeqDef" (formula "9") (term "0,1,0,1,1,0"))
      (rule "castDel" (formula "9") (term "2,0,1,0,1,1,0"))
      (rule "castDel" (formula "9") (term "1,0,1,0,1,1,0"))
      (rule "add_zero_right" (formula "9") (term "0,2,1,0,1,0,1,1,0"))
      (rule "eqSymm" (formula "9") (term "1,0,1,1,0"))
      (rule "polySimp_elimSub" (formula "9") (term "1,1,0,1,1,0,1,1,0"))
      (rule "times_zero_2" (formula "9") (term "1,1,1,0,1,1,0,1,1,0"))
      (rule "add_zero_right" (formula "9") (term "1,1,0,1,1,0,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "9") (term "0,1,1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "9") (term "0,0,1,1,0,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,1,0,0,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "9") (term "0,1,0,1,0"))
      (rule "add_zero_right" (formula "9") (term "0,0,1,0,1,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,1,0"))
      (rule "add_zero_right" (formula "9") (term "0,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,0,1,1,0"))
      (rule "eqSymm" (formula "9") (term "1,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,1,1,0,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,0,1,1,0"))
      (rule "eqSymm" (formula "9") (term "1,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,1,1,0,1,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,0,1,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,1,1,0,1,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,1,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "0,0,1,0,1,0"))
      (rule "polySimp_elimOne" (formula "9") (term "0,0,1,0,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "9") (term "0,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,1,1,0"))
      (rule "mul_literals" (formula "9") (term "0,1,1,0,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,1,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1,0,1,1,0"))
      (rule "eqSymm" (formula "9") (term "1,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,1,1,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "9") (term "1,1,0,1,1,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,1,1,0,1,1,0"))
      (rule "mul_literals" (formula "9") (term "0,1,1,0,1,1,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,1,1,0,1,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,1,1,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "0,0,1,1,1,0,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "9") (term "0,0,1,1,1,0,0,1,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1,0,1,1,0"))
      (rule "eqSymm" (formula "9") (term "1,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,1,1,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "9") (term "1,1,0,1,1,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,1,1,0,1,1,0"))
      (rule "mul_literals" (formula "9") (term "0,1,1,0,1,1,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,1,1,0,1,1,0"))
      (rule "nnf_imp2or" (formula "12") (term "0"))
      (rule "nnf_imp2or" (formula "9") (term "0"))
      (rule "nnf_notAnd" (formula "12") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
      (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
      (rule "mul_literals" (formula "12") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "9") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
      (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "9") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
      (rule "mul_literals" (formula "9") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
      (rule "nnf_imp2or" (formula "9") (term "0,1,1,0"))
      (rule "nnf_notAnd" (formula "9") (term "0,0,1,1,0"))
      (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0,1,1,0"))
      (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0,1,1,0"))
      (rule "add_zero_right" (formula "9") (term "0,0,0,0,0,1,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,1,1,0"))
      (rule "mul_literals" (formula "9") (term "1,0,0,0,1,1,0"))
      (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0,1,1,0"))
      (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0,1,1,0"))
      (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,1,1,0"))
      (rule "add_literals" (formula "9") (term "0,0,0,1,0,0,1,1,0"))
      (rule "add_zero_left" (formula "9") (term "0,0,1,0,0,1,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,1,1,0"))
      (rule "commute_and" (formula "19"))
      (rule "methodCallEmpty" (formula "18") (term "1"))
      (builtin "One Step Simplification" (formula "18"))
      (rule "commute_or_2" (formula "12") (term "0"))
      (rule "Class_invariant_axiom_for_verif_selectvoting_system_core_MixServer" (formula "11") (ifseqformula "3"))
      (rule "andLeft" (formula "11"))
      (rule "notLeft" (formula "12"))
      (rule "andLeft" (formula "11"))
      (rule "notLeft" (formula "12"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "11"))
      (rule "notLeft" (formula "13"))
      (rule "notLeft" (formula "12"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "11"))
      (rule "andLeft" (formula "11"))
      (rule "notLeft" (formula "11"))
      (rule "nonNull" (formula "14") (inst "i=i"))
      (rule "sub_literals" (formula "14") (term "2,1,0,1,1"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "greater_literals" (formula "14") (term "0,1"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "andLeft" (formula "14"))
      (rule "notLeft" (formula "14"))
      (rule "narrowSelectArrayType" (formula "14") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "18"))
      (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
      (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
      (rule "nonNull" (formula "13") (inst "i=i"))
      (rule "greater_literals" (formula "13") (term "0,1"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "sub_literals" (formula "13") (term "2,1,0,1"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "andLeft" (formula "13"))
      (rule "notLeft" (formula "13"))
      (rule "narrowSelectArrayType" (formula "13") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "18"))
      (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
      (rule "nonNull" (formula "12") (inst "i=i"))
      (rule "greater_literals" (formula "12") (term "0,1"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "sub_literals" (formula "12") (term "2,1,0,1"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "andLeft" (formula "12"))
      (rule "notLeft" (formula "12"))
      (rule "narrowSelectArrayType" (formula "12") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "18"))
      (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
      (rule "nonNull" (formula "11") (inst "i=i"))
      (rule "greater_literals" (formula "11") (term "0,1"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "sub_literals" (formula "11") (term "2,1,0,1"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "andLeft" (formula "11"))
      (rule "notLeft" (formula "11"))
      (rule "narrowSelectArrayType" (formula "11") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "18"))
      (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
      (rule "nnf_imp2or" (formula "14") (term "0"))
      (rule "nnf_imp2or" (formula "13") (term "0"))
      (rule "nnf_imp2or" (formula "12") (term "0"))
      (rule "nnf_imp2or" (formula "11") (term "0"))
      (rule "nnf_notAnd" (formula "14") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
      (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "14") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
      (rule "mul_literals" (formula "14") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "13") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
      (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
      (rule "mul_literals" (formula "13") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "12") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
      (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
      (rule "mul_literals" (formula "12") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "11") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
      (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
      (rule "mul_literals" (formula "11") (term "1,0,0,0"))
      (rule "commute_or" (formula "15") (term "0,0"))
      (rule "commute_or_2" (formula "9") (term "0,1,1,0"))
      (rule "ifthenelse_to_or_left" (formula "9") (term "0,1,0"))
      (rule "eqSymm" (formula "9") (term "1,0,0,1,0"))
      (rule "eqSymm" (formula "9") (term "1,1,0,1,0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "inEqSimp_notGeq" (formula "9") (term "0,1,1,0,1,0"))
      (rule "mul_literals" (formula "9") (term "1,0,0,0,1,1,0,1,0"))
      (rule "add_literals" (formula "9") (term "0,0,0,1,1,0,1,0"))
      (rule "add_zero_left" (formula "9") (term "0,0,1,1,0,1,0"))
      (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0,1,0"))
      (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0,1,0"))
      (rule "add_literals" (formula "9") (term "0,0,0,0,0,1,0"))
      (rule "add_zero_left" (formula "9") (term "0,0,0,0,1,0"))
      (rule "commute_or_2" (formula "14") (term "0"))
      (rule "commute_or_2" (formula "13") (term "0"))
      (rule "emptyModality" (formula "30") (term "1"))
      (builtin "One Step Simplification" (formula "30"))
      (rule "notRight" (formula "30"))
      (rule "eqSymm" (formula "1"))
      (rule "applyEq" (formula "9") (term "0") (ifseqformula "1"))
      (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "9"))
      (builtin "One Step Simplification" (formula "31"))
      (rule "inEqSimp_geqRight" (formula "31"))
      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
      (rule "add_literals" (formula "1") (term "0,0,0"))
      (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "2"))
      (rule "applyEq" (formula "19") (term "1") (ifseqformula "2"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1"))
      (rule "polySimp_rightDist" (formula "1") (term "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
      (rule "mul_literals" (formula "1") (term "0,1"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
      (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "1"))
      (rule "andLeft" (formula "9"))
      (rule "inEqSimp_homoInEq1" (formula "9"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
      (rule "polySimp_rightDist" (formula "9") (term "1,0"))
      (rule "mul_literals" (formula "9") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "9") (term "0"))
      (rule "polySimp_addComm1" (formula "9") (term "0,0"))
      (rule "add_literals" (formula "9") (term "0,0,0"))
      (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
      (rule "add_literals" (formula "9") (term "1,1,0"))
      (rule "times_zero_1" (formula "9") (term "1,0"))
      (rule "add_zero_right" (formula "9") (term "0"))
      (rule "leq_literals" (formula "9"))
      (rule "closeFalse" (formula "9"))
   )
   (branch "Exceptional Post (byteArrayToInt)"
      (builtin "One Step Simplification" (formula "14"))
      (builtin "One Step Simplification" (formula "10"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "translateJavaAddInt" (formula "18") (term "1,0,0"))
      (rule "andLeft" (formula "14"))
      (rule "andLeft" (formula "14"))
      (rule "andLeft" (formula "16"))
      (rule "notLeft" (formula "14"))
      (rule "close" (formula "17") (ifseqformula "16"))
   )
   (branch "Pre (byteArrayToInt)"
      (builtin "One Step Simplification" (formula "10"))
      (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "14")) (ifInst ""  (formula "1")) (ifInst ""  (formula "14")))
      (rule "translateJavaAddInt" (formula "17") (term "1,0,0"))
      (rule "eqSymm" (formula "9"))
      (rule "eqSymm" (formula "10") (term "1,0"))
      (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "14"))
      (builtin "One Step Simplification" (formula "5"))
      (rule "replace_known_left" (formula "16") (term "1") (ifseqformula "5"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "replace_known_left" (formula "17") (term "1,1,1") (ifseqformula "5"))
      (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "14")) (ifInst ""  (formula "1")) (ifInst ""  (formula "14")))
      (rule "inEqSimp_geqRight" (formula "16"))
      (rule "mul_literals" (formula "1") (term "1,0,0"))
      (rule "add_literals" (formula "1") (term "0,0"))
      (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "12"))
      (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
      (rule "inEqSimp_homoInEq1" (formula "8"))
      (rule "polySimp_addComm1" (formula "8") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "8"))
      (rule "polySimp_mulComm0" (formula "8") (term "1"))
      (rule "polySimp_rightDist" (formula "8") (term "1"))
      (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
      (rule "mul_literals" (formula "8") (term "0,1"))
      (rule "polySimp_elimOne" (formula "8") (term "1,1"))
      (rule "array2seqDef" (formula "9") (term "0,0") (inst "u=u"))
      (rule "narrowSelectArrayType" (formula "9") (term "2,0,0") (ifseqformula "2") (ifseqformula "15"))
      (rule "nonNull" (formula "14") (inst "i=i"))
      (rule "greater_literals" (formula "14") (term "0,1"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "sub_literals" (formula "14") (term "2,1,0,1"))
      (builtin "One Step Simplification" (formula "14"))
      (rule "andLeft" (formula "14"))
      (rule "notLeft" (formula "14"))
      (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "15"))
      (builtin "One Step Simplification" (formula "5"))
      (rule "narrowSelectArrayType" (formula "14") (term "0,0,1,0") (ifseqformula "2") (ifseqformula "15"))
      (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
      (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
      (rule "array2seqDef" (formula "10") (term "1") (inst "u=u"))
      (rule "eqSymm" (formula "10"))
      (rule "narrowSelectArrayType" (formula "10") (term "2,0") (ifseqformula "2") (ifseqformula "16"))
      (rule "applyEq" (formula "9") (term "0,0") (ifseqformula "10"))
      (rule "array2seqDef" (formula "11") (term "1,1,0") (inst "u=u"))
      (rule "eqSymm" (formula "11") (term "1,0"))
      (rule "array2seqDef" (formula "8") (term "0,0") (inst "u=u"))
      (rule "narrowSelectArrayType" (formula "8") (term "2,0,0") (ifseqformula "2") (ifseqformula "16"))
      (rule "applyEq" (formula "8") (term "0,0") (ifseqformula "10"))
      (rule "array2seqDef" (formula "11") (term "1,1,0") (inst "u=u"))
      (rule "eqSymm" (formula "11") (term "1,0"))
      (rule "eqSeqDef2" (formula "10") (inst "iv=iv") (ifseqformula "10"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "true_left" (formula "10"))
      (rule "eqSeqDef" (formula "10") (term "1,0") (inst "iv=iv"))
      (rule "lenOfSeqDef" (formula "10") (term "1,0,1,0"))
      (rule "polySimp_elimSub" (formula "10") (term "1,1,0,1,0"))
      (rule "times_zero_2" (formula "10") (term "1,1,1,0,1,0"))
      (rule "add_zero_right" (formula "10") (term "1,1,0,1,0"))
      (rule "lenOfSeqDef" (formula "10") (term "0,0,1,0"))
      (rule "polySimp_elimSub" (formula "10") (term "1,0,0,1,0"))
      (rule "times_zero_2" (formula "10") (term "1,1,0,0,1,0"))
      (rule "add_zero_right" (formula "10") (term "1,0,0,1,0"))
      (rule "getOfSeqDef" (formula "10") (term "0,1,0,1,1,0"))
      (rule "castDel" (formula "10") (term "1,0,1,0,1,1,0"))
      (rule "castDel" (formula "10") (term "2,0,1,0,1,1,0"))
      (rule "add_zero_right" (formula "10") (term "0,2,1,0,1,0,1,1,0"))
      (rule "eqSymm" (formula "10") (term "1,0,1,1,0"))
      (rule "polySimp_elimSub" (formula "10") (term "1,1,0,1,1,0,1,1,0"))
      (rule "times_zero_2" (formula "10") (term "1,1,1,0,1,1,0,1,1,0"))
      (rule "add_zero_right" (formula "10") (term "1,1,0,1,1,0,1,1,0"))
      (rule "lenOfSeqDef" (formula "10") (term "1,1,0,0,1,1,0"))
      (rule "polySimp_elimSub" (formula "10") (term "1,1,1,0,0,1,1,0"))
      (rule "times_zero_2" (formula "10") (term "1,1,1,1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "10") (term "1,1,1,0,0,1,1,0"))
      (rule "getOfSeqDef" (formula "10") (term "0,1,0,1,1,0"))
      (rule "castDel" (formula "10") (term "1,0,1,0,1,1,0"))
      (rule "castDel" (formula "10") (term "2,0,1,0,1,1,0"))
      (rule "add_zero_right" (formula "10") (term "0,2,1,0,1,0,1,1,0"))
      (rule "eqSymm" (formula "10") (term "1,0,1,1,0"))
      (rule "polySimp_elimSub" (formula "10") (term "1,1,0,1,1,0,1,1,0"))
      (rule "times_zero_2" (formula "10") (term "1,1,1,0,1,1,0,1,1,0"))
      (rule "add_zero_right" (formula "10") (term "1,1,0,1,1,0,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "10") (term "0,1,0,1,0"))
      (rule "add_zero_right" (formula "10") (term "0,0,1,0,1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0,1,0"))
      (rule "add_zero_right" (formula "10") (term "0,0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "10") (term "0,1,1,0,0,1,1,0"))
      (rule "add_zero_right" (formula "10") (term "0,0,1,1,0,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,1,0,0,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0,1,1,0"))
      (rule "eqSymm" (formula "10") (term "1,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,1,1,0,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0,1,1,0"))
      (rule "eqSymm" (formula "10") (term "1,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,1,1,0,1,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,1,1,0,1,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,0,1,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,1,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "0,0,1,0,1,0"))
      (rule "polySimp_elimOne" (formula "10") (term "0,0,1,0,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0,0,1,0"))
      (rule "polySimp_elimOne" (formula "10") (term "0,0,0,0,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,1,0"))
      (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,0,1,1,0"))
      (rule "eqSymm" (formula "10") (term "1,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,1,1,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,1,0,1,1,0,1,1,0"))
      (rule "mul_literals" (formula "10") (term "0,1,1,0,1,1,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,1,1,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,1,1,0,1,1,0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,1,1,1,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "0,0,1,1,1,0,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "10") (term "0,0,1,1,1,0,0,1,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,0,1,1,0"))
      (rule "eqSymm" (formula "10") (term "1,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,1,1,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,1,0,1,1,0,1,1,0"))
      (rule "mul_literals" (formula "10") (term "0,1,1,0,1,1,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,1,1,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,1,1,0,1,1,0"))
      (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "8"))
      (rule "times_zero_1" (formula "9") (term "0,0"))
      (rule "add_zero_left" (formula "9") (term "0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "9"))
      (rule "mul_literals" (formula "9") (term "1"))
      (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "1"))
      (rule "qeq_literals" (formula "9") (term "0"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "closeFalse" (formula "9"))
   )
)
)

}
