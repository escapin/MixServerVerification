\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Fri Aug 05 15:14:17 CEST 2016
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=80000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Fri Aug 05 15:14:17 CEST 2016
name=verif.utils.MessageTools[verif.utils.MessageTools\\:\\:unsign(byte)].JML accessible clause.0
contract=verif.utils.MessageTools[verif.utils.MessageTools\\:\\:unsign(byte)].JML accessible clause.0
class=de.uka.ilkd.key.proof.init.DependencyContractPO
";

\proof {
(keyLog "0" (keyUser "mihai" ) (keyVersion "6bc7ade97061383f11985e24decf735b7f2f0af2"))

(autoModeTime "94")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "b,anon_heap"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "eqSymm" (formula "4"))
(rule "Query_axiom_for_unsign_byte__in_verif_utils_MessageTools" (formula "4") (term "1") (inst "unsign_sk=unsign_sk_0") (inst "#p0=x_1") (inst "#res=x"))
(builtin "One Step Simplification" (formula "1"))
(rule "eqSymm" (formula "1") (term "0,1"))
(rule "Query_axiom_for_unsign_byte__in_verif_utils_MessageTools" (formula "5") (term "0") (inst "unsign_sk=unsign_sk_1") (inst "#p0=x_1") (inst "#res=x"))
(builtin "One Step Simplification" (formula "1"))
(rule "eqSymm" (formula "1") (term "0,1"))
(rule "boxToDiamond" (formula "2") (term "1"))
(builtin "One Step Simplification" (formula "2"))
(rule "notLeft" (formula "2"))
(rule "boxToDiamond" (formula "1") (term "1"))
(builtin "One Step Simplification" (formula "1"))
(rule "notLeft" (formula "1"))
(rule "methodBodyExpand" (formula "5") (term "1") (newnames "heapBefore_unsign,savedHeapBefore_unsign"))
(builtin "One Step Simplification" (formula "5"))
(rule "methodBodyExpand" (formula "4") (term "1") (newnames "heapBefore_unsign_0,savedHeapBefore_unsign_0"))
(builtin "One Step Simplification" (formula "4"))
(rule "ifUnfold" (formula "5") (term "1") (inst "#boolv=x_2"))
(rule "variableDeclaration" (formula "5") (term "1") (newnames "x_2"))
(rule "less_than_comparison_simple" (formula "5") (term "1"))
(builtin "One Step Simplification" (formula "5"))
(rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,1,0"))
(rule "times_zero_1" (formula "5") (term "1,0,0,0,0,1,0"))
(rule "add_zero_right" (formula "5") (term "0,0,0,0,1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,1,0"))
(rule "mul_literals" (formula "5") (term "1,0,0,1,0"))
(rule "ifUnfold" (formula "4") (term "1") (inst "#boolv=x_2"))
(rule "variableDeclaration" (formula "4") (term "1") (newnames "x_3"))
(rule "less_than_comparison_simple" (formula "4") (term "1"))
(builtin "One Step Simplification" (formula "4"))
(rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,1,0"))
(rule "mul_literals" (formula "4") (term "1,0,0,0,0,1,0"))
(rule "add_zero_right" (formula "4") (term "0,0,0,0,1,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,1,0"))
(rule "mul_literals" (formula "4") (term "1,0,0,1,0"))
(rule "ifSplit" (formula "5"))
(branch "if x_2 true"
   (builtin "One Step Simplification" (formula "6"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "replace_known_left" (formula "5") (term "0,0,1,0") (ifseqformula "1"))
   (builtin "One Step Simplification" (formula "5"))
   (rule "returnUnfold" (formula "6") (term "1") (inst "#v0=x_2"))
   (rule "variableDeclarationAssign" (formula "6") (term "1"))
   (rule "variableDeclaration" (formula "6") (term "1") (newnames "x_4"))
   (rule "compound_addition_1" (formula "6") (term "1") (inst "#v=x_5"))
   (rule "variableDeclarationAssign" (formula "6") (term "1"))
   (rule "variableDeclaration" (formula "6") (term "1") (newnames "x_5"))
   (rule "widening_identity_cast_5" (formula "6") (term "1"))
   (rule "assignment" (formula "6") (term "1"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "assignmentAdditionInt" (formula "6") (term "1"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "translateJavaAddInt" (formula "6") (term "0,1,0"))
   (rule "polySimp_addComm0" (formula "6") (term "0,1,0"))
   (rule "blockReturn" (formula "6") (term "1"))
   (rule "methodCallReturn" (formula "6") (term "1"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "assignment" (formula "6") (term "1"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "methodCallEmpty" (formula "6") (term "1"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "emptyModality" (formula "6") (term "1"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "notRight" (formula "6"))
   (rule "eqSymm" (formula "1"))
   (rule "applyEq" (formula "7") (term "1") (ifseqformula "1"))
   (rule "ifSplit" (formula "6"))
   (branch "if x_3 true"
      (builtin "One Step Simplification" (formula "7"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "returnUnfold" (formula "6") (term "1") (inst "#v0=x_2"))
      (rule "variableDeclarationAssign" (formula "6") (term "1"))
      (rule "variableDeclaration" (formula "6") (term "1") (newnames "x_6"))
      (rule "compound_addition_1" (formula "6") (term "1") (inst "#v=x_7"))
      (rule "variableDeclarationAssign" (formula "6") (term "1"))
      (rule "variableDeclaration" (formula "6") (term "1") (newnames "x_7"))
      (rule "widening_identity_cast_5" (formula "6") (term "1"))
      (rule "assignment" (formula "6") (term "1"))
      (builtin "One Step Simplification" (formula "6"))
      (rule "assignmentAdditionInt" (formula "6") (term "1"))
      (builtin "One Step Simplification" (formula "6"))
      (rule "translateJavaAddInt" (formula "6") (term "0,1,0"))
      (rule "polySimp_addComm0" (formula "6") (term "0,1,0"))
      (rule "blockReturn" (formula "6") (term "1"))
      (rule "methodCallReturn" (formula "6") (term "1"))
      (builtin "One Step Simplification" (formula "6"))
      (rule "assignment" (formula "6") (term "1"))
      (builtin "One Step Simplification" (formula "6"))
      (rule "methodCallEmpty" (formula "6") (term "1"))
      (builtin "One Step Simplification" (formula "6"))
      (rule "emptyModality" (formula "6") (term "1"))
      (builtin "One Step Simplification" (formula "6"))
      (rule "notRight" (formula "6"))
      (rule "eqSymm" (formula "1"))
      (rule "close" (formula "7") (ifseqformula "1"))
   )
   (branch "if x_3 false"
      (builtin "One Step Simplification" (formula "7"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "if x_2 false"
   (builtin "One Step Simplification" (formula "6"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "replace_known_right" (formula "5") (term "0,0,1,0") (ifseqformula "4"))
   (builtin "One Step Simplification" (formula "5"))
   (rule "inEqSimp_leqRight" (formula "4"))
   (rule "mul_literals" (formula "1") (term "1,0,0"))
   (rule "add_literals" (formula "1") (term "0,0"))
   (rule "add_zero_left" (formula "1") (term "0"))
   (rule "methodCallReturn" (formula "6") (term "1"))
   (rule "assignment" (formula "6") (term "1"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "methodCallEmpty" (formula "6") (term "1"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "emptyModality" (formula "6") (term "1"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "notRight" (formula "6"))
   (rule "eqSymm" (formula "1"))
   (rule "applyEq" (formula "7") (term "1") (ifseqformula "1"))
   (rule "ifSplit" (formula "6"))
   (branch "if x_3 true"
      (builtin "One Step Simplification" (formula "7"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch "if x_3 false"
      (builtin "One Step Simplification" (formula "7"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "methodCallReturn" (formula "6") (term "1"))
      (rule "assignment" (formula "6") (term "1"))
      (builtin "One Step Simplification" (formula "6"))
      (rule "methodCallEmpty" (formula "6") (term "1"))
      (builtin "One Step Simplification" (formula "6"))
      (rule "emptyModality" (formula "6") (term "1"))
      (builtin "One Step Simplification" (formula "6"))
      (rule "notRight" (formula "6"))
      (rule "eqSymm" (formula "1"))
      (rule "close" (formula "7") (ifseqformula "1"))
   )
)
)

}
