\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sat Nov 19 11:59:36 CET 2016
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=\\#begexpand_inByte\\#end,\\#begexpand_inChar\\#end,\\#begexpand_inShort\\#end,\\#begexpand_inInt\\#end,\\#begexpand_inLong\\#end
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=80000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Sat Nov 19 11:59:36 CET 2016
name=verif.functionalities.pkisig.Signer.Log[verif.functionalities.pkisig.Signer.Log\\:\\:add([B)].JML normal_behavior operation contract.0
contract=verif.functionalities.pkisig.Signer.Log[verif.functionalities.pkisig.Signer.Log\\:\\:add([B)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mihai" ) (keyVersion "09f735064ff7095c3fc50fbed0305eab50b24aa5"))

(autoModeTime "2164")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "message,self,exc,heapAtPre,o,f"))
(rule "translateJavaSubInt" (formula "1") (term "1,1,0,0,0,0,0,0,1,1"))
(rule "translateJavaAddInt" (formula "1") (term "1,0,1,0,0,0,1,1"))
(rule "translateJavaSubInt" (formula "1") (term "0,2,1,0,1,1,0,0,0,1,1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "4"))
(rule "notLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "9") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "7"))
(builtin "One Step Simplification" (formula "4"))
(rule "polySimp_homoEq" (formula "9") (term "0,1,0,0,0,1"))
(rule "polySimp_elimSub" (formula "9") (term "0,2,1,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "9") (term "1,0,2,1,0,1,1,0,0,0,1"))
(rule "polySimp_elimSub" (formula "9") (term "1,1,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "9") (term "1,1,1,0,0,0,0,0,0,1"))
(rule "polySimp_addComm0" (formula "9") (term "0,0,0,1,0,0,0,1"))
(rule "polySimp_addComm0" (formula "9") (term "0,2,1,0,1,1,0,0,0,1"))
(rule "polySimp_addComm0" (formula "9") (term "1,1,0,0,0,0,0,0,1"))
(rule "polySimp_addComm1" (formula "9") (term "0,0,1,0,0,0,1"))
(rule "elementOfSingleton" (formula "9") (term "0,0,0,0,1,0,1"))
(rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0,0,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,0,0,0,0,1"))
(rule "add_literals" (formula "9") (term "0,0,0,1,0,0,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,0,0,0,0,1"))
(rule "assignment" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "polySimp_sepPosMonomial" (formula "9") (term "0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "9") (term "1,0,1,0,0,0,1"))
(rule "mul_literals" (formula "9") (term "0,1,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,0,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "9") (term "0,1,1,0,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,0,0,0,0,1"))
(rule "array2seqDef" (formula "9") (term "1,1,1,0,0,0,1") (inst "u=u"))
(rule "eqSymm" (formula "9") (term "1,1,0,0,0,1"))
(rule "array2seqDef" (formula "9") (term "1,1,1,0,0,0,1") (inst "u=u"))
(rule "eqSymm" (formula "9") (term "1,1,0,0,0,1"))
(rule "eqSeqDef" (formula "9") (term "1,1,0,0,0,1") (inst "iv=iv"))
(rule "lenOfSeqDef" (formula "9") (term "0,0,1,1,0,0,0,1"))
(rule "eqSymm" (formula "9") (term "0,1,1,0,0,0,1"))
(rule "polySimp_elimSub" (formula "9") (term "1,1,0,1,1,0,0,0,1"))
(rule "times_zero_2" (formula "9") (term "1,1,1,0,1,1,0,0,0,1"))
(rule "add_zero_right" (formula "9") (term "1,1,0,1,1,0,0,0,1"))
(rule "getOfSeqDef" (formula "9") (term "0,1,0,1,1,1,0,0,0,1"))
(rule "castDel" (formula "9") (term "2,0,1,0,1,1,1,0,0,0,1"))
(rule "castDel" (formula "9") (term "1,0,1,0,1,1,1,0,0,0,1"))
(rule "add_zero_right" (formula "9") (term "0,2,1,0,1,0,1,1,1,0,0,0,1"))
(rule "eqSymm" (formula "9") (term "1,0,1,1,1,0,0,0,1"))
(rule "polySimp_elimSub" (formula "9") (term "1,1,0,1,1,0,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "9") (term "1,1,1,0,1,1,0,1,1,1,0,0,0,1"))
(rule "add_zero_right" (formula "9") (term "1,1,0,1,1,0,1,1,1,0,0,0,1"))
(rule "lenOfSeqDef" (formula "9") (term "1,1,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_elimSub" (formula "9") (term "1,1,1,0,0,1,1,1,0,0,0,1"))
(rule "times_zero_2" (formula "9") (term "1,1,1,1,0,0,1,1,1,0,0,0,1"))
(rule "add_zero_right" (formula "9") (term "1,1,1,0,0,1,1,1,0,0,0,1"))
(rule "lenOfSeqDef" (formula "9") (term "0,0,1,1,0,0,0,1"))
(rule "eqSymm" (formula "9") (term "0,1,1,0,0,0,1"))
(rule "polySimp_elimSub" (formula "9") (term "1,1,0,1,1,0,0,0,1"))
(rule "times_zero_2" (formula "9") (term "1,1,1,0,1,1,0,0,0,1"))
(rule "add_zero_right" (formula "9") (term "1,1,0,1,1,0,0,0,1"))
(rule "getOfSeqDef" (formula "9") (term "0,1,0,1,1,1,0,0,0,1"))
(rule "castDel" (formula "9") (term "1,0,1,0,1,1,1,0,0,0,1"))
(rule "castDel" (formula "9") (term "2,0,1,0,1,1,1,0,0,0,1"))
(rule "add_zero_right" (formula "9") (term "0,2,1,0,1,0,1,1,1,0,0,0,1"))
(rule "eqSymm" (formula "9") (term "1,0,1,1,1,0,0,0,1"))
(rule "polySimp_elimSub" (formula "9") (term "1,1,0,1,1,0,1,1,1,0,0,0,1"))
(rule "times_zero_2" (formula "9") (term "1,1,1,0,1,1,0,1,1,1,0,0,0,1"))
(rule "add_zero_right" (formula "9") (term "1,1,0,1,1,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "9") (term "0,1,1,0,0,1,1,1,0,0,0,1"))
(rule "add_zero_right" (formula "9") (term "0,0,1,1,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,1,0,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,1,1,0,0,0,1"))
(rule "add_zero_right" (formula "9") (term "0,0,0,0,1,1,0,0,0,1"))
(rule "eqSymm" (formula "9") (term "0,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,1,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,0,1,1,1,0,0,0,1"))
(rule "eqSymm" (formula "9") (term "1,0,1,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,1,1,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0,1,1,0,0,0,1"))
(rule "add_zero_right" (formula "9") (term "0,0,0,0,1,1,0,0,0,1"))
(rule "eqSymm" (formula "9") (term "0,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,1,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,0,1,1,1,0,0,0,1"))
(rule "eqSymm" (formula "9") (term "1,0,1,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,1,1,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,1,1,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,0,1,0,0,1,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,1,0,0,1,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "9") (term "0,0,0,1,0,0,1,0,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,0,1,1,0,0,0,1"))
(rule "eqSymm" (formula "9") (term "0,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "9") (term "0,0,1,0,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1,0,1,1,1,0,0,0,1"))
(rule "eqSymm" (formula "9") (term "1,0,1,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "9") (term "1,1,0,1,1,0,1,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "9") (term "1,1,0,1,1,0,1,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,1,1,0,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "9") (term "0,1,1,0,1,1,0,1,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,1,1,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "9") (term "0,1,1,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,0,0,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,0,1,1,0,0,0,1"))
(rule "eqSymm" (formula "9") (term "0,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "9") (term "0,0,1,0,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1,0,1,1,1,0,0,0,1"))
(rule "eqSymm" (formula "9") (term "1,0,1,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "9") (term "1,1,0,1,1,0,1,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "9") (term "1,1,0,1,1,0,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "9") (term "0,1,1,0,1,1,0,1,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,1,1,0,1,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,1,1,0,1,1,1,0,0,0,1"))
(rule "nnf_imp2or" (formula "9") (term "0,0,0,0,0,1"))
(rule "nnf_notAnd" (formula "9") (term "0,0,0,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "9") (term "0,0,0,0,0,0,0,1"))
(rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0,0,0,0,0,1"))
(rule "add_zero_right" (formula "9") (term "0,0,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "9") (term "1,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0,0,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,0,0,0,0,1"))
(rule "add_literals" (formula "9") (term "0,0,0,1,0,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "9") (term "0,1,1,0,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,0,0,0,0,1"))
(rule "nnf_imp2or" (formula "9") (term "0,1,1,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "9") (term "0,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "9") (term "0,0,0,1,1,1,0,0,0,1"))
(rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0,1,1,1,0,0,0,1"))
(rule "add_zero_right" (formula "9") (term "0,0,0,0,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "9") (term "1,0,0,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "9") (term "1,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0,1,1,1,0,0,0,1"))
(rule "add_literals" (formula "9") (term "0,0,0,1,0,0,1,1,1,0,0,0,1"))
(rule "add_zero_left" (formula "9") (term "0,0,1,0,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,1,1,1,0,0,0,1"))
(rule "methodBodyExpand" (formula "9") (term "1") (newnames "heapBefore_add,savedHeapBefore_add,_messageBefore_add"))
(builtin "One Step Simplification" (formula "9"))
(rule "variableDeclarationAssign" (formula "9") (term "1"))
(rule "variableDeclaration" (formula "9") (term "1") (newnames "res"))
(rule "arrayCreation" (formula "9") (term "1") (inst "#v0=x_arr_arr"))
(rule "variableDeclaration" (formula "9") (term "1") (newnames "x_arr_arr"))
(rule "variableDeclarationAssign" (formula "9") (term "1"))
(rule "variableDeclaration" (formula "9") (term "1") (newnames "dim0"))
(rule "compound_addition_1" (formula "9") (term "1") (inst "#v=x"))
(rule "variableDeclarationAssign" (formula "9") (term "1"))
(rule "variableDeclaration" (formula "9") (term "1") (newnames "x"))
(rule "eval_order_array_access6" (formula "9") (term "1") (inst "#v0=x_arr_arr_1"))
(rule "variableDeclarationAssign" (formula "9") (term "1"))
(rule "variableDeclaration" (formula "9") (term "1") (newnames "x_arr_arr_1"))
(rule "assignment_read_attribute_this" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "assignment_read_length" (formula "9") (term "1"))
(branch "Normal Execution (x_arr_arr_1 != null)"
   (builtin "One Step Simplification" (formula "10"))
   (builtin "One Step Simplification" (formula "9") (ifInst ""  (formula "8")))
   (rule "false_right" (formula "9"))
   (rule "assignmentAdditionInt" (formula "9") (term "1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "translateJavaAddInt" (formula "9") (term "0,1,0"))
   (rule "polySimp_addComm0" (formula "9") (term "0,1,0"))
   (rule "ifUnfold" (formula "9") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "9") (term "1") (newnames "x_1"))
   (rule "less_than_comparison_simple" (formula "9") (term "1"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,1,0"))
   (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,1,0"))
   (rule "add_zero_right" (formula "9") (term "0,0,0,0,1,0"))
   (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,1,0"))
   (rule "add_literals" (formula "9") (term "0,0,0,0,1,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,1,0"))
   (rule "mul_literals" (formula "9") (term "1,0,0,1,0"))
   (rule "ifSplit" (formula "9"))
   (branch "if x_1 true"
      (builtin "One Step Simplification" (formula "10"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "blockThrow" (formula "10") (term "1"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "throwUnfold" (formula "10") (term "1") (inst "#v0=n"))
      (rule "variableDeclarationAssign" (formula "10") (term "1"))
      (rule "variableDeclaration" (formula "10") (term "1") (newnames "n"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "0") (ifseqformula "2"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "10"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "arrayLengthIsAShort" (formula "2") (term "0"))
      (builtin "One Step Simplification" (formula "2"))
      (rule "true_left" (formula "2"))
      (rule "arrayLengthNotNegative" (formula "2") (term "0"))
      (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "3"))
      (rule "qeq_literals" (formula "2") (term "0"))
      (builtin "One Step Simplification" (formula "2"))
      (rule "closeFalse" (formula "2"))
   )
   (branch "if x_1 false"
      (builtin "One Step Simplification" (formula "10"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "inEqSimp_leqRight" (formula "6"))
      (rule "mul_literals" (formula "1") (term "1,0,0"))
      (rule "add_literals" (formula "1") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "0") (ifseqformula "2"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "10"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "arrayLengthNotNegative" (formula "11") (term "1,0,1,0"))
      (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
      (rule "leq_literals" (formula "3") (term "0"))
      (builtin "One Step Simplification" (formula "3"))
      (rule "true_left" (formula "3"))
      (rule "arrayLengthIsAShort" (formula "11") (term "1,0,1,0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "11") (term "1") (inst "#v0=x_arr_arr_1"))
      (rule "variableDeclaration" (formula "11") (term "1") (newnames "x_arr_arr_2"))
      (rule "variableDeclarationAssign" (formula "11") (term "1"))
      (rule "variableDeclaration" (formula "11") (term "1") (newnames "length_1"))
      (rule "assignment" (formula "11") (term "1"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "methodBodyExpand" (formula "11") (term "1") (newnames "heapBefore_<createArray>,savedHeapBefore_<createArray>"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "variableDeclaration" (formula "11") (term "1") (newnames "newObject"))
      (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "11") (term "1") (inst "#v0=x_arr_arr_3"))
      (rule "variableDeclaration" (formula "11") (term "1") (newnames "x_arr_arr_3"))
      (rule "variableDeclarationAssign" (formula "11") (term "1"))
      (rule "variableDeclaration" (formula "11") (term "1") (newnames "length_2"))
      (rule "assignment" (formula "11") (term "1"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "allocateInstanceWithLength" (formula "11"))
      (builtin "One Step Simplification" (formula "12"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "4")))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "2"))
      (rule "notLeft" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "polySimp_homoEq" (formula "1"))
      (rule "polySimp_addComm1" (formula "1") (term "0"))
      (rule "blockEmpty" (formula "15") (term "1"))
      (rule "assignment" (formula "15") (term "1"))
      (builtin "One Step Simplification" (formula "15"))
      (rule "polySimp_sepPosMonomial" (formula "1"))
      (rule "polySimp_mulComm0" (formula "1") (term "1"))
      (rule "polySimp_rightDist" (formula "1") (term "1"))
      (rule "mul_literals" (formula "1") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
      (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "3"))
      (rule "mul_literals" (formula "3") (term "1"))
      (rule "arrayLengthNotNegative" (formula "1") (term "1,1"))
      (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "4"))
      (rule "leq_literals" (formula "1") (term "0"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "arrayLengthIsAShort" (formula "1") (term "1,1"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "methodCall" (formula "15") (term "1"))
      (branch "Normal Execution (newObject != null )"
         (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "11")))
         (rule "false_right" (formula "15"))
         (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_<createArrayHelper>,savedHeapBefore_<createArrayHelper>"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "assignment_write_attribute_this" (formula "15") (term "1"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "methodCallWithinClass" (formula "15") (term "1"))
         (rule "methodBodyExpand" (formula "15") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "arrayInitialisation" (formula "15") (term "1"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "polySimp_elimSub" (formula "15") (term "2,1,0,1,0"))
         (rule "mul_literals" (formula "15") (term "1,2,1,0,1,0"))
         (rule "polySimp_addComm0" (formula "15") (term "2,1,0,1,0"))
         (rule "methodCallEmpty" (formula "15") (term "1"))
         (rule "blockEmpty" (formula "15") (term "1"))
         (rule "assignment_write_attribute_this" (formula "15") (term "1"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "methodCallReturnIgnoreResult" (formula "15") (term "1"))
         (rule "blockEmpty" (formula "15") (term "1"))
         (rule "methodCallReturn" (formula "15") (term "1"))
         (rule "assignment" (formula "15") (term "1"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "methodCallEmpty" (formula "15") (term "1"))
         (rule "blockEmpty" (formula "15") (term "1"))
         (rule "assignment" (formula "15") (term "1"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "blockEmpty" (formula "15") (term "1"))
         (rule "assignment" (formula "15") (term "1"))
         (builtin "One Step Simplification" (formula "15"))
         (rule "for_to_while" (formula "15") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0"))
         (rule "variableDeclarationAssign" (formula "15") (term "1"))
         (rule "variableDeclaration" (formula "15") (term "1") (newnames "i"))
         (rule "assignment" (formula "15") (term "1"))
         (builtin "One Step Simplification" (formula "15"))
         (builtin "Loop Invariant" (formula "15") (newnames "variant,b,heapBefore_LOOP,iBefore_LOOP,i_0,heap_After_LOOP,anon_heap_LOOP,o,f"))
         (branch "Invariant Initially Valid"
            (builtin "One Step Simplification" (formula "15"))
            (rule "wellFormedStorePrimitive" (formula "15") (term "1"))
            (rule "translateJavaAddInt" (formula "15") (term "1,1,0,0"))
            (rule "leq_literals" (formula "15") (term "0,0,0,0"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "eqSymm" (formula "15") (term "1,0,1,0"))
            (rule "polySimp_homoEq" (formula "15") (term "1,0,0"))
            (rule "polySimp_addComm0" (formula "15") (term "0,0,1,0,0"))
            (rule "polySimp_addComm1" (formula "15") (term "0,1,0,0"))
            (rule "dismissNonSelectedField" (formula "15") (term "0,1,0,0,0"))
            (rule "dismissNonSelectedField" (formula "15") (term "1,0,1,0,1,0"))
            (rule "dismissNonSelectedField" (formula "15") (term "1,1,0,1,0"))
            (rule "dismissNonSelectedField" (formula "15") (term "0,1,0,1,0,0"))
            (rule "dismissNonSelectedField" (formula "15") (term "0,1,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0"))
            (rule "times_zero_1" (formula "15") (term "1,0,0,1,0,0,1,0"))
            (rule "add_zero_right" (formula "15") (term "0,0,1,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
            (rule "polySimp_sepPosMonomial" (formula "15") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0"))
            (rule "mul_literals" (formula "15") (term "1,1,0,0,1,0"))
            (rule "wellFormedMemsetArrayObject" (formula "15") (term "1"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "wellFormedStorePrimitive" (formula "15") (term "0,1"))
            (rule "wellFormedStorePrimitive" (formula "15") (term "0,1"))
            (rule "wellFormedStorePrimitive" (formula "15") (term "0,1"))
            (rule "wellFormedCreate" (formula "15") (term "0,1"))
            (rule "replace_known_left" (formula "15") (term "0,1") (ifseqformula "5"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "pullOutSelect" (formula "15") (term "1,0,1,0,1") (inst "selectSK=verif_functionalities_pkisig_Signer_Log_messages_5"))
            (rule "applyEq" (formula "16") (term "0,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "16") (term "0,0,1,0") (ifseqformula "1"))
            (rule "simplifySelectOfMemset" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "eqSymm" (formula "16") (term "1,0,1"))
            (rule "polySimp_homoEq" (formula "16") (term "1,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0,1,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "polySimp_sepPosMonomial" (formula "16") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "16") (term "1,1,0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0"))
            (rule "mul_literals" (formula "16") (term "0,1,1,0"))
            (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0"))
            (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfCreate" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
            (rule "applyEqReverse" (formula "16") (term "0,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "16") (term "1,1,1,0,1") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "16") (term "0,1,1,1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "eqSymm" (formula "15") (term "1,0,1"))
            (rule "polySimp_homoEq" (formula "15") (term "1,0"))
            (rule "polySimp_addComm1" (formula "15") (term "0,1,0"))
            (rule "applyEq" (formula "15") (term "0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "15") (term "1,0,1,0") (ifseqformula "1"))
            (rule "polySimp_addAssoc" (formula "15") (term "0,1,0"))
            (rule "polySimp_addComm1" (formula "15") (term "0,0,1,0"))
            (rule "add_literals" (formula "15") (term "0,0,0,1,0"))
            (rule "add_zero_left" (formula "15") (term "0,0,1,0"))
            (rule "polySimp_pullOutFactor2" (formula "15") (term "0,1,0"))
            (rule "add_literals" (formula "15") (term "1,0,1,0"))
            (rule "times_zero_1" (formula "15") (term "0,1,0"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0"))
            (rule "mul_literals" (formula "15") (term "1,0"))
            (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "3"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "allRight" (formula "15") (inst "sk=j_1"))
            (rule "impRight" (formula "15"))
            (rule "andLeft" (formula "1"))
            (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
            (rule "qeq_literals" (formula "2") (term "0"))
            (builtin "One Step Simplification" (formula "2"))
            (rule "closeFalse" (formula "2"))
         )
         (branch "Body Preserves Invariant"
            (builtin "One Step Simplification" (formula "17"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "translateJavaAddInt" (formula "17") (term "1,1,0,0,0,1,1,0,1,1"))
            (rule "translateJavaSubInt" (formula "17") (term "0,1,1,1,0,1"))
            (rule "translateJavaSubInt" (formula "17") (term "0,1,1,1,0,1,1"))
            (rule "translateJavaAddInt" (formula "11") (term "1,1,0"))
            (rule "impRight" (formula "17"))
            (rule "andLeft" (formula "12"))
            (rule "andLeft" (formula "12"))
            (rule "andLeft" (formula "12"))
            (rule "eqSymm" (formula "21") (term "1,0,0,1,0,1,1,0,1"))
            (rule "eqSymm" (formula "21") (term "1,0,1,0,0,1,1,0,1"))
            (rule "eqSymm" (formula "15") (term "1,0"))
            (rule "polySimp_elimSub" (formula "21") (term "0,1,1,1,0"))
            (rule "polySimp_homoEq" (formula "21") (term "1,0,0,0,1,1,0,1"))
            (rule "polySimp_elimSub" (formula "21") (term "0,1,1,1,0,1"))
            (rule "polySimp_homoEq" (formula "14"))
            (rule "polySimp_addComm0" (formula "21") (term "0,1,1,1,0"))
            (rule "polySimp_addComm0" (formula "21") (term "0,0,1,0,0,0,1,1,0,1"))
            (rule "polySimp_addComm0" (formula "21") (term "0,1,1,1,0,1"))
            (rule "polySimp_addComm0" (formula "14") (term "0,0"))
            (rule "polySimp_addComm1" (formula "21") (term "0,1,0,0,0,1,1,0,1"))
            (rule "polySimp_addComm1" (formula "14") (term "0"))
            (rule "dismissNonSelectedField" (formula "21") (term "0,2,1,0,1,0,1,1,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "0,2,1,0,1,0"))
            (rule "dismissNonSelectedField" (formula "13") (term "0,2,1,0,0,1"))
            (rule "dismissNonSelectedField" (formula "15") (term "0,2,1,0,1,1,0"))
            (rule "dismissNonSelectedField" (formula "15") (term "0,2,1,0,1,0,1,0"))
            (rule "dismissNonSelectedField" (formula "15") (term "0,2,1,0,0,1,0"))
            (rule "dismissNonSelectedField" (formula "21") (term "0,2,1,0,0,1,0,1,1,1,0"))
            (rule "dismissNonSelectedField" (formula "14") (term "0,2,1,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,1,0,0,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,1,0,0,1,1,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,1,0,0,1,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,0,0,1,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0,0,0,0,1,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "12"))
            (rule "inEqSimp_commuteLeq" (formula "13"))
            (rule "pullOutSelect" (formula "21") (term "0,2,1,0,1,0,1,1,0") (inst "selectSK=verif_functionalities_pkisig_Signer_Log_messages_2"))
            (rule "applyEq" (formula "2") (term "0,2,1,0,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "16") (term "0,2,1,0,0,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "14") (term "0,2,1,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "16") (term "0,2,1,0,1,0,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "15") (term "0,2,1,0,0,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "16") (term "0,2,1,0,1,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "22") (term "0,2,1,0,0,1,0,1,1,1,0") (ifseqformula "1"))
            (rule "simplifySelectOfMemset" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "pullOutSelect" (formula "22") (term "0,1,0,1,1,1,0") (inst "selectSK=verif_functionalities_pkisig_Signer_Log_messages_3"))
            (rule "applyEq" (formula "16") (term "0,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "17") (term "1,0,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "1"))
            (rule "simplifySelectOfAnon" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
            (rule "eqSymm" (formula "17") (term "1,0"))
            (rule "polySimp_addComm1" (formula "16") (term "0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "replaceKnownSelect_taclet1010_0" (formula "1") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
            (rule "variableDeclarationAssign" (formula "3") (term "1"))
            (rule "variableDeclarationAssign" (formula "23") (term "1"))
            (rule "variableDeclaration" (formula "3") (term "1") (newnames "b_2"))
            (rule "variableDeclaration" (formula "23") (term "1") (newnames "exc_1"))
            (rule "assignment" (formula "23") (term "1"))
            (builtin "One Step Simplification" (formula "23"))
            (rule "variableDeclaration" (formula "23") (term "1") (newnames "thrownExc"))
            (rule "blockThrow" (formula "23") (term "1,0,0,1"))
            (rule "blockThrow" (formula "23") (term "1,0,0,1"))
            (rule "polySimp_sepNegMonomial" (formula "16"))
            (rule "polySimp_mulLiterals" (formula "16") (term "0"))
            (rule "polySimp_elimOne" (formula "16") (term "0"))
            (rule "applyEq" (formula "17") (term "1,2,1,0,0,0,0,1,0") (ifseqformula "16"))
            (rule "eqSymm" (formula "17") (term "1,0"))
            (rule "polySimp_addAssoc" (formula "17") (term "2,1,0,0,0,1,1,0"))
            (rule "add_literals" (formula "17") (term "0,2,1,0,0,0,1,1,0"))
            (rule "add_zero_left" (formula "17") (term "2,1,0,0,0,1,1,0"))
            (rule "applyEq" (formula "23") (term "1,2,1,0,0,0,1,0,1,1,0,0") (ifseqformula "16"))
            (rule "polySimp_addAssoc" (formula "23") (term "2,1,0,0,0,1,0,1,1,0,0"))
            (rule "add_literals" (formula "23") (term "0,2,1,0,0,0,1,0,1,1,0,0"))
            (rule "add_zero_left" (formula "23") (term "2,1,0,0,0,1,0,1,1,0,0"))
            (rule "applyEq" (formula "23") (term "1,2,1,0,0,0,1,0,0") (ifseqformula "16"))
            (rule "polySimp_addAssoc" (formula "23") (term "2,1,0,0,0,1,0,0"))
            (rule "add_literals" (formula "23") (term "0,2,1,0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "23") (term "2,1,0,0,0,1,0,0"))
            (rule "applyEq" (formula "3") (term "1,2,1,0,0,0,1,0") (ifseqformula "16"))
            (rule "polySimp_addAssoc" (formula "3") (term "2,1,0,0,0,1,0"))
            (rule "add_literals" (formula "3") (term "0,2,1,0,0,0,1,0"))
            (rule "add_zero_left" (formula "3") (term "2,1,0,0,0,1,0"))
            (rule "applyEq" (formula "2") (term "1,2,2,0,0") (ifseqformula "16"))
            (rule "polySimp_addAssoc" (formula "2") (term "2,2,0,0"))
            (rule "add_literals" (formula "2") (term "0,2,2,0,0"))
            (rule "add_zero_left" (formula "2") (term "2,2,0,0"))
            (rule "applyEq" (formula "6") (term "0") (ifseqformula "16"))
            (rule "inEqSimp_homoInEq1" (formula "6"))
            (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
            (rule "polySimp_rightDist" (formula "6") (term "1,0"))
            (rule "mul_literals" (formula "6") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "6") (term "0"))
            (rule "add_literals" (formula "6") (term "0,0"))
            (rule "add_zero_left" (formula "6") (term "0"))
            (rule "applyEq" (formula "1") (term "1,2,1,0,0,0,1,0,0") (ifseqformula "16"))
            (rule "polySimp_addAssoc" (formula "1") (term "2,1,0,0,0,1,0,0"))
            (rule "add_literals" (formula "1") (term "0,2,1,0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "1") (term "2,1,0,0,0,1,0,0"))
            (rule "applyEq" (formula "17") (term "1,2,1,0,0,0,0,1,0") (ifseqformula "16"))
            (rule "polySimp_addAssoc" (formula "17") (term "2,1,0,0,0,0,1,0"))
            (rule "add_literals" (formula "17") (term "0,2,1,0,0,0,0,1,0"))
            (rule "add_zero_left" (formula "17") (term "2,1,0,0,0,0,1,0"))
            (rule "eqSymm" (formula "17") (term "1,0"))
            (rule "applyEq" (formula "4") (term "1,1") (ifseqformula "16"))
            (rule "polySimp_addAssoc" (formula "4") (term "1"))
            (rule "add_literals" (formula "4") (term "0,1"))
            (rule "add_zero_left" (formula "4") (term "1"))
            (rule "polySimp_sepPosMonomial" (formula "23") (term "1,0,0,0,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,0,1,1,0,1"))
            (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,0,1,1,0,1"))
            (rule "mul_literals" (formula "23") (term "0,1,1,0,0,0,1,1,0,1"))
            (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,0,1,1,0,1"))
            (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,0,1,1,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,1,0,0,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,1,0,0,1,1,0,1"))
            (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,1,0,0,1,1,0,1"))
            (rule "mul_literals" (formula "23") (term "0,1,1,0,0,1,0,0,1,1,0,1"))
            (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,1,0,0,1,1,0,1"))
            (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,1,0,0,1,1,0,1"))
            (rule "inEqSimp_invertInEq0" (formula "6"))
            (rule "mul_literals" (formula "6") (term "1"))
            (rule "polySimp_mulLiterals" (formula "6") (term "0"))
            (rule "polySimp_elimOne" (formula "6") (term "0"))
            (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "ifthenelse_negated" (formula "1") (term "0"))
            (rule "elementOfArrayRange" (formula "23") (term "0,0,0,0,1,0,1,1,0,1") (inst "iv=iv"))
            (rule "inEqSimp_commuteLeq" (formula "23") (term "1,0,0,1,0,0,0,0,1,0,1,1,0,1"))
            (rule "elementOfArrayRange" (formula "2") (term "0,0") (inst "iv=iv"))
            (builtin "One Step Simplification" (formula "2"))
            (rule "simplifySelectOfCreate" (formula "2"))
            (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "19")))
            (rule "applyEqReverse" (formula "3") (term "0,2,1,0,1,0") (ifseqformula "2"))
            (rule "applyEqReverse" (formula "17") (term "0,2,1,0,1,1,0") (ifseqformula "2"))
            (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "2"))
            (rule "applyEqReverse" (formula "23") (term "0,2,1,0,1,0,1,1,0,0") (ifseqformula "2"))
            (rule "applyEqReverse" (formula "17") (term "0,2,1,0,0,1,0") (ifseqformula "2"))
            (rule "hideAuxiliaryEq" (formula "2"))
            (rule "applyEq" (formula "22") (term "2,1,0,1,0,1,1,0,0") (ifseqformula "3"))
            (rule "applyEq" (formula "16") (term "2,1,0,0,1,0") (ifseqformula "3"))
            (rule "eqSymm" (formula "16") (term "1,0"))
            (rule "applyEq" (formula "2") (term "2,1,0,1,0") (ifseqformula "3"))
            (rule "applyEq" (formula "16") (term "2,1,0,0,1,0") (ifseqformula "3"))
            (rule "eqSymm" (formula "16") (term "1,0"))
            (rule "pullOutSelect" (formula "1") (term "0,0,0") (inst "selectSK=java_lang_Object_created__2"))
            (rule "simplifySelectOfMemset" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfStore" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfStore" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfStore" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfCreate" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "eqSymm" (formula "1") (term "0,0"))
            (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "20"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
            (rule "applyEqReverse" (formula "2") (term "0,0,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "8"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "2") (term "0,2,1,0,0,0,1,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "14") (term "0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "22") (term "0,2,1,0,1,0,1,1,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "3") (term "0,1") (ifseqformula "1"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "true_left" (formula "3"))
            (rule "applyEqReverse" (formula "15") (term "1,1,1,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "14") (term "0,1,1") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "4") (term "0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "15") (term "0,2,1,0,0,1,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "15") (term "0,2,1,0,0,0,1,1,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "2") (term "0,2,1,0,1,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "21") (term "0,2,1,0,0,0,1,0,1,1,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "21") (term "0,2,1,0,0,0,1,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "15") (term "0,2,1,0,0,0,0,1,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "21") (term "0,1,0,1,1,1,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "15") (term "0,2,1,0,1,1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "eqSymm" (formula "14") (term "1,0"))
            (rule "polySimp_homoEq" (formula "13"))
            (rule "polySimp_addComm1" (formula "13") (term "0"))
            (rule "polySimp_sepPosMonomial" (formula "13"))
            (rule "polySimp_mulComm0" (formula "13") (term "1"))
            (rule "polySimp_rightDist" (formula "13") (term "1"))
            (rule "mul_literals" (formula "13") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
            (rule "polySimp_elimOne" (formula "13") (term "1,1"))
            (rule "applyEq" (formula "20") (term "2,1,0,0,0,1,0,0") (ifseqformula "13"))
            (rule "applyEq" (formula "20") (term "1,0,1,1,1,0,0") (ifseqformula "13"))
            (rule "polySimp_addAssoc" (formula "20") (term "0,1,1,1,0,0"))
            (rule "polySimp_addComm0" (formula "20") (term "0,0,1,1,1,0,0"))
            (rule "applyEq" (formula "20") (term "2,1,0,0,0,1,0,1,1,0,0") (ifseqformula "13"))
            (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
            (rule "inEqSimp_homoInEq1" (formula "12"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
            (rule "polySimp_rightDist" (formula "12") (term "1,0"))
            (rule "mul_literals" (formula "12") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "12") (term "0"))
            (rule "polySimp_addComm0" (formula "12") (term "0,0"))
            (rule "applyEq" (formula "1") (term "2,1,0,0,0,1,0") (ifseqformula "13"))
            (rule "applyEq" (formula "3") (term "0") (ifseqformula "13"))
            (rule "applyEq" (formula "14") (term "2,1,0,0,0,0,1,0") (ifseqformula "13"))
            (rule "eqSymm" (formula "14") (term "1,0"))
            (rule "applyEq" (formula "20") (term "2,1,0,1,0,1,1,0,0") (ifseqformula "13"))
            (rule "applyEq" (formula "1") (term "2,1,0,1,0") (ifseqformula "13"))
            (rule "applyEq" (formula "14") (term "2,1,0,0,1,0") (ifseqformula "13"))
            (rule "applyEq" (formula "14") (term "2,1,0,0,0,0,1,0") (ifseqformula "13"))
            (rule "eqSymm" (formula "14") (term "1,0"))
            (rule "applyEq" (formula "14") (term "2,1,0,0,1,0") (ifseqformula "13"))
            (rule "inEqSimp_sepNegMonomial0" (formula "12"))
            (rule "polySimp_mulLiterals" (formula "12") (term "0"))
            (rule "polySimp_elimOne" (formula "12") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "3"))
            (rule "mul_literals" (formula "3") (term "1"))
            (rule "boxToDiamond" (formula "1") (term "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "nnf_imp2or" (formula "20") (term "0,1,0,0,1,1,0,1"))
            (rule "nnf_imp2or" (formula "13") (term "0"))
            (rule "nnf_notAnd" (formula "13") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
            (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
            (rule "mul_literals" (formula "13") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "20") (term "0,0,1,0,0,1,1,0,1"))
            (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0,1,0,0,1,1,0,1"))
            (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0,1,0,0,1,1,0,1"))
            (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0,1,0,0,1,1,0,1"))
            (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,1,0,0,1,1,0,1"))
            (rule "add_literals" (formula "20") (term "0,0,0,1,0,0,1,0,0,1,1,0,1"))
            (rule "add_zero_left" (formula "20") (term "0,0,1,0,0,1,0,0,1,1,0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0,1,0,0,1,1,0,1"))
            (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,1,0,0,1,1,0,1"))
            (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,1,0,0,1,1,0,1"))
            (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0,1,0,0,1,1,0,1"))
            (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0,1,0,0,1,1,0,1"))
            (rule "add_zero_right" (formula "20") (term "0,0,0,0,0,1,0,0,1,1,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,1,0,0,1,1,0,1"))
            (rule "mul_literals" (formula "20") (term "1,0,0,0,1,0,0,1,1,0,1"))
            (rule "applyEq_and_int1" (formula "20") (term "0,0,0,1,1,0,1"))
            (rule "inEqSimp_homoInEq1" (formula "20") (term "1,0,0,0,0,1,1,0,1"))
            (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,0,0,0,0,1,1,0,1"))
            (rule "polySimp_rightDist" (formula "20") (term "1,0,1,0,0,0,0,1,1,0,1"))
            (rule "mul_literals" (formula "20") (term "0,1,0,1,0,0,0,0,1,1,0,1"))
            (rule "polySimp_addAssoc" (formula "20") (term "0,1,0,0,0,0,1,1,0,1"))
            (rule "polySimp_addComm0" (formula "20") (term "0,0,1,0,0,0,0,1,1,0,1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "1,0,0,0,0,1,1,0,1"))
            (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,0,0,0,1,1,0,1"))
            (rule "polySimp_elimOne" (formula "20") (term "0,1,0,0,0,0,1,1,0,1"))
            (rule "commute_or_2" (formula "13") (term "0"))
            (rule "commute_or" (formula "13") (term "0,0"))
            (rule "compound_less_than_comparison_2" (formula "14") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
            (rule "variableDeclarationAssign" (formula "14") (term "1"))
            (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_10"))
            (rule "assignment" (formula "14") (term "1"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "variableDeclarationAssign" (formula "14") (term "1"))
            (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_11"))
            (rule "eval_order_array_access6" (formula "14") (term "1") (inst "#v0=x_arr_arr"))
            (rule "variableDeclarationAssign" (formula "14") (term "1"))
            (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_arr_arr_8"))
            (rule "assignment_read_attribute_this" (formula "14") (term "1"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "pullOutSelect" (formula "14") (term "0,1,0") (inst "selectSK=verif_functionalities_pkisig_Signer_Log_messages_4"))
            (rule "simplifySelectOfAnon" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
            (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "replaceKnownSelect_taclet1010_0" (formula "1") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet1010_3" (formula "1") (term "2,0"))
            (rule "assignment_read_length" (formula "15") (term "1"))
            (branch "Normal Execution (x_arr_arr_8 != null)"
               (builtin "One Step Simplification" (formula "16"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "ifthenelse_negated" (formula "1") (term "0"))
               (rule "pullOutSelect" (formula "1") (term "0,0,0") (inst "selectSK=java_lang_Object_created__4"))
               (rule "simplifySelectOfMemset" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "replaceKnownSelect_taclet1010_5" (formula "1") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1010_9" (formula "1") (term "0"))
               (rule "applyEqReverse" (formula "2") (term "0,0,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "6"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "16") (term "0,0,1,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "15") (term "0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "applyEq" (formula "14") (term "0,1,0") (ifseqformula "12"))
               (rule "less_than_comparison_simple" (formula "14") (term "1"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,1,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,1,0"))
               (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,1,0"))
               (rule "add_literals" (formula "14") (term "0,0,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "14") (term "0,0,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "14") (term "0,0,0,1,0"))
               (rule "methodCallEmpty" (formula "14") (term "1"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "emptyModality" (formula "14") (term "1"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "notRight" (formula "14"))
               (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "1"))
               (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
               (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
               (rule "mul_literals" (formula "12") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
               (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
               (rule "add_literals" (formula "12") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
               (rule "add_literals" (formula "12") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "12") (term "1,0,0"))
               (rule "add_zero_right" (formula "12") (term "0,0"))
               (rule "qeq_literals" (formula "12") (term "0"))
               (builtin "One Step Simplification" (formula "12"))
               (rule "true_left" (formula "12"))
               (rule "tryCatchThrow" (formula "19") (term "1,0,0,1"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "ifElseUnfold" (formula "19") (term "1,0,0,1") (inst "#boolv=x"))
               (rule "variableDeclaration" (formula "19") (term "1,0,0,1") (newnames "x_12"))
               (rule "ifUnfold" (formula "19") (term "1") (inst "#boolv=x"))
               (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_13"))
               (rule "compound_less_than_comparison_2" (formula "19") (term "1") (inst "#v1=x_15") (inst "#v0=x_14"))
               (rule "variableDeclarationAssign" (formula "19") (term "1"))
               (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_14"))
               (rule "assignment" (formula "19") (term "1"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "variableDeclarationAssign" (formula "19") (term "1"))
               (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_15"))
               (rule "eval_order_array_access6" (formula "19") (term "1") (inst "#v0=x_arr_arr"))
               (rule "variableDeclarationAssign" (formula "19") (term "1"))
               (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_arr_arr_9"))
               (rule "assignment_read_attribute_this" (formula "19") (term "1"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "replaceKnownSelect_taclet1010_11" (formula "19") (term "0,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet01010_14" (formula "19") (term "0,1,0"))
               (rule "assignment_read_length" (formula "19") (term "1"))
               (branch "Normal Execution (x_arr_arr_9 != null)"
                  (builtin "One Step Simplification" (formula "20"))
                  (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "18")))
                  (rule "false_right" (formula "19"))
                  (rule "applyEq" (formula "19") (term "0,1,0") (ifseqformula "12"))
                  (rule "less_than_comparison_simple" (formula "19") (term "1"))
                  (builtin "One Step Simplification" (formula "19"))
                  (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,1,0"))
                  (rule "add_literals" (formula "19") (term "0,0,0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "19") (term "0,0,0,1,0"))
                  (rule "replace_known_left" (formula "19") (term "0,0,1,0") (ifseqformula "1"))
                  (builtin "One Step Simplification" (formula "19"))
                  (rule "ifSplit" (formula "19"))
                  (branch "if x_13 true"
                     (builtin "One Step Simplification" (formula "20"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "eval_order_array_access3" (formula "19") (term "1") (inst "#v1=x_arr") (inst "#v2=x") (inst "#v0=x_arr_arr"))
                     (rule "variableDeclarationAssign" (formula "19") (term "1"))
                     (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_arr_arr_10"))
                     (rule "assignment" (formula "19") (term "1"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "variableDeclarationAssign" (formula "19") (term "1"))
                     (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_16"))
                     (rule "assignment" (formula "19") (term "1"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "ifUnfold" (formula "19") (term "1") (inst "#boolv=x_17"))
                     (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_17"))
                     (rule "compound_assignment_5_nonsimple" (formula "19") (term "1"))
                     (rule "ifElseUnfold" (formula "19") (term "1") (inst "#boolv=x_18"))
                     (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_18"))
                     (rule "compound_less_equal_than_comparison_1" (formula "19") (term "1") (inst "#v0=x_19"))
                     (rule "variableDeclarationAssign" (formula "19") (term "1"))
                     (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_19"))
                     (rule "eval_order_array_access6" (formula "19") (term "1") (inst "#v0=x_arr_arr_11"))
                     (rule "variableDeclarationAssign" (formula "19") (term "1"))
                     (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_arr_arr_11"))
                     (rule "remove_parentheses_right" (formula "19") (term "1"))
                     (rule "assignment" (formula "19") (term "1"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "assignment_read_length" (formula "19") (term "1"))
                     (branch "Normal Execution (x_arr_arr_11 != null)"
                        (builtin "One Step Simplification" (formula "20"))
                        (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "15")))
                        (rule "false_right" (formula "19"))
                        (rule "less_equal_than_comparison_simple" (formula "19") (term "1"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0,1,0") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "19") (term "0,0,0,1,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,0,0,1,0"))
                        (rule "add_literals" (formula "19") (term "1,1,0,0,0,0,1,0"))
                        (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,1,0"))
                        (rule "add_literals" (formula "19") (term "0,0,0,0,1,0"))
                        (rule "leq_literals" (formula "19") (term "0,0,0,1,0"))
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "ifElseSplit" (formula "19"))
                        (branch "if x_18 true"
                           (builtin "One Step Simplification" (formula "20"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "if x_18 false"
                           (builtin "One Step Simplification" (formula "20"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "less_than_comparison_simple" (formula "19") (term "1"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,1,0"))
                           (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,1,0"))
                           (rule "add_literals" (formula "19") (term "0,0,0,0,1,0"))
                           (rule "blockEmpty" (formula "19") (term "1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,1,0"))
                           (rule "mul_literals" (formula "19") (term "1,0,0,1,0"))
                           (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0,1,0") (ifseqformula "11"))
                           (rule "qeq_literals" (formula "19") (term "0,0,0,1,0"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "ifSplit" (formula "19"))
                           (branch "if x_17 true"
                              (builtin "One Step Simplification" (formula "20"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "if x_17 false"
                              (builtin "One Step Simplification" (formula "20"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "variableDeclarationAssign" (formula "19") (term "1"))
                              (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_arr_1"))
                              (rule "eval_order_array_access4" (formula "19") (term "1") (inst "#v0=x_arr_arr_11"))
                              (rule "variableDeclarationAssign" (formula "19") (term "1"))
                              (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_arr_arr_12"))
                              (rule "assignment_read_attribute_this" (formula "19") (term "1"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "replaceKnownSelect_taclet1010_11" (formula "19") (term "0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet01010_14" (formula "19") (term "0,1,0"))
                              (rule "assignment_array2" (formula "19") (term "1"))
                              (branch "Normal Execution (x_arr_arr_12 != null)"
                                 (builtin "One Step Simplification" (formula "20"))
                                 (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "18")))
                                 (rule "orRight" (formula "19"))
                                 (rule "inEqSimp_leqRight" (formula "19"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "inEqSimp_ltRight" (formula "20"))
                                 (rule "times_zero_1" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "20") (term "0,1,0") (inst "selectSK=arr_0"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                 (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                 (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,0,0"))
                                 (rule "replace_known_left" (formula "1") (term "1,0,0,0,0") (ifseqformula "13"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0,0"))
                                 (rule "assignment_to_reference_array_component" (formula "21") (term "1"))
                                 (branch "Normal Execution (x_arr_arr_10 != null)"
                                    (builtin "One Step Simplification" (formula "22"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")) (ifInst ""  (formula "14")))
                                    (rule "andLeft" (formula "1"))
                                    (rule "array_store_known_dynamic_array_type" (formula "2") (ifseqformula "6"))
                                    (rule "typeEqDerived2" (formula "2") (term "0,1") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "inEqSimp_ltToLeq" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "blockEmpty" (formula "22") (term "1"))
                                    (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "15"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "replace_known_left" (formula "2") (term "1,0,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "mul_literals" (formula "3") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "qeq_literals" (formula "1") (term "0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__5"))
                                    (rule "simplifySelectOfMemset" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfStore" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                                    (rule "castDel" (formula "1") (term "1,0"))
                                    (rule "eqSymm" (formula "1") (term "0,0"))
                                    (rule "applyEq" (formula "1") (term "2,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_1"))
                                    (rule "simplifySelectOfMemset" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,0"))
                                    (rule "replace_known_left" (formula "1") (term "1,0,0,0") (ifseqformula "13"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_subsumption1" (formula "1") (term "1,0,0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq0" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                                    (rule "qeq_literals" (formula "1") (term "0,1,0,0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_2"))
                                    (rule "simplifySelectOfCreate" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "postincrement" (formula "21") (term "1"))
                                    (rule "compound_int_cast_expression" (formula "21") (term "1") (inst "#v=x"))
                                    (rule "variableDeclarationAssign" (formula "21") (term "1"))
                                    (rule "variableDeclaration" (formula "21") (term "1") (newnames "x_20"))
                                    (rule "remove_parentheses_right" (formula "21") (term "1"))
                                    (rule "assignmentAdditionInt" (formula "21") (term "1"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "translateJavaAddInt" (formula "21") (term "0,1,0"))
                                    (rule "polySimp_addComm0" (formula "21") (term "0,1,0"))
                                    (rule "widening_identity_cast_5" (formula "21") (term "1"))
                                    (rule "assignment" (formula "21") (term "1"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "tryEmpty" (formula "21") (term "1"))
                                    (rule "methodCallEmpty" (formula "21") (term "1"))
                                    (rule "emptyModality" (formula "21") (term "1"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "eqSymm" (formula "21") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "0,0,1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0,0,1"))
                                    (rule "mul_literals" (formula "21") (term "0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "1,1,0,0,0,0"))
                                    (rule "add_literals" (formula "21") (term "0,1,1,0,0,0,0"))
                                    (rule "replace_known_left" (formula "21") (term "1,0,0,0,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "dismissNonSelectedField" (formula "21") (term "0,1,0,1"))
                                    (rule "replaceKnownSelect_taclet1010_11" (formula "21") (term "0,1,0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet01010_14" (formula "21") (term "0,1,0,1"))
                                    (rule "dismissNonSelectedField" (formula "21") (term "0,0,1,1,0,0,0,1,0"))
                                    (rule "dismissNonSelectedField" (formula "21") (term "0,0,1,0,0,0"))
                                    (rule "replaceKnownSelect_taclet1010_11" (formula "21") (term "0,0,1,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet01010_14" (formula "21") (term "0,0,1,0,0,0"))
                                    (rule "replace_known_left" (formula "21") (term "1,0,0,0") (ifseqformula "14"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "dismissNonSelectedField" (formula "21") (term "1,0,1,0,1,0,0"))
                                    (rule "replaceKnownSelect_taclet1010_11" (formula "21") (term "1,0,1,0,1,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet01010_14" (formula "21") (term "1,0,1,0,1,0,0"))
                                    (rule "dismissNonSelectedField" (formula "21") (term "0,1,1,0,1,0,0,0,0,1,0"))
                                    (rule "replaceKnownSelect_taclet1010_0" (formula "21") (term "0,1,1,0,1,0,0,0,0,1,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet1010_3" (formula "21") (term "0,1,1,0,1,0,0,0,0,1,0"))
                                    (rule "precOfInt" (formula "21") (term "1"))
                                    (rule "inEqSimp_ltToLeq" (formula "21") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "0,1,0,0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0,0,1,1"))
                                    (rule "mul_literals" (formula "21") (term "0,0,1,0,0,1,1"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,0,1,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,1,1"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,1,1"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0,1,1"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,1,1"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0,1,1"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,0,0,1,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0,1,1"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0,0,1,1"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0,0,1,1"))
                                    (rule "add_zero_right" (formula "21") (term "0,0,0,1,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "21") (term "0,1"))
                                    (rule "times_zero_2" (formula "21") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "21") (term "0,0,1"))
                                    (rule "applyEq" (formula "21") (term "1,1,0,1,0,0,0,0,1,0") (ifseqformula "14"))
                                    (rule "applyEq" (formula "21") (term "1,0,1,1") (ifseqformula "14"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,1,1"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0,1,1"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,1,1"))
                                    (rule "add_zero_left" (formula "21") (term "0,0,1,1"))
                                    (rule "polySimp_pullOutFactor2" (formula "21") (term "0,1,1"))
                                    (rule "add_literals" (formula "21") (term "1,0,1,1"))
                                    (rule "times_zero_1" (formula "21") (term "0,1,1"))
                                    (rule "leq_literals" (formula "21") (term "1,1"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "applyEq" (formula "21") (term "1,0,1") (ifseqformula "14"))
                                    (rule "polySimp_addAssoc" (formula "21") (term "0,1"))
                                    (rule "polySimp_addComm1" (formula "21") (term "0,0,1"))
                                    (rule "add_literals" (formula "21") (term "0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0,0"))
                                    (rule "mul_literals" (formula "21") (term "1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "21") (term "1,1"))
                                    (rule "mul_literals" (formula "21") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1"))
                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,1"))
                                    (rule "replace_known_left" (formula "21") (term "1") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "inEqSimp_subsumption1" (formula "21") (term "0,0") (ifseqformula "13"))
                                    (rule "leq_literals" (formula "21") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "andRight" (formula "21"))
                                    (branch "Case 1"
                                       (rule "allRight" (formula "21") (inst "sk=j_0"))
                                       (rule "orRight" (formula "21"))
                                       (rule "orRight" (formula "21"))
                                       (rule "inEqSimp_geqRight" (formula "22"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_leqRight" (formula "22"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1"))
                                       (rule "pullOutSelect" (formula "23") (term "1") (inst "selectSK=arr_3"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0"))
                                       (rule "pullOutSelect" (formula "24") (term "0") (inst "selectSK=arr_4"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=arr_5"))
                                       (rule "simplifySelectOfAnon" (formula "2"))
                                       (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "22")))
                                       (rule "dismissNonSelectedField" (formula "2") (term "2,0"))
                                       (rule "elementOfArrayRangeConcrete" (formula "2") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "2") (term "0,0,0,0"))
                                       (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "4"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,0"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_6"))
                                       (rule "simplifySelectOfAnon" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                                       (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                       (rule "replaceKnownSelect_taclet001100001010_16" (formula "1") (term "0,0,1,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet001100001010_21" (formula "1") (term "0,0,1,0,0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,0"))
                                       (rule "replace_known_left" (formula "1") (term "1,0,0,0") (ifseqformula "5"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "6"))
                                       (rule "times_zero_1" (formula "5") (term "0,0"))
                                       (rule "add_zero_left" (formula "5") (term "0"))
                                       (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_7"))
                                       (rule "simplifySelectOfMemset" (formula "3"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "3") (term "2,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0"))
                                       (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "6"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0"))
                                       (rule "pullOutSelect" (formula "4") (term "0,0,1,0,0") (inst "selectSK=java_lang_Object_created__7"))
                                       (rule "simplifySelectOfMemset" (formula "4"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "simplifySelectOfStore" (formula "4"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "simplifySelectOfStore" (formula "4"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "simplifySelectOfStore" (formula "4"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "simplifySelectOfCreate" (formula "4"))
                                       (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "25")))
                                       (rule "castDel" (formula "4") (term "0"))
                                       (rule "applyEqReverse" (formula "5") (term "0,0,1,0,0") (ifseqformula "4"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_8"))
                                       (rule "simplifySelectOfMemset" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                       (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,0"))
                                       (rule "replace_known_left" (formula "1") (term "1,0,0,0") (ifseqformula "7"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                       (rule "pullOutSelect" (formula "4") (term "2,0") (inst "selectSK=arr_9"))
                                       (rule "simplifySelectOfCreate" (formula "4"))
                                       (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "26")))
                                       (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_10"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "ifthenelse_split" (formula "9") (term "0"))
                                       (branch "self.messages = x_arr_arr_3 TRUE"
                                          (rule "referencedObjectIsCreatedRightEQ" (formula "25") (ifseqformula "9") (ifseqformula "26"))
                                          (rule "close" (formula "25") (ifseqformula "16"))
                                       )
                                       (branch "self.messages = x_arr_arr_3 FALSE"
                                          (rule "applyEqReverse" (formula "10") (term "2,0") (ifseqformula "9"))
                                          (rule "hideAuxiliaryEq" (formula "9"))
                                          (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "22"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqReverse" (formula "28") (term "0") (ifseqformula "2"))
                                          (rule "hideAuxiliaryEq" (formula "2"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "21"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "replace_known_right" (formula "6") (term "0,0") (ifseqformula "20"))
                                          (builtin "One Step Simplification" (formula "6"))
                                          (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "6"))
                                          (rule "hideAuxiliaryEq" (formula "6"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch "x_arr_arr_3.length ≥ 1 + j_0 TRUE"
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "j_0 = i_0 TRUE"
                                                (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "applyEqRigid" (formula "24") (term "0,2,0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "24"))
                                                (rule "closeTrue" (formula "24"))
                                             )
                                             (branch "j_0 = i_0 FALSE"
                                                (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "eqSymm" (formula "24"))
                                                (rule "inEqSimp_strengthen0" (formula "3") (ifseqformula "17"))
                                                (rule "inEqSimp_contradEq3" (formula "17") (ifseqformula "3"))
                                                (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                                                (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "17") (term "0,0"))
                                                (rule "qeq_literals" (formula "17") (term "0"))
                                                (builtin "One Step Simplification" (formula "17"))
                                                (rule "false_right" (formula "17"))
                                                (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                                                (rule "times_zero_1" (formula "2") (term "0,0"))
                                                (rule "add_zero_left" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                (rule "mul_literals" (formula "2") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "2"))
                                                (rule "leq_literals" (formula "15") (term "0"))
                                                (builtin "One Step Simplification" (formula "15"))
                                                (rule "true_left" (formula "15"))
                                                (rule "allLeft" (formula "16") (inst "t=j_0"))
                                                (rule "replaceKnownSelect_taclet0001100001010_28" (formula "16") (term "0,0,0"))
                                                (rule "replaceKnownSelect_taclet0001100001010_27" (formula "16") (term "1,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet10001100001010_42" (formula "16") (term "0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet010001100001010_47" (formula "16") (term "1,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet10001100001010_44" (formula "16") (term "0,0,0"))
                                                (rule "eqSymm" (formula "16") (term "0,0"))
                                                (rule "replace_known_right" (formula "16") (term "0,0") (ifseqformula "24"))
                                                (builtin "One Step Simplification" (formula "16"))
                                                (rule "inEqSimp_contradInEq0" (formula "16") (term "1") (ifseqformula "4"))
                                                (rule "inEqSimp_homoInEq1" (formula "16") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "16") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "16") (term "0,0,1"))
                                                (rule "polySimp_addComm0" (formula "16") (term "0,0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,1"))
                                                (rule "add_literals" (formula "16") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "16") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "16") (term "0,0,1"))
                                                (rule "leq_literals" (formula "16") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "16"))
                                                (rule "inEqSimp_contradInEq1" (formula "16") (ifseqformula "3"))
                                                (rule "qeq_literals" (formula "16") (term "0"))
                                                (builtin "One Step Simplification" (formula "16"))
                                                (rule "closeFalse" (formula "16"))
                                             )
                                          )
                                          (branch "x_arr_arr_3.length ≥ 1 + j_0 FALSE"
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "18"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "inEqSimp_geqRight" (formula "17"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1"))
                                             (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "1"))
                                             (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                             (rule "mul_literals" (formula "5") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                             (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                             (rule "polySimp_rightDist" (formula "5") (term "1"))
                                             (rule "mul_literals" (formula "5") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                             (rule "inEqSimp_contradEq7" (formula "2") (term "0,0") (ifseqformula "5"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "2") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "3"))
                                             (rule "andLeft" (formula "4"))
                                             (rule "inEqSimp_homoInEq1" (formula "4"))
                                             (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                             (rule "add_literals" (formula "4") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "4") (term "1,0"))
                                             (rule "add_zero_right" (formula "4") (term "0"))
                                             (rule "leq_literals" (formula "4"))
                                             (rule "closeFalse" (formula "4"))
                                          )
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "allRight" (formula "21") (inst "sk=f_0"))
                                       (rule "allRight" (formula "21") (inst "sk=o_0"))
                                       (rule "orRight" (formula "21"))
                                       (rule "orRight" (formula "21"))
                                       (rule "eqSymm" (formula "21") (term "0,0,0,1"))
                                       (rule "pullOutSelect" (formula "23") (term "0") (inst "selectSK=f_0_0"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "24"))
                                       (rule "eqSymm" (formula "1") (term "0,0,0"))
                                       (rule "eqSymm" (formula "1") (term "1,0,0"))
                                       (rule "pullOutSelect" (formula "23") (term "0,0,1") (inst "selectSK=java_lang_Object_created__6"))
                                       (rule "simplifySelectOfMemset" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfStore" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfCreate" (formula "1"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                       (rule "castDel" (formula "1") (term "1,0"))
                                       (rule "eqSymm" (formula "1") (term "0,0"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_1"))
                                       (rule "simplifySelectOfAnon" (formula "2"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "dismissNonSelectedField" (formula "2") (term "0,0,1,1,0,0"))
                                       (rule "replaceKnownSelect_taclet1001100001010_26" (formula "2") (term "0,0,1,1,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "25"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "elementOfArrayRange" (formula "2") (term "0,0,0") (inst "iv=iv"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0,1,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "2") (term "1,0,0,1,0,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "24"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEq" (formula "26") (term "0") (ifseqformula "2"))
                                       (rule "simplifySelectOfStore" (formula "2"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "1,0,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_2"))
                                       (rule "simplifySelectOfMemset" (formula "2"))
                                       (rule "elementOfArrayRange" (formula "2") (term "0,0,0") (inst "iv=iv"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0,1,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "2") (term "1,0,0,1,0,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "25"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "simplifySelectOfStore" (formula "2"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0"))
                                       (rule "eqSymm" (formula "2") (term "1,0,0"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_3"))
                                       (rule "simplifySelectOfStore" (formula "2"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0"))
                                       (rule "eqSymm" (formula "2") (term "1,0,0"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_4"))
                                       (rule "simplifySelectOfStore" (formula "2"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "1,0,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0"))
                                       (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=f_0_5"))
                                       (rule "simplifySelectOfCreate" (formula "2"))
                                       (rule "castDel" (formula "2") (term "1,0"))
                                       (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                                       (rule "replace_known_right" (formula "2") (term "0,1,0,0,0") (ifseqformula "24"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "commute_and" (formula "29"))
                                       (rule "commute_and" (formula "7") (term "0,0"))
                                       (rule "commute_and" (formula "6") (term "0,0"))
                                       (rule "commute_and" (formula "5") (term "0,0"))
                                       (rule "commute_and" (formula "4") (term "0,0"))
                                       (rule "commute_and" (formula "3") (term "0,0"))
                                       (rule "commute_and" (formula "2") (term "0,0"))
                                       (rule "ifthenelse_split" (formula "8") (term "0"))
                                       (branch "self.messages = x_arr_arr_3 TRUE"
                                          (rule "referencedObjectIsCreatedRightEQ" (formula "24") (ifseqformula "8") (ifseqformula "25"))
                                          (rule "close" (formula "24") (ifseqformula "15"))
                                       )
                                       (branch "self.messages = x_arr_arr_3 FALSE"
                                          (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                          (rule "hideAuxiliaryEq" (formula "8"))
                                          (rule "replace_known_right" (formula "8") (term "0,0") (ifseqformula "22"))
                                          (builtin "One Step Simplification" (formula "8"))
                                          (rule "applyEqReverse" (formula "7") (term "1,0") (ifseqformula "8"))
                                          (rule "hideAuxiliaryEq" (formula "8"))
                                          (rule "ifthenelse_split" (formula "1") (term "0"))
                                          (branch "o_0 = x_arr_arr_3 TRUE"
                                             (rule "applyEqReverse" (formula "29") (term "0,0,0") (ifseqformula "2"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "false_right" (formula "29"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_left" (formula "7") (term "1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "7"))
                                             (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "2"))
                                             (rule "replace_known_left" (formula "5") (term "1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "3"))
                                             (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_left" (formula "6") (term "1,0,0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "6"))
                                             (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                             (rule "nnf_ex2all" (formula "27"))
                                             (rule "nnf_notAnd" (formula "1") (term "0"))
                                             (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                                             (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                             (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch "f_0 = java.lang.Object::<created> TRUE"
                                                (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                (rule "hideAuxiliaryEq" (formula "4"))
                                                (rule "applyEqRigid" (formula "1") (term "1,0,0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "applyEq" (formula "7") (term "0,0,0") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "27")))
                                                (rule "closeFalse" (formula "7"))
                                             )
                                             (branch "f_0 = java.lang.Object::<created> FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "allLeft" (formula "1") (inst "t=i_0"))
                                                (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                (rule "inEqSimp_commuteGeq" (formula "1") (term "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "9"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "1") (term "0,0,1"))
                                                (rule "leq_literals" (formula "1") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "19"))
                                                (rule "qeq_literals" (formula "1") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "21"))
                                                (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "29")))
                                                (rule "closeFalse" (formula "7"))
                                             )
                                          )
                                          (branch "o_0 = x_arr_arr_3 FALSE"
                                             (rule "applyEqReverse" (formula "29") (term "0,0,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_right" (formula "6") (term "1,0,0") (ifseqformula "20"))
                                             (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "29")))
                                             (rule "closeFalse" (formula "6"))
                                          )
                                       )
                                    )
                                 )
                                 (branch "Null Reference (x_arr_arr_10 = null)"
                                    (builtin "One Step Simplification" (formula "22"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "Index Out of Bounds (x_arr_arr_10 != null, but x_16 Out of Bounds!)"
                                    (builtin "One Step Simplification" (formula "22"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                                    (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                    (rule "add_literals" (formula "1") (term "0,0,1"))
                                    (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "15"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0"))
                                    (rule "blockThrow" (formula "22") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "mul_literals" (formula "3") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "leq_literals" (formula "1") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_subsumption1" (formula "2") (term "1,0,0,0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq0" (formula "2") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,1,0,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0,0,0,1,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1,0,0,0"))
                                    (rule "add_literals" (formula "2") (term "1,1,0,0,1,0,0,0"))
                                    (rule "times_zero_1" (formula "2") (term "1,0,0,1,0,0,0"))
                                    (rule "add_zero_right" (formula "2") (term "0,0,1,0,0,0"))
                                    (rule "qeq_literals" (formula "2") (term "0,1,0,0,0"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "inEqSimp_contradInEq0" (formula "13") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "13") (term "0"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "closeFalse" (formula "13"))
                                 )
                                 (branch "Array Store Exception (incompatible dynamic element type of x_arr_arr_10 and x_arr_1)"
                                    (builtin "One Step Simplification" (formula "22"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")) (ifInst ""  (formula "14")))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "array_store_known_dynamic_array_type" (formula "17") (ifseqformula "5"))
                                    (rule "typeEqDerived2" (formula "17") (term "0,1") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "closeTrue" (formula "17"))
                                 )
                              )
                              (branch "Null Reference (x_arr_arr_12 = null)"
                                 (builtin "One Step Simplification" (formula "20"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "Index Out of Bounds (x_arr_arr_12 != null, but i Out of Bounds!)"
                                 (builtin "One Step Simplification" (formula "20"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                 (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                 (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "13"))
                                 (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                                 (rule "blockThrow" (formula "20") (term "1"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "12"))
                                 (rule "qeq_literals" (formula "1") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0"))
                                 (rule "add_zero_right" (formula "1") (term "0"))
                                 (rule "leq_literals" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                        )
                     )
                     (branch "Null Reference (x_arr_arr_11 = null)"
                        (builtin "One Step Simplification" (formula "20"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "if x_13 false"
                     (builtin "One Step Simplification" (formula "20"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "Null Reference (x_arr_arr_9 = null)"
                  (builtin "One Step Simplification" (formula "20"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "Null Reference (x_arr_arr_8 = null)"
               (builtin "One Step Simplification" (formula "16"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "applyEq" (formula "2") (term "1") (ifseqformula "1"))
               (rule "ifEqualsNull" (formula "2"))
               (rule "replace_known_right" (formula "2") (term "1,1") (ifseqformula "21"))
               (builtin "One Step Simplification" (formula "2"))
               (rule "andLeft" (formula "2"))
               (rule "elementOfArrayRange" (formula "2") (term "0") (inst "iv=iv"))
               (builtin "One Step Simplification" (formula "2"))
               (rule "notLeft" (formula "2"))
               (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=java_lang_Object_created__3"))
               (rule "simplifySelectOfMemset" (formula "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "replaceKnownSelect_taclet1010_5" (formula "1") (term "0"))
               (rule "replaceKnownAuxiliaryConstant_taclet1010_9" (formula "1") (term "0"))
               (rule "applyEqReverse" (formula "17") (term "0") (ifseqformula "1"))
               (rule "close" (formula "17") (ifseqformula "8"))
            )
         )
         (branch "Use Case"
            (builtin "One Step Simplification" (formula "17"))
            (builtin "One Step Simplification" (formula "11"))
            (rule "translateJavaAddInt" (formula "11") (term "1,1,0"))
            (rule "andLeft" (formula "11"))
            (rule "andLeft" (formula "11"))
            (rule "andLeft" (formula "11"))
            (rule "eqSymm" (formula "14") (term "1,0"))
            (rule "polySimp_homoEq" (formula "13"))
            (rule "polySimp_addComm0" (formula "13") (term "0,0"))
            (rule "polySimp_addComm1" (formula "13") (term "0"))
            (rule "dismissNonSelectedField" (formula "20") (term "0,2,1,0,1,1,0"))
            (rule "dismissNonSelectedField" (formula "12") (term "0,2,1,0,0,1"))
            (rule "dismissNonSelectedField" (formula "14") (term "0,2,1,0,0,1,0"))
            (rule "eqSymm" (formula "14") (term "1,0"))
            (rule "dismissNonSelectedField" (formula "13") (term "0,2,1,0,0,1,0"))
            (rule "dismissNonSelectedField" (formula "14") (term "0,2,1,0,0,1,0"))
            (rule "eqSymm" (formula "14") (term "1,0"))
            (rule "dismissNonSelectedField" (formula "14") (term "0,2,1,0,1,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "11"))
            (rule "inEqSimp_commuteLeq" (formula "12"))
            (rule "pullOutSelect" (formula "20") (term "0,2,1,0,1,1,0") (inst "selectSK=verif_functionalities_pkisig_Signer_Log_messages_0"))
            (rule "applyEq" (formula "15") (term "0,2,1,0,0,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "15") (term "0,2,1,0,1,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "13") (term "0,2,1,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "14") (term "0,2,1,0,0,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "15") (term "0,2,1,0,1,0,1,0") (ifseqformula "1"))
            (rule "simplifySelectOfMemset" (formula "1"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
            (rule "variableDeclarationAssign" (formula "21") (term "1"))
            (rule "variableDeclaration" (formula "21") (term "1") (newnames "b_1"))
            (rule "blockEmpty" (formula "21") (term "1,0,1"))
            (rule "eval_order_array_access2" (formula "21") (term "1,0,1") (inst "#v0=x") (inst "#ar1=x_arr_arr"))
            (rule "variableDeclarationAssign" (formula "21") (term "1,0,1"))
            (rule "variableDeclaration" (formula "21") (term "1,0,1") (newnames "x_arr_arr_4"))
            (rule "assignment" (formula "21") (term "1,0,1"))
            (rule "variableDeclarationAssign" (formula "21") (term "1,1,0,1"))
            (rule "variableDeclaration" (formula "21") (term "1,1,0,1") (newnames "x_2"))
            (rule "polySimp_sepPosMonomial" (formula "14"))
            (rule "polySimp_mulComm0" (formula "14") (term "1"))
            (rule "polySimp_rightDist" (formula "14") (term "1"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
            (rule "mul_literals" (formula "14") (term "0,1"))
            (rule "polySimp_elimOne" (formula "14") (term "1,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
            (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
            (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "simplifySelectOfCreate" (formula "1"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
            (rule "applyEqReverse" (formula "14") (term "0,2,1,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "13") (term "0,2,1,0,0,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "15") (term "0,2,1,0,1,0,1,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "15") (term "0,2,1,0,1,1,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "21") (term "0,2,1,0,1,1,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "15") (term "0,2,1,0,0,1,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "applyEq" (formula "20") (term "2,1,0,1,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "14") (term "2,1,0,1,0,1,0") (ifseqformula "1"))
            (rule "applyEq" (formula "13") (term "2,1,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "14") (term "2,1,0,0,1,0") (ifseqformula "1"))
            (rule "eqSymm" (formula "14") (term "1,0"))
            (rule "applyEq" (formula "12") (term "2,1,0,0,0") (ifseqformula "1"))
            (rule "applyEq" (formula "14") (term "2,1,0,0,1,0") (ifseqformula "1"))
            (rule "eqSymm" (formula "14") (term "1,0"))
            (rule "pullOutSelect" (formula "13") (term "0,0") (inst "selectSK=verif_functionalities_pkisig_Signer_Log_messages_1"))
            (rule "applyEq" (formula "15") (term "1,0,1,0") (ifseqformula "13"))
            (rule "applyEq" (formula "12") (term "0,0") (ifseqformula "13"))
            (rule "simplifySelectOfAnon" (formula "13"))
            (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "18")))
            (rule "eqSymm" (formula "15") (term "1,0"))
            (rule "polySimp_homoEq" (formula "14"))
            (rule "polySimp_addComm1" (formula "14") (term "0"))
            (rule "dismissNonSelectedField" (formula "13") (term "2,0"))
            (rule "replaceKnownSelect_taclet2010_0" (formula "13") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2010_2" (formula "13") (term "2,0"))
            (rule "dismissNonSelectedField" (formula "13") (term "0,0,1,0,0"))
            (rule "polySimp_sepPosMonomial" (formula "14"))
            (rule "polySimp_mulComm0" (formula "14") (term "1"))
            (rule "polySimp_rightDist" (formula "14") (term "1"))
            (rule "mul_literals" (formula "14") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
            (rule "polySimp_elimOne" (formula "14") (term "1,1"))
            (rule "applyEq" (formula "13") (term "1,2,2,0,0,0") (ifseqformula "14"))
            (rule "polySimp_addAssoc" (formula "13") (term "2,2,0,0,0"))
            (rule "add_literals" (formula "13") (term "0,2,2,0,0,0"))
            (rule "add_zero_left" (formula "13") (term "2,2,0,0,0"))
            (rule "applyEq" (formula "21") (term "1,2,1,0,0,0,1,1,0") (ifseqformula "14"))
            (rule "polySimp_addAssoc" (formula "21") (term "2,1,0,0,0,1,1,0"))
            (rule "add_literals" (formula "21") (term "0,2,1,0,0,0,1,1,0"))
            (rule "add_zero_left" (formula "21") (term "2,1,0,0,0,1,1,0"))
            (rule "applyEq" (formula "3") (term "0") (ifseqformula "14"))
            (rule "inEqSimp_homoInEq1" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
            (rule "polySimp_rightDist" (formula "3") (term "1,0"))
            (rule "mul_literals" (formula "3") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "3") (term "0"))
            (rule "add_literals" (formula "3") (term "0,0"))
            (rule "add_zero_left" (formula "3") (term "0"))
            (rule "applyEq" (formula "21") (term "1,2,1,0,1,1,0") (ifseqformula "14"))
            (rule "polySimp_addAssoc" (formula "21") (term "2,1,0,1,1,0"))
            (rule "add_literals" (formula "21") (term "0,2,1,0,1,1,0"))
            (rule "add_zero_left" (formula "21") (term "2,1,0,1,1,0"))
            (rule "applyEq" (formula "15") (term "1,2,1,0,0,1,0") (ifseqformula "14"))
            (rule "eqSymm" (formula "15") (term "1,0"))
            (rule "polySimp_addAssoc" (formula "15") (term "2,1,0,1,1,0"))
            (rule "add_literals" (formula "15") (term "0,2,1,0,1,1,0"))
            (rule "add_zero_left" (formula "15") (term "2,1,0,1,1,0"))
            (rule "applyEq" (formula "13") (term "1,2,1,0,0,0,1,0,0") (ifseqformula "14"))
            (rule "polySimp_addAssoc" (formula "13") (term "2,1,0,0,0,1,0,0"))
            (rule "add_literals" (formula "13") (term "0,2,1,0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "13") (term "2,1,0,0,0,1,0,0"))
            (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "14"))
            (rule "polySimp_addAssoc" (formula "1") (term "1"))
            (rule "add_literals" (formula "1") (term "0,1"))
            (rule "add_zero_left" (formula "1") (term "1"))
            (rule "applyEq" (formula "15") (term "1,2,1,0,0,1,0") (ifseqformula "14"))
            (rule "polySimp_addAssoc" (formula "15") (term "2,1,0,0,1,0"))
            (rule "add_literals" (formula "15") (term "0,2,1,0,0,1,0"))
            (rule "add_zero_left" (formula "15") (term "2,1,0,0,1,0"))
            (rule "eqSymm" (formula "15") (term "1,0"))
            (rule "applyEq" (formula "15") (term "1,2,1,0,0,0,0,1,0") (ifseqformula "14"))
            (rule "eqSymm" (formula "15") (term "1,0"))
            (rule "polySimp_addAssoc" (formula "15") (term "2,1,0,0,0,1,1,0"))
            (rule "add_literals" (formula "15") (term "0,2,1,0,0,0,1,1,0"))
            (rule "add_zero_left" (formula "15") (term "2,1,0,0,0,1,1,0"))
            (rule "applyEq" (formula "15") (term "1,2,1,0,0,0,0,1,0") (ifseqformula "14"))
            (rule "polySimp_addAssoc" (formula "15") (term "2,1,0,0,0,0,1,0"))
            (rule "add_literals" (formula "15") (term "0,2,1,0,0,0,0,1,0"))
            (rule "add_zero_left" (formula "15") (term "2,1,0,0,0,0,1,0"))
            (rule "eqSymm" (formula "15") (term "1,0"))
            (rule "inEqSimp_invertInEq0" (formula "3"))
            (rule "times_zero_2" (formula "3") (term "1"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
            (rule "polySimp_elimOne" (formula "3") (term "0"))
            (rule "elementOfArrayRange" (formula "13") (term "0,0,0") (inst "iv=iv"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "ifthenelse_negated" (formula "13") (term "0"))
            (rule "pullOutSelect" (formula "13") (term "0,0,0") (inst "selectSK=java_lang_Object_created__0"))
            (rule "simplifySelectOfMemset" (formula "13"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "simplifySelectOfStore" (formula "13"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "simplifySelectOfStore" (formula "13"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "simplifySelectOfStore" (formula "13"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "simplifySelectOfCreate" (formula "13"))
            (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "18")))
            (rule "castDel" (formula "13") (term "1,0"))
            (rule "eqSymm" (formula "13") (term "0,0"))
            (rule "sortsDisjointModuloNull" (formula "13") (term "0,0"))
            (rule "replace_known_right" (formula "13") (term "1,0,0") (ifseqformula "18"))
            (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "19")))
            (rule "applyEqReverse" (formula "14") (term "0,0,0") (ifseqformula "13"))
            (rule "hideAuxiliaryEq" (formula "13"))
            (rule "replace_known_left" (formula "13") (term "0,0") (ifseqformula "6"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "applyEqReverse" (formula "3") (term "0,0") (ifseqformula "13"))
            (rule "applyEqReverse" (formula "14") (term "0,1,1") (ifseqformula "13"))
            (rule "applyEqReverse" (formula "1") (term "0,1") (ifseqformula "13"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "applyEqReverse" (formula "20") (term "0,2,1,0,0,0,1,1,0") (ifseqformula "12"))
            (rule "applyEqReverse" (formula "14") (term "0,2,1,0,0,0,1,1,0") (ifseqformula "12"))
            (rule "applyEqReverse" (formula "14") (term "0,2,1,0,1,1,0") (ifseqformula "12"))
            (rule "applyEqReverse" (formula "14") (term "0,2,1,0,0,1,0") (ifseqformula "12"))
            (rule "applyEqReverse" (formula "20") (term "0,2,1,0,1,1,0") (ifseqformula "12"))
            (rule "applyEqReverse" (formula "11") (term "0,0") (ifseqformula "12"))
            (rule "applyEqReverse" (formula "14") (term "1,1,1,0") (ifseqformula "12"))
            (rule "applyEqReverse" (formula "14") (term "0,2,1,0,0,0,0,1,0") (ifseqformula "12"))
            (rule "hideAuxiliaryEq" (formula "12"))
            (rule "eqSymm" (formula "13") (term "1,0"))
            (rule "polySimp_homoEq" (formula "12"))
            (rule "polySimp_addComm1" (formula "12") (term "0"))
            (rule "polySimp_sepPosMonomial" (formula "12"))
            (rule "polySimp_mulComm0" (formula "12") (term "1"))
            (rule "polySimp_rightDist" (formula "12") (term "1"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
            (rule "mul_literals" (formula "12") (term "0,1"))
            (rule "polySimp_elimOne" (formula "12") (term "1,1"))
            (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
            (rule "inEqSimp_homoInEq1" (formula "11"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
            (rule "polySimp_rightDist" (formula "11") (term "1,0"))
            (rule "mul_literals" (formula "11") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0"))
            (rule "polySimp_addComm0" (formula "11") (term "0,0"))
            (rule "applyEq" (formula "2") (term "0") (ifseqformula "12"))
            (rule "applyEq" (formula "19") (term "2,1,0,0,0,1,1,0") (ifseqformula "12"))
            (rule "applyEq" (formula "13") (term "2,1,0,0,1,0") (ifseqformula "12"))
            (rule "eqSymm" (formula "13") (term "1,0"))
            (rule "applyEq" (formula "19") (term "2,1,0,1,1,0") (ifseqformula "12"))
            (rule "applyEq" (formula "13") (term "2,1,0,0,0,0,1,0") (ifseqformula "12"))
            (rule "eqSymm" (formula "13") (term "1,0"))
            (rule "applyEq" (formula "13") (term "2,1,0,0,0,0,1,0") (ifseqformula "12"))
            (rule "eqSymm" (formula "13") (term "1,0"))
            (rule "applyEq" (formula "13") (term "2,1,0,0,1,0") (ifseqformula "12"))
            (rule "eqSymm" (formula "13") (term "1,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "11"))
            (rule "polySimp_mulLiterals" (formula "11") (term "0"))
            (rule "polySimp_elimOne" (formula "11") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
            (rule "mul_literals" (formula "2") (term "1"))
            (rule "nnf_imp2or" (formula "13") (term "0"))
            (rule "nnf_notAnd" (formula "13") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
            (rule "times_zero_1" (formula "13") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
            (rule "mul_literals" (formula "13") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
            (rule "compound_less_than_comparison_2" (formula "19") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
            (rule "variableDeclarationAssign" (formula "19") (term "1"))
            (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_3"))
            (rule "assignment" (formula "19") (term "1"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "variableDeclarationAssign" (formula "19") (term "1"))
            (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_4"))
            (rule "eval_order_array_access6" (formula "19") (term "1") (inst "#v0=x_arr_arr"))
            (rule "variableDeclarationAssign" (formula "19") (term "1"))
            (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_arr_arr_5"))
            (rule "assignment_read_attribute_this" (formula "19") (term "1"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "replaceKnownSelect_taclet2010_3" (formula "19") (term "0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet2010_10" (formula "19") (term "0,1,0"))
            (rule "assignment_read_length" (formula "19") (term "1"))
            (branch "Normal Execution (x_arr_arr_5 != null)"
               (builtin "One Step Simplification" (formula "20"))
               (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "18")))
               (rule "false_right" (formula "19"))
               (rule "applyEq" (formula "19") (term "0,1,0") (ifseqformula "12"))
               (rule "commute_or_2" (formula "13") (term "0"))
               (rule "commute_or" (formula "13") (term "0,0"))
               (rule "less_than_comparison_simple" (formula "19") (term "1"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,1,0"))
               (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,1,0"))
               (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,1,0"))
               (rule "add_literals" (formula "19") (term "0,0,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "19") (term "0,0,0,1,0"))
               (rule "methodCallEmpty" (formula "19") (term "1"))
               (rule "emptyModality" (formula "19") (term "1"))
               (builtin "One Step Simplification" (formula "19"))
               (rule "impRight" (formula "19"))
               (rule "notLeft" (formula "1"))
               (rule "inEqSimp_geqRight" (formula "14"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1"))
               (rule "polySimp_rightDist" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
               (rule "inEqSimp_antiSymm" (formula "12") (ifseqformula "1"))
               (rule "applyEq" (formula "15") (term "1,2,1,0,0,0,0,0,0,0") (ifseqformula "12"))
               (rule "eqSymm" (formula "15") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "15") (term "2,1,0,0,0,1,0,0,0"))
               (rule "add_literals" (formula "15") (term "0,2,1,0,0,0,1,0,0,0"))
               (rule "add_zero_left" (formula "15") (term "2,1,0,0,0,1,0,0,0"))
               (rule "applyEq" (formula "21") (term "1,2,1,0,1,0,0") (ifseqformula "12"))
               (rule "polySimp_addAssoc" (formula "21") (term "2,1,0,1,0,0"))
               (rule "add_literals" (formula "21") (term "0,2,1,0,1,0,0"))
               (rule "add_zero_left" (formula "21") (term "2,1,0,1,0,0"))
               (rule "applyEq" (formula "21") (term "1,2,1,0,0,0,1,0,0") (ifseqformula "12"))
               (rule "polySimp_addAssoc" (formula "21") (term "2,1,0,0,0,1,0,0"))
               (rule "add_literals" (formula "21") (term "0,2,1,0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "21") (term "2,1,0,0,0,1,0,0"))
               (rule "applyEq" (formula "1") (term "0") (ifseqformula "12"))
               (rule "inEqSimp_homoInEq0" (formula "1"))
               (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "1,0"))
               (rule "times_zero_1" (formula "1") (term "0"))
               (rule "qeq_literals" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "applyEq" (formula "12") (term "0") (ifseqformula "11"))
               (rule "inEqSimp_homoInEq1" (formula "12"))
               (rule "polySimp_pullOutFactor1" (formula "12") (term "0"))
               (rule "add_literals" (formula "12") (term "1,0"))
               (rule "times_zero_1" (formula "12") (term "0"))
               (rule "leq_literals" (formula "12"))
               (rule "true_left" (formula "12"))
               (rule "applyEq" (formula "2") (term "0") (ifseqformula "11"))
               (rule "inEqSimp_homoInEq1" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
               (rule "polySimp_rightDist" (formula "2") (term "1,0"))
               (rule "mul_literals" (formula "2") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0"))
               (rule "add_literals" (formula "2") (term "0,0"))
               (rule "add_zero_left" (formula "2") (term "0"))
               (rule "applyEq" (formula "13") (term "1,2,1,0,0,0,0,0,0,0") (ifseqformula "11"))
               (rule "polySimp_addAssoc" (formula "13") (term "2,1,0,0,0,0,0,0,0"))
               (rule "add_literals" (formula "13") (term "0,2,1,0,0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "13") (term "2,1,0,0,0,0,0,0,0"))
               (rule "eqSymm" (formula "13") (term "0,0,0"))
               (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "11"))
               (rule "polySimp_addAssoc" (formula "12") (term "1"))
               (rule "add_literals" (formula "12") (term "0,1"))
               (rule "add_zero_left" (formula "12") (term "1"))
               (rule "applyEq" (formula "13") (term "1,2,1,0,0,0,0,0") (ifseqformula "11"))
               (rule "eqSymm" (formula "13") (term "0,0,0"))
               (rule "polySimp_addAssoc" (formula "13") (term "2,1,0,1,0,0,0"))
               (rule "add_literals" (formula "13") (term "0,2,1,0,1,0,0,0"))
               (rule "add_zero_left" (formula "13") (term "2,1,0,1,0,0,0"))
               (rule "applyEq" (formula "13") (term "1,2,1,0,0,0,0,0") (ifseqformula "11"))
               (rule "polySimp_addAssoc" (formula "13") (term "2,1,0,0,0,0,0"))
               (rule "add_literals" (formula "13") (term "0,2,1,0,0,0,0,0"))
               (rule "add_zero_left" (formula "13") (term "2,1,0,0,0,0,0"))
               (rule "eqSymm" (formula "13") (term "0,0,0"))
               (rule "inEqSimp_invertInEq0" (formula "2"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
               (rule "times_zero_2" (formula "2") (term "1"))
               (rule "polySimp_elimOne" (formula "2") (term "0"))
               (rule "compound_subtraction_1" (formula "18") (term "1") (inst "#v=x_3"))
               (rule "variableDeclarationAssign" (formula "18") (term "1"))
               (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_5"))
               (rule "assignment_read_length" (formula "18") (term "1"))
               (branch "Normal Execution (res != null)"
                  (builtin "One Step Simplification" (formula "19"))
                  (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "14")))
                  (rule "false_right" (formula "18"))
                  (rule "applyEq" (formula "18") (term "0,1,0") (ifseqformula "10"))
                  (rule "assignmentSubtractionInt" (formula "18") (term "1"))
                  (builtin "One Step Simplification" (formula "18"))
                  (rule "translateJavaSubInt" (formula "18") (term "0,1,0"))
                  (rule "polySimp_elimSub" (formula "18") (term "0,1,0"))
                  (rule "mul_literals" (formula "18") (term "1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "18") (term "0,1,0"))
                  (rule "add_literals" (formula "18") (term "0,0,1,0"))
                  (rule "add_zero_left" (formula "18") (term "0,1,0"))
                  (rule "eval_order_array_access3" (formula "18") (term "1") (inst "#v1=x_arr") (inst "#v2=x_3") (inst "#v0=x_arr_arr_5"))
                  (rule "variableDeclarationAssign" (formula "18") (term "1"))
                  (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_arr_arr_6"))
                  (rule "assignment" (formula "18") (term "1"))
                  (builtin "One Step Simplification" (formula "18"))
                  (rule "variableDeclarationAssign" (formula "18") (term "1"))
                  (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_6"))
                  (rule "assignment" (formula "18") (term "1"))
                  (builtin "One Step Simplification" (formula "18"))
                  (rule "ifUnfold" (formula "18") (term "1") (inst "#boolv=x_7"))
                  (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_7"))
                  (rule "compound_assignment_5_nonsimple" (formula "18") (term "1"))
                  (rule "ifElseUnfold" (formula "18") (term "1") (inst "#boolv=x_8"))
                  (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_8"))
                  (rule "compound_less_equal_than_comparison_1" (formula "18") (term "1") (inst "#v0=x_9"))
                  (rule "variableDeclarationAssign" (formula "18") (term "1"))
                  (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_9"))
                  (rule "eval_order_array_access6" (formula "18") (term "1") (inst "#v0=x_arr_arr_7"))
                  (rule "variableDeclarationAssign" (formula "18") (term "1"))
                  (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_arr_arr_7"))
                  (rule "remove_parentheses_right" (formula "18") (term "1"))
                  (rule "assignment" (formula "18") (term "1"))
                  (builtin "One Step Simplification" (formula "18"))
                  (rule "assignment_read_length" (formula "18") (term "1"))
                  (branch "Normal Execution (x_arr_arr_7 != null)"
                     (builtin "One Step Simplification" (formula "19"))
                     (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "14")))
                     (rule "false_right" (formula "18"))
                     (rule "applyEq" (formula "18") (term "0,1,0") (ifseqformula "10"))
                     (rule "less_equal_than_comparison_simple" (formula "18") (term "1"))
                     (builtin "One Step Simplification" (formula "18"))
                     (rule "inEqSimp_homoInEq0" (formula "18") (term "0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "18") (term "0,1,0,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,1,0"))
                     (rule "polySimp_addComm0" (formula "18") (term "0,0,0,0,1,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0,1,0"))
                     (rule "add_literals" (formula "18") (term "1,1,0,0,0,1,0"))
                     (rule "times_zero_1" (formula "18") (term "1,0,0,0,1,0"))
                     (rule "add_literals" (formula "18") (term "0,0,0,1,0"))
                     (rule "qeq_literals" (formula "18") (term "0,0,1,0"))
                     (builtin "One Step Simplification" (formula "18"))
                     (rule "ifElseSplit" (formula "18"))
                     (branch "if x_8 true"
                        (builtin "One Step Simplification" (formula "19"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "if x_8 false"
                        (builtin "One Step Simplification" (formula "19"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "less_than_comparison_simple" (formula "18") (term "1"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,1,0"))
                        (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,1,0"))
                        (rule "add_literals" (formula "18") (term "0,0,0,0,1,0"))
                        (rule "blockEmpty" (formula "18") (term "1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,1,0"))
                        (rule "mul_literals" (formula "18") (term "1,0,0,1,0"))
                        (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0,1,0") (ifseqformula "9"))
                        (rule "qeq_literals" (formula "18") (term "0,0,0,1,0"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "ifSplit" (formula "18"))
                        (branch "if x_7 true"
                           (builtin "One Step Simplification" (formula "19"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "if x_7 false"
                           (builtin "One Step Simplification" (formula "19"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "variableDeclarationAssign" (formula "18") (term "1"))
                           (rule "variableDeclaration" (formula "18") (term "1") (newnames "x_arr"))
                           (builtin "Use Operation Contract" (formula "18") (newnames "heapBefore_copyOf,result,exc_0") (contract "verif.utils.MessageTools[verif.utils.MessageTools::copyOf([B)].JML normal_behavior operation contract.0#verif.utils.MessageTools[verif.utils.MessageTools::copyOf([B)].JML normal_behavior operation contract.1"))
                           (branch "Post (copyOf)"
                              (builtin "One Step Simplification" (formula "19"))
                              (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "17")) (ifInst ""  (formula "17")))
                              (rule "andLeft" (formula "13"))
                              (rule "andLeft" (formula "13"))
                              (rule "andLeft" (formula "15"))
                              (rule "andLeft" (formula "15"))
                              (rule "andLeft" (formula "15"))
                              (rule "notLeft" (formula "15"))
                              (rule "notLeft" (formula "15"))
                              (rule "orRight" (formula "17"))
                              (rule "replace_known_right" (formula "14") (term "1,1") (ifseqformula "18"))
                              (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "16")) (ifInst ""  (formula "17")))
                              (rule "closeFalse" (formula "14"))
                           )
                           (branch "Exceptional Post (copyOf)"
                              (builtin "One Step Simplification" (formula "19"))
                              (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "17")) (ifInst ""  (formula "17")))
                              (rule "andLeft" (formula "13"))
                              (rule "andLeft" (formula "13"))
                              (rule "andLeft" (formula "15"))
                              (rule "notLeft" (formula "13"))
                              (rule "close" (formula "16") (ifseqformula "15"))
                           )
                           (branch "Pre (copyOf)"
                              (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "16")))
                              (rule "wellFormedAnon" (formula "18") (term "0"))
                              (rule "wellFormedStorePrimitive" (formula "18") (term "0,0"))
                              (rule "replace_known_left" (formula "18") (term "1,0") (ifseqformula "8"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "dismissNonSelectedField" (formula "18") (term "0,0,1"))
                              (rule "wellFormedMemsetArrayObject" (formula "18") (term "0"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "wellFormedStorePrimitive" (formula "18") (term "0,0"))
                              (rule "wellFormedStorePrimitive" (formula "18") (term "0,0"))
                              (rule "wellFormedStorePrimitive" (formula "18") (term "0,0"))
                              (rule "wellFormedCreate" (formula "18") (term "0,0"))
                              (rule "replace_known_left" (formula "18") (term "0,0") (ifseqformula "3"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "orRight" (formula "18"))
                              (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=java_lang_Object_created__1"))
                              (rule "simplifySelectOfMemset" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "simplifySelectOfCreate" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "0,0"))
                              (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "17"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                              (rule "applyEqReverse" (formula "19") (term "0") (ifseqformula "1"))
                              (rule "close" (formula "19") (ifseqformula "7"))
                           )
                        )
                     )
                  )
                  (branch "Null Reference (x_arr_arr_7 = null)"
                     (builtin "One Step Simplification" (formula "19"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "Null Reference (res = null)"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "Null Reference (x_arr_arr_5 = null)"
               (builtin "One Step Simplification" (formula "20"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
      (branch "Null Reference (newObject = null)"
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
         (rule "closeFalse" (formula "1"))
      )
   )
)
(branch "Null Reference (x_arr_arr_1 = null)"
   (builtin "One Step Simplification" (formula "10"))
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "9")))
   (rule "closeFalse" (formula "1"))
)
)

}
