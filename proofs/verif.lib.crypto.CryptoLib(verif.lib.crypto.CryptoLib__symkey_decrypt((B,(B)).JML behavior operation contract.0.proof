\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sat Jul 15 09:50:20 CEST 2017
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=\\#begexpand_inByte\\#end,\\#begexpand_inChar\\#end,\\#begexpand_inShort\\#end,\\#begexpand_inInt\\#end,\\#begexpand_inLong\\#end
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=5000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Sat Jul 15 09:50:20 CEST 2017
name=verif.lib.crypto.CryptoLib[verif.lib.crypto.CryptoLib\\:\\:symkey_decrypt([B,[B)].JML behavior operation contract.0
contract=verif.lib.crypto.CryptoLib[verif.lib.crypto.CryptoLib\\:\\:symkey_decrypt([B,[B)].JML behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mihai" ) (keyVersion "0814267c8a184b1e7da1309b7a9875095ca72975"))

(autoModeTime "395")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "key,msg,result,exc,heapAtPre,o,f"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "eqSymm" (formula "5") (term "1,0,0,1,0,1"))
(rule "assignment" (formula "5") (term "1"))
(builtin "One Step Simplification" (formula "5"))
(rule "elementOfUnion" (formula "5") (term "0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "5") (term "0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "5") (term "1,0,0,0,0,1,0,1"))
(rule "methodBodyExpand" (formula "5") (term "1") (newnames "heapBefore_symkey_decrypt,savedHeapBefore_symkey_decrypt"))
(builtin "One Step Simplification" (formula "5"))
(builtin "Use Operation Contract" (formula "5") (newnames "heapBefore_untrustedOutput,exc_0,heapAfter_untrustedOutput,anon_heap_untrustedOutput") (contract "verif.environment.Environment[verif.environment.Environment::untrustedOutput(long)].JML behavior operation contract.0"))
(branch "Post (untrustedOutput)"
   (builtin "One Step Simplification" (formula "6"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "7"))
   (rule "typeEqDerived" (formula "8") (term "0,1,1") (ifseqformula "7"))
   (rule "typeEqDerived" (formula "8") (term "0,0,1") (ifseqformula "7"))
   (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "7")))
   (rule "true_left" (formula "8"))
   (builtin "Use Operation Contract" (formula "8") (newnames "heapBefore_untrustedOutputMessage,exc_1,heapAfter_untrustedOutputMessage,anon_heap_untrustedOutputMessage") (contract "verif.environment.Environment[verif.environment.Environment::untrustedOutputMessage([B)].JML behavior operation contract.0"))
   (branch "Post (untrustedOutputMessage)"
      (builtin "One Step Simplification" (formula "10"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "andLeft" (formula "9"))
      (rule "andLeft" (formula "10"))
      (rule "typeEqDerived" (formula "11") (term "0,1,1") (ifseqformula "10"))
      (rule "typeEqDerived" (formula "11") (term "0,0,1") (ifseqformula "10"))
      (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "10")))
      (rule "true_left" (formula "11"))
      (builtin "Use Operation Contract" (formula "11") (newnames "heapBefore_untrustedOutputMessage_0,exc_2,heapAfter_untrustedOutputMessage_0,anon_heap_untrustedOutputMessage_0") (contract "verif.environment.Environment[verif.environment.Environment::untrustedOutputMessage([B)].JML behavior operation contract.0"))
      (branch "Post (untrustedOutputMessage)"
         (builtin "One Step Simplification" (formula "13"))
         (builtin "One Step Simplification" (formula "12"))
         (rule "andLeft" (formula "12"))
         (rule "andLeft" (formula "13"))
         (rule "typeEqDerived" (formula "14") (term "0,1,1") (ifseqformula "13"))
         (rule "typeEqDerived" (formula "14") (term "0,0,1") (ifseqformula "13"))
         (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "13")))
         (rule "true_left" (formula "14"))
         (rule "returnUnfold" (formula "14") (term "1") (inst "#v0=x_arr"))
         (rule "variableDeclarationAssign" (formula "14") (term "1"))
         (rule "variableDeclaration" (formula "14") (term "1") (newnames "x_arr"))
         (builtin "Use Operation Contract" (formula "14") (newnames "heapBefore_untrustedInputMessage,result_0,exc_3,heapAfter_untrustedInputMessage,anon_heap_untrustedInputMessage") (contract "verif.environment.Environment[verif.environment.Environment::untrustedInputMessage()].JML behavior operation contract.0"))
         (branch "Post (untrustedInputMessage)"
            (builtin "One Step Simplification" (formula "15"))
            (builtin "One Step Simplification" (formula "16"))
            (rule "andLeft" (formula "15"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "1,1,0") (ifseqformula "15"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "0,1,1,0") (ifseqformula "12"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "0,0,1,1,0") (ifseqformula "9"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "0,0,0,1,1,0") (ifseqformula "6"))
            (rule "andLeft" (formula "16"))
            (rule "andLeft" (formula "16"))
            (rule "typeEqDerived" (formula "18") (term "0,1,1") (ifseqformula "16"))
            (rule "typeEqDerived" (formula "18") (term "0,0,1") (ifseqformula "16"))
            (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "16")))
            (rule "true_left" (formula "18"))
            (rule "assignment" (formula "18") (term "1"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "commute_or_2" (formula "17") (term "1"))
            (rule "shift_paren_or" (formula "17"))
            (rule "shift_paren_or" (formula "17") (term "0"))
            (rule "shift_paren_or" (formula "17") (term "0,0"))
            (rule "shift_paren_or" (formula "17") (term "0,0,0"))
            (rule "commute_or_2" (formula "17") (term "0"))
            (rule "commute_or_2" (formula "17") (term "0,0"))
            (rule "methodCallReturn" (formula "18") (term "1"))
            (rule "assignment" (formula "18") (term "1"))
            (builtin "One Step Simplification" (formula "18"))
            (rule "methodCallEmpty" (formula "18") (term "1"))
            (rule "tryEmpty" (formula "18") (term "1"))
            (rule "emptyModality" (formula "18") (term "1"))
            (rule "andRight" (formula "18"))
            (branch "Case 1"
               (rule "impRight" (formula "18"))
               (rule "orRight" (formula "19"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "Case 2"
               (builtin "One Step Simplification" (formula "18"))
               (rule "allRight" (formula "18") (inst "sk=f_0"))
               (rule "allRight" (formula "18") (inst "sk=o_0"))
               (rule "orRight" (formula "18"))
               (rule "orRight" (formula "18"))
               (rule "orRight" (formula "18"))
               (rule "eqSymm" (formula "21"))
               (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=f_0_0"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "13"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,1,0,0") (ifseqformula "10"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,1,0,0") (ifseqformula "7"))
               (rule "eqSymm" (formula "22"))
               (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "20"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "11"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,1,0,0") (ifseqformula "8"))
               (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
               (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
               (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "20"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "21"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "9"))
               (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
               (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
               (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "21"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "22"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_3"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
               (rule "elementOfUnion" (formula "1") (term "0,0,0"))
               (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
               (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "22"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "23"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "commute_and" (formula "22"))
               (rule "commute_and" (formula "21"))
               (rule "ifthenelse_split" (formula "1") (term "0"))
               (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_untrustedOutput«anonHeapFunction» = TRUE) TRUE"
                  (rule "andLeft" (formula "1"))
                  (rule "notLeft" (formula "2"))
                  (rule "notLeft" (formula "1"))
                  (rule "orRight" (formula "22"))
                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "20"))
                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "21")) (ifInst ""  (formula "22")))
                  (rule "replace_known_right" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "21"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")) (ifInst ""  (formula "22")))
                  (rule "replace_known_right" (formula "23") (term "1") (ifseqformula "20"))
                  (builtin "One Step Simplification" (formula "23"))
                  (rule "false_right" (formula "23"))
                  (rule "replace_known_right" (formula "23") (term "1") (ifseqformula "20"))
                  (builtin "One Step Simplification" (formula "23"))
                  (rule "false_right" (formula "23"))
                  (rule "replace_known_right" (formula "23") (term "0,0") (ifseqformula "20"))
                  (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "21")))
                  (rule "closeTrue" (formula "23"))
               )
               (branch " ¬o_0 = null ∧ ¬( o_0.<created> = TRUE ∨ o_0.<created>@anon_heap_untrustedOutput«anonHeapFunction» = TRUE) FALSE"
                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "cut_direct" (formula "23") (term "0,0"))
                  (branch "CUT: o_0 = null TRUE"
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "false_right" (formula "24"))
                     (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "2"))
                     (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                     (rule "hideAuxiliaryEq" (formula "2"))
                     (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "23")))
                     (rule "closeFalse" (formula "2"))
                  )
                  (branch "CUT: o_0 = null FALSE"
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "notRight" (formula "24"))
                     (rule "replace_known_left" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "24")))
                     (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                     (rule "hideAuxiliaryEq" (formula "2"))
                     (rule "replace_known_left" (formula "2") (term "0,0,0,0,1,0,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "23")) (ifInst ""  (formula "24")))
                     (rule "closeFalse" (formula "2"))
                  )
               )
            )
         )
         (branch "Exceptional Post (untrustedInputMessage)"
            (builtin "One Step Simplification" (formula "16"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "andLeft" (formula "15"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "1,0") (ifseqformula "15"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "0,1,0") (ifseqformula "12"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "0,0,1,0") (ifseqformula "9"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "0,0,0,1,0") (ifseqformula "6"))
            (rule "andLeft" (formula "16"))
            (rule "andLeft" (formula "16"))
            (rule "notLeft" (formula "16"))
            (rule "replace_known_right" (formula "17") (term "0,0") (ifseqformula "18"))
            (builtin "One Step Simplification" (formula "17"))
            (rule "commute_or_2" (formula "16"))
            (rule "commute_or_2" (formula "16") (term "0"))
            (rule "commute_or_2" (formula "16") (term "0,0"))
            (rule "methodCallParamThrow" (formula "19") (term "1"))
            (rule "tryCatchThrow" (formula "19") (term "1"))
            (rule "ifElseUnfold" (formula "19") (term "1") (inst "#boolv=x"))
            (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_3"))
            (rule "equality_comparison_simple" (formula "19") (term "1"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "replace_known_right" (formula "19") (term "0,0,1,0") (ifseqformula "18"))
            (builtin "One Step Simplification" (formula "19"))
            (rule "ifElseSplit" (formula "19"))
            (branch "if x_3 true"
               (builtin "One Step Simplification" (formula "20"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "if x_3 false"
               (builtin "One Step Simplification" (formula "20"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "ifElseSplit" (formula "19"))
               (branch "if exc_3 instanceof java.lang.Throwable true"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                  (rule "true_left" (formula "1"))
                  (rule "variableDeclaration" (formula "19") (term "1") (newnames "e_3"))
                  (rule "reference_type_cast" (formula "19") (term "1"))
                  (branch "Normal Execution (exc_3 instanceof java.lang.Throwable)"
                     (builtin "One Step Simplification" (formula "20"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "assignment" (formula "19") (term "1"))
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "emptyModality" (formula "19") (term "1"))
                     (rule "andRight" (formula "19"))
                     (branch "Case 1"
                        (rule "impRight" (formula "19"))
                        (rule "orRight" (formula "20"))
                        (builtin "One Step Simplification" (formula "20"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                        (builtin "One Step Simplification" (formula "21"))
                        (rule "true_left" (formula "1"))
                        (rule "replace_known_right" (formula "17") (term "1") (ifseqformula "20"))
                        (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "19")))
                        (rule "closeFalse" (formula "17"))
                     )
                     (branch "Case 2"
                        (builtin "One Step Simplification" (formula "19"))
                        (rule "allRight" (formula "19") (inst "sk=f_1"))
                        (rule "allRight" (formula "19") (inst "sk=o_1"))
                        (rule "orRight" (formula "19"))
                        (rule "orRight" (formula "19"))
                        (rule "orRight" (formula "19"))
                        (rule "eqSymm" (formula "22"))
                        (rule "pullOutSelect" (formula "22") (term "0") (inst "selectSK=f_1_0"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "13"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,1,0,0") (ifseqformula "10"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,1,0,0") (ifseqformula "7"))
                        (rule "eqSymm" (formula "23"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "21"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_1"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "11"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,1,0,0") (ifseqformula "8"))
                        (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "22"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "21"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_2"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "12"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "9"))
                        (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,0,0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "23"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "22"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_3"))
                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "25")))
                        (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                        (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                        (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "23"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "24"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "commute_and" (formula "22"))
                        (rule "commute_and" (formula "23"))
                        (rule "ifthenelse_split" (formula "1") (term "0"))
                        (branch " ¬o_1 = null ∧ ¬( o_1.<created> = TRUE ∨ o_1.<created>@anon_heap_untrustedOutput«anonHeapFunction» = TRUE) TRUE"
                           (rule "andLeft" (formula "1"))
                           (rule "notLeft" (formula "2"))
                           (rule "notLeft" (formula "1"))
                           (rule "orRight" (formula "22"))
                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "20"))
                           (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "21")) (ifInst ""  (formula "22")))
                           (rule "replace_known_right" (formula "1") (term "1,0,0,1,0,0") (ifseqformula "22"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")) (ifInst ""  (formula "21")))
                           (rule "replace_known_right" (formula "25") (term "1") (ifseqformula "20"))
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "false_right" (formula "25"))
                           (rule "replace_known_right" (formula "25") (term "0,0") (ifseqformula "20"))
                           (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "21")))
                           (rule "closeTrue" (formula "25"))
                        )
                        (branch " ¬o_1 = null ∧ ¬( o_1.<created> = TRUE ∨ o_1.<created>@anon_heap_untrustedOutput«anonHeapFunction» = TRUE) FALSE"
                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "cut_direct" (formula "24") (term "0,0"))
                           (branch "CUT: o_1 = null TRUE"
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "false_right" (formula "25"))
                              (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "24")))
                              (rule "closeFalse" (formula "2"))
                           )
                           (branch "CUT: o_1 = null FALSE"
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "notRight" (formula "25"))
                              (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "25"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")))
                              (rule "applyEqReverse" (formula "26") (term "1") (ifseqformula "3"))
                              (rule "hideAuxiliaryEq" (formula "3"))
                              (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "24"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")) (ifInst ""  (formula "25")))
                              (rule "closeFalse" (formula "2"))
                           )
                        )
                     )
                  )
                  (branch "ClassCastException (!(exc_3 instanceof java.lang.Throwable))"
                     (builtin "One Step Simplification" (formula "19"))
                     (rule "closeTrue" (formula "19"))
                  )
               )
               (branch "if exc_3 instanceof java.lang.Throwable false"
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                  (rule "closeFalse" (formula "1"))
               )
            )
         )
         (branch "Pre (untrustedInputMessage)"
            (builtin "One Step Simplification" (formula "14"))
            (rule "wellFormedAnonEQ" (formula "14") (ifseqformula "12"))
            (rule "wellFormedAnonEQ" (formula "14") (term "0") (ifseqformula "9"))
            (rule "wellFormedAnonEQ" (formula "14") (term "0,0") (ifseqformula "6"))
            (rule "replace_known_left" (formula "14") (term "1") (ifseqformula "11"))
            (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "1")) (ifInst ""  (formula "5")) (ifInst ""  (formula "8")))
            (rule "closeTrue" (formula "14"))
         )
      )
      (branch "Exceptional Post (untrustedOutputMessage)"
         (builtin "One Step Simplification" (formula "13"))
         (builtin "One Step Simplification" (formula "12"))
         (rule "andLeft" (formula "12"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "13") (term "1,0") (ifseqformula "12"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "13") (term "0,1,0") (ifseqformula "9"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "13") (term "0,0,1,0") (ifseqformula "6"))
         (rule "andLeft" (formula "13"))
         (rule "andLeft" (formula "13"))
         (rule "notLeft" (formula "13"))
         (rule "replace_known_right" (formula "14") (term "0,0") (ifseqformula "15"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "methodCallParamThrow" (formula "16") (term "1"))
         (rule "tryCatchThrow" (formula "16") (term "1"))
         (rule "ifElseUnfold" (formula "16") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "16") (term "1") (newnames "x_2"))
         (rule "equality_comparison_simple" (formula "16") (term "1"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "replace_known_right" (formula "16") (term "0,0,1,0") (ifseqformula "15"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "ifElseSplit" (formula "16"))
         (branch "if x_2 true"
            (builtin "One Step Simplification" (formula "17"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch "if x_2 false"
            (builtin "One Step Simplification" (formula "17"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "ifElseSplit" (formula "16"))
            (branch "if exc_2 instanceof java.lang.Throwable true"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
               (rule "true_left" (formula "1"))
               (rule "variableDeclaration" (formula "16") (term "1") (newnames "e_2"))
               (rule "reference_type_cast" (formula "16") (term "1"))
               (branch "Normal Execution (exc_2 instanceof java.lang.Throwable)"
                  (builtin "One Step Simplification" (formula "17"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "assignment" (formula "16") (term "1"))
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "emptyModality" (formula "16") (term "1"))
                  (rule "andRight" (formula "16"))
                  (branch "Case 1"
                     (rule "impRight" (formula "16"))
                     (rule "orRight" (formula "17"))
                     (builtin "One Step Simplification" (formula "17"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
                     (builtin "One Step Simplification" (formula "18"))
                     (rule "true_left" (formula "1"))
                     (rule "replace_known_right" (formula "14") (term "1") (ifseqformula "17"))
                     (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "16")))
                     (rule "closeFalse" (formula "14"))
                  )
                  (branch "Case 2"
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "allRight" (formula "16") (inst "sk=f_2"))
                     (rule "allRight" (formula "16") (inst "sk=o_2"))
                     (rule "orRight" (formula "16"))
                     (rule "orRight" (formula "16"))
                     (rule "orRight" (formula "16"))
                     (rule "eqSymm" (formula "19"))
                     (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=f_2_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "13"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "10"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,1,0,0") (ifseqformula "7"))
                     (rule "eqSymm" (formula "20"))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                     (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "17"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "18"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "8"))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                     (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "18"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "19"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_2_2"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "9"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                     (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                     (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "19"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "20"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "commute_and" (formula "18"))
                     (rule "commute_and" (formula "19"))
                     (rule "ifthenelse_split" (formula "1") (term "0"))
                     (branch " ¬o_2 = null ∧ ¬( o_2.<created> = TRUE ∨ o_2.<created>@anon_heap_untrustedOutput«anonHeapFunction» = TRUE) TRUE"
                        (rule "andLeft" (formula "1"))
                        (rule "notLeft" (formula "2"))
                        (rule "notLeft" (formula "1"))
                        (rule "orRight" (formula "18"))
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "replace_known_right" (formula "1") (term "1,0,0,1,0,0") (ifseqformula "18"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")) (ifInst ""  (formula "17")))
                        (rule "replace_known_right" (formula "22") (term "0,1") (ifseqformula "17"))
                        (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "16")))
                        (rule "closeTrue" (formula "22"))
                     )
                     (branch " ¬o_2 = null ∧ ¬( o_2.<created> = TRUE ∨ o_2.<created>@anon_heap_untrustedOutput«anonHeapFunction» = TRUE) FALSE"
                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "ifthenelse_split" (formula "1") (term "0"))
                        (branch " ¬o_2 = null ∧ ¬( o_2.<created> = TRUE ∨ o_2.<created>@anon_heap_untrustedOutput«anonHeapFunction» = TRUE ∨ o_2.<created>@anon_heap_untrustedOutputMessage«anonHeapFunction» = TRUE) TRUE"
                           (rule "andLeft" (formula "1"))
                           (rule "notLeft" (formula "2"))
                           (rule "notLeft" (formula "1"))
                           (rule "orRight" (formula "17"))
                           (rule "orRight" (formula "17"))
                           (rule "applyEqReverse" (formula "25") (term "1") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "eqSymm" (formula "24"))
                           (rule "replace_known_right" (formula "23") (term "0,1") (ifseqformula "16"))
                           (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "15")))
                           (rule "closeTrue" (formula "23"))
                        )
                        (branch " ¬o_2 = null ∧ ¬( o_2.<created> = TRUE ∨ o_2.<created>@anon_heap_untrustedOutput«anonHeapFunction» = TRUE ∨ o_2.<created>@anon_heap_untrustedOutputMessage«anonHeapFunction» = TRUE) FALSE"
                           (rule "close" (formula "22") (ifseqformula "1"))
                        )
                     )
                  )
               )
               (branch "ClassCastException (!(exc_2 instanceof java.lang.Throwable))"
                  (builtin "One Step Simplification" (formula "16"))
                  (rule "closeTrue" (formula "16"))
               )
            )
            (branch "if exc_2 instanceof java.lang.Throwable false"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
      (branch "Pre (untrustedOutputMessage)"
         (builtin "One Step Simplification" (formula "11"))
         (rule "wellFormedAnonEQ" (formula "11") (term "0") (ifseqformula "9"))
         (rule "wellFormedAnonEQ" (formula "11") (term "0,0") (ifseqformula "6"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "1,1") (ifseqformula "9"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "11") (term "0,1,1") (ifseqformula "6"))
         (rule "replace_known_left" (formula "11") (term "1,0,0") (ifseqformula "5"))
         (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "1")) (ifInst ""  (formula "8")))
         (rule "orRight" (formula "11"))
         (rule "orRight" (formula "12"))
         (rule "orRight" (formula "12"))
         (rule "replace_known_right" (formula "2") (term "1") (ifseqformula "12"))
         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "11")))
         (rule "closeFalse" (formula "2"))
      )
   )
   (branch "Exceptional Post (untrustedOutputMessage)"
      (builtin "One Step Simplification" (formula "9"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "andLeft" (formula "9"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "10") (term "1,0") (ifseqformula "9"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "10") (term "0,1,0") (ifseqformula "6"))
      (rule "andLeft" (formula "10"))
      (rule "andLeft" (formula "10"))
      (rule "notLeft" (formula "10"))
      (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "12"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "methodCallParamThrow" (formula "13") (term "1"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "tryCatchThrow" (formula "13") (term "1"))
      (rule "ifElseUnfold" (formula "13") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_1"))
      (rule "equality_comparison_simple" (formula "13") (term "1"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "replace_known_right" (formula "13") (term "0,0,1,0") (ifseqformula "12"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "ifElseSplit" (formula "13"))
      (branch "if x_1 true"
         (builtin "One Step Simplification" (formula "14"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
      (branch "if x_1 false"
         (builtin "One Step Simplification" (formula "14"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "ifElseSplit" (formula "13"))
         (branch "if exc_1 instanceof java.lang.Throwable true"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
            (rule "true_left" (formula "1"))
            (rule "variableDeclaration" (formula "13") (term "1") (newnames "e_1"))
            (rule "reference_type_cast" (formula "13") (term "1"))
            (branch "Normal Execution (exc_1 instanceof java.lang.Throwable)"
               (builtin "One Step Simplification" (formula "14"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "assignment" (formula "13") (term "1"))
               (builtin "One Step Simplification" (formula "13"))
               (rule "emptyModality" (formula "13") (term "1"))
               (rule "andRight" (formula "13"))
               (branch "Case 1"
                  (rule "impRight" (formula "13"))
                  (rule "orRight" (formula "14"))
                  (builtin "One Step Simplification" (formula "14"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
                  (builtin "One Step Simplification" (formula "15"))
                  (rule "true_left" (formula "1"))
                  (rule "replace_known_right" (formula "11") (term "1") (ifseqformula "14"))
                  (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "13")))
                  (rule "closeFalse" (formula "11"))
               )
               (branch "Case 2"
                  (builtin "One Step Simplification" (formula "13"))
                  (rule "allRight" (formula "13") (inst "sk=f_3"))
                  (rule "allRight" (formula "13") (inst "sk=o_3"))
                  (rule "orRight" (formula "13"))
                  (rule "orRight" (formula "13"))
                  (rule "orRight" (formula "13"))
                  (rule "eqSymm" (formula "16"))
                  (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=f_3_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "7"))
                  (rule "eqSymm" (formula "17"))
                  (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                  (rule "elementOfSingleton" (formula "1") (term "1,0,0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "1,0,0,0,0") (ifseqformula "14"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "15"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_3_1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "8"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                  (rule "elementOfUnion" (formula "1") (term "0,0,0"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "16"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "15"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "commute_and" (formula "14"))
                  (rule "commute_and" (formula "15"))
                  (rule "ifthenelse_split" (formula "1") (term "0"))
                  (branch " ¬o_3 = null ∧ ¬( o_3.<created> = TRUE ∨ o_3.<created>@anon_heap_untrustedOutput«anonHeapFunction» = TRUE) TRUE"
                     (rule "andLeft" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "orRight" (formula "13"))
                     (rule "applyEqReverse" (formula "20") (term "1") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "eqSymm" (formula "19"))
                     (rule "replace_known_right" (formula "16") (term "1") (ifseqformula "14"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "false_right" (formula "16"))
                     (rule "replace_known_right" (formula "16") (term "1") (ifseqformula "14"))
                     (builtin "One Step Simplification" (formula "16"))
                     (rule "false_right" (formula "16"))
                     (rule "replace_known_right" (formula "16") (term "0,1") (ifseqformula "12"))
                     (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "14")))
                     (rule "closeTrue" (formula "16"))
                  )
                  (branch " ¬o_3 = null ∧ ¬( o_3.<created> = TRUE ∨ o_3.<created>@anon_heap_untrustedOutput«anonHeapFunction» = TRUE) FALSE"
                     (rule "close" (formula "18") (ifseqformula "1"))
                  )
               )
            )
            (branch "ClassCastException (!(exc_1 instanceof java.lang.Throwable))"
               (builtin "One Step Simplification" (formula "13"))
               (rule "closeTrue" (formula "13"))
            )
         )
         (branch "if exc_1 instanceof java.lang.Throwable false"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
   (branch "Pre (untrustedOutputMessage)"
      (builtin "One Step Simplification" (formula "8"))
      (rule "wellFormedAnonEQ" (formula "8") (term "0") (ifseqformula "6"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "8") (term "1,1") (ifseqformula "6"))
      (rule "replace_known_left" (formula "8") (term "1,0") (ifseqformula "5"))
      (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "1")))
      (rule "orRight" (formula "8"))
      (rule "orRight" (formula "9"))
      (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "8"))
      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "9")))
      (rule "closeFalse" (formula "3"))
   )
)
(branch "Exceptional Post (untrustedOutput)"
   (builtin "One Step Simplification" (formula "7"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "7") (term "1,0") (ifseqformula "6"))
   (rule "andLeft" (formula "7"))
   (rule "andLeft" (formula "7"))
   (rule "notLeft" (formula "7"))
   (rule "replace_known_right" (formula "8") (term "0,0") (ifseqformula "9"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "methodCallParamThrow" (formula "10") (term "1"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "tryCatchThrow" (formula "10") (term "1"))
   (rule "ifElseUnfold" (formula "10") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "10") (term "1") (newnames "x"))
   (rule "equality_comparison_simple" (formula "10") (term "1"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "replace_known_right" (formula "10") (term "0,0,1,0") (ifseqformula "9"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "ifElseSplit" (formula "10"))
   (branch "if x true"
      (builtin "One Step Simplification" (formula "11"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch "if x false"
      (builtin "One Step Simplification" (formula "11"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "ifElseSplit" (formula "10"))
      (branch "if exc_0 instanceof java.lang.Throwable true"
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")))
         (rule "true_left" (formula "1"))
         (rule "variableDeclaration" (formula "10") (term "1") (newnames "e"))
         (rule "reference_type_cast" (formula "10") (term "1"))
         (branch "Normal Execution (exc_0 instanceof java.lang.Throwable)"
            (builtin "One Step Simplification" (formula "11"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "assignment" (formula "10") (term "1"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "emptyModality" (formula "10") (term "1"))
            (rule "andRight" (formula "10"))
            (branch "Case 1"
               (rule "impRight" (formula "10"))
               (rule "orRight" (formula "11"))
               (builtin "One Step Simplification" (formula "11"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")))
               (builtin "One Step Simplification" (formula "12"))
               (rule "true_left" (formula "1"))
               (rule "replace_known_right" (formula "8") (term "1") (ifseqformula "11"))
               (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "10")))
               (rule "closeFalse" (formula "8"))
            )
            (branch "Case 2"
               (builtin "One Step Simplification" (formula "10"))
               (rule "allRight" (formula "10") (inst "sk=f_4"))
               (rule "allRight" (formula "10") (inst "sk=o_4"))
               (rule "orRight" (formula "10"))
               (rule "orRight" (formula "10"))
               (rule "orRight" (formula "10"))
               (rule "eqSymm" (formula "13"))
               (rule "pullOutSelect" (formula "13") (term "0") (inst "selectSK=f_4_0"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "7"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
               (rule "eqSymm" (formula "14"))
               (rule "elementOfUnion" (formula "1") (term "0,0,0"))
               (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
               (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "11"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "12"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "ClassCastException (!(exc_0 instanceof java.lang.Throwable))"
            (builtin "One Step Simplification" (formula "10"))
            (rule "closeTrue" (formula "10"))
         )
      )
      (branch "if exc_0 instanceof java.lang.Throwable false"
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")))
         (rule "closeFalse" (formula "1"))
      )
   )
)
(branch "Pre (untrustedOutput)"
   (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "1")))
   (rule "closeTrue" (formula "5"))
)
)

}
