\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Jul 13 22:21:29 CEST 2017
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=\\#begexpand_inByte\\#end,\\#begexpand_inChar\\#end,\\#begexpand_inShort\\#end,\\#begexpand_inInt\\#end,\\#begexpand_inLong\\#end
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=5000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Thu Jul 13 22:21:29 CEST 2017
name=verif.functionalities.pkisig.Signer[verif.functionalities.pkisig.Signer\\:\\:sign([B)].JML behavior operation contract.0
contract=verif.functionalities.pkisig.Signer[verif.functionalities.pkisig.Signer\\:\\:sign([B)].JML behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mihai" ) (keyVersion "0814267c8a184b1e7da1309b7a9875095ca72975"))

(autoModeTime "116")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "message,self,result,exc,heapAtPre,o,f"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "8") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "7"))
(builtin "One Step Simplification" (formula "4"))
(rule "assignment" (formula "8") (term "1"))
(builtin "One Step Simplification" (formula "8"))
(rule "elementOfUnion" (formula "8") (term "0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "8") (term "1,0,0,0,0,1,0,1"))
(rule "elementOfUnion" (formula "8") (term "0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "8") (term "0,0,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "8") (term "1,0,0,0,0,0,1,0,1"))
(rule "methodBodyExpand" (formula "8") (term "1") (newnames "heapBefore_sign,savedHeapBefore_sign"))
(builtin "One Step Simplification" (formula "8"))
(rule "variableDeclarationAssign" (formula "8") (term "1"))
(rule "variableDeclaration" (formula "8") (term "1") (newnames "signature"))
(builtin "Use Operation Contract" (formula "8") (newnames "heapBefore_getSignature,result_0,exc_0,heapAfter_getSignature,anon_heap_getSignature") (contract "verif.functionalities.pkisig.Signer[verif.functionalities.pkisig.Signer::getSignature([B)].JML behavior operation contract.0"))
(branch "Post (getSignature)"
   (builtin "One Step Simplification" (formula "10"))
   (builtin "One Step Simplification" (formula "7"))
   (rule "andLeft" (formula "7"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "8") (term "1,1,0") (ifseqformula "7"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "8"))
   (rule "typeEqDerived" (formula "10") (term "0,1,1") (ifseqformula "8"))
   (rule "typeEqDerived" (formula "10") (term "0,0,1") (ifseqformula "8"))
   (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "8")))
   (rule "true_left" (formula "10"))
   (rule "assignment" (formula "12") (term "1"))
   (builtin "One Step Simplification" (formula "12"))
   (rule "shift_paren_or" (formula "9"))
   (rule "ifUnfold" (formula "12") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_1"))
   (rule "equality_comparison_simple" (formula "12") (term "1"))
   (builtin "One Step Simplification" (formula "12"))
   (rule "ifSplit" (formula "12"))
   (branch "if x_1 true"
      (builtin "One Step Simplification" (formula "13"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "replace_known_left" (formula "10") (term "0,0") (ifseqformula "1"))
      (builtin "One Step Simplification" (formula "10"))
      (rule "true_left" (formula "10"))
      (rule "blockReturn" (formula "12") (term "1"))
      (rule "applyEq" (formula "12") (term "0,1,0") (ifseqformula "1"))
      (rule "methodCallReturn" (formula "12") (term "1"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "assignment" (formula "12") (term "1"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "methodCallEmpty" (formula "12") (term "1"))
      (rule "tryEmpty" (formula "12") (term "1"))
      (rule "emptyModality" (formula "12") (term "1"))
      (builtin "One Step Simplification" (formula "12"))
      (rule "allRight" (formula "12") (inst "sk=f_1"))
      (rule "allRight" (formula "12") (inst "sk=o_1"))
      (rule "orRight" (formula "12"))
      (rule "orRight" (formula "12"))
      (rule "orRight" (formula "12"))
      (rule "orRight" (formula "12"))
      (rule "eqSymm" (formula "16"))
      (rule "pullOutSelect" (formula "16") (term "0") (inst "selectSK=f_1_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "9"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "16")))
      (rule "eqSymm" (formula "17"))
      (rule "elementOfUnion" (formula "1") (term "0,0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
      (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "14"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
      (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "13"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
      (rule "closeFalse" (formula "1"))
   )
   (branch "if x_1 false"
      (builtin "One Step Simplification" (formula "13"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "replace_known_right" (formula "9") (term "0,0") (ifseqformula "10"))
      (builtin "One Step Simplification" (formula "9"))
      (rule "methodCallUnfoldTarget" (formula "13") (term "1") (inst "#v0=l"))
      (rule "variableDeclaration" (formula "13") (term "1") (newnames "l"))
      (rule "assignment_read_attribute_this" (formula "13") (term "1"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "pullOutSelect" (formula "13") (term "0,1,0") (inst "selectSK=verif_functionalities_pkisig_Signer_log_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "8"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")) (ifInst ""  (formula "3")))
      (rule "elementOfUnion" (formula "1") (term "0,0"))
      (rule "elementOfSingleton" (formula "1") (term "1,0,0"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
      (rule "elementOfSingleton" (formula "1") (term "0,0"))
      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
      (rule "applyEqReverse" (formula "14") (term "0,1,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "methodCallUnfoldArguments" (formula "13") (term "1"))
      (rule "variableDeclarationAssign" (formula "13") (term "1"))
      (rule "variableDeclaration" (formula "13") (term "1") (newnames "var"))
      (rule "assignment" (formula "13") (term "1"))
      (builtin "One Step Simplification" (formula "13"))
      (rule "variableDeclarationAssign" (formula "13") (term "1"))
      (rule "variableDeclaration" (formula "13") (term "1") (newnames "var_1"))
      (builtin "Use Operation Contract" (formula "13") (newnames "heapBefore_copyOf,result_1,exc_1") (contract "verif.utils.MessageTools[verif.utils.MessageTools::copyOf([B)].JML normal_behavior operation contract.0#verif.utils.MessageTools[verif.utils.MessageTools::copyOf([B)].JML normal_behavior operation contract.1"))
      (branch "Post (copyOf)"
         (builtin "One Step Simplification" (formula "14"))
         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "13")) (ifInst ""  (formula "13")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "10") (term "1,1,0") (ifseqformula "7"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "10") (term "0,0,0,0,1") (ifseqformula "7"))
         (rule "andLeft" (formula "10"))
         (rule "andLeft" (formula "11"))
         (rule "andLeft" (formula "10"))
         (rule "andLeft" (formula "11"))
         (rule "andLeft" (formula "11"))
         (rule "notLeft" (formula "12"))
         (rule "notLeft" (formula "11"))
         (rule "orRight" (formula "13"))
         (rule "replace_known_right" (formula "10") (term "1,1") (ifseqformula "14"))
         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "15")) (ifInst ""  (formula "13")))
         (rule "closeFalse" (formula "10"))
      )
      (branch "Exceptional Post (copyOf)"
         (builtin "One Step Simplification" (formula "14"))
         (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "13")) (ifInst ""  (formula "13")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "10") (term "1,0") (ifseqformula "7"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "10") (term "0,0,0,0,1") (ifseqformula "7"))
         (rule "andLeft" (formula "10"))
         (rule "andLeft" (formula "10"))
         (rule "andLeft" (formula "12"))
         (rule "notLeft" (formula "10"))
         (rule "close" (formula "13") (ifseqformula "12"))
      )
      (branch "Pre (copyOf)"
         (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "12")))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "13") (term "1") (ifseqformula "7"))
         (rule "wellFormedAnonEQ" (formula "13") (term "0") (ifseqformula "7"))
         (rule "replace_known_left" (formula "13") (term "0,1") (ifseqformula "4"))
         (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "1")) (ifInst ""  (formula "6")))
         (rule "closeTrue" (formula "13"))
      )
   )
)
(branch "Exceptional Post (getSignature)"
   (builtin "One Step Simplification" (formula "7"))
   (builtin "One Step Simplification" (formula "10"))
   (rule "andLeft" (formula "7"))
   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "8") (term "1,0") (ifseqformula "7"))
   (rule "andLeft" (formula "8"))
   (rule "andLeft" (formula "8"))
   (rule "notLeft" (formula "8"))
   (rule "replace_known_right" (formula "9") (term "0,0") (ifseqformula "10"))
   (builtin "One Step Simplification" (formula "9"))
   (rule "methodCallParamThrow" (formula "13") (term "1"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "tryCatchThrow" (formula "13") (term "1"))
   (rule "ifElseUnfold" (formula "13") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "13") (term "1") (newnames "x"))
   (rule "equality_comparison_simple" (formula "13") (term "1"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "replace_known_right" (formula "13") (term "0,0,1,0") (ifseqformula "10"))
   (builtin "One Step Simplification" (formula "13"))
   (rule "ifElseSplit" (formula "13"))
   (branch "if x true"
      (builtin "One Step Simplification" (formula "14"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch "if x false"
      (builtin "One Step Simplification" (formula "14"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "ifElseSplit" (formula "13"))
      (branch "if exc_0 instanceof java.lang.Throwable true"
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
         (rule "true_left" (formula "1"))
         (rule "variableDeclaration" (formula "13") (term "1") (newnames "e"))
         (rule "reference_type_cast" (formula "13") (term "1"))
         (branch "Normal Execution (exc_0 instanceof java.lang.Throwable)"
            (builtin "One Step Simplification" (formula "14"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "assignment" (formula "13") (term "1"))
            (builtin "One Step Simplification" (formula "13"))
            (rule "emptyModality" (formula "13") (term "1"))
            (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "10")) (ifInst ""  (formula "10")) (ifInst ""  (formula "9")))
            (rule "allRight" (formula "13") (inst "sk=f_0"))
            (rule "allRight" (formula "13") (inst "sk=o_0"))
            (rule "orRight" (formula "13"))
            (rule "orRight" (formula "13"))
            (rule "orRight" (formula "13"))
            (rule "orRight" (formula "13"))
            (rule "eqSymm" (formula "17"))
            (rule "pullOutSelect" (formula "17") (term "0") (inst "selectSK=f_0_0"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "8"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
            (rule "eqSymm" (formula "18"))
            (rule "elementOfUnion" (formula "1") (term "0,0,0"))
            (rule "elementOfSingleton" (formula "1") (term "1,0,0,0"))
            (rule "replace_known_right" (formula "1") (term "1,0,0,0") (ifseqformula "15"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfSingleton" (formula "1") (term "0,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "14"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
            (rule "closeFalse" (formula "1"))
         )
         (branch "ClassCastException (!(exc_0 instanceof java.lang.Throwable))"
            (builtin "One Step Simplification" (formula "13"))
            (rule "closeTrue" (formula "13"))
         )
      )
      (branch "if exc_0 instanceof java.lang.Throwable false"
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "11")))
         (rule "closeFalse" (formula "1"))
      )
   )
)
(branch "Pre (getSignature)"
   (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "7")) (ifInst ""  (formula "1")) (ifInst ""  (formula "7")) (ifInst ""  (formula "4")))
   (rule "closeTrue" (formula "8"))
)
)

}
