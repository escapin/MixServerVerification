\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Jul 17 19:18:35 CEST 2017
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=\\#begexpand_inByte\\#end,\\#begexpand_inChar\\#end,\\#begexpand_inShort\\#end,\\#begexpand_inInt\\#end,\\#begexpand_inLong\\#end
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=5000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Mon Jul 17 19:18:35 CEST 2017
name=verif.functionalities.pkienc.Decryptor.EncryptionLog[verif.functionalities.pkienc.Decryptor.EncryptionLog\\:\\:add([B,[B)].JML normal_behavior operation contract.0
contract=verif.functionalities.pkienc.Decryptor.EncryptionLog[verif.functionalities.pkienc.Decryptor.EncryptionLog\\:\\:add([B,[B)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mihai" ) (keyVersion "0814267c8a184b1e7da1309b7a9875095ca72975"))

(autoModeTime "13969")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "plain,cipher,self,exc,heapAtPre,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "10"))
(rule "notLeft" (formula "9"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "7"))
(rule "eqSymm" (formula "12") (term "0,0,0,0,1"))
(rule "eqSymm" (formula "12") (term "0,1,0,0,0,1"))
(rule "eqSymm" (formula "12") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "10"))
(builtin "One Step Simplification" (formula "4"))
(rule "replace_known_right" (formula "5") (term "0") (ifseqformula "11"))
(builtin "One Step Simplification" (formula "5"))
(rule "assignment" (formula "12") (term "1"))
(builtin "One Step Simplification" (formula "12"))
(rule "array2seqDef" (formula "12") (term "0,0,0,1,0,0,0,1") (inst "u=u"))
(rule "elementOfUnion" (formula "12") (term "0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "12") (term "1,0,0,0,0,1,0,1"))
(rule "elementOfSingleton" (formula "12") (term "0,0,0,0,0,1,0,1"))
(rule "array2seqDef" (formula "12") (term "0,0,0,0,0,0,1") (inst "u=u"))
(rule "array2seqDef" (formula "12") (term "1,0,1,0,0,0,1") (inst "u=u"))
(rule "array2seqDef" (formula "12") (term "1,0,0,0,0,1") (inst "u=u"))
(rule "eqSeqDef" (formula "12") (term "0,1,0,0,0,1") (inst "iv=iv"))
(rule "lenOfSeqDef" (formula "12") (term "1,0,0,1,0,0,0,1"))
(rule "polySimp_elimSub" (formula "12") (term "1,1,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "12") (term "1,1,1,0,0,1,0,0,0,1"))
(rule "add_zero_right" (formula "12") (term "1,1,0,0,1,0,0,0,1"))
(rule "lenOfSeqConcat" (formula "12") (term "1,1,0,0,1,0,1,0,0,0,1"))
(builtin "One Step Simplification" (formula "12"))
(rule "polySimp_addComm0" (formula "12") (term "1,1,0,0,1,0,1,0,0,0,1"))
(rule "lenOfSeqConcat" (formula "12") (term "0,0,0,1,0,0,0,1"))
(builtin "One Step Simplification" (formula "12"))
(rule "polySimp_homoEq" (formula "12") (term "0,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1,0,0,0,1"))
(rule "polySimp_addComm0" (formula "12") (term "1,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "12") (term "0,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,0,0,0,1"))
(rule "polySimp_addComm0" (formula "12") (term "0,0,0,0,1,0,0,0,1"))
(rule "lenOfSeqDef" (formula "12") (term "1,1,1,0,0,1,0,1,0,0,0,1"))
(rule "polySimp_elimSub" (formula "12") (term "1,1,1,1,0,0,1,0,1,0,0,0,1"))
(rule "mul_literals" (formula "12") (term "1,1,1,1,1,0,0,1,0,1,0,0,0,1"))
(rule "add_zero_right" (formula "12") (term "1,1,1,1,0,0,1,0,1,0,0,0,1"))
(rule "getOfSeqDef" (formula "12") (term "1,1,0,1,0,1,0,0,0,1"))
(rule "castDel" (formula "12") (term "2,1,1,0,1,0,1,0,0,0,1"))
(rule "castDel" (formula "12") (term "1,1,1,0,1,0,1,0,0,0,1"))
(rule "add_zero_right" (formula "12") (term "0,2,1,1,1,0,1,0,1,0,0,0,1"))
(rule "polySimp_elimSub" (formula "12") (term "1,1,0,1,1,0,1,0,1,0,0,0,1"))
(rule "mul_literals" (formula "12") (term "1,1,1,0,1,1,0,1,0,1,0,0,0,1"))
(rule "add_zero_right" (formula "12") (term "1,1,0,1,1,0,1,0,1,0,0,0,1"))
(rule "lenOfSeqDef" (formula "12") (term "0,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_elimSub" (formula "12") (term "1,0,1,0,0,0,1,0,0,0,1"))
(rule "times_zero_2" (formula "12") (term "1,1,0,1,0,0,0,1,0,0,0,1"))
(rule "add_zero_right" (formula "12") (term "1,0,1,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "12") (term "0,1,0,0,0,0,1,0,0,0,1"))
(rule "add_zero_right" (formula "12") (term "0,0,1,0,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "12") (term "0,1,1,1,0,0,1,0,1,0,0,0,1"))
(rule "add_zero_right" (formula "12") (term "0,0,1,1,1,0,0,1,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,1,1,0,0,1,0,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,1,1,0,1,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,1,1,0,1,0,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,1,0,0,0,1,0,0,0,1"))
(rule "add_zero_right" (formula "12") (term "0,0,0,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,1,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0,1,0,1,0,0,0,1"))
(rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0,1,0,1,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,1,0,1,0,0,0,1"))
(rule "add_literals" (formula "12") (term "0,0,0,1,0,0,1,0,1,0,0,0,1"))
(rule "add_zero_left" (formula "12") (term "0,0,1,0,0,1,0,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,1,0,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,1,1,0,1,0,1,0,0,0,1"))
(rule "polySimp_sepNegMonomial" (formula "12") (term "0,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "12") (term "0,0,0,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,1,1,0,1,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "12") (term "1,1,0,1,1,0,1,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "12") (term "1,1,0,1,1,0,1,0,1,0,0,0,1"))
(rule "mul_literals" (formula "12") (term "0,1,1,0,1,1,0,1,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,1,1,0,1,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,1,1,0,1,0,1,0,0,0,1"))
(rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,0,0,0,1,0,0,1,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,0,0,1,0,0,1,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "12") (term "0,0,0,0,0,1,0,0,1,0,1,0,0,0,1"))
(rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,1,1,0,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "12") (term "0,0,1,1,0,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "12") (term "0,0,1,1,0,0,1,0,0,0,1"))
(rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,0,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "12") (term "0,0,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,1,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,1,0,1,0,0,0,1"))
(rule "eqSeqDef" (formula "12") (term "0,0,0,0,1") (inst "iv=iv"))
(rule "lenOfSeqConcat" (formula "12") (term "0,0,0,0,0,0,1"))
(builtin "One Step Simplification" (formula "12"))
(rule "polySimp_homoEq" (formula "12") (term "0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,0,1"))
(rule "polySimp_addComm0" (formula "12") (term "1,1,0,0,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0,0,1"))
(rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0,0,1"))
(rule "polySimp_addComm0" (formula "12") (term "0,0,0,0,0,0,0,1"))
(rule "lenOfSeqConcat" (formula "12") (term "1,1,0,0,1,0,0,0,0,1"))
(builtin "One Step Simplification" (formula "12"))
(rule "polySimp_addComm0" (formula "12") (term "1,1,0,0,1,0,0,0,0,1"))
(rule "lenOfSeqDef" (formula "12") (term "1,0,0,0,0,0,0,0,1"))
(rule "polySimp_elimSub" (formula "12") (term "1,1,0,0,0,0,0,0,0,1"))
(rule "times_zero_2" (formula "12") (term "1,1,1,0,0,0,0,0,0,0,1"))
(rule "add_zero_right" (formula "12") (term "1,1,0,0,0,0,0,0,0,1"))
(rule "getOfSeqDef" (formula "12") (term "1,1,0,1,0,0,0,0,1"))
(rule "castDel" (formula "12") (term "2,1,1,0,1,0,0,0,0,1"))
(rule "castDel" (formula "12") (term "1,1,1,0,1,0,0,0,0,1"))
(rule "add_zero_right" (formula "12") (term "0,2,1,1,1,0,1,0,0,0,0,1"))
(rule "polySimp_elimSub" (formula "12") (term "1,1,0,1,1,0,1,0,0,0,0,1"))
(rule "mul_literals" (formula "12") (term "1,1,1,0,1,1,0,1,0,0,0,0,1"))
(rule "add_zero_right" (formula "12") (term "1,1,0,1,1,0,1,0,0,0,0,1"))
(rule "lenOfSeqDef" (formula "12") (term "0,1,0,0,0,0,0,0,1"))
(rule "polySimp_elimSub" (formula "12") (term "1,0,1,0,0,0,0,0,0,1"))
(rule "times_zero_2" (formula "12") (term "1,1,0,1,0,0,0,0,0,0,1"))
(rule "add_zero_right" (formula "12") (term "1,0,1,0,0,0,0,0,0,1"))
(rule "lenOfSeqDef" (formula "12") (term "1,1,1,0,0,1,0,0,0,0,1"))
(rule "polySimp_elimSub" (formula "12") (term "1,1,1,1,0,0,1,0,0,0,0,1"))
(rule "mul_literals" (formula "12") (term "1,1,1,1,1,0,0,1,0,0,0,0,1"))
(rule "add_zero_right" (formula "12") (term "1,1,1,1,0,0,1,0,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "12") (term "0,1,0,0,0,0,0,0,0,1"))
(rule "add_zero_right" (formula "12") (term "0,0,1,0,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,1,1,0,1,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,1,1,0,1,0,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,1,0,0,0,0,0,0,1"))
(rule "add_zero_right" (formula "12") (term "0,0,0,1,0,0,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1,0,0,0,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "12") (term "0,1,1,1,0,0,1,0,0,0,0,1"))
(rule "add_zero_right" (formula "12") (term "0,0,1,1,1,0,0,1,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,1,1,0,0,1,0,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,1,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0,1,0,0,0,0,1"))
(rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0,1,0,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0,1,0,0,0,0,1"))
(rule "add_literals" (formula "12") (term "0,0,0,1,0,0,1,0,0,0,0,1"))
(rule "add_zero_left" (formula "12") (term "0,0,1,0,0,1,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,1,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,1,1,0,1,0,0,0,0,1"))
(rule "polySimp_sepNegMonomial" (formula "12") (term "0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "12") (term "0,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,1,1,0,1,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "12") (term "1,1,0,1,1,0,1,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "12") (term "1,1,0,1,1,0,1,0,0,0,0,1"))
(rule "mul_literals" (formula "12") (term "0,1,1,0,1,1,0,1,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,1,1,0,1,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,1,1,0,1,0,0,0,0,1"))
(rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,0,0,0,1,0,0,1,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,0,0,1,0,0,1,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "12") (term "0,0,0,0,0,1,0,0,1,0,0,0,0,1"))
(rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,1,1,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "12") (term "0,0,1,1,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "12") (term "0,0,1,1,0,0,0,0,0,1"))
(rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,0,0,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,0,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "12") (term "0,0,0,0,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,1,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,1,0,0,0,0,1"))
(rule "getOfSeqConcat" (formula "12") (term "0,1,0,1,0,0,0,0,1"))
(rule "polySimp_elimSub" (formula "12") (term "1,2,0,1,0,1,0,0,0,0,1"))
(rule "lenOfSeqDef" (formula "12") (term "1,0,0,1,0,1,0,0,0,0,1"))
(rule "polySimp_elimSub" (formula "12") (term "1,1,0,0,1,0,1,0,0,0,0,1"))
(rule "mul_literals" (formula "12") (term "1,1,1,0,0,1,0,1,0,0,0,0,1"))
(rule "add_zero_right" (formula "12") (term "1,1,0,0,1,0,1,0,0,0,0,1"))
(rule "getOfSeqDef" (formula "12") (term "1,0,1,0,1,0,0,0,0,1"))
(rule "castDel" (formula "12") (term "2,1,0,1,0,1,0,0,0,0,1"))
(rule "castDel" (formula "12") (term "1,1,0,1,0,1,0,0,0,0,1"))
(rule "add_zero_right" (formula "12") (term "0,2,1,1,0,1,0,1,0,0,0,0,1"))
(rule "polySimp_elimSub" (formula "12") (term "1,1,0,1,0,1,0,1,0,0,0,0,1"))
(rule "mul_literals" (formula "12") (term "1,1,1,0,1,0,1,0,1,0,0,0,0,1"))
(rule "add_zero_right" (formula "12") (term "1,1,0,1,0,1,0,1,0,0,0,0,1"))
(rule "getOfSeqSingleton" (formula "12") (term "2,0,1,0,1,0,0,0,0,1"))
(rule "castDel" (formula "12") (term "1,2,0,1,0,1,0,0,0,0,1"))
(rule "castDel" (formula "12") (term "2,2,0,1,0,1,0,0,0,0,1"))
(rule "lenOfSeqDef" (formula "12") (term "0,1,0,0,2,0,1,0,1,0,0,0,0,1"))
(rule "polySimp_elimSub" (formula "12") (term "1,0,1,0,0,2,0,1,0,1,0,0,0,0,1"))
(rule "mul_literals" (formula "12") (term "1,1,0,1,0,0,2,0,1,0,1,0,0,0,0,1"))
(rule "add_zero_right" (formula "12") (term "1,0,1,0,0,2,0,1,0,1,0,0,0,0,1"))
(rule "polySimp_addComm0" (formula "12") (term "0,0,2,0,1,0,1,0,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "12") (term "0,1,0,0,1,0,1,0,0,0,0,1"))
(rule "add_zero_right" (formula "12") (term "0,0,1,0,0,1,0,1,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,1,0,1,0,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,1,0,1,0,1,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,1,0,1,0,1,0,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0,0,0,2,0,1,0,1,0,0,0,0,1"))
(rule "add_zero_right" (formula "12") (term "0,0,0,0,0,0,2,0,1,0,1,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,0,2,0,1,0,1,0,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,1,0,1,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,1,0,1,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,1,0,1,0,1,0,0,0,0,1"))
(rule "polySimp_sepPosMonomial" (formula "12") (term "0,2,0,1,0,1,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "12") (term "1,0,2,0,1,0,1,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "12") (term "1,0,2,0,1,0,1,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,1,0,1,0,1,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "12") (term "1,1,0,1,0,1,0,1,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "12") (term "1,1,0,1,0,1,0,1,0,0,0,0,1"))
(rule "mul_literals" (formula "12") (term "0,1,1,0,1,0,1,0,1,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,1,0,1,0,1,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,1,0,1,0,1,0,0,0,0,1"))
(rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,0,1,0,0,0,0,1,0,1,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,1,0,0,0,0,1,0,1,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "12") (term "0,0,0,1,0,0,0,0,1,0,1,0,0,0,0,1"))
(rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,1,0,2,0,1,0,1,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "12") (term "0,0,1,0,2,0,1,0,1,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "12") (term "0,0,1,0,2,0,1,0,1,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,1,0,1,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,1,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,1,0,0,0,0,1"))
(rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,1,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1,0,1,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,1,0,1,0,0,0,0,1"))
(rule "getOfSeqConcat" (formula "12") (term "0,1,0,1,0,1,0,0,0,1"))
(rule "polySimp_elimSub" (formula "12") (term "1,2,0,1,0,1,0,1,0,0,0,1"))
(rule "getOfSeqDef" (formula "12") (term "1,0,1,0,1,0,1,0,0,0,1"))
(rule "castDel" (formula "12") (term "1,1,0,1,0,1,0,1,0,0,0,1"))
(rule "castDel" (formula "12") (term "2,1,0,1,0,1,0,1,0,0,0,1"))
(rule "add_zero_right" (formula "12") (term "0,2,1,1,0,1,0,1,0,1,0,0,0,1"))
(rule "polySimp_elimSub" (formula "12") (term "1,1,0,1,0,1,0,1,0,1,0,0,0,1"))
(rule "mul_literals" (formula "12") (term "1,1,1,0,1,0,1,0,1,0,1,0,0,0,1"))
(rule "add_zero_right" (formula "12") (term "1,1,0,1,0,1,0,1,0,1,0,0,0,1"))
(rule "lenOfSeqDef" (formula "12") (term "1,0,0,1,0,1,0,1,0,0,0,1"))
(rule "polySimp_elimSub" (formula "12") (term "1,1,0,0,1,0,1,0,1,0,0,0,1"))
(rule "mul_literals" (formula "12") (term "1,1,1,0,0,1,0,1,0,1,0,0,0,1"))
(rule "add_zero_right" (formula "12") (term "1,1,0,0,1,0,1,0,1,0,0,0,1"))
(rule "lenOfSeqDef" (formula "12") (term "0,1,1,2,0,1,0,1,0,1,0,0,0,1"))
(rule "polySimp_elimSub" (formula "12") (term "1,0,1,1,2,0,1,0,1,0,1,0,0,0,1"))
(rule "mul_literals" (formula "12") (term "1,1,0,1,1,2,0,1,0,1,0,1,0,0,0,1"))
(rule "add_zero_right" (formula "12") (term "1,0,1,1,2,0,1,0,1,0,1,0,0,0,1"))
(rule "polySimp_addComm0" (formula "12") (term "1,2,0,1,0,1,0,1,0,0,0,1"))
(rule "getOfSeqSingleton" (formula "12") (term "2,0,1,0,1,0,1,0,0,0,1"))
(rule "castDel" (formula "12") (term "1,2,0,1,0,1,0,1,0,0,0,1"))
(rule "castDel" (formula "12") (term "2,2,0,1,0,1,0,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,1,0,1,0,1,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,1,0,1,0,1,0,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "12") (term "0,1,0,0,1,0,1,0,1,0,0,0,1"))
(rule "add_zero_right" (formula "12") (term "0,0,1,0,0,1,0,1,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,1,0,1,0,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0,0,0,2,0,1,0,1,0,1,0,0,0,1"))
(rule "add_zero_right" (formula "12") (term "0,0,0,0,0,0,2,0,1,0,1,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,0,2,0,1,0,1,0,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,1,0,1,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,1,0,1,0,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,1,0,1,0,1,0,1,0,0,0,1"))
(rule "polySimp_sepPosMonomial" (formula "12") (term "0,2,0,1,0,1,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "12") (term "1,0,2,0,1,0,1,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "12") (term "1,0,2,0,1,0,1,0,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,1,0,1,0,1,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "12") (term "1,1,0,1,0,1,0,1,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "12") (term "1,1,0,1,0,1,0,1,0,1,0,0,0,1"))
(rule "mul_literals" (formula "12") (term "0,1,1,0,1,0,1,0,1,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,1,0,1,0,1,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,1,0,1,0,1,0,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,1,0,1,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,1,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,1,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,1,0,1,0,1,0,0,0,1"))
(rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,1,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,1,0,1,0,1,0,0,0,1"))
(rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,1,0,2,0,1,0,1,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "12") (term "0,0,1,0,2,0,1,0,1,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "12") (term "0,0,1,0,2,0,1,0,1,0,1,0,0,0,1"))
(rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,1,1,0,0,1,0,1,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "12") (term "0,0,1,1,0,0,1,0,1,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "12") (term "0,0,1,1,0,0,1,0,1,0,1,0,0,0,1"))
(rule "nnf_imp2or" (formula "12") (term "0,1,0,0,0,0,1"))
(rule "nnf_imp2or" (formula "12") (term "0,1,0,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "12") (term "0,0,1,0,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "12") (term "0,0,0,1,0,0,0,0,1"))
(rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0,1,0,0,0,0,1"))
(rule "add_zero_right" (formula "12") (term "0,0,0,0,0,1,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,1,0,0,0,0,1"))
(rule "mul_literals" (formula "12") (term "1,0,0,0,1,0,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "12") (term "1,0,0,1,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,1,0,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,1,0,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,1,0,0,0,0,1"))
(rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,1,0,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,1,0,0,0,0,1"))
(rule "mul_literals" (formula "12") (term "0,1,1,0,0,1,0,0,0,0,1"))
(rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,1,0,0,0,0,1"))
(rule "nnf_notAnd" (formula "12") (term "0,0,1,0,1,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "12") (term "1,0,0,1,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,1,0,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,1,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,1,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,1,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,1,0,1,0,0,0,1"))
(rule "mul_literals" (formula "12") (term "0,1,1,0,0,1,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,1,0,1,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "12") (term "0,0,0,1,0,1,0,0,0,1"))
(rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0,1,0,1,0,0,0,1"))
(rule "add_zero_right" (formula "12") (term "0,0,0,0,0,1,0,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,1,0,1,0,0,0,1"))
(rule "mul_literals" (formula "12") (term "1,0,0,0,1,0,1,0,0,0,1"))
(rule "Class_invariant_axiom_for_verif_functionalities_pkienc_Decryptor_EncryptionLog" (formula "8") (ifseqformula "3"))
(rule "andLeft" (formula "8"))
(rule "nonNull" (formula "9") (inst "i=i"))
(rule "sub_literals" (formula "9") (term "2,1,0,1,1"))
(builtin "One Step Simplification" (formula "9"))
(rule "greater_literals" (formula "9") (term "0,1"))
(builtin "One Step Simplification" (formula "9"))
(rule "andLeft" (formula "9"))
(rule "notLeft" (formula "9"))
(rule "narrowSelectArrayType" (formula "9") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "10"))
(rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
(rule "apply_eq_monomials" (formula "9") (term "1,0,0,1,0,0") (ifseqformula "7"))
(rule "polySimp_rightDist" (formula "9") (term "0,1,0,0,1,0,0"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,0,1,0,0"))
(rule "polySimp_pullOutFactor0b" (formula "9") (term "1,0,0,1,0,0"))
(rule "add_literals" (formula "9") (term "1,1,1,0,0,1,0,0"))
(rule "times_zero_1" (formula "9") (term "1,1,0,0,1,0,0"))
(rule "add_zero_right" (formula "9") (term "1,0,0,1,0,0"))
(rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
(rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
(rule "nonNull" (formula "8") (inst "i=i"))
(rule "greater_literals" (formula "8") (term "0,1"))
(builtin "One Step Simplification" (formula "8"))
(rule "sub_literals" (formula "8") (term "2,1,0,1"))
(builtin "One Step Simplification" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "notLeft" (formula "8"))
(rule "narrowSelectArrayType" (formula "8") (term "0,0,1,0") (ifseqformula "1") (ifseqformula "10"))
(rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
(rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
(rule "nnf_imp2or" (formula "9") (term "0"))
(rule "nnf_imp2or" (formula "8") (term "0"))
(rule "nnf_notAnd" (formula "9") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
(rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "9") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
(rule "mul_literals" (formula "9") (term "1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
(rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
(rule "nnf_notAnd" (formula "8") (term "0,0"))
(rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
(rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
(rule "mul_literals" (formula "8") (term "1,0,0,0"))
(rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
(rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
(rule "arrayLengthIsAShort" (formula "7") (term "0"))
(builtin "One Step Simplification" (formula "7"))
(rule "true_left" (formula "7"))
(rule "arrayLengthIsAShort" (formula "7") (term "1"))
(builtin "One Step Simplification" (formula "7"))
(rule "true_left" (formula "7"))
(rule "arrayLengthNotNegative" (formula "7") (term "1"))
(rule "arrayLengthNotNegative" (formula "8") (term "0"))
(rule "commute_or_2" (formula "11") (term "0"))
(rule "commute_or_2" (formula "10") (term "0"))
(rule "commute_or" (formula "11") (term "0,0"))
(rule "commute_or" (formula "10") (term "0,0"))
(rule "methodBodyExpand" (formula "17") (term "1") (newnames "heapBefore_add,savedHeapBefore_add,_cipherBefore_add,_plainBefore_add"))
(builtin "One Step Simplification" (formula "17"))
(rule "variableDeclarationAssign" (formula "17") (term "1"))
(rule "variableDeclaration" (formula "17") (term "1") (newnames "newPlain"))
(rule "methodCallWithAssignmentUnfoldArguments" (formula "17") (term "1"))
(rule "variableDeclarationAssign" (formula "17") (term "1"))
(rule "variableDeclaration" (formula "17") (term "1") (newnames "var"))
(rule "compound_addition_1" (formula "17") (term "1") (inst "#v=x"))
(rule "variableDeclarationAssign" (formula "17") (term "1"))
(rule "variableDeclaration" (formula "17") (term "1") (newnames "x"))
(rule "eval_order_access2" (formula "17") (term "1") (inst "#v0=x_arr_arr"))
(rule "variableDeclarationAssign" (formula "17") (term "1"))
(rule "variableDeclaration" (formula "17") (term "1") (newnames "x_arr_arr"))
(rule "assignment_read_attribute_this" (formula "17") (term "1"))
(builtin "One Step Simplification" (formula "17"))
(rule "assignment_read_length" (formula "17") (term "1"))
(branch "Normal Execution (x_arr_arr != null)"
   (builtin "One Step Simplification" (formula "18"))
   (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "13")))
   (rule "false_right" (formula "17"))
   (rule "assignmentAdditionInt" (formula "17") (term "1"))
   (builtin "One Step Simplification" (formula "17"))
   (rule "translateJavaAddInt" (formula "17") (term "0,1,0"))
   (rule "polySimp_addComm0" (formula "17") (term "0,1,0"))
   (builtin "Use Operation Contract" (formula "17") (newnames "heapBefore_newArray,result,exc_0,heapAfter_newArray,anon_heap_newArray") (contract "verif.functionalities.pkienc.Decryptor.EncryptionLog[verif.functionalities.pkienc.Decryptor.EncryptionLog::newArray(int)].JML normal_behavior operation contract.0"))
   (branch "Post (newArray)"
      (builtin "One Step Simplification" (formula "13"))
      (builtin "One Step Simplification" (formula "19"))
      (rule "andLeft" (formula "13"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "1,1,0") (ifseqformula "13"))
      (rule "andLeft" (formula "14"))
      (rule "andLeft" (formula "15"))
      (rule "andLeft" (formula "14"))
      (rule "andLeft" (formula "15"))
      (rule "andLeft" (formula "16"))
      (rule "andLeft" (formula "17"))
      (rule "andLeft" (formula "17"))
      (rule "notLeft" (formula "17"))
      (rule "notLeft" (formula "17"))
      (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "19"))
      (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "20")))
      (rule "polySimp_homoEq" (formula "15"))
      (rule "polySimp_addComm1" (formula "15") (term "0"))
      (rule "assignment" (formula "26") (term "1"))
      (builtin "One Step Simplification" (formula "26"))
      (rule "blockEmpty" (formula "26") (term "1"))
      (rule "variableDeclarationAssign" (formula "26") (term "1"))
      (rule "variableDeclaration" (formula "26") (term "1") (newnames "newCipher"))
      (rule "polySimp_sepPosMonomial" (formula "15"))
      (rule "polySimp_mulComm0" (formula "15") (term "1"))
      (rule "polySimp_rightDist" (formula "15") (term "1"))
      (rule "mul_literals" (formula "15") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
      (rule "polySimp_elimOne" (formula "15") (term "1,1"))
      (rule "Class_invariant_axiom_for_verif_functionalities_pkienc_Decryptor_EncryptionLog" (formula "17") (ifseqformula "3"))
      (rule "andLeft" (formula "17"))
      (rule "nonNull" (formula "17") (inst "i=i"))
      (rule "sub_literals" (formula "17") (term "2,1,0,1,1"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "greater_literals" (formula "17") (term "0,1"))
      (builtin "One Step Simplification" (formula "17"))
      (rule "andLeft" (formula "17"))
      (rule "notLeft" (formula "17"))
      (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
      (rule "nonNull" (formula "18") (inst "i=i"))
      (rule "greater_literals" (formula "18") (term "0,1"))
      (builtin "One Step Simplification" (formula "18"))
      (rule "sub_literals" (formula "18") (term "2,1,0,1"))
      (builtin "One Step Simplification" (formula "18"))
      (rule "andLeft" (formula "18"))
      (rule "notLeft" (formula "18"))
      (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
      (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
      (rule "pullOutSelect" (formula "17") (term "1,0,0,1,0") (inst "selectSK=verif_functionalities_pkienc_Decryptor_EncryptionLog_ciphertext_0"))
      (rule "simplifySelectOfAnonEQ" (formula "17") (ifseqformula "13"))
      (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "27")) (ifInst ""  (formula "2")))
      (rule "replaceKnownSelect_taclet00_0" (formula "22") (term "0"))
      (rule "replaceKnownSelect_taclet00_0" (formula "18") (term "0,1,1,1,0,0"))
      (rule "hideAuxiliaryEq" (formula "17"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "21") (term "0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "17") (term "1,0,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "17") (term "0,1,1,1,0,0"))
      (rule "pullOutSelect" (formula "18") (term "1,0,0,1,0") (inst "selectSK=verif_functionalities_pkienc_Decryptor_EncryptionLog_plaintext_0"))
      (rule "simplifySelectOfAnonEQ" (formula "18") (ifseqformula "13"))
      (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "26")) (ifInst ""  (formula "2")))
      (rule "replaceKnownSelect_taclet00_2" (formula "21") (term "0"))
      (rule "replaceKnownSelect_taclet00_2" (formula "19") (term "0,1,1,1,0,0"))
      (rule "hideAuxiliaryEq" (formula "18"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_3" (formula "20") (term "0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_3" (formula "18") (term "1,0,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_3" (formula "18") (term "0,1,1,1,0,0"))
      (rule "nnf_imp2or" (formula "17") (term "0"))
      (rule "nnf_imp2or" (formula "18") (term "0"))
      (rule "nnf_notAnd" (formula "17") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0"))
      (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
      (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
      (rule "mul_literals" (formula "17") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "17") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "17") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
      (rule "nnf_notAnd" (formula "18") (term "0,0"))
      (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
      (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
      (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
      (rule "mul_literals" (formula "18") (term "1,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
      (rule "apply_eq_monomials" (formula "18") (term "0,0,1,0,0") (ifseqformula "9"))
      (rule "polySimp_rightDist" (formula "18") (term "0,0,0,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,1,0,0"))
      (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "18") (term "1,1,0,0,1,0,0"))
      (rule "times_zero_1" (formula "18") (term "1,0,0,1,0,0"))
      (rule "add_zero_right" (formula "18") (term "0,0,1,0,0"))
      (rule "polySimp_mulComm0" (formula "18") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
      (rule "commute_or_2" (formula "17") (term "0"))
      (rule "commute_or_2" (formula "18") (term "0"))
      (rule "commute_or" (formula "17") (term "0,0"))
      (rule "commute_or" (formula "18") (term "0,0"))
      (rule "methodCallWithAssignmentUnfoldArguments" (formula "27") (term "1"))
      (rule "variableDeclarationAssign" (formula "27") (term "1"))
      (rule "variableDeclaration" (formula "27") (term "1") (newnames "var_1"))
      (rule "compound_addition_1" (formula "27") (term "1") (inst "#v=x"))
      (rule "variableDeclarationAssign" (formula "27") (term "1"))
      (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_1"))
      (rule "eval_order_array_access6" (formula "27") (term "1") (inst "#v0=x_arr_arr"))
      (rule "variableDeclarationAssign" (formula "27") (term "1"))
      (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_arr_arr_1"))
      (rule "assignment_read_attribute_this" (formula "27") (term "1"))
      (builtin "One Step Simplification" (formula "27"))
      (rule "replaceKnownSelect_taclet00_0" (formula "27") (term "0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "27") (term "0,1,0"))
      (rule "assignment_read_length" (formula "27") (term "1"))
      (branch "Normal Execution (x_arr_arr_1 != null)"
         (builtin "One Step Simplification" (formula "28"))
         (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "22")))
         (rule "false_right" (formula "27"))
         (rule "assignmentAdditionInt" (formula "27") (term "1"))
         (builtin "One Step Simplification" (formula "27"))
         (rule "translateJavaAddInt" (formula "27") (term "0,1,0"))
         (rule "polySimp_addComm0" (formula "27") (term "0,1,0"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "9") (term "0,0") (ifseqformula "1"))
         (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "24"))
         (builtin "One Step Simplification" (formula "9"))
         (rule "onlyCreatedObjectsAreReferenced" (formula "10") (term "0,1") (ifseqformula "1"))
         (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "24"))
         (builtin "One Step Simplification" (formula "10"))
         (builtin "Use Operation Contract" (formula "29") (newnames "heapBefore_newArray_0,result_0,exc_1,heapAfter_newArray_0,anon_heap_newArray_0") (contract "verif.functionalities.pkienc.Decryptor.EncryptionLog[verif.functionalities.pkienc.Decryptor.EncryptionLog::newArray(int)].JML normal_behavior operation contract.0"))
         (branch "Post (newArray)"
            (builtin "One Step Simplification" (formula "23"))
            (builtin "One Step Simplification" (formula "31"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "0,0,0,1,1,0,1,1") (ifseqformula "15"))
            (rule "andLeft" (formula "23"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "1,1,0") (ifseqformula "23"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,1,1,0") (ifseqformula "15"))
            (rule "andLeft" (formula "24"))
            (rule "andLeft" (formula "24"))
            (rule "andLeft" (formula "26"))
            (rule "andLeft" (formula "26"))
            (rule "andLeft" (formula "27"))
            (rule "andLeft" (formula "28"))
            (rule "andLeft" (formula "28"))
            (rule "notLeft" (formula "28"))
            (rule "notLeft" (formula "28"))
            (rule "orRight" (formula "30"))
            (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "29"))
            (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "30")) (ifInst ""  (formula "31")))
            (rule "polySimp_homoEq" (formula "26"))
            (rule "polySimp_addComm1" (formula "26") (term "0"))
            (rule "assignment" (formula "39") (term "1"))
            (builtin "One Step Simplification" (formula "39"))
            (rule "blockEmpty" (formula "39") (term "1"))
            (rule "variableDeclarationAssign" (formula "39") (term "1"))
            (rule "variableDeclaration" (formula "39") (term "1") (newnames "i"))
            (rule "assignment" (formula "39") (term "1"))
            (builtin "One Step Simplification" (formula "39"))
            (rule "polySimp_sepPosMonomial" (formula "26"))
            (rule "polySimp_mulComm0" (formula "26") (term "1"))
            (rule "polySimp_rightDist" (formula "26") (term "1"))
            (rule "mul_literals" (formula "26") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
            (rule "polySimp_elimOne" (formula "26") (term "1,1"))
            (rule "Class_invariant_axiom_for_verif_functionalities_pkienc_Decryptor_EncryptionLog" (formula "28") (ifseqformula "3"))
            (rule "andLeft" (formula "28"))
            (rule "nonNull" (formula "29") (inst "i=i_1"))
            (rule "greater_literals" (formula "29") (term "0,1"))
            (builtin "One Step Simplification" (formula "29"))
            (rule "sub_literals" (formula "29") (term "2,1,0,1"))
            (builtin "One Step Simplification" (formula "29"))
            (rule "andLeft" (formula "29"))
            (rule "notLeft" (formula "29"))
            (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
            (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
            (rule "nonNull" (formula "28") (inst "i=i_1"))
            (rule "sub_literals" (formula "28") (term "2,1,0,1,1"))
            (builtin "One Step Simplification" (formula "28"))
            (rule "greater_literals" (formula "28") (term "0,1"))
            (builtin "One Step Simplification" (formula "28"))
            (rule "andLeft" (formula "28"))
            (rule "notLeft" (formula "28"))
            (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
            (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
            (rule "pullOutSelect" (formula "29") (term "1,0,0,1,0") (inst "selectSK=verif_functionalities_pkienc_Decryptor_EncryptionLog_plaintext_1"))
            (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "23"))
            (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "40")))
            (rule "replaceKnownSelect_taclet0000_4" (formula "32") (term "0"))
            (rule "replaceKnownSelect_taclet00_2" (formula "29") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet00_3" (formula "29") (term "2,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,0,0") (ifseqformula "15"))
            (rule "replaceKnownSelect_taclet0000_4" (formula "30") (term "0,1,1,1,0,0"))
            (rule "replace_known_left" (formula "29") (term "0,0,0,0") (ifseqformula "2"))
            (builtin "One Step Simplification" (formula "29"))
            (rule "hideAuxiliaryEq" (formula "29"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_5" (formula "31") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_5" (formula "29") (term "1,0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_5" (formula "29") (term "0,1,1,1,0,0"))
            (rule "pullOutSelect" (formula "28") (term "1,0,0,1,0") (inst "selectSK=verif_functionalities_pkienc_Decryptor_EncryptionLog_ciphertext_1"))
            (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "23"))
            (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "39")))
            (rule "replaceKnownSelect_taclet0000_6" (formula "31") (term "0"))
            (rule "replaceKnownSelect_taclet00_0" (formula "28") (term "2,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "28") (term "2,0"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,0,0") (ifseqformula "15"))
            (rule "replaceKnownSelect_taclet0000_6" (formula "29") (term "0,1,1,1,0,0"))
            (rule "replace_known_left" (formula "28") (term "0,0,0,0") (ifseqformula "2"))
            (builtin "One Step Simplification" (formula "28"))
            (rule "hideAuxiliaryEq" (formula "28"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_7" (formula "30") (term "0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_7" (formula "28") (term "1,0,0,1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_7" (formula "28") (term "0,1,1,1,0,0"))
            (rule "nnf_imp2or" (formula "29") (term "0"))
            (rule "nnf_imp2or" (formula "28") (term "0"))
            (rule "nnf_notAnd" (formula "29") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "29") (term "0,0,1,0,0"))
            (rule "apply_eq_monomials" (formula "29") (term "0,0,1,0,0") (ifseqformula "11"))
            (rule "polySimp_rightDist" (formula "29") (term "0,0,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,1,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "29") (term "1,1,0,0,1,0,0"))
            (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "29") (term "0,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0,0"))
            (rule "apply_eq_monomials" (formula "29") (term "0,0,1,0,0") (ifseqformula "26"))
            (rule "polySimp_rightDist" (formula "29") (term "0,0,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,0,1,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "29") (term "1,1,0,0,1,0,0"))
            (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "29") (term "0,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "29") (term "0,0,1,0,0"))
            (rule "mul_literals" (formula "29") (term "0,0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0"))
            (rule "mul_literals" (formula "29") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0"))
            (rule "mul_literals" (formula "29") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "29") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
            (rule "mul_literals" (formula "29") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "28") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "28") (term "0,0,1,0,0"))
            (rule "apply_eq_monomials" (formula "28") (term "0,0,1,0,0") (ifseqformula "26"))
            (rule "polySimp_rightDist" (formula "28") (term "0,0,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,1,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "28") (term "1,1,0,0,1,0,0"))
            (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "28") (term "0,0,1,0,0"))
            (rule "polySimp_rightDist" (formula "28") (term "0,0,1,0,0"))
            (rule "mul_literals" (formula "28") (term "0,0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
            (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
            (rule "add_literals" (formula "28") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
            (rule "mul_literals" (formula "28") (term "1,0,0,0"))
            (rule "commute_or_2" (formula "29") (term "0"))
            (rule "for_to_while" (formula "40") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0"))
            (rule "commute_or_2" (formula "28") (term "0"))
            (rule "commute_or" (formula "29") (term "0,0"))
            (rule "commute_or" (formula "28") (term "0,0"))
            (rule "arrayLengthIsAShort" (formula "17") (term "1,1"))
            (builtin "One Step Simplification" (formula "17"))
            (rule "true_left" (formula "17"))
            (rule "arrayLengthNotNegative" (formula "17") (term "1,1"))
            (rule "arrayLengthNotNegative" (formula "27") (term "1,1"))
            (rule "arrayLengthIsAShort" (formula "28") (term "1,1"))
            (builtin "One Step Simplification" (formula "28"))
            (rule "true_left" (formula "28"))
            (builtin "Loop Invariant" (formula "42") (newnames "variant,b,heapBefore_LOOP,iBefore_LOOP,i_0,heap_After_LOOP,anon_heap_LOOP,o,f"))
            (branch "Invariant Initially Valid"
               (builtin "One Step Simplification" (formula "42"))
               (rule "wellFormedAnonEQ" (formula "42") (term "1") (ifseqformula "24"))
               (rule "wellFormedAnonEQ" (formula "42") (term "0,1") (ifseqformula "15"))
               (rule "replaceKnownSelect_taclet0000_6" (formula "42") (term "0,1,1,0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_7" (formula "42") (term "0,1,1,0,0"))
               (rule "leq_literals" (formula "42") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "1")) (ifInst ""  (formula "14")) (ifInst ""  (formula "23")))
               (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,1"))
               (rule "times_zero_1" (formula "42") (term "1,0,0,1,0,0,1"))
               (rule "add_zero_right" (formula "42") (term "0,0,1,0,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "42") (term "0"))
               (rule "replace_known_left" (formula "42") (term "0") (ifseqformula "7"))
               (builtin "One Step Simplification" (formula "42"))
               (rule "allRight" (formula "42") (inst "sk=j_1"))
               (rule "impRight" (formula "42"))
               (rule "andLeft" (formula "1"))
               (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "30"))
               (rule "applyEq" (formula "20") (term "0") (ifseqformula "13"))
               (rule "applyEq" (formula "10") (term "0") (ifseqformula "13"))
               (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "29"))
               (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "29"))
               (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "29"))
               (rule "applyEq" (formula "9") (term "0") (ifseqformula "29"))
               (rule "applyEq" (formula "29") (term "0") (ifseqformula "19"))
               (rule "polySimp_homoEq" (formula "29"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
               (rule "polySimp_rightDist" (formula "29") (term "1,0"))
               (rule "mul_literals" (formula "29") (term "0,1,0"))
               (rule "polySimp_addComm1" (formula "29") (term "0"))
               (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
               (rule "add_literals" (formula "29") (term "0,0,0"))
               (rule "add_zero_left" (formula "29") (term "0,0"))
               (rule "applyEq" (formula "12") (term "1") (ifseqformula "19"))
               (rule "polySimp_sepPosMonomial" (formula "29"))
               (rule "polySimp_mulLiterals" (formula "29") (term "1"))
               (rule "polySimp_elimOne" (formula "29") (term "1"))
               (rule "applyEq" (formula "28") (term "0") (ifseqformula "29"))
               (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "28"))
               (rule "applyEq" (formula "30") (term "1,1,1,0") (ifseqformula "28"))
               (rule "applyEq" (formula "21") (term "1,1,1,0") (ifseqformula "28"))
               (rule "applyEq" (formula "14") (term "1,1,1,0") (ifseqformula "28"))
               (rule "applyEq" (formula "22") (term "1,1,1,0") (ifseqformula "28"))
               (rule "applyEq" (formula "13") (term "1,1,1,0") (ifseqformula "28"))
               (rule "applyEq" (formula "31") (term "1,1,1,0") (ifseqformula "28"))
               (rule "inEqSimp_sepPosMonomial0" (formula "2"))
               (rule "mul_literals" (formula "2") (term "1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "9"))
               (rule "mul_literals" (formula "9") (term "1"))
               (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "9"))
               (rule "leq_literals" (formula "18") (term "0"))
               (builtin "One Step Simplification" (formula "18"))
               (rule "true_left" (formula "18"))
               (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
               (rule "qeq_literals" (formula "1") (term "0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "Body Preserves Invariant"
               (builtin "One Step Simplification" (formula "44"))
               (builtin "One Step Simplification" (formula "33"))
               (rule "translateJavaSubInt" (formula "44") (term "0,1,1,1,0,1"))
               (rule "translateJavaSubInt" (formula "44") (term "0,1,1,1,0,1,1"))
               (rule "andLeft" (formula "33"))
               (rule "impRight" (formula "45"))
               (rule "andLeft" (formula "34"))
               (rule "eqSymm" (formula "47") (term "0,1,0,1,0,0,1,1,0,1"))
               (rule "eqSymm" (formula "47") (term "1,1,0,1,0,0,1,1,0,1"))
               (rule "eqSymm" (formula "47") (term "1,0,0,1,0,1,1,0,1"))
               (rule "polySimp_elimSub" (formula "47") (term "0,1,1,1,0"))
               (rule "polySimp_elimSub" (formula "47") (term "0,1,1,1,0,1"))
               (rule "polySimp_addComm0" (formula "47") (term "0,1,1,1,0"))
               (rule "polySimp_addComm0" (formula "47") (term "0,1,1,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "47") (term "1,0,0,1,0,0,1,1,0,1"))
               (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1,0,0,1,0,0,1,1,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "47") (term "0,0,0,0,1,1,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "47") (term "1,0,0,0,1,1,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "47") (term "0,0,0,1,0,0,1,1,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "34"))
               (rule "inEqSimp_commuteLeq" (formula "35"))
               (rule "pullOutSelect" (formula "47") (term "0,1,0,1,1,1,0") (inst "selectSK=verif_functionalities_pkienc_Decryptor_EncryptionLog_ciphertext_4"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
               (rule "replaceKnownSelect_taclet10000_8" (formula "36") (term "0,0"))
               (rule "replaceKnownSelect_taclet0000_6" (formula "1") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_7" (formula "1") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "26"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "17"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "4"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "variableDeclarationAssign" (formula "2") (term "1"))
               (rule "variableDeclarationAssign" (formula "48") (term "1"))
               (rule "variableDeclaration" (formula "2") (term "1") (newnames "b_2"))
               (rule "variableDeclaration" (formula "48") (term "1") (newnames "exc_2"))
               (rule "assignment" (formula "48") (term "1"))
               (builtin "One Step Simplification" (formula "48"))
               (rule "variableDeclaration" (formula "48") (term "1") (newnames "thrownExc"))
               (rule "blockThrow" (formula "48") (term "1,0,0,1"))
               (rule "blockThrow" (formula "48") (term "1,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0"))
               (rule "mul_literals" (formula "37") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0,1,0,0,1,1,0,1"))
               (rule "polySimp_mulComm0" (formula "48") (term "1,1,0,0,1,0,0,1,1,0,1"))
               (rule "polySimp_rightDist" (formula "48") (term "1,1,0,0,1,0,0,1,1,0,1"))
               (rule "mul_literals" (formula "48") (term "0,1,1,0,0,1,0,0,1,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0,0,1,0,0,1,1,0,1"))
               (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0,0,1,0,0,1,1,0,1"))
               (rule "elementOfUnion" (formula "1") (term "0,0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "sortsDisjointModuloNull" (formula "1") (term "1,0,0"))
               (rule "replace_known_right" (formula "1") (term "1,1,0,0") (ifseqformula "41"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
               (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "45"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "replaceKnownAuxiliaryConstant_taclet10000_9" (formula "35") (term "0,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet10000_9" (formula "47") (term "0,1,0,1,1,1,0,0"))
               (rule "elementOfUnion" (formula "47") (term "0,0,0,0,1,0,1,1,0,1"))
               (builtin "One Step Simplification" (formula "47"))
               (rule "boxToDiamond" (formula "1") (term "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "commuteUnion" (formula "35") (term "1,0,0,0,1,0"))
               (rule "commuteUnion" (formula "35") (term "1,0,0,1,1,0"))
               (rule "commuteUnion" (formula "47") (term "1,0,1,0,1,1,0,0"))
               (rule "commuteUnion" (formula "36") (term "1,0,1,0"))
               (rule "nnf_imp2or" (formula "35") (term "0"))
               (rule "nnf_notAnd" (formula "35") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "35") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0"))
               (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "35") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
               (rule "mul_literals" (formula "35") (term "1,0,0,0"))
               (rule "nnf_imp2or" (formula "47") (term "0,1,0,0,1,1,0,1"))
               (rule "nnf_notAnd" (formula "47") (term "0,0,1,0,0,1,1,0,1"))
               (rule "inEqSimp_notGeq" (formula "47") (term "0,0,0,1,0,0,1,1,0,1"))
               (rule "times_zero_1" (formula "47") (term "1,0,0,0,0,0,1,0,0,1,1,0,1"))
               (rule "add_zero_right" (formula "47") (term "0,0,0,0,0,1,0,0,1,1,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0,0,1,0,0,1,1,0,1"))
               (rule "mul_literals" (formula "47") (term "1,0,0,0,1,0,0,1,1,0,1"))
               (rule "inEqSimp_notLeq" (formula "47") (term "1,0,0,1,0,0,1,1,0,1"))
               (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,0,0,1,0,0,1,1,0,1"))
               (rule "mul_literals" (formula "47") (term "0,1,0,0,1,0,0,1,0,0,1,1,0,1"))
               (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,0,1,0,0,1,1,0,1"))
               (rule "add_literals" (formula "47") (term "0,0,0,1,0,0,1,0,0,1,1,0,1"))
               (rule "add_zero_left" (formula "47") (term "0,0,1,0,0,1,0,0,1,1,0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "1,0,0,1,0,0,1,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0,1,0,0,1,1,0,1"))
               (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0,1,0,0,1,1,0,1"))
               (rule "commute_and" (formula "35") (term "1,0"))
               (rule "cnf_rightDist" (formula "35") (term "0"))
               (rule "distr_forallAnd" (formula "35"))
               (rule "andLeft" (formula "35"))
               (rule "commute_or_2" (formula "35") (term "0"))
               (rule "shift_paren_or" (formula "36") (term "0"))
               (rule "commute_or" (formula "35") (term "0,0"))
               (rule "compound_less_than_comparison_2" (formula "37") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
               (rule "variableDeclarationAssign" (formula "37") (term "1"))
               (rule "variableDeclaration" (formula "37") (term "1") (newnames "x_6"))
               (rule "assignment" (formula "37") (term "1"))
               (builtin "One Step Simplification" (formula "37"))
               (rule "variableDeclarationAssign" (formula "37") (term "1"))
               (rule "variableDeclaration" (formula "37") (term "1") (newnames "x_7"))
               (rule "eval_order_access2" (formula "37") (term "1") (inst "#v0=x_arr_arr"))
               (rule "variableDeclarationAssign" (formula "37") (term "1"))
               (rule "variableDeclaration" (formula "37") (term "1") (newnames "x_arr_arr_3"))
               (rule "assignment_read_attribute_this" (formula "37") (term "1"))
               (builtin "One Step Simplification" (formula "37"))
               (rule "pullOutSelect" (formula "37") (term "0,1,0") (inst "selectSK=verif_functionalities_pkienc_Decryptor_EncryptionLog_ciphertext_5"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
               (rule "replaceKnownSelect_taclet0000_6" (formula "1") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_7" (formula "1") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "25"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "16"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "3"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "assignment_read_length" (formula "38") (term "1"))
               (branch "Normal Execution (x_arr_arr_3 != null)"
                  (builtin "One Step Simplification" (formula "39"))
                  (builtin "One Step Simplification" (formula "38"))
                  (rule "elementOfUnion" (formula "1") (term "0,0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "sortsDisjointModuloNull" (formula "1") (term "0,0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "47"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                  (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                  (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "40"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet010000_11" (formula "37") (term "0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet010000_11" (formula "37") (term "0,0,1,0"))
                  (rule "less_than_comparison_simple" (formula "37") (term "1"))
                  (builtin "One Step Simplification" (formula "37"))
                  (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "37") (term "0,0,0,1,0"))
                  (rule "apply_eq_monomials" (formula "37") (term "1,0,0,0,1,0") (ifseqformula "28"))
                  (rule "polySimp_rightDist" (formula "37") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "37") (term "1,0,1,0,0,0,1,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "37") (term "1,0,0,0,1,0"))
                  (rule "add_literals" (formula "37") (term "1,1,1,0,0,0,1,0"))
                  (rule "times_zero_1" (formula "37") (term "1,1,0,0,0,1,0"))
                  (rule "add_zero_right" (formula "37") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "37") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "37") (term "0,0,0,0,1,0"))
                  (rule "add_literals" (formula "37") (term "0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "37") (term "0,0,0,1,0"))
                  (rule "methodCallEmpty" (formula "37") (term "1"))
                  (builtin "One Step Simplification" (formula "37"))
                  (rule "emptyModality" (formula "37") (term "1"))
                  (builtin "One Step Simplification" (formula "37"))
                  (rule "notRight" (formula "37"))
                  (rule "ifUnfold" (formula "48") (term "1") (inst "#boolv=x"))
                  (rule "variableDeclaration" (formula "48") (term "1") (newnames "x_8"))
                  (rule "compound_less_than_comparison_2" (formula "48") (term "1") (inst "#v1=x_10") (inst "#v0=x_9"))
                  (rule "variableDeclarationAssign" (formula "48") (term "1"))
                  (rule "variableDeclaration" (formula "48") (term "1") (newnames "x_9"))
                  (rule "assignment" (formula "48") (term "1"))
                  (builtin "One Step Simplification" (formula "48"))
                  (rule "variableDeclarationAssign" (formula "48") (term "1"))
                  (rule "variableDeclaration" (formula "48") (term "1") (newnames "x_10"))
                  (rule "eval_order_access2" (formula "48") (term "1") (inst "#v0=x_arr_arr"))
                  (rule "variableDeclarationAssign" (formula "48") (term "1"))
                  (rule "variableDeclaration" (formula "48") (term "1") (newnames "x_arr_arr_4"))
                  (rule "assignment_read_attribute_this" (formula "48") (term "1"))
                  (builtin "One Step Simplification" (formula "48"))
                  (rule "replaceKnownSelect_taclet10000_10" (formula "48") (term "0,1,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet010000_11" (formula "48") (term "0,1,0"))
                  (rule "assignment_read_length" (formula "48") (term "1"))
                  (branch "Normal Execution (x_arr_arr_4 != null)"
                     (builtin "One Step Simplification" (formula "49"))
                     (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "43")))
                     (rule "false_right" (formula "48"))
                     (rule "less_than_comparison_simple" (formula "48") (term "1"))
                     (builtin "One Step Simplification" (formula "48"))
                     (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,1,0"))
                     (rule "polySimp_addComm1" (formula "48") (term "0,0,0,1,0"))
                     (rule "apply_eq_monomials" (formula "48") (term "1,0,0,0,1,0") (ifseqformula "29"))
                     (rule "polySimp_rightDist" (formula "48") (term "0,1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "48") (term "1,0,1,0,0,0,1,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "48") (term "1,0,0,0,1,0"))
                     (rule "add_literals" (formula "48") (term "1,1,1,0,0,0,1,0"))
                     (rule "times_zero_1" (formula "48") (term "1,1,0,0,0,1,0"))
                     (rule "add_zero_right" (formula "48") (term "1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "48") (term "0,1,0,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "48") (term "0,0,0,1,0"))
                     (rule "polySimp_addComm1" (formula "48") (term "0,0,0,0,1,0"))
                     (rule "add_literals" (formula "48") (term "0,0,0,0,0,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "48") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "48") (term "0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "48") (term "0,0,0,1,0"))
                     (rule "replace_known_left" (formula "48") (term "0,0,1,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "48"))
                     (rule "ifSplit" (formula "48"))
                     (branch "if x_8 true"
                        (builtin "One Step Simplification" (formula "49"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "eval_order_array_access3" (formula "48") (term "1") (inst "#v1=x_arr") (inst "#v2=x") (inst "#v0=x_arr_arr"))
                        (rule "variableDeclarationAssign" (formula "48") (term "1"))
                        (rule "variableDeclaration" (formula "48") (term "1") (newnames "x_arr_arr_5"))
                        (rule "assignment" (formula "48") (term "1"))
                        (builtin "One Step Simplification" (formula "48"))
                        (rule "variableDeclarationAssign" (formula "48") (term "1"))
                        (rule "variableDeclaration" (formula "48") (term "1") (newnames "x_11"))
                        (rule "assignment" (formula "48") (term "1"))
                        (builtin "One Step Simplification" (formula "48"))
                        (rule "ifUnfold" (formula "48") (term "1") (inst "#boolv=x_12"))
                        (rule "variableDeclaration" (formula "48") (term "1") (newnames "x_12"))
                        (rule "compound_assignment_5_nonsimple" (formula "48") (term "1"))
                        (rule "ifElseUnfold" (formula "48") (term "1") (inst "#boolv=x_13"))
                        (rule "variableDeclaration" (formula "48") (term "1") (newnames "x_13"))
                        (rule "compound_less_equal_than_comparison_1" (formula "48") (term "1") (inst "#v0=x_14"))
                        (rule "variableDeclarationAssign" (formula "48") (term "1"))
                        (rule "variableDeclaration" (formula "48") (term "1") (newnames "x_14"))
                        (rule "eval_order_access2" (formula "48") (term "1") (inst "#v0=x_arr_arr_6"))
                        (rule "variableDeclarationAssign" (formula "48") (term "1"))
                        (rule "variableDeclaration" (formula "48") (term "1") (newnames "x_arr_arr_6"))
                        (rule "remove_parentheses_right" (formula "48") (term "1"))
                        (rule "assignment" (formula "48") (term "1"))
                        (builtin "One Step Simplification" (formula "48"))
                        (rule "assignment_read_length" (formula "48") (term "1"))
                        (branch "Normal Execution (x_arr_arr_6 != null)"
                           (builtin "One Step Simplification" (formula "49"))
                           (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "38")))
                           (rule "false_right" (formula "48"))
                           (rule "less_equal_than_comparison_simple" (formula "48") (term "1"))
                           (builtin "One Step Simplification" (formula "48"))
                           (rule "inEqSimp_contradInEq1" (formula "48") (term "0,0,1,0") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "48") (term "0,0,0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,0,0,1,0"))
                           (rule "add_literals" (formula "48") (term "1,1,0,0,0,0,1,0"))
                           (rule "times_zero_1" (formula "48") (term "1,0,0,0,0,1,0"))
                           (rule "add_zero_right" (formula "48") (term "0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "48") (term "0,0,0,1,0"))
                           (builtin "One Step Simplification" (formula "48"))
                           (rule "ifElseSplit" (formula "48"))
                           (branch "if x_13 true"
                              (builtin "One Step Simplification" (formula "49"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "if x_13 false"
                              (builtin "One Step Simplification" (formula "49"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "less_than_comparison_simple" (formula "48") (term "1"))
                              (builtin "One Step Simplification" (formula "48"))
                              (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0,1,0"))
                              (rule "mul_literals" (formula "48") (term "1,0,0,0,0,1,0"))
                              (rule "add_zero_right" (formula "48") (term "0,0,0,0,1,0"))
                              (rule "blockEmpty" (formula "48") (term "1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0,1,0"))
                              (rule "mul_literals" (formula "48") (term "1,0,0,1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "48") (term "0,0,1,0") (ifseqformula "34"))
                              (rule "qeq_literals" (formula "48") (term "0,0,0,1,0"))
                              (builtin "One Step Simplification" (formula "48"))
                              (rule "ifSplit" (formula "48"))
                              (branch "if x_12 true"
                                 (builtin "One Step Simplification" (formula "49"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "if x_12 false"
                                 (builtin "One Step Simplification" (formula "49"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "variableDeclarationAssign" (formula "48") (term "1"))
                                 (rule "variableDeclaration" (formula "48") (term "1") (newnames "x_arr"))
                                 (rule "eval_order_array_access4" (formula "48") (term "1") (inst "#v0=x_arr_arr_6"))
                                 (rule "variableDeclarationAssign" (formula "48") (term "1"))
                                 (rule "variableDeclaration" (formula "48") (term "1") (newnames "x_arr_arr_7"))
                                 (rule "assignment_read_attribute_this" (formula "48") (term "1"))
                                 (builtin "One Step Simplification" (formula "48"))
                                 (rule "replaceKnownSelect_taclet10000_10" (formula "48") (term "0,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet010000_11" (formula "48") (term "0,1,0"))
                                 (rule "assignment_array2" (formula "48") (term "1"))
                                 (branch "Normal Execution (x_arr_arr_7 != null)"
                                    (builtin "One Step Simplification" (formula "49"))
                                    (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "43")))
                                    (rule "orRight" (formula "48"))
                                    (rule "inEqSimp_ltRight" (formula "49"))
                                    (rule "times_zero_1" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_leqRight" (formula "48"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "pullOutSelect" (formula "49") (term "0,1,0") (inst "selectSK=arr_0"))
                                    (rule "simplifySelectOfAnon" (formula "1"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "27"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "18"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "13"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "assignment_to_reference_array_component" (formula "50") (term "1"))
                                    (branch "Normal Execution (x_arr_arr_5 != null)"
                                       (builtin "One Step Simplification" (formula "51"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")) (ifInst ""  (formula "37")))
                                       (rule "andLeft" (formula "1"))
                                       (rule "array_store_known_dynamic_array_type" (formula "2") (ifseqformula "34"))
                                       (rule "typeEqDerived2" (formula "2") (term "0,1") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "true_left" (formula "2"))
                                       (rule "inEqSimp_ltToLeq" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "eval_order_array_access3" (formula "51") (term "1") (inst "#v1=x_arr") (inst "#v2=x") (inst "#v0=x_arr_arr"))
                                       (rule "variableDeclarationAssign" (formula "51") (term "1"))
                                       (rule "variableDeclaration" (formula "51") (term "1") (newnames "x_arr_arr_8"))
                                       (rule "assignment" (formula "51") (term "1"))
                                       (builtin "One Step Simplification" (formula "51"))
                                       (rule "variableDeclarationAssign" (formula "51") (term "1"))
                                       (rule "variableDeclaration" (formula "51") (term "1") (newnames "x_17"))
                                       (rule "assignment" (formula "51") (term "1"))
                                       (builtin "One Step Simplification" (formula "51"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "mul_literals" (formula "3") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "38") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq0" (formula "38") (term "0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0"))
                                       (rule "add_literals" (formula "38") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "38") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "38") (term "0,0"))
                                       (rule "qeq_literals" (formula "38") (term "0"))
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "true_left" (formula "38"))
                                       (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "qeq_literals" (formula "1") (term "0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "elementOfUnion" (formula "1") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "19"))
                                       (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "14"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")) (ifInst ""  (formula "14")))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0011000010000_15" (formula "1") (term "2,0"))
                                       (rule "ifUnfold" (formula "49") (term "1") (inst "#boolv=x_18"))
                                       (rule "variableDeclaration" (formula "49") (term "1") (newnames "x_18"))
                                       (rule "compound_assignment_5_nonsimple" (formula "49") (term "1"))
                                       (rule "ifElseUnfold" (formula "49") (term "1") (inst "#boolv=x_19"))
                                       (rule "variableDeclaration" (formula "49") (term "1") (newnames "x_19"))
                                       (rule "compound_less_equal_than_comparison_1" (formula "49") (term "1") (inst "#v0=x_20"))
                                       (rule "variableDeclarationAssign" (formula "49") (term "1"))
                                       (rule "variableDeclaration" (formula "49") (term "1") (newnames "x_20"))
                                       (rule "eval_order_array_access6" (formula "49") (term "1") (inst "#v0=x_arr_arr_9"))
                                       (rule "variableDeclarationAssign" (formula "49") (term "1"))
                                       (rule "variableDeclaration" (formula "49") (term "1") (newnames "x_arr_arr_9"))
                                       (rule "remove_parentheses_right" (formula "49") (term "1"))
                                       (rule "assignment" (formula "49") (term "1"))
                                       (builtin "One Step Simplification" (formula "49"))
                                       (rule "assignment_read_length" (formula "49") (term "1"))
                                       (branch "Normal Execution (x_arr_arr_9 != null)"
                                          (builtin "One Step Simplification" (formula "50"))
                                          (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "42")))
                                          (rule "false_right" (formula "49"))
                                          (rule "less_equal_than_comparison_simple" (formula "49") (term "1"))
                                          (builtin "One Step Simplification" (formula "49"))
                                          (rule "ifElseSplit" (formula "49"))
                                          (branch "if x_19 true"
                                             (builtin "One Step Simplification" (formula "50"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "ifEnterThen" (formula "50") (term "1"))
                                             (rule "assignment" (formula "50") (term "1"))
                                             (builtin "One Step Simplification" (formula "50"))
                                             (rule "blockThrow" (formula "50") (term "1"))
                                             (rule "blockThrow" (formula "50") (term "1"))
                                             (builtin "One Step Simplification" (formula "50"))
                                             (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "1"))
                                             (rule "mul_literals" (formula "21") (term "0,0"))
                                             (rule "add_zero_left" (formula "21") (term "0"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "2") (term "1,0") (ifseqformula "36"))
                                             (rule "onlyCreatedObjectsAreReferenced" (formula "3") (term "2,0") (ifseqformula "6"))
                                             (rule "methodCallThrow" (formula "52") (term "1,0,0,1"))
                                             (builtin "One Step Simplification" (formula "52"))
                                             (rule "tryCatchThrow" (formula "52") (term "1,0,0,1"))
                                             (rule "ifElseUnfold" (formula "52") (term "1,0,0,1") (inst "#boolv=x"))
                                             (rule "variableDeclaration" (formula "52") (term "1,0,0,1") (newnames "x_24"))
                                             (rule "equality_comparison_simple" (formula "52") (term "1,0,0,1"))
                                             (rule "throwUnfold" (formula "52") (term "1") (inst "#v0=a"))
                                             (rule "variableDeclarationAssign" (formula "52") (term "1"))
                                             (rule "variableDeclaration" (formula "52") (term "1") (newnames "a_16"))
                                             (rule "instanceCreationAssignment" (formula "52") (term "1") (inst "#v0=a_17"))
                                             (rule "variableDeclarationAssign" (formula "52") (term "1"))
                                             (rule "variableDeclaration" (formula "52") (term "1") (newnames "a_17"))
                                             (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "52") (term "1") (inst "#v0=a_18"))
                                             (rule "variableDeclaration" (formula "52") (term "1") (newnames "a_18"))
                                             (rule "methodBodyExpand" (formula "52") (term "1") (newnames "heapBefore_<createObject>_3,savedHeapBefore_<createObject>_3"))
                                             (builtin "One Step Simplification" (formula "52"))
                                             (rule "variableDeclaration" (formula "52") (term "1") (newnames "__NEW___4"))
                                             (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "52") (term "1") (inst "#v0=a_19"))
                                             (rule "variableDeclaration" (formula "52") (term "1") (newnames "a_19"))
                                             (rule "allocateInstance" (formula "52"))
                                             (builtin "One Step Simplification" (formula "53"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "andLeft" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0,0,1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1") (ifseqformula "32"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1") (ifseqformula "23"))
                                             (rule "blockEmpty" (formula "55") (term "1"))
                                             (rule "assignment" (formula "55") (term "1"))
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "wellFormedStoreArray" (formula "1") (term "0"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "wellFormedAnon" (formula "1") (term "0,0,0"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0") (ifseqformula "32"))
                                             (rule "wellFormedAnonEQ" (formula "1") (term "0,0,0,0") (ifseqformula "32"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0") (ifseqformula "23"))
                                             (rule "wellFormedAnonEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "23"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "9"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "22")) (ifInst ""  (formula "31")) (ifInst ""  (formula "40")))
                                             (rule "array_store_known_dynamic_array_type" (formula "1") (term "1,1,0") (ifseqformula "37"))
                                             (rule "typeEqDerived2" (formula "1") (term "0,1,1,1,0") (ifseqformula "6"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "commute_or_2" (formula "1") (term "1,0"))
                                             (rule "commute_or_2" (formula "1") (term "0,1"))
                                             (rule "shift_paren_or" (formula "1") (term "0"))
                                             (rule "commute_or_2" (formula "1") (term "0,0,1"))
                                             (rule "shift_paren_or" (formula "1") (term "0,0"))
                                             (rule "shift_paren_or" (formula "1") (term "0,0,0"))
                                             (rule "commute_or_2" (formula "1") (term "0,0"))
                                             (rule "methodBodyExpand" (formula "55") (term "1") (newnames "heapBefore_<create>_3,savedHeapBefore_<create>_3"))
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "assignment_write_attribute_this" (formula "55") (term "1"))
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "methodCallWithinClass" (formula "55") (term "1"))
                                             (rule "methodBodyExpand" (formula "55") (term "1") (newnames "heapBefore_<prepareEnter>_3,savedHeapBefore_<prepareEnter>_3"))
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "methodCallSuper" (formula "55") (term "1"))
                                             (rule "methodBodyExpand" (formula "55") (term "1") (newnames "heapBefore_<prepare>_19,savedHeapBefore_<prepare>_19"))
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "methodCallSuper" (formula "55") (term "1"))
                                             (rule "methodBodyExpand" (formula "55") (term "1") (newnames "heapBefore_<prepare>_20,savedHeapBefore_<prepare>_20"))
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "methodCallSuper" (formula "55") (term "1"))
                                             (rule "methodBodyExpand" (formula "55") (term "1") (newnames "heapBefore_<prepare>_21,savedHeapBefore_<prepare>_21"))
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "methodCallSuper" (formula "55") (term "1"))
                                             (rule "methodBodyExpand" (formula "55") (term "1") (newnames "heapBefore_<prepare>_22,savedHeapBefore_<prepare>_22"))
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "methodCallSuper" (formula "55") (term "1"))
                                             (rule "methodBodyExpand" (formula "55") (term "1") (newnames "heapBefore_<prepare>_23,savedHeapBefore_<prepare>_23"))
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "methodCallEmpty" (formula "55") (term "1"))
                                             (rule "blockEmpty" (formula "55") (term "1"))
                                             (rule "assignment_write_attribute_this" (formula "55") (term "1"))
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "castDel" (formula "55") (term "1,0,1,0"))
                                             (rule "assignment_write_attribute_this" (formula "55") (term "1"))
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "castDel" (formula "55") (term "1,0,1,0"))
                                             (rule "methodCallEmpty" (formula "55") (term "1"))
                                             (rule "methodCallEmpty" (formula "55") (term "1"))
                                             (rule "methodCallEmpty" (formula "55") (term "1"))
                                             (rule "methodCallEmpty" (formula "55") (term "1"))
                                             (rule "methodCallEmpty" (formula "55") (term "1"))
                                             (rule "blockEmpty" (formula "55") (term "1"))
                                             (rule "methodCallReturnIgnoreResult" (formula "55") (term "1"))
                                             (rule "methodCallReturn" (formula "55") (term "1"))
                                             (rule "assignment" (formula "55") (term "1"))
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "methodCallEmpty" (formula "55") (term "1"))
                                             (rule "blockEmpty" (formula "55") (term "1"))
                                             (rule "assignment" (formula "55") (term "1"))
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "methodBodyExpand" (formula "55") (term "1") (newnames "heapBefore_<init>_23,savedHeapBefore_<init>_23"))
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "methodCallSuper" (formula "55") (term "1"))
                                             (rule "methodBodyExpand" (formula "55") (term "1") (newnames "heapBefore_<init>_24,savedHeapBefore_<init>_24"))
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "methodCallSuper" (formula "55") (term "1"))
                                             (rule "methodBodyExpand" (formula "55") (term "1") (newnames "heapBefore_<init>_25,savedHeapBefore_<init>_25"))
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "methodCallSuper" (formula "55") (term "1"))
                                             (rule "methodBodyExpand" (formula "55") (term "1") (newnames "heapBefore_<init>_26,savedHeapBefore_<init>_26"))
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "methodCallSuper" (formula "55") (term "1"))
                                             (rule "methodBodyExpand" (formula "55") (term "1") (newnames "heapBefore_<init>_27,savedHeapBefore_<init>_27"))
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "methodCallSuper" (formula "55") (term "1"))
                                             (rule "methodBodyExpand" (formula "55") (term "1") (newnames "heapBefore_<init>_28,savedHeapBefore_<init>_28"))
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "methodCallEmpty" (formula "55") (term "1"))
                                             (rule "blockEmpty" (formula "55") (term "1"))
                                             (rule "assignment_write_attribute_this" (formula "55") (term "1"))
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "castDel" (formula "55") (term "1,0,1,0"))
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "assignment_write_attribute_this" (formula "55") (term "1"))
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "castDel" (formula "55") (term "1,0,1,0"))
                                             (builtin "One Step Simplification" (formula "55"))
                                             (rule "methodCallEmpty" (formula "55") (term "1"))
                                             (rule "methodCallEmpty" (formula "55") (term "1"))
                                             (rule "methodCallEmpty" (formula "55") (term "1"))
                                             (rule "methodCallEmpty" (formula "55") (term "1"))
                                             (rule "methodCallEmpty" (formula "55") (term "1"))
                                             (rule "blockEmpty" (formula "55") (term "1"))
                                             (rule "assignment_write_attribute" (formula "55") (term "1"))
                                             (branch "Normal Execution (a_17 != null)"
                                                (builtin "One Step Simplification" (formula "56"))
                                                (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "44")))
                                                (rule "false_right" (formula "55"))
                                                (rule "assignment" (formula "55") (term "1"))
                                                (builtin "One Step Simplification" (formula "55"))
                                                (rule "tryCatchThrow" (formula "55") (term "1"))
                                                (rule "ifElseUnfold" (formula "55") (term "1") (inst "#boolv=x"))
                                                (rule "variableDeclaration" (formula "55") (term "1") (newnames "x_25"))
                                                (rule "equality_comparison_simple" (formula "55") (term "1"))
                                                (builtin "One Step Simplification" (formula "55"))
                                                (rule "replace_known_right" (formula "55") (term "0,0,1,0") (ifseqformula "44"))
                                                (builtin "One Step Simplification" (formula "55"))
                                                (rule "ifElseSplit" (formula "55"))
                                                (branch "if x_25 true"
                                                   (builtin "One Step Simplification" (formula "56"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                                (branch "if x_25 false"
                                                   (builtin "One Step Simplification" (formula "56"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "ifElseSplit" (formula "55"))
                                                   (branch "if a_16 instanceof java.lang.Throwable true"
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "variableDeclaration" (formula "55") (term "1") (newnames "e_6"))
                                                      (rule "reference_type_cast" (formula "55") (term "1"))
                                                      (branch "Normal Execution (a_16 instanceof java.lang.Throwable)"
                                                         (builtin "One Step Simplification" (formula "56"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "assignment" (formula "55") (term "1"))
                                                         (builtin "One Step Simplification" (formula "55"))
                                                         (rule "assignment" (formula "55") (term "1"))
                                                         (builtin "One Step Simplification" (formula "55"))
                                                         (rule "methodCallEmpty" (formula "55") (term "1"))
                                                         (rule "emptyModality" (formula "55") (term "1"))
                                                         (builtin "One Step Simplification" (formula "55"))
                                                         (rule "replace_known_right" (formula "55") (term "0,0,1,0") (ifseqformula "44"))
                                                         (builtin "One Step Simplification" (formula "55"))
                                                         (rule "ifElseSplit" (formula "55"))
                                                         (branch "if x_24 true"
                                                            (builtin "One Step Simplification" (formula "56"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "closeFalse" (formula "1"))
                                                         )
                                                         (branch "if x_24 false"
                                                            (builtin "One Step Simplification" (formula "56"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "ifElseSplit" (formula "55"))
                                                            (branch "if thrownExc instanceof java.lang.Throwable true"
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                                                               (rule "true_left" (formula "1"))
                                                               (rule "variableDeclaration" (formula "55") (term "1") (newnames "e_7"))
                                                               (rule "reference_type_cast" (formula "55") (term "1"))
                                                               (branch "Normal Execution (thrownExc instanceof java.lang.Throwable)"
                                                                  (builtin "One Step Simplification" (formula "56"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "true_left" (formula "1"))
                                                                  (rule "assignment" (formula "55") (term "1"))
                                                                  (builtin "One Step Simplification" (formula "55"))
                                                                  (rule "emptyModality" (formula "55") (term "1"))
                                                                  (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "44")))
                                                                  (rule "false_right" (formula "55"))
                                                                  (rule "applyEq" (formula "15") (term "0") (ifseqformula "36"))
                                                                  (rule "applyEq" (formula "26") (term "0") (ifseqformula "19"))
                                                                  (rule "applyEq" (formula "7") (term "0") (ifseqformula "36"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "7"))
                                                                  (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                                  (rule "mul_literals" (formula "7") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                                  (rule "add_literals" (formula "7") (term "0,0,0"))
                                                                  (rule "applyEq" (formula "29") (term "1,1,0") (ifseqformula "36"))
                                                                  (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "36"))
                                                                  (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "36"))
                                                                  (rule "applyEq" (formula "28") (term "1,1,0") (ifseqformula "36"))
                                                                  (rule "applyEq" (formula "16") (term "0") (ifseqformula "19"))
                                                                  (rule "applyEq" (formula "26") (term "0") (ifseqformula "36"))
                                                                  (rule "polySimp_homoEq" (formula "26"))
                                                                  (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                                                  (rule "mul_literals" (formula "26") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                                                  (rule "add_literals" (formula "26") (term "0,0,0"))
                                                                  (rule "add_zero_left" (formula "26") (term "0,0"))
                                                                  (rule "applyEq" (formula "19") (term "1") (ifseqformula "36"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "26"))
                                                                  (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "26") (term "0"))
                                                                  (rule "applyEq" (formula "39") (term "1,1,1,0") (ifseqformula "26"))
                                                                  (rule "applyEq" (formula "29") (term "1,1,1,0") (ifseqformula "26"))
                                                                  (rule "applyEq" (formula "28") (term "1,1,1,0") (ifseqformula "26"))
                                                                  (rule "applyEq" (formula "21") (term "1,1,1,0") (ifseqformula "26"))
                                                                  (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "26"))
                                                                  (rule "applyEq" (formula "35") (term "0") (ifseqformula "26"))
                                                                  (rule "applyEq" (formula "7") (term "0,1,0") (ifseqformula "26"))
                                                                  (rule "applyEq" (formula "20") (term "1,1,1,0") (ifseqformula "26"))
                                                                  (rule "applyEq" (formula "37") (term "1,1,1,0") (ifseqformula "26"))
                                                                  (rule "applyEq" (formula "8") (term "0") (ifseqformula "26"))
                                                                  (rule "applyEq" (formula "19") (term "1,1") (ifseqformula "26"))
                                                                  (rule "applyEq" (formula "35") (term "1,1") (ifseqformula "26"))
                                                                  (rule "applyEq" (formula "16") (term "0") (ifseqformula "35"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                                  (rule "mul_literals" (formula "15") (term "1"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                                                                  (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                                  (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "14"))
                                                                  (rule "leq_literals" (formula "23") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "23"))
                                                                  (rule "true_left" (formula "23"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "7") (ifseqformula "3"))
                                                                  (rule "andLeft" (formula "7"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "7"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                                                                  (rule "add_literals" (formula "7") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "7") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "7") (term "0"))
                                                                  (rule "leq_literals" (formula "7"))
                                                                  (rule "closeFalse" (formula "7"))
                                                               )
                                                               (branch "ClassCastException (!(thrownExc instanceof java.lang.Throwable))"
                                                                  (builtin "One Step Simplification" (formula "56"))
                                                                  (builtin "One Step Simplification" (formula "55"))
                                                                  (rule "closeTrue" (formula "55"))
                                                               )
                                                            )
                                                            (branch "if thrownExc instanceof java.lang.Throwable false"
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                                                               (rule "closeFalse" (formula "1"))
                                                            )
                                                         )
                                                      )
                                                      (branch "ClassCastException (!(a_16 instanceof java.lang.Throwable))"
                                                         (builtin "One Step Simplification" (formula "56"))
                                                         (builtin "One Step Simplification" (formula "55"))
                                                         (rule "closeTrue" (formula "55"))
                                                      )
                                                   )
                                                   (branch "if a_16 instanceof java.lang.Throwable false"
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                )
                                             )
                                             (branch "Null Reference (a_17 = null)"
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                          (branch "if x_19 false"
                                             (builtin "One Step Simplification" (formula "50"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "inEqSimp_leqRight" (formula "39"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "less_than_comparison_simple" (formula "50") (term "1"))
                                             (builtin "One Step Simplification" (formula "50"))
                                             (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,1,0"))
                                             (rule "times_zero_1" (formula "50") (term "1,0,0,0,0,1,0"))
                                             (rule "add_zero_right" (formula "50") (term "0,0,0,0,1,0"))
                                             (rule "blockEmpty" (formula "50") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0,1,0"))
                                             (rule "mul_literals" (formula "50") (term "1,0,0,1,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "50") (term "0,0,1,0") (ifseqformula "37"))
                                             (rule "qeq_literals" (formula "50") (term "0,0,0,1,0"))
                                             (builtin "One Step Simplification" (formula "50"))
                                             (rule "ifSplit" (formula "50"))
                                             (branch "if x_18 true"
                                                (builtin "One Step Simplification" (formula "51"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                             (branch "if x_18 false"
                                                (builtin "One Step Simplification" (formula "51"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "variableDeclarationAssign" (formula "50") (term "1"))
                                                (rule "variableDeclaration" (formula "50") (term "1") (newnames "x_arr_1"))
                                                (rule "eval_order_array_access4" (formula "50") (term "1") (inst "#v0=x_arr_arr_9"))
                                                (rule "variableDeclarationAssign" (formula "50") (term "1"))
                                                (rule "variableDeclaration" (formula "50") (term "1") (newnames "x_arr_arr_10"))
                                                (rule "assignment_read_attribute_this" (formula "50") (term "1"))
                                                (builtin "One Step Simplification" (formula "50"))
                                                (rule "dismissNonSelectedField" (formula "50") (term "0,1,0"))
                                                (rule "pullOutSelect" (formula "50") (term "0,1,0") (inst "selectSK=verif_functionalities_pkienc_Decryptor_EncryptionLog_plaintext_2"))
                                                (rule "simplifySelectOfAnon" (formula "1"))
                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                                                (rule "replaceKnownSelect_taclet0000_4" (formula "1") (term "2,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0000_5" (formula "1") (term "2,0"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "29"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "20"))
                                                (rule "replace_known_left" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "7"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "assignment_array2" (formula "51") (term "1"))
                                                (branch "Normal Execution (x_arr_arr_10 != null)"
                                                   (builtin "One Step Simplification" (formula "51"))
                                                   (builtin "One Step Simplification" (formula "52"))
                                                   (rule "orRight" (formula "51"))
                                                   (rule "orRight" (formula "51"))
                                                   (rule "inEqSimp_ltRight" (formula "53"))
                                                   (rule "times_zero_1" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_leqRight" (formula "52"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "pullOutSelect" (formula "53") (term "0,1,0") (inst "selectSK=arr_2"))
                                                   (rule "simplifySelectOfStore" (formula "1"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "castDel" (formula "1") (term "1,0"))
                                                   (rule "eqSymm" (formula "1") (term "0,0"))
                                                   (rule "assignment_to_reference_array_component" (formula "54") (term "1"))
                                                   (branch "Normal Execution (x_arr_arr_8 != null)"
                                                      (builtin "One Step Simplification" (formula "55"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")) (ifInst ""  (formula "41")))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "array_store_known_dynamic_array_type" (formula "2") (ifseqformula "28"))
                                                      (rule "typeEqDerived2" (formula "2") (term "0,1") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "inEqSimp_ltToLeq" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "blockEmpty" (formula "55") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                      (rule "mul_literals" (formula "3") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "elementOfUnion" (formula "3") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "sortsDisjointModuloNull" (formula "3") (term "0,0,0"))
                                                      (rule "replace_known_right" (formula "3") (term "1,0,0,0") (ifseqformula "46"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "50")))
                                                      (rule "sortsDisjointModuloNull" (formula "3") (term "0,0"))
                                                      (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "50"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "43")))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet001100011000010000_18" (formula "52") (term "0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet001100011000010000_18" (formula "2") (term "0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet001100011000010000_18" (formula "1") (term "0,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet001100011000010000_18" (formula "1") (term "1,2,0"))
                                                      (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_3"))
                                                      (rule "simplifySelectOfAnon" (formula "1"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "31"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "22"))
                                                      (rule "replace_known_left" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "16"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_4"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "23"))
                                                      (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "17"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")) (ifInst ""  (formula "17")))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet001100011000010000_22" (formula "1") (term "2,0"))
                                                      (rule "postincrement" (formula "53") (term "1"))
                                                      (rule "compound_int_cast_expression" (formula "53") (term "1") (inst "#v=x"))
                                                      (rule "variableDeclarationAssign" (formula "53") (term "1"))
                                                      (rule "variableDeclaration" (formula "53") (term "1") (newnames "x_23"))
                                                      (rule "remove_parentheses_right" (formula "53") (term "1"))
                                                      (rule "assignmentAdditionInt" (formula "53") (term "1"))
                                                      (builtin "One Step Simplification" (formula "53"))
                                                      (rule "translateJavaAddInt" (formula "53") (term "0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "53") (term "0,1,0"))
                                                      (rule "widening_identity_cast_5" (formula "53") (term "1"))
                                                      (rule "assignment" (formula "53") (term "1"))
                                                      (builtin "One Step Simplification" (formula "53"))
                                                      (rule "tryEmpty" (formula "53") (term "1"))
                                                      (rule "methodCallEmpty" (formula "53") (term "1"))
                                                      (rule "emptyModality" (formula "53") (term "1"))
                                                      (builtin "One Step Simplification" (formula "53"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "0,1,1,0,0,0,1,0") (ifseqformula "31"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "53") (term "0,0,1,1,0,0,0,1,0") (ifseqformula "22"))
                                                      (rule "eqSymm" (formula "53") (term "1,0,0,1,0"))
                                                      (rule "eqSymm" (formula "53") (term "1,1,0,1,0,0"))
                                                      (rule "eqSymm" (formula "53") (term "0,1,0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "53") (term "0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "53") (term "0,0,1"))
                                                      (rule "mul_literals" (formula "53") (term "0,0,0,1"))
                                                      (rule "dismissNonSelectedField" (formula "53") (term "0,1,0,1"))
                                                      (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "53") (term "0,1,0,1"))
                                                      (rule "replaceKnownSelect_taclet10000_10" (formula "53") (term "0,1,0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet010000_11" (formula "53") (term "0,1,0,1"))
                                                      (rule "dismissNonSelectedField" (formula "53") (term "0,0,1,0,0,0"))
                                                      (rule "replaceKnownSelect_taclet10000_10" (formula "53") (term "0,0,1,0,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet010000_11" (formula "53") (term "0,0,1,0,0,0"))
                                                      (rule "replace_known_left" (formula "53") (term "1,0,0,0") (ifseqformula "6"))
                                                      (builtin "One Step Simplification" (formula "53"))
                                                      (rule "precOfInt" (formula "53") (term "1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "53") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "53") (term "1,0,0,1,1"))
                                                      (rule "polySimp_mulAssoc" (formula "53") (term "0,1,0,0,1,1"))
                                                      (rule "polySimp_mulComm0" (formula "53") (term "0,0,1,0,0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "53") (term "0,1,0,0,1,1"))
                                                      (rule "polySimp_elimOne" (formula "53") (term "0,1,0,0,1,1"))
                                                      (rule "polySimp_addAssoc" (formula "53") (term "0,0,1,1"))
                                                      (rule "polySimp_addAssoc" (formula "53") (term "0,1,1"))
                                                      (rule "polySimp_addComm1" (formula "53") (term "0,0,1,1"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "53") (term "0,1,1"))
                                                      (rule "add_literals" (formula "53") (term "1,1,0,1,1"))
                                                      (rule "times_zero_1" (formula "53") (term "1,0,1,1"))
                                                      (rule "add_zero_right" (formula "53") (term "0,1,1"))
                                                      (rule "polySimp_addAssoc" (formula "53") (term "0,1,1"))
                                                      (rule "polySimp_addComm1" (formula "53") (term "0,0,1,1"))
                                                      (rule "add_literals" (formula "53") (term "0,0,0,1,1"))
                                                      (rule "add_zero_left" (formula "53") (term "0,0,1,1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "53") (term "0,1,1"))
                                                      (rule "add_literals" (formula "53") (term "1,0,1,1"))
                                                      (rule "times_zero_1" (formula "53") (term "0,1,1"))
                                                      (rule "leq_literals" (formula "53") (term "1,1"))
                                                      (builtin "One Step Simplification" (formula "53"))
                                                      (rule "inEqSimp_homoInEq0" (formula "53") (term "1"))
                                                      (rule "mul_literals" (formula "53") (term "1,0,1"))
                                                      (rule "add_zero_right" (formula "53") (term "0,1"))
                                                      (rule "applyEq" (formula "14") (term "0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "53") (term "1,0,1") (ifseqformula "35"))
                                                      (rule "polySimp_addAssoc" (formula "53") (term "0,1"))
                                                      (rule "polySimp_addComm1" (formula "53") (term "0,0,1"))
                                                      (rule "add_literals" (formula "53") (term "0,0,0,1"))
                                                      (rule "applyEq" (formula "15") (term "0") (ifseqformula "25"))
                                                      (rule "applyEq" (formula "3") (term "0") (ifseqformula "25"))
                                                      (rule "inEqSimp_homoInEq1" (formula "3"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                      (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                      (rule "add_literals" (formula "3") (term "0,0,0"))
                                                      (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "6") (term "0") (ifseqformula "35"))
                                                      (rule "inEqSimp_homoInEq1" (formula "6"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                      (rule "mul_literals" (formula "6") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                      (rule "add_literals" (formula "6") (term "0,0,0"))
                                                      (rule "applyEq" (formula "18") (term "0") (ifseqformula "25"))
                                                      (rule "eqSymm" (formula "18"))
                                                      (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "28") (term "1,1,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "27") (term "1,1,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "18") (term "0") (ifseqformula "35"))
                                                      (rule "polySimp_homoEq" (formula "18"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                                      (rule "mul_literals" (formula "18") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                                      (rule "add_literals" (formula "18") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "18") (term "0,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "18"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                      (rule "applyEq" (formula "27") (term "1,1,1,0") (ifseqformula "18"))
                                                      (rule "applyEq" (formula "38") (term "1,1,1,0") (ifseqformula "18"))
                                                      (rule "applyEq" (formula "28") (term "1,1,1,0") (ifseqformula "18"))
                                                      (rule "applyEq" (formula "20") (term "1,1,1,0") (ifseqformula "18"))
                                                      (rule "applyEq" (formula "34") (term "0") (ifseqformula "18"))
                                                      (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "18"))
                                                      (rule "applyEq" (formula "51") (term "1,0,1") (ifseqformula "17"))
                                                      (rule "applyEq" (formula "7") (term "0") (ifseqformula "17"))
                                                      (rule "applyEq" (formula "6") (term "0,1,0") (ifseqformula "17"))
                                                      (rule "applyEq" (formula "34") (term "1,1,1,0") (ifseqformula "16"))
                                                      (rule "applyEq" (formula "17") (term "1,1,1,0") (ifseqformula "16"))
                                                      (rule "applyEq" (formula "32") (term "1,1") (ifseqformula "16"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "0,0,0"))
                                                      (rule "mul_literals" (formula "50") (term "1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                      (rule "mul_literals" (formula "13") (term "1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "49") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "49") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "49") (term "1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1"))
                                                      (rule "mul_literals" (formula "49") (term "0,1,1"))
                                                      (rule "polySimp_elimOne" (formula "49") (term "1,1,1"))
                                                      (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "5"))
                                                      (builtin "One Step Simplification" (formula "49"))
                                                      (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "5"))
                                                      (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                      (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                                      (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                      (rule "add_literals" (formula "3") (term "0,0"))
                                                      (rule "qeq_literals" (formula "3") (term "0"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "inEqSimp_subsumption1" (formula "48") (term "0,0") (ifseqformula "35"))
                                                      (rule "leq_literals" (formula "48") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "48"))
                                                      (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "11"))
                                                      (rule "leq_literals" (formula "20") (term "0"))
                                                      (builtin "One Step Simplification" (formula "20"))
                                                      (rule "true_left" (formula "20"))
                                                      (rule "nnf_notOr" (formula "47") (term "1,1,0,0,0,1"))
                                                      (rule "nnf_notOr" (formula "47") (term "0,1,1,0,0,0,1"))
                                                      (rule "andRight" (formula "47"))
                                                      (branch "Case 1"
                                                         (rule "allRight" (formula "47") (inst "sk=j_0"))
                                                         (rule "orRight" (formula "47"))
                                                         (rule "orRight" (formula "47"))
                                                         (rule "inEqSimp_geqRight" (formula "48"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_leqRight" (formula "48"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "1"))
                                                         (rule "pullOutSelect" (formula "49") (term "0,1") (inst "selectSK=arr_11"))
                                                         (rule "simplifySelectOfStore" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "castDel" (formula "1") (term "1,0"))
                                                         (rule "eqSymm" (formula "50") (term "1"))
                                                         (rule "eqSymm" (formula "1") (term "0,0"))
                                                         (rule "pullOutSelect" (formula "50") (term "0,0") (inst "selectSK=arr_12"))
                                                         (rule "simplifySelectOfStore" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "castDel" (formula "1") (term "1,0"))
                                                         (rule "eqSymm" (formula "51") (term "0"))
                                                         (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                         (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                         (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=arr_13"))
                                                         (rule "simplifySelectOfStore" (formula "2"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "castDel" (formula "2") (term "1,0"))
                                                         (rule "eqSymm" (formula "2") (term "1,0,0"))
                                                         (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_14"))
                                                         (rule "simplifySelectOfStore" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "castDel" (formula "1") (term "1,0"))
                                                         (rule "eqSymm" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "6"))
                                                         (rule "times_zero_1" (formula "5") (term "0,0"))
                                                         (rule "add_zero_left" (formula "5") (term "0"))
                                                         (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_15"))
                                                         (rule "simplifySelectOfAnon" (formula "3"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "47")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "33"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,1,0,0") (ifseqformula "25"))
                                                         (rule "replace_known_left" (formula "3") (term "1,0,0,1,0,0") (ifseqformula "26"))
                                                         (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "48")))
                                                         (rule "elementOfUnion" (formula "3") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_16"))
                                                         (rule "simplifySelectOfAnon" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "33"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "25"))
                                                         (rule "replace_known_right" (formula "1") (term "1,0,0,1,0,0") (ifseqformula "46"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")) (ifInst ""  (formula "35")))
                                                         (rule "elementOfUnion" (formula "1") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                         (rule "hideAuxiliaryEq" (formula "1"))
                                                         (rule "ifthenelse_split" (formula "7") (term "0"))
                                                         (branch "self.plaintext = result | self.plaintext = result_0 TRUE"
                                                            (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "8"))
                                                            (rule "hideAuxiliaryEq" (formula "8"))
                                                            (rule "ifthenelse_split" (formula "9") (term "0"))
                                                            (branch "self.ciphertext = result | self.ciphertext = result_0 TRUE"
                                                               (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "10"))
                                                               (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "10"))
                                                               (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "10"))
                                                               (rule "hideAuxiliaryEq" (formula "10"))
                                                               (rule "ifthenelse_split" (formula "1") (term "0"))
                                                               (branch "j_0 = i_0 TRUE"
                                                                  (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                                  (rule "hideAuxiliaryEq" (formula "2"))
                                                                  (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "1"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "1"))
                                                                  (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "1"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "applyEqReverse" (formula "53") (term "1,1") (ifseqformula "4"))
                                                                  (rule "hideAuxiliaryEq" (formula "4"))
                                                                  (rule "applyEqRigid" (formula "3") (term "0,2,2,0") (ifseqformula "1"))
                                                                  (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "51") (term "0,2,0,1") (ifseqformula "1"))
                                                                  (rule "applyEqRigid" (formula "51") (term "0,2,0,0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "4") (term "0") (ifseqformula "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "4"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                                                  (rule "add_literals" (formula "4") (term "1,0"))
                                                                  (rule "times_zero_1" (formula "4") (term "0"))
                                                                  (rule "qeq_literals" (formula "4"))
                                                                  (rule "true_left" (formula "4"))
                                                                  (rule "allLeft" (formula "35") (inst "t=i_0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "35") (term "1"))
                                                                  (rule "polySimp_addComm1" (formula "35") (term "0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1"))
                                                                  (rule "polySimp_mulComm0" (formula "35") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "35") (term "1,1"))
                                                                  (rule "mul_literals" (formula "35") (term "0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1"))
                                                                  (rule "polySimp_elimOne" (formula "35") (term "1,1,1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "7"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1"))
                                                                  (rule "mul_literals" (formula "35") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "35") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "35") (term "0,0,0,1"))
                                                                  (rule "add_literals" (formula "35") (term "0,0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                                  (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "35") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "35"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "38"))
                                                                  (rule "qeq_literals" (formula "35") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "35"))
                                                                  (rule "notLeft" (formula "35"))
                                                                  (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=arr_32"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "22"))
                                                                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "16"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")) (ifInst ""  (formula "16")))
                                                                  (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "narrowSelectArrayType" (formula "40") (term "0") (ifseqformula "8") (ifseqformula "47"))
                                                                  (rule "allLeft" (formula "25") (inst "t=i_0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "25") (term "1"))
                                                                  (rule "polySimp_addComm1" (formula "25") (term "0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1"))
                                                                  (rule "polySimp_mulComm0" (formula "25") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "25") (term "1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1"))
                                                                  (rule "mul_literals" (formula "25") (term "0,1,1"))
                                                                  (rule "polySimp_elimOne" (formula "25") (term "1,1,1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "7"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1"))
                                                                  (rule "mul_literals" (formula "25") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "25") (term "0,0,0,1"))
                                                                  (rule "add_literals" (formula "25") (term "0,0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                                                  (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "25") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "25"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "38"))
                                                                  (rule "qeq_literals" (formula "25") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "25"))
                                                                  (rule "notLeft" (formula "25"))
                                                                  (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=arr_33"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")) (ifInst ""  (formula "17")))
                                                                  (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "narrowSelectArrayType" (formula "40") (term "0") (ifseqformula "8") (ifseqformula "47"))
                                                                  (rule "allLeft" (formula "34") (inst "t=i_0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "34") (term "1"))
                                                                  (rule "polySimp_addComm1" (formula "34") (term "0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1"))
                                                                  (rule "polySimp_mulComm0" (formula "34") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "34") (term "1,1"))
                                                                  (rule "mul_literals" (formula "34") (term "0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1"))
                                                                  (rule "polySimp_elimOne" (formula "34") (term "1,1,1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "7"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1"))
                                                                  (rule "mul_literals" (formula "34") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "34") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "34") (term "0,0,0,1"))
                                                                  (rule "add_literals" (formula "34") (term "0,0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                                  (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "34") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "34"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "38"))
                                                                  (rule "qeq_literals" (formula "34") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "34"))
                                                                  (rule "notLeft" (formula "34"))
                                                                  (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=arr_34"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                                                                  (rule "replaceKnownSelect_taclet0000001100011000010000_38" (formula "1") (term "2,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet0000001100011000010000_39" (formula "1") (term "2,0"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "22"))
                                                                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "17"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "narrowSelectArrayType" (formula "40") (term "0") (ifseqformula "8") (ifseqformula "48"))
                                                                  (rule "allLeft" (formula "26") (inst "t=i_0"))
                                                                  (rule "replaceKnownSelect_taclet0000001100011000010000_36" (formula "26") (term "0,0,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet0000001100011000010000_37" (formula "26") (term "0,0,0,0"))
                                                                  (rule "narrowSelectArrayType" (formula "26") (term "0,0,0,0") (ifseqformula "8") (ifseqformula "49"))
                                                                  (rule "replace_known_right" (formula "26") (term "0,0,0") (ifseqformula "42"))
                                                                  (builtin "One Step Simplification" (formula "26"))
                                                                  (rule "true_left" (formula "26"))
                                                                  (rule "ifthenelse_split" (formula "5") (term "0"))
                                                                  (branch "self.plaintext = result_0 TRUE"
                                                                     (rule "referencedObjectIsCreatedRightEQ" (formula "44") (ifseqformula "5") (ifseqformula "43"))
                                                                     (rule "close" (formula "44") (ifseqformula "9"))
                                                                  )
                                                                  (branch "self.plaintext = result_0 FALSE"
                                                                     (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "5"))
                                                                     (rule "applyEqReverse" (formula "53") (term "1,1") (ifseqformula "5"))
                                                                     (rule "hideAuxiliaryEq" (formula "5"))
                                                                     (rule "eqSymm" (formula "52") (term "1"))
                                                                     (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "39"))
                                                                     (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "referencedObjectIsCreatedRightEQ" (formula "46") (ifseqformula "4") (ifseqformula "45"))
                                                                     (rule "close" (formula "46") (ifseqformula "7"))
                                                                  )
                                                               )
                                                               (branch "j_0 = i_0 FALSE"
                                                                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "42"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "applyEqReverse" (formula "53") (term "1,0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "eqSymm" (formula "52") (term "0"))
                                                                  (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "41"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "40"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "applyEqReverse" (formula "51") (term "1,1") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "eqSymm" (formula "50") (term "1"))
                                                                  (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "39"))
                                                                  (rule "inEqSimp_contradEq3" (formula "39") (ifseqformula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "39") (term "1,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0"))
                                                                  (rule "add_literals" (formula "39") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "39") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "39") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "39") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "39"))
                                                                  (rule "false_right" (formula "39"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                                  (rule "times_zero_1" (formula "1") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                  (rule "mul_literals" (formula "1") (term "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "37") (ifseqformula "1"))
                                                                  (rule "leq_literals" (formula "37") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "37"))
                                                                  (rule "true_left" (formula "37"))
                                                                  (rule "commute_and" (formula "49"))
                                                                  (rule "allLeft" (formula "26") (inst "t=i_0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "26") (term "1"))
                                                                  (rule "polySimp_addComm1" (formula "26") (term "0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1"))
                                                                  (rule "polySimp_mulComm0" (formula "26") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "26") (term "1,1"))
                                                                  (rule "mul_literals" (formula "26") (term "0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1"))
                                                                  (rule "polySimp_elimOne" (formula "26") (term "1,1,1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "1"))
                                                                  (rule "qeq_literals" (formula "26") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "26"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "7"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1"))
                                                                  (rule "mul_literals" (formula "26") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "26") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1"))
                                                                  (rule "add_literals" (formula "26") (term "0,0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                                                  (rule "add_zero_right" (formula "26") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "26") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "26"))
                                                                  (rule "notLeft" (formula "26"))
                                                                  (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=arr_28"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")) (ifInst ""  (formula "16")))
                                                                  (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "narrowSelectArrayType" (formula "39") (term "0") (ifseqformula "8") (ifseqformula "46"))
                                                                  (rule "allLeft" (formula "25") (inst "t=i_0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "25") (term "1"))
                                                                  (rule "polySimp_addComm1" (formula "25") (term "0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1"))
                                                                  (rule "polySimp_mulComm0" (formula "25") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "25") (term "1,1"))
                                                                  (rule "mul_literals" (formula "25") (term "0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1"))
                                                                  (rule "polySimp_elimOne" (formula "25") (term "1,1,1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "1"))
                                                                  (rule "qeq_literals" (formula "25") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "25"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "7"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1"))
                                                                  (rule "mul_literals" (formula "25") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "25") (term "0,0,0,1"))
                                                                  (rule "add_literals" (formula "25") (term "0,0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                                                  (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "25") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "25"))
                                                                  (rule "notLeft" (formula "25"))
                                                                  (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=arr_29"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")) (ifInst ""  (formula "17")))
                                                                  (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "narrowSelectArrayType" (formula "39") (term "0") (ifseqformula "8") (ifseqformula "46"))
                                                                  (rule "allLeft" (formula "34") (inst "t=i_0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "34") (term "1"))
                                                                  (rule "polySimp_addComm1" (formula "34") (term "0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1"))
                                                                  (rule "polySimp_mulComm0" (formula "34") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "34") (term "1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1"))
                                                                  (rule "mul_literals" (formula "34") (term "0,1,1"))
                                                                  (rule "polySimp_elimOne" (formula "34") (term "1,1,1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0") (ifseqformula "1"))
                                                                  (rule "qeq_literals" (formula "34") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "34"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "7"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1"))
                                                                  (rule "mul_literals" (formula "34") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "34") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "34") (term "0,0,0,1"))
                                                                  (rule "add_literals" (formula "34") (term "0,0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                                  (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "34") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "34"))
                                                                  (rule "notLeft" (formula "34"))
                                                                  (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=arr_30"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                                                                  (rule "replaceKnownSelect_taclet1000001100011000010000_39" (formula "1") (term "2,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet1000001100011000010000_40" (formula "1") (term "2,0"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "22"))
                                                                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "17"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "narrowSelectArrayType" (formula "39") (term "0") (ifseqformula "8") (ifseqformula "47"))
                                                                  (rule "allLeft" (formula "35") (inst "t=i_0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "35") (term "1"))
                                                                  (rule "polySimp_addComm1" (formula "35") (term "0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1"))
                                                                  (rule "polySimp_mulComm0" (formula "35") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "35") (term "1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1"))
                                                                  (rule "mul_literals" (formula "35") (term "0,1,1"))
                                                                  (rule "polySimp_elimOne" (formula "35") (term "1,1,1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "1"))
                                                                  (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "35"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "7"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1"))
                                                                  (rule "mul_literals" (formula "35") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "35") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "35") (term "0,0,0,1"))
                                                                  (rule "add_literals" (formula "35") (term "0,0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                                  (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "35") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "35"))
                                                                  (rule "notLeft" (formula "35"))
                                                                  (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=arr_31"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                                                                  (rule "replaceKnownSelect_taclet1000001100011000010000_37" (formula "1") (term "2,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet1000001100011000010000_38" (formula "1") (term "2,0"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "22"))
                                                                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "16"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "narrowSelectArrayType" (formula "39") (term "0") (ifseqformula "8") (ifseqformula "48"))
                                                                  (rule "ifthenelse_split" (formula "5") (term "0"))
                                                                  (branch "self.plaintext = result_0 TRUE"
                                                                     (rule "referencedObjectIsCreatedRightEQ" (formula "43") (ifseqformula "5") (ifseqformula "42"))
                                                                     (rule "close" (formula "43") (ifseqformula "9"))
                                                                  )
                                                                  (branch "self.plaintext = result_0 FALSE"
                                                                     (rule "hideAuxiliaryEq" (formula "5"))
                                                                     (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "38"))
                                                                     (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "referencedObjectIsCreatedRightEQ" (formula "45") (ifseqformula "4") (ifseqformula "44"))
                                                                     (rule "close" (formula "45") (ifseqformula "7"))
                                                                  )
                                                               )
                                                            )
                                                            (branch "self.ciphertext = result | self.ciphertext = result_0 FALSE"
                                                               (rule "orRight" (formula "43"))
                                                               (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "9"))
                                                               (rule "applyEqReverse" (formula "8") (term "1,0") (ifseqformula "9"))
                                                               (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "9"))
                                                               (rule "hideAuxiliaryEq" (formula "9"))
                                                               (rule "ifthenelse_split" (formula "1") (term "0"))
                                                               (branch "j_0 = i_0 TRUE"
                                                                  (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                                  (rule "hideAuxiliaryEq" (formula "2"))
                                                                  (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "1"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "1"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "applyEqReverse" (formula "54") (term "1,1") (ifseqformula "4"))
                                                                  (rule "hideAuxiliaryEq" (formula "4"))
                                                                  (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "1"))
                                                                  (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "applyEqRigid" (formula "53") (term "0,2,0,1") (ifseqformula "1"))
                                                                  (rule "applyEqRigid" (formula "53") (term "0,2,0,0") (ifseqformula "1"))
                                                                  (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "5"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                                                  (rule "add_literals" (formula "5") (term "1,0"))
                                                                  (rule "times_zero_1" (formula "5") (term "0"))
                                                                  (rule "qeq_literals" (formula "5"))
                                                                  (rule "true_left" (formula "5"))
                                                                  (rule "applyEq" (formula "4") (term "0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "3") (term "0,2,2,0") (ifseqformula "1"))
                                                                  (rule "allLeft" (formula "34") (inst "t=i_0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "34") (term "1"))
                                                                  (rule "polySimp_addComm1" (formula "34") (term "0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1"))
                                                                  (rule "polySimp_mulComm0" (formula "34") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "34") (term "1,1"))
                                                                  (rule "mul_literals" (formula "34") (term "0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1"))
                                                                  (rule "polySimp_elimOne" (formula "34") (term "1,1,1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "6"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1"))
                                                                  (rule "mul_literals" (formula "34") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "34") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "34") (term "0,0,0,1"))
                                                                  (rule "add_literals" (formula "34") (term "0,0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                                  (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "34") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "34"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "37"))
                                                                  (rule "qeq_literals" (formula "34") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "34"))
                                                                  (rule "notLeft" (formula "34"))
                                                                  (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=arr_26"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "21"))
                                                                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "15"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")) (ifInst ""  (formula "15")))
                                                                  (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "narrowSelectArrayType" (formula "39") (term "0") (ifseqformula "7") (ifseqformula "48"))
                                                                  (rule "allLeft" (formula "17") (inst "t=i_0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "17") (term "1"))
                                                                  (rule "polySimp_addComm1" (formula "17") (term "0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1"))
                                                                  (rule "polySimp_mulComm0" (formula "17") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "17") (term "1,1"))
                                                                  (rule "mul_literals" (formula "17") (term "0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1"))
                                                                  (rule "polySimp_elimOne" (formula "17") (term "1,1,1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "37"))
                                                                  (rule "qeq_literals" (formula "17") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "6"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                                                                  (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1"))
                                                                  (rule "add_literals" (formula "17") (term "0,0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                                                  (rule "add_literals" (formula "17") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "17") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "notLeft" (formula "17"))
                                                                  (rule "allLeft" (formula "33") (inst "t=i_0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "33") (term "1"))
                                                                  (rule "polySimp_addComm1" (formula "33") (term "0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1"))
                                                                  (rule "polySimp_mulComm0" (formula "33") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "33") (term "1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1"))
                                                                  (rule "mul_literals" (formula "33") (term "0,1,1"))
                                                                  (rule "polySimp_elimOne" (formula "33") (term "1,1,1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "37"))
                                                                  (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "33"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "6"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1"))
                                                                  (rule "mul_literals" (formula "33") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "33") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "33") (term "0,0,0,1"))
                                                                  (rule "add_literals" (formula "33") (term "0,0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                                                  (rule "add_zero_right" (formula "33") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "33") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "33"))
                                                                  (rule "notLeft" (formula "33"))
                                                                  (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=arr_27"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "21"))
                                                                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "16"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")) (ifInst ""  (formula "16")))
                                                                  (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "narrowSelectArrayType" (formula "39") (term "0") (ifseqformula "7") (ifseqformula "49"))
                                                                  (rule "allLeft" (formula "24") (inst "t=i_0"))
                                                                  (rule "replaceKnownSelect_taclet0100001100011000010000_39" (formula "24") (term "0,0,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet0100001100011000010000_40" (formula "24") (term "0,0,0,0"))
                                                                  (rule "narrowSelectArrayType" (formula "24") (term "0,0,0,0") (ifseqformula "7") (ifseqformula "49"))
                                                                  (rule "replace_known_right" (formula "24") (term "0,0,0") (ifseqformula "40"))
                                                                  (builtin "One Step Simplification" (formula "24"))
                                                                  (rule "true_left" (formula "24"))
                                                                  (rule "allLeft" (formula "25") (inst "t=i_0"))
                                                                  (rule "replaceKnownSelect_taclet0100001100011000010000_36" (formula "25") (term "0,0,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet0100001100011000010000_37" (formula "25") (term "0,0,0,0"))
                                                                  (rule "narrowSelectArrayType" (formula "25") (term "0,0,0,0") (ifseqformula "7") (ifseqformula "50"))
                                                                  (rule "replace_known_right" (formula "25") (term "0,0,0") (ifseqformula "41"))
                                                                  (builtin "One Step Simplification" (formula "25"))
                                                                  (rule "true_left" (formula "25"))
                                                                  (rule "ifthenelse_split" (formula "5") (term "0"))
                                                                  (branch "self.plaintext = result_0 TRUE"
                                                                     (rule "referencedObjectIsCreatedRightEQ" (formula "45") (ifseqformula "5") (ifseqformula "44"))
                                                                     (rule "close" (formula "45") (ifseqformula "8"))
                                                                  )
                                                                  (branch "self.plaintext = result_0 FALSE"
                                                                     (rule "applyEqReverse" (formula "54") (term "1,1") (ifseqformula "5"))
                                                                     (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "5"))
                                                                     (rule "hideAuxiliaryEq" (formula "5"))
                                                                     (rule "eqSymm" (formula "53") (term "1"))
                                                                     (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "38"))
                                                                     (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "referencedObjectIsCreatedRightEQ" (formula "47") (ifseqformula "4") (ifseqformula "46"))
                                                                     (rule "close" (formula "47") (ifseqformula "6"))
                                                                  )
                                                               )
                                                               (branch "j_0 = i_0 FALSE"
                                                                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "41"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "applyEqReverse" (formula "54") (term "1,0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "eqSymm" (formula "53") (term "0"))
                                                                  (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "40"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "39"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "applyEqReverse" (formula "52") (term "1,1") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "eqSymm" (formula "51") (term "1"))
                                                                  (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "38"))
                                                                  (rule "inEqSimp_contradEq3" (formula "38") (ifseqformula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0"))
                                                                  (rule "add_literals" (formula "38") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "38") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "38") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "38") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "38"))
                                                                  (rule "false_right" (formula "38"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                                  (rule "times_zero_1" (formula "1") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                  (rule "mul_literals" (formula "1") (term "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "36") (ifseqformula "1"))
                                                                  (rule "leq_literals" (formula "36") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "36"))
                                                                  (rule "true_left" (formula "36"))
                                                                  (rule "commute_and" (formula "50"))
                                                                  (rule "allLeft" (formula "24") (inst "t=i_0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "24") (term "1"))
                                                                  (rule "polySimp_addComm1" (formula "24") (term "0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1"))
                                                                  (rule "polySimp_mulComm0" (formula "24") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "24") (term "1,1"))
                                                                  (rule "mul_literals" (formula "24") (term "0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1"))
                                                                  (rule "polySimp_elimOne" (formula "24") (term "1,1,1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0") (ifseqformula "1"))
                                                                  (rule "qeq_literals" (formula "24") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "24"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "24") (term "1") (ifseqformula "6"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1"))
                                                                  (rule "mul_literals" (formula "24") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "24") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "24") (term "0,0,0,1"))
                                                                  (rule "add_literals" (formula "24") (term "0,0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                                                  (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "24") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "24"))
                                                                  (rule "notLeft" (formula "24"))
                                                                  (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=arr_23"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")) (ifInst ""  (formula "16")))
                                                                  (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "narrowSelectArrayType" (formula "38") (term "0") (ifseqformula "7") (ifseqformula "46"))
                                                                  (rule "allLeft" (formula "18") (inst "t=i_0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                                                  (rule "polySimp_addComm1" (formula "18") (term "0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1"))
                                                                  (rule "polySimp_mulComm0" (formula "18") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "18") (term "1,1"))
                                                                  (rule "mul_literals" (formula "18") (term "0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1"))
                                                                  (rule "polySimp_elimOne" (formula "18") (term "1,1,1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "6"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                                                  (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                                                  (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                                                  (rule "add_literals" (formula "18") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "18") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "1"))
                                                                  (rule "qeq_literals" (formula "18") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "notLeft" (formula "18"))
                                                                  (rule "allLeft" (formula "33") (inst "t=i_0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "33") (term "1"))
                                                                  (rule "polySimp_addComm1" (formula "33") (term "0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1"))
                                                                  (rule "polySimp_mulComm0" (formula "33") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "33") (term "1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1"))
                                                                  (rule "mul_literals" (formula "33") (term "0,1,1"))
                                                                  (rule "polySimp_elimOne" (formula "33") (term "1,1,1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "6"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1"))
                                                                  (rule "mul_literals" (formula "33") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "33") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "33") (term "0,0,0,1"))
                                                                  (rule "add_literals" (formula "33") (term "0,0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                                                  (rule "add_zero_right" (formula "33") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "33") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "33"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "1"))
                                                                  (rule "qeq_literals" (formula "33") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "33"))
                                                                  (rule "notLeft" (formula "33"))
                                                                  (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=arr_24"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                                                                  (rule "replaceKnownSelect_taclet1100001100011000010000_37" (formula "1") (term "2,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet1100001100011000010000_38" (formula "1") (term "2,0"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "21"))
                                                                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "16"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "narrowSelectArrayType" (formula "38") (term "0") (ifseqformula "7") (ifseqformula "48"))
                                                                  (rule "allLeft" (formula "34") (inst "t=i_0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "34") (term "1"))
                                                                  (rule "polySimp_addComm1" (formula "34") (term "0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1"))
                                                                  (rule "polySimp_mulComm0" (formula "34") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "34") (term "1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1"))
                                                                  (rule "mul_literals" (formula "34") (term "0,1,1"))
                                                                  (rule "polySimp_elimOne" (formula "34") (term "1,1,1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "6"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1"))
                                                                  (rule "mul_literals" (formula "34") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "34") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "34") (term "0,0,0,1"))
                                                                  (rule "add_literals" (formula "34") (term "0,0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                                  (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "34") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "34"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "1"))
                                                                  (rule "qeq_literals" (formula "34") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "34"))
                                                                  (rule "notLeft" (formula "34"))
                                                                  (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=arr_25"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "21"))
                                                                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "15"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")) (ifInst ""  (formula "15")))
                                                                  (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "narrowSelectArrayType" (formula "38") (term "0") (ifseqformula "7") (ifseqformula "49"))
                                                                  (rule "allLeft" (formula "25") (inst "t=i_0"))
                                                                  (rule "replaceKnownSelect_taclet1100001100011000010000_42" (formula "25") (term "0,0,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet1100001100011000010000_43" (formula "25") (term "0,0,0,0"))
                                                                  (rule "narrowSelectArrayType" (formula "25") (term "0,0,0,0") (ifseqformula "7") (ifseqformula "49"))
                                                                  (rule "replace_known_right" (formula "25") (term "0,0,0") (ifseqformula "39"))
                                                                  (builtin "One Step Simplification" (formula "25"))
                                                                  (rule "true_left" (formula "25"))
                                                                  (rule "ifthenelse_split" (formula "5") (term "0"))
                                                                  (branch "self.plaintext = result_0 TRUE"
                                                                     (rule "referencedObjectIsCreatedRightEQ" (formula "44") (ifseqformula "5") (ifseqformula "43"))
                                                                     (rule "close" (formula "44") (ifseqformula "8"))
                                                                  )
                                                                  (branch "self.plaintext = result_0 FALSE"
                                                                     (rule "hideAuxiliaryEq" (formula "5"))
                                                                     (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "37"))
                                                                     (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "referencedObjectIsCreatedRightEQ" (formula "46") (ifseqformula "4") (ifseqformula "45"))
                                                                     (rule "close" (formula "46") (ifseqformula "6"))
                                                                  )
                                                               )
                                                            )
                                                         )
                                                         (branch "self.plaintext = result | self.plaintext = result_0 FALSE"
                                                            (rule "orRight" (formula "43"))
                                                            (rule "applyEqReverse" (formula "8") (term "2,0") (ifseqformula "7"))
                                                            (rule "hideAuxiliaryEq" (formula "7"))
                                                            (rule "replace_known_right" (formula "7") (term "0,0") (ifseqformula "43"))
                                                            (builtin "One Step Simplification" (formula "7"))
                                                            (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "7"))
                                                            (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "7"))
                                                            (rule "hideAuxiliaryEq" (formula "7"))
                                                            (rule "ifthenelse_split" (formula "7") (term "0"))
                                                            (branch "self.ciphertext = result | self.ciphertext = result_0 TRUE"
                                                               (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "8"))
                                                               (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "8"))
                                                               (rule "hideAuxiliaryEq" (formula "8"))
                                                               (rule "ifthenelse_split" (formula "1") (term "0"))
                                                               (branch "j_0 = i_0 TRUE"
                                                                  (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                                  (rule "hideAuxiliaryEq" (formula "2"))
                                                                  (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "1"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "applyEqReverse" (formula "53") (term "1,1") (ifseqformula "4"))
                                                                  (rule "hideAuxiliaryEq" (formula "4"))
                                                                  (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "1"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "1"))
                                                                  (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "applyEq" (formula "5") (term "0") (ifseqformula "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "5"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                                                  (rule "add_literals" (formula "5") (term "1,0"))
                                                                  (rule "times_zero_1" (formula "5") (term "0"))
                                                                  (rule "qeq_literals" (formula "5"))
                                                                  (rule "true_left" (formula "5"))
                                                                  (rule "applyEq" (formula "51") (term "0,2,0,1") (ifseqformula "1"))
                                                                  (builtin "One Step Simplification" (formula "51"))
                                                                  (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "3") (term "0,2,2,0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "50") (term "0,2,0") (ifseqformula "1"))
                                                                  (rule "allLeft" (formula "23") (inst "t=i_0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "23") (term "1"))
                                                                  (rule "polySimp_addComm1" (formula "23") (term "0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1"))
                                                                  (rule "polySimp_mulComm0" (formula "23") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "23") (term "1,1"))
                                                                  (rule "mul_literals" (formula "23") (term "0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1"))
                                                                  (rule "polySimp_elimOne" (formula "23") (term "1,1,1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "36"))
                                                                  (rule "qeq_literals" (formula "23") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "23"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "5"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1"))
                                                                  (rule "mul_literals" (formula "23") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1"))
                                                                  (rule "add_literals" (formula "23") (term "0,0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                                                  (rule "add_zero_right" (formula "23") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "23") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "23"))
                                                                  (rule "notLeft" (formula "23"))
                                                                  (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=arr_20"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")) (ifInst ""  (formula "15")))
                                                                  (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "narrowSelectArrayType" (formula "38") (term "0") (ifseqformula "6") (ifseqformula "46"))
                                                                  (rule "allLeft" (formula "33") (inst "t=i_0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "33") (term "1"))
                                                                  (rule "polySimp_addComm1" (formula "33") (term "0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1"))
                                                                  (rule "polySimp_mulComm0" (formula "33") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "33") (term "1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1"))
                                                                  (rule "mul_literals" (formula "33") (term "0,1,1"))
                                                                  (rule "polySimp_elimOne" (formula "33") (term "1,1,1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "5"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1"))
                                                                  (rule "mul_literals" (formula "33") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "33") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "33") (term "0,0,0,1"))
                                                                  (rule "add_literals" (formula "33") (term "0,0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                                                  (rule "add_literals" (formula "33") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "33") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "33"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "36"))
                                                                  (rule "qeq_literals" (formula "33") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "33"))
                                                                  (rule "notLeft" (formula "33"))
                                                                  (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=arr_21"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "20"))
                                                                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "14"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")) (ifInst ""  (formula "14")))
                                                                  (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "narrowSelectArrayType" (formula "38") (term "0") (ifseqformula "6") (ifseqformula "48"))
                                                                  (rule "allLeft" (formula "24") (inst "t=i_0"))
                                                                  (rule "replaceKnownSelect_taclet0010001100011000010000_39" (formula "24") (term "0,0,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet0010001100011000010000_40" (formula "24") (term "0,0,0,0"))
                                                                  (rule "narrowSelectArrayType" (formula "24") (term "0,0,0,0") (ifseqformula "6") (ifseqformula "49"))
                                                                  (rule "replace_known_right" (formula "24") (term "0,0,0") (ifseqformula "39"))
                                                                  (builtin "One Step Simplification" (formula "24"))
                                                                  (rule "true_left" (formula "24"))
                                                                  (rule "allLeft" (formula "32") (inst "t=i_0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "32") (term "1"))
                                                                  (rule "polySimp_addComm1" (formula "32") (term "0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1"))
                                                                  (rule "polySimp_mulComm0" (formula "32") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "32") (term "1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1"))
                                                                  (rule "mul_literals" (formula "32") (term "0,1,1"))
                                                                  (rule "polySimp_elimOne" (formula "32") (term "1,1,1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "36"))
                                                                  (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "32"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "5"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1"))
                                                                  (rule "mul_literals" (formula "32") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "32") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "32") (term "0,0,0,1"))
                                                                  (rule "add_literals" (formula "32") (term "0,0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                                                                  (rule "add_zero_right" (formula "32") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "32") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "32"))
                                                                  (rule "notLeft" (formula "32"))
                                                                  (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=arr_22"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                                                                  (rule "replaceKnownSelect_taclet0010001100011000010000_36" (formula "1") (term "2,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet0010001100011000010000_37" (formula "1") (term "2,0"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "20"))
                                                                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "15"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "applyEqReverse" (formula "39") (term "0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "narrowSelectArrayType" (formula "38") (term "0") (ifseqformula "6") (ifseqformula "48"))
                                                                  (rule "ifthenelse_split" (formula "2") (term "0"))
                                                                  (branch "result_0 = result TRUE"
                                                                     (rule "applyEqReverse" (formula "53") (term "1") (ifseqformula "3"))
                                                                     (rule "hideAuxiliaryEq" (formula "3"))
                                                                     (rule "eqSymm" (formula "52"))
                                                                     (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "2"))
                                                                     (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "hideAuxiliaryEq" (formula "3"))
                                                                     (rule "applyEq" (formula "43") (term "1,0") (ifseqformula "2"))
                                                                     (rule "close" (formula "43") (ifseqformula "19"))
                                                                  )
                                                                  (branch "result_0 = result FALSE"
                                                                     (rule "applyEqReverse" (formula "53") (term "1") (ifseqformula "2"))
                                                                     (rule "hideAuxiliaryEq" (formula "2"))
                                                                     (rule "eqSymm" (formula "52"))
                                                                     (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "37"))
                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "hideAuxiliaryEq" (formula "2"))
                                                                     (rule "cut_direct" (formula "2") (term "0"))
                                                                     (branch "CUT: self.ciphertext = result TRUE"
                                                                        (builtin "One Step Simplification" (formula "3"))
                                                                        (rule "referencedObjectIsCreatedRightEQ" (formula "46") (ifseqformula "2") (ifseqformula "45"))
                                                                        (rule "close" (formula "46") (ifseqformula "5"))
                                                                     )
                                                                     (branch "CUT: self.ciphertext = result FALSE"
                                                                        (builtin "One Step Simplification" (formula "2"))
                                                                        (rule "referencedObjectIsCreatedRightEQ" (formula "43") (ifseqformula "2") (ifseqformula "42"))
                                                                        (rule "close" (formula "43") (ifseqformula "4"))
                                                                     )
                                                                  )
                                                               )
                                                               (branch "j_0 = i_0 FALSE"
                                                                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "40"))
                                                                  (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "applyEqReverse" (formula "53") (term "1,1") (ifseqformula "3"))
                                                                  (rule "hideAuxiliaryEq" (formula "3"))
                                                                  (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "39"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "applyEqReverse" (formula "52") (term "1,1") (ifseqformula "2"))
                                                                  (rule "hideAuxiliaryEq" (formula "2"))
                                                                  (rule "eqSymm" (formula "51") (term "1"))
                                                                  (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "38"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "applyEqReverse" (formula "51") (term "1,0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "eqSymm" (formula "50") (term "0"))
                                                                  (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "37"))
                                                                  (rule "inEqSimp_contradEq3" (formula "37") (ifseqformula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0"))
                                                                  (rule "add_literals" (formula "37") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "37") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "37") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "37"))
                                                                  (rule "false_right" (formula "37"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                                  (rule "times_zero_1" (formula "1") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                  (rule "mul_literals" (formula "1") (term "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "35") (ifseqformula "1"))
                                                                  (rule "leq_literals" (formula "35") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "35"))
                                                                  (rule "true_left" (formula "35"))
                                                                  (rule "commute_and" (formula "49"))
                                                                  (rule "allLeft" (formula "36") (inst "t=j_0"))
                                                                  (rule "replaceKnownSelect_taclet0001100011000010000_29" (formula "36") (term "0,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet0001100011000010000_30" (formula "36") (term "0,0,0"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "36") (term "1") (ifseqformula "3"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1"))
                                                                  (rule "mul_literals" (formula "36") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "36") (term "0,0,1"))
                                                                  (rule "polySimp_addComm0" (formula "36") (term "0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "36") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "36") (term "1,0,0,1"))
                                                                  (rule "add_zero_right" (formula "36") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "36") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "36"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "36") (term "1") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "36") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "36"))
                                                                  (rule "replace_known_left" (formula "50") (term "1") (ifseqformula "36"))
                                                                  (builtin "One Step Simplification" (formula "50"))
                                                                  (rule "allLeft" (formula "35") (inst "t=j_0"))
                                                                  (rule "replaceKnownSelect_taclet0001100011000010000_27" (formula "35") (term "0,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet0001100011000010000_28" (formula "35") (term "0,0,0"))
                                                                  (rule "replace_known_right" (formula "35") (term "0,0") (ifseqformula "51"))
                                                                  (builtin "One Step Simplification" (formula "35"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "35") (term "0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "35") (term "0,0"))
                                                                  (builtin "One Step Simplification" (formula "35"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "35"))
                                                                  (rule "andLeft" (formula "3"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "3"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                                  (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                                  (rule "add_literals" (formula "3") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "3") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "3") (term "0"))
                                                                  (rule "leq_literals" (formula "3"))
                                                                  (rule "closeFalse" (formula "3"))
                                                               )
                                                            )
                                                            (branch "self.ciphertext = result | self.ciphertext = result_0 FALSE"
                                                               (rule "orRight" (formula "41"))
                                                               (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "7"))
                                                               (rule "applyEqReverse" (formula "1") (term "1,0") (ifseqformula "7"))
                                                               (rule "hideAuxiliaryEq" (formula "7"))
                                                               (rule "ifthenelse_split" (formula "1") (term "0"))
                                                               (branch "j_0 = i_0 TRUE"
                                                                  (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                                  (rule "hideAuxiliaryEq" (formula "2"))
                                                                  (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "1"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "1"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "applyEqReverse" (formula "54") (term "1,1") (ifseqformula "4"))
                                                                  (rule "hideAuxiliaryEq" (formula "4"))
                                                                  (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "1"))
                                                                  (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "applyEqRigid" (formula "3") (term "0,2,2,0") (ifseqformula "1"))
                                                                  (rule "applyEqRigid" (formula "53") (term "0,2,0,0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "53") (term "0,2,0,1") (ifseqformula "1"))
                                                                  (builtin "One Step Simplification" (formula "53"))
                                                                  (rule "applyEq" (formula "5") (term "0") (ifseqformula "1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "5"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                                                  (rule "add_literals" (formula "5") (term "1,0"))
                                                                  (rule "times_zero_1" (formula "5") (term "0"))
                                                                  (rule "qeq_literals" (formula "5"))
                                                                  (rule "true_left" (formula "5"))
                                                                  (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "1"))
                                                                  (rule "allLeft" (formula "31") (inst "t=i_0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "31") (term "1"))
                                                                  (rule "polySimp_addComm1" (formula "31") (term "0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1"))
                                                                  (rule "polySimp_mulComm0" (formula "31") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "31") (term "1,1"))
                                                                  (rule "mul_literals" (formula "31") (term "0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1"))
                                                                  (rule "polySimp_elimOne" (formula "31") (term "1,1,1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "35"))
                                                                  (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "31"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "4"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1"))
                                                                  (rule "mul_literals" (formula "31") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "31") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "31") (term "0,0,0,1"))
                                                                  (rule "add_literals" (formula "31") (term "0,0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                                                  (rule "add_zero_right" (formula "31") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "31") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "31"))
                                                                  (rule "notLeft" (formula "31"))
                                                                  (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=arr_17"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "19"))
                                                                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "14"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")) (ifInst ""  (formula "14")))
                                                                  (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "narrowSelectArrayType" (formula "37") (term "0") (ifseqformula "5") (ifseqformula "47"))
                                                                  (rule "allLeft" (formula "23") (inst "t=i_0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "23") (term "1"))
                                                                  (rule "polySimp_addComm1" (formula "23") (term "0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1"))
                                                                  (rule "polySimp_mulComm0" (formula "23") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "23") (term "1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1"))
                                                                  (rule "mul_literals" (formula "23") (term "0,1,1"))
                                                                  (rule "polySimp_elimOne" (formula "23") (term "1,1,1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "4"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1"))
                                                                  (rule "mul_literals" (formula "23") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "23") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1"))
                                                                  (rule "add_literals" (formula "23") (term "0,0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "23") (term "1,0,0,1"))
                                                                  (rule "add_zero_right" (formula "23") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "23") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "23"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "23") (term "1") (ifseqformula "35"))
                                                                  (rule "qeq_literals" (formula "23") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "23"))
                                                                  (rule "notLeft" (formula "23"))
                                                                  (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=arr_18"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")) (ifInst ""  (formula "13")))
                                                                  (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "narrowSelectArrayType" (formula "37") (term "0") (ifseqformula "5") (ifseqformula "49"))
                                                                  (rule "allLeft" (formula "22") (inst "t=i_0"))
                                                                  (rule "replaceKnownSelect_taclet0110001100011000010000_37" (formula "22") (term "0,0,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet0110001100011000010000_38" (formula "22") (term "0,0,0,0"))
                                                                  (rule "narrowSelectArrayType" (formula "22") (term "0,0,0,0") (ifseqformula "5") (ifseqformula "49"))
                                                                  (rule "replace_known_right" (formula "22") (term "0,0,0") (ifseqformula "39"))
                                                                  (builtin "One Step Simplification" (formula "22"))
                                                                  (rule "true_left" (formula "22"))
                                                                  (rule "allLeft" (formula "32") (inst "t=i_0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "32") (term "1"))
                                                                  (rule "polySimp_addComm1" (formula "32") (term "0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1"))
                                                                  (rule "polySimp_mulComm0" (formula "32") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "32") (term "1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1"))
                                                                  (rule "mul_literals" (formula "32") (term "0,1,1"))
                                                                  (rule "polySimp_elimOne" (formula "32") (term "1,1,1"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "32") (term "1,0") (ifseqformula "35"))
                                                                  (rule "qeq_literals" (formula "32") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "32"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "32") (term "1") (ifseqformula "4"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1"))
                                                                  (rule "mul_literals" (formula "32") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "32") (term "0,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "32") (term "0,0,0,1"))
                                                                  (rule "add_literals" (formula "32") (term "0,0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "32") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "32") (term "1,0,0,1"))
                                                                  (rule "add_literals" (formula "32") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "32") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "32"))
                                                                  (rule "notLeft" (formula "32"))
                                                                  (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=arr_19"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "27"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                                                                  (rule "replaceKnownSelect_taclet0110001100011000010000_39" (formula "1") (term "2,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet0110001100011000010000_40" (formula "1") (term "2,0"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "19"))
                                                                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "13"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "narrowSelectArrayType" (formula "37") (term "0") (ifseqformula "5") (ifseqformula "50"))
                                                                  (rule "ifthenelse_split" (formula "2") (term "0"))
                                                                  (branch "result_0 = result TRUE"
                                                                     (rule "applyEqReverse" (formula "54") (term "1") (ifseqformula "3"))
                                                                     (rule "hideAuxiliaryEq" (formula "3"))
                                                                     (rule "eqSymm" (formula "53"))
                                                                     (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "2"))
                                                                     (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "hideAuxiliaryEq" (formula "3"))
                                                                     (rule "applyEq" (formula "35") (term "0,1,1,0,0,0,0,0") (ifseqformula "2"))
                                                                     (builtin "One Step Simplification" (formula "35"))
                                                                     (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "2"))
                                                                     (rule "applyEq" (formula "39") (term "1") (ifseqformula "2"))
                                                                     (rule "applyEq" (formula "40") (term "1") (ifseqformula "2"))
                                                                     (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "2"))
                                                                     (rule "applyEq" (formula "33") (term "0,1,1,0,0,0,0,0") (ifseqformula "2"))
                                                                     (builtin "One Step Simplification" (formula "33"))
                                                                     (rule "applyEq" (formula "41") (term "1,0") (ifseqformula "2"))
                                                                     (rule "close" (formula "41") (ifseqformula "18"))
                                                                  )
                                                                  (branch "result_0 = result FALSE"
                                                                     (rule "close" (formula "54") (ifseqformula "2"))
                                                                  )
                                                               )
                                                               (branch "j_0 = i_0 FALSE"
                                                                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "39"))
                                                                  (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                                  (rule "hideAuxiliaryEq" (formula "2"))
                                                                  (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "38"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "applyEqReverse" (formula "53") (term "1,0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "eqSymm" (formula "52") (term "0"))
                                                                  (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "37"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "applyEqReverse" (formula "52") (term "1,1") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "eqSymm" (formula "51") (term "1"))
                                                                  (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "36"))
                                                                  (rule "inEqSimp_contradEq3" (formula "36") (ifseqformula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0"))
                                                                  (rule "add_literals" (formula "36") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "36") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "36") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "36") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "36"))
                                                                  (rule "false_right" (formula "36"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                                  (rule "mul_literals" (formula "1") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                  (rule "mul_literals" (formula "1") (term "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "34") (ifseqformula "1"))
                                                                  (rule "leq_literals" (formula "34") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "34"))
                                                                  (rule "true_left" (formula "34"))
                                                                  (rule "commute_and" (formula "50"))
                                                                  (rule "allLeft" (formula "35") (inst "t=j_0"))
                                                                  (rule "replaceKnownSelect_taclet0001100011000010000_29" (formula "35") (term "0,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet0001100011000010000_30" (formula "35") (term "0,0,0"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                                                  (builtin "One Step Simplification" (formula "35"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "35") (term "1") (ifseqformula "3"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1"))
                                                                  (rule "mul_literals" (formula "35") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "35") (term "0,0,1"))
                                                                  (rule "polySimp_addComm0" (formula "35") (term "0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                                  (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "35") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "35"))
                                                                  (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "35"))
                                                                  (builtin "One Step Simplification" (formula "51"))
                                                                  (rule "allLeft" (formula "34") (inst "t=j_0"))
                                                                  (rule "replaceKnownSelect_taclet0001100011000010000_27" (formula "34") (term "0,0,0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet0001100011000010000_28" (formula "34") (term "0,0,0"))
                                                                  (rule "replace_known_right" (formula "34") (term "0,0") (ifseqformula "52"))
                                                                  (builtin "One Step Simplification" (formula "34"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "34") (term "1") (ifseqformula "3"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1"))
                                                                  (rule "mul_literals" (formula "34") (term "0,1,0,0,1"))
                                                                  (rule "polySimp_addAssoc" (formula "34") (term "0,0,1"))
                                                                  (rule "polySimp_addComm0" (formula "34") (term "0,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                                                  (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                                  (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                                                  (rule "leq_literals" (formula "34") (term "0,1"))
                                                                  (builtin "One Step Simplification" (formula "34"))
                                                                  (rule "inEqSimp_contradInEq1" (formula "34") (ifseqformula "2"))
                                                                  (rule "qeq_literals" (formula "34") (term "0"))
                                                                  (builtin "One Step Simplification" (formula "34"))
                                                                  (rule "closeFalse" (formula "34"))
                                                               )
                                                            )
                                                         )
                                                      )
                                                      (branch "Case 2"
                                                         (rule "allRight" (formula "47") (inst "sk=f_0"))
                                                         (rule "allRight" (formula "47") (inst "sk=o_0"))
                                                         (rule "orRight" (formula "47"))
                                                         (rule "orRight" (formula "47"))
                                                         (rule "orRight" (formula "47"))
                                                         (rule "pullOutSelect" (formula "50") (term "0") (inst "selectSK=f_0_0"))
                                                         (rule "simplifySelectOfStore" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "castDel" (formula "1") (term "1,0"))
                                                         (rule "eqSymm" (formula "51"))
                                                         (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                         (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                         (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "49"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "simplifySelectOfStore" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "castDel" (formula "1") (term "1,0"))
                                                         (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                         (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                         (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "48"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "simplifySelectOfAnon" (formula "1"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "27"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,1,0,0") (ifseqformula "19"))
                                                         (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")) (ifInst ""  (formula "48")))
                                                         (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=f_0_1"))
                                                         (rule "applyEq" (formula "2") (term "2,0") (ifseqformula "1"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "20"))
                                                         (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "shift_paren_and" (formula "52"))
                                                         (rule "ifthenelse_split" (formula "6") (term "0"))
                                                         (branch "self.ciphertext = result | self.ciphertext = result_0 TRUE"
                                                            (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "7"))
                                                            (rule "hideAuxiliaryEq" (formula "7"))
                                                            (rule "ifthenelse_split" (formula "4") (term "0"))
                                                            (branch "self.plaintext = result | self.plaintext = result_0 TRUE"
                                                               (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                               (rule "hideAuxiliaryEq" (formula "5"))
                                                               (rule "shift_paren_and" (formula "52") (term "0"))
                                                               (rule "allLeft" (formula "18") (inst "t=i_0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                                               (rule "polySimp_addComm1" (formula "18") (term "0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1"))
                                                               (rule "polySimp_mulComm0" (formula "18") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "18") (term "1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1"))
                                                               (rule "mul_literals" (formula "18") (term "0,1,1"))
                                                               (rule "polySimp_elimOne" (formula "18") (term "1,1,1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "7"))
                                                               (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                                               (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                                               (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                                               (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "18") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "18"))
                                                               (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "38"))
                                                               (rule "qeq_literals" (formula "18") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "18"))
                                                               (rule "notLeft" (formula "18"))
                                                               (rule "allLeft" (formula "34") (inst "t=i_0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "34") (term "1"))
                                                               (rule "polySimp_addComm1" (formula "34") (term "0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1"))
                                                               (rule "polySimp_mulComm0" (formula "34") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "34") (term "1,1"))
                                                               (rule "mul_literals" (formula "34") (term "0,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1"))
                                                               (rule "polySimp_elimOne" (formula "34") (term "1,1,1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "7"))
                                                               (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1"))
                                                               (rule "mul_literals" (formula "34") (term "0,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "34") (term "0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "34") (term "0,0,0,1"))
                                                               (rule "add_literals" (formula "34") (term "0,0,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                                               (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "34") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "34"))
                                                               (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "38"))
                                                               (rule "qeq_literals" (formula "34") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "34"))
                                                               (rule "notLeft" (formula "34"))
                                                               (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=arr_8"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "22"))
                                                               (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "17"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")) (ifInst ""  (formula "17")))
                                                               (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "narrowSelectArrayType" (formula "40") (term "0") (ifseqformula "8") (ifseqformula "47"))
                                                               (rule "allLeft" (formula "19") (inst "t=i_0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "19") (term "1"))
                                                               (rule "polySimp_addComm1" (formula "19") (term "0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1"))
                                                               (rule "polySimp_mulComm0" (formula "19") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "19") (term "1,1"))
                                                               (rule "mul_literals" (formula "19") (term "0,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1"))
                                                               (rule "polySimp_elimOne" (formula "19") (term "1,1,1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "7"))
                                                               (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                                                               (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1"))
                                                               (rule "add_literals" (formula "19") (term "0,0,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                                               (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "19") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "19"))
                                                               (rule "inEqSimp_contradInEq1" (formula "19") (term "1") (ifseqformula "38"))
                                                               (rule "qeq_literals" (formula "19") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "19"))
                                                               (rule "notLeft" (formula "19"))
                                                               (rule "allLeft" (formula "26") (inst "t=i_0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "26") (term "1"))
                                                               (rule "polySimp_addComm1" (formula "26") (term "0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1"))
                                                               (rule "polySimp_mulComm0" (formula "26") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "26") (term "1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1"))
                                                               (rule "mul_literals" (formula "26") (term "0,1,1"))
                                                               (rule "polySimp_elimOne" (formula "26") (term "1,1,1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "38"))
                                                               (rule "qeq_literals" (formula "26") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "26"))
                                                               (rule "inEqSimp_contradInEq1" (formula "26") (term "1") (ifseqformula "7"))
                                                               (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1"))
                                                               (rule "mul_literals" (formula "26") (term "0,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "26") (term "0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1"))
                                                               (rule "add_literals" (formula "26") (term "0,0,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                                               (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                                               (rule "add_literals" (formula "26") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "26") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "26"))
                                                               (rule "notLeft" (formula "26"))
                                                               (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=arr_9"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")) (ifInst ""  (formula "16")))
                                                               (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "narrowSelectArrayType" (formula "40") (term "0") (ifseqformula "8") (ifseqformula "49"))
                                                               (rule "allLeft" (formula "35") (inst "t=i_0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "35") (term "1"))
                                                               (rule "polySimp_addComm1" (formula "35") (term "0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1"))
                                                               (rule "polySimp_mulComm0" (formula "35") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "35") (term "1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1"))
                                                               (rule "mul_literals" (formula "35") (term "0,1,1"))
                                                               (rule "polySimp_elimOne" (formula "35") (term "1,1,1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "38"))
                                                               (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "35"))
                                                               (rule "inEqSimp_contradInEq1" (formula "35") (term "1") (ifseqformula "7"))
                                                               (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1"))
                                                               (rule "mul_literals" (formula "35") (term "0,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "35") (term "0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "35") (term "0,0,0,1"))
                                                               (rule "add_literals" (formula "35") (term "0,0,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                                               (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                                               (rule "add_literals" (formula "35") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "35") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "35"))
                                                               (rule "notLeft" (formula "35"))
                                                               (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=arr_10"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")))
                                                               (rule "replaceKnownSelect_taclet001001100011000010000_33" (formula "1") (term "2,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet001001100011000010000_34" (formula "1") (term "2,0"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "22"))
                                                               (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "16"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "applyEqReverse" (formula "41") (term "0") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "narrowSelectArrayType" (formula "40") (term "0") (ifseqformula "8") (ifseqformula "49"))
                                                               (rule "allLeft" (formula "25") (inst "t=i_0"))
                                                               (rule "replaceKnownSelect_taclet001001100011000010000_31" (formula "25") (term "0,0,0,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet001001100011000010000_32" (formula "25") (term "0,0,0,0"))
                                                               (rule "narrowSelectArrayType" (formula "25") (term "0,0,0,0") (ifseqformula "8") (ifseqformula "48"))
                                                               (rule "replace_known_right" (formula "25") (term "0,0,0") (ifseqformula "42"))
                                                               (builtin "One Step Simplification" (formula "25"))
                                                               (rule "true_left" (formula "25"))
                                                               (rule "ifthenelse_split" (formula "5") (term "0"))
                                                               (branch "self.plaintext = result_0 TRUE"
                                                                  (rule "referencedObjectIsCreatedRightEQ" (formula "44") (ifseqformula "5") (ifseqformula "43"))
                                                                  (rule "close" (formula "44") (ifseqformula "9"))
                                                               )
                                                               (branch "self.plaintext = result_0 FALSE"
                                                                  (rule "hideAuxiliaryEq" (formula "5"))
                                                                  (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "39"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "referencedObjectIsCreatedRightEQ" (formula "46") (ifseqformula "4") (ifseqformula "45"))
                                                                  (rule "close" (formula "46") (ifseqformula "7"))
                                                               )
                                                            )
                                                            (branch "self.plaintext = result | self.plaintext = result_0 FALSE"
                                                               (rule "orRight" (formula "40"))
                                                               (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                               (rule "hideAuxiliaryEq" (formula "4"))
                                                               (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "40"))
                                                               (builtin "One Step Simplification" (formula "4"))
                                                               (rule "hideAuxiliaryEq" (formula "4"))
                                                               (rule "shift_paren_and" (formula "52") (term "0"))
                                                               (rule "ifthenelse_split" (formula "1") (term "0"))
                                                               (branch "!o_0 = null & !o_0.<created> = TRUE TRUE"
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "notLeft" (formula "2"))
                                                                  (rule "notLeft" (formula "1"))
                                                                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "replace_known_right" (formula "2") (term "0,0,0,1,0,0") (ifseqformula "38"))
                                                                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "37")))
                                                                  (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "38"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                                                                  (rule "replace_known_right" (formula "53") (term "0,0,0,0") (ifseqformula "37"))
                                                                  (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "38")))
                                                                  (rule "ifthenelse_negated" (formula "2") (term "0"))
                                                                  (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                                  (rule "ifthenelse_split" (formula "1") (term "0"))
                                                                  (branch " o_0.<created>@anon_heap_newArray<<anonHeapFunction>> = TRUE TRUE"
                                                                     (rule "applyEqReverse" (formula "55") (term "0") (ifseqformula "2"))
                                                                     (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
                                                                     (rule "hideAuxiliaryEq" (formula "2"))
                                                                     (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "54")))
                                                                     (rule "closeFalse" (formula "2"))
                                                                  )
                                                                  (branch " o_0.<created>@anon_heap_newArray<<anonHeapFunction>> = TRUE FALSE"
                                                                     (rule "applyEqReverse" (formula "55") (term "0") (ifseqformula "1"))
                                                                     (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "36"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "replace_known_right" (formula "53") (term "0,0") (ifseqformula "36"))
                                                                     (builtin "One Step Simplification" (formula "53"))
                                                                     (rule "notRight" (formula "53"))
                                                                     (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "54")))
                                                                     (rule "closeFalse" (formula "2"))
                                                                  )
                                                               )
                                                               (branch "!o_0 = null & !o_0.<created> = TRUE FALSE"
                                                                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "replace_known_right" (formula "52") (term "0,0") (ifseqformula "37"))
                                                                  (builtin "One Step Simplification" (formula "52"))
                                                                  (rule "false_right" (formula "52"))
                                                                  (rule "ifthenelse_split" (formula "1") (term "0"))
                                                                  (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_newArray<<anonHeapFunction>> = TRUE) TRUE"
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "notLeft" (formula "2"))
                                                                     (rule "notLeft" (formula "1"))
                                                                     (rule "orRight" (formula "38"))
                                                                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                     (rule "applyEqReverse" (formula "55") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "replace_known_right" (formula "1") (term "1,0,0,1,0,0") (ifseqformula "38"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")) (ifInst ""  (formula "37")))
                                                                     (rule "replace_known_right" (formula "39") (term "0,0") (ifseqformula "36"))
                                                                     (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "37")))
                                                                     (rule "closeTrue" (formula "39"))
                                                                  )
                                                                  (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_newArray<<anonHeapFunction>> = TRUE) FALSE"
                                                                     (rule "applyEqReverse" (formula "53") (term "0") (ifseqformula "1"))
                                                                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "ifthenelse_split" (formula "1") (term "0"))
                                                                     (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_newArray<<anonHeapFunction>> = TRUE | o_0.<created>@anon_heap_newArray_0<<anonHeapFunction>> = TRUE) TRUE"
                                                                        (rule "andLeft" (formula "1"))
                                                                        (rule "notLeft" (formula "2"))
                                                                        (rule "notLeft" (formula "1"))
                                                                        (rule "orRight" (formula "37"))
                                                                        (rule "orRight" (formula "37"))
                                                                        (rule "applyEqReverse" (formula "56") (term "1") (ifseqformula "1"))
                                                                        (rule "hideAuxiliaryEq" (formula "1"))
                                                                        (rule "eqSymm" (formula "55"))
                                                                        (rule "replace_known_right" (formula "40") (term "0,0") (ifseqformula "35"))
                                                                        (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "36")))
                                                                        (rule "closeTrue" (formula "40"))
                                                                     )
                                                                     (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_newArray<<anonHeapFunction>> = TRUE | o_0.<created>@anon_heap_newArray_0<<anonHeapFunction>> = TRUE) FALSE"
                                                                        (rule "close" (formula "53") (ifseqformula "1"))
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                         )
                                                         (branch "self.ciphertext = result | self.ciphertext = result_0 FALSE"
                                                            (rule "orRight" (formula "40"))
                                                            (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "6"))
                                                            (rule "hideAuxiliaryEq" (formula "6"))
                                                            (rule "ifthenelse_split" (formula "4") (term "0"))
                                                            (branch "self.plaintext = result | self.plaintext = result_0 TRUE"
                                                               (rule "applyEqReverse" (formula "6") (term "2,0") (ifseqformula "5"))
                                                               (rule "hideAuxiliaryEq" (formula "5"))
                                                               (rule "shift_paren_and" (formula "53") (term "0"))
                                                               (rule "allLeft" (formula "17") (inst "t=i_0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "17") (term "1"))
                                                               (rule "polySimp_addComm1" (formula "17") (term "0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1"))
                                                               (rule "polySimp_mulComm0" (formula "17") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "17") (term "1,1"))
                                                               (rule "mul_literals" (formula "17") (term "0,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1"))
                                                               (rule "polySimp_elimOne" (formula "17") (term "1,1,1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "37"))
                                                               (rule "qeq_literals" (formula "17") (term "0,1,0"))
                                                               (builtin "One Step Simplification" (formula "17"))
                                                               (rule "inEqSimp_contradInEq1" (formula "17") (term "1") (ifseqformula "6"))
                                                               (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                                                               (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1"))
                                                               (rule "add_literals" (formula "17") (term "0,0,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                                               (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                                               (rule "add_literals" (formula "17") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "17") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "17"))
                                                               (rule "notLeft" (formula "17"))
                                                               (rule "allLeft" (formula "33") (inst "t=i_0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "33") (term "1"))
                                                               (rule "polySimp_addComm1" (formula "33") (term "0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1"))
                                                               (rule "polySimp_mulComm0" (formula "33") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "33") (term "1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1"))
                                                               (rule "mul_literals" (formula "33") (term "0,1,1"))
                                                               (rule "polySimp_elimOne" (formula "33") (term "1,1,1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "6"))
                                                               (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1"))
                                                               (rule "mul_literals" (formula "33") (term "0,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "33") (term "0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "33") (term "0,0,0,1"))
                                                               (rule "add_literals" (formula "33") (term "0,0,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                                               (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                                               (rule "add_literals" (formula "33") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "33") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "33"))
                                                               (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "37"))
                                                               (rule "qeq_literals" (formula "33") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "33"))
                                                               (rule "notLeft" (formula "33"))
                                                               (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=arr_5"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "21"))
                                                               (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "16"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")) (ifInst ""  (formula "16")))
                                                               (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "narrowSelectArrayType" (formula "39") (term "0") (ifseqformula "7") (ifseqformula "48"))
                                                               (rule "allLeft" (formula "18") (inst "t=i_0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "18") (term "1"))
                                                               (rule "polySimp_addComm1" (formula "18") (term "0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1"))
                                                               (rule "polySimp_mulComm0" (formula "18") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "18") (term "1,1"))
                                                               (rule "mul_literals" (formula "18") (term "0,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1"))
                                                               (rule "polySimp_elimOne" (formula "18") (term "1,1,1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "6"))
                                                               (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1"))
                                                               (rule "mul_literals" (formula "18") (term "0,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "18") (term "0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1"))
                                                               (rule "add_literals" (formula "18") (term "0,0,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                                               (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                                               (rule "add_literals" (formula "18") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "18") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "18"))
                                                               (rule "inEqSimp_contradInEq1" (formula "18") (term "1") (ifseqformula "37"))
                                                               (rule "qeq_literals" (formula "18") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "18"))
                                                               (rule "notLeft" (formula "18"))
                                                               (rule "allLeft" (formula "25") (inst "t=i_0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "25") (term "1"))
                                                               (rule "polySimp_addComm1" (formula "25") (term "0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1"))
                                                               (rule "polySimp_mulComm0" (formula "25") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "25") (term "1,1"))
                                                               (rule "mul_literals" (formula "25") (term "0,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1"))
                                                               (rule "polySimp_elimOne" (formula "25") (term "1,1,1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "6"))
                                                               (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1"))
                                                               (rule "mul_literals" (formula "25") (term "0,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "25") (term "0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "25") (term "0,0,0,1"))
                                                               (rule "add_literals" (formula "25") (term "0,0,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                                               (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "25") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "25"))
                                                               (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "37"))
                                                               (rule "qeq_literals" (formula "25") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "25"))
                                                               (rule "notLeft" (formula "25"))
                                                               (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=arr_6"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")) (ifInst ""  (formula "15")))
                                                               (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "narrowSelectArrayType" (formula "39") (term "0") (ifseqformula "7") (ifseqformula "50"))
                                                               (rule "allLeft" (formula "34") (inst "t=i_0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "34") (term "1"))
                                                               (rule "polySimp_addComm1" (formula "34") (term "0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1"))
                                                               (rule "polySimp_mulComm0" (formula "34") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "34") (term "1,1"))
                                                               (rule "mul_literals" (formula "34") (term "0,1,1"))
                                                               (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1"))
                                                               (rule "polySimp_elimOne" (formula "34") (term "1,1,1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "6"))
                                                               (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                                               (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1"))
                                                               (rule "mul_literals" (formula "34") (term "0,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "34") (term "0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "34") (term "0,0,0,1"))
                                                               (rule "add_literals" (formula "34") (term "0,0,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                                               (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                                               (rule "leq_literals" (formula "34") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "34"))
                                                               (rule "inEqSimp_contradInEq1" (formula "34") (term "1") (ifseqformula "37"))
                                                               (rule "qeq_literals" (formula "34") (term "0,1"))
                                                               (builtin "One Step Simplification" (formula "34"))
                                                               (rule "notLeft" (formula "34"))
                                                               (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=arr_7"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "29"))
                                                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                                                               (rule "replaceKnownSelect_taclet011001100011000010000_33" (formula "1") (term "2,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet011001100011000010000_34" (formula "1") (term "2,0"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "21"))
                                                               (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "15"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "applyEqReverse" (formula "40") (term "0") (ifseqformula "1"))
                                                               (rule "hideAuxiliaryEq" (formula "1"))
                                                               (rule "narrowSelectArrayType" (formula "39") (term "0") (ifseqformula "7") (ifseqformula "50"))
                                                               (rule "allLeft" (formula "24") (inst "t=i_0"))
                                                               (rule "replaceKnownSelect_taclet011001100011000010000_31" (formula "24") (term "0,0,0,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet011001100011000010000_32" (formula "24") (term "0,0,0,0"))
                                                               (rule "narrowSelectArrayType" (formula "24") (term "0,0,0,0") (ifseqformula "7") (ifseqformula "49"))
                                                               (rule "replace_known_right" (formula "24") (term "0,0,0") (ifseqformula "41"))
                                                               (builtin "One Step Simplification" (formula "24"))
                                                               (rule "true_left" (formula "24"))
                                                               (rule "ifthenelse_split" (formula "5") (term "0"))
                                                               (branch "self.plaintext = result_0 TRUE"
                                                                  (rule "referencedObjectIsCreatedRightEQ" (formula "45") (ifseqformula "5") (ifseqformula "44"))
                                                                  (rule "close" (formula "45") (ifseqformula "8"))
                                                               )
                                                               (branch "self.plaintext = result_0 FALSE"
                                                                  (rule "hideAuxiliaryEq" (formula "5"))
                                                                  (rule "replace_known_right" (formula "4") (term "1") (ifseqformula "38"))
                                                                  (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "referencedObjectIsCreatedRightEQ" (formula "47") (ifseqformula "4") (ifseqformula "46"))
                                                                  (rule "close" (formula "47") (ifseqformula "6"))
                                                               )
                                                            )
                                                            (branch "self.plaintext = result | self.plaintext = result_0 FALSE"
                                                               (rule "orRight" (formula "39"))
                                                               (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                               (rule "hideAuxiliaryEq" (formula "4"))
                                                               (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "39"))
                                                               (builtin "One Step Simplification" (formula "4"))
                                                               (rule "hideAuxiliaryEq" (formula "4"))
                                                               (rule "shift_paren_and" (formula "53") (term "0"))
                                                               (rule "ifthenelse_split" (formula "1") (term "0"))
                                                               (branch "!o_0 = null & !o_0.<created> = TRUE TRUE"
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "notLeft" (formula "2"))
                                                                  (rule "notLeft" (formula "1"))
                                                                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "36"))
                                                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                                                                  (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "36"))
                                                                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "37")))
                                                                  (rule "replace_known_right" (formula "54") (term "0,1,0,0") (ifseqformula "37"))
                                                                  (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "36")))
                                                                  (rule "ifthenelse_negated" (formula "1") (term "0"))
                                                                  (rule "ifthenelse_negated" (formula "2") (term "0"))
                                                                  (rule "ifthenelse_split" (formula "1") (term "0"))
                                                                  (branch " o_0.<created>@anon_heap_newArray<<anonHeapFunction>> = TRUE TRUE"
                                                                     (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
                                                                     (rule "applyEqReverse" (formula "56") (term "0") (ifseqformula "2"))
                                                                     (rule "hideAuxiliaryEq" (formula "2"))
                                                                     (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "55")))
                                                                     (rule "closeFalse" (formula "2"))
                                                                  )
                                                                  (branch " o_0.<created>@anon_heap_newArray<<anonHeapFunction>> = TRUE FALSE"
                                                                     (rule "applyEqReverse" (formula "56") (term "0") (ifseqformula "1"))
                                                                     (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "35"))
                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "replace_known_right" (formula "54") (term "0,0") (ifseqformula "35"))
                                                                     (builtin "One Step Simplification" (formula "54"))
                                                                     (rule "notRight" (formula "54"))
                                                                     (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "1"))
                                                                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "55")))
                                                                     (rule "closeFalse" (formula "2"))
                                                                  )
                                                               )
                                                               (branch "!o_0 = null & !o_0.<created> = TRUE FALSE"
                                                                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "replace_known_right" (formula "53") (term "0,0") (ifseqformula "36"))
                                                                  (builtin "One Step Simplification" (formula "53"))
                                                                  (rule "false_right" (formula "53"))
                                                                  (rule "ifthenelse_split" (formula "1") (term "0"))
                                                                  (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_newArray<<anonHeapFunction>> = TRUE) TRUE"
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "notLeft" (formula "1"))
                                                                     (rule "notLeft" (formula "1"))
                                                                     (rule "orRight" (formula "36"))
                                                                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                     (rule "applyEqReverse" (formula "56") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "replace_known_right" (formula "1") (term "1,0,0,1,0,0") (ifseqformula "36"))
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")) (ifInst ""  (formula "35")))
                                                                     (rule "replace_known_right" (formula "38") (term "0,1") (ifseqformula "35"))
                                                                     (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "37")))
                                                                     (rule "closeTrue" (formula "38"))
                                                                  )
                                                                  (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_newArray<<anonHeapFunction>> = TRUE) FALSE"
                                                                     (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                     (rule "applyEqReverse" (formula "54") (term "0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "ifthenelse_split" (formula "1") (term "0"))
                                                                     (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_newArray<<anonHeapFunction>> = TRUE | o_0.<created>@anon_heap_newArray_0<<anonHeapFunction>> = TRUE) TRUE"
                                                                        (rule "andLeft" (formula "1"))
                                                                        (rule "notLeft" (formula "2"))
                                                                        (rule "notLeft" (formula "1"))
                                                                        (rule "orRight" (formula "36"))
                                                                        (rule "orRight" (formula "36"))
                                                                        (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "1"))
                                                                        (rule "hideAuxiliaryEq" (formula "1"))
                                                                        (rule "eqSymm" (formula "56"))
                                                                        (rule "replace_known_right" (formula "39") (term "0,0") (ifseqformula "34"))
                                                                        (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "35")))
                                                                        (rule "closeTrue" (formula "39"))
                                                                     )
                                                                     (branch " !o_0 = null & !( o_0.<created> = TRUE | o_0.<created>@anon_heap_newArray<<anonHeapFunction>> = TRUE | o_0.<created>@anon_heap_newArray_0<<anonHeapFunction>> = TRUE) FALSE"
                                                                        (rule "close" (formula "54") (ifseqformula "1"))
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                   (branch "Null Reference (x_arr_arr_8 = null)"
                                                      (builtin "One Step Simplification" (formula "55"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                   (branch "Index Out of Bounds (x_arr_arr_8 != null, but x_17 Out of Bounds!)"
                                                      (builtin "One Step Simplification" (formula "55"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                                                      (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                                                      (rule "add_literals" (formula "1") (term "0,0,1"))
                                                      (rule "blockThrow" (formula "55") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                      (rule "mul_literals" (formula "3") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "5"))
                                                      (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "1") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "41") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "41") (term "0"))
                                                      (builtin "One Step Simplification" (formula "41"))
                                                      (rule "closeFalse" (formula "41"))
                                                   )
                                                   (branch "Array Store Exception (incompatible dynamic element type of x_arr_arr_8 and x_arr_1)"
                                                      (builtin "One Step Simplification" (formula "55"))
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")) (ifInst ""  (formula "41")))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "notLeft" (formula "2"))
                                                      (rule "array_store_known_dynamic_array_type" (formula "44") (ifseqformula "27"))
                                                      (rule "typeEqDerived2" (formula "44") (term "0,1") (ifseqformula "2"))
                                                      (builtin "One Step Simplification" (formula "44"))
                                                      (rule "closeTrue" (formula "44"))
                                                   )
                                                )
                                                (branch "Null Reference (x_arr_arr_10 = null)"
                                                   (builtin "One Step Simplification" (formula "52"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqRigid" (formula "2") (term "1") (ifseqformula "1"))
                                                   (rule "ifEqualsNull" (formula "2"))
                                                   (rule "replace_known_right" (formula "2") (term "1,1") (ifseqformula "48"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "blockThrow" (formula "53") (term "1"))
                                                   (builtin "One Step Simplification" (formula "53"))
                                                   (rule "elementOfUnion" (formula "2"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "sortsDisjointModuloNull" (formula "2") (term "1"))
                                                   (rule "replace_known_right" (formula "2") (term "1,1") (ifseqformula "43"))
                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "50")))
                                                   (rule "sortsDisjointModuloNull" (formula "2"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "close" (formula "51") (ifseqformula "2"))
                                                )
                                                (branch "Index Out of Bounds (x_arr_arr_10 != null, but i Out of Bounds!)"
                                                   (builtin "One Step Simplification" (formula "52"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                   (rule "add_literals" (formula "1") (term "0,0,1"))
                                                   (rule "blockThrow" (formula "53") (term "1"))
                                                   (builtin "One Step Simplification" (formula "53"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "39"))
                                                   (rule "qeq_literals" (formula "1") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "elementOfUnion" (formula "2") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "sortsDisjointModuloNull" (formula "2") (term "1,0,0"))
                                                   (rule "replace_known_right" (formula "2") (term "0,1,0,0") (ifseqformula "50"))
                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "43")))
                                                   (rule "sortsDisjointModuloNull" (formula "2") (term "0,0"))
                                                   (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "46"))
                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "50")))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet21100011000010000_17" (formula "41") (term "0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet21100011000010000_17" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "1"))
                                                   (rule "times_zero_1" (formula "13") (term "0,0"))
                                                   (rule "add_zero_left" (formula "13") (term "0"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "3") (term "1,0") (ifseqformula "37"))
                                                   (rule "onlyCreatedObjectsAreReferenced" (formula "4") (term "2,0") (ifseqformula "7"))
                                                   (rule "methodCallThrow" (formula "53") (term "1,0,0,1"))
                                                   (builtin "One Step Simplification" (formula "53"))
                                                   (rule "tryCatchThrow" (formula "53") (term "1,0,0,1"))
                                                   (rule "ifElseUnfold" (formula "53") (term "1,0,0,1") (inst "#boolv=x"))
                                                   (rule "variableDeclaration" (formula "53") (term "1,0,0,1") (newnames "x_21"))
                                                   (rule "equality_comparison_simple" (formula "53") (term "1,0,0,1"))
                                                   (rule "throwUnfold" (formula "53") (term "1") (inst "#v0=a"))
                                                   (rule "variableDeclarationAssign" (formula "53") (term "1"))
                                                   (rule "variableDeclaration" (formula "53") (term "1") (newnames "a_12"))
                                                   (rule "instanceCreationAssignment" (formula "53") (term "1") (inst "#v0=a_13"))
                                                   (rule "variableDeclarationAssign" (formula "53") (term "1"))
                                                   (rule "variableDeclaration" (formula "53") (term "1") (newnames "a_13"))
                                                   (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "53") (term "1") (inst "#v0=a_14"))
                                                   (rule "variableDeclaration" (formula "53") (term "1") (newnames "a_14"))
                                                   (rule "methodBodyExpand" (formula "53") (term "1") (newnames "heapBefore_<createObject>_2,savedHeapBefore_<createObject>_2"))
                                                   (builtin "One Step Simplification" (formula "53"))
                                                   (rule "variableDeclaration" (formula "53") (term "1") (newnames "__NEW___3"))
                                                   (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "53") (term "1") (inst "#v0=a_15"))
                                                   (rule "variableDeclaration" (formula "53") (term "1") (newnames "a_15"))
                                                   (rule "allocateInstance" (formula "53"))
                                                   (builtin "One Step Simplification" (formula "54"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "dismissNonSelectedField" (formula "1") (term "0,0,1"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1") (ifseqformula "33"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1") (ifseqformula "24"))
                                                   (rule "blockEmpty" (formula "56") (term "1"))
                                                   (rule "assignment" (formula "56") (term "1"))
                                                   (builtin "One Step Simplification" (formula "56"))
                                                   (rule "wellFormedStoreArray" (formula "1") (term "0"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "wellFormedAnon" (formula "1") (term "0,0,0"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0") (ifseqformula "33"))
                                                   (rule "wellFormedAnonEQ" (formula "1") (term "0,0,0,0") (ifseqformula "33"))
                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,0") (ifseqformula "24"))
                                                   (rule "wellFormedAnonEQ" (formula "1") (term "0,0,0,0,0") (ifseqformula "24"))
                                                   (rule "replace_known_left" (formula "1") (term "0,0,0,0,0,0") (ifseqformula "10"))
                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")) (ifInst ""  (formula "32")) (ifInst ""  (formula "41")))
                                                   (rule "array_store_known_dynamic_array_type" (formula "1") (term "1,1,0") (ifseqformula "38"))
                                                   (rule "typeEqDerived2" (formula "1") (term "0,1,1,1,0") (ifseqformula "7"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "commute_or_2" (formula "1") (term "1,0"))
                                                   (rule "commute_or_2" (formula "1") (term "0,1"))
                                                   (rule "shift_paren_or" (formula "1") (term "0"))
                                                   (rule "commute_or_2" (formula "1") (term "0,0,1"))
                                                   (rule "shift_paren_or" (formula "1") (term "0,0"))
                                                   (rule "shift_paren_or" (formula "1") (term "0,0,0"))
                                                   (rule "commute_or_2" (formula "1") (term "0,0"))
                                                   (rule "methodBodyExpand" (formula "56") (term "1") (newnames "heapBefore_<create>_2,savedHeapBefore_<create>_2"))
                                                   (builtin "One Step Simplification" (formula "56"))
                                                   (rule "assignment_write_attribute_this" (formula "56") (term "1"))
                                                   (builtin "One Step Simplification" (formula "56"))
                                                   (rule "methodCallWithinClass" (formula "56") (term "1"))
                                                   (rule "methodBodyExpand" (formula "56") (term "1") (newnames "heapBefore_<prepareEnter>_2,savedHeapBefore_<prepareEnter>_2"))
                                                   (builtin "One Step Simplification" (formula "56"))
                                                   (rule "methodCallSuper" (formula "56") (term "1"))
                                                   (rule "methodBodyExpand" (formula "56") (term "1") (newnames "heapBefore_<prepare>_14,savedHeapBefore_<prepare>_14"))
                                                   (builtin "One Step Simplification" (formula "56"))
                                                   (rule "methodCallSuper" (formula "56") (term "1"))
                                                   (rule "methodBodyExpand" (formula "56") (term "1") (newnames "heapBefore_<prepare>_15,savedHeapBefore_<prepare>_15"))
                                                   (builtin "One Step Simplification" (formula "56"))
                                                   (rule "methodCallSuper" (formula "56") (term "1"))
                                                   (rule "methodBodyExpand" (formula "56") (term "1") (newnames "heapBefore_<prepare>_16,savedHeapBefore_<prepare>_16"))
                                                   (builtin "One Step Simplification" (formula "56"))
                                                   (rule "methodCallSuper" (formula "56") (term "1"))
                                                   (rule "methodBodyExpand" (formula "56") (term "1") (newnames "heapBefore_<prepare>_17,savedHeapBefore_<prepare>_17"))
                                                   (builtin "One Step Simplification" (formula "56"))
                                                   (rule "methodCallSuper" (formula "56") (term "1"))
                                                   (rule "methodBodyExpand" (formula "56") (term "1") (newnames "heapBefore_<prepare>_18,savedHeapBefore_<prepare>_18"))
                                                   (builtin "One Step Simplification" (formula "56"))
                                                   (rule "methodCallEmpty" (formula "56") (term "1"))
                                                   (rule "blockEmpty" (formula "56") (term "1"))
                                                   (rule "assignment_write_attribute_this" (formula "56") (term "1"))
                                                   (builtin "One Step Simplification" (formula "56"))
                                                   (rule "castDel" (formula "56") (term "1,0,1,0"))
                                                   (rule "assignment_write_attribute_this" (formula "56") (term "1"))
                                                   (builtin "One Step Simplification" (formula "56"))
                                                   (rule "castDel" (formula "56") (term "1,0,1,0"))
                                                   (rule "methodCallEmpty" (formula "56") (term "1"))
                                                   (rule "methodCallEmpty" (formula "56") (term "1"))
                                                   (rule "methodCallEmpty" (formula "56") (term "1"))
                                                   (rule "methodCallEmpty" (formula "56") (term "1"))
                                                   (rule "methodCallEmpty" (formula "56") (term "1"))
                                                   (rule "blockEmpty" (formula "56") (term "1"))
                                                   (rule "methodCallReturnIgnoreResult" (formula "56") (term "1"))
                                                   (rule "methodCallReturn" (formula "56") (term "1"))
                                                   (rule "assignment" (formula "56") (term "1"))
                                                   (builtin "One Step Simplification" (formula "56"))
                                                   (rule "methodCallEmpty" (formula "56") (term "1"))
                                                   (rule "blockEmpty" (formula "56") (term "1"))
                                                   (rule "assignment" (formula "56") (term "1"))
                                                   (builtin "One Step Simplification" (formula "56"))
                                                   (rule "methodBodyExpand" (formula "56") (term "1") (newnames "heapBefore_<init>_17,savedHeapBefore_<init>_17"))
                                                   (builtin "One Step Simplification" (formula "56"))
                                                   (rule "methodCallSuper" (formula "56") (term "1"))
                                                   (rule "methodBodyExpand" (formula "56") (term "1") (newnames "heapBefore_<init>_18,savedHeapBefore_<init>_18"))
                                                   (builtin "One Step Simplification" (formula "56"))
                                                   (rule "methodCallSuper" (formula "56") (term "1"))
                                                   (rule "methodBodyExpand" (formula "56") (term "1") (newnames "heapBefore_<init>_19,savedHeapBefore_<init>_19"))
                                                   (builtin "One Step Simplification" (formula "56"))
                                                   (rule "methodCallSuper" (formula "56") (term "1"))
                                                   (rule "methodBodyExpand" (formula "56") (term "1") (newnames "heapBefore_<init>_20,savedHeapBefore_<init>_20"))
                                                   (builtin "One Step Simplification" (formula "56"))
                                                   (rule "methodCallSuper" (formula "56") (term "1"))
                                                   (rule "methodBodyExpand" (formula "56") (term "1") (newnames "heapBefore_<init>_21,savedHeapBefore_<init>_21"))
                                                   (builtin "One Step Simplification" (formula "56"))
                                                   (rule "methodCallSuper" (formula "56") (term "1"))
                                                   (rule "methodBodyExpand" (formula "56") (term "1") (newnames "heapBefore_<init>_22,savedHeapBefore_<init>_22"))
                                                   (builtin "One Step Simplification" (formula "56"))
                                                   (rule "methodCallEmpty" (formula "56") (term "1"))
                                                   (rule "blockEmpty" (formula "56") (term "1"))
                                                   (rule "assignment_write_attribute_this" (formula "56") (term "1"))
                                                   (builtin "One Step Simplification" (formula "56"))
                                                   (rule "castDel" (formula "56") (term "1,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "56"))
                                                   (rule "assignment_write_attribute_this" (formula "56") (term "1"))
                                                   (builtin "One Step Simplification" (formula "56"))
                                                   (rule "castDel" (formula "56") (term "1,0,1,0"))
                                                   (builtin "One Step Simplification" (formula "56"))
                                                   (rule "methodCallEmpty" (formula "56") (term "1"))
                                                   (rule "methodCallEmpty" (formula "56") (term "1"))
                                                   (rule "methodCallEmpty" (formula "56") (term "1"))
                                                   (rule "methodCallEmpty" (formula "56") (term "1"))
                                                   (rule "methodCallEmpty" (formula "56") (term "1"))
                                                   (rule "blockEmpty" (formula "56") (term "1"))
                                                   (rule "assignment_write_attribute" (formula "56") (term "1"))
                                                   (branch "Normal Execution (a_13 != null)"
                                                      (builtin "One Step Simplification" (formula "57"))
                                                      (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "45")))
                                                      (rule "false_right" (formula "56"))
                                                      (rule "assignment" (formula "56") (term "1"))
                                                      (builtin "One Step Simplification" (formula "56"))
                                                      (rule "tryCatchThrow" (formula "56") (term "1"))
                                                      (rule "ifElseUnfold" (formula "56") (term "1") (inst "#boolv=x"))
                                                      (rule "variableDeclaration" (formula "56") (term "1") (newnames "x_22"))
                                                      (rule "equality_comparison_simple" (formula "56") (term "1"))
                                                      (builtin "One Step Simplification" (formula "56"))
                                                      (rule "replace_known_right" (formula "56") (term "0,0,1,0") (ifseqformula "45"))
                                                      (builtin "One Step Simplification" (formula "56"))
                                                      (rule "ifElseSplit" (formula "56"))
                                                      (branch "if x_22 true"
                                                         (builtin "One Step Simplification" (formula "57"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                      (branch "if x_22 false"
                                                         (builtin "One Step Simplification" (formula "57"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "ifElseSplit" (formula "56"))
                                                         (branch "if a_12 instanceof java.lang.Throwable true"
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "variableDeclaration" (formula "56") (term "1") (newnames "e_4"))
                                                            (rule "reference_type_cast" (formula "56") (term "1"))
                                                            (branch "Normal Execution (a_12 instanceof java.lang.Throwable)"
                                                               (builtin "One Step Simplification" (formula "57"))
                                                               (builtin "One Step Simplification" (formula "1"))
                                                               (rule "true_left" (formula "1"))
                                                               (rule "assignment" (formula "56") (term "1"))
                                                               (builtin "One Step Simplification" (formula "56"))
                                                               (rule "assignment" (formula "56") (term "1"))
                                                               (builtin "One Step Simplification" (formula "56"))
                                                               (rule "methodCallEmpty" (formula "56") (term "1"))
                                                               (rule "emptyModality" (formula "56") (term "1"))
                                                               (builtin "One Step Simplification" (formula "56"))
                                                               (rule "replace_known_right" (formula "56") (term "0,0,1,0") (ifseqformula "45"))
                                                               (builtin "One Step Simplification" (formula "56"))
                                                               (rule "ifElseSplit" (formula "56"))
                                                               (branch "if x_21 true"
                                                                  (builtin "One Step Simplification" (formula "57"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "closeFalse" (formula "1"))
                                                               )
                                                               (branch "if x_21 false"
                                                                  (builtin "One Step Simplification" (formula "57"))
                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "true_left" (formula "1"))
                                                                  (rule "ifElseSplit" (formula "56"))
                                                                  (branch "if thrownExc instanceof java.lang.Throwable true"
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                                                     (rule "true_left" (formula "1"))
                                                                     (rule "variableDeclaration" (formula "56") (term "1") (newnames "e_5"))
                                                                     (rule "reference_type_cast" (formula "56") (term "1"))
                                                                     (branch "Normal Execution (thrownExc instanceof java.lang.Throwable)"
                                                                        (builtin "One Step Simplification" (formula "57"))
                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "true_left" (formula "1"))
                                                                        (rule "assignment" (formula "56") (term "1"))
                                                                        (builtin "One Step Simplification" (formula "56"))
                                                                        (rule "emptyModality" (formula "56") (term "1"))
                                                                        (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "45")))
                                                                        (rule "false_right" (formula "56"))
                                                                        (rule "applyEq" (formula "17") (term "0") (ifseqformula "27"))
                                                                        (rule "applyEq" (formula "16") (term "0") (ifseqformula "37"))
                                                                        (rule "applyEq" (formula "20") (term "0") (ifseqformula "27"))
                                                                        (rule "eqSymm" (formula "20"))
                                                                        (rule "applyEq" (formula "8") (term "0") (ifseqformula "37"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "8"))
                                                                        (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                                        (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                                        (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                                        (rule "add_literals" (formula "8") (term "0,0,0"))
                                                                        (rule "applyEq" (formula "30") (term "1,1,0") (ifseqformula "37"))
                                                                        (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "37"))
                                                                        (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "37"))
                                                                        (rule "applyEq" (formula "29") (term "1,1,0") (ifseqformula "37"))
                                                                        (rule "applyEq" (formula "3") (term "0") (ifseqformula "27"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "3"))
                                                                        (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                                        (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                                        (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                                        (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                                                        (rule "applyEq" (formula "20") (term "0") (ifseqformula "37"))
                                                                        (rule "polySimp_homoEq" (formula "20"))
                                                                        (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                                                        (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                                                        (rule "mul_literals" (formula "20") (term "0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                                                        (rule "add_literals" (formula "20") (term "0,0,0"))
                                                                        (rule "add_zero_left" (formula "20") (term "0,0"))
                                                                        (rule "polySimp_sepNegMonomial" (formula "20"))
                                                                        (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "20") (term "0"))
                                                                        (rule "applyEq" (formula "39") (term "1,1,1,0") (ifseqformula "20"))
                                                                        (rule "applyEq" (formula "30") (term "1,1,1,0") (ifseqformula "20"))
                                                                        (rule "applyEq" (formula "36") (term "0") (ifseqformula "20"))
                                                                        (rule "applyEq" (formula "22") (term "1,1,1,0") (ifseqformula "20"))
                                                                        (rule "applyEq" (formula "29") (term "1,1,1,0") (ifseqformula "20"))
                                                                        (rule "applyEq" (formula "9") (term "0") (ifseqformula "20"))
                                                                        (rule "applyEq" (formula "39") (term "1,1,1,0") (ifseqformula "20"))
                                                                        (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "20"))
                                                                        (rule "applyEq" (formula "8") (term "0,1,0") (ifseqformula "19"))
                                                                        (rule "applyEq" (formula "20") (term "1,1,1,0") (ifseqformula "19"))
                                                                        (rule "applyEq" (formula "35") (term "1,1") (ifseqformula "19"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                                        (rule "mul_literals" (formula "16") (term "1"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                                        (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "8"))
                                                                        (rule "andLeft" (formula "3"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "3"))
                                                                        (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                                        (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                                        (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                                        (rule "add_literals" (formula "3") (term "0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                                        (rule "add_literals" (formula "3") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "3") (term "1,0"))
                                                                        (rule "add_zero_right" (formula "3") (term "0"))
                                                                        (rule "leq_literals" (formula "3"))
                                                                        (rule "closeFalse" (formula "3"))
                                                                     )
                                                                     (branch "ClassCastException (!(thrownExc instanceof java.lang.Throwable))"
                                                                        (builtin "One Step Simplification" (formula "57"))
                                                                        (builtin "One Step Simplification" (formula "56"))
                                                                        (rule "closeTrue" (formula "56"))
                                                                     )
                                                                  )
                                                                  (branch "if thrownExc instanceof java.lang.Throwable false"
                                                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                                                     (rule "closeFalse" (formula "1"))
                                                                  )
                                                               )
                                                            )
                                                            (branch "ClassCastException (!(a_12 instanceof java.lang.Throwable))"
                                                               (builtin "One Step Simplification" (formula "57"))
                                                               (builtin "One Step Simplification" (formula "56"))
                                                               (rule "closeTrue" (formula "56"))
                                                            )
                                                         )
                                                         (branch "if a_12 instanceof java.lang.Throwable false"
                                                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                                            (rule "closeFalse" (formula "1"))
                                                         )
                                                      )
                                                   )
                                                   (branch "Null Reference (a_13 = null)"
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch "Null Reference (x_arr_arr_9 = null)"
                                          (builtin "One Step Simplification" (formula "50"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                    (branch "Null Reference (x_arr_arr_5 = null)"
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "Index Out of Bounds (x_arr_arr_5 != null, but x_11 Out of Bounds!)"
                                       (builtin "One Step Simplification" (formula "51"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                       (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                       (rule "blockThrow" (formula "51") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "mul_literals" (formula "3") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_subsumption1" (formula "38") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq0" (formula "38") (term "0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0"))
                                       (rule "add_literals" (formula "38") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "38") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "38") (term "0,0"))
                                       (rule "qeq_literals" (formula "38") (term "0"))
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "true_left" (formula "38"))
                                       (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                       (rule "leq_literals" (formula "1") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "37"))
                                       (rule "qeq_literals" (formula "1") (term "0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "Array Store Exception (incompatible dynamic element type of x_arr_arr_5 and x_arr)"
                                       (builtin "One Step Simplification" (formula "51"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")) (ifInst ""  (formula "37")))
                                       (rule "andLeft" (formula "1"))
                                       (rule "notLeft" (formula "2"))
                                       (rule "array_store_known_dynamic_array_type" (formula "41") (ifseqformula "33"))
                                       (rule "typeEqDerived2" (formula "41") (term "0,1") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "41"))
                                       (rule "closeTrue" (formula "41"))
                                    )
                                 )
                                 (branch "Null Reference (x_arr_arr_7 = null)"
                                    (builtin "One Step Simplification" (formula "49"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "Index Out of Bounds (x_arr_arr_7 != null, but i Out of Bounds!)"
                                    (builtin "One Step Simplification" (formula "49"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                                    (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                    (rule "blockThrow" (formula "49") (term "1"))
                                    (builtin "One Step Simplification" (formula "49"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "35"))
                                    (rule "qeq_literals" (formula "1") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_antiSymm" (formula "36") (ifseqformula "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "1"))
                                    (rule "times_zero_1" (formula "9") (term "0,0"))
                                    (rule "add_zero_left" (formula "9") (term "0"))
                                    (rule "methodCallThrow" (formula "50") (term "1,0,0,1"))
                                    (builtin "One Step Simplification" (formula "50"))
                                    (rule "tryCatchThrow" (formula "50") (term "1,0,0,1"))
                                    (rule "ifElseUnfold" (formula "50") (term "1,0,0,1") (inst "#boolv=x"))
                                    (rule "variableDeclaration" (formula "50") (term "1,0,0,1") (newnames "x_15"))
                                    (rule "equality_comparison_simple" (formula "50") (term "1,0,0,1"))
                                    (rule "throwUnfold" (formula "50") (term "1") (inst "#v0=a"))
                                    (rule "variableDeclarationAssign" (formula "50") (term "1"))
                                    (rule "variableDeclaration" (formula "50") (term "1") (newnames "a_8"))
                                    (rule "instanceCreationAssignment" (formula "50") (term "1") (inst "#v0=a_9"))
                                    (rule "variableDeclarationAssign" (formula "50") (term "1"))
                                    (rule "variableDeclaration" (formula "50") (term "1") (newnames "a_9"))
                                    (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "50") (term "1") (inst "#v0=a_10"))
                                    (rule "variableDeclaration" (formula "50") (term "1") (newnames "a_10"))
                                    (rule "methodBodyExpand" (formula "50") (term "1") (newnames "heapBefore_<createObject>_1,savedHeapBefore_<createObject>_1"))
                                    (builtin "One Step Simplification" (formula "50"))
                                    (rule "variableDeclaration" (formula "50") (term "1") (newnames "__NEW___2"))
                                    (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "50") (term "1") (inst "#v0=a_11"))
                                    (rule "variableDeclaration" (formula "50") (term "1") (newnames "a_11"))
                                    (rule "allocateInstance" (formula "50"))
                                    (builtin "One Step Simplification" (formula "51"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "wellFormedAnon" (formula "1") (term "0,1,0"))
                                    (rule "wellFormedAnonEQ" (formula "1") (term "0,0,1,0") (ifseqformula "27"))
                                    (rule "wellFormedAnonEQ" (formula "1") (term "0,0,0,1,0") (ifseqformula "18"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,1,0") (ifseqformula "27"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,1,0") (ifseqformula "18"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "notLeft" (formula "1"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "5"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")) (ifInst ""  (formula "27")) (ifInst ""  (formula "36")))
                                    (rule "notLeft" (formula "1"))
                                    (rule "orRight" (formula "41"))
                                    (rule "orRight" (formula "41"))
                                    (rule "orRight" (formula "41"))
                                    (rule "blockEmpty" (formula "56") (term "1"))
                                    (rule "assignment" (formula "56") (term "1"))
                                    (builtin "One Step Simplification" (formula "56"))
                                    (rule "methodBodyExpand" (formula "56") (term "1") (newnames "heapBefore_<create>_1,savedHeapBefore_<create>_1"))
                                    (builtin "One Step Simplification" (formula "56"))
                                    (rule "assignment_write_attribute_this" (formula "56") (term "1"))
                                    (builtin "One Step Simplification" (formula "56"))
                                    (rule "methodCallWithinClass" (formula "56") (term "1"))
                                    (rule "methodBodyExpand" (formula "56") (term "1") (newnames "heapBefore_<prepareEnter>_1,savedHeapBefore_<prepareEnter>_1"))
                                    (builtin "One Step Simplification" (formula "56"))
                                    (rule "methodCallSuper" (formula "56") (term "1"))
                                    (rule "methodBodyExpand" (formula "56") (term "1") (newnames "heapBefore_<prepare>_9,savedHeapBefore_<prepare>_9"))
                                    (builtin "One Step Simplification" (formula "56"))
                                    (rule "methodCallSuper" (formula "56") (term "1"))
                                    (rule "methodBodyExpand" (formula "56") (term "1") (newnames "heapBefore_<prepare>_10,savedHeapBefore_<prepare>_10"))
                                    (builtin "One Step Simplification" (formula "56"))
                                    (rule "methodCallSuper" (formula "56") (term "1"))
                                    (rule "methodBodyExpand" (formula "56") (term "1") (newnames "heapBefore_<prepare>_11,savedHeapBefore_<prepare>_11"))
                                    (builtin "One Step Simplification" (formula "56"))
                                    (rule "methodCallSuper" (formula "56") (term "1"))
                                    (rule "methodBodyExpand" (formula "56") (term "1") (newnames "heapBefore_<prepare>_12,savedHeapBefore_<prepare>_12"))
                                    (builtin "One Step Simplification" (formula "56"))
                                    (rule "methodCallSuper" (formula "56") (term "1"))
                                    (rule "methodBodyExpand" (formula "56") (term "1") (newnames "heapBefore_<prepare>_13,savedHeapBefore_<prepare>_13"))
                                    (builtin "One Step Simplification" (formula "56"))
                                    (rule "methodCallEmpty" (formula "56") (term "1"))
                                    (rule "blockEmpty" (formula "56") (term "1"))
                                    (rule "assignment_write_attribute_this" (formula "56") (term "1"))
                                    (builtin "One Step Simplification" (formula "56"))
                                    (rule "castDel" (formula "56") (term "1,0,1,0"))
                                    (rule "assignment_write_attribute_this" (formula "56") (term "1"))
                                    (builtin "One Step Simplification" (formula "56"))
                                    (rule "castDel" (formula "56") (term "1,0,1,0"))
                                    (rule "methodCallEmpty" (formula "56") (term "1"))
                                    (rule "methodCallEmpty" (formula "56") (term "1"))
                                    (rule "methodCallEmpty" (formula "56") (term "1"))
                                    (rule "methodCallEmpty" (formula "56") (term "1"))
                                    (rule "methodCallEmpty" (formula "56") (term "1"))
                                    (rule "blockEmpty" (formula "56") (term "1"))
                                    (rule "methodCallReturnIgnoreResult" (formula "56") (term "1"))
                                    (rule "methodCallReturn" (formula "56") (term "1"))
                                    (rule "assignment" (formula "56") (term "1"))
                                    (builtin "One Step Simplification" (formula "56"))
                                    (rule "methodCallEmpty" (formula "56") (term "1"))
                                    (rule "blockEmpty" (formula "56") (term "1"))
                                    (rule "assignment" (formula "56") (term "1"))
                                    (builtin "One Step Simplification" (formula "56"))
                                    (rule "methodBodyExpand" (formula "56") (term "1") (newnames "heapBefore_<init>_11,savedHeapBefore_<init>_11"))
                                    (builtin "One Step Simplification" (formula "56"))
                                    (rule "methodCallSuper" (formula "56") (term "1"))
                                    (rule "methodBodyExpand" (formula "56") (term "1") (newnames "heapBefore_<init>_12,savedHeapBefore_<init>_12"))
                                    (builtin "One Step Simplification" (formula "56"))
                                    (rule "methodCallSuper" (formula "56") (term "1"))
                                    (rule "methodBodyExpand" (formula "56") (term "1") (newnames "heapBefore_<init>_13,savedHeapBefore_<init>_13"))
                                    (builtin "One Step Simplification" (formula "56"))
                                    (rule "methodCallSuper" (formula "56") (term "1"))
                                    (rule "methodBodyExpand" (formula "56") (term "1") (newnames "heapBefore_<init>_14,savedHeapBefore_<init>_14"))
                                    (builtin "One Step Simplification" (formula "56"))
                                    (rule "methodCallSuper" (formula "56") (term "1"))
                                    (rule "methodBodyExpand" (formula "56") (term "1") (newnames "heapBefore_<init>_15,savedHeapBefore_<init>_15"))
                                    (builtin "One Step Simplification" (formula "56"))
                                    (rule "methodCallSuper" (formula "56") (term "1"))
                                    (rule "methodBodyExpand" (formula "56") (term "1") (newnames "heapBefore_<init>_16,savedHeapBefore_<init>_16"))
                                    (builtin "One Step Simplification" (formula "56"))
                                    (rule "methodCallEmpty" (formula "56") (term "1"))
                                    (rule "blockEmpty" (formula "56") (term "1"))
                                    (rule "assignment_write_attribute_this" (formula "56") (term "1"))
                                    (builtin "One Step Simplification" (formula "56"))
                                    (rule "castDel" (formula "56") (term "1,0,1,0"))
                                    (builtin "One Step Simplification" (formula "56"))
                                    (rule "assignment_write_attribute_this" (formula "56") (term "1"))
                                    (builtin "One Step Simplification" (formula "56"))
                                    (rule "castDel" (formula "56") (term "1,0,1,0"))
                                    (builtin "One Step Simplification" (formula "56"))
                                    (rule "methodCallEmpty" (formula "56") (term "1"))
                                    (rule "methodCallEmpty" (formula "56") (term "1"))
                                    (rule "methodCallEmpty" (formula "56") (term "1"))
                                    (rule "methodCallEmpty" (formula "56") (term "1"))
                                    (rule "methodCallEmpty" (formula "56") (term "1"))
                                    (rule "blockEmpty" (formula "56") (term "1"))
                                    (rule "assignment_write_attribute" (formula "56") (term "1"))
                                    (branch "Normal Execution (a_9 != null)"
                                       (builtin "One Step Simplification" (formula "57"))
                                       (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "45")))
                                       (rule "false_right" (formula "56"))
                                       (rule "assignment" (formula "56") (term "1"))
                                       (builtin "One Step Simplification" (formula "56"))
                                       (rule "tryCatchThrow" (formula "56") (term "1"))
                                       (rule "ifElseUnfold" (formula "56") (term "1") (inst "#boolv=x"))
                                       (rule "variableDeclaration" (formula "56") (term "1") (newnames "x_16"))
                                       (rule "equality_comparison_simple" (formula "56") (term "1"))
                                       (builtin "One Step Simplification" (formula "56"))
                                       (rule "replace_known_right" (formula "56") (term "0,0,1,0") (ifseqformula "45"))
                                       (builtin "One Step Simplification" (formula "56"))
                                       (rule "ifElseSplit" (formula "56"))
                                       (branch "if x_16 true"
                                          (builtin "One Step Simplification" (formula "57"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "if x_16 false"
                                          (builtin "One Step Simplification" (formula "57"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "ifElseSplit" (formula "56"))
                                          (branch "if a_8 instanceof java.lang.Throwable true"
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                             (rule "true_left" (formula "1"))
                                             (rule "variableDeclaration" (formula "56") (term "1") (newnames "e_2"))
                                             (rule "reference_type_cast" (formula "56") (term "1"))
                                             (branch "Normal Execution (a_8 instanceof java.lang.Throwable)"
                                                (builtin "One Step Simplification" (formula "57"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "assignment" (formula "56") (term "1"))
                                                (builtin "One Step Simplification" (formula "56"))
                                                (rule "assignment" (formula "56") (term "1"))
                                                (builtin "One Step Simplification" (formula "56"))
                                                (rule "methodCallEmpty" (formula "56") (term "1"))
                                                (rule "emptyModality" (formula "56") (term "1"))
                                                (builtin "One Step Simplification" (formula "56"))
                                                (rule "replace_known_right" (formula "56") (term "0,0,1,0") (ifseqformula "45"))
                                                (builtin "One Step Simplification" (formula "56"))
                                                (rule "ifElseSplit" (formula "56"))
                                                (branch "if x_15 true"
                                                   (builtin "One Step Simplification" (formula "57"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                                (branch "if x_15 false"
                                                   (builtin "One Step Simplification" (formula "57"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "ifElseSplit" (formula "56"))
                                                   (branch "if thrownExc instanceof java.lang.Throwable true"
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "variableDeclaration" (formula "56") (term "1") (newnames "e_3"))
                                                      (rule "reference_type_cast" (formula "56") (term "1"))
                                                      (branch "Normal Execution (thrownExc instanceof java.lang.Throwable)"
                                                         (builtin "One Step Simplification" (formula "57"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "assignment" (formula "56") (term "1"))
                                                         (builtin "One Step Simplification" (formula "56"))
                                                         (rule "emptyModality" (formula "56") (term "1"))
                                                         (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "45")))
                                                         (rule "false_right" (formula "56"))
                                                         (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "37"))
                                                         (rule "applyEq" (formula "2") (term "0") (ifseqformula "31"))
                                                         (rule "inEqSimp_homoInEq0" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                                         (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "37"))
                                                         (rule "applyEq" (formula "10") (term "0") (ifseqformula "31"))
                                                         (rule "applyEq" (formula "31") (term "0") (ifseqformula "37"))
                                                         (rule "polySimp_homoEq" (formula "31"))
                                                         (rule "polySimp_addComm1" (formula "31") (term "0"))
                                                         (rule "applyEq" (formula "21") (term "0") (ifseqformula "14"))
                                                         (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "37"))
                                                         (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "37"))
                                                         (rule "applyEq" (formula "11") (term "0") (ifseqformula "14"))
                                                         (rule "applyEq" (formula "38") (term "0") (ifseqformula "37"))
                                                         (rule "inEqSimp_homoInEq1" (formula "38"))
                                                         (rule "polySimp_pullOutFactor1" (formula "38") (term "0"))
                                                         (rule "add_literals" (formula "38") (term "1,0"))
                                                         (rule "times_zero_1" (formula "38") (term "0"))
                                                         (rule "leq_literals" (formula "38"))
                                                         (rule "true_left" (formula "38"))
                                                         (rule "applyEq" (formula "11") (term "0") (ifseqformula "21"))
                                                         (rule "applyEq" (formula "37") (term "0") (ifseqformula "21"))
                                                         (rule "polySimp_homoEq" (formula "37"))
                                                         (rule "polySimp_mulComm0" (formula "37") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "37") (term "1,0"))
                                                         (rule "mul_literals" (formula "37") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "37") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "37") (term "0,0"))
                                                         (rule "applyEq" (formula "14") (term "1") (ifseqformula "21"))
                                                         (rule "polySimp_sepPosMonomial" (formula "31"))
                                                         (rule "polySimp_mulComm0" (formula "31") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "31") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                                                         (rule "mul_literals" (formula "31") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "31") (term "1,1"))
                                                         (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "31"))
                                                         (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                         (rule "add_literals" (formula "2") (term "1,0"))
                                                         (rule "times_zero_1" (formula "2") (term "0"))
                                                         (rule "qeq_literals" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "applyEq" (formula "29") (term "0") (ifseqformula "30"))
                                                         (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "30"))
                                                         (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                         (rule "add_literals" (formula "9") (term "0,0"))
                                                         (rule "add_zero_left" (formula "9") (term "0"))
                                                         (rule "applyEq" (formula "2") (term "0") (ifseqformula "29"))
                                                         (rule "inEqSimp_homoInEq1" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                         (rule "add_literals" (formula "2") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                         (rule "add_literals" (formula "2") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "2") (term "1,0"))
                                                         (rule "add_zero_right" (formula "2") (term "0"))
                                                         (rule "leq_literals" (formula "2"))
                                                         (rule "closeFalse" (formula "2"))
                                                      )
                                                      (branch "ClassCastException (!(thrownExc instanceof java.lang.Throwable))"
                                                         (builtin "One Step Simplification" (formula "57"))
                                                         (builtin "One Step Simplification" (formula "56"))
                                                         (rule "closeTrue" (formula "56"))
                                                      )
                                                   )
                                                   (branch "if thrownExc instanceof java.lang.Throwable false"
                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                )
                                             )
                                             (branch "ClassCastException (!(a_8 instanceof java.lang.Throwable))"
                                                (builtin "One Step Simplification" (formula "57"))
                                                (builtin "One Step Simplification" (formula "56"))
                                                (rule "closeTrue" (formula "56"))
                                             )
                                          )
                                          (branch "if a_8 instanceof java.lang.Throwable false"
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                    )
                                    (branch "Null Reference (a_9 = null)"
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                              )
                           )
                        )
                        (branch "Null Reference (x_arr_arr_6 = null)"
                           (builtin "One Step Simplification" (formula "49"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                     (branch "if x_8 false"
                        (builtin "One Step Simplification" (formula "49"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "Null Reference (x_arr_arr_4 = null)"
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "Null Reference (x_arr_arr_3 = null)"
                  (builtin "One Step Simplification" (formula "39"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqRigid" (formula "2") (term "1") (ifseqformula "1"))
                  (rule "ifEqualsNull" (formula "2"))
                  (rule "replace_known_right" (formula "2") (term "1,1") (ifseqformula "45"))
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "andLeft" (formula "2"))
                  (rule "elementOfUnion" (formula "2"))
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "sortsDisjointModuloNull" (formula "2") (term "0"))
                  (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "48"))
                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "44")))
                  (rule "sortsDisjointModuloNull" (formula "2"))
                  (rule "andLeft" (formula "2"))
                  (rule "close" (formula "42") (ifseqformula "3"))
               )
            )
            (branch "Use Case"
               (builtin "One Step Simplification" (formula "44"))
               (builtin "One Step Simplification" (formula "33"))
               (rule "andLeft" (formula "33"))
               (rule "andLeft" (formula "33"))
               (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "34"))
               (rule "inEqSimp_commuteLeq" (formula "33"))
               (rule "variableDeclarationAssign" (formula "46") (term "1"))
               (rule "variableDeclaration" (formula "46") (term "1") (newnames "b_1"))
               (rule "blockEmpty" (formula "46") (term "1,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0"))
               (rule "mul_literals" (formula "35") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0"))
               (rule "pullOutSelect" (formula "34") (term "0,0") (inst "selectSK=verif_functionalities_pkienc_Decryptor_EncryptionLog_ciphertext_2"))
               (rule "simplifySelectOfAnon" (formula "34"))
               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "44")))
               (rule "replaceKnownSelect_taclet0000_6" (formula "34") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_7" (formula "34") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "0,1,0,0") (ifseqformula "24"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "0,0,1,0,0") (ifseqformula "15"))
               (rule "replace_known_left" (formula "34") (term "0,0,0,1,0,0") (ifseqformula "2"))
               (builtin "One Step Simplification" (formula "34"))
               (rule "elementOfUnion" (formula "34") (term "0,0"))
               (builtin "One Step Simplification" (formula "34"))
               (rule "sortsDisjointModuloNull" (formula "34") (term "0,0,0"))
               (rule "replace_known_right" (formula "34") (term "0,0,0,0") (ifseqformula "44"))
               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "37")))
               (rule "sortsDisjointModuloNull" (formula "34") (term "0,0"))
               (rule "replace_known_right" (formula "34") (term "0,0,0") (ifseqformula "44"))
               (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "40")))
               (rule "hideAuxiliaryEq" (formula "34"))
               (rule "replaceKnownAuxiliaryConstant_taclet20000_9" (formula "34") (term "0,0"))
               (rule "commuteUnion" (formula "35") (term "1,0,0,1,1,0"))
               (rule "commuteUnion" (formula "35") (term "1,0,0,0,1,0"))
               (rule "commuteUnion" (formula "46") (term "1,0,1,1,0"))
               (rule "nnf_imp2or" (formula "35") (term "0"))
               (rule "nnf_notAnd" (formula "35") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "35") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0"))
               (rule "mul_literals" (formula "35") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "35") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
               (rule "mul_literals" (formula "35") (term "1,0,0,0"))
               (rule "commute_and" (formula "35") (term "1,0"))
               (rule "cnf_rightDist" (formula "35") (term "0"))
               (rule "distr_forallAnd" (formula "35"))
               (rule "andLeft" (formula "35"))
               (rule "commute_or_2" (formula "35") (term "0"))
               (rule "shift_paren_or" (formula "36") (term "0"))
               (rule "commute_or" (formula "35") (term "0,0"))
               (rule "compound_less_than_comparison_2" (formula "47") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
               (rule "variableDeclarationAssign" (formula "47") (term "1"))
               (rule "variableDeclaration" (formula "47") (term "1") (newnames "x_2"))
               (rule "assignment" (formula "47") (term "1"))
               (builtin "One Step Simplification" (formula "47"))
               (rule "variableDeclarationAssign" (formula "47") (term "1"))
               (rule "variableDeclaration" (formula "47") (term "1") (newnames "x_3"))
               (rule "eval_order_array_access6" (formula "47") (term "1") (inst "#v0=x_arr_arr"))
               (rule "variableDeclarationAssign" (formula "47") (term "1"))
               (rule "variableDeclaration" (formula "47") (term "1") (newnames "x_arr_arr_2"))
               (rule "assignment_read_attribute_this" (formula "47") (term "1"))
               (builtin "One Step Simplification" (formula "47"))
               (rule "pullOutSelect" (formula "47") (term "0,1,0") (inst "selectSK=verif_functionalities_pkienc_Decryptor_EncryptionLog_ciphertext_3"))
               (rule "simplifySelectOfAnon" (formula "1"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
               (rule "replaceKnownSelect_taclet0000_6" (formula "1") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet0000_7" (formula "1") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "25"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "16"))
               (rule "replace_known_left" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "3"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "assignment_read_length" (formula "48") (term "1"))
               (branch "Normal Execution (x_arr_arr_2 != null)"
                  (builtin "One Step Simplification" (formula "49"))
                  (builtin "One Step Simplification" (formula "48"))
                  (rule "elementOfUnion" (formula "1") (term "0,0"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "sortsDisjointModuloNull" (formula "1") (term "1,0,0"))
                  (rule "replace_known_right" (formula "1") (term "1,1,0,0") (ifseqformula "38"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                  (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                  (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "45"))
                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet020000_11" (formula "47") (term "0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet020000_11" (formula "47") (term "0,0,1,0"))
                  (rule "less_than_comparison_simple" (formula "47") (term "1"))
                  (builtin "One Step Simplification" (formula "47"))
                  (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "47") (term "0,0,0,1,0"))
                  (rule "apply_eq_monomials" (formula "47") (term "1,0,0,0,1,0") (ifseqformula "28"))
                  (rule "polySimp_rightDist" (formula "47") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "47") (term "1,0,1,0,0,0,1,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "47") (term "1,0,0,0,1,0"))
                  (rule "add_literals" (formula "47") (term "1,1,1,0,0,0,1,0"))
                  (rule "times_zero_1" (formula "47") (term "1,1,0,0,0,1,0"))
                  (rule "add_zero_right" (formula "47") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "47") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "47") (term "0,0,0,0,1,0"))
                  (rule "add_literals" (formula "47") (term "0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "47") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "47") (term "0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "47") (term "0,0,0,1,0"))
                  (rule "methodCallEmpty" (formula "47") (term "1"))
                  (rule "emptyModality" (formula "47") (term "1"))
                  (builtin "One Step Simplification" (formula "47"))
                  (rule "impRight" (formula "47"))
                  (rule "notLeft" (formula "1"))
                  (rule "inEqSimp_geqRight" (formula "37"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "assignment_to_reference_array_component" (formula "48") (term "1"))
                  (branch "Normal Execution (newPlain != null)"
                     (builtin "One Step Simplification" (formula "49"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")) (ifInst ""  (formula "35")))
                     (rule "andLeft" (formula "1"))
                     (rule "array_store_known_dynamic_array_type" (formula "2") (ifseqformula "22"))
                     (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "48")))
                     (rule "true_left" (formula "2"))
                     (rule "inEqSimp_ltToLeq" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "assignment_to_reference_array_component" (formula "49") (term "1"))
                     (branch "Normal Execution (newCipher != null)"
                        (builtin "One Step Simplification" (formula "50"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")) (ifInst ""  (formula "36")))
                        (rule "andLeft" (formula "1"))
                        (rule "array_store_known_dynamic_array_type" (formula "2") (ifseqformula "33"))
                        (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "50")))
                        (rule "true_left" (formula "2"))
                        (rule "inEqSimp_ltToLeq" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "assignment_write_attribute_this" (formula "50") (term "1"))
                        (builtin "One Step Simplification" (formula "50"))
                        (rule "assignment_write_attribute_this" (formula "50") (term "1"))
                        (builtin "One Step Simplification" (formula "50"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1"))
                        (rule "polySimp_rightDist" (formula "3") (term "1"))
                        (rule "mul_literals" (formula "3") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "3"))
                        (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "4"))
                        (rule "times_zero_1" (formula "31") (term "0,0"))
                        (rule "add_zero_left" (formula "31") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                        (rule "mul_literals" (formula "31") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "38"))
                        (rule "leq_literals" (formula "31") (term "0"))
                        (builtin "One Step Simplification" (formula "31"))
                        (rule "true_left" (formula "31"))
                        (rule "methodCallEmpty" (formula "51") (term "1"))
                        (rule "tryEmpty" (formula "51") (term "1"))
                        (rule "emptyModality" (formula "51") (term "1"))
                        (builtin "One Step Simplification" (formula "51"))
                        (rule "eqSymm" (formula "51") (term "1,0,0,1"))
                        (rule "polySimp_homoEq" (formula "51") (term "0,0,0"))
                        (rule "polySimp_homoEq" (formula "51") (term "0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "51") (term "0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "51") (term "0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "51") (term "1,1,1,0,1,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "51") (term "0,0,1,1,0,1,1,0"))
                        (rule "dismissNonSelectedField" (formula "51") (term "0,1,1,1,0,1,1,0,1,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "51") (term "1,0,0,0,1,0,1,1,0"))
                        (rule "dismissNonSelectedField" (formula "51") (term "1,1,1,0,1,0,0"))
                        (rule "narrowSelectArrayType" (formula "51") (term "1,1,0,1,0,1,0,1,0") (ifseqformula "5") (ifseqformula "47"))
                        (rule "narrowSelectArrayType" (formula "51") (term "1,1,0,1,0,1,0,0") (ifseqformula "5") (ifseqformula "46"))
                        (rule "dismissNonSelectedField" (formula "51") (term "0,1,1,0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "51") (term "0,0,0,1,0,0,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "51") (term "1,1,1,0,1,0,1,0"))
                        (rule "dismissNonSelectedField" (formula "51") (term "1,1,1,0,1,0,0"))
                        (rule "dismissNonSelectedField" (formula "51") (term "1,1,1,1,0,1,0,1,0"))
                        (rule "applyEq" (formula "15") (term "0") (ifseqformula "22"))
                        (rule "eqSymm" (formula "15"))
                        (rule "applyEq" (formula "51") (term "1,1,1,0,0,1,0,1,0,0") (ifseqformula "32"))
                        (rule "applyEq" (formula "34") (term "1,1,1,0") (ifseqformula "1"))
                        (rule "polySimp_addAssoc" (formula "34") (term "1,1,0"))
                        (rule "add_literals" (formula "34") (term "0,1,1,0"))
                        (rule "add_zero_left" (formula "34") (term "1,1,0"))
                        (rule "applyEq" (formula "12") (term "0") (ifseqformula "22"))
                        (rule "applyEq" (formula "11") (term "0") (ifseqformula "32"))
                        (rule "applyEq" (formula "51") (term "1,1,1,1,0,0,1,0,1,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "4") (term "0") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq0" (formula "4"))
                        (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                        (rule "add_literals" (formula "4") (term "1,0"))
                        (rule "times_zero_1" (formula "4") (term "0"))
                        (rule "qeq_literals" (formula "4"))
                        (rule "true_left" (formula "4"))
                        (rule "applyEq" (formula "50") (term "1,1,1,0,1,0,1,0,1,0,0") (ifseqformula "31"))
                        (rule "polySimp_addAssoc" (formula "50") (term "1,1,0,1,0,1,0,1,0,0"))
                        (rule "add_literals" (formula "50") (term "0,1,1,0,1,0,1,0,1,0,0"))
                        (rule "applyEq" (formula "50") (term "0,0,1,1,1,0,0,1,0,1,0") (ifseqformula "21"))
                        (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1,1,1,0,0,1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,1,1,0,0,1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,1,1,0,0,1,0,1,0"))
                        (rule "mul_literals" (formula "50") (term "0,1,0,0,1,1,1,0,0,1,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,1,1,0,0,1,0,1,0"))
                        (rule "add_literals" (formula "50") (term "0,0,0,1,1,1,0,0,1,0,1,0"))
                        (rule "applyEq" (formula "30") (term "0") (ifseqformula "1"))
                        (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "31"))
                        (rule "applyEq" (formula "50") (term "0,0,1,1,0,0,1,0,1,0,0") (ifseqformula "31"))
                        (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1,1,0,0,1,0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,1,0,0,1,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,1,0,0,1,0,1,0,0"))
                        (rule "mul_literals" (formula "50") (term "0,1,0,0,1,1,0,0,1,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,1,0,0,1,0,1,0,0"))
                        (rule "add_literals" (formula "50") (term "0,0,0,1,1,0,0,1,0,1,0,0"))
                        (rule "applyEq" (formula "34") (term "1,1,1,0") (ifseqformula "1"))
                        (rule "polySimp_addAssoc" (formula "34") (term "1,1,0"))
                        (rule "add_literals" (formula "34") (term "0,1,1,0"))
                        (rule "add_zero_left" (formula "34") (term "1,1,0"))
                        (rule "applyEq" (formula "50") (term "1,1,1,0,1,0,1,0,1,0,1,0") (ifseqformula "21"))
                        (rule "polySimp_addAssoc" (formula "50") (term "1,1,0,1,0,1,0,1,0,1,0"))
                        (rule "add_literals" (formula "50") (term "0,1,1,0,1,0,1,0,1,0,1,0"))
                        (rule "applyEq" (formula "50") (term "0,0,1,1,1,0,0,1,0,0") (ifseqformula "31"))
                        (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1,1,1,0,0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,1,1,0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,1,1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "50") (term "0,1,0,0,1,1,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,1,1,0,0,1,0,0"))
                        (rule "add_literals" (formula "50") (term "0,0,0,1,1,1,0,0,1,0,0"))
                        (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "31"))
                        (rule "applyEq" (formula "50") (term "0,0,1,1,0,0,1,0,1,0,1,0") (ifseqformula "21"))
                        (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1,1,0,0,1,0,1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,1,0,0,1,0,1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,1,0,0,1,0,1,0,1,0"))
                        (rule "mul_literals" (formula "50") (term "0,1,0,0,1,1,0,0,1,0,1,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,1,0,0,1,0,1,0,1,0"))
                        (rule "add_literals" (formula "50") (term "0,0,0,1,1,0,0,1,0,1,0,1,0"))
                        (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "2"))
                        (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                        (rule "add_literals" (formula "2") (term "1,0"))
                        (rule "times_zero_1" (formula "2") (term "0"))
                        (rule "leq_literals" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "applyEq" (formula "49") (term "1,1,1,0,0,1,0,1,0,1,0") (ifseqformula "20"))
                        (rule "applyEq" (formula "22") (term "1,1,0") (ifseqformula "30"))
                        (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "30"))
                        (rule "applyEq" (formula "49") (term "1,1,1,1,0,0,1,0,0") (ifseqformula "30"))
                        (rule "applyEq" (formula "36") (term "0") (ifseqformula "30"))
                        (rule "inEqSimp_homoInEq1" (formula "36"))
                        (rule "polySimp_mulComm0" (formula "36") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                        (rule "mul_literals" (formula "36") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "36") (term "0"))
                        (rule "polySimp_addComm0" (formula "36") (term "0,0"))
                        (rule "applyEq" (formula "30") (term "0") (ifseqformula "13"))
                        (rule "polySimp_homoEq" (formula "30"))
                        (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                        (rule "mul_literals" (formula "30") (term "0,1,0"))
                        (rule "polySimp_addComm1" (formula "30") (term "0"))
                        (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                        (rule "add_literals" (formula "30") (term "0,0,0"))
                        (rule "add_zero_left" (formula "30") (term "0,0"))
                        (rule "applyEq" (formula "49") (term "1,0,1,0,0,0,0,1,0") (ifseqformula "20"))
                        (rule "applyEq" (formula "49") (term "0,0,0,1,0,0,0,0,1,0") (ifseqformula "20"))
                        (rule "inEqSimp_homoInEq1" (formula "49") (term "0,0,1,0,0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,1,0,0,0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "49") (term "0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "49") (term "0,1,0,0,0,1,0,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "49") (term "0,0,0,1,0,0,0,1,0"))
                        (rule "add_literals" (formula "49") (term "0,0,0,0,1,0,0,0,1,0"))
                        (rule "applyEq" (formula "49") (term "1,1,0,2,0,1,0,1,0,1,0") (ifseqformula "20"))
                        (rule "applyEq" (formula "49") (term "0,0,1,0,2,0,1,0,1,0,1,0") (ifseqformula "20"))
                        (rule "inEqSimp_homoInEq1" (formula "49") (term "0,1,0,2,0,1,0,1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,2,0,1,0,1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,2,0,1,0,1,0,1,0"))
                        (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,2,0,1,0,1,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,2,0,1,0,1,0,1,0"))
                        (rule "add_literals" (formula "49") (term "0,0,0,1,0,2,0,1,0,1,0,1,0"))
                        (rule "applyEq" (formula "49") (term "1,1,1,1,0,0,1,0,1,0,0") (ifseqformula "1"))
                        (rule "polySimp_addAssoc" (formula "49") (term "1,1,1,0,0,1,0,1,0,0"))
                        (rule "add_literals" (formula "49") (term "0,1,1,1,0,0,1,0,1,0,0"))
                        (rule "add_zero_left" (formula "49") (term "1,1,1,0,0,1,0,1,0,0"))
                        (rule "applyEq" (formula "49") (term "0,0,1,0,2,0,1,0,1,0,0") (ifseqformula "13"))
                        (rule "inEqSimp_homoInEq1" (formula "49") (term "0,1,0,2,0,1,0,1,0,0"))
                        (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,2,0,1,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0,2,0,1,0,1,0,0"))
                        (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0,2,0,1,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0,2,0,1,0,1,0,0"))
                        (rule "add_literals" (formula "49") (term "0,0,0,1,0,2,0,1,0,1,0,0"))
                        (rule "applyEq" (formula "49") (term "0,0,0,1,0,0,0,0,0") (ifseqformula "13"))
                        (rule "inEqSimp_homoInEq1" (formula "49") (term "0,0,1,0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,1,0,0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "49") (term "0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,1,0,0,0,0"))
                        (rule "mul_literals" (formula "49") (term "0,1,0,0,0,1,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "49") (term "0,0,0,1,0,0,0,0"))
                        (rule "add_literals" (formula "49") (term "0,0,0,0,1,0,0,0,0"))
                        (rule "applyEq" (formula "49") (term "1,1,0,2,0,1,0,1,0,0") (ifseqformula "13"))
                        (rule "applyEq" (formula "15") (term "1,1,1,0") (ifseqformula "1"))
                        (rule "polySimp_addAssoc" (formula "15") (term "1,1,0"))
                        (rule "add_literals" (formula "15") (term "0,1,1,0"))
                        (rule "add_zero_left" (formula "15") (term "1,1,0"))
                        (rule "applyEq" (formula "14") (term "1,1,1,0") (ifseqformula "1"))
                        (rule "polySimp_addAssoc" (formula "14") (term "1,1,0"))
                        (rule "add_literals" (formula "14") (term "0,1,1,0"))
                        (rule "add_zero_left" (formula "14") (term "1,1,0"))
                        (rule "applyEq" (formula "36") (term "0,1,0") (ifseqformula "1"))
                        (rule "polySimp_pullOutFactor1" (formula "36") (term "0"))
                        (rule "add_literals" (formula "36") (term "1,0"))
                        (rule "times_zero_1" (formula "36") (term "0"))
                        (rule "leq_literals" (formula "36"))
                        (rule "true_left" (formula "36"))
                        (rule "applyEq" (formula "48") (term "0,1,0,0,1,1,0,0,1,0,1,0,0") (ifseqformula "1"))
                        (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1,1,0,0,1,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,1,0,0,1,0,1,0,0"))
                        (rule "mul_literals" (formula "48") (term "0,1,0,0,1,1,0,0,1,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,1,0,0,1,0,1,0,0"))
                        (rule "add_literals" (formula "48") (term "0,0,0,1,1,0,0,1,0,1,0,0"))
                        (rule "applyEq" (formula "48") (term "1,1,1,0,1,0,1,0,1,0,0") (ifseqformula "1"))
                        (rule "polySimp_addAssoc" (formula "48") (term "1,1,0,1,0,1,0,1,0,0"))
                        (rule "add_literals" (formula "48") (term "0,1,1,0,1,0,1,0,1,0,0"))
                        (rule "applyEq" (formula "23") (term "1,1,1,0") (ifseqformula "1"))
                        (rule "polySimp_addAssoc" (formula "23") (term "1,1,0"))
                        (rule "add_literals" (formula "23") (term "0,1,1,0"))
                        (rule "add_zero_left" (formula "23") (term "1,1,0"))
                        (rule "applyEq" (formula "48") (term "1,1,1,1,1,0,0,1,0,0") (ifseqformula "1"))
                        (rule "polySimp_addAssoc" (formula "48") (term "1,1,1,1,0,0,1,0,0"))
                        (rule "add_literals" (formula "48") (term "0,1,1,1,1,0,0,1,0,0"))
                        (rule "add_zero_left" (formula "48") (term "1,1,1,1,0,0,1,0,0"))
                        (rule "applyEq" (formula "22") (term "1,1,1,0") (ifseqformula "1"))
                        (rule "polySimp_addAssoc" (formula "22") (term "1,1,0"))
                        (rule "add_literals" (formula "22") (term "0,1,1,0"))
                        (rule "add_zero_left" (formula "22") (term "1,1,0"))
                        (rule "applyEq" (formula "48") (term "0,1,0,0,1,1,1,0,0,1,0,0") (ifseqformula "1"))
                        (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1,1,1,0,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1,1,1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "48") (term "0,1,0,0,1,1,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,1,1,0,0,1,0,0"))
                        (rule "add_literals" (formula "48") (term "0,0,0,1,1,1,0,0,1,0,0"))
                        (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "1"))
                        (rule "polySimp_addAssoc" (formula "9") (term "0"))
                        (rule "add_literals" (formula "9") (term "0,0"))
                        (rule "add_zero_left" (formula "9") (term "0"))
                        (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "1"))
                        (rule "polySimp_addComm0" (formula "29") (term "0"))
                        (rule "applyEq" (formula "47") (term "1,0,1,0,0,0,0") (ifseqformula "12"))
                        (rule "polySimp_sepNegMonomial" (formula "47") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "47") (term "0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "47") (term "0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                        (rule "mul_literals" (formula "9") (term "1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "47") (term "0,1,1,1,0,0,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "47") (term "0,0,1,1,1,0,0,1,0,1,0"))
                        (rule "polySimp_elimOne" (formula "47") (term "0,0,1,1,1,0,0,1,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                        (rule "mul_literals" (formula "28") (term "1"))
                        (rule "polySimp_sepNegMonomial" (formula "29"))
                        (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                        (rule "polySimp_elimOne" (formula "29") (term "0"))
                        (rule "applyEq" (formula "2") (term "0") (ifseqformula "29"))
                        (rule "inEqSimp_homoInEq1" (formula "2"))
                        (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                        (rule "add_literals" (formula "2") (term "1,0"))
                        (rule "times_zero_1" (formula "2") (term "0"))
                        (rule "leq_literals" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "applyEq" (formula "8") (term "0") (ifseqformula "28"))
                        (rule "inEqSimp_homoInEq1" (formula "8"))
                        (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                        (rule "mul_literals" (formula "8") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "8") (term "0"))
                        (rule "add_literals" (formula "8") (term "0,0"))
                        (rule "add_zero_left" (formula "8") (term "0"))
                        (rule "applyEq" (formula "46") (term "0,1,0,0,0,0,0,1,0") (ifseqformula "28"))
                        (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,0,0,1,0"))
                        (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,0,0,1,0"))
                        (rule "add_literals" (formula "46") (term "0,0,0,0,0,0,1,0"))
                        (rule "applyEq" (formula "17") (term "0") (ifseqformula "28"))
                        (rule "applyEq" (formula "46") (term "1,1,0,0,0,1,0") (ifseqformula "28"))
                        (rule "polySimp_addAssoc" (formula "46") (term "1,0,0,0,1,0"))
                        (rule "add_literals" (formula "46") (term "0,1,0,0,0,1,0"))
                        (rule "add_zero_left" (formula "46") (term "1,0,0,0,1,0"))
                        (rule "applyEq" (formula "46") (term "1,1,1,0,1,0,1,0,1,0,1,0") (ifseqformula "28"))
                        (rule "polySimp_addAssoc" (formula "46") (term "1,1,0,1,0,1,0,1,0,1,0"))
                        (rule "add_literals" (formula "46") (term "0,1,1,0,1,0,1,0,1,0,1,0"))
                        (rule "applyEq" (formula "46") (term "1,1,0,1,0,0,0,0") (ifseqformula "28"))
                        (rule "polySimp_addAssoc" (formula "46") (term "1,0,1,0,0,0,0"))
                        (rule "add_literals" (formula "46") (term "0,1,0,1,0,0,0,0"))
                        (rule "add_zero_left" (formula "46") (term "1,0,1,0,0,0,0"))
                        (rule "applyEq" (formula "46") (term "0,0,1,1,1,0,0,1,0,1,0") (ifseqformula "28"))
                        (rule "inEqSimp_homoInEq1" (formula "46") (term "0,1,1,1,0,0,1,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,1,1,0,0,1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,1,1,0,0,1,0,1,0"))
                        (rule "mul_literals" (formula "46") (term "0,1,0,0,1,1,1,0,0,1,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,1,1,0,0,1,0,1,0"))
                        (rule "add_literals" (formula "46") (term "0,0,0,1,1,1,0,0,1,0,1,0"))
                        (rule "applyEq" (formula "46") (term "1,1,1,1,1,0,0,1,0,1,0") (ifseqformula "28"))
                        (rule "polySimp_addAssoc" (formula "46") (term "1,1,1,1,0,0,1,0,1,0"))
                        (rule "add_literals" (formula "46") (term "0,1,1,1,1,0,0,1,0,1,0"))
                        (rule "add_zero_left" (formula "46") (term "1,1,1,1,0,0,1,0,1,0"))
                        (rule "applyEq" (formula "46") (term "1,1,1,1,0,0,1,0,1,0,1,0") (ifseqformula "28"))
                        (rule "polySimp_addAssoc" (formula "46") (term "1,1,1,0,0,1,0,1,0,1,0"))
                        (rule "add_literals" (formula "46") (term "0,1,1,1,0,0,1,0,1,0,1,0"))
                        (rule "add_zero_left" (formula "46") (term "1,1,1,0,0,1,0,1,0,1,0"))
                        (rule "applyEq" (formula "46") (term "0,1,0,0,1,1,0,0,1,0,1,0,1,0") (ifseqformula "28"))
                        (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,1,0,0,1,0,1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,1,0,0,1,0,1,0,1,0"))
                        (rule "mul_literals" (formula "46") (term "0,1,0,0,1,1,0,0,1,0,1,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,1,0,0,1,0,1,0,1,0"))
                        (rule "add_literals" (formula "46") (term "0,0,0,1,1,0,0,1,0,1,0,1,0"))
                        (rule "applyEq" (formula "46") (term "0,1,0,0,0,1,0,0,0,0") (ifseqformula "28"))
                        (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0,1,0,0,0,0"))
                        (rule "mul_literals" (formula "46") (term "0,1,0,0,0,1,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "46") (term "0,0,0,1,0,0,0,0"))
                        (rule "add_literals" (formula "46") (term "0,0,0,0,1,0,0,0,0"))
                        (rule "applyEq" (formula "46") (term "1,1,1,0,2,0,1,0,1,0,1,0") (ifseqformula "28"))
                        (rule "polySimp_addAssoc" (formula "46") (term "1,1,0,2,0,1,0,1,0,1,0"))
                        (rule "add_literals" (formula "46") (term "0,1,1,0,2,0,1,0,1,0,1,0"))
                        (rule "add_zero_left" (formula "46") (term "1,1,0,2,0,1,0,1,0,1,0"))
                        (rule "applyEq" (formula "46") (term "0,1,0,0,1,0,2,0,1,0,1,0,0") (ifseqformula "28"))
                        (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,0,2,0,1,0,1,0,0"))
                        (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,2,0,1,0,1,0,0"))
                        (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,2,0,1,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,2,0,1,0,1,0,0"))
                        (rule "add_literals" (formula "46") (term "0,0,0,1,0,2,0,1,0,1,0,0"))
                        (rule "applyEq" (formula "46") (term "0,1,0,0,1,0,2,0,1,0,1,0,1,0") (ifseqformula "28"))
                        (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,0,2,0,1,0,1,0,1,0"))
                        (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0,2,0,1,0,1,0,1,0"))
                        (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0,2,0,1,0,1,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0,2,0,1,0,1,0,1,0"))
                        (rule "add_literals" (formula "46") (term "0,0,0,1,0,2,0,1,0,1,0,1,0"))
                        (rule "applyEq" (formula "46") (term "1,1,1,0,2,0,1,0,1,0,0") (ifseqformula "28"))
                        (rule "polySimp_addAssoc" (formula "46") (term "1,1,0,2,0,1,0,1,0,0"))
                        (rule "add_literals" (formula "46") (term "0,1,1,0,2,0,1,0,1,0,0"))
                        (rule "add_zero_left" (formula "46") (term "1,1,0,2,0,1,0,1,0,0"))
                        (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "28"))
                        (rule "polySimp_addAssoc" (formula "18") (term "1"))
                        (rule "add_literals" (formula "18") (term "0,1"))
                        (rule "add_zero_left" (formula "18") (term "1"))
                        (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "28"))
                        (rule "polySimp_addAssoc" (formula "11") (term "1"))
                        (rule "add_literals" (formula "11") (term "0,1"))
                        (rule "add_zero_left" (formula "11") (term "1"))
                        (rule "polySimp_sepNegMonomial" (formula "46") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "46") (term "0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "46") (term "0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "46") (term "0,1,1,0,0,1,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "46") (term "0,0,1,1,0,0,1,0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "46") (term "0,0,1,1,0,0,1,0,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "46") (term "0,1,1,1,0,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "46") (term "0,0,1,1,1,0,0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "46") (term "0,0,1,1,1,0,0,1,0,0"))
                        (rule "inEqSimp_invertInEq0" (formula "8"))
                        (rule "mul_literals" (formula "8") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                        (rule "polySimp_elimOne" (formula "8") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "45") (term "0,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "45") (term "0,0,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "45") (term "0,0,0,0,0,1,0"))
                        (rule "polySimp_homoEq" (formula "45") (term "0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "45") (term "0,0,0,1,0"))
                        (rule "polySimp_sepPosMonomial" (formula "45") (term "0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0"))
                        (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                        (rule "mul_literals" (formula "16") (term "1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "44") (term "0,1,1,1,0,0,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "44") (term "0,0,1,1,1,0,0,1,0,1,0"))
                        (rule "polySimp_elimOne" (formula "44") (term "0,0,1,1,1,0,0,1,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "44") (term "0,1,1,0,0,1,0,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "44") (term "0,0,1,1,0,0,1,0,1,0,1,0"))
                        (rule "polySimp_elimOne" (formula "44") (term "0,0,1,1,0,0,1,0,1,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "44") (term "0,1,0,2,0,1,0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "44") (term "0,0,1,0,2,0,1,0,1,0,0"))
                        (rule "polySimp_elimOne" (formula "44") (term "0,0,1,0,2,0,1,0,1,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "44") (term "0,1,0,2,0,1,0,1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "44") (term "0,0,1,0,2,0,1,0,1,0,1,0"))
                        (rule "polySimp_elimOne" (formula "44") (term "0,0,1,0,2,0,1,0,1,0,1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "44") (term "0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "44") (term "0,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "44") (term "0,0,0,0,0,0"))
                        (rule "polySimp_homoEq" (formula "44") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "44") (term "0,0,0,0"))
                        (rule "polySimp_sepPosMonomial" (formula "44") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "44") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "44") (term "0,1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "44") (term "1,1,0,0,0"))
                        (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "31"))
                        (rule "leq_literals" (formula "25") (term "0"))
                        (builtin "One Step Simplification" (formula "25"))
                        (rule "true_left" (formula "25"))
                        (rule "pullOutSelect" (formula "43") (term "0,0,1,0,0,1,1,0") (inst "selectSK=verif_functionalities_pkienc_Decryptor_EncryptionLog_ciphertext_6"))
                        (rule "applyEq" (formula "44") (term "0,1,1,1,0,1,1,0,1,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "44") (term "0,0,0,0,0,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "44") (term "0,1,0,0,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "44") (term "1,0,0,0,0,0,1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "44") (term "1,1,1,1,0,1,0,0") (ifseqformula "1"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "castDel" (formula "1") (term "0"))
                        (rule "applyEqReverse" (formula "44") (term "0,0,1,0,0,1,1,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "44") (term "0,1,1,1,0,1,1,0,1,0,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "44") (term "0,0,0,0,0,0,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "44") (term "0,1,0,0,0,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "44") (term "1,0,0,0,0,0,1,1,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "44") (term "1,1,1,1,0,1,0,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "replace_known_right" (formula "43") (term "0,1,0,0,1,1,0") (ifseqformula "33"))
                        (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "34")))
                        (rule "applyEq" (formula "43") (term "1,0,0,0,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "43") (term "0,0,0,0,0,0") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "43") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0,0"))
                        (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "43") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "43") (term "0,0,0,0,0,0"))
                        (rule "applyEq" (formula "43") (term "1,1,1,0,1,1,0,1,0,0") (ifseqformula "1"))
                        (rule "polySimp_addAssoc" (formula "43") (term "1,1,0,1,1,0,1,0,0"))
                        (rule "add_literals" (formula "43") (term "0,1,1,0,1,1,0,1,0,0"))
                        (rule "add_zero_left" (formula "43") (term "1,1,0,1,1,0,1,0,0"))
                        (rule "inEqSimp_invertInEq0" (formula "43") (term "0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "43") (term "0,0,0,0,0,0"))
                        (rule "times_zero_2" (formula "43") (term "1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "43") (term "0,0,0,0,0,0"))
                        (rule "replace_known_left" (formula "43") (term "0,0,0,0,0") (ifseqformula "30"))
                        (builtin "One Step Simplification" (formula "43"))
                        (rule "polySimp_homoEq" (formula "43") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0"))
                        (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "43") (term "0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "43") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "43") (term "0,0,0,0,0"))
                        (rule "polySimp_sepPosMonomial" (formula "43") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "43") (term "1,0,0,0"))
                        (builtin "One Step Simplification" (formula "43"))
                        (rule "eqSymm" (formula "43") (term "1,0,0,0"))
                        (rule "pullOutSelect" (formula "43") (term "1,1,1,1,0,1,0,1,0") (inst "selectSK=verif_functionalities_pkienc_Decryptor_EncryptionLog_plaintext_3"))
                        (rule "applyEq" (formula "44") (term "0,0,1,0,1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "44") (term "1,0,0,0,0,1,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "44") (term "0,1,1,1,0,1,1,0,1,0,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "44") (term "0,0,0,0,0,0,1,0") (ifseqformula "1"))
                        (rule "applyEq" (formula "44") (term "0,1,0,0,0,1,0") (ifseqformula "1"))
                        (rule "simplifySelectOfStore" (formula "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "castDel" (formula "1") (term "0"))
                        (rule "applyEqReverse" (formula "44") (term "1,1,1,1,0,1,0,1,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "44") (term "0,0,1,0,1,1,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "44") (term "1,0,0,0,0,1,1,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "44") (term "0,1,1,1,0,1,1,0,1,0,1,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "44") (term "0,0,0,0,0,0,1,0") (ifseqformula "1"))
                        (rule "applyEqReverse" (formula "44") (term "0,1,0,0,0,1,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "replace_known_right" (formula "43") (term "0,0,0,1,1,0") (ifseqformula "37"))
                        (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "36")))
                        (rule "applyEq" (formula "43") (term "0,0,0,0,0,1,0") (ifseqformula "25"))
                        (rule "inEqSimp_homoInEq1" (formula "43") (term "0,0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,0,1,0"))
                        (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,0,1,0"))
                        (rule "add_literals" (formula "43") (term "0,0,0,0,0,0,1,0"))
                        (rule "add_zero_left" (formula "43") (term "0,0,0,0,0,1,0"))
                        (rule "applyEq" (formula "43") (term "1,0,0,0,1,0") (ifseqformula "25"))
                        (rule "applyEq" (formula "43") (term "1,1,1,0,1,1,0,1,0,1,0") (ifseqformula "25"))
                        (rule "polySimp_addAssoc" (formula "43") (term "1,1,0,1,1,0,1,0,1,0"))
                        (rule "add_literals" (formula "43") (term "0,1,1,0,1,1,0,1,0,1,0"))
                        (rule "add_zero_left" (formula "43") (term "1,1,0,1,1,0,1,0,1,0"))
                        (rule "inEqSimp_invertInEq0" (formula "43") (term "0,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "43") (term "0,0,0,0,0,1,0"))
                        (rule "mul_literals" (formula "43") (term "1,0,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "43") (term "0,0,0,0,0,1,0"))
                        (rule "replace_known_left" (formula "43") (term "0,0,0,0,1,0") (ifseqformula "30"))
                        (builtin "One Step Simplification" (formula "43"))
                        (rule "polySimp_homoEq" (formula "43") (term "0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "43") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_addComm1" (formula "43") (term "0,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0,1,0"))
                        (rule "add_literals" (formula "43") (term "0,0,0,0,0,1,0"))
                        (rule "add_zero_left" (formula "43") (term "0,0,0,0,1,0"))
                        (rule "polySimp_sepPosMonomial" (formula "43") (term "0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "43") (term "1,0,0,1,0"))
                        (builtin "One Step Simplification" (formula "43"))
                        (rule "eqSymm" (formula "43") (term "1,0,0,1,0"))
                        (rule "Class_invariant_axiom_for_verif_functionalities_pkienc_Decryptor_EncryptionLog" (formula "43") (term "1,1,0") (ifseqformula "4"))
                        (rule "replaceKnownSelect_taclet00020000_12" (formula "43") (term "1,0,1,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00020000_13" (formula "43") (term "1,0,1,1,0"))
                        (rule "dismissNonSelectedField" (formula "43") (term "1,1,1,1,0"))
                        (rule "replaceKnownSelect_taclet00020000_14" (formula "43") (term "1,1,1,1,0"))
                        (rule "replaceKnownAuxiliaryConstant_taclet00020000_15" (formula "43") (term "1,1,1,1,0"))
                        (rule "nonNull" (formula "43") (term "0,1,1,0") (inst "i=i_1"))
                        (rule "sub_literals" (formula "43") (term "2,1,0,1,1,0,1,1,0"))
                        (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "33")))
                        (rule "greater_literals" (formula "43") (term "0,0,1,1,0"))
                        (builtin "One Step Simplification" (formula "43"))
                        (rule "dismissNonSelectedField" (formula "43") (term "0,0,1,0,0,1,1,0"))
                        (rule "dismissNonSelectedField" (formula "43") (term "0,0,1,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,0,1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0,0,1,1,0"))
                        (rule "applyEq" (formula "43") (term "0,1,0,0,1,0,0,0,1,1,0") (ifseqformula "1"))
                        (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0,0,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0,0,1,1,0"))
                        (rule "add_literals" (formula "43") (term "0,0,0,1,0,0,0,1,1,0"))
                        (rule "add_zero_left" (formula "43") (term "0,0,1,0,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0,1,1,0"))
                        (rule "nonNull" (formula "43") (term "1,1,1,0") (inst "i=i_1"))
                        (rule "greater_literals" (formula "43") (term "0,1,1,1,1,0"))
                        (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "36")))
                        (rule "sub_literals" (formula "43") (term "2,1,0,1,1,1,0"))
                        (builtin "One Step Simplification" (formula "43"))
                        (rule "dismissNonSelectedField" (formula "43") (term "0,0,1,0,1,1,1,0"))
                        (rule "dismissNonSelectedField" (formula "43") (term "0,0,1,0,1,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0,1,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,1,1,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0,1,1,1,0"))
                        (rule "applyEq" (formula "43") (term "0,1,0,0,1,0,0,1,1,1,0") (ifseqformula "25"))
                        (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,1,1,1,0"))
                        (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0,1,1,1,0"))
                        (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0,1,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0,1,1,1,0"))
                        (rule "add_literals" (formula "43") (term "0,0,0,1,0,0,1,1,1,0"))
                        (rule "add_zero_left" (formula "43") (term "0,0,1,0,0,1,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,0,0,1,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,1,1,1,0"))
                        (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,1,1,1,0"))
                        (rule "nnf_imp2or" (formula "43") (term "0,0,1,1,0"))
                        (rule "nnf_imp2or" (formula "43") (term "0,1,1,1,0"))
                        (rule "nnf_notAnd" (formula "43") (term "0,0,0,1,1,0"))
                        (rule "inEqSimp_notGeq" (formula "43") (term "0,0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "43") (term "1,0,0,0,0,0,0,1,1,0"))
                        (rule "add_literals" (formula "43") (term "0,0,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "43") (term "1,0,0,0,0,1,1,0"))
                        (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,0,1,1,0"))
                        (rule "mul_literals" (formula "43") (term "0,1,1,0,0,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,0,1,1,0"))
                        (rule "nnf_notAnd" (formula "43") (term "0,0,1,1,1,0"))
                        (rule "inEqSimp_notGeq" (formula "43") (term "0,0,0,1,1,1,0"))
                        (rule "times_zero_1" (formula "43") (term "1,0,0,0,0,0,1,1,1,0"))
                        (rule "add_literals" (formula "43") (term "0,0,0,0,0,1,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0,1,1,1,0"))
                        (rule "mul_literals" (formula "43") (term "1,0,0,0,1,1,1,0"))
                        (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0,1,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,1,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0,1,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "43") (term "1,1,0,0,1,1,1,0"))
                        (rule "polySimp_rightDist" (formula "43") (term "1,1,0,0,1,1,1,0"))
                        (rule "mul_literals" (formula "43") (term "0,1,1,0,0,1,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "43") (term "1,1,1,0,0,1,1,1,0"))
                        (rule "polySimp_elimOne" (formula "43") (term "1,1,1,0,0,1,1,1,0"))
                        (rule "commute_or" (formula "43") (term "0,0,0"))
                        (rule "inEqSimp_or_weaken1" (formula "43") (term "0,0,0"))
                        (rule "add_zero_right" (formula "43") (term "1,0,0,0,0"))
                        (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "30")))
                        (rule "commute_or" (formula "43") (term "0,0,1,0"))
                        (rule "inEqSimp_or_weaken1" (formula "43") (term "0,0,1,0"))
                        (rule "add_zero_right" (formula "43") (term "1,0,0,0,1,0"))
                        (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "30")))
                        (rule "andRight" (formula "43"))
                        (branch "Case 1"
                           (rule "andRight" (formula "43"))
                           (branch "Case 1"
                              (rule "allRight" (formula "43") (inst "sk=iv_1"))
                              (rule "orRight" (formula "43"))
                              (rule "orRight" (formula "43"))
                              (rule "eqSymm" (formula "45") (term "0,2,0"))
                              (rule "inEqSimp_leqRight" (formula "43"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "replace_known_left" (formula "45") (term "0,0,1") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "1")))
                              (rule "inEqSimp_geqRight" (formula "44"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0"))
                              (rule "inEqSimp_homoInEq0" (formula "45") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "45") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "45") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "45") (term "1,0,0"))
                              (rule "mul_literals" (formula "45") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0"))
                              (rule "pullOutSelect" (formula "45") (term "1,1") (inst "selectSK=arr_53"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "0,0"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_54"))
                              (rule "simplifySelectOfStore" (formula "1"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "castDel" (formula "1") (term "1,0"))
                              (rule "eqSymm" (formula "1") (term "0,0,0"))
                              (rule "eqSymm" (formula "1") (term "1,0,0"))
                              (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_55"))
                              (rule "simplifySelectOfAnon" (formula "1"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "27"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "19"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "39"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")) (ifInst ""  (formula "29")))
                              (rule "narrowSelectArrayType" (formula "1") (term "1,0") (ifseqformula "34") (ifseqformula "38"))
                              (rule "elementOfUnion" (formula "1") (term "0,0"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "ifthenelse_split" (formula "47") (term "0,0,2,0"))
                              (branch "i_0 >= 1 TRUE"
                                 (rule "eqSymm" (formula "48") (term "0,2,0"))
                                 (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_left" (formula "48") (term "0,0,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "48"))
                                 (rule "inEqSimp_commuteGeq" (formula "4"))
                                 (rule "replace_known_left" (formula "48") (term "0,1") (ifseqformula "4"))
                                 (builtin "One Step Simplification" (formula "48"))
                                 (rule "inEqSimp_homoInEq1" (formula "48") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "48") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "48") (term "1,0,0"))
                                 (rule "mul_literals" (formula "48") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0"))
                                 (rule "inEqSimp_subsumption1" (formula "35") (ifseqformula "1"))
                                 (rule "leq_literals" (formula "35") (term "0"))
                                 (builtin "One Step Simplification" (formula "35"))
                                 (rule "true_left" (formula "35"))
                                 (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "4"))
                                 (rule "times_zero_1" (formula "5") (term "0,0"))
                                 (rule "add_zero_left" (formula "5") (term "0"))
                                 (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "1"))
                                 (rule "leq_literals" (formula "5") (term "0"))
                                 (builtin "One Step Simplification" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "ifthenelse_split" (formula "47") (term "2,0"))
                                 (branch "iv_1 = i_0 TRUE"
                                    (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "48") (term "1") (ifseqformula "4"))
                                    (builtin "One Step Simplification" (formula "48"))
                                    (rule "orRight" (formula "48"))
                                    (rule "notRight" (formula "48"))
                                    (rule "hideAuxiliaryEq" (formula "5"))
                                    (rule "replace_known_left" (formula "4") (term "1,0,0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "replace_known_left" (formula "48") (term "0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "48"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq0" (formula "1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0"))
                                    (rule "add_literals" (formula "1") (term "0"))
                                    (rule "qeq_literals" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "iv_1 = i_0 FALSE"
                                    (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "47"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "46"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "47") (term "1") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "inEqSimp_strengthen0" (formula "2") (ifseqformula "45"))
                                    (rule "replace_known_left" (formula "46") (term "0,0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "2")))
                                    (rule "eqSymm" (formula "46"))
                                    (rule "inEqSimp_contradEq3" (formula "45") (ifseqformula "2"))
                                    (rule "polySimp_mulComm0" (formula "45") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0"))
                                    (rule "add_literals" (formula "45") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "45") (term "1,0,0"))
                                    (rule "add_literals" (formula "45") (term "0,0"))
                                    (rule "qeq_literals" (formula "45") (term "0"))
                                    (builtin "One Step Simplification" (formula "45"))
                                    (rule "false_right" (formula "45"))
                                    (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "2"))
                                    (rule "times_zero_1" (formula "3") (term "0,0"))
                                    (rule "add_zero_left" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                    (rule "mul_literals" (formula "3") (term "1"))
                                    (rule "allLeft" (formula "30") (inst "t=iv_1"))
                                    (rule "inEqSimp_contradInEq0" (formula "30") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "30") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "30") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                                    (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "30") (term "0,0,1"))
                                    (rule "leq_literals" (formula "30") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "30") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "notLeft" (formula "30"))
                                    (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=arr_56"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "18"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "13"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")) (ifInst ""  (formula "13")))
                                    (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "narrowSelectArrayType" (formula "35") (term "0") (ifseqformula "5") (ifseqformula "41"))
                                    (rule "allLeft" (formula "31") (inst "t=iv_1"))
                                    (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "31") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "inEqSimp_contradInEq0" (formula "31") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "31") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "31") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "31") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                                    (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "31") (term "0,0,1"))
                                    (rule "leq_literals" (formula "31") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "31"))
                                    (rule "notLeft" (formula "31"))
                                    (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=arr_57"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "18"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "12"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")) (ifInst ""  (formula "12")))
                                    (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "narrowSelectArrayType" (formula "35") (term "0") (ifseqformula "5") (ifseqformula "43"))
                                    (rule "allLeft" (formula "22") (inst "t=iv_1"))
                                    (rule "replaceKnownSelect_taclet100000020000_26" (formula "22") (term "0,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet100000020000_27" (formula "22") (term "0,0,0,0"))
                                    (rule "narrowSelectArrayType" (formula "22") (term "0,0,0,0") (ifseqformula "5") (ifseqformula "44"))
                                    (rule "replace_known_right" (formula "22") (term "0,0,0") (ifseqformula "36"))
                                    (builtin "One Step Simplification" (formula "22"))
                                    (rule "true_left" (formula "22"))
                                    (rule "allLeft" (formula "21") (inst "t=iv_1"))
                                    (rule "replaceKnownSelect_taclet100000020000_23" (formula "21") (term "0,0,0,0"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet100000020000_24" (formula "21") (term "0,0,0,0"))
                                    (rule "narrowSelectArrayType" (formula "21") (term "0,0,0,0") (ifseqformula "5") (ifseqformula "43"))
                                    (rule "replace_known_right" (formula "21") (term "0,0,0") (ifseqformula "37"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "allLeft" (formula "33") (inst "t=iv_1"))
                                    (rule "inEqSimp_contradInEq0" (formula "33") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "33") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "33") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "33") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                    (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "33") (term "0,0,1"))
                                    (rule "leq_literals" (formula "33") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "inEqSimp_contradInEq1" (formula "33") (term "1") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "33") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_58"))
                                    (rule "simplifySelectOfAnon" (formula "33"))
                                    (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "42")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "0,1,0,0") (ifseqformula "25"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "0,0,1,0,0") (ifseqformula "17"))
                                    (rule "eqSymm" (formula "34"))
                                    (rule "applyEqReverse" (formula "33") (term "1") (ifseqformula "34"))
                                    (rule "hideAuxiliaryEq" (formula "34"))
                                    (rule "replace_known_left" (formula "33") (term "1,0,0,1,0,0") (ifseqformula "18"))
                                    (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "42")))
                                    (rule "elementOfUnion" (formula "33") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "allLeft" (formula "35") (inst "t=iv_1"))
                                    (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "35") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "inEqSimp_contradInEq0" (formula "35") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "35") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1"))
                                    (rule "add_literals" (formula "35") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "35") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "35") (term "0,0,1"))
                                    (rule "leq_literals" (formula "35") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=arr_59"))
                                    (rule "simplifySelectOfAnon" (formula "35"))
                                    (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "40")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,1,0,0") (ifseqformula "25"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,1,0,0") (ifseqformula "17"))
                                    (rule "eqSymm" (formula "36"))
                                    (rule "applyEqReverse" (formula "35") (term "1") (ifseqformula "36"))
                                    (rule "hideAuxiliaryEq" (formula "36"))
                                    (rule "replace_known_left" (formula "35") (term "1,0,1,0,0") (ifseqformula "27"))
                                    (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "40")) (ifInst ""  (formula "41")))
                                    (rule "elementOfUnion" (formula "35") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "49")))
                                    (rule "closeFalse" (formula "35"))
                                 )
                              )
                              (branch "i_0 >= 1 FALSE"
                                 (rule "eqSymm" (formula "48") (term "0,2,0"))
                                 (rule "replace_known_right" (formula "48") (term "0,0,0,0") (ifseqformula "47"))
                                 (builtin "One Step Simplification" (formula "48"))
                                 (rule "replace_known_right" (formula "3") (term "0,0") (ifseqformula "47"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "inEqSimp_geqRight" (formula "47"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_commuteGeq" (formula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "48") (term "0,0"))
                                 (rule "times_zero_2" (formula "48") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "48") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0"))
                                 (rule "mul_literals" (formula "48") (term "1,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "48") (term "0,0") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "48") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "48"))
                                 (rule "eqSymm" (formula "48"))
                                 (rule "inEqSimp_antiSymm" (formula "5") (ifseqformula "4"))
                                 (rule "replace_known_left" (formula "49") (term "0,1") (ifseqformula "5"))
                                 (builtin "One Step Simplification" (formula "49"))
                                 (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
                                 (rule "leq_literals" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "applyEq" (formula "2") (term "0,2,2,0") (ifseqformula "4"))
                                 (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "4"))
                                 (rule "qeq_literals" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "4"))
                                 (rule "eqSymm" (formula "3") (term "0,0"))
                                 (rule "applyEqRigid" (formula "47") (term "0,0,0") (ifseqformula "4"))
                                 (rule "inEqSimp_commuteLeq" (formula "47") (term "0,0"))
                                 (rule "replace_known_left" (formula "47") (term "0,0") (ifseqformula "34"))
                                 (builtin "One Step Simplification" (formula "47"))
                                 (rule "applyEq" (formula "2") (term "0,1,0,0") (ifseqformula "4"))
                                 (rule "eqSymm" (formula "2") (term "1,0,0"))
                                 (rule "inEqSimp_antiSymm" (formula "34") (ifseqformula "1"))
                                 (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "34"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "34"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "48") (term "0") (ifseqformula "3"))
                                 (builtin "One Step Simplification" (formula "48"))
                                 (rule "closeTrue" (formula "48"))
                              )
                           )
                           (branch "Case 2"
                              (rule "andRight" (formula "43"))
                              (branch "Case 1"
                                 (rule "allRight" (formula "43") (inst "sk=iv_0"))
                                 (rule "orRight" (formula "43"))
                                 (rule "orRight" (formula "43"))
                                 (rule "eqSymm" (formula "45") (term "0,2,0"))
                                 (rule "inEqSimp_geqRight" (formula "44"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0"))
                                 (rule "inEqSimp_leqRight" (formula "44"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "replace_known_left" (formula "45") (term "0,0,1,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "1")))
                                 (rule "inEqSimp_homoInEq0" (formula "45") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "45") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "45") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "45") (term "1,0,0"))
                                 (rule "mul_literals" (formula "45") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "45") (term "1,1,0,0"))
                                 (rule "pullOutSelect" (formula "45") (term "1,1") (inst "selectSK=arr_45"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "eqSymm" (formula "1") (term "1,0,0"))
                                 (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_46"))
                                 (rule "simplifySelectOfStore" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "eqSymm" (formula "1") (term "0,0"))
                                 (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_47"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "27"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "19"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "42"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
                                 (rule "narrowSelectArrayType" (formula "1") (term "1,0") (ifseqformula "34") (ifseqformula "41"))
                                 (rule "elementOfUnion" (formula "1") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "ifthenelse_split" (formula "47") (term "0,0,2,0"))
                                 (branch "i_0 >= 1 TRUE"
                                    (rule "eqSymm" (formula "48") (term "0,2,0"))
                                    (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "replace_known_left" (formula "48") (term "0,0,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "48"))
                                    (rule "inEqSimp_commuteGeq" (formula "5"))
                                    (rule "replace_known_left" (formula "48") (term "0,1") (ifseqformula "5"))
                                    (builtin "One Step Simplification" (formula "48"))
                                    (rule "inEqSimp_homoInEq1" (formula "48") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "48") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "48") (term "1,0,0"))
                                    (rule "mul_literals" (formula "48") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0"))
                                    (rule "inEqSimp_subsumption1" (formula "35") (ifseqformula "1"))
                                    (rule "leq_literals" (formula "35") (term "0"))
                                    (builtin "One Step Simplification" (formula "35"))
                                    (rule "true_left" (formula "35"))
                                    (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "5"))
                                    (rule "times_zero_1" (formula "4") (term "0,0"))
                                    (rule "add_zero_left" (formula "4") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "1"))
                                    (rule "leq_literals" (formula "4") (term "0"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "true_left" (formula "4"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch "iv_0 = i_0 TRUE"
                                       (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_left" (formula "47") (term "0,2,0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "47"))
                                       (rule "replace_known_left" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEq" (formula "47") (term "0,0,1,0") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq0" (formula "47") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "47") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "47") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "47") (term "0,0,1,0"))
                                       (rule "qeq_literals" (formula "47") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "47"))
                                       (rule "applyEqRigid" (formula "4") (term "0") (ifseqformula "2"))
                                       (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq0" (formula "5"))
                                       (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                       (rule "add_literals" (formula "5") (term "1,0"))
                                       (rule "times_zero_1" (formula "5") (term "0"))
                                       (rule "qeq_literals" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "applyEq" (formula "46") (term "0,0,0") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq0" (formula "46") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,0"))
                                       (rule "add_literals" (formula "46") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "46") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "46") (term "0,0,0"))
                                       (rule "qeq_literals" (formula "46") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "46"))
                                       (rule "eqSymm" (formula "46"))
                                       (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "1"))
                                       (rule "leq_literals" (formula "4") (term "0"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "ifthenelse_split" (formula "3") (term "0"))
                                       (branch "result_0 = result TRUE"
                                          (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "eqSymm" (formula "45"))
                                          (rule "applyEq" (formula "34") (term "0,1,1,0,0,0,0,0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "34"))
                                          (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "28") (term "0,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "33") (term "0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "3"))
                                          (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "3"))
                                          (rule "close" (formula "33") (ifseqformula "17"))
                                       )
                                       (branch "result_0 = result FALSE"
                                          (rule "applyEqReverse" (formula "46") (term "0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "46"))
                                          (rule "closeTrue" (formula "46"))
                                       )
                                    )
                                    (branch "iv_0 = i_0 FALSE"
                                       (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "replace_known_right" (formula "2") (term "1,0,0") (ifseqformula "36"))
                                       (builtin "One Step Simplification" (formula "2"))
                                       (rule "applyEqReverse" (formula "47") (term "1") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "replace_known_right" (formula "46") (term "0,2,0") (ifseqformula "35"))
                                       (builtin "One Step Simplification" (formula "46"))
                                       (rule "inEqSimp_strengthen0" (formula "3") (ifseqformula "35"))
                                       (rule "replace_known_left" (formula "46") (term "0,1,0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "3")))
                                       (rule "eqSymm" (formula "46"))
                                       (rule "inEqSimp_contradEq3" (formula "35") (ifseqformula "3"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0"))
                                       (rule "add_literals" (formula "35") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "35") (term "1,0,0"))
                                       (rule "add_literals" (formula "35") (term "0,0"))
                                       (rule "qeq_literals" (formula "35") (term "0"))
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "false_right" (formula "35"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                                       (rule "times_zero_1" (formula "2") (term "0,0"))
                                       (rule "add_zero_left" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "1"))
                                       (rule "allLeft" (formula "21") (inst "t=iv_0"))
                                       (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "21") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "21"))
                                       (rule "inEqSimp_contradInEq0" (formula "21") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "21") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0,0,1"))
                                       (rule "polySimp_addComm0" (formula "21") (term "0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                                       (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "21") (term "0,0,1"))
                                       (rule "leq_literals" (formula "21") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "21"))
                                       (rule "notLeft" (formula "21"))
                                       (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=arr_48"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")) (ifInst ""  (formula "13")))
                                       (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "narrowSelectArrayType" (formula "35") (term "0") (ifseqformula "5") (ifseqformula "41"))
                                       (rule "allLeft" (formula "34") (inst "t=iv_0"))
                                       (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "34") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "inEqSimp_contradInEq0" (formula "34") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "34") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "34") (term "0,0,1"))
                                       (rule "polySimp_addComm0" (formula "34") (term "0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                       (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                       (rule "leq_literals" (formula "34") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=arr_49"))
                                       (rule "simplifySelectOfAnon" (formula "34"))
                                       (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "38")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "0,1,0,0") (ifseqformula "25"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "0,0,1,0,0") (ifseqformula "17"))
                                       (rule "eqSymm" (formula "35"))
                                       (rule "applyEqReverse" (formula "34") (term "1") (ifseqformula "35"))
                                       (rule "hideAuxiliaryEq" (formula "35"))
                                       (rule "replace_known_left" (formula "34") (term "1,0,1,0,0") (ifseqformula "27"))
                                       (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "38")) (ifInst ""  (formula "39")))
                                       (rule "elementOfUnion" (formula "34") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "34"))
                                       (rule "allLeft" (formula "30") (inst "t=iv_0"))
                                       (rule "inEqSimp_contradInEq0" (formula "30") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "30") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "30") (term "0,0,1"))
                                       (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                                       (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "30") (term "0,0,1"))
                                       (rule "leq_literals" (formula "30") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "inEqSimp_contradInEq1" (formula "30") (term "1") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "30") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "30"))
                                       (rule "notLeft" (formula "30"))
                                       (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=arr_50"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                                       (rule "replaceKnownSelect_taclet1001000020000_22" (formula "1") (term "2,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet1001000020000_23" (formula "1") (term "2,0"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "18"))
                                       (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "13"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "narrowSelectArrayType" (formula "36") (term "0") (ifseqformula "5") (ifseqformula "43"))
                                       (rule "allLeft" (formula "31") (inst "t=iv_0"))
                                       (rule "inEqSimp_contradInEq0" (formula "31") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "31") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "31") (term "0,0,1"))
                                       (rule "polySimp_addComm0" (formula "31") (term "0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                                       (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "31") (term "0,0,1"))
                                       (rule "leq_literals" (formula "31") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "inEqSimp_contradInEq1" (formula "31") (term "1") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "31") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "31"))
                                       (rule "notLeft" (formula "31"))
                                       (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=arr_51"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "18"))
                                       (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "12"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")) (ifInst ""  (formula "12")))
                                       (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "narrowSelectArrayType" (formula "36") (term "0") (ifseqformula "5") (ifseqformula "44"))
                                       (rule "allLeft" (formula "22") (inst "t=iv_0"))
                                       (rule "replaceKnownSelect_taclet1001000020000_29" (formula "22") (term "0,0,0,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet1001000020000_30" (formula "22") (term "0,0,0,0"))
                                       (rule "narrowSelectArrayType" (formula "22") (term "0,0,0,0") (ifseqformula "5") (ifseqformula "45"))
                                       (rule "replace_known_right" (formula "22") (term "0,0,0") (ifseqformula "37"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "true_left" (formula "22"))
                                       (rule "allLeft" (formula "33") (inst "t=iv_0"))
                                       (rule "inEqSimp_contradInEq1" (formula "33") (term "1,0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "33") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "inEqSimp_contradInEq0" (formula "33") (term "1") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "33") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "33") (term "0,0,1"))
                                       (rule "polySimp_addComm0" (formula "33") (term "0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,1"))
                                       (rule "add_literals" (formula "33") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "33") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "33") (term "0,0,1"))
                                       (rule "leq_literals" (formula "33") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_52"))
                                       (rule "simplifySelectOfAnon" (formula "33"))
                                       (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "43")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "0,1,0,0") (ifseqformula "25"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "0,0,1,0,0") (ifseqformula "17"))
                                       (rule "eqSymm" (formula "34"))
                                       (rule "applyEqReverse" (formula "33") (term "1") (ifseqformula "34"))
                                       (rule "hideAuxiliaryEq" (formula "34"))
                                       (rule "replace_known_right" (formula "33") (term "0,0,0,1,0,0") (ifseqformula "43"))
                                       (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "18")))
                                       (rule "elementOfUnion" (formula "33") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "49")))
                                       (rule "closeFalse" (formula "33"))
                                    )
                                 )
                                 (branch "i_0 >= 1 FALSE"
                                    (rule "eqSymm" (formula "48") (term "0,2,0"))
                                    (rule "replace_known_right" (formula "48") (term "0,0,0,0") (ifseqformula "47"))
                                    (builtin "One Step Simplification" (formula "48"))
                                    (rule "replace_known_right" (formula "4") (term "0,0") (ifseqformula "47"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "inEqSimp_geqRight" (formula "47"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_commuteGeq" (formula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "48") (term "0,0"))
                                    (rule "times_zero_2" (formula "48") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "48") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0"))
                                    (rule "mul_literals" (formula "48") (term "1,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "48") (term "0,0") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "48") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "48"))
                                    (rule "eqSymm" (formula "48"))
                                    (rule "inEqSimp_antiSymm" (formula "4") (ifseqformula "5"))
                                    (rule "replace_known_left" (formula "49") (term "0,1") (ifseqformula "4"))
                                    (builtin "One Step Simplification" (formula "49"))
                                    (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "applyEq" (formula "2") (term "0,2,2,0") (ifseqformula "4"))
                                    (rule "applyEqRigid" (formula "2") (term "0,0,0") (ifseqformula "4"))
                                    (rule "eqSymm" (formula "2") (term "0,0"))
                                    (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "4"))
                                    (rule "leq_literals" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "applyEqRigid" (formula "3") (term "0,1,0,0") (ifseqformula "4"))
                                    (rule "eqSymm" (formula "3") (term "1,0,0"))
                                    (rule "applyEqRigid" (formula "47") (term "0,0,0") (ifseqformula "4"))
                                    (rule "inEqSimp_commuteLeq" (formula "47") (term "0,0"))
                                    (rule "replace_known_left" (formula "47") (term "0,0") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "47"))
                                    (rule "inEqSimp_antiSymm" (formula "34") (ifseqformula "1"))
                                    (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "33"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqRigid" (formula "34") (term "0") (ifseqformula "33"))
                                    (rule "qeq_literals" (formula "34"))
                                    (rule "true_left" (formula "34"))
                                    (rule "applyEq" (formula "21") (term "1,1,0") (ifseqformula "33"))
                                    (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "33"))
                                    (rule "applyEq" (formula "35") (term "1,1,0") (ifseqformula "33"))
                                    (rule "applyEq" (formula "30") (term "1,1,0") (ifseqformula "33"))
                                    (rule "applyEqRigid" (formula "14") (term "1,1,0") (ifseqformula "33"))
                                    (rule "applyEq" (formula "31") (term "1,1,0") (ifseqformula "33"))
                                    (rule "applyEqRigid" (formula "22") (term "1,1,0") (ifseqformula "33"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "33"))
                                    (rule "leq_literals" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "applyEqRigid" (formula "33") (term "1,1,0") (ifseqformula "32"))
                                    (rule "applyEqRigid" (formula "27") (term "1,1") (ifseqformula "32"))
                                    (rule "add_zero_right" (formula "27") (term "1"))
                                    (rule "applyEqRigid" (formula "18") (term "1") (ifseqformula "32"))
                                    (rule "applyEqRigid" (formula "12") (term "1") (ifseqformula "32"))
                                    (rule "applyEqRigid" (formula "3") (term "1,1") (ifseqformula "32"))
                                    (rule "add_literals" (formula "3") (term "1"))
                                    (rule "inEqSimp_or_tautInEq1" (formula "20") (term "0"))
                                    (rule "add_zero_right" (formula "20") (term "1,1,0"))
                                    (rule "qeq_literals" (formula "20") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "inEqSimp_or_tautInEq1" (formula "14") (term "0"))
                                    (rule "add_zero_right" (formula "14") (term "1,1,0"))
                                    (rule "qeq_literals" (formula "14") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "inEqSimp_or_tautInEq1" (formula "32") (term "0"))
                                    (rule "add_zero_right" (formula "32") (term "1,1,0"))
                                    (rule "qeq_literals" (formula "32") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "true_left" (formula "32"))
                                    (rule "inEqSimp_or_tautInEq1" (formula "27") (term "0"))
                                    (rule "add_zero_right" (formula "27") (term "1,1,0"))
                                    (rule "qeq_literals" (formula "27") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "true_left" (formula "27"))
                                    (rule "inEqSimp_or_tautInEq1" (formula "13") (term "0"))
                                    (rule "add_zero_right" (formula "13") (term "1,1,0"))
                                    (rule "qeq_literals" (formula "13") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "13"))
                                    (rule "true_left" (formula "13"))
                                    (rule "inEqSimp_or_tautInEq1" (formula "26") (term "0"))
                                    (rule "add_literals" (formula "26") (term "1,1,0"))
                                    (rule "qeq_literals" (formula "26") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "true_left" (formula "26"))
                                    (rule "inEqSimp_or_tautInEq1" (formula "18") (term "0"))
                                    (rule "add_zero_right" (formula "18") (term "1,1,0"))
                                    (rule "qeq_literals" (formula "18") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "inEqSimp_or_tautInEq1" (formula "27") (term "0"))
                                    (rule "add_zero_right" (formula "27") (term "1,1,0"))
                                    (rule "qeq_literals" (formula "27") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "27"))
                                    (rule "true_left" (formula "27"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch "result_0 = result TRUE"
                                       (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "eqSymm" (formula "37"))
                                       (rule "applyEq" (formula "3") (term "0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "1"))
                                       (rule "applyEq" (formula "26") (term "1,0") (ifseqformula "1"))
                                       (rule "close" (formula "26") (ifseqformula "14"))
                                    )
                                    (branch "result_0 = result FALSE"
                                       (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "closeTrue" (formula "38"))
                                    )
                                 )
                              )
                              (branch "Case 2"
                                 (rule "andRight" (formula "43"))
                                 (branch "Case 1"
                                    (rule "allRight" (formula "43") (inst "sk=i_1_1"))
                                    (rule "orRight" (formula "43"))
                                    (rule "notRight" (formula "44"))
                                    (rule "orRight" (formula "44"))
                                    (rule "inEqSimp_leqRight" (formula "44"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_geqRight" (formula "45"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1"))
                                    (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_41"))
                                    (rule "simplifySelectOfStore" (formula "3"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "castDel" (formula "3") (term "1,0"))
                                    (rule "eqSymm" (formula "3") (term "0,0"))
                                    (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                                    (rule "ifEqualsNull" (formula "3"))
                                    (rule "replace_known_right" (formula "3") (term "1,0") (ifseqformula "46"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "andLeft" (formula "3"))
                                    (rule "notLeft" (formula "3"))
                                    (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "37"))
                                    (rule "inEqSimp_contradEq3" (formula "37") (ifseqformula "1"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0"))
                                    (rule "add_literals" (formula "37") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "37") (term "0,0"))
                                    (rule "qeq_literals" (formula "37") (term "0"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "false_right" (formula "37"))
                                    (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_42"))
                                    (rule "simplifySelectOfStore" (formula "3"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "castDel" (formula "3") (term "1,0"))
                                    (rule "eqSymm" (formula "3") (term "0,0,0"))
                                    (rule "eqSymm" (formula "3") (term "1,0,0"))
                                    (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                                    (rule "ifEqualsNull" (formula "3"))
                                    (rule "replace_known_right" (formula "3") (term "1,0") (ifseqformula "46"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "andLeft" (formula "3"))
                                    (rule "notLeft" (formula "3"))
                                    (rule "inEqSimp_contradEq3" (formula "38") (term "1") (ifseqformula "1"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                    (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "38") (term "0,0,1"))
                                    (rule "qeq_literals" (formula "38") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "false_right" (formula "38"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                    (rule "mul_literals" (formula "2") (term "0,0"))
                                    (rule "add_zero_left" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "36") (ifseqformula "2"))
                                    (rule "leq_literals" (formula "36") (term "0"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "true_left" (formula "36"))
                                    (rule "pullOutSelect" (formula "4") (term "0") (inst "selectSK=arr_43"))
                                    (rule "simplifySelectOfAnon" (formula "4"))
                                    (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "39")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,1,0,0") (ifseqformula "29"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,0,1,0,0") (ifseqformula "21"))
                                    (rule "replace_known_left" (formula "4") (term "1,0,1,0,0") (ifseqformula "31"))
                                    (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "40")) (ifInst ""  (formula "41")))
                                    (rule "narrowSelectArrayType" (formula "4") (term "1,0") (ifseqformula "36") (ifseqformula "39"))
                                    (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "5"))
                                    (rule "ifEqualsNull" (formula "4"))
                                    (rule "elementOfUnion" (formula "4") (term "0,0,1"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "andLeft" (formula "4"))
                                    (rule "elementOfUnion" (formula "4"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "true_left" (formula "4"))
                                    (rule "allLeft" (formula "38") (inst "t=i_1_1"))
                                    (rule "inEqSimp_contradInEq1" (formula "38") (term "1,0") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "38") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "inEqSimp_contradInEq0" (formula "38") (term "1") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "38") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "38") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "38") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                    (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "38") (term "0,0,1"))
                                    (rule "leq_literals" (formula "38") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=arr_44"))
                                    (rule "simplifySelectOfAnon" (formula "38"))
                                    (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "41")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "0,1,0,0") (ifseqformula "29"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "0,0,1,0,0") (ifseqformula "21"))
                                    (rule "eqSymm" (formula "39"))
                                    (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "39"))
                                    (rule "hideAuxiliaryEq" (formula "39"))
                                    (rule "replace_known_right" (formula "38") (term "0,0,0,1,0,0") (ifseqformula "41"))
                                    (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "42")) (ifInst ""  (formula "31")))
                                    (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "4"))
                                    (rule "elementOfUnion" (formula "38") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "eqSymm" (formula "38"))
                                    (rule "allLeft" (formula "18") (inst "t=i_1_1"))
                                    (rule "replace_known_left" (formula "18") (term "0,0,0") (ifseqformula "39"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "18") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "18"))
                                    (rule "inEqSimp_contradInEq0" (formula "18") (ifseqformula "1"))
                                    (rule "andLeft" (formula "18"))
                                    (rule "inEqSimp_homoInEq1" (formula "18"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                    (rule "polySimp_addComm0" (formula "18") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
                                    (rule "add_literals" (formula "18") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "18") (term "1,0"))
                                    (rule "add_zero_right" (formula "18") (term "0"))
                                    (rule "leq_literals" (formula "18"))
                                    (rule "closeFalse" (formula "18"))
                                 )
                                 (branch "Case 2"
                                    (rule "allRight" (formula "43") (inst "sk=i_1_0"))
                                    (rule "orRight" (formula "43"))
                                    (rule "notRight" (formula "44"))
                                    (rule "orRight" (formula "44"))
                                    (rule "inEqSimp_leqRight" (formula "44"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0"))
                                    (rule "inEqSimp_geqRight" (formula "45"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1"))
                                    (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_35"))
                                    (rule "simplifySelectOfStore" (formula "3"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "castDel" (formula "3") (term "1,0"))
                                    (rule "eqSymm" (formula "3") (term "1,0,0"))
                                    (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "4"))
                                    (rule "ifEqualsNull" (formula "3"))
                                    (rule "replace_known_right" (formula "3") (term "1,0") (ifseqformula "46"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "andLeft" (formula "3"))
                                    (rule "notLeft" (formula "3"))
                                    (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_36"))
                                    (rule "simplifySelectOfStore" (formula "3"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "castDel" (formula "3") (term "1,0"))
                                    (rule "eqSymm" (formula "3") (term "0,0"))
                                    (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                                    (rule "ifEqualsNull" (formula "3"))
                                    (rule "replace_known_right" (formula "3") (term "1,0") (ifseqformula "47"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "andLeft" (formula "3"))
                                    (rule "notLeft" (formula "3"))
                                    (rule "replace_known_right" (formula "39") (term "1") (ifseqformula "38"))
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "false_right" (formula "39"))
                                    (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "38"))
                                    (rule "inEqSimp_contradEq3" (formula "38") (ifseqformula "1"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0"))
                                    (rule "add_literals" (formula "38") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "38") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "38") (term "0,0"))
                                    (rule "qeq_literals" (formula "38") (term "0"))
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "false_right" (formula "38"))
                                    (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_37"))
                                    (rule "simplifySelectOfAnon" (formula "3"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "42")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "28"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,1,0,0") (ifseqformula "20"))
                                    (rule "replace_known_left" (formula "3") (term "1,0,0,1,0,0") (ifseqformula "21"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "43")))
                                    (rule "narrowSelectArrayType" (formula "3") (term "1,0") (ifseqformula "35") (ifseqformula "42"))
                                    (rule "applyEq" (formula "3") (term "1") (ifseqformula "4"))
                                    (rule "ifEqualsNull" (formula "3"))
                                    (rule "elementOfUnion" (formula "3") (term "0,0,1"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "andLeft" (formula "3"))
                                    (rule "elementOfUnion" (formula "3"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "true_left" (formula "3"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                    (rule "times_zero_1" (formula "2") (term "0,0"))
                                    (rule "add_zero_left" (formula "2") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "37") (ifseqformula "2"))
                                    (rule "leq_literals" (formula "37") (term "0"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "true_left" (formula "37"))
                                    (rule "allLeft" (formula "38") (inst "t=i_1_0"))
                                    (rule "inEqSimp_contradInEq1" (formula "38") (term "1,0") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "38") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "inEqSimp_contradInEq0" (formula "38") (term "1") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "38") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "38") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "38") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1"))
                                    (rule "add_literals" (formula "38") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "38") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "38") (term "0,0,1"))
                                    (rule "leq_literals" (formula "38") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=arr_38"))
                                    (rule "simplifySelectOfAnon" (formula "38"))
                                    (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "41")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "0,1,0,0") (ifseqformula "29"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "0,0,1,0,0") (ifseqformula "21"))
                                    (rule "eqSymm" (formula "39"))
                                    (rule "applyEqReverse" (formula "38") (term "1") (ifseqformula "39"))
                                    (rule "hideAuxiliaryEq" (formula "39"))
                                    (rule "replace_known_right" (formula "38") (term "0,0,0,1,0,0") (ifseqformula "41"))
                                    (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "42")) (ifInst ""  (formula "31")))
                                    (rule "elementOfUnion" (formula "38") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "allLeft" (formula "37") (inst "t=i_1_0"))
                                    (rule "inEqSimp_contradInEq1" (formula "37") (term "1,0") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "37") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "inEqSimp_contradInEq0" (formula "37") (term "1") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "37") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "37") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "37") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "37") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,1"))
                                    (rule "add_literals" (formula "37") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "37") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "37") (term "0,0,1"))
                                    (rule "leq_literals" (formula "37") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=arr_39"))
                                    (rule "simplifySelectOfAnon" (formula "37"))
                                    (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "45")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,1,0,0") (ifseqformula "29"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,0,1,0,0") (ifseqformula "21"))
                                    (rule "eqSymm" (formula "38"))
                                    (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "38"))
                                    (rule "hideAuxiliaryEq" (formula "38"))
                                    (rule "replace_known_right" (formula "37") (term "0,0,0,1,0,0") (ifseqformula "45"))
                                    (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "22")))
                                    (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "4"))
                                    (rule "elementOfUnion" (formula "37") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "eqSymm" (formula "37"))
                                    (rule "allLeft" (formula "34") (inst "t=i_1_0"))
                                    (rule "inEqSimp_contradInEq1" (formula "34") (term "1,0") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "34") (term "0,1,0"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "inEqSimp_contradInEq0" (formula "34") (term "1") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "34") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "34") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "34") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                    (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                    (rule "leq_literals" (formula "34") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "notLeft" (formula "34"))
                                    (rule "pullOutSelect" (formula "41") (term "0") (inst "selectSK=arr_40"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "22"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "17"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "22"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")) (ifInst ""  (formula "17")))
                                    (rule "applyEqReverse" (formula "42") (term "0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "narrowSelectArrayType" (formula "41") (term "0") (ifseqformula "9") (ifseqformula "47"))
                                    (rule "allLeft" (formula "19") (inst "t=i_1_0"))
                                    (rule "replace_known_left" (formula "19") (term "0,0,0") (ifseqformula "38"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "inEqSimp_contradInEq0" (formula "19") (term "1") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "19") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1"))
                                    (rule "add_literals" (formula "19") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "19") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "19") (term "0,0,1"))
                                    (rule "leq_literals" (formula "19") (term "0,1"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "inEqSimp_contradInEq1" (formula "19") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "19") (term "0"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "closeFalse" (formula "19"))
                                 )
                              )
                           )
                        )
                        (branch "Case 2"
                           (rule "allRight" (formula "43") (inst "sk=f_1"))
                           (rule "allRight" (formula "43") (inst "sk=o_1"))
                           (rule "orRight" (formula "43"))
                           (rule "orRight" (formula "43"))
                           (rule "orRight" (formula "43"))
                           (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=f_1_0"))
                           (rule "simplifySelectOfStore" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "eqSymm" (formula "47"))
                           (rule "eqSymm" (formula "1") (term "1,0,0"))
                           (rule "eqSymm" (formula "1") (term "0,0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "44"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfStore" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "eqSymm" (formula "1") (term "0,0,0"))
                           (rule "eqSymm" (formula "1") (term "1,0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "45"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "simplifySelectOfStore" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "eqSymm" (formula "1") (term "1,0,0"))
                           (rule "eqSymm" (formula "1") (term "0,0,0"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_1"))
                           (rule "simplifySelectOfStore" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "castDel" (formula "1") (term "1,0"))
                           (rule "eqSymm" (formula "1") (term "0,0,0"))
                           (rule "eqSymm" (formula "1") (term "1,0,0"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_2"))
                           (rule "simplifySelectOfAnon" (formula "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "25"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,1,0,0") (ifseqformula "17"))
                           (rule "elementOfUnion" (formula "1") (term "0,0,0,0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_3"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "26"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "18"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_1_4"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")))
                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "commute_and" (formula "48"))
                           (rule "commute_and" (formula "47"))
                           (rule "commute_and" (formula "4") (term "0,0"))
                           (rule "commute_and" (formula "3") (term "0,0"))
                           (rule "commute_and" (formula "2") (term "0,0,0"))
                           (rule "ifthenelse_split" (formula "1") (term "0"))
                           (branch " !o_1 = null & !( o_1.<created> = TRUE | o_1.<created>@anon_heap_newArray<<anonHeapFunction>> = TRUE) TRUE"
                              (rule "andLeft" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "orRight" (formula "37"))
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "replace_known_right" (formula "1") (term "0,0,0,1,1,0,0") (ifseqformula "36"))
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")) (ifInst ""  (formula "37")))
                              (rule "replace_known_right" (formula "51") (term "0,1") (ifseqformula "36"))
                              (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "38")))
                              (rule "closeTrue" (formula "51"))
                           )
                           (branch " !o_1 = null & !( o_1.<created> = TRUE | o_1.<created>@anon_heap_newArray<<anonHeapFunction>> = TRUE) FALSE"
                              (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                              (rule "hideAuxiliaryEq" (formula "1"))
                              (rule "ifthenelse_split" (formula "1") (term "0"))
                              (branch " !f_1 = java.lang.Object::<created> & (o_1 = result | o_1 = result_0) | !o_1 = null & !( o_1.<created> = TRUE | o_1.<created>@anon_heap_newArray<<anonHeapFunction>> = TRUE | o_1.<created>@anon_heap_newArray_0<<anonHeapFunction>> = TRUE) TRUE"
                                 (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                 (rule "hideAuxiliaryEq" (formula "2"))
                                 (rule "ifthenelse_split" (formula "2") (term "0"))
                                 (branch "f_1 = arr(i_0) & o_1 = result TRUE"
                                    (rule "andLeft" (formula "2"))
                                    (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "4"))
                                    (rule "replace_known_left" (formula "1") (term "0,1,0") (ifseqformula "3"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEq" (formula "1") (term "0,0,0,1") (ifseqformula "3"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,1") (ifseqformula "41"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                    (rule "eqSymm" (formula "4") (term "0,0"))
                                    (rule "applyEqRigid" (formula "51") (term "2,0") (ifseqformula "2"))
                                    (rule "applyEq" (formula "37") (term "0,0,0") (ifseqformula "3"))
                                    (rule "replace_known_right" (formula "37") (term "0,0") (ifseqformula "41"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "notRight" (formula "37"))
                                    (rule "replace_known_left" (formula "2") (term "0,0,1") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "notLeft" (formula "2"))
                                    (rule "applyEqRigid" (formula "48") (term "0,0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "48"))
                                    (rule "false_right" (formula "48"))
                                    (rule "applyEq" (formula "48") (term "0,1") (ifseqformula "3"))
                                    (rule "eqSymm" (formula "48") (term "1"))
                                    (rule "sortsDisjointModuloNull" (formula "48") (term "1"))
                                    (rule "replace_known_right" (formula "48") (term "1,1") (ifseqformula "41"))
                                    (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "45")))
                                    (rule "false_right" (formula "48"))
                                    (rule "applyEq" (formula "48") (term "0,0,0") (ifseqformula "3"))
                                    (rule "replace_known_right" (formula "48") (term "0,0") (ifseqformula "41"))
                                    (builtin "One Step Simplification" (formula "48"))
                                    (rule "notRight" (formula "48"))
                                    (rule "replace_known_left" (formula "2") (term "0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "2"))
                                    (rule "true_left" (formula "2"))
                                    (rule "applyEq" (formula "48") (term "1,0") (ifseqformula "3"))
                                    (rule "narrowSelectArrayType" (formula "48") (term "0") (ifseqformula "6") (ifseqformula "41"))
                                    (rule "eqSymm" (formula "48"))
                                    (rule "applyEqRigid" (formula "37") (term "0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "37"))
                                    (rule "false_right" (formula "37"))
                                    (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "3"))
                                    (rule "close" (formula "41") (ifseqformula "1"))
                                 )
                                 (branch "f_1 = arr(i_0) & o_1 = result FALSE"
                                    (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch "f_1 = arr(i_0) & o_1 = result_0 TRUE"
                                       (rule "andLeft" (formula "2"))
                                       (rule "applyEqReverse" (formula "52") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "replace_known_left" (formula "36") (term "0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "replace_known_right" (formula "1") (term "0,1,0") (ifseqformula "36"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "3")))
                                       (rule "applyEq" (formula "1") (term "0,0,0,1") (ifseqformula "3"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,1") (ifseqformula "38"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEq" (formula "49") (term "0,0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "49"))
                                       (rule "false_right" (formula "49"))
                                       (rule "applyEq" (formula "49") (term "1,0,0,1") (ifseqformula "3"))
                                       (rule "replace_known_right" (formula "49") (term "0,1") (ifseqformula "39"))
                                       (builtin "One Step Simplification" (formula "49"))
                                       (rule "notRight" (formula "49"))
                                       (rule "replace_known_left" (formula "38") (term "0,0") (ifseqformula "1"))
                                       (builtin "One Step Simplification" (formula "38"))
                                       (rule "false_right" (formula "38"))
                                       (rule "applyEq" (formula "49") (term "2,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "37") (term "0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "48") (term "0,1") (ifseqformula "4"))
                                       (rule "eqSymm" (formula "48") (term "1"))
                                       (rule "sortsDisjointModuloNull" (formula "48") (term "1"))
                                       (rule "replace_known_right" (formula "48") (term "1,1") (ifseqformula "38"))
                                       (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "45")))
                                       (rule "false_right" (formula "48"))
                                       (rule "applyEq" (formula "48") (term "1,0") (ifseqformula "4"))
                                       (rule "narrowSelectArrayType" (formula "48") (term "0") (ifseqformula "6") (ifseqformula "38"))
                                       (rule "applyEq" (formula "1") (term "0") (ifseqformula "4"))
                                       (rule "close" (formula "38") (ifseqformula "1"))
                                    )
                                    (branch "f_1 = arr(i_0) & o_1 = result_0 FALSE"
                                       (rule "applyEqReverse" (formula "51") (term "1") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "eqSymm" (formula "50"))
                                       (rule "cut_direct" (formula "49") (term "0,0"))
                                       (branch "CUT: o_1 = null TRUE"
                                          (builtin "One Step Simplification" (formula "50"))
                                          (rule "false_right" (formula "50"))
                                          (rule "replace_known_left" (formula "2") (term "0,0,1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "replace_known_left" (formula "38") (term "0,0") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "false_right" (formula "38"))
                                          (rule "applyEq" (formula "37") (term "0,1") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "37") (term "1"))
                                          (rule "replace_known_right" (formula "37") (term "1") (ifseqformula "41"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "false_right" (formula "37"))
                                          (rule "applyEqRigid" (formula "48") (term "0,1") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "48") (term "1"))
                                          (rule "replace_known_right" (formula "48") (term "1") (ifseqformula "44"))
                                          (builtin "One Step Simplification" (formula "48"))
                                          (rule "false_right" (formula "48"))
                                          (rule "applyEq" (formula "47") (term "0,1") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "47") (term "1"))
                                          (rule "replace_known_right" (formula "47") (term "1") (ifseqformula "44"))
                                          (builtin "One Step Simplification" (formula "47"))
                                          (rule "false_right" (formula "47"))
                                          (rule "applyEq" (formula "47") (term "1,0") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "36") (term "0,1") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "36") (term "1"))
                                          (rule "replace_known_right" (formula "36") (term "1") (ifseqformula "37"))
                                          (builtin "One Step Simplification" (formula "36"))
                                          (rule "false_right" (formula "36"))
                                          (rule "applyEq" (formula "2") (term "0,1") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "2") (term "1"))
                                          (rule "replace_known_right" (formula "2") (term "1") (ifseqformula "36"))
                                          (builtin "One Step Simplification" (formula "2"))
                                          (rule "applyEqRigid" (formula "46") (term "1,1") (ifseqformula "1"))
                                          (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "1"))
                                          (rule "eqSymm" (formula "2"))
                                          (rule "close" (formula "39") (ifseqformula "2"))
                                       )
                                       (branch "CUT: o_1 = null FALSE"
                                          (builtin "One Step Simplification" (formula "50"))
                                          (rule "notRight" (formula "50"))
                                          (rule "replace_known_right" (formula "2") (term "0,0,1") (ifseqformula "50"))
                                          (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "1")))
                                          (rule "andLeft" (formula "2"))
                                          (rule "notLeft" (formula "2"))
                                          (rule "replace_known_left" (formula "38") (term "0,0,1") (ifseqformula "1"))
                                          (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "51")))
                                          (rule "false_right" (formula "38"))
                                          (rule "cut_direct" (formula "49") (term "1"))
                                          (branch "CUT: o_1 = self TRUE"
                                             (builtin "One Step Simplification" (formula "50"))
                                             (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "1"))
                                             (builtin "One Step Simplification" (formula "49"))
                                             (rule "applyEq" (formula "52") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "52") (term "1,1") (ifseqformula "1"))
                                             (rule "applyEq" (formula "37") (term "0,1") (ifseqformula "1"))
                                             (rule "sortsDisjointModuloNull" (formula "37") (term "1"))
                                             (rule "replace_known_right" (formula "37") (term "1,1") (ifseqformula "39"))
                                             (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "46")))
                                             (rule "false_right" (formula "37"))
                                             (rule "applyEq" (formula "3") (term "0,1") (ifseqformula "1"))
                                             (rule "sortsDisjointModuloNull" (formula "3") (term "1"))
                                             (rule "replace_known_right" (formula "3") (term "0,1") (ifseqformula "45"))
                                             (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "38")))
                                             (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "3"))
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "49") (term "0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                             (rule "sortsDisjointModuloNull" (formula "2"))
                                             (rule "andLeft" (formula "2"))
                                             (rule "close" (formula "41") (ifseqformula "3"))
                                          )
                                          (branch "CUT: o_1 = self FALSE"
                                             (builtin "One Step Simplification" (formula "50"))
                                             (rule "false_right" (formula "50"))
                                             (rule "replace_known_right" (formula "48") (term "1") (ifseqformula "49"))
                                             (builtin "One Step Simplification" (formula "48"))
                                             (rule "false_right" (formula "48"))
                                             (rule "cut_direct" (formula "37") (term "1"))
                                             (branch "CUT: o_1 = result TRUE"
                                                (builtin "One Step Simplification" (formula "38"))
                                                (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "1"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "replace_known_right" (formula "36") (term "0") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "36"))
                                                (rule "false_right" (formula "36"))
                                                (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                                (rule "close" (formula "41") (ifseqformula "2"))
                                             )
                                             (branch "CUT: o_1 = result FALSE"
                                                (builtin "One Step Simplification" (formula "38"))
                                                (rule "false_right" (formula "38"))
                                                (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "37"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "2"))
                                                (builtin "One Step Simplification" (formula "36"))
                                                (rule "applyEq" (formula "50") (term "1,1") (ifseqformula "2"))
                                                (rule "applyEq" (formula "48") (term "0") (ifseqformula "2"))
                                                (rule "eqSymm" (formula "48"))
                                                (rule "sortsDisjointModuloNull" (formula "48"))
                                                (rule "replace_known_right" (formula "48") (term "1") (ifseqformula "38"))
                                                (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "45")))
                                                (rule "false_right" (formula "48"))
                                                (rule "applyEq" (formula "37") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "49") (term "1,0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "48") (term "0") (ifseqformula "2"))
                                                (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "2"))
                                                (rule "close" (formula "39") (ifseqformula "1"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch " !f_1 = java.lang.Object::<created> & (o_1 = result | o_1 = result_0) | !o_1 = null & !( o_1.<created> = TRUE | o_1.<created>@anon_heap_newArray<<anonHeapFunction>> = TRUE | o_1.<created>@anon_heap_newArray_0<<anonHeapFunction>> = TRUE) FALSE"
                                 (rule "orRight" (formula "36"))
                                 (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "ifthenelse_split" (formula "1") (term "0"))
                                 (branch "f_1 = arr(i_0) & o_1 = result TRUE"
                                    (rule "andLeft" (formula "1"))
                                    (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "replace_known_left" (formula "36") (term "0,1") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "36"))
                                    (rule "notRight" (formula "36"))
                                    (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "f_1 = arr(i_0) & o_1 = result FALSE"
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                    (branch "f_1 = arr(i_0) & o_1 = result_0 TRUE"
                                       (rule "andLeft" (formula "1"))
                                       (rule "applyEqReverse" (formula "53") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_left" (formula "36") (term "1,1") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "notRight" (formula "36"))
                                       (rule "replace_known_left" (formula "36") (term "0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "36"))
                                       (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "f_1 = arr(i_0) & o_1 = result_0 FALSE"
                                       (rule "close" (formula "52") (ifseqformula "1"))
                                    )
                                 )
                              )
                           )
                        )
                     )
                     (branch "Null Reference (newCipher = null)"
                        (builtin "One Step Simplification" (formula "50"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "Index Out of Bounds (newCipher != null, but i Out of Bounds!)"
                        (builtin "One Step Simplification" (formula "50"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                        (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                        (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "1") (term "0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1"))
                        (rule "polySimp_rightDist" (formula "3") (term "1"))
                        (rule "mul_literals" (formula "3") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "1,1"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "36"))
                        (rule "qeq_literals" (formula "1") (term "0,1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                        (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                        (rule "add_literals" (formula "3") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "3") (term "1,0,0"))
                        (rule "add_zero_right" (formula "3") (term "0,0"))
                        (rule "qeq_literals" (formula "3") (term "0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "1"))
                        (rule "times_zero_1" (formula "29") (term "0,0"))
                        (rule "add_zero_left" (formula "29") (term "0"))
                        (rule "throwUnfold" (formula "49") (term "1") (inst "#v0=a"))
                        (rule "variableDeclarationAssign" (formula "49") (term "1"))
                        (rule "variableDeclaration" (formula "49") (term "1") (newnames "a_4"))
                        (rule "instanceCreationAssignment" (formula "49") (term "1") (inst "#v0=a_5"))
                        (rule "variableDeclarationAssign" (formula "49") (term "1"))
                        (rule "variableDeclaration" (formula "49") (term "1") (newnames "a_5"))
                        (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "49") (term "1") (inst "#v0=a_6"))
                        (rule "variableDeclaration" (formula "49") (term "1") (newnames "a_6"))
                        (rule "methodBodyExpand" (formula "49") (term "1") (newnames "heapBefore_<createObject>_0,savedHeapBefore_<createObject>_0"))
                        (builtin "One Step Simplification" (formula "49"))
                        (rule "variableDeclaration" (formula "49") (term "1") (newnames "__NEW___1"))
                        (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "49") (term "1") (inst "#v0=a_7"))
                        (rule "variableDeclaration" (formula "49") (term "1") (newnames "a_7"))
                        (rule "allocateInstance" (formula "49"))
                        (builtin "One Step Simplification" (formula "50"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "dismissNonSelectedField" (formula "1") (term "0,0,1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1") (ifseqformula "28"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1") (ifseqformula "19"))
                        (rule "blockEmpty" (formula "52") (term "1"))
                        (rule "assignment" (formula "52") (term "1"))
                        (builtin "One Step Simplification" (formula "52"))
                        (rule "wellFormedStoreArray" (formula "1") (term "0"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "28"))
                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "19"))
                        (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "8"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "array_store_known_dynamic_array_type" (formula "1") (term "0") (ifseqformula "23"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")))
                        (rule "notLeft" (formula "1"))
                        (rule "orRight" (formula "40"))
                        (rule "orRight" (formula "40"))
                        (rule "orRight" (formula "40"))
                        (rule "methodBodyExpand" (formula "55") (term "1") (newnames "heapBefore_<create>_0,savedHeapBefore_<create>_0"))
                        (builtin "One Step Simplification" (formula "55"))
                        (rule "assignment_write_attribute_this" (formula "55") (term "1"))
                        (builtin "One Step Simplification" (formula "55"))
                        (rule "methodCallWithinClass" (formula "55") (term "1"))
                        (rule "methodBodyExpand" (formula "55") (term "1") (newnames "heapBefore_<prepareEnter>_0,savedHeapBefore_<prepareEnter>_0"))
                        (builtin "One Step Simplification" (formula "55"))
                        (rule "methodCallSuper" (formula "55") (term "1"))
                        (rule "methodBodyExpand" (formula "55") (term "1") (newnames "heapBefore_<prepare>_4,savedHeapBefore_<prepare>_4"))
                        (builtin "One Step Simplification" (formula "55"))
                        (rule "methodCallSuper" (formula "55") (term "1"))
                        (rule "methodBodyExpand" (formula "55") (term "1") (newnames "heapBefore_<prepare>_5,savedHeapBefore_<prepare>_5"))
                        (builtin "One Step Simplification" (formula "55"))
                        (rule "methodCallSuper" (formula "55") (term "1"))
                        (rule "methodBodyExpand" (formula "55") (term "1") (newnames "heapBefore_<prepare>_6,savedHeapBefore_<prepare>_6"))
                        (builtin "One Step Simplification" (formula "55"))
                        (rule "methodCallSuper" (formula "55") (term "1"))
                        (rule "methodBodyExpand" (formula "55") (term "1") (newnames "heapBefore_<prepare>_7,savedHeapBefore_<prepare>_7"))
                        (builtin "One Step Simplification" (formula "55"))
                        (rule "methodCallSuper" (formula "55") (term "1"))
                        (rule "methodBodyExpand" (formula "55") (term "1") (newnames "heapBefore_<prepare>_8,savedHeapBefore_<prepare>_8"))
                        (builtin "One Step Simplification" (formula "55"))
                        (rule "methodCallEmpty" (formula "55") (term "1"))
                        (rule "blockEmpty" (formula "55") (term "1"))
                        (rule "assignment_write_attribute_this" (formula "55") (term "1"))
                        (builtin "One Step Simplification" (formula "55"))
                        (rule "castDel" (formula "55") (term "1,0,1,0"))
                        (rule "assignment_write_attribute_this" (formula "55") (term "1"))
                        (builtin "One Step Simplification" (formula "55"))
                        (rule "castDel" (formula "55") (term "1,0,1,0"))
                        (rule "methodCallEmpty" (formula "55") (term "1"))
                        (rule "methodCallEmpty" (formula "55") (term "1"))
                        (rule "methodCallEmpty" (formula "55") (term "1"))
                        (rule "methodCallEmpty" (formula "55") (term "1"))
                        (rule "methodCallEmpty" (formula "55") (term "1"))
                        (rule "blockEmpty" (formula "55") (term "1"))
                        (rule "methodCallReturnIgnoreResult" (formula "55") (term "1"))
                        (rule "methodCallReturn" (formula "55") (term "1"))
                        (rule "assignment" (formula "55") (term "1"))
                        (builtin "One Step Simplification" (formula "55"))
                        (rule "methodCallEmpty" (formula "55") (term "1"))
                        (rule "blockEmpty" (formula "55") (term "1"))
                        (rule "assignment" (formula "55") (term "1"))
                        (builtin "One Step Simplification" (formula "55"))
                        (rule "methodBodyExpand" (formula "55") (term "1") (newnames "heapBefore_<init>_5,savedHeapBefore_<init>_5"))
                        (builtin "One Step Simplification" (formula "55"))
                        (rule "methodCallSuper" (formula "55") (term "1"))
                        (rule "methodBodyExpand" (formula "55") (term "1") (newnames "heapBefore_<init>_6,savedHeapBefore_<init>_6"))
                        (builtin "One Step Simplification" (formula "55"))
                        (rule "methodCallSuper" (formula "55") (term "1"))
                        (rule "methodBodyExpand" (formula "55") (term "1") (newnames "heapBefore_<init>_7,savedHeapBefore_<init>_7"))
                        (builtin "One Step Simplification" (formula "55"))
                        (rule "methodCallSuper" (formula "55") (term "1"))
                        (rule "methodBodyExpand" (formula "55") (term "1") (newnames "heapBefore_<init>_8,savedHeapBefore_<init>_8"))
                        (builtin "One Step Simplification" (formula "55"))
                        (rule "methodCallSuper" (formula "55") (term "1"))
                        (rule "methodBodyExpand" (formula "55") (term "1") (newnames "heapBefore_<init>_9,savedHeapBefore_<init>_9"))
                        (builtin "One Step Simplification" (formula "55"))
                        (rule "methodCallSuper" (formula "55") (term "1"))
                        (rule "methodBodyExpand" (formula "55") (term "1") (newnames "heapBefore_<init>_10,savedHeapBefore_<init>_10"))
                        (builtin "One Step Simplification" (formula "55"))
                        (rule "methodCallEmpty" (formula "55") (term "1"))
                        (rule "blockEmpty" (formula "55") (term "1"))
                        (rule "assignment_write_attribute_this" (formula "55") (term "1"))
                        (builtin "One Step Simplification" (formula "55"))
                        (rule "castDel" (formula "55") (term "1,0,1,0"))
                        (builtin "One Step Simplification" (formula "55"))
                        (rule "assignment_write_attribute_this" (formula "55") (term "1"))
                        (builtin "One Step Simplification" (formula "55"))
                        (rule "castDel" (formula "55") (term "1,0,1,0"))
                        (builtin "One Step Simplification" (formula "55"))
                        (rule "methodCallEmpty" (formula "55") (term "1"))
                        (rule "methodCallEmpty" (formula "55") (term "1"))
                        (rule "methodCallEmpty" (formula "55") (term "1"))
                        (rule "methodCallEmpty" (formula "55") (term "1"))
                        (rule "methodCallEmpty" (formula "55") (term "1"))
                        (rule "blockEmpty" (formula "55") (term "1"))
                        (rule "assignment_write_attribute" (formula "55") (term "1"))
                        (branch "Normal Execution (a_5 != null)"
                           (builtin "One Step Simplification" (formula "56"))
                           (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "44")))
                           (rule "false_right" (formula "55"))
                           (rule "assignment" (formula "55") (term "1"))
                           (builtin "One Step Simplification" (formula "55"))
                           (rule "methodCallThrow" (formula "55") (term "1"))
                           (builtin "One Step Simplification" (formula "55"))
                           (rule "tryCatchThrow" (formula "55") (term "1"))
                           (rule "ifElseUnfold" (formula "55") (term "1") (inst "#boolv=x"))
                           (rule "variableDeclaration" (formula "55") (term "1") (newnames "x_5"))
                           (rule "equality_comparison_simple" (formula "55") (term "1"))
                           (builtin "One Step Simplification" (formula "55"))
                           (rule "replace_known_right" (formula "55") (term "0,0,1,0") (ifseqformula "44"))
                           (builtin "One Step Simplification" (formula "55"))
                           (rule "ifElseSplit" (formula "55"))
                           (branch "if x_5 true"
                              (builtin "One Step Simplification" (formula "56"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "if x_5 false"
                              (builtin "One Step Simplification" (formula "56"))
                              (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "ifElseSplit" (formula "55"))
                              (branch "if a_4 instanceof java.lang.Throwable true"
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                                 (rule "true_left" (formula "1"))
                                 (rule "variableDeclaration" (formula "55") (term "1") (newnames "e_1"))
                                 (rule "reference_type_cast" (formula "55") (term "1"))
                                 (branch "Normal Execution (a_4 instanceof java.lang.Throwable)"
                                    (builtin "One Step Simplification" (formula "56"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "assignment" (formula "55") (term "1"))
                                    (builtin "One Step Simplification" (formula "55"))
                                    (rule "emptyModality" (formula "55") (term "1"))
                                    (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "44")))
                                    (rule "false_right" (formula "55"))
                                    (rule "applyEq" (formula "11") (term "0") (ifseqformula "21"))
                                    (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "31"))
                                    (rule "applyEq" (formula "37") (term "0") (ifseqformula "31"))
                                    (rule "inEqSimp_homoInEq1" (formula "37"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,0"))
                                    (rule "mul_literals" (formula "37") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "37") (term "0"))
                                    (rule "polySimp_addComm0" (formula "37") (term "0,0"))
                                    (rule "applyEq" (formula "14") (term "0") (ifseqformula "21"))
                                    (rule "eqSymm" (formula "14"))
                                    (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "31"))
                                    (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "31"))
                                    (rule "applyEq" (formula "10") (term "0") (ifseqformula "31"))
                                    (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "31"))
                                    (rule "applyEq" (formula "31") (term "0") (ifseqformula "14"))
                                    (rule "polySimp_homoEq" (formula "31"))
                                    (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                    (rule "mul_literals" (formula "31") (term "0,1,0"))
                                    (rule "polySimp_addComm1" (formula "31") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                    (rule "add_literals" (formula "31") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "31") (term "0,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "31"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "1"))
                                    (rule "polySimp_elimOne" (formula "31") (term "1"))
                                    (rule "applyEq" (formula "24") (term "1,1,1,0") (ifseqformula "31"))
                                    (rule "applyEq" (formula "30") (term "0") (ifseqformula "31"))
                                    (rule "applyEq" (formula "36") (term "0,1,0") (ifseqformula "30"))
                                    (rule "applyEq" (formula "33") (term "1,1,1,0") (ifseqformula "30"))
                                    (rule "applyEq" (formula "15") (term "1,1,1,0") (ifseqformula "30"))
                                    (rule "applyEq" (formula "32") (term "1,1,1,0") (ifseqformula "30"))
                                    (rule "applyEq" (formula "23") (term "1,1,1,0") (ifseqformula "30"))
                                    (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "30"))
                                    (rule "applyEq" (formula "15") (term "1,1,1,0") (ifseqformula "29"))
                                    (rule "applyEq" (formula "2") (term "0") (ifseqformula "29"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                    (rule "mul_literals" (formula "10") (term "1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "35"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                    (rule "polySimp_elimOne" (formula "35") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "10"))
                                    (rule "leq_literals" (formula "19") (term "0"))
                                    (builtin "One Step Simplification" (formula "19"))
                                    (rule "true_left" (formula "19"))
                                    (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "2"))
                                    (rule "andLeft" (formula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "3"))
                                    (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0"))
                                    (rule "add_zero_right" (formula "3") (term "0"))
                                    (rule "leq_literals" (formula "3"))
                                    (rule "closeFalse" (formula "3"))
                                 )
                                 (branch "ClassCastException (!(a_4 instanceof java.lang.Throwable))"
                                    (builtin "One Step Simplification" (formula "56"))
                                    (builtin "One Step Simplification" (formula "55"))
                                    (rule "closeTrue" (formula "55"))
                                 )
                              )
                              (branch "if a_4 instanceof java.lang.Throwable false"
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                        )
                        (branch "Null Reference (a_5 = null)"
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                     (branch "Array Store Exception (incompatible dynamic element type of newCipher and _cipher)"
                        (builtin "One Step Simplification" (formula "50"))
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")) (ifInst ""  (formula "36")))
                        (rule "andLeft" (formula "1"))
                        (rule "notLeft" (formula "2"))
                        (rule "array_store_known_dynamic_array_type" (formula "40") (ifseqformula "32"))
                        (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "50")))
                        (rule "closeTrue" (formula "40"))
                     )
                  )
                  (branch "Null Reference (newPlain = null)"
                     (builtin "One Step Simplification" (formula "49"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "Index Out of Bounds (newPlain != null, but i Out of Bounds!)"
                     (builtin "One Step Simplification" (formula "49"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                     (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "1") (term "0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1"))
                     (rule "polySimp_rightDist" (formula "2") (term "1"))
                     (rule "mul_literals" (formula "2") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "1,1"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "35"))
                     (rule "qeq_literals" (formula "1") (term "0,1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "19") (term "0,0"))
                     (rule "add_zero_left" (formula "19") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "2"))
                     (rule "times_zero_1" (formula "29") (term "0,0"))
                     (rule "add_zero_left" (formula "29") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                     (rule "mul_literals" (formula "29") (term "1"))
                     (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "36"))
                     (rule "leq_literals" (formula "29") (term "0"))
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "true_left" (formula "29"))
                     (rule "throwUnfold" (formula "49") (term "1") (inst "#v0=a"))
                     (rule "variableDeclarationAssign" (formula "49") (term "1"))
                     (rule "variableDeclaration" (formula "49") (term "1") (newnames "a"))
                     (rule "instanceCreationAssignment" (formula "49") (term "1") (inst "#v0=a_1"))
                     (rule "variableDeclarationAssign" (formula "49") (term "1"))
                     (rule "variableDeclaration" (formula "49") (term "1") (newnames "a_1"))
                     (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "49") (term "1") (inst "#v0=a_2"))
                     (rule "variableDeclaration" (formula "49") (term "1") (newnames "a_2"))
                     (rule "methodBodyExpand" (formula "49") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
                     (builtin "One Step Simplification" (formula "49"))
                     (rule "variableDeclaration" (formula "49") (term "1") (newnames "__NEW__"))
                     (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "49") (term "1") (inst "#v0=a_3"))
                     (rule "variableDeclaration" (formula "49") (term "1") (newnames "a_3"))
                     (rule "allocateInstance" (formula "49"))
                     (builtin "One Step Simplification" (formula "50"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "wellFormedAnon" (formula "1") (term "0,1,0"))
                     (rule "wellFormedAnonEQ" (formula "1") (term "0,0,1,0") (ifseqformula "27"))
                     (rule "wellFormedAnonEQ" (formula "1") (term "0,0,0,1,0") (ifseqformula "18"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,1,0") (ifseqformula "27"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,1,1,0") (ifseqformula "18"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "27"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "5")) (ifInst ""  (formula "18")) (ifInst ""  (formula "36")))
                     (rule "notLeft" (formula "1"))
                     (rule "orRight" (formula "40"))
                     (rule "orRight" (formula "40"))
                     (rule "orRight" (formula "40"))
                     (rule "blockEmpty" (formula "55") (term "1"))
                     (rule "assignment" (formula "55") (term "1"))
                     (builtin "One Step Simplification" (formula "55"))
                     (rule "methodBodyExpand" (formula "55") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
                     (builtin "One Step Simplification" (formula "55"))
                     (rule "assignment_write_attribute_this" (formula "55") (term "1"))
                     (builtin "One Step Simplification" (formula "55"))
                     (rule "methodCallWithinClass" (formula "55") (term "1"))
                     (rule "methodBodyExpand" (formula "55") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
                     (builtin "One Step Simplification" (formula "55"))
                     (rule "methodCallSuper" (formula "55") (term "1"))
                     (rule "methodBodyExpand" (formula "55") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
                     (builtin "One Step Simplification" (formula "55"))
                     (rule "methodCallSuper" (formula "55") (term "1"))
                     (rule "methodBodyExpand" (formula "55") (term "1") (newnames "heapBefore_<prepare>_0,savedHeapBefore_<prepare>_0"))
                     (builtin "One Step Simplification" (formula "55"))
                     (rule "methodCallSuper" (formula "55") (term "1"))
                     (rule "methodBodyExpand" (formula "55") (term "1") (newnames "heapBefore_<prepare>_1,savedHeapBefore_<prepare>_1"))
                     (builtin "One Step Simplification" (formula "55"))
                     (rule "methodCallSuper" (formula "55") (term "1"))
                     (rule "methodBodyExpand" (formula "55") (term "1") (newnames "heapBefore_<prepare>_2,savedHeapBefore_<prepare>_2"))
                     (builtin "One Step Simplification" (formula "55"))
                     (rule "methodCallSuper" (formula "55") (term "1"))
                     (rule "methodBodyExpand" (formula "55") (term "1") (newnames "heapBefore_<prepare>_3,savedHeapBefore_<prepare>_3"))
                     (builtin "One Step Simplification" (formula "55"))
                     (rule "methodCallEmpty" (formula "55") (term "1"))
                     (rule "blockEmpty" (formula "55") (term "1"))
                     (rule "assignment_write_attribute_this" (formula "55") (term "1"))
                     (builtin "One Step Simplification" (formula "55"))
                     (rule "castDel" (formula "55") (term "1,0,1,0"))
                     (rule "assignment_write_attribute_this" (formula "55") (term "1"))
                     (builtin "One Step Simplification" (formula "55"))
                     (rule "castDel" (formula "55") (term "1,0,1,0"))
                     (rule "methodCallEmpty" (formula "55") (term "1"))
                     (rule "methodCallEmpty" (formula "55") (term "1"))
                     (rule "methodCallEmpty" (formula "55") (term "1"))
                     (rule "methodCallEmpty" (formula "55") (term "1"))
                     (rule "methodCallEmpty" (formula "55") (term "1"))
                     (rule "blockEmpty" (formula "55") (term "1"))
                     (rule "methodCallReturnIgnoreResult" (formula "55") (term "1"))
                     (rule "methodCallReturn" (formula "55") (term "1"))
                     (rule "assignment" (formula "55") (term "1"))
                     (builtin "One Step Simplification" (formula "55"))
                     (rule "methodCallEmpty" (formula "55") (term "1"))
                     (rule "blockEmpty" (formula "55") (term "1"))
                     (rule "assignment" (formula "55") (term "1"))
                     (builtin "One Step Simplification" (formula "55"))
                     (rule "methodBodyExpand" (formula "55") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
                     (builtin "One Step Simplification" (formula "55"))
                     (rule "methodCallSuper" (formula "55") (term "1"))
                     (rule "methodBodyExpand" (formula "55") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
                     (builtin "One Step Simplification" (formula "55"))
                     (rule "methodCallSuper" (formula "55") (term "1"))
                     (rule "methodBodyExpand" (formula "55") (term "1") (newnames "heapBefore_<init>_1,savedHeapBefore_<init>_1"))
                     (builtin "One Step Simplification" (formula "55"))
                     (rule "methodCallSuper" (formula "55") (term "1"))
                     (rule "methodBodyExpand" (formula "55") (term "1") (newnames "heapBefore_<init>_2,savedHeapBefore_<init>_2"))
                     (builtin "One Step Simplification" (formula "55"))
                     (rule "methodCallSuper" (formula "55") (term "1"))
                     (rule "methodBodyExpand" (formula "55") (term "1") (newnames "heapBefore_<init>_3,savedHeapBefore_<init>_3"))
                     (builtin "One Step Simplification" (formula "55"))
                     (rule "methodCallSuper" (formula "55") (term "1"))
                     (rule "methodBodyExpand" (formula "55") (term "1") (newnames "heapBefore_<init>_4,savedHeapBefore_<init>_4"))
                     (builtin "One Step Simplification" (formula "55"))
                     (rule "methodCallEmpty" (formula "55") (term "1"))
                     (rule "blockEmpty" (formula "55") (term "1"))
                     (rule "assignment_write_attribute_this" (formula "55") (term "1"))
                     (builtin "One Step Simplification" (formula "55"))
                     (rule "castDel" (formula "55") (term "1,0,1,0"))
                     (builtin "One Step Simplification" (formula "55"))
                     (rule "assignment_write_attribute_this" (formula "55") (term "1"))
                     (builtin "One Step Simplification" (formula "55"))
                     (rule "castDel" (formula "55") (term "1,0,1,0"))
                     (builtin "One Step Simplification" (formula "55"))
                     (rule "methodCallEmpty" (formula "55") (term "1"))
                     (rule "methodCallEmpty" (formula "55") (term "1"))
                     (rule "methodCallEmpty" (formula "55") (term "1"))
                     (rule "methodCallEmpty" (formula "55") (term "1"))
                     (rule "methodCallEmpty" (formula "55") (term "1"))
                     (rule "blockEmpty" (formula "55") (term "1"))
                     (rule "assignment_write_attribute" (formula "55") (term "1"))
                     (branch "Normal Execution (a_1 != null)"
                        (builtin "One Step Simplification" (formula "56"))
                        (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "44")))
                        (rule "false_right" (formula "55"))
                        (rule "assignment" (formula "55") (term "1"))
                        (builtin "One Step Simplification" (formula "55"))
                        (rule "methodCallThrow" (formula "55") (term "1"))
                        (builtin "One Step Simplification" (formula "55"))
                        (rule "tryCatchThrow" (formula "55") (term "1"))
                        (rule "ifElseUnfold" (formula "55") (term "1") (inst "#boolv=x"))
                        (rule "variableDeclaration" (formula "55") (term "1") (newnames "x_4"))
                        (rule "equality_comparison_simple" (formula "55") (term "1"))
                        (builtin "One Step Simplification" (formula "55"))
                        (rule "replace_known_right" (formula "55") (term "0,0,1,0") (ifseqformula "44"))
                        (builtin "One Step Simplification" (formula "55"))
                        (rule "ifElseSplit" (formula "55"))
                        (branch "if x_4 true"
                           (builtin "One Step Simplification" (formula "56"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "if x_4 false"
                           (builtin "One Step Simplification" (formula "56"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "ifElseSplit" (formula "55"))
                           (branch "if a instanceof java.lang.Throwable true"
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                              (rule "true_left" (formula "1"))
                              (rule "variableDeclaration" (formula "55") (term "1") (newnames "e"))
                              (rule "reference_type_cast" (formula "55") (term "1"))
                              (branch "Normal Execution (a instanceof java.lang.Throwable)"
                                 (builtin "One Step Simplification" (formula "56"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "assignment" (formula "55") (term "1"))
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "emptyModality" (formula "55") (term "1"))
                                 (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "44")))
                                 (rule "false_right" (formula "55"))
                                 (rule "applyEq" (formula "11") (term "0") (ifseqformula "21"))
                                 (rule "applyEq" (formula "24") (term "1,1,0") (ifseqformula "31"))
                                 (rule "applyEq" (formula "14") (term "0") (ifseqformula "21"))
                                 (rule "eqSymm" (formula "14"))
                                 (rule "applyEq" (formula "37") (term "0") (ifseqformula "31"))
                                 (rule "inEqSimp_homoInEq1" (formula "37"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,0"))
                                 (rule "mul_literals" (formula "37") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "37") (term "0"))
                                 (rule "polySimp_addComm0" (formula "37") (term "0,0"))
                                 (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "31"))
                                 (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "31"))
                                 (rule "applyEq" (formula "10") (term "0") (ifseqformula "31"))
                                 (rule "applyEq" (formula "16") (term "1,1,0") (ifseqformula "31"))
                                 (rule "applyEq" (formula "31") (term "0") (ifseqformula "14"))
                                 (rule "polySimp_homoEq" (formula "31"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                 (rule "mul_literals" (formula "31") (term "0,1,0"))
                                 (rule "polySimp_addComm1" (formula "31") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                 (rule "add_literals" (formula "31") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "31") (term "0,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "31"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1"))
                                 (rule "polySimp_elimOne" (formula "31") (term "1"))
                                 (rule "applyEq" (formula "30") (term "0") (ifseqformula "31"))
                                 (rule "applyEq" (formula "33") (term "1,1,1,0") (ifseqformula "30"))
                                 (rule "applyEq" (formula "32") (term "1,1,1,0") (ifseqformula "30"))
                                 (rule "applyEq" (formula "3") (term "0") (ifseqformula "30"))
                                 (rule "applyEq" (formula "24") (term "1,1,1,0") (ifseqformula "30"))
                                 (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "30"))
                                 (rule "applyEq" (formula "15") (term "1,1,1,0") (ifseqformula "29"))
                                 (rule "applyEq" (formula "22") (term "1,1,1,0") (ifseqformula "29"))
                                 (rule "applyEq" (formula "14") (term "1,1,1,0") (ifseqformula "29"))
                                 (rule "applyEq" (formula "35") (term "0,1,0") (ifseqformula "29"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                 (rule "mul_literals" (formula "10") (term "1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "35"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                 (rule "polySimp_elimOne" (formula "35") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "3") (term "0,0"))
                                 (rule "qeq_literals" (formula "3") (term "0"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "inEqSimp_contradInEq0" (formula "34") (ifseqformula "2"))
                                 (rule "andLeft" (formula "34"))
                                 (rule "inEqSimp_homoInEq1" (formula "34"))
                                 (rule "polySimp_pullOutFactor1b" (formula "34") (term "0"))
                                 (rule "add_literals" (formula "34") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "34") (term "1,0"))
                                 (rule "add_zero_right" (formula "34") (term "0"))
                                 (rule "leq_literals" (formula "34"))
                                 (rule "closeFalse" (formula "34"))
                              )
                              (branch "ClassCastException (!(a instanceof java.lang.Throwable))"
                                 (builtin "One Step Simplification" (formula "56"))
                                 (builtin "One Step Simplification" (formula "55"))
                                 (rule "closeTrue" (formula "55"))
                              )
                           )
                           (branch "if a instanceof java.lang.Throwable false"
                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                     )
                     (branch "Null Reference (a_1 = null)"
                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "Array Store Exception (incompatible dynamic element type of newPlain and _plain)"
                     (builtin "One Step Simplification" (formula "49"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")) (ifInst ""  (formula "35")))
                     (rule "andLeft" (formula "1"))
                     (rule "notLeft" (formula "2"))
                     (rule "array_store_known_dynamic_array_type" (formula "39") (ifseqformula "21"))
                     (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "48")))
                     (rule "closeTrue" (formula "39"))
                  )
               )
               (branch "Null Reference (x_arr_arr_2 = null)"
                  (builtin "One Step Simplification" (formula "49"))
                  (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqRigid" (formula "2") (term "1") (ifseqformula "1"))
                  (rule "ifEqualsNull" (formula "2"))
                  (rule "replace_known_right" (formula "2") (term "1,1") (ifseqformula "44"))
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "andLeft" (formula "2"))
                  (rule "elementOfUnion" (formula "2"))
                  (builtin "One Step Simplification" (formula "2"))
                  (rule "sortsDisjointModuloNull" (formula "2") (term "0"))
                  (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "47"))
                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "43")))
                  (rule "sortsDisjointModuloNull" (formula "2"))
                  (rule "andLeft" (formula "2"))
                  (rule "close" (formula "41") (ifseqformula "3"))
               )
            )
         )
         (branch "Exceptional Post (newArray)"
            (builtin "One Step Simplification" (formula "23"))
            (builtin "One Step Simplification" (formula "31"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "0,0,0,1,1,0,1,1") (ifseqformula "15"))
            (rule "andLeft" (formula "23"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "1,0") (ifseqformula "23"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,1,0") (ifseqformula "15"))
            (rule "andLeft" (formula "24"))
            (rule "andLeft" (formula "25"))
            (rule "andLeft" (formula "24"))
            (rule "andLeft" (formula "26"))
            (rule "notLeft" (formula "24"))
            (rule "close" (formula "28") (ifseqformula "27"))
         )
         (branch "Pre (newArray)"
            (builtin "One Step Simplification" (formula "29"))
            (rule "wellFormedAnonEQ" (formula "29") (term "1") (ifseqformula "15"))
            (rule "replace_known_left" (formula "29") (term "0,1") (ifseqformula "1"))
            (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "14")))
            (rule "applyEq" (formula "17") (term "0") (ifseqformula "11"))
            (rule "applyEq" (formula "8") (term "0") (ifseqformula "11"))
            (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "16"))
            (rule "applyEq" (formula "7") (term "0") (ifseqformula "16"))
            (rule "applyEq" (formula "11") (term "1,1,0") (ifseqformula "16"))
            (rule "applyEq" (formula "12") (term "1,1,0") (ifseqformula "16"))
            (rule "applyEq" (formula "28") (term "1,0,0") (ifseqformula "16"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
            (rule "add_literals" (formula "28") (term "0,0,0"))
            (rule "add_zero_left" (formula "28") (term "0,0"))
            (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "16"))
            (rule "applyEq" (formula "10") (term "1") (ifseqformula "16"))
            (rule "inEqSimp_sepPosMonomial1" (formula "7"))
            (rule "mul_literals" (formula "7") (term "1"))
            (rule "inEqSimp_subsumption1" (formula "28") (term "0") (ifseqformula "7"))
            (rule "leq_literals" (formula "28") (term "0,0"))
            (builtin "One Step Simplification" (formula "28"))
            (rule "Class_invariant_axiom_for_verif_functionalities_pkienc_Decryptor_EncryptionLog" (formula "28") (ifseqformula "3"))
            (rule "replaceKnownSelect_taclet00_0" (formula "28") (term "1,0"))
            (rule "replaceKnownSelect_taclet00_2" (formula "28") (term "1,1"))
            (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "28") (term "1,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet00_3" (formula "28") (term "1,1"))
            (rule "nonNull" (formula "28") (term "0") (inst "i=i_1"))
            (rule "sub_literals" (formula "28") (term "2,1,0,1,1,0"))
            (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "23")))
            (rule "greater_literals" (formula "28") (term "0,0"))
            (builtin "One Step Simplification" (formula "28"))
            (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0,0"))
            (rule "applyEq" (formula "28") (term "0,1,0,0,1,0,0,0") (ifseqformula "16"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,0"))
            (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,0"))
            (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0"))
            (rule "nonNull" (formula "28") (term "1") (inst "i=i_1"))
            (rule "greater_literals" (formula "28") (term "0,1,1"))
            (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "24")))
            (rule "sub_literals" (formula "28") (term "2,1,0,1"))
            (builtin "One Step Simplification" (formula "28"))
            (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0,1"))
            (rule "applyEq" (formula "28") (term "0,1,0,0,1,0,0,1") (ifseqformula "10"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,1"))
            (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,1"))
            (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,1"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,1"))
            (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,1"))
            (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,1"))
            (rule "mul_literals" (formula "28") (term "0,1,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,1"))
            (rule "nnf_imp2or" (formula "28") (term "0,0"))
            (rule "nnf_imp2or" (formula "28") (term "0,1"))
            (rule "nnf_notAnd" (formula "28") (term "0,0,0"))
            (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,0"))
            (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,0"))
            (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0,0"))
            (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0,0"))
            (rule "add_zero_right" (formula "28") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,0"))
            (rule "mul_literals" (formula "28") (term "1,0,0,0,0"))
            (rule "nnf_notAnd" (formula "28") (term "0,0,1"))
            (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0,1"))
            (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0,1"))
            (rule "add_zero_right" (formula "28") (term "0,0,0,0,0,1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,1"))
            (rule "mul_literals" (formula "28") (term "1,0,0,0,1"))
            (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0,1"))
            (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,1"))
            (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,1"))
            (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,1"))
            (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,1"))
            (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,1"))
            (rule "mul_literals" (formula "28") (term "0,1,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,1"))
            (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,1"))
            (rule "andRight" (formula "28"))
            (branch "Case 1"
               (rule "allRight" (formula "28") (inst "sk=i_1_3"))
               (rule "orRight" (formula "28"))
               (rule "notRight" (formula "29"))
               (rule "orRight" (formula "29"))
               (rule "inEqSimp_leqRight" (formula "29"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_geqRight" (formula "30"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_61"))
               (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "18"))
               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "27")) (ifInst ""  (formula "13")))
               (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
               (rule "hideAuxiliaryEq" (formula "3"))
               (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "4") (ifseqformula "26"))
               (rule "allLeft" (formula "14") (inst "t=i_1_3"))
               (rule "replace_known_left" (formula "14") (term "0,0,0") (ifseqformula "3"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "inEqSimp_homoInEq1" (formula "14") (term "1"))
               (rule "polySimp_addComm1" (formula "14") (term "0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,1"))
               (rule "polySimp_rightDist" (formula "14") (term "1,1"))
               (rule "mul_literals" (formula "14") (term "0,1,1"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1"))
               (rule "polySimp_elimOne" (formula "14") (term "1,1,1"))
               (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "2"))
               (rule "qeq_literals" (formula "14") (term "0,0"))
               (builtin "One Step Simplification" (formula "14"))
               (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "14"))
               (rule "andLeft" (formula "1"))
               (rule "inEqSimp_homoInEq1" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "1,1,0"))
               (rule "times_zero_1" (formula "1") (term "1,0"))
               (rule "add_zero_right" (formula "1") (term "0"))
               (rule "leq_literals" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "Case 2"
               (rule "allRight" (formula "28") (inst "sk=i_1_2"))
               (rule "orRight" (formula "28"))
               (rule "notRight" (formula "29"))
               (rule "orRight" (formula "29"))
               (rule "inEqSimp_leqRight" (formula "29"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_geqRight" (formula "30"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_60"))
               (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "18"))
               (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "28")) (ifInst ""  (formula "12")))
               (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
               (rule "hideAuxiliaryEq" (formula "3"))
               (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "4") (ifseqformula "27"))
               (rule "allLeft" (formula "15") (inst "t=i_1_2"))
               (rule "replace_known_left" (formula "15") (term "0,0,0") (ifseqformula "3"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "inEqSimp_homoInEq1" (formula "15") (term "1"))
               (rule "polySimp_addComm1" (formula "15") (term "0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,1"))
               (rule "polySimp_rightDist" (formula "15") (term "1,1"))
               (rule "mul_literals" (formula "15") (term "0,1,1"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1"))
               (rule "polySimp_elimOne" (formula "15") (term "1,1,1"))
               (rule "inEqSimp_contradInEq1" (formula "15") (term "0") (ifseqformula "2"))
               (rule "qeq_literals" (formula "15") (term "0,0"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "15"))
               (rule "andLeft" (formula "1"))
               (rule "inEqSimp_homoInEq1" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "1,1,0"))
               (rule "times_zero_1" (formula "1") (term "1,0"))
               (rule "add_zero_right" (formula "1") (term "0"))
               (rule "leq_literals" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
      (branch "Null Reference (x_arr_arr_1 = null)"
         (builtin "One Step Simplification" (formula "28"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "Exceptional Post (newArray)"
      (builtin "One Step Simplification" (formula "13"))
      (builtin "One Step Simplification" (formula "19"))
      (rule "andLeft" (formula "13"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "1,0") (ifseqformula "13"))
      (rule "andLeft" (formula "14"))
      (rule "andLeft" (formula "14"))
      (rule "andLeft" (formula "16"))
      (rule "notLeft" (formula "14"))
      (rule "close" (formula "17") (ifseqformula "16"))
   )
   (branch "Pre (newArray)"
      (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "1")))
      (rule "applyEq" (formula "17") (term "1,0,0") (ifseqformula "9"))
      (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
      (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "0"))
      (rule "mul_literals" (formula "16") (term "1,0"))
      (rule "inEqSimp_subsumption1" (formula "16") (term "0") (ifseqformula "7"))
      (rule "leq_literals" (formula "16") (term "0,0"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "Class_invariant_axiom_for_verif_functionalities_pkienc_Decryptor_EncryptionLog" (formula "16") (ifseqformula "3"))
      (rule "nonNull" (formula "16") (term "0") (inst "i=i_1"))
      (rule "greater_literals" (formula "16") (term "0,1,0"))
      (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "11")))
      (rule "sub_literals" (formula "16") (term "2,1,0,0"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "narrowSelectArrayType" (formula "16") (term "0,0,1,0,0") (ifseqformula "1") (ifseqformula "11"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,0"))
      (rule "mul_literals" (formula "16") (term "0,1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,0"))
      (rule "nonNull" (formula "16") (term "1") (inst "i=i_1"))
      (rule "greater_literals" (formula "16") (term "0,1,1"))
      (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "12")))
      (rule "sub_literals" (formula "16") (term "2,1,0,1"))
      (builtin "One Step Simplification" (formula "16"))
      (rule "narrowSelectArrayType" (formula "16") (term "0,0,1,0,1") (ifseqformula "1") (ifseqformula "12"))
      (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,1"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1"))
      (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,1"))
      (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0,1") (ifseqformula "8"))
      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,1"))
      (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,1"))
      (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,1"))
      (rule "mul_literals" (formula "16") (term "0,1,1,0,0,1"))
      (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,1"))
      (rule "nnf_imp2or" (formula "16") (term "0,0"))
      (rule "nnf_imp2or" (formula "16") (term "0,1"))
      (rule "nnf_notAnd" (formula "16") (term "0,0,0"))
      (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0,0"))
      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,0"))
      (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,0"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,0"))
      (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,0"))
      (rule "add_zero_left" (formula "16") (term "0,0,1,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
      (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0,0"))
      (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0,0"))
      (rule "add_zero_right" (formula "16") (term "0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,0"))
      (rule "mul_literals" (formula "16") (term "1,0,0,0,0"))
      (rule "nnf_notAnd" (formula "16") (term "0,0,1"))
      (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0,1"))
      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,1,0,0,1"))
      (rule "mul_literals" (formula "16") (term "0,1,0,0,1,0,0,1"))
      (rule "polySimp_addAssoc" (formula "16") (term "0,0,1,0,0,1"))
      (rule "add_literals" (formula "16") (term "0,0,0,1,0,0,1"))
      (rule "add_zero_left" (formula "16") (term "0,0,1,0,0,1"))
      (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,1"))
      (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,1"))
      (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0,1"))
      (rule "times_zero_1" (formula "16") (term "1,0,0,0,0,0,1"))
      (rule "add_zero_right" (formula "16") (term "0,0,0,0,0,1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,1"))
      (rule "mul_literals" (formula "16") (term "1,0,0,0,1"))
      (rule "andRight" (formula "16"))
      (branch "Case 1"
         (rule "allRight" (formula "16") (inst "sk=i_1_5"))
         (rule "orRight" (formula "16"))
         (rule "orRight" (formula "16"))
         (rule "notRight" (formula "18"))
         (rule "inEqSimp_geqRight" (formula "18"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "inEqSimp_leqRight" (formula "18"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "add_zero_left" (formula "1") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
         (rule "polySimp_elimOne" (formula "2") (term "0"))
         (rule "allLeft" (formula "12") (inst "t=i_1_5"))
         (rule "replace_known_left" (formula "12") (term "0,0,0") (ifseqformula "3"))
         (builtin "One Step Simplification" (formula "12"))
         (rule "inEqSimp_commuteGeq" (formula "12") (term "1"))
         (rule "inEqSimp_contradInEq1" (formula "12") (term "0") (ifseqformula "1"))
         (rule "qeq_literals" (formula "12") (term "0,0"))
         (builtin "One Step Simplification" (formula "12"))
         (rule "inEqSimp_contradInEq1" (formula "12") (ifseqformula "2"))
         (rule "andLeft" (formula "12"))
         (rule "inEqSimp_homoInEq1" (formula "12"))
         (rule "polySimp_pullOutFactor1b" (formula "12") (term "0"))
         (rule "add_literals" (formula "12") (term "1,1,0"))
         (rule "times_zero_1" (formula "12") (term "1,0"))
         (rule "add_zero_right" (formula "12") (term "0"))
         (rule "leq_literals" (formula "12"))
         (rule "closeFalse" (formula "12"))
      )
      (branch "Case 2"
         (rule "allRight" (formula "16") (inst "sk=i_1_4"))
         (rule "orRight" (formula "16"))
         (rule "orRight" (formula "16"))
         (rule "notRight" (formula "18"))
         (rule "inEqSimp_geqRight" (formula "18"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "inEqSimp_leqRight" (formula "18"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "add_zero_left" (formula "1") (term "0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
         (rule "polySimp_elimOne" (formula "2") (term "0"))
         (rule "allLeft" (formula "13") (inst "t=i_1_4"))
         (rule "replace_known_left" (formula "13") (term "0,0,0") (ifseqformula "3"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
         (rule "inEqSimp_contradInEq1" (formula "13") (term "1") (ifseqformula "2"))
         (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
         (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
         (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
         (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
         (rule "add_zero_right" (formula "13") (term "0,0,1"))
         (rule "leq_literals" (formula "13") (term "0,1"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "inEqSimp_contradInEq1" (formula "13") (ifseqformula "1"))
         (rule "qeq_literals" (formula "13") (term "0"))
         (builtin "One Step Simplification" (formula "13"))
         (rule "closeFalse" (formula "13"))
      )
   )
)
(branch "Null Reference (x_arr_arr = null)"
   (builtin "One Step Simplification" (formula "18"))
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
   (rule "closeFalse" (formula "1"))
)
)

}
