\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Fri Aug 05 17:54:42 CEST 2016
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=80000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Fri Aug 05 17:54:42 CEST 2016
name=verif.utils.MessageTools[verif.utils.MessageTools\\:\\:byteArrayToInt([B)].JML normal_behavior operation contract.1
contract=verif.utils.MessageTools[verif.utils.MessageTools\\:\\:byteArrayToInt([B)].JML normal_behavior operation contract.1
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mihai" ) (keyVersion "6bc7ade97061383f11985e24decf735b7f2f0af2"))

(autoModeTime "576")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "b,result,exc,heapAtPre,o,f"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "5"))
(rule "eqSymm" (formula "6") (term "0,0,0,1"))
(rule "eqSymm" (formula "6") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "5"))
(builtin "One Step Simplification" (formula "2"))
(rule "assignment" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_byteArrayToInt,savedHeapBefore_byteArrayToInt"))
(builtin "One Step Simplification" (formula "6"))
(rule "variableDeclarationAssign" (formula "6") (term "1"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "result_1"))
(rule "assignment" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "compound_assignment_op_plus" (formula "6") (term "1"))
(rule "compound_int_cast_expression" (formula "6") (term "1") (inst "#v=x"))
(rule "variableDeclarationAssign" (formula "6") (term "1"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "x"))
(rule "remove_parentheses_right" (formula "6") (term "1"))
(rule "compound_addition_2" (formula "6") (term "1") (inst "#v1=x_2") (inst "#v0=x_1"))
(rule "variableDeclarationAssign" (formula "6") (term "1"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "x_1"))
(rule "assignment" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "variableDeclarationAssign" (formula "6") (term "1"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "x_2"))
(rule "remove_parentheses_right" (formula "6") (term "1"))
(rule "compound_multiplication_2" (formula "6") (term "1") (inst "#v1=x_4") (inst "#v0=x_3"))
(rule "variableDeclarationAssign" (formula "6") (term "1"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "x_3"))
(rule "compound_multiplication_1" (formula "6") (term "1") (inst "#v=x_5"))
(rule "variableDeclarationAssign" (formula "6") (term "1"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "x_5"))
(rule "assignmentMultiplicationInt" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "translateJavaMulInt" (formula "6") (term "0,1,0"))
(rule "mul_literals" (formula "6") (term "0,1,0"))
(rule "assignmentMultiplicationInt" (formula "6") (term "1"))
(builtin "One Step Simplification" (formula "6"))
(rule "translateJavaMulInt" (formula "6") (term "0,1,0"))
(rule "mul_literals" (formula "6") (term "0,1,0"))
(rule "variableDeclarationAssign" (formula "6") (term "1"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "x_4"))
(rule "methodCallWithAssignmentUnfoldArguments" (formula "6") (term "1"))
(rule "variableDeclarationAssign" (formula "6") (term "1"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "var"))
(rule "assignment_array2" (formula "6") (term "1"))
(branch "Normal Execution (_b != null)"
   (builtin "One Step Simplification" (formula "7"))
   (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "5")))
   (rule "less_literals" (formula "6") (term "1"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "inEqSimp_leqRight" (formula "6"))
   (rule "times_zero_1" (formula "1") (term "1,0,0"))
   (rule "add_zero_right" (formula "1") (term "0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
   (rule "mul_literals" (formula "1") (term "1"))
   (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "5"))
   (rule "leq_literals" (formula "1") (term "0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "true_left" (formula "1"))
   (builtin "Use Operation Contract" (formula "6") (newnames "heapBefore_unsign,result_0,exc_0") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
   (branch "Post (unsign)"
      (builtin "One Step Simplification" (formula "7"))
      (builtin "One Step Simplification" (formula "5"))
      (rule "translateJavaAddInt" (formula "5") (term "1,1,0,1"))
      (rule "andLeft" (formula "5"))
      (rule "andLeft" (formula "6"))
      (rule "eqSymm" (formula "6"))
      (rule "polySimp_addComm0" (formula "6") (term "1,0"))
      (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0"))
      (rule "times_zero_1" (formula "6") (term "1,0,0,0,0"))
      (rule "add_zero_right" (formula "6") (term "0,0,0,0"))
      (rule "assignment" (formula "8") (term "1"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "blockEmpty" (formula "8") (term "1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0"))
      (rule "mul_literals" (formula "6") (term "1,0,0"))
      (rule "assignmentMultiplicationInt" (formula "8") (term "1"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "translateJavaMulInt" (formula "8") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "8") (term "0,1,0"))
      (rule "assignmentAdditionInt" (formula "8") (term "1"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "translateJavaAddInt" (formula "8") (term "0,1,0"))
      (rule "add_zero_left" (formula "8") (term "0,1,0"))
      (rule "widening_identity_cast_5" (formula "8") (term "1"))
      (rule "assignment" (formula "8") (term "1"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "compound_assignment_op_plus" (formula "8") (term "1"))
      (rule "compound_int_cast_expression" (formula "8") (term "1") (inst "#v=x"))
      (rule "variableDeclarationAssign" (formula "8") (term "1"))
      (rule "variableDeclaration" (formula "8") (term "1") (newnames "x_6"))
      (rule "remove_parentheses_right" (formula "8") (term "1"))
      (rule "compound_addition_2" (formula "8") (term "1") (inst "#v1=x_8") (inst "#v0=x_7"))
      (rule "variableDeclarationAssign" (formula "8") (term "1"))
      (rule "variableDeclaration" (formula "8") (term "1") (newnames "x_7"))
      (rule "assignment" (formula "8") (term "1"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "variableDeclarationAssign" (formula "8") (term "1"))
      (rule "variableDeclaration" (formula "8") (term "1") (newnames "x_8"))
      (rule "remove_parentheses_right" (formula "8") (term "1"))
      (rule "compound_multiplication_2" (formula "8") (term "1") (inst "#v1=x_10") (inst "#v0=x_9"))
      (rule "variableDeclarationAssign" (formula "8") (term "1"))
      (rule "variableDeclaration" (formula "8") (term "1") (newnames "x_9"))
      (rule "assignmentMultiplicationInt" (formula "8") (term "1"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "translateJavaMulInt" (formula "8") (term "0,1,0"))
      (rule "mul_literals" (formula "8") (term "0,1,0"))
      (rule "variableDeclarationAssign" (formula "8") (term "1"))
      (rule "variableDeclaration" (formula "8") (term "1") (newnames "x_10"))
      (rule "arrayLengthIsAShort" (formula "4") (term "0"))
      (builtin "One Step Simplification" (formula "4"))
      (rule "true_left" (formula "4"))
      (rule "arrayLengthNotNegative" (formula "4") (term "0"))
      (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "5"))
      (rule "leq_literals" (formula "4") (term "0"))
      (builtin "One Step Simplification" (formula "4"))
      (rule "true_left" (formula "4"))
      (rule "methodCallWithAssignmentUnfoldArguments" (formula "8") (term "1"))
      (rule "variableDeclarationAssign" (formula "8") (term "1"))
      (rule "variableDeclaration" (formula "8") (term "1") (newnames "var_1"))
      (rule "assignment_array2" (formula "8") (term "1"))
      (branch "Normal Execution (_b != null)"
         (builtin "One Step Simplification" (formula "9"))
         (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "7")))
         (rule "less_literals" (formula "8") (term "1"))
         (builtin "One Step Simplification" (formula "8"))
         (rule "inEqSimp_leqRight" (formula "8"))
         (rule "mul_literals" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
         (rule "mul_literals" (formula "1") (term "1"))
         (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "5"))
         (rule "leq_literals" (formula "1") (term "0"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (builtin "Use Operation Contract" (formula "8") (newnames "heapBefore_unsign_0,result_2,exc_1") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
         (branch "Post (unsign)"
            (builtin "One Step Simplification" (formula "7"))
            (builtin "One Step Simplification" (formula "9"))
            (rule "translateJavaAddInt" (formula "7") (term "1,1,0,1"))
            (rule "andLeft" (formula "7"))
            (rule "andLeft" (formula "8"))
            (rule "eqSymm" (formula "8"))
            (rule "polySimp_addComm0" (formula "8") (term "1,0"))
            (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0"))
            (rule "times_zero_1" (formula "8") (term "1,0,0,0,0"))
            (rule "add_zero_right" (formula "8") (term "0,0,0,0"))
            (rule "assignment" (formula "10") (term "1"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "blockEmpty" (formula "10") (term "1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0"))
            (rule "mul_literals" (formula "8") (term "1,0,0"))
            (rule "assignmentMultiplicationInt" (formula "10") (term "1"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "translateJavaMulInt" (formula "10") (term "0,1,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "0,1,0"))
            (rule "assignmentAdditionInt" (formula "10") (term "1"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "translateJavaAddInt" (formula "10") (term "0,1,0"))
            (rule "widening_identity_cast_5" (formula "10") (term "1"))
            (rule "assignment" (formula "10") (term "1"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "compound_assignment_op_plus" (formula "10") (term "1"))
            (rule "compound_int_cast_expression" (formula "10") (term "1") (inst "#v=x"))
            (rule "variableDeclarationAssign" (formula "10") (term "1"))
            (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_11"))
            (rule "remove_parentheses_right" (formula "10") (term "1"))
            (rule "compound_addition_2" (formula "10") (term "1") (inst "#v1=x_13") (inst "#v0=x_12"))
            (rule "variableDeclarationAssign" (formula "10") (term "1"))
            (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_12"))
            (rule "assignment" (formula "10") (term "1"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "variableDeclarationAssign" (formula "10") (term "1"))
            (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_13"))
            (rule "remove_parentheses_right" (formula "10") (term "1"))
            (rule "compound_multiplication_2" (formula "10") (term "1") (inst "#v1=x_15") (inst "#v0=x_14"))
            (rule "variableDeclarationAssign" (formula "10") (term "1"))
            (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_14"))
            (rule "assignment" (formula "10") (term "1"))
            (builtin "One Step Simplification" (formula "10"))
            (rule "variableDeclarationAssign" (formula "10") (term "1"))
            (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_15"))
            (rule "methodCallWithAssignmentUnfoldArguments" (formula "10") (term "1"))
            (rule "variableDeclarationAssign" (formula "10") (term "1"))
            (rule "variableDeclaration" (formula "10") (term "1") (newnames "var_2"))
            (rule "assignment_array2" (formula "10") (term "1"))
            (branch "Normal Execution (_b != null)"
               (builtin "One Step Simplification" (formula "11"))
               (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "9")))
               (rule "less_literals" (formula "10") (term "1"))
               (builtin "One Step Simplification" (formula "10"))
               (rule "inEqSimp_leqRight" (formula "10"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "5"))
               (rule "leq_literals" (formula "1") (term "0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (builtin "Use Operation Contract" (formula "10") (newnames "heapBefore_unsign_1,result_3,exc_2") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
               (branch "Post (unsign)"
                  (builtin "One Step Simplification" (formula "9"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "translateJavaAddInt" (formula "9") (term "1,1,0,1"))
                  (rule "andLeft" (formula "9"))
                  (rule "andLeft" (formula "10"))
                  (rule "eqSymm" (formula "10"))
                  (rule "polySimp_addComm0" (formula "10") (term "1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0"))
                  (rule "times_zero_1" (formula "10") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "10") (term "0,0,0,0"))
                  (rule "assignment" (formula "12") (term "1"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "blockEmpty" (formula "12") (term "1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0"))
                  (rule "mul_literals" (formula "10") (term "1,0,0"))
                  (rule "assignmentMultiplicationInt" (formula "12") (term "1"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "translateJavaMulInt" (formula "12") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "0,1,0"))
                  (rule "assignmentAdditionInt" (formula "12") (term "1"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "translateJavaAddInt" (formula "12") (term "0,1,0"))
                  (rule "widening_identity_cast_5" (formula "12") (term "1"))
                  (rule "assignment" (formula "12") (term "1"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "compound_assignment_op_plus" (formula "12") (term "1"))
                  (rule "compound_int_cast_expression" (formula "12") (term "1") (inst "#v=x"))
                  (rule "variableDeclarationAssign" (formula "12") (term "1"))
                  (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_16"))
                  (rule "remove_parentheses_right" (formula "12") (term "1"))
                  (rule "compound_addition_2" (formula "12") (term "1") (inst "#v1=x_18") (inst "#v0=x_17"))
                  (rule "variableDeclarationAssign" (formula "12") (term "1"))
                  (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_17"))
                  (rule "assignment" (formula "12") (term "1"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "variableDeclarationAssign" (formula "12") (term "1"))
                  (rule "variableDeclaration" (formula "12") (term "1") (newnames "x_18"))
                  (rule "remove_parentheses_right" (formula "12") (term "1"))
                  (rule "methodCallWithAssignmentUnfoldArguments" (formula "12") (term "1"))
                  (rule "variableDeclarationAssign" (formula "12") (term "1"))
                  (rule "variableDeclaration" (formula "12") (term "1") (newnames "var_3"))
                  (rule "assignment_array2" (formula "12") (term "1"))
                  (branch "Normal Execution (_b != null)"
                     (builtin "One Step Simplification" (formula "13"))
                     (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "11")))
                     (rule "less_literals" (formula "12") (term "1"))
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "inEqSimp_leqRight" (formula "12"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (builtin "Use Operation Contract" (formula "12") (newnames "heapBefore_unsign_2,result_4,exc_3") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
                     (branch "Post (unsign)"
                        (builtin "One Step Simplification" (formula "13"))
                        (builtin "One Step Simplification" (formula "11"))
                        (rule "translateJavaAddInt" (formula "11") (term "1,1,0,1"))
                        (rule "andLeft" (formula "11"))
                        (rule "andLeft" (formula "12"))
                        (rule "eqSymm" (formula "12"))
                        (rule "polySimp_addComm0" (formula "12") (term "1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0"))
                        (rule "times_zero_1" (formula "12") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "12") (term "0,0,0,0"))
                        (rule "assignment" (formula "14") (term "1"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "blockEmpty" (formula "14") (term "1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0"))
                        (rule "mul_literals" (formula "12") (term "1,0,0"))
                        (rule "assignmentAdditionInt" (formula "14") (term "1"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "translateJavaAddInt" (formula "14") (term "0,1,0"))
                        (rule "widening_identity_cast_5" (formula "14") (term "1"))
                        (rule "assignment" (formula "14") (term "1"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "methodCallReturn" (formula "14") (term "1"))
                        (rule "assignment" (formula "14") (term "1"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "methodCallEmpty" (formula "14") (term "1"))
                        (rule "tryEmpty" (formula "14") (term "1"))
                        (rule "emptyModality" (formula "14") (term "1"))
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "Query_axiom_for_byteArrayToInt_[B__in_verif_utils_MessageTools" (formula "14") (term "0") (inst "byteArrayToInt_sk=byteArrayToInt_sk_0") (inst "#p0=x_arr") (inst "#res=x"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "eqSymm" (formula "1") (term "0,1"))
                        (rule "polySimp_homoEq" (formula "15"))
                        (rule "polySimp_addComm1" (formula "15") (term "0"))
                        (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "15") (term "0,0,0"))
                        (rule "polySimp_addComm0" (formula "15") (term "0,0,0,0"))
                        (rule "polySimp_sepPosMonomial" (formula "15"))
                        (rule "polySimp_mulComm0" (formula "15") (term "1"))
                        (rule "polySimp_rightDist" (formula "15") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                        (rule "polySimp_rightDist" (formula "15") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1"))
                        (rule "polySimp_rightDist" (formula "15") (term "0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,1"))
                        (rule "polySimp_mulAssoc" (formula "15") (term "0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "15") (term "0,0,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,1"))
                        (rule "polySimp_elimOne" (formula "15") (term "0,0,0,1"))
                        (rule "boxToDiamond" (formula "1") (term "1"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "notLeft" (formula "1"))
                        (rule "methodBodyExpand" (formula "13") (term "1") (newnames "heapBefore_byteArrayToInt_0,savedHeapBefore_byteArrayToInt_0"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "variableDeclarationAssign" (formula "13") (term "1"))
                        (rule "variableDeclaration" (formula "13") (term "1") (newnames "result_5"))
                        (rule "assignment" (formula "13") (term "1"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "compound_assignment_op_plus" (formula "13") (term "1"))
                        (rule "compound_int_cast_expression" (formula "13") (term "1") (inst "#v=x_1"))
                        (rule "variableDeclarationAssign" (formula "13") (term "1"))
                        (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_19"))
                        (rule "remove_parentheses_right" (formula "13") (term "1"))
                        (rule "compound_addition_2" (formula "13") (term "1") (inst "#v1=x_21") (inst "#v0=x_20"))
                        (rule "variableDeclarationAssign" (formula "13") (term "1"))
                        (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_20"))
                        (rule "assignment" (formula "13") (term "1"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "variableDeclarationAssign" (formula "13") (term "1"))
                        (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_21"))
                        (rule "remove_parentheses_right" (formula "13") (term "1"))
                        (rule "compound_multiplication_2" (formula "13") (term "1") (inst "#v1=x_23") (inst "#v0=x_22"))
                        (rule "variableDeclarationAssign" (formula "13") (term "1"))
                        (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_22"))
                        (rule "compound_multiplication_1" (formula "13") (term "1") (inst "#v=x_24"))
                        (rule "variableDeclarationAssign" (formula "13") (term "1"))
                        (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_24"))
                        (rule "assignmentMultiplicationInt" (formula "13") (term "1"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "translateJavaMulInt" (formula "13") (term "0,1,0"))
                        (rule "mul_literals" (formula "13") (term "0,1,0"))
                        (rule "assignmentMultiplicationInt" (formula "13") (term "1"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "translateJavaMulInt" (formula "13") (term "0,1,0"))
                        (rule "mul_literals" (formula "13") (term "0,1,0"))
                        (rule "variableDeclarationAssign" (formula "13") (term "1"))
                        (rule "variableDeclaration" (formula "13") (term "1") (newnames "x_23"))
                        (rule "methodCallWithAssignmentUnfoldArguments" (formula "13") (term "1"))
                        (rule "variableDeclarationAssign" (formula "13") (term "1"))
                        (rule "variableDeclaration" (formula "13") (term "1") (newnames "var_4"))
                        (rule "assignment_array2" (formula "13") (term "1"))
                        (branch "Normal Execution (x_arr != null)"
                           (builtin "One Step Simplification" (formula "14"))
                           (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "15")))
                           (rule "less_literals" (formula "13") (term "1"))
                           (builtin "One Step Simplification" (formula "13"))
                           (rule "inEqSimp_leqRight" (formula "13"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "5"))
                           (rule "leq_literals" (formula "1") (term "0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (builtin "Use Operation Contract" (formula "13") (newnames "heapBefore_unsign_3,result_6,exc_4") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
                           (branch "Post (unsign)"
                              (builtin "One Step Simplification" (formula "13"))
                              (builtin "One Step Simplification" (formula "14"))
                              (rule "translateJavaAddInt" (formula "13") (term "1,1,0,1"))
                              (rule "andLeft" (formula "13"))
                              (rule "andLeft" (formula "14"))
                              (rule "eqSymm" (formula "14"))
                              (rule "polySimp_addComm0" (formula "14") (term "1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0"))
                              (rule "times_zero_1" (formula "14") (term "1,0,0,0,0"))
                              (rule "add_literals" (formula "14") (term "0,0,0,0"))
                              (rule "assignment" (formula "15") (term "1"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "blockEmpty" (formula "15") (term "1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0"))
                              (rule "mul_literals" (formula "14") (term "1,0,0"))
                              (rule "applyEq" (formula "6") (term "0") (ifseqformula "14"))
                              (rule "applyEq" (formula "15") (term "0,1,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "14") (term "1") (ifseqformula "6"))
                              (rule "assignmentMultiplicationInt" (formula "15") (term "1"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "translateJavaMulInt" (formula "15") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "0,1,0"))
                              (rule "assignmentAdditionInt" (formula "15") (term "1"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "translateJavaAddInt" (formula "15") (term "0,1,0"))
                              (rule "add_zero_left" (formula "15") (term "0,1,0"))
                              (rule "widening_identity_cast_5" (formula "15") (term "1"))
                              (rule "assignment" (formula "15") (term "1"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "compound_assignment_op_plus" (formula "15") (term "1"))
                              (rule "compound_int_cast_expression" (formula "15") (term "1") (inst "#v=x_1"))
                              (rule "variableDeclarationAssign" (formula "15") (term "1"))
                              (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_25"))
                              (rule "remove_parentheses_right" (formula "15") (term "1"))
                              (rule "compound_addition_2" (formula "15") (term "1") (inst "#v1=x_27") (inst "#v0=x_26"))
                              (rule "variableDeclarationAssign" (formula "15") (term "1"))
                              (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_26"))
                              (rule "assignment" (formula "15") (term "1"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "variableDeclarationAssign" (formula "15") (term "1"))
                              (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_27"))
                              (rule "remove_parentheses_right" (formula "15") (term "1"))
                              (rule "compound_multiplication_2" (formula "15") (term "1") (inst "#v1=x_29") (inst "#v0=x_28"))
                              (rule "variableDeclarationAssign" (formula "15") (term "1"))
                              (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_28"))
                              (rule "assignmentMultiplicationInt" (formula "15") (term "1"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "translateJavaMulInt" (formula "15") (term "0,1,0"))
                              (rule "mul_literals" (formula "15") (term "0,1,0"))
                              (rule "variableDeclarationAssign" (formula "15") (term "1"))
                              (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_29"))
                              (rule "methodCallWithAssignmentUnfoldArguments" (formula "15") (term "1"))
                              (rule "variableDeclarationAssign" (formula "15") (term "1"))
                              (rule "variableDeclaration" (formula "15") (term "1") (newnames "var_5"))
                              (rule "assignment_array2" (formula "15") (term "1"))
                              (branch "Normal Execution (x_arr != null)"
                                 (builtin "One Step Simplification" (formula "16"))
                                 (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "17")))
                                 (rule "less_literals" (formula "15") (term "1"))
                                 (builtin "One Step Simplification" (formula "15"))
                                 (rule "inEqSimp_leqRight" (formula "15"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "5"))
                                 (rule "leq_literals" (formula "1") (term "0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (builtin "Use Operation Contract" (formula "15") (newnames "heapBefore_unsign_4,result_7,exc_5") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
                                 (branch "Post (unsign)"
                                    (builtin "One Step Simplification" (formula "15"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "translateJavaAddInt" (formula "15") (term "1,1,0,1"))
                                    (rule "andLeft" (formula "15"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "eqSymm" (formula "16"))
                                    (rule "polySimp_addComm0" (formula "16") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0"))
                                    (rule "times_zero_1" (formula "16") (term "1,0,0,0,0"))
                                    (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                    (rule "assignment" (formula "17") (term "1"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "blockEmpty" (formula "17") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0"))
                                    (rule "mul_literals" (formula "16") (term "1,0,0"))
                                    (rule "applyEq" (formula "16") (term "0") (ifseqformula "8"))
                                    (rule "eqSymm" (formula "16"))
                                    (rule "applyEq" (formula "17") (term "0,1,0") (ifseqformula "16"))
                                    (rule "assignmentMultiplicationInt" (formula "17") (term "1"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "translateJavaMulInt" (formula "17") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "0,1,0"))
                                    (rule "assignmentAdditionInt" (formula "17") (term "1"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "translateJavaAddInt" (formula "17") (term "0,1,0"))
                                    (rule "widening_identity_cast_5" (formula "17") (term "1"))
                                    (rule "assignment" (formula "17") (term "1"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "compound_assignment_op_plus" (formula "17") (term "1"))
                                    (rule "compound_int_cast_expression" (formula "17") (term "1") (inst "#v=x_1"))
                                    (rule "variableDeclarationAssign" (formula "17") (term "1"))
                                    (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_30"))
                                    (rule "remove_parentheses_right" (formula "17") (term "1"))
                                    (rule "compound_addition_2" (formula "17") (term "1") (inst "#v1=x_32") (inst "#v0=x_31"))
                                    (rule "variableDeclarationAssign" (formula "17") (term "1"))
                                    (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_31"))
                                    (rule "assignment" (formula "17") (term "1"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "variableDeclarationAssign" (formula "17") (term "1"))
                                    (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_32"))
                                    (rule "remove_parentheses_right" (formula "17") (term "1"))
                                    (rule "compound_multiplication_2" (formula "17") (term "1") (inst "#v1=x_34") (inst "#v0=x_33"))
                                    (rule "variableDeclarationAssign" (formula "17") (term "1"))
                                    (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_33"))
                                    (rule "assignment" (formula "17") (term "1"))
                                    (builtin "One Step Simplification" (formula "17"))
                                    (rule "variableDeclarationAssign" (formula "17") (term "1"))
                                    (rule "variableDeclaration" (formula "17") (term "1") (newnames "x_34"))
                                    (rule "methodCallWithAssignmentUnfoldArguments" (formula "17") (term "1"))
                                    (rule "variableDeclarationAssign" (formula "17") (term "1"))
                                    (rule "variableDeclaration" (formula "17") (term "1") (newnames "var_6"))
                                    (rule "assignment_array2" (formula "17") (term "1"))
                                    (branch "Normal Execution (x_arr != null)"
                                       (builtin "One Step Simplification" (formula "18"))
                                       (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "19")))
                                       (rule "less_literals" (formula "17") (term "1"))
                                       (builtin "One Step Simplification" (formula "17"))
                                       (rule "inEqSimp_leqRight" (formula "17"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "5"))
                                       (rule "leq_literals" (formula "1") (term "0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (builtin "Use Operation Contract" (formula "17") (newnames "heapBefore_unsign_5,result_8,exc_6") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
                                       (branch "Post (unsign)"
                                          (builtin "One Step Simplification" (formula "18"))
                                          (builtin "One Step Simplification" (formula "17"))
                                          (rule "translateJavaAddInt" (formula "17") (term "1,1,0,1"))
                                          (rule "andLeft" (formula "17"))
                                          (rule "andLeft" (formula "18"))
                                          (rule "eqSymm" (formula "18"))
                                          (rule "polySimp_addComm0" (formula "18") (term "1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0"))
                                          (rule "times_zero_1" (formula "18") (term "1,0,0,0,0"))
                                          (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                          (rule "assignment" (formula "19") (term "1"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "blockEmpty" (formula "19") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0"))
                                          (rule "mul_literals" (formula "18") (term "1,0,0"))
                                          (rule "applyEq" (formula "18") (term "0") (ifseqformula "10"))
                                          (rule "eqSymm" (formula "18"))
                                          (rule "applyEq" (formula "19") (term "0,1,0") (ifseqformula "18"))
                                          (rule "assignmentMultiplicationInt" (formula "19") (term "1"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "translateJavaMulInt" (formula "19") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "0,1,0"))
                                          (rule "assignmentAdditionInt" (formula "19") (term "1"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "translateJavaAddInt" (formula "19") (term "0,1,0"))
                                          (rule "widening_identity_cast_5" (formula "19") (term "1"))
                                          (rule "assignment" (formula "19") (term "1"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "compound_assignment_op_plus" (formula "19") (term "1"))
                                          (rule "compound_int_cast_expression" (formula "19") (term "1") (inst "#v=x_1"))
                                          (rule "variableDeclarationAssign" (formula "19") (term "1"))
                                          (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_35"))
                                          (rule "remove_parentheses_right" (formula "19") (term "1"))
                                          (rule "compound_addition_2" (formula "19") (term "1") (inst "#v1=x_37") (inst "#v0=x_36"))
                                          (rule "variableDeclarationAssign" (formula "19") (term "1"))
                                          (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_36"))
                                          (rule "assignment" (formula "19") (term "1"))
                                          (builtin "One Step Simplification" (formula "19"))
                                          (rule "variableDeclarationAssign" (formula "19") (term "1"))
                                          (rule "variableDeclaration" (formula "19") (term "1") (newnames "x_37"))
                                          (rule "remove_parentheses_right" (formula "19") (term "1"))
                                          (rule "methodCallWithAssignmentUnfoldArguments" (formula "19") (term "1"))
                                          (rule "variableDeclarationAssign" (formula "19") (term "1"))
                                          (rule "variableDeclaration" (formula "19") (term "1") (newnames "var_7"))
                                          (rule "assignment_array2" (formula "19") (term "1"))
                                          (branch "Normal Execution (x_arr != null)"
                                             (builtin "One Step Simplification" (formula "20"))
                                             (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "21")))
                                             (rule "less_literals" (formula "19") (term "1"))
                                             (builtin "One Step Simplification" (formula "19"))
                                             (rule "inEqSimp_leqRight" (formula "19"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (builtin "Use Operation Contract" (formula "19") (newnames "heapBefore_unsign_6,result_9,exc_7") (contract "verif.utils.MessageTools[verif.utils.MessageTools::unsign(byte)].JML normal_behavior operation contract.0"))
                                             (branch "Post (unsign)"
                                                (builtin "One Step Simplification" (formula "19"))
                                                (builtin "One Step Simplification" (formula "20"))
                                                (rule "translateJavaAddInt" (formula "19") (term "1,1,0,1"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "andLeft" (formula "20"))
                                                (rule "eqSymm" (formula "20"))
                                                (rule "polySimp_addComm0" (formula "20") (term "1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0"))
                                                (rule "times_zero_1" (formula "20") (term "1,0,0,0,0"))
                                                (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                                (rule "assignment" (formula "21") (term "1"))
                                                (builtin "One Step Simplification" (formula "21"))
                                                (rule "blockEmpty" (formula "21") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0"))
                                                (rule "mul_literals" (formula "20") (term "1,0,0"))
                                                (rule "applyEq" (formula "20") (term "0") (ifseqformula "12"))
                                                (rule "eqSymm" (formula "20"))
                                                (rule "applyEq" (formula "21") (term "0,1,0") (ifseqformula "20"))
                                                (rule "assignmentAdditionInt" (formula "21") (term "1"))
                                                (builtin "One Step Simplification" (formula "21"))
                                                (rule "translateJavaAddInt" (formula "21") (term "0,1,0"))
                                                (rule "widening_identity_cast_5" (formula "21") (term "1"))
                                                (rule "assignment" (formula "21") (term "1"))
                                                (builtin "One Step Simplification" (formula "21"))
                                                (rule "methodCallReturn" (formula "21") (term "1"))
                                                (rule "assignment" (formula "21") (term "1"))
                                                (builtin "One Step Simplification" (formula "21"))
                                                (rule "methodCallEmpty" (formula "21") (term "1"))
                                                (builtin "One Step Simplification" (formula "21"))
                                                (rule "emptyModality" (formula "21") (term "1"))
                                                (builtin "One Step Simplification" (formula "21"))
                                                (rule "notRight" (formula "21"))
                                                (rule "polySimp_homoEq" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                                                (rule "polySimp_mulAssoc" (formula "1") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_sepNegMonomial" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "close" (formula "23") (ifseqformula "1"))
                                             )
                                             (branch "Exceptional Post (unsign)"
                                                (builtin "One Step Simplification" (formula "20"))
                                                (builtin "One Step Simplification" (formula "19"))
                                                (rule "translateJavaAddInt" (formula "19") (term "1,1,0,1"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "andLeft" (formula "19"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "notLeft" (formula "19"))
                                                (rule "close" (formula "22") (ifseqformula "21"))
                                             )
                                             (branch "Pre (unsign)"
                                                (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "1")))
                                                (rule "closeTrue" (formula "19"))
                                             )
                                          )
                                          (branch "Null Reference (x_arr = null)"
                                             (builtin "One Step Simplification" (formula "20"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch "Index Out of Bounds (x_arr != null, but 3 Out of Bounds!)"
                                             (builtin "One Step Simplification" (formula "20"))
                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "21")))
                                             (rule "less_literals" (formula "1") (term "1"))
                                             (builtin "One Step Simplification" (formula "1"))
                                             (rule "blockThrow" (formula "20") (term "1"))
                                             (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "5") (term "0"))
                                             (builtin "One Step Simplification" (formula "5"))
                                             (rule "closeFalse" (formula "5"))
                                          )
                                       )
                                       (branch "Exceptional Post (unsign)"
                                          (builtin "One Step Simplification" (formula "18"))
                                          (builtin "One Step Simplification" (formula "17"))
                                          (rule "translateJavaAddInt" (formula "17") (term "1,1,0,1"))
                                          (rule "andLeft" (formula "17"))
                                          (rule "andLeft" (formula "17"))
                                          (rule "andLeft" (formula "19"))
                                          (rule "notLeft" (formula "17"))
                                          (rule "close" (formula "20") (ifseqformula "19"))
                                       )
                                       (branch "Pre (unsign)"
                                          (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "1")))
                                          (rule "closeTrue" (formula "17"))
                                       )
                                    )
                                    (branch "Null Reference (x_arr = null)"
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "Index Out of Bounds (x_arr != null, but 2 Out of Bounds!)"
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                       (rule "less_literals" (formula "1") (term "1"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "blockThrow" (formula "18") (term "1"))
                                       (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "5") (term "0"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "closeFalse" (formula "5"))
                                    )
                                 )
                                 (branch "Exceptional Post (unsign)"
                                    (builtin "One Step Simplification" (formula "15"))
                                    (builtin "One Step Simplification" (formula "16"))
                                    (rule "translateJavaAddInt" (formula "15") (term "1,1,0,1"))
                                    (rule "andLeft" (formula "15"))
                                    (rule "andLeft" (formula "15"))
                                    (rule "andLeft" (formula "17"))
                                    (rule "notLeft" (formula "15"))
                                    (rule "close" (formula "18") (ifseqformula "17"))
                                 )
                                 (branch "Pre (unsign)"
                                    (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "1")))
                                    (rule "closeTrue" (formula "15"))
                                 )
                              )
                              (branch "Null Reference (x_arr = null)"
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "Index Out of Bounds (x_arr != null, but 1 Out of Bounds!)"
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "17")))
                                 (rule "less_literals" (formula "1") (term "1"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "blockThrow" (formula "16") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "5"))
                                 (rule "qeq_literals" (formula "1") (term "0"))
                                 (builtin "One Step Simplification" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                           (branch "Exceptional Post (unsign)"
                              (builtin "One Step Simplification" (formula "13"))
                              (builtin "One Step Simplification" (formula "14"))
                              (rule "translateJavaAddInt" (formula "13") (term "1,1,0,1"))
                              (rule "andLeft" (formula "13"))
                              (rule "andLeft" (formula "13"))
                              (rule "andLeft" (formula "15"))
                              (rule "notLeft" (formula "13"))
                              (rule "close" (formula "16") (ifseqformula "15"))
                           )
                           (branch "Pre (unsign)"
                              (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "1")))
                              (rule "closeTrue" (formula "13"))
                           )
                        )
                        (branch "Null Reference (x_arr = null)"
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "Index Out of Bounds (x_arr != null, but 0 Out of Bounds!)"
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")))
                           (rule "less_literals" (formula "1") (term "1"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "blockThrow" (formula "14") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "5"))
                           (rule "qeq_literals" (formula "1") (term "0"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                     (branch "Exceptional Post (unsign)"
                        (builtin "One Step Simplification" (formula "13"))
                        (builtin "One Step Simplification" (formula "11"))
                        (rule "translateJavaAddInt" (formula "11") (term "1,1,0,1"))
                        (rule "andLeft" (formula "11"))
                        (rule "andLeft" (formula "11"))
                        (rule "andLeft" (formula "13"))
                        (rule "notLeft" (formula "11"))
                        (rule "close" (formula "14") (ifseqformula "13"))
                     )
                     (branch "Pre (unsign)"
                        (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "1")))
                        (rule "closeTrue" (formula "12"))
                     )
                  )
                  (branch "Null Reference (_b = null)"
                     (builtin "One Step Simplification" (formula "13"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "Index Out of Bounds (_b != null, but 3 Out of Bounds!)"
                     (builtin "One Step Simplification" (formula "13"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
                     (rule "less_literals" (formula "1") (term "1"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "blockThrow" (formula "13") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "5"))
                     (rule "qeq_literals" (formula "1") (term "0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
               )
               (branch "Exceptional Post (unsign)"
                  (builtin "One Step Simplification" (formula "9"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "translateJavaAddInt" (formula "9") (term "1,1,0,1"))
                  (rule "andLeft" (formula "9"))
                  (rule "andLeft" (formula "9"))
                  (rule "andLeft" (formula "11"))
                  (rule "notLeft" (formula "9"))
                  (rule "close" (formula "12") (ifseqformula "11"))
               )
               (branch "Pre (unsign)"
                  (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "1")))
                  (rule "closeTrue" (formula "10"))
               )
            )
            (branch "Null Reference (_b = null)"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")))
               (rule "closeFalse" (formula "1"))
            )
            (branch "Index Out of Bounds (_b != null, but 2 Out of Bounds!)"
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")))
               (rule "less_literals" (formula "1") (term "1"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "blockThrow" (formula "11") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "5"))
               (rule "qeq_literals" (formula "1") (term "0"))
               (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Exceptional Post (unsign)"
            (builtin "One Step Simplification" (formula "9"))
            (builtin "One Step Simplification" (formula "7"))
            (rule "translateJavaAddInt" (formula "7") (term "1,1,0,1"))
            (rule "andLeft" (formula "7"))
            (rule "andLeft" (formula "7"))
            (rule "andLeft" (formula "9"))
            (rule "notLeft" (formula "7"))
            (rule "close" (formula "10") (ifseqformula "9"))
         )
         (branch "Pre (unsign)"
            (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "1")))
            (rule "closeTrue" (formula "8"))
         )
      )
      (branch "Null Reference (_b = null)"
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "8")))
         (rule "closeFalse" (formula "1"))
      )
      (branch "Index Out of Bounds (_b != null, but 1 Out of Bounds!)"
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "8")))
         (rule "less_literals" (formula "1") (term "1"))
         (builtin "One Step Simplification" (formula "1"))
         (rule "blockThrow" (formula "9") (term "1"))
         (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "1"))
         (rule "qeq_literals" (formula "5") (term "0"))
         (builtin "One Step Simplification" (formula "5"))
         (rule "closeFalse" (formula "5"))
      )
   )
   (branch "Exceptional Post (unsign)"
      (builtin "One Step Simplification" (formula "7"))
      (builtin "One Step Simplification" (formula "5"))
      (rule "translateJavaAddInt" (formula "5") (term "1,1,0,1"))
      (rule "andLeft" (formula "5"))
      (rule "andLeft" (formula "5"))
      (rule "andLeft" (formula "7"))
      (rule "notLeft" (formula "5"))
      (rule "close" (formula "8") (ifseqformula "7"))
   )
   (branch "Pre (unsign)"
      (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "1")))
      (rule "closeTrue" (formula "6"))
   )
)
(branch "Null Reference (_b = null)"
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "6")))
   (rule "closeFalse" (formula "1"))
)
(branch "Index Out of Bounds (_b != null, but 0 Out of Bounds!)"
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "6")))
   (rule "less_literals" (formula "1") (term "1"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "blockThrow" (formula "7") (term "1"))
   (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "5"))
   (rule "qeq_literals" (formula "1") (term "0"))
   (builtin "One Step Simplification" (formula "1"))
   (rule "closeFalse" (formula "1"))
)
)

}
