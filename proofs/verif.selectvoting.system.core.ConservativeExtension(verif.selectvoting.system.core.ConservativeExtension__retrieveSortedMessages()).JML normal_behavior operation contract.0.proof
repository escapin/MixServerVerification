\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Fri Mar 18 12:38:40 CET 2016
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=80000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Fri Mar 18 12:38:40 CET 2016
name=verif.selectvoting.system.core.ConservativeExtension[verif.selectvoting.system.core.ConservativeExtension\\:\\:retrieveSortedMessages()].JML normal_behavior operation contract.0
contract=verif.selectvoting.system.core.ConservativeExtension[verif.selectvoting.system.core.ConservativeExtension\\:\\:retrieveSortedMessages()].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "mihai" ) (keyVersion "99336ad04cdaa9fea6ec698b0fe69574b8516e91"))

(autoModeTime "438")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "result,exc,heapAtPre,o,f"))
(rule "translateJavaSubInt" (formula "1") (term "1,1,0,0,0,1,0,0,0,1,1"))
(rule "translateJavaAddInt" (formula "1") (term "0,2,2,0,1,0,0,1,0,0,0,1,1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "notLeft" (formula "3"))
(rule "eqSymm" (formula "5") (term "0,1,1,0,0,0,1"))
(rule "eqSymm" (formula "5") (term "1,0,0,1,0,1"))
(rule "polySimp_elimSub" (formula "5") (term "1,1,0,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "5") (term "1,1,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_addComm0" (formula "5") (term "0,2,2,0,1,0,0,1,0,0,0,1"))
(rule "polySimp_addComm0" (formula "5") (term "1,1,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0,0,1,1,1,1,0,0,0,1"))
(rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
(rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "5") (term "0,1,0,0,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0,0,0,1,0,0,0,1"))
(rule "add_literals" (formula "5") (term "0,0,0,1,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0,0,1,1,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0"))
(rule "assignment" (formula "5") (term "1"))
(builtin "One Step Simplification" (formula "5"))
(rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "3") (term "1,1,0,0"))
(rule "polySimp_rightDist" (formula "3") (term "1,1,0,0"))
(rule "mul_literals" (formula "3") (term "0,1,1,0,0"))
(rule "polySimp_mulLiterals" (formula "3") (term "1,1,1,0,0"))
(rule "polySimp_elimOne" (formula "3") (term "1,1,1,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "5") (term "1,1,0,0,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "5") (term "1,1,0,0,0,1,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "5") (term "0,1,1,0,0,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,0,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,0,0,1,1,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "5") (term "1,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "5") (term "1,1,0,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "5") (term "0,1,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,0,0,1,0,0,0,1"))
(rule "nonNull" (formula "5") (term "1,1,1,1,1,0,0,0,1") (inst "i=i"))
(rule "sub_literals" (formula "5") (term "2,1,0,1,1,1,1,1,1,1,0,0,0,1"))
(builtin "One Step Simplification" (formula "5"))
(rule "greater_literals" (formula "5") (term "0,1,1,1,1,1,1,0,0,0,1"))
(builtin "One Step Simplification" (formula "5"))
(rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0,1,1,1,1,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0,1,1,1,1,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0,1,1,1,1,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0,1,1,1,1,1,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "5") (term "1,1,0,0,1,1,1,1,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "5") (term "1,1,0,0,1,1,1,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "5") (term "0,1,1,0,0,1,1,1,1,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,0,1,1,1,1,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,0,1,1,1,1,1,1,0,0,0,1"))
(rule "array2seqDef" (formula "5") (term "1,0,0,0,0,1") (inst "u=u"))
(rule "array2seqDef" (formula "5") (term "0,0,0,0,0,1") (inst "u=u"))
(rule "nnf_imp2or" (formula "3") (term "0"))
(rule "nnf_notAnd" (formula "3") (term "0,0"))
(rule "inEqSimp_notLeq" (formula "3") (term "1,0,0"))
(rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0"))
(rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0"))
(rule "add_literals" (formula "3") (term "0,0,0,1,0,0"))
(rule "add_zero_left" (formula "3") (term "0,0,1,0,0"))
(rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
(rule "polySimp_elimOne" (formula "3") (term "1,1,0,0"))
(rule "inEqSimp_notGeq" (formula "3") (term "0,0,0"))
(rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0"))
(rule "add_zero_right" (formula "3") (term "0,0,0,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,0"))
(rule "mul_literals" (formula "3") (term "1,0,0,0"))
(rule "nnf_imp2or" (formula "5") (term "0,0,1,0,0,0,1"))
(rule "nnf_imp2or" (formula "5") (term "0,0,1,1,1,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "5") (term "0,0,0,1,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "5") (term "0,0,0,0,1,0,0,0,1"))
(rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0,0,1,0,0,0,1"))
(rule "add_zero_right" (formula "5") (term "0,0,0,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "5") (term "1,0,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "5") (term "1,0,0,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "5") (term "0,1,0,0,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0,0,0,1,0,0,0,1"))
(rule "add_literals" (formula "5") (term "0,0,0,1,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulComm0" (formula "5") (term "1,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "5") (term "1,1,0,0,0,1,0,0,0,1"))
(rule "mul_literals" (formula "5") (term "0,1,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,0,0,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,0,0,1,0,0,0,1"))
(rule "nnf_imp2or" (formula "5") (term "0,1,1,1,1,1,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "5") (term "0,0,0,1,1,1,1,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "5") (term "0,0,0,0,1,1,1,1,0,0,0,1"))
(rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0,0,1,1,1,1,0,0,0,1"))
(rule "add_zero_right" (formula "5") (term "0,0,0,0,0,0,1,1,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,0,1,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "5") (term "1,0,0,0,0,1,1,1,1,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "5") (term "1,0,0,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0,0,0,1,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "5") (term "0,1,0,0,1,0,0,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0,0,0,1,1,1,1,0,0,0,1"))
(rule "add_literals" (formula "5") (term "0,0,0,1,0,0,0,1,1,1,1,0,0,0,1"))
(rule "add_zero_left" (formula "5") (term "0,0,1,0,0,0,1,1,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0,1,1,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0,1,1,1,1,0,0,0,1"))
(rule "nnf_notAnd" (formula "5") (term "0,0,1,1,1,1,1,1,0,0,0,1"))
(rule "inEqSimp_notGeq" (formula "5") (term "0,0,0,1,1,1,1,1,1,0,0,0,1"))
(rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0,1,1,1,1,1,1,0,0,0,1"))
(rule "add_zero_right" (formula "5") (term "0,0,0,0,0,1,1,1,1,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,1,1,1,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "5") (term "1,0,0,0,1,1,1,1,1,1,0,0,0,1"))
(rule "inEqSimp_notLeq" (formula "5") (term "1,0,0,1,1,1,1,1,1,0,0,0,1"))
(rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0,0,1,1,1,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "5") (term "0,1,0,0,1,0,0,1,1,1,1,1,1,0,0,0,1"))
(rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0,0,1,1,1,1,1,1,0,0,0,1"))
(rule "add_literals" (formula "5") (term "0,0,0,1,0,0,1,1,1,1,1,1,0,0,0,1"))
(rule "add_zero_left" (formula "5") (term "0,0,1,0,0,1,1,1,1,1,1,0,0,0,1"))
(rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0,1,1,1,1,1,1,0,0,0,1"))
(rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,1,1,1,1,1,1,0,0,0,1"))
(rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,1,1,1,1,1,1,0,0,0,1"))
(rule "commute_or_2" (formula "3") (term "0"))
(rule "commute_or" (formula "3") (term "0,0"))
(rule "methodBodyExpand" (formula "5") (term "1") (newnames "heapBefore_retrieveSortedMessages,savedHeapBefore_retrieveSortedMessages"))
(builtin "One Step Simplification" (formula "5"))
(rule "methodCallUnfoldArguments" (formula "5") (term "1"))
(rule "variableDeclarationAssign" (formula "5") (term "1"))
(rule "variableDeclaration" (formula "5") (term "1") (newnames "var"))
(rule "activeUseStaticFieldReadAccess" (formula "5") (term "1"))
(rule "assignment_read_static_attribute" (formula "5") (term "1"))
(builtin "One Step Simplification" (formula "5"))
(rule "variableDeclarationAssign" (formula "5") (term "1"))
(rule "variableDeclaration" (formula "5") (term "1") (newnames "var_1"))
(rule "assignment" (formula "5") (term "1"))
(builtin "One Step Simplification" (formula "5"))
(rule "variableDeclarationAssign" (formula "5") (term "1"))
(rule "variableDeclaration" (formula "5") (term "1") (newnames "var_2"))
(rule "eval_order_array_access6" (formula "5") (term "1") (inst "#v0=x_arr_arr"))
(rule "variableDeclarationAssign" (formula "5") (term "1"))
(rule "variableDeclaration" (formula "5") (term "1") (newnames "x_arr_arr"))
(rule "activeUseStaticFieldReadAccess" (formula "5") (term "1"))
(rule "assignment_read_static_attribute" (formula "5") (term "1"))
(builtin "One Step Simplification" (formula "5"))
(rule "assignment_read_length" (formula "5") (term "1"))
(branch "Normal Execution (x_arr_arr != null)"
   (builtin "One Step Simplification" (formula "6"))
   (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "4")))
   (rule "false_right" (formula "5"))
   (builtin "Use Operation Contract" (formula "5") (newnames "heapBefore_sort,exc_0,heapAfter_sort,anon_heap_sort") (contract "verif.selectvoting.system.core.ConservativeExtension[verif.selectvoting.system.core.ConservativeExtension::sort([[B,int,int)].JML normal_behavior operation contract.0"))
   (branch "Post (sort)"
      (builtin "One Step Simplification" (formula "7"))
      (builtin "One Step Simplification" (formula "5"))
      (rule "translateJavaSubInt" (formula "5") (term "1,1,0,0,0,1,0,1,1"))
      (rule "translateJavaAddInt" (formula "5") (term "0,2,2,0,1,0,0,1,0,1,1"))
      (rule "andLeft" (formula "5"))
      (rule "andLeft" (formula "6"))
      (rule "andLeft" (formula "7"))
      (rule "andLeft" (formula "7"))
      (rule "andLeft" (formula "8"))
      (rule "polySimp_elimSub" (formula "8") (term "1,1,0,0"))
      (rule "mul_literals" (formula "8") (term "1,1,1,0,0"))
      (rule "polySimp_addComm0" (formula "8") (term "0,2,2,0,1,0"))
      (rule "polySimp_addComm0" (formula "8") (term "1,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
      (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
      (rule "blockEmpty" (formula "11") (term "1"))
      (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
      (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
      (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
      (rule "array2seqDef" (formula "7") (term "1") (inst "u=u"))
      (rule "narrowSelectArrayType" (formula "7") (term "2,1") (ifseqformula "1") (ifseqformula "10"))
      (rule "array2seqDef" (formula "7") (term "0") (inst "u=u"))
      (rule "nnf_imp2or" (formula "9") (term "0"))
      (rule "nnf_imp2or" (formula "8") (term "0"))
      (rule "nnf_notAnd" (formula "9") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
      (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
      (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
      (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "9") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
      (rule "mul_literals" (formula "9") (term "1,0,0,0"))
      (rule "nnf_notAnd" (formula "8") (term "0,0"))
      (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
      (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
      (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
      (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
      (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
      (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
      (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
      (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
      (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
      (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
      (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
      (rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
      (rule "mul_literals" (formula "8") (term "1,0,0,0"))
      (rule "commute_or_2" (formula "9") (term "0"))
      (rule "commute_or" (formula "9") (term "0,0"))
      (rule "returnUnfold" (formula "11") (term "1") (inst "#v0=x_arr_arr"))
      (rule "variableDeclarationAssign" (formula "11") (term "1"))
      (rule "variableDeclaration" (formula "11") (term "1") (newnames "x_arr_arr_1"))
      (rule "activeUseStaticFieldReadAccess" (formula "11") (term "1"))
      (rule "assignment_read_static_attribute" (formula "11") (term "1"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "pullOutSelect" (formula "11") (term "0,1,0") (inst "selectSK=verif_selectvoting_system_core_ConservativeExtension_messages_0"))
      (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "6"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "eqSymm" (formula "1") (term "0,0"))
      (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "11"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "applyEqReverse" (formula "12") (term "0,1,0") (ifseqformula "1"))
      (rule "hideAuxiliaryEq" (formula "1"))
      (rule "methodCallReturn" (formula "11") (term "1"))
      (rule "assignment" (formula "11") (term "1"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "methodCallEmpty" (formula "11") (term "1"))
      (rule "tryEmpty" (formula "11") (term "1"))
      (rule "emptyModality" (formula "11") (term "1"))
      (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "8")) (ifInst ""  (formula "10")))
      (rule "replaceKnownSelect_taclet00_0" (formula "11") (term "0,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "11") (term "0,0,1,0"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "replaceKnownSelect_taclet00_0" (formula "11") (term "0,0,0,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "11") (term "0,0,0,1,0"))
      (rule "replaceKnownSelect_taclet00_0" (formula "11") (term "0,1,1,0,0,0,1,1,0"))
      (rule "replaceKnownSelect_taclet00_0" (formula "11") (term "1,0,0,1,0,0,1,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "11") (term "0,1,1,0,0,0,1,1,0"))
      (rule "replaceKnownAuxiliaryConstant_taclet00_1" (formula "11") (term "1,0,0,1,0,0,1,1,0"))
      (rule "eqSymm" (formula "11") (term "1,0,0,1"))
      (rule "replace_known_right" (formula "11") (term "0,0,1,0") (ifseqformula "10"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "narrowSelectArrayType" (formula "11") (term "2,1,0,0") (ifseqformula "1") (ifseqformula "10"))
      (rule "replace_known_left" (formula "11") (term "0,0") (ifseqformula "7"))
      (builtin "One Step Simplification" (formula "11"))
      (rule "andRight" (formula "11"))
      (branch "Case 1"
         (rule "andRight" (formula "11"))
         (branch "Case 1"
            (rule "allRight" (formula "11") (inst "sk=i_2"))
            (rule "orRight" (formula "11"))
            (rule "notRight" (formula "12"))
            (rule "orRight" (formula "12"))
            (rule "inEqSimp_leqRight" (formula "12"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_geqRight" (formula "13"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_2"))
            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "9"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
            (rule "hideAuxiliaryEq" (formula "3"))
            (rule "arrayLengthNotNegative" (formula "6") (term "1,1,0"))
            (rule "arrayLengthIsAShort" (formula "7") (term "1,1,0"))
            (builtin "One Step Simplification" (formula "7"))
            (rule "true_left" (formula "7"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "0") (ifseqformula "4"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "15"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "allLeft" (formula "8") (inst "t=i_2"))
            (rule "inEqSimp_commuteGeq" (formula "8") (term "1"))
            (rule "inEqSimp_contradInEq1" (formula "8") (term "1") (ifseqformula "2"))
            (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1"))
            (rule "add_literals" (formula "8") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "8") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "8") (term "0,0,1"))
            (rule "leq_literals" (formula "8") (term "0,1"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "inEqSimp_contradInEq1" (formula "8") (term "1") (ifseqformula "3"))
            (rule "qeq_literals" (formula "8") (term "0,1"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "notLeft" (formula "8"))
            (rule "allLeft" (formula "14") (inst "t=i_2"))
            (rule "replaceKnownSelect_taclet0000_2" (formula "14") (term "0,0,0,0"))
            (rule "replaceKnownAuxiliaryConstant_taclet0000_3" (formula "14") (term "0,0,0,0"))
            (rule "replace_known_left" (formula "14") (term "0,0,0") (ifseqformula "4"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
            (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "3"))
            (rule "qeq_literals" (formula "14") (term "0,0"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "14"))
            (rule "andLeft" (formula "2"))
            (rule "inEqSimp_homoInEq1" (formula "2"))
            (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
            (rule "add_literals" (formula "2") (term "1,1,0"))
            (rule "times_zero_1" (formula "2") (term "1,0"))
            (rule "add_zero_right" (formula "2") (term "0"))
            (rule "leq_literals" (formula "2"))
            (rule "closeFalse" (formula "2"))
         )
         (branch "Case 2"
            (rule "allRight" (formula "11") (inst "sk=i_1"))
            (rule "orRight" (formula "11"))
            (rule "notRight" (formula "12"))
            (rule "orRight" (formula "12"))
            (rule "inEqSimp_leqRight" (formula "12"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_geqRight" (formula "13"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_0"))
            (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "9"))
            (builtin "One Step Simplification" (formula "3"))
            (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
            (rule "hideAuxiliaryEq" (formula "3"))
            (rule "narrowSelectArrayType" (formula "3") (term "0") (ifseqformula "7") (ifseqformula "13"))
            (rule "arrayLengthNotNegative" (formula "6") (term "1,1,0"))
            (rule "arrayLengthIsAShort" (formula "7") (term "1,1,0"))
            (builtin "One Step Simplification" (formula "7"))
            (rule "true_left" (formula "7"))
            (rule "onlyCreatedObjectsAreReferenced" (formula "14") (term "0") (ifseqformula "4"))
            (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "15"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "allLeft" (formula "8") (inst "t=i_1"))
            (rule "inEqSimp_commuteGeq" (formula "8") (term "1"))
            (rule "inEqSimp_contradInEq1" (formula "8") (term "1") (ifseqformula "2"))
            (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1"))
            (rule "add_literals" (formula "8") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "8") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "8") (term "0,0,1"))
            (rule "leq_literals" (formula "8") (term "0,1"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "inEqSimp_contradInEq1" (formula "8") (term "1") (ifseqformula "3"))
            (rule "qeq_literals" (formula "8") (term "0,1"))
            (builtin "One Step Simplification" (formula "8"))
            (rule "notLeft" (formula "8"))
            (rule "allLeft" (formula "14") (inst "t=i_1"))
            (rule "inEqSimp_commuteGeq" (formula "14") (term "1"))
            (rule "inEqSimp_contradInEq1" (formula "14") (term "1") (ifseqformula "2"))
            (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1"))
            (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "14") (term "0,0,1"))
            (rule "leq_literals" (formula "14") (term "0,1"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "inEqSimp_contradInEq1" (formula "14") (term "1") (ifseqformula "3"))
            (rule "qeq_literals" (formula "14") (term "0,1"))
            (builtin "One Step Simplification" (formula "14"))
            (rule "notLeft" (formula "14"))
            (rule "pullOutSelect" (formula "15") (term "0") (inst "selectSK=arr_1"))
            (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "11"))
            (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "16") (term "0") (ifseqformula "1"))
            (rule "close" (formula "16") (ifseqformula "5"))
         )
      )
      (branch "Case 2"
         (rule "allRight" (formula "11") (inst "sk=f_0"))
         (rule "allRight" (formula "11") (inst "sk=o_0"))
         (rule "orRight" (formula "11"))
         (rule "orRight" (formula "11"))
         (rule "pullOutSelect" (formula "13") (term "0") (inst "selectSK=f_0_0"))
         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "6"))
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")) (ifInst ""  (formula "13")))
         (rule "applyEqReverse" (formula "14") (term "0") (ifseqformula "1"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "closeTrue" (formula "14"))
      )
   )
   (branch "Exceptional Post (sort)"
      (builtin "One Step Simplification" (formula "7"))
      (builtin "One Step Simplification" (formula "5"))
      (rule "translateJavaSubInt" (formula "5") (term "1,1,0,0,0,1,0,1,1"))
      (rule "translateJavaAddInt" (formula "5") (term "0,2,2,0,1,0,0,1,0,1,1"))
      (rule "andLeft" (formula "5"))
      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "6") (term "1,0") (ifseqformula "5"))
      (rule "andLeft" (formula "6"))
      (rule "andLeft" (formula "6"))
      (rule "andLeft" (formula "8"))
      (rule "notLeft" (formula "6"))
      (rule "close" (formula "9") (ifseqformula "8"))
   )
   (branch "Pre (sort)"
      (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "4")) (ifInst ""  (formula "1")) (ifInst ""  (formula "4")))
      (rule "leq_literals" (formula "5") (term "0,0,1,0"))
      (builtin "One Step Simplification" (formula "5"))
      (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "5") (term "0,1,1,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "5") (term "0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,1,1,0"))
      (rule "inEqSimp_homoInEq0" (formula "5") (term "1,0,1,1,0"))
      (rule "polySimp_pullOutFactor1" (formula "5") (term "0,1,0,1,1,0"))
      (rule "add_literals" (formula "5") (term "1,0,1,0,1,1,0"))
      (rule "times_zero_1" (formula "5") (term "0,1,0,1,1,0"))
      (rule "qeq_literals" (formula "5") (term "1,0,1,1,0"))
      (builtin "One Step Simplification" (formula "5"))
      (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "5") (term "1,1,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "5") (term "1,1,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,0,0,0"))
      (rule "mul_literals" (formula "5") (term "0,1,1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,0,0,0"))
      (rule "nonNull" (formula "5") (term "1,1,1,1,0") (inst "i=i"))
      (rule "greater_literals" (formula "5") (term "0,1,1,1,1,1,0"))
      (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "4")))
      (rule "sub_literals" (formula "5") (term "2,1,0,1,1,1,1,0"))
      (builtin "One Step Simplification" (formula "5"))
      (rule "narrowSelectArrayType" (formula "5") (term "0,0,1,0,1,1,1,1,0") (ifseqformula "1") (ifseqformula "4"))
      (rule "inEqSimp_ltToLeq" (formula "5") (term "1,0,0,1,1,1,1,0"))
      (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0,0,1,1,1,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0,1,1,1,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0,1,1,1,1,0"))
      (rule "polySimp_mulComm0" (formula "5") (term "1,1,0,0,1,1,1,1,0"))
      (rule "polySimp_rightDist" (formula "5") (term "1,1,0,0,1,1,1,1,0"))
      (rule "mul_literals" (formula "5") (term "0,1,1,0,0,1,1,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,0,1,1,1,1,0"))
      (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,0,1,1,1,1,0"))
      (rule "nnf_imp2or" (formula "5") (term "0,0,0"))
      (rule "nnf_notAnd" (formula "5") (term "0,0,0,0"))
      (rule "inEqSimp_notGeq" (formula "5") (term "0,0,0,0,0"))
      (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0,0,0"))
      (rule "add_zero_right" (formula "5") (term "0,0,0,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,0,0"))
      (rule "mul_literals" (formula "5") (term "1,0,0,0,0,0"))
      (rule "inEqSimp_notLeq" (formula "5") (term "1,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0,0,0,0"))
      (rule "mul_literals" (formula "5") (term "0,1,0,0,1,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0,0,0,0"))
      (rule "add_literals" (formula "5") (term "0,0,0,1,0,0,0,0"))
      (rule "add_zero_left" (formula "5") (term "0,0,1,0,0,0,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0,0,0"))
      (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0,0"))
      (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0,0"))
      (rule "nnf_imp2or" (formula "5") (term "0,1,1,1,1,0"))
      (rule "nnf_notAnd" (formula "5") (term "0,0,1,1,1,1,0"))
      (rule "inEqSimp_notGeq" (formula "5") (term "0,0,0,1,1,1,1,0"))
      (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0,1,1,1,1,0"))
      (rule "add_zero_right" (formula "5") (term "0,0,0,0,0,1,1,1,1,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,1,1,1,1,0"))
      (rule "mul_literals" (formula "5") (term "1,0,0,0,1,1,1,1,0"))
      (rule "inEqSimp_notLeq" (formula "5") (term "1,0,0,1,1,1,1,0"))
      (rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0,0,1,1,1,1,0"))
      (rule "mul_literals" (formula "5") (term "0,1,0,0,1,0,0,1,1,1,1,0"))
      (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0,0,1,1,1,1,0"))
      (rule "add_literals" (formula "5") (term "0,0,0,1,0,0,1,1,1,1,0"))
      (rule "add_zero_left" (formula "5") (term "0,0,1,0,0,1,1,1,1,0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0,1,1,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,1,1,1,1,0"))
      (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,1,1,1,1,0"))
      (rule "arrayLengthNotNegative" (formula "3") (term "1,1,0"))
      (rule "replace_known_left" (formula "6") (term "0,1,0") (ifseqformula "3"))
      (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "3")) (ifInst ""  (formula "3")))
      (rule "arrayLengthIsAShort" (formula "4") (term "1,1,0"))
      (builtin "One Step Simplification" (formula "4"))
      (rule "true_left" (formula "4"))
      (rule "onlyCreatedObjectsAreReferenced" (formula "5") (term "0") (ifseqformula "1"))
      (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "6"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "replace_known_left" (formula "7") (term "1") (ifseqformula "1"))
      (builtin "One Step Simplification" (formula "7"))
      (rule "allRight" (formula "7") (inst "sk=i_0"))
      (rule "orRight" (formula "7"))
      (rule "notRight" (formula "8"))
      (rule "orRight" (formula "8"))
      (rule "inEqSimp_leqRight" (formula "8"))
      (rule "mul_literals" (formula "1") (term "1,0,0"))
      (rule "add_literals" (formula "1") (term "0,0"))
      (rule "add_zero_left" (formula "1") (term "0"))
      (rule "inEqSimp_geqRight" (formula "9"))
      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "1"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
      (rule "polySimp_elimOne" (formula "1") (term "0"))
      (rule "allLeft" (formula "8") (inst "t=i_0"))
      (rule "replace_known_left" (formula "8") (term "0,0,0") (ifseqformula "3"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "inEqSimp_commuteGeq" (formula "8") (term "1"))
      (rule "inEqSimp_contradInEq1" (formula "8") (term "1") (ifseqformula "1"))
      (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1"))
      (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1"))
      (rule "add_literals" (formula "8") (term "1,1,0,0,1"))
      (rule "times_zero_1" (formula "8") (term "1,0,0,1"))
      (rule "add_zero_right" (formula "8") (term "0,0,1"))
      (rule "leq_literals" (formula "8") (term "0,1"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "inEqSimp_contradInEq1" (formula "8") (ifseqformula "2"))
      (rule "qeq_literals" (formula "8") (term "0"))
      (builtin "One Step Simplification" (formula "8"))
      (rule "closeFalse" (formula "8"))
   )
)
(branch "Null Reference (x_arr_arr = null)"
   (builtin "One Step Simplification" (formula "6"))
   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "5")))
   (rule "closeFalse" (formula "1"))
)
)

}
